;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:00:44
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 50 d0 ff ff               	lea eax, [ebx - 0x2fb0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 f0 cf ff ff               	lea eax, [ebx - 0x3010]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 8c ab 04 08               	mov eax, 0x804ab8c
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 80 e0 04 08                  	mov eax, 0x804e080
0x80483a5:   3d 80 e0 04 08                  	cmp eax, 0x804e080
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 80 e0 04 08                  	push 0x804e080
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 80 e0 04 08                  	mov eax, 0x804e080
0x80483e5:   2d 80 e0 04 08                  	sub eax, 0x804e080
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 80 e0 04 08                  	push 0x804e080
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 e0 04 08 00            	cmp byte ptr [0x804e080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 e0 04 08 01            	mov byte ptr [0x804e080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 88 2b 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 74 2b 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 70 d0 ff ff               	lea edx, [eax - 0x2f90]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 47 2b 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 29 2b 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 01 2b 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 d7 2a 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 ae 2a 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 6b 2a 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 29 2a 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 d1 29 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 80 29 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 43 29 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 0c 29 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 ed 28 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 c3 28 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 97 28 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 6c 28 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 23 28 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 db 27 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 81 27 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 2e 27 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 ef 26 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 b9 26 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 97 26 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 49 26 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 0d 26 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 84 25 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 52 25 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 22 25 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 dd 24 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 9e 24 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 6c 24 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 3d 24 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 1f 24 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 f7 23 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 d2 23 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 ad 23 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 76 23 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 41 23 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 ef 22 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 a4 22 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 6d 22 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 3c 22 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 1d 22 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 f3 21 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 cb 21 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 a2 21 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 66 21 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 2b 21 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 d8 20 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 8c 20 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 54 20 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 25 20 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 11 20 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 fa 1f 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 e5 1f 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 cf 1f 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 a8 1f 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 83 1f 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 44 1f 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 0b 1f 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 df 1e 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 b9 1e 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 84 d1 ff ff               	fld dword ptr [eax - 0x2e7c]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 84 d1 ff ff               	fld dword ptr [eax - 0x2e7c]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 88 d1 ff ff               	fld dword ptr [eax - 0x2e78]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 77 1e 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 84 d1 ff ff               	fld dword ptr [eax - 0x2e7c]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 84 d1 ff ff               	fld dword ptr [eax - 0x2e7c]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 88 d1 ff ff               	fld dword ptr [eax - 0x2e78]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 35 1e 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 8c d1 ff ff               	fld dword ptr [eax - 0x2e74]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 90 d1 ff ff               	fld dword ptr [eax - 0x2e70]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 94 d1 ff ff               	fld dword ptr [eax - 0x2e6c]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 f3 1d 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 98 d1 ff ff               	fld dword ptr [eax - 0x2e68]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 9c d1 ff ff               	fld dword ptr [eax - 0x2e64]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 a0 d1 ff ff               	fld dword ptr [eax - 0x2e60]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 7b 1d 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 a8 d1 ff ff               	fld qword ptr [eax - 0x2e58]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 a8 d1 ff ff               	fld qword ptr [eax - 0x2e58]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 b0 d1 ff ff               	fld qword ptr [eax - 0x2e50]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 1e 1d 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 a8 d1 ff ff               	fld qword ptr [eax - 0x2e58]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 a8 d1 ff ff               	fld qword ptr [eax - 0x2e58]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 b0 d1 ff ff               	fld qword ptr [eax - 0x2e50]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 c1 1c 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 b8 d1 ff ff               	fld qword ptr [eax - 0x2e48]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 c0 d1 ff ff               	fld qword ptr [eax - 0x2e40]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 c8 d1 ff ff               	fld qword ptr [eax - 0x2e38]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 64 1c 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 d0 d1 ff ff               	fld qword ptr [eax - 0x2e30]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 d8 d1 ff ff               	fld qword ptr [eax - 0x2e28]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 e0 d1 ff ff               	fld qword ptr [eax - 0x2e20]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 d4 1b 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 e8 d1 ff ff               	fld dword ptr [eax - 0x2e18]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 ec d1 ff ff               	fld dword ptr [eax - 0x2e14]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 70 1b 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 ff 1a 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 bc 1a 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 80 d0 ff ff               	lea eax, [ebx - 0x2f80]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 a4 d0 ff ff               	lea eax, [ebx - 0x2f5c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804982d
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 70                        	sub esp, 0x70
0x804962f:   e8 b6 19 00 00                  	call 0x804afea <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 49 00 00               	add edx, 0x49cc
0x804963a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804963d:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049640:   8b 4d 14                        	mov ecx, dword ptr [ebp + 0x14]
0x8049643:   8b 5d 18                        	mov ebx, dword ptr [ebp + 0x18]
0x8049646:   8b 75 20                        	mov esi, dword ptr [ebp + 0x20]
0x8049649:   8b 7d 24                        	mov edi, dword ptr [ebp + 0x24]
0x804964c:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x804964f:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049652:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049655:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049658:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x804965b:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804965e:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x8049661:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049664:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x8049667:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804966a:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x804966d:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049670:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x8049673:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049676:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x8049679:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804967c:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x804967f:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049682:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x8049685:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049688:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x804968b:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804968e:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x8049692:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x8049696:   89 c8                           	mov eax, ecx
0x8049698:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x804969b:   89 d8                           	mov eax, ebx
0x804969d:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x80496a1:   89 f0                           	mov eax, esi
0x80496a3:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496a6:   89 f8                           	mov eax, edi
0x80496a8:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x80496ac:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x80496b0:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496b3:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80496b7:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x80496ba:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x80496be:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496c1:   0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x80496c5:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496c8:   0f b6 45 9c                     	movzx eax, byte ptr [ebp - 0x64]
0x80496cc:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496cf:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x80496d3:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x80496d7:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x80496db:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x80496de:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x80496e2:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x80496e6:   0f b6 45 8c                     	movzx eax, byte ptr [ebp - 0x74]
0x80496ea:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x80496ed:   0f b7 45 88                     	movzx eax, word ptr [ebp - 0x78]
0x80496f1:   66 89 45 b8                     	mov word ptr [ebp - 0x48], ax
0x80496f5:   0f b6 45 84                     	movzx eax, byte ptr [ebp - 0x7c]
0x80496f9:   88 45 b4                        	mov byte ptr [ebp - 0x4c], al
0x80496fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80496ff:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x8049705:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x8049709:   66 89 82 28 00 00 00            	mov word ptr [edx + 0x28], ax
0x8049710:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x8049713:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x8049719:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x804971d:   88 82 30 00 00 00               	mov byte ptr [edx + 0x30], al
0x8049723:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049727:   66 89 82 32 00 00 00            	mov word ptr [edx + 0x32], ax
0x804972e:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x8049731:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x8049737:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x804973b:   88 82 38 00 00 00               	mov byte ptr [edx + 0x38], al
0x8049741:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x8049745:   66 89 82 3a 00 00 00            	mov word ptr [edx + 0x3a], ax
0x804974c:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x804974f:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x8049755:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x8049758:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x804975e:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x8049762:   88 82 44 00 00 00               	mov byte ptr [edx + 0x44], al
0x8049768:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x804976b:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x8049771:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x8049775:   88 82 4c 00 00 00               	mov byte ptr [edx + 0x4c], al
0x804977b:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x804977f:   88 82 4d 00 00 00               	mov byte ptr [edx + 0x4d], al
0x8049785:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x8049789:   88 82 4e 00 00 00               	mov byte ptr [edx + 0x4e], al
0x804978f:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049792:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x8049798:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x804979b:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x80497a1:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x80497a5:   88 82 58 00 00 00               	mov byte ptr [edx + 0x58], al
0x80497ab:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x80497af:   66 89 82 5a 00 00 00            	mov word ptr [edx + 0x5a], ax
0x80497b6:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x80497b9:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x80497bf:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x80497c2:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x80497c8:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x80497cc:   88 82 a4 04 00 00               	mov byte ptr [edx + 0x4a4], al
0x80497d2:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x80497d5:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x80497db:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x80497df:   66 89 82 68 00 00 00            	mov word ptr [edx + 0x68], ax
0x80497e6:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x80497e9:   89 82 6c 00 00 00               	mov dword ptr [edx + 0x6c], eax
0x80497ef:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x80497f3:   88 82 70 00 00 00               	mov byte ptr [edx + 0x70], al
0x80497f9:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x80497fc:   89 82 74 00 00 00               	mov dword ptr [edx + 0x74], eax
0x8049802:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x8049805:   89 82 78 00 00 00               	mov dword ptr [edx + 0x78], eax
0x804980b:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x804980f:   66 89 82 7c 00 00 00            	mov word ptr [edx + 0x7c], ax
0x8049816:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x804981a:   88 82 7e 00 00 00               	mov byte ptr [edx + 0x7e], al
0x8049820:   b8 00 00 00 00                  	mov eax, 0
0x8049825:   83 c4 70                        	add esp, 0x70
0x8049828:   5b                              	pop ebx
0x8049829:   5e                              	pop esi
0x804982a:   5f                              	pop edi
0x804982b:   5d                              	pop ebp
0x804982c:   c3                              	ret 
; function: func_1 at 0x804982d -- 0x804ab8c
0x804982d:   55                              	push ebp
0x804982e:   89 e5                           	mov ebp, esp
0x8049830:   57                              	push edi
0x8049831:   56                              	push esi
0x8049832:   53                              	push ebx
0x8049833:   81 ec 58 01 00 00               	sub esp, 0x158
0x8049839:   e8 a8 17 00 00                  	call 0x804afe6 <__x86.get_pc_thunk.ax>
0x804983e:   05 c2 47 00 00                  	add eax, 0x47c2
0x8049843:   c7 45 c4 a6 97 75 94            	mov dword ptr [ebp - 0x3c], 0x947597a6
0x804984a:   66 c7 45 c2 6e 19               	mov word ptr [ebp - 0x3e], 0x196e
0x8049850:   c7 45 bc d6 32 31 40            	mov dword ptr [ebp - 0x44], 0x403132d6
0x8049857:   c6 45 bb fd                     	mov byte ptr [ebp - 0x45], 0xfd
0x804985b:   66 c7 45 b8 f5 6b               	mov word ptr [ebp - 0x48], 0x6bf5
0x8049861:   c7 45 98 de cb a9 96            	mov dword ptr [ebp - 0x68], 0x96a9cbde
0x8049868:   c6 45 97 96                     	mov byte ptr [ebp - 0x69], 0x96
0x804986c:   66 c7 45 94 01 00               	mov word ptr [ebp - 0x6c], 1
0x8049872:   c7 45 ec 01 00 00 00            	mov dword ptr [ebp - 0x14], 1
0x8049879:   c7 45 90 c0 9c c9 04            	mov dword ptr [ebp - 0x70], 0x4c99cc0
0x8049880:   c6 45 eb f8                     	mov byte ptr [ebp - 0x15], 0xf8
0x8049884:   c7 45 b4 70 be 74 66            	mov dword ptr [ebp - 0x4c], 0x6674be70
0x804988b:   c6 45 b3 21                     	mov byte ptr [ebp - 0x4d], 0x21
0x804988f:   c6 45 b2 01                     	mov byte ptr [ebp - 0x4e], 1
0x8049893:   c6 45 b1 99                     	mov byte ptr [ebp - 0x4f], 0x99
0x8049897:   c7 45 8c 89 13 fe 99            	mov dword ptr [ebp - 0x74], 0x99fe1389
0x804989e:   c7 45 88 01 00 00 00            	mov dword ptr [ebp - 0x78], 1
0x80498a5:   c6 45 87 cb                     	mov byte ptr [ebp - 0x79], 0xcb
0x80498a9:   66 c7 45 84 fd ff               	mov word ptr [ebp - 0x7c], 0xfffd
0x80498af:   c7 45 80 3b 24 18 63            	mov dword ptr [ebp - 0x80], 0x6318243b
0x80498b6:   c7 85 7c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x84], 1
0x80498c0:   c6 85 7b ff ff ff 00            	mov byte ptr [ebp - 0x85], 0
0x80498c7:   c7 85 74 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0x8c], 0xfffffffe
0x80498d1:   c6 85 73 ff ff ff 08            	mov byte ptr [ebp - 0x8d], 8
0x80498d8:   66 c7 85 70 ff ff ff d0 79      	mov word ptr [ebp - 0x90], 0x79d0
0x80498e1:   c7 85 6c ff ff ff 28 a3 9e b5   	mov dword ptr [ebp - 0x94], 0xb59ea328
0x80498eb:   c6 85 6b ff ff ff 7c            	mov byte ptr [ebp - 0x95], 0x7c
0x80498f2:   c7 85 64 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0x9c], 9
0x80498fc:   c7 85 60 ff ff ff 08 2f 54 f2   	mov dword ptr [ebp - 0xa0], 0xf2542f08
0x8049906:   66 c7 85 5e ff ff ff fe ff      	mov word ptr [ebp - 0xa2], 0xfffe
0x804990f:   c6 85 5d ff ff ff 01            	mov byte ptr [ebp - 0xa3], 1
0x8049916:   c6 85 5c ff ff ff 05            	mov byte ptr [ebp - 0xa4], 5
0x804991d:   66 c7 85 5a ff ff ff f9 ff      	mov word ptr [ebp - 0xa6], 0xfff9
0x8049926:   c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x804992d:   66 c7 85 58 ff ff ff f8 ff      	mov word ptr [ebp - 0xa8], 0xfff8
0x8049936:   c7 85 54 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xac], 0xffffffff
0x8049940:   66 c7 45 a2 ff ff               	mov word ptr [ebp - 0x5e], 0xffff
0x8049946:   c7 45 ac 01 00 00 00            	mov dword ptr [ebp - 0x54], 1
0x804994d:   66 c7 45 aa 09 00               	mov word ptr [ebp - 0x56], 9
0x8049953:   c7 45 a4 ff ff ff ff            	mov dword ptr [ebp - 0x5c], 0xffffffff
0x804995a:   66 c7 85 f6 fe ff ff 01 00      	mov word ptr [ebp - 0x10a], 1
0x8049963:   c7 85 f0 fe ff ff 81 f3 65 83   	mov dword ptr [ebp - 0x110], 0x8365f381
0x804996d:   c7 85 3c ff ff ff 6c dc 47 fa   	mov dword ptr [ebp - 0xc4], 0xfa47dc6c
0x8049977:   c7 85 38 ff ff ff f8 ff ff ff   	mov dword ptr [ebp - 0xc8], 0xfffffff8
0x8049981:   66 c7 85 36 ff ff ff 06 00      	mov word ptr [ebp - 0xca], 6
0x804998a:   c6 85 35 ff ff ff 09            	mov byte ptr [ebp - 0xcb], 9
0x8049991:   c7 85 30 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xd0], 2
0x804999b:   c7 85 2c ff ff ff 06 85 27 93   	mov dword ptr [ebp - 0xd4], 0x93278506
0x80499a5:   66 83 bd 5a ff ff ff 00         	cmp word ptr [ebp - 0xa6], 0
0x80499ad:   0f 95 c0                        	setne al
0x80499b0:   0f b6 c0                        	movzx eax, al
0x80499b3:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x80499b6:   0f 86 56 10 00 00               	jbe 0x804aa12 <func_1+0x11e5>
0x80499bc:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x80499c0:   0f 84 4c 10 00 00               	je 0x804aa12 <func_1+0x11e5>
0x80499c6:   c7 45 d0 00 00 00 00            	mov dword ptr [ebp - 0x30], 0
0x80499cd:   c7 45 cc ff ff ff ff            	mov dword ptr [ebp - 0x34], 0xffffffff
0x80499d4:   c7 85 28 ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xd8], 0xfffffffc
0x80499de:   c6 85 27 ff ff ff 00            	mov byte ptr [ebp - 0xd9], 0
0x80499e5:   c7 45 9c 02 00 00 00            	mov dword ptr [ebp - 0x64], 2
0x80499ec:   c7 85 20 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xe0], 1
0x80499f6:   c6 85 43 ff ff ff 6d            	mov byte ptr [ebp - 0xbd], 0x6d
0x80499fd:   83 6d d0 01                     	sub dword ptr [ebp - 0x30], 1
0x8049a01:   0f b7 85 5a ff ff ff            	movzx eax, word ptr [ebp - 0xa6]
0x8049a08:   0f b7 d0                        	movzx edx, ax
0x8049a0b:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049a0e:   89 c1                           	mov ecx, eax
0x8049a10:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049a13:   3b 45 d0                        	cmp eax, dword ptr [ebp - 0x30]
0x8049a16:   0f 97 c0                        	seta al
0x8049a19:   0f b6 c0                        	movzx eax, al
0x8049a1c:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x8049a1f:   0f 92 c0                        	setb al
0x8049a22:   0f b6 c0                        	movzx eax, al
0x8049a25:   01 c8                           	add eax, ecx
0x8049a27:   0f b7 c0                        	movzx eax, ax
0x8049a2a:   0f af c2                        	imul eax, edx
0x8049a2d:   85 c0                           	test eax, eax
0x8049a2f:   74 0d                           	je 0x8049a3e <func_1+0x211>
0x8049a31:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x8049a35:   74 07                           	je 0x8049a3e <func_1+0x211>
0x8049a37:   b8 01 00 00 00                  	mov eax, 1
0x8049a3c:   eb 05                           	jmp 0x8049a43 <func_1+0x216>
0x8049a3e:   b8 00 00 00 00                  	mov eax, 0
0x8049a43:   0f bf d0                        	movsx edx, ax
0x8049a46:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049a49:   98                              	cwde 
0x8049a4a:   29 c2                           	sub edx, eax
0x8049a4c:   89 d0                           	mov eax, edx
0x8049a4e:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049a51:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049a55:   0f 84 50 02 00 00               	je 0x8049cab <func_1+0x47e>
0x8049a5b:   66 c7 85 d2 fe ff ff f6 ff      	mov word ptr [ebp - 0x12e], 0xfff6
0x8049a64:   c6 45 cb 03                     	mov byte ptr [ebp - 0x35], 3
0x8049a68:   c6 85 d1 fe ff ff ff            	mov byte ptr [ebp - 0x12f], 0xff
0x8049a6f:   c7 45 d0 00 00 00 00            	mov dword ptr [ebp - 0x30], 0
0x8049a76:   eb 43                           	jmp 0x8049abb <func_1+0x28e>
0x8049a78:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049a7b:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x8049a7f:   66 83 bd 5a ff ff ff 00         	cmp word ptr [ebp - 0xa6], 0
0x8049a87:   74 2a                           	je 0x8049ab3 <func_1+0x286>
0x8049a89:   83 7d e4 01                     	cmp dword ptr [ebp - 0x1c], 1
0x8049a8d:   0f 95 c0                        	setne al
0x8049a90:   0f b6 c0                        	movzx eax, al
0x8049a93:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x8049a96:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x8049a99:   83 c0 01                        	add eax, 1
0x8049a9c:   0f be c0                        	movsx eax, al
0x8049a9f:   8d 50 f6                        	lea edx, [eax - 0xa]
0x8049aa2:   0f b7 85 d2 fe ff ff            	movzx eax, word ptr [ebp - 0x12e]
0x8049aa9:   39 c2                           	cmp edx, eax
0x8049aab:   0f 94 c0                        	sete al
0x8049aae:   88 45 bb                        	mov byte ptr [ebp - 0x45], al
0x8049ab1:   eb 04                           	jmp 0x8049ab7 <func_1+0x28a>
0x8049ab3:   80 45 cb 01                     	add byte ptr [ebp - 0x35], 1
0x8049ab7:   83 45 d0 09                     	add dword ptr [ebp - 0x30], 9
0x8049abb:   83 7d d0 2f                     	cmp dword ptr [ebp - 0x30], 0x2f
0x8049abf:   77 b7                           	ja 0x8049a78 <func_1+0x24b>
0x8049ac1:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049ac5:   0f 84 22 01 00 00               	je 0x8049bed <func_1+0x3c0>
0x8049acb:   c6 85 cb fe ff ff 75            	mov byte ptr [ebp - 0x135], 0x75
0x8049ad2:   0f be 85 5d ff ff ff            	movsx eax, byte ptr [ebp - 0xa3]
0x8049ad9:   0f b7 95 5e ff ff ff            	movzx edx, word ptr [ebp - 0xa2]
0x8049ae0:   0f be 8d 6b ff ff ff            	movsx ecx, byte ptr [ebp - 0x95]
0x8049ae7:   0f bf 9d 70 ff ff ff            	movsx ebx, word ptr [ebp - 0x90]
0x8049aee:   0f b6 bd 7b ff ff ff            	movzx edi, byte ptr [ebp - 0x85]
0x8049af5:   0f b7 75 84                     	movzx esi, word ptr [ebp - 0x7c]
0x8049af9:   89 b5 c0 fe ff ff               	mov dword ptr [ebp - 0x140], esi
0x8049aff:   0f b6 75 87                     	movzx esi, byte ptr [ebp - 0x79]
0x8049b03:   89 b5 bc fe ff ff               	mov dword ptr [ebp - 0x144], esi
0x8049b09:   0f be 75 b1                     	movsx esi, byte ptr [ebp - 0x4f]
0x8049b0d:   89 b5 b8 fe ff ff               	mov dword ptr [ebp - 0x148], esi
0x8049b13:   0f be 75 b2                     	movsx esi, byte ptr [ebp - 0x4e]
0x8049b17:   89 b5 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], esi
0x8049b1d:   0f be 75 b3                     	movsx esi, byte ptr [ebp - 0x4d]
0x8049b21:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x8049b27:   0f b6 75 eb                     	movzx esi, byte ptr [ebp - 0x15]
0x8049b2b:   89 b5 ac fe ff ff               	mov dword ptr [ebp - 0x154], esi
0x8049b31:   0f b7 75 94                     	movzx esi, word ptr [ebp - 0x6c]
0x8049b35:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x8049b3b:   0f b6 75 97                     	movzx esi, byte ptr [ebp - 0x69]
0x8049b3f:   89 b5 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], esi
0x8049b45:   0f bf 75 b8                     	movsx esi, word ptr [ebp - 0x48]
0x8049b49:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x8049b4f:   0f be 75 bb                     	movsx esi, byte ptr [ebp - 0x45]
0x8049b53:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x8049b59:   0f b7 75 c2                     	movzx esi, word ptr [ebp - 0x3e]
0x8049b5d:   50                              	push eax
0x8049b5e:   52                              	push edx
0x8049b5f:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x8049b65:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x8049b6b:   51                              	push ecx
0x8049b6c:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049b72:   53                              	push ebx
0x8049b73:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049b79:   57                              	push edi
0x8049b7a:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049b80:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049b83:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x8049b89:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x8049b8f:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049b92:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049b95:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x8049b9b:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x8049ba1:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x8049ba7:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049baa:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x8049bb0:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049bb3:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049bb6:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x8049bbc:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x8049bc2:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x8049bc5:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049bcb:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049bd1:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049bd4:   56                              	push esi
0x8049bd5:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049bd8:   e8 49 fa ff ff                  	call 0x8049626 <set_var>
0x8049bdd:   83 c4 78                        	add esp, 0x78
0x8049be0:   66 0f be 85 cb fe ff ff         	movsx ax, byte ptr [ebp - 0x135]
0x8049be8:   e9 97 0f 00 00                  	jmp 0x804ab84 <func_1+0x1357>
0x8049bed:   c7 85 cc fe ff ff ec 28 30 46   	mov dword ptr [ebp - 0x134], 0x463028ec
0x8049bf7:   80 6d 97 01                     	sub byte ptr [ebp - 0x69], 1
0x8049bfb:   c7 45 e4 ef ff ff ff            	mov dword ptr [ebp - 0x1c], 0xffffffef
0x8049c02:   eb 0e                           	jmp 0x8049c12 <func_1+0x3e5>
0x8049c04:   c7 85 cc fe ff ff 10 e5 e2 7d   	mov dword ptr [ebp - 0x134], 0x7de2e510
0x8049c0e:   83 45 e4 01                     	add dword ptr [ebp - 0x1c], 1
0x8049c12:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049c16:   75 ec                           	jne 0x8049c04 <func_1+0x3d7>
0x8049c18:   0f b6 55 97                     	movzx edx, byte ptr [ebp - 0x69]
0x8049c1c:   0f b7 85 d2 fe ff ff            	movzx eax, word ptr [ebp - 0x12e]
0x8049c23:   89 c1                           	mov ecx, eax
0x8049c25:   b8 e1 ff ff ff                  	mov eax, 0xffffffe1
0x8049c2a:   0f b6 c0                        	movzx eax, al
0x8049c2d:   f6 f1                           	div cl
0x8049c2f:   0f b6 c4                        	movzx eax, ah
0x8049c32:   0f b6 c0                        	movzx eax, al
0x8049c35:   66 25 e6 32                     	and ax, 0x32e6
0x8049c39:   31 d0                           	xor eax, edx
0x8049c3b:   ba 36 00 00 00                  	mov edx, 0x36
0x8049c40:   0f af c2                        	imul eax, edx
0x8049c43:   f7 d8                           	neg eax
0x8049c45:   0f be d0                        	movsx edx, al
0x8049c48:   0f b7 85 5a ff ff ff            	movzx eax, word ptr [ebp - 0xa6]
0x8049c4f:   0f be c0                        	movsx eax, al
0x8049c52:   29 c2                           	sub edx, eax
0x8049c54:   0f b7 85 d2 fe ff ff            	movzx eax, word ptr [ebp - 0x12e]
0x8049c5b:   39 c2                           	cmp edx, eax
0x8049c5d:   7c 11                           	jl 0x8049c70 <func_1+0x443>
0x8049c5f:   66 83 bd 5a ff ff ff 00         	cmp word ptr [ebp - 0xa6], 0
0x8049c67:   74 07                           	je 0x8049c70 <func_1+0x443>
0x8049c69:   b8 01 00 00 00                  	mov eax, 1
0x8049c6e:   eb 05                           	jmp 0x8049c75 <func_1+0x448>
0x8049c70:   b8 00 00 00 00                  	mov eax, 0
0x8049c75:   21 85 54 ff ff ff               	and dword ptr [ebp - 0xac], eax
0x8049c7b:   0f b7 45 94                     	movzx eax, word ptr [ebp - 0x6c]
0x8049c7f:   83 c0 01                        	add eax, 1
0x8049c82:   66 89 45 94                     	mov word ptr [ebp - 0x6c], ax
0x8049c86:   c7 45 ec eb 35 bd 6a            	mov dword ptr [ebp - 0x14], 0x6abd35eb
0x8049c8d:   c7 45 ec 4d 16 0c 37            	mov dword ptr [ebp - 0x14], 0x370c164d
0x8049c94:   80 85 7b ff ff ff 01            	add byte ptr [ebp - 0x85], 1
0x8049c9b:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049c9e:   35 81 00 4e a9                  	xor eax, 0xa94e0081
0x8049ca3:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049ca6:   e9 b3 0d 00 00                  	jmp 0x804aa5e <func_1+0x1231>
0x8049cab:   c7 45 d8 ff ff ff ff            	mov dword ptr [ebp - 0x28], 0xffffffff
0x8049cb2:   c7 45 d4 06 00 00 00            	mov dword ptr [ebp - 0x2c], 6
0x8049cb9:   66 c7 85 1e ff ff ff 10 66      	mov word ptr [ebp - 0xe2], 0x6610
0x8049cc2:   66 c7 85 1c ff ff ff 00 00      	mov word ptr [ebp - 0xe4], 0
0x8049ccb:   c6 85 53 ff ff ff 01            	mov byte ptr [ebp - 0xad], 1
0x8049cd2:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x8049cd6:   0f 84 86 05 00 00               	je 0x804a262 <func_1+0xa35>
0x8049cdc:   c6 85 07 ff ff ff 99            	mov byte ptr [ebp - 0xf9], 0x99
0x8049ce3:   c7 45 f0 38 a5 17 5a            	mov dword ptr [ebp - 0x10], 0x5a17a538
0x8049cea:   c7 85 00 ff ff ff 5b c5 cf cb   	mov dword ptr [ebp - 0x100], 0xcbcfc55b
0x8049cf4:   c7 85 fc fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x104], 4
0x8049cfe:   c7 85 f8 fe ff ff 34 dd af 9c   	mov dword ptr [ebp - 0x108], 0x9cafdd34
0x8049d08:   c7 85 18 ff ff ff 79 08 17 ae   	mov dword ptr [ebp - 0xe8], 0xae170879
0x8049d12:   c7 85 14 ff ff ff 9c b6 02 82   	mov dword ptr [ebp - 0xec], 0x8202b69c
0x8049d1c:   c7 85 10 ff ff ff e2 02 62 80   	mov dword ptr [ebp - 0xf0], 0x806202e2
0x8049d26:   c6 85 0f ff ff ff 00            	mov byte ptr [ebp - 0xf1], 0
0x8049d2d:   c6 45 bb 00                     	mov byte ptr [ebp - 0x45], 0
0x8049d31:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x8049d38:   c7 85 54 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xac], 0
0x8049d42:   e9 09 05 00 00                  	jmp 0x804a250 <func_1+0xa23>
0x8049d47:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x8049d4e:   66 c7 85 0c ff ff ff 01 00      	mov word ptr [ebp - 0xf4], 1
0x8049d57:   c7 45 dc 07 00 00 00            	mov dword ptr [ebp - 0x24], 7
0x8049d5e:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x8049d62:   74 79                           	je 0x8049ddd <func_1+0x5b0>
0x8049d64:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049d67:   c0 e8 06                        	shr al, 6
0x8049d6a:   0f b6 d0                        	movzx edx, al
0x8049d6d:   0f b7 85 58 ff ff ff            	movzx eax, word ptr [ebp - 0xa8]
0x8049d74:   89 c1                           	mov ecx, eax
0x8049d76:   b8 01 00 00 00                  	mov eax, 1
0x8049d7b:   0f b6 c0                        	movzx eax, al
0x8049d7e:   f6 f1                           	div cl
0x8049d80:   0f b6 c0                        	movzx eax, al
0x8049d83:   66 39 45 c2                     	cmp word ptr [ebp - 0x3e], ax
0x8049d87:   0f 95 c0                        	setne al
0x8049d8a:   0f b6 c8                        	movzx ecx, al
0x8049d8d:   0f bf 85 58 ff ff ff            	movsx eax, word ptr [ebp - 0xa8]
0x8049d94:   39 c1                           	cmp ecx, eax
0x8049d96:   0f 9e c0                        	setle al
0x8049d99:   0f b6 c8                        	movzx ecx, al
0x8049d9c:   0f be 85 07 ff ff ff            	movsx eax, byte ptr [ebp - 0xf9]
0x8049da3:   0f af c1                        	imul eax, ecx
0x8049da6:   23 45 e0                        	and eax, dword ptr [ebp - 0x20]
0x8049da9:   3d cc b4 00 00                  	cmp eax, 0xb4cc
0x8049dae:   0f 9e c0                        	setle al
0x8049db1:   0f b6 d8                        	movzx ebx, al
0x8049db4:   0f be 85 07 ff ff ff            	movsx eax, byte ptr [ebp - 0xf9]
0x8049dbb:   89 c1                           	mov ecx, eax
0x8049dbd:   d3 e3                           	shl ebx, cl
0x8049dbf:   89 d8                           	mov eax, ebx
0x8049dc1:   89 c1                           	mov ecx, eax
0x8049dc3:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049dc6:   01 c8                           	add eax, ecx
0x8049dc8:   0f b7 c8                        	movzx ecx, ax
0x8049dcb:   89 d0                           	mov eax, edx
0x8049dcd:   99                              	cdq 
0x8049dce:   f7 f9                           	idiv ecx
0x8049dd0:   89 d0                           	mov eax, edx
0x8049dd2:   85 c0                           	test eax, eax
0x8049dd4:   74 07                           	je 0x8049ddd <func_1+0x5b0>
0x8049dd6:   b8 01 00 00 00                  	mov eax, 1
0x8049ddb:   eb 05                           	jmp 0x8049de2 <func_1+0x5b5>
0x8049ddd:   b8 00 00 00 00                  	mov eax, 0
0x8049de2:   66 39 45 c2                     	cmp word ptr [ebp - 0x3e], ax
0x8049de6:   0f 84 23 01 00 00               	je 0x8049f0f <func_1+0x6e2>
0x8049dec:   c7 85 dc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x124], 0
0x8049df6:   0f be 85 5d ff ff ff            	movsx eax, byte ptr [ebp - 0xa3]
0x8049dfd:   0f b7 95 5e ff ff ff            	movzx edx, word ptr [ebp - 0xa2]
0x8049e04:   0f be 8d 6b ff ff ff            	movsx ecx, byte ptr [ebp - 0x95]
0x8049e0b:   0f bf 9d 70 ff ff ff            	movsx ebx, word ptr [ebp - 0x90]
0x8049e12:   0f b6 bd 7b ff ff ff            	movzx edi, byte ptr [ebp - 0x85]
0x8049e19:   0f b7 75 84                     	movzx esi, word ptr [ebp - 0x7c]
0x8049e1d:   89 b5 c0 fe ff ff               	mov dword ptr [ebp - 0x140], esi
0x8049e23:   0f b6 75 87                     	movzx esi, byte ptr [ebp - 0x79]
0x8049e27:   89 b5 bc fe ff ff               	mov dword ptr [ebp - 0x144], esi
0x8049e2d:   0f be 75 b1                     	movsx esi, byte ptr [ebp - 0x4f]
0x8049e31:   89 b5 b8 fe ff ff               	mov dword ptr [ebp - 0x148], esi
0x8049e37:   0f be 75 b2                     	movsx esi, byte ptr [ebp - 0x4e]
0x8049e3b:   89 b5 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], esi
0x8049e41:   0f be 75 b3                     	movsx esi, byte ptr [ebp - 0x4d]
0x8049e45:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x8049e4b:   0f b6 75 eb                     	movzx esi, byte ptr [ebp - 0x15]
0x8049e4f:   89 b5 ac fe ff ff               	mov dword ptr [ebp - 0x154], esi
0x8049e55:   0f b7 75 94                     	movzx esi, word ptr [ebp - 0x6c]
0x8049e59:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x8049e5f:   0f b6 75 97                     	movzx esi, byte ptr [ebp - 0x69]
0x8049e63:   89 b5 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], esi
0x8049e69:   0f bf 75 b8                     	movsx esi, word ptr [ebp - 0x48]
0x8049e6d:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x8049e73:   0f be 75 bb                     	movsx esi, byte ptr [ebp - 0x45]
0x8049e77:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x8049e7d:   0f b7 75 c2                     	movzx esi, word ptr [ebp - 0x3e]
0x8049e81:   50                              	push eax
0x8049e82:   52                              	push edx
0x8049e83:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x8049e89:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x8049e8f:   51                              	push ecx
0x8049e90:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049e96:   53                              	push ebx
0x8049e97:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049e9d:   57                              	push edi
0x8049e9e:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049ea4:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049ea7:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x8049ead:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x8049eb3:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049eb6:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049eb9:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x8049ebf:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x8049ec5:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x8049ecb:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049ece:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x8049ed4:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049ed7:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049eda:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x8049ee0:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x8049ee6:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x8049ee9:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049eef:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049ef5:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049ef8:   56                              	push esi
0x8049ef9:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049efc:   e8 25 f7 ff ff                  	call 0x8049626 <set_var>
0x8049f01:   83 c4 78                        	add esp, 0x78
0x8049f04:   8b 85 dc fe ff ff               	mov eax, dword ptr [ebp - 0x124]
0x8049f0a:   e9 75 0c 00 00                  	jmp 0x804ab84 <func_1+0x1357>
0x8049f0f:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x8049f13:   74 05                           	je 0x8049f1a <func_1+0x6ed>
0x8049f15:   e9 e3 fa ff ff                  	jmp 0x80499fd <func_1+0x1d0>
0x8049f1a:   66 83 bd 5a ff ff ff fb         	cmp word ptr [ebp - 0xa6], -5
0x8049f22:   0f 94 c0                        	sete al
0x8049f25:   0f b6 c0                        	movzx eax, al
0x8049f28:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049f2b:   80 7d bb 00                     	cmp byte ptr [ebp - 0x45], 0
0x8049f2f:   0f 95 c0                        	setne al
0x8049f32:   0f b6 c0                        	movzx eax, al
0x8049f35:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049f38:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049f3b:   8b 95 28 ff ff ff               	mov edx, dword ptr [ebp - 0xd8]
0x8049f41:   89 c1                           	mov ecx, eax
0x8049f43:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049f47:   21 c8                           	and eax, ecx
0x8049f49:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x8049f4c:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x8049f50:   0f 95 c0                        	setne al
0x8049f53:   0f b6 c0                        	movzx eax, al
0x8049f56:   66 23 85 58 ff ff ff            	and ax, word ptr [ebp - 0xa8]
0x8049f5d:   98                              	cwde 
0x8049f5e:   29 c2                           	sub edx, eax
0x8049f60:   89 d0                           	mov eax, edx
0x8049f62:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049f65:   c7 45 e0 57 00 00 00            	mov dword ptr [ebp - 0x20], 0x57
0x8049f6c:   0f b7 45 94                     	movzx eax, word ptr [ebp - 0x6c]
0x8049f70:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x8049f73:   0f 9f c0                        	setg al
0x8049f76:   0f b6 c0                        	movzx eax, al
0x8049f79:   8b 55 bc                        	mov edx, dword ptr [ebp - 0x44]
0x8049f7c:   0f be fa                        	movsx edi, dl
0x8049f7f:   99                              	cdq 
0x8049f80:   f7 ff                           	idiv edi
0x8049f82:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x8049f85:   0f 9f c0                        	setg al
0x8049f88:   0f b6 c0                        	movzx eax, al
0x8049f8b:   89 c2                           	mov edx, eax
0x8049f8d:   89 d0                           	mov eax, edx
0x8049f8f:   c1 e0 03                        	shl eax, 3
0x8049f92:   01 d0                           	add eax, edx
0x8049f94:   c1 e0 03                        	shl eax, 3
0x8049f97:   0f be c0                        	movsx eax, al
0x8049f9a:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049f9d:   c7 45 d8 39 00 00 00            	mov dword ptr [ebp - 0x28], 0x39
0x8049fa4:   66 83 bd 0c ff ff ff 01         	cmp word ptr [ebp - 0xf4], 1
0x8049fac:   0f 94 c0                        	sete al
0x8049faf:   0f b6 c0                        	movzx eax, al
0x8049fb2:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049fb5:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049fb8:   0f b6 d0                        	movzx edx, al
0x8049fbb:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049fbe:   0f b6 c0                        	movzx eax, al
0x8049fc1:   0f af c2                        	imul eax, edx
0x8049fc4:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x8049fc7:   74 07                           	je 0x8049fd0 <func_1+0x7a3>
0x8049fc9:   66 83 7d c2 00                  	cmp word ptr [ebp - 0x3e], 0
0x8049fce:   74 07                           	je 0x8049fd7 <func_1+0x7aa>
0x8049fd0:   b8 01 00 00 00                  	mov eax, 1
0x8049fd5:   eb 05                           	jmp 0x8049fdc <func_1+0x7af>
0x8049fd7:   b8 00 00 00 00                  	mov eax, 0
0x8049fdc:   0f b7 d0                        	movzx edx, ax
0x8049fdf:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049fe2:   0f b7 c0                        	movzx eax, ax
0x8049fe5:   0f af c2                        	imul eax, edx
0x8049fe8:   21 45 cc                        	and dword ptr [ebp - 0x34], eax
0x8049feb:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x8049ff1:   20 45 97                        	and byte ptr [ebp - 0x69], al
0x8049ff4:   81 bd 54 ff ff ff fc 3f 00 00   	cmp dword ptr [ebp - 0xac], 0x3ffc
0x8049ffe:   0f 96 c0                        	setbe al
0x804a001:   0f b6 c0                        	movzx eax, al
0x804a004:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a007:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x804a00b:   75 06                           	jne 0x804a013 <func_1+0x7e6>
0x804a00d:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a011:   74 07                           	je 0x804a01a <func_1+0x7ed>
0x804a013:   b8 01 00 00 00                  	mov eax, 1
0x804a018:   eb 05                           	jmp 0x804a01f <func_1+0x7f2>
0x804a01a:   b8 00 00 00 00                  	mov eax, 0
0x804a01f:   89 c2                           	mov edx, eax
0x804a021:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a025:   31 d0                           	xor eax, edx
0x804a027:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x804a02a:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a02e:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804a031:   66 81 7d a2 b6 00               	cmp word ptr [ebp - 0x5e], 0xb6
0x804a037:   0f 96 c0                        	setbe al
0x804a03a:   0f b6 c0                        	movzx eax, al
0x804a03d:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a040:   0f 84 9d 00 00 00               	je 0x804a0e3 <func_1+0x8b6>
0x804a046:   66 c7 85 e6 fe ff ff 9c 00      	mov word ptr [ebp - 0x11a], 0x9c
0x804a04f:   c7 85 e0 fe ff ff ff ba 67 7e   	mov dword ptr [ebp - 0x120], 0x7e67baff
0x804a059:   66 0f be 45 bb                  	movsx ax, byte ptr [ebp - 0x45]
0x804a05e:   0f b7 c0                        	movzx eax, ax
0x804a061:   ba f8 ff 00 00                  	mov edx, 0xfff8
0x804a066:   89 c1                           	mov ecx, eax
0x804a068:   d3 fa                           	sar edx, cl
0x804a06a:   89 d0                           	mov eax, edx
0x804a06c:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a06f:   b8 01 00 00 00                  	mov eax, 1
0x804a074:   31 45 f0                        	xor dword ptr [ebp - 0x10], eax
0x804a077:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a07d:   89 c2                           	mov edx, eax
0x804a07f:   0f b7 85 e6 fe ff ff            	movzx eax, word ptr [ebp - 0x11a]
0x804a086:   09 d0                           	or eax, edx
0x804a088:   66 89 85 e6 fe ff ff            	mov word ptr [ebp - 0x11a], ax
0x804a08f:   0f bf 95 e6 fe ff ff            	movsx edx, word ptr [ebp - 0x11a]
0x804a096:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a099:   39 c2                           	cmp edx, eax
0x804a09b:   75 06                           	jne 0x804a0a3 <func_1+0x876>
0x804a09d:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x804a0a1:   74 07                           	je 0x804a0aa <func_1+0x87d>
0x804a0a3:   b8 01 00 00 00                  	mov eax, 1
0x804a0a8:   eb 05                           	jmp 0x804a0af <func_1+0x882>
0x804a0aa:   b8 00 00 00 00                  	mov eax, 0
0x804a0af:   88 85 27 ff ff ff               	mov byte ptr [ebp - 0xd9], al
0x804a0b5:   80 bd 27 ff ff ff 00            	cmp byte ptr [ebp - 0xd9], 0
0x804a0bc:   0f 94 c0                        	sete al
0x804a0bf:   0f b6 d0                        	movzx edx, al
0x804a0c2:   0f bf 85 1e ff ff ff            	movsx eax, word ptr [ebp - 0xe2]
0x804a0c9:   39 c2                           	cmp edx, eax
0x804a0cb:   0f 94 c0                        	sete al
0x804a0ce:   0f b6 c0                        	movzx eax, al
0x804a0d1:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a0d4:   c7 85 e0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x120], 0
0x804a0de:   e9 66 01 00 00                  	jmp 0x804a249 <func_1+0xa1c>
0x804a0e3:   c6 85 ef fe ff ff 02            	mov byte ptr [ebp - 0x111], 2
0x804a0ea:   c7 85 e8 fe ff ff 08 00 00 00   	mov dword ptr [ebp - 0x118], 8
0x804a0f4:   0f b6 45 87                     	movzx eax, byte ptr [ebp - 0x79]
0x804a0f8:   83 c0 01                        	add eax, 1
0x804a0fb:   88 45 87                        	mov byte ptr [ebp - 0x79], al
0x804a0fe:   c7 85 14 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xec], 0
0x804a108:   83 bd 10 ff ff ff 00            	cmp dword ptr [ebp - 0xf0], 0
0x804a10f:   75 15                           	jne 0x804a126 <func_1+0x8f9>
0x804a111:   c6 45 b1 05                     	mov byte ptr [ebp - 0x4f], 5
0x804a115:   c6 85 0f ff ff ff f4            	mov byte ptr [ebp - 0xf1], 0xf4
0x804a11c:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x804a122:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x804a126:   b8 01 00 00 00                  	mov eax, 1
0x804a12b:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a12e:   0f be 85 5d ff ff ff            	movsx eax, byte ptr [ebp - 0xa3]
0x804a135:   0f b7 95 5e ff ff ff            	movzx edx, word ptr [ebp - 0xa2]
0x804a13c:   0f be 8d 6b ff ff ff            	movsx ecx, byte ptr [ebp - 0x95]
0x804a143:   0f bf 9d 70 ff ff ff            	movsx ebx, word ptr [ebp - 0x90]
0x804a14a:   0f b6 bd 7b ff ff ff            	movzx edi, byte ptr [ebp - 0x85]
0x804a151:   0f b7 75 84                     	movzx esi, word ptr [ebp - 0x7c]
0x804a155:   89 b5 c0 fe ff ff               	mov dword ptr [ebp - 0x140], esi
0x804a15b:   0f b6 75 87                     	movzx esi, byte ptr [ebp - 0x79]
0x804a15f:   89 b5 bc fe ff ff               	mov dword ptr [ebp - 0x144], esi
0x804a165:   0f be 75 b1                     	movsx esi, byte ptr [ebp - 0x4f]
0x804a169:   89 b5 b8 fe ff ff               	mov dword ptr [ebp - 0x148], esi
0x804a16f:   0f be 75 b2                     	movsx esi, byte ptr [ebp - 0x4e]
0x804a173:   89 b5 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], esi
0x804a179:   0f be 75 b3                     	movsx esi, byte ptr [ebp - 0x4d]
0x804a17d:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x804a183:   0f b6 75 eb                     	movzx esi, byte ptr [ebp - 0x15]
0x804a187:   89 b5 ac fe ff ff               	mov dword ptr [ebp - 0x154], esi
0x804a18d:   0f b7 75 94                     	movzx esi, word ptr [ebp - 0x6c]
0x804a191:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x804a197:   0f b6 75 97                     	movzx esi, byte ptr [ebp - 0x69]
0x804a19b:   89 b5 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], esi
0x804a1a1:   0f bf 75 b8                     	movsx esi, word ptr [ebp - 0x48]
0x804a1a5:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a1ab:   0f be 75 bb                     	movsx esi, byte ptr [ebp - 0x45]
0x804a1af:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x804a1b5:   0f b7 75 c2                     	movzx esi, word ptr [ebp - 0x3e]
0x804a1b9:   50                              	push eax
0x804a1ba:   52                              	push edx
0x804a1bb:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a1c1:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a1c7:   51                              	push ecx
0x804a1c8:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a1ce:   53                              	push ebx
0x804a1cf:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a1d5:   57                              	push edi
0x804a1d6:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a1dc:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a1df:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a1e5:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a1eb:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a1ee:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a1f1:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a1f7:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a1fd:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a203:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a206:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a20c:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a20f:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a212:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a218:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a21e:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a221:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a227:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a22d:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a230:   56                              	push esi
0x804a231:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a234:   e8 ed f3 ff ff                  	call 0x8049626 <set_var>
0x804a239:   83 c4 78                        	add esp, 0x78
0x804a23c:   66 0f be 85 ef fe ff ff         	movsx ax, byte ptr [ebp - 0x111]
0x804a244:   e9 3b 09 00 00                  	jmp 0x804ab84 <func_1+0x1357>
0x804a249:   83 85 54 ff ff ff 02            	add dword ptr [ebp - 0xac], 2
0x804a250:   83 bd 54 ff ff ff 29            	cmp dword ptr [ebp - 0xac], 0x29
0x804a257:   0f 86 ea fa ff ff               	jbe 0x8049d47 <func_1+0x51a>
0x804a25d:   e9 5d 03 00 00                  	jmp 0x804a5bf <func_1+0xd92>
0x804a262:   66 c7 85 50 ff ff ff 00 00      	mov word ptr [ebp - 0xb0], 0
0x804a26b:   0f b7 45 84                     	movzx eax, word ptr [ebp - 0x7c]
0x804a26f:   83 e8 01                        	sub eax, 1
0x804a272:   66 89 45 84                     	mov word ptr [ebp - 0x7c], ax
0x804a276:   c6 45 b1 0a                     	mov byte ptr [ebp - 0x4f], 0xa
0x804a27a:   80 7d b1 ec                     	cmp byte ptr [ebp - 0x4f], 0xec
0x804a27e:   0f 8c 2e 03 00 00               	jl 0x804a5b2 <func_1+0xd85>
0x804a284:   66 c7 85 4e ff ff ff 00 00      	mov word ptr [ebp - 0xb2], 0
0x804a28d:   c7 85 48 ff ff ff 0c dc 0f d0   	mov dword ptr [ebp - 0xb8], 0xd00fdc0c
0x804a297:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x804a29b:   0f 84 c7 01 00 00               	je 0x804a468 <func_1+0xc3b>
0x804a2a1:   c7 85 08 ff ff ff 56 66 51 b8   	mov dword ptr [ebp - 0xf8], 0xb8516656
0x804a2ab:   0f b7 85 58 ff ff ff            	movzx eax, word ptr [ebp - 0xa8]
0x804a2b2:   0f bf d0                        	movsx edx, ax
0x804a2b5:   69 d2 b5 92 ff ff               	imul edx, edx, 0xffff92b5
0x804a2bb:   c1 ea 10                        	shr edx, 0x10
0x804a2be:   01 c2                           	add edx, eax
0x804a2c0:   66 c1 fa 0e                     	sar dx, 0xe
0x804a2c4:   66 c1 f8 0f                     	sar ax, 0xf
0x804a2c8:   29 d0                           	sub eax, edx
0x804a2ca:   0f bf c8                        	movsx ecx, ax
0x804a2cd:   0f b7 95 50 ff ff ff            	movzx edx, word ptr [ebp - 0xb0]
0x804a2d4:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a2d7:   0f bf d8                        	movsx ebx, ax
0x804a2da:   69 db 4f 79 00 00               	imul ebx, ebx, 0x794f
0x804a2e0:   c1 eb 10                        	shr ebx, 0x10
0x804a2e3:   66 c1 fb 0a                     	sar bx, 0xa
0x804a2e7:   66 c1 f8 0f                     	sar ax, 0xf
0x804a2eb:   29 d8                           	sub eax, ebx
0x804a2ed:   98                              	cwde 
0x804a2ee:   39 c2                           	cmp edx, eax
0x804a2f0:   0f 9e c0                        	setle al
0x804a2f3:   0f b6 c0                        	movzx eax, al
0x804a2f6:   0f be 7d b2                     	movsx edi, byte ptr [ebp - 0x4e]
0x804a2fa:   99                              	cdq 
0x804a2fb:   f7 ff                           	idiv edi
0x804a2fd:   f7 d0                           	not eax
0x804a2ff:   0f b7 d0                        	movzx edx, ax
0x804a302:   0f b7 85 1c ff ff ff            	movzx eax, word ptr [ebp - 0xe4]
0x804a309:   0f af c2                        	imul eax, edx
0x804a30c:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a30f:   80 7d 87 00                     	cmp byte ptr [ebp - 0x79], 0
0x804a313:   74 07                           	je 0x804a31c <func_1+0xaef>
0x804a315:   b8 01 00 00 00                  	mov eax, 1
0x804a31a:   eb 05                           	jmp 0x804a321 <func_1+0xaf4>
0x804a31c:   b8 00 00 00 00                  	mov eax, 0
0x804a321:   39 85 08 ff ff ff               	cmp dword ptr [ebp - 0xf8], eax
0x804a327:   0f 94 c0                        	sete al
0x804a32a:   0f b6 d0                        	movzx edx, al
0x804a32d:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a330:   0f be c0                        	movsx eax, al
0x804a333:   01 d0                           	add eax, edx
0x804a335:   39 c1                           	cmp ecx, eax
0x804a337:   7e 07                           	jle 0x804a340 <func_1+0xb13>
0x804a339:   b8 02 00 00 00                  	mov eax, 2
0x804a33e:   eb 05                           	jmp 0x804a345 <func_1+0xb18>
0x804a340:   b8 00 00 00 00                  	mov eax, 0
0x804a345:   09 45 e4                        	or dword ptr [ebp - 0x1c], eax
0x804a348:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a34c:   31 45 ec                        	xor dword ptr [ebp - 0x14], eax
0x804a34f:   0f be 85 5d ff ff ff            	movsx eax, byte ptr [ebp - 0xa3]
0x804a356:   0f b7 95 5e ff ff ff            	movzx edx, word ptr [ebp - 0xa2]
0x804a35d:   0f be 8d 6b ff ff ff            	movsx ecx, byte ptr [ebp - 0x95]
0x804a364:   0f bf 9d 70 ff ff ff            	movsx ebx, word ptr [ebp - 0x90]
0x804a36b:   0f b6 bd 7b ff ff ff            	movzx edi, byte ptr [ebp - 0x85]
0x804a372:   0f b7 75 84                     	movzx esi, word ptr [ebp - 0x7c]
0x804a376:   89 b5 c0 fe ff ff               	mov dword ptr [ebp - 0x140], esi
0x804a37c:   0f b6 75 87                     	movzx esi, byte ptr [ebp - 0x79]
0x804a380:   89 b5 bc fe ff ff               	mov dword ptr [ebp - 0x144], esi
0x804a386:   0f be 75 b1                     	movsx esi, byte ptr [ebp - 0x4f]
0x804a38a:   89 b5 b8 fe ff ff               	mov dword ptr [ebp - 0x148], esi
0x804a390:   0f be 75 b2                     	movsx esi, byte ptr [ebp - 0x4e]
0x804a394:   89 b5 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], esi
0x804a39a:   0f be 75 b3                     	movsx esi, byte ptr [ebp - 0x4d]
0x804a39e:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x804a3a4:   0f b6 75 eb                     	movzx esi, byte ptr [ebp - 0x15]
0x804a3a8:   89 b5 ac fe ff ff               	mov dword ptr [ebp - 0x154], esi
0x804a3ae:   0f b7 75 94                     	movzx esi, word ptr [ebp - 0x6c]
0x804a3b2:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x804a3b8:   0f b6 75 97                     	movzx esi, byte ptr [ebp - 0x69]
0x804a3bc:   89 b5 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], esi
0x804a3c2:   0f bf 75 b8                     	movsx esi, word ptr [ebp - 0x48]
0x804a3c6:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a3cc:   0f be 75 bb                     	movsx esi, byte ptr [ebp - 0x45]
0x804a3d0:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x804a3d6:   0f b7 75 c2                     	movzx esi, word ptr [ebp - 0x3e]
0x804a3da:   50                              	push eax
0x804a3db:   52                              	push edx
0x804a3dc:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a3e2:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a3e8:   51                              	push ecx
0x804a3e9:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a3ef:   53                              	push ebx
0x804a3f0:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a3f6:   57                              	push edi
0x804a3f7:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a3fd:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a400:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a406:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a40c:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a40f:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a412:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a418:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a41e:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a424:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a427:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a42d:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a430:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a433:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a439:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a43f:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a442:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a448:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a44e:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a451:   56                              	push esi
0x804a452:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a455:   e8 cc f1 ff ff                  	call 0x8049626 <set_var>
0x804a45a:   83 c4 78                        	add esp, 0x78
0x804a45d:   8b 85 08 ff ff ff               	mov eax, dword ptr [ebp - 0xf8]
0x804a463:   e9 1c 07 00 00                  	jmp 0x804ab84 <func_1+0x1357>
0x804a468:   c7 85 44 ff ff ff 7d 96 b5 01   	mov dword ptr [ebp - 0xbc], 0x1b5967d
0x804a472:   c7 45 8c 01 00 00 00            	mov dword ptr [ebp - 0x74], 1
0x804a479:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a47c:   0f b7 c0                        	movzx eax, ax
0x804a47f:   89 85 48 ff ff ff               	mov dword ptr [ebp - 0xb8], eax
0x804a485:   c7 45 8c f8 ff ff ff            	mov dword ptr [ebp - 0x74], 0xfffffff8
0x804a48c:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x804a492:   09 45 ec                        	or dword ptr [ebp - 0x14], eax
0x804a495:   c7 45 ec b3 29 93 93            	mov dword ptr [ebp - 0x14], 0x939329b3
0x804a49c:   0f be 85 5d ff ff ff            	movsx eax, byte ptr [ebp - 0xa3]
0x804a4a3:   0f b7 95 5e ff ff ff            	movzx edx, word ptr [ebp - 0xa2]
0x804a4aa:   0f be 8d 6b ff ff ff            	movsx ecx, byte ptr [ebp - 0x95]
0x804a4b1:   0f bf 9d 70 ff ff ff            	movsx ebx, word ptr [ebp - 0x90]
0x804a4b8:   0f b6 bd 7b ff ff ff            	movzx edi, byte ptr [ebp - 0x85]
0x804a4bf:   0f b7 75 84                     	movzx esi, word ptr [ebp - 0x7c]
0x804a4c3:   89 b5 c0 fe ff ff               	mov dword ptr [ebp - 0x140], esi
0x804a4c9:   0f b6 75 87                     	movzx esi, byte ptr [ebp - 0x79]
0x804a4cd:   89 b5 bc fe ff ff               	mov dword ptr [ebp - 0x144], esi
0x804a4d3:   0f be 75 b1                     	movsx esi, byte ptr [ebp - 0x4f]
0x804a4d7:   89 b5 b8 fe ff ff               	mov dword ptr [ebp - 0x148], esi
0x804a4dd:   0f be 75 b2                     	movsx esi, byte ptr [ebp - 0x4e]
0x804a4e1:   89 b5 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], esi
0x804a4e7:   0f be 75 b3                     	movsx esi, byte ptr [ebp - 0x4d]
0x804a4eb:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x804a4f1:   0f b6 75 eb                     	movzx esi, byte ptr [ebp - 0x15]
0x804a4f5:   89 b5 ac fe ff ff               	mov dword ptr [ebp - 0x154], esi
0x804a4fb:   0f b7 75 94                     	movzx esi, word ptr [ebp - 0x6c]
0x804a4ff:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x804a505:   0f b6 75 97                     	movzx esi, byte ptr [ebp - 0x69]
0x804a509:   89 b5 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], esi
0x804a50f:   0f bf 75 b8                     	movsx esi, word ptr [ebp - 0x48]
0x804a513:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a519:   0f be 75 bb                     	movsx esi, byte ptr [ebp - 0x45]
0x804a51d:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x804a523:   0f b7 75 c2                     	movzx esi, word ptr [ebp - 0x3e]
0x804a527:   50                              	push eax
0x804a528:   52                              	push edx
0x804a529:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a52f:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a535:   51                              	push ecx
0x804a536:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a53c:   53                              	push ebx
0x804a53d:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a543:   57                              	push edi
0x804a544:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a54a:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a54d:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a553:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a559:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a55c:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a55f:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a565:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a56b:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a571:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a574:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a57a:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a57d:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a580:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a586:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a58c:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a58f:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a595:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a59b:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a59e:   56                              	push esi
0x804a59f:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a5a2:   e8 7f f0 ff ff                  	call 0x8049626 <set_var>
0x804a5a7:   83 c4 78                        	add esp, 0x78
0x804a5aa:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a5ad:   e9 d2 05 00 00                  	jmp 0x804ab84 <func_1+0x1357>
0x804a5b2:   80 7d 97 00                     	cmp byte ptr [ebp - 0x69], 0
0x804a5b6:   0f 94 c0                        	sete al
0x804a5b9:   0f b6 c0                        	movzx eax, al
0x804a5bc:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a5bf:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a5c5:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x804a5c8:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a5cb:   89 c1                           	mov ecx, eax
0x804a5cd:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a5d0:   89 c2                           	mov edx, eax
0x804a5d2:   89 c8                           	mov eax, ecx
0x804a5d4:   0f af c2                        	imul eax, edx
0x804a5d7:   0f b6 c0                        	movzx eax, al
0x804a5da:   8d 14 c5 00 00 00 00            	lea edx, [eax*8]
0x804a5e1:   0f be 45 b3                     	movsx eax, byte ptr [ebp - 0x4d]
0x804a5e5:   39 c2                           	cmp edx, eax
0x804a5e7:   0f 95 c0                        	setne al
0x804a5ea:   0f b6 d0                        	movzx edx, al
0x804a5ed:   0f b6 45 97                     	movzx eax, byte ptr [ebp - 0x69]
0x804a5f1:   39 c2                           	cmp edx, eax
0x804a5f3:   0f 94 c0                        	sete al
0x804a5f6:   0f b6 c0                        	movzx eax, al
0x804a5f9:   21 45 d4                        	and dword ptr [ebp - 0x2c], eax
0x804a5fc:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a5ff:   98                              	cwde 
0x804a600:   8d 90 b7 c5 ff ff               	lea edx, [eax - 0x3a49]
0x804a606:   0f bf 85 58 ff ff ff            	movsx eax, word ptr [ebp - 0xa8]
0x804a60d:   39 c2                           	cmp edx, eax
0x804a60f:   66 83 7d aa 00                  	cmp word ptr [ebp - 0x56], 0
0x804a614:   74 0e                           	je 0x804a624 <func_1+0xdf7>
0x804a616:   66 83 7d c2 00                  	cmp word ptr [ebp - 0x3e], 0
0x804a61b:   74 07                           	je 0x804a624 <func_1+0xdf7>
0x804a61d:   b8 01 00 00 00                  	mov eax, 1
0x804a622:   eb 05                           	jmp 0x804a629 <func_1+0xdfc>
0x804a624:   b8 00 00 00 00                  	mov eax, 0
0x804a629:   3d c1 af 00 00                  	cmp eax, 0xafc1
0x804a62e:   0f 94 c0                        	sete al
0x804a631:   89 c2                           	mov edx, eax
0x804a633:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a636:   01 d0                           	add eax, edx
0x804a638:   88 45 97                        	mov byte ptr [ebp - 0x69], al
0x804a63b:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a63f:   0a 45 97                        	or al, byte ptr [ebp - 0x69]
0x804a642:   0f b6 c0                        	movzx eax, al
0x804a645:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804a648:   0f b6 85 43 ff ff ff            	movzx eax, byte ptr [ebp - 0xbd]
0x804a64f:   0f be d0                        	movsx edx, al
0x804a652:   0f b7 85 58 ff ff ff            	movzx eax, word ptr [ebp - 0xa8]
0x804a659:   0f be c0                        	movsx eax, al
0x804a65c:   89 c1                           	mov ecx, eax
0x804a65e:   d3 fa                           	sar edx, cl
0x804a660:   89 d0                           	mov eax, edx
0x804a662:   3d db 2c 00 00                  	cmp eax, 0x2cdb
0x804a667:   0f 8e 8f 02 00 00               	jle 0x804a8fc <func_1+0x10cf>
0x804a66d:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x804a671:   0f 84 85 02 00 00               	je 0x804a8fc <func_1+0x10cf>
0x804a677:   c7 85 d8 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x128], 1
0x804a681:   c7 85 d4 fe ff ff 4c ac 85 d7   	mov dword ptr [ebp - 0x12c], 0xd785ac4c
0x804a68b:   80 7d 97 00                     	cmp byte ptr [ebp - 0x69], 0
0x804a68f:   74 0e                           	je 0x804a69f <func_1+0xe72>
0x804a691:   66 83 7d b8 00                  	cmp word ptr [ebp - 0x48], 0
0x804a696:   74 07                           	je 0x804a69f <func_1+0xe72>
0x804a698:   b8 01 00 00 00                  	mov eax, 1
0x804a69d:   eb 05                           	jmp 0x804a6a4 <func_1+0xe77>
0x804a69f:   b8 00 00 00 00                  	mov eax, 0
0x804a6a4:   89 c2                           	mov edx, eax
0x804a6a6:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a6a9:   01 d0                           	add eax, edx
0x804a6ab:   88 45 97                        	mov byte ptr [ebp - 0x69], al
0x804a6ae:   b8 01 00 00 00                  	mov eax, 1
0x804a6b3:   2b 85 d8 fe ff ff               	sub eax, dword ptr [ebp - 0x128]
0x804a6b9:   33 45 bc                        	xor eax, dword ptr [ebp - 0x44]
0x804a6bc:   89 c1                           	mov ecx, eax
0x804a6be:   ba e1 ef b3 12                  	mov edx, 0x12b3efe1
0x804a6c3:   89 c8                           	mov eax, ecx
0x804a6c5:   f7 ea                           	imul edx
0x804a6c7:   c1 fa 1b                        	sar edx, 0x1b
0x804a6ca:   89 c8                           	mov eax, ecx
0x804a6cc:   c1 f8 1f                        	sar eax, 0x1f
0x804a6cf:   29 c2                           	sub edx, eax
0x804a6d1:   89 d0                           	mov eax, edx
0x804a6d3:   69 c0 c3 79 80 6d               	imul eax, eax, 0x6d8079c3
0x804a6d9:   29 c1                           	sub ecx, eax
0x804a6db:   89 c8                           	mov eax, ecx
0x804a6dd:   85 c0                           	test eax, eax
0x804a6df:   74 04                           	je 0x804a6e5 <func_1+0xeb8>
0x804a6e1:   83 7d 90 00                     	cmp dword ptr [ebp - 0x70], 0
0x804a6e5:   66 83 bd 58 ff ff ff 00         	cmp word ptr [ebp - 0xa8], 0
0x804a6ed:   75 09                           	jne 0x804a6f8 <func_1+0xecb>
0x804a6ef:   83 bd 28 ff ff ff 00            	cmp dword ptr [ebp - 0xd8], 0
0x804a6f6:   74 04                           	je 0x804a6fc <func_1+0xecf>
0x804a6f8:   83 7d 90 00                     	cmp dword ptr [ebp - 0x70], 0
0x804a6fc:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a702:   98                              	cwde 
0x804a703:   0f b6 7d eb                     	movzx edi, byte ptr [ebp - 0x15]
0x804a707:   99                              	cdq 
0x804a708:   f7 ff                           	idiv edi
0x804a70a:   85 c0                           	test eax, eax
0x804a70c:   74 11                           	je 0x804a71f <func_1+0xef2>
0x804a70e:   66 83 bd 1e ff ff ff 00         	cmp word ptr [ebp - 0xe2], 0
0x804a716:   74 07                           	je 0x804a71f <func_1+0xef2>
0x804a718:   b8 01 00 00 00                  	mov eax, 1
0x804a71d:   eb 05                           	jmp 0x804a724 <func_1+0xef7>
0x804a71f:   b8 00 00 00 00                  	mov eax, 0
0x804a724:   83 f8 ff                        	cmp eax, -1
0x804a727:   0f 94 c0                        	sete al
0x804a72a:   0f b6 c0                        	movzx eax, al
0x804a72d:   89 c2                           	mov edx, eax
0x804a72f:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x804a735:   0f b6 c0                        	movzx eax, al
0x804a738:   0f af c2                        	imul eax, edx
0x804a73b:   0f b7 d0                        	movzx edx, ax
0x804a73e:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x804a744:   0f b7 c0                        	movzx eax, ax
0x804a747:   89 c1                           	mov ecx, eax
0x804a749:   d3 fa                           	sar edx, cl
0x804a74b:   89 d0                           	mov eax, edx
0x804a74d:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a750:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x804a756:   98                              	cwde 
0x804a757:   f7 d8                           	neg eax
0x804a759:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a75c:   0f be 45 bb                     	movsx eax, byte ptr [ebp - 0x45]
0x804a760:   21 45 c4                        	and dword ptr [ebp - 0x3c], eax
0x804a763:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a767:   88 45 b1                        	mov byte ptr [ebp - 0x4f], al
0x804a76a:   0f be 45 b1                     	movsx eax, byte ptr [ebp - 0x4f]
0x804a76e:   0f b6 55 97                     	movzx edx, byte ptr [ebp - 0x69]
0x804a772:   c1 e2 0e                        	shl edx, 0xe
0x804a775:   0f be fa                        	movsx edi, dl
0x804a778:   99                              	cdq 
0x804a779:   f7 ff                           	idiv edi
0x804a77b:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x804a781:   b8 00 00 00 00                  	mov eax, 0
0x804a786:   09 45 ec                        	or dword ptr [ebp - 0x14], eax
0x804a789:   66 83 7d 84 00                  	cmp word ptr [ebp - 0x7c], 0
0x804a78e:   0f 94 c0                        	sete al
0x804a791:   0f b6 d0                        	movzx edx, al
0x804a794:   0f bf 4d b8                     	movsx ecx, word ptr [ebp - 0x48]
0x804a798:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a79b:   34 fd                           	xor al, 0xfd
0x804a79d:   89 c3                           	mov ebx, eax
0x804a79f:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804a7a5:   21 d8                           	and eax, ebx
0x804a7a7:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x804a7ad:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804a7b3:   98                              	cwde 
0x804a7b4:   0f af c1                        	imul eax, ecx
0x804a7b7:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804a7ba:   0f 94 c0                        	sete al
0x804a7bd:   0f b6 c0                        	movzx eax, al
0x804a7c0:   39 c2                           	cmp edx, eax
0x804a7c2:   7d 07                           	jge 0x804a7cb <func_1+0xf9e>
0x804a7c4:   b8 40 00 00 00                  	mov eax, 0x40
0x804a7c9:   eb 05                           	jmp 0x804a7d0 <func_1+0xfa3>
0x804a7cb:   b8 00 00 00 00                  	mov eax, 0
0x804a7d0:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a7d3:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a7d6:   89 85 28 ff ff ff               	mov dword ptr [ebp - 0xd8], eax
0x804a7dc:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x804a7e2:   21 45 e4                        	and dword ptr [ebp - 0x1c], eax
0x804a7e5:   90                              	nop 
0x804a7e6:   0f be 85 5d ff ff ff            	movsx eax, byte ptr [ebp - 0xa3]
0x804a7ed:   0f b7 95 5e ff ff ff            	movzx edx, word ptr [ebp - 0xa2]
0x804a7f4:   0f be 8d 6b ff ff ff            	movsx ecx, byte ptr [ebp - 0x95]
0x804a7fb:   0f bf 9d 70 ff ff ff            	movsx ebx, word ptr [ebp - 0x90]
0x804a802:   0f b6 bd 7b ff ff ff            	movzx edi, byte ptr [ebp - 0x85]
0x804a809:   0f b7 75 84                     	movzx esi, word ptr [ebp - 0x7c]
0x804a80d:   89 b5 c0 fe ff ff               	mov dword ptr [ebp - 0x140], esi
0x804a813:   0f b6 75 87                     	movzx esi, byte ptr [ebp - 0x79]
0x804a817:   89 b5 bc fe ff ff               	mov dword ptr [ebp - 0x144], esi
0x804a81d:   0f be 75 b1                     	movsx esi, byte ptr [ebp - 0x4f]
0x804a821:   89 b5 b8 fe ff ff               	mov dword ptr [ebp - 0x148], esi
0x804a827:   0f be 75 b2                     	movsx esi, byte ptr [ebp - 0x4e]
0x804a82b:   89 b5 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], esi
0x804a831:   0f be 75 b3                     	movsx esi, byte ptr [ebp - 0x4d]
0x804a835:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x804a83b:   0f b6 75 eb                     	movzx esi, byte ptr [ebp - 0x15]
0x804a83f:   89 b5 ac fe ff ff               	mov dword ptr [ebp - 0x154], esi
0x804a845:   0f b7 75 94                     	movzx esi, word ptr [ebp - 0x6c]
0x804a849:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x804a84f:   0f b6 75 97                     	movzx esi, byte ptr [ebp - 0x69]
0x804a853:   89 b5 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], esi
0x804a859:   0f bf 75 b8                     	movsx esi, word ptr [ebp - 0x48]
0x804a85d:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a863:   0f be 75 bb                     	movsx esi, byte ptr [ebp - 0x45]
0x804a867:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x804a86d:   0f b7 75 c2                     	movzx esi, word ptr [ebp - 0x3e]
0x804a871:   50                              	push eax
0x804a872:   52                              	push edx
0x804a873:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a879:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a87f:   51                              	push ecx
0x804a880:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a886:   53                              	push ebx
0x804a887:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a88d:   57                              	push edi
0x804a88e:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a894:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a897:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a89d:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a8a3:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a8a6:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a8a9:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a8af:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a8b5:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a8bb:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a8be:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a8c4:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a8c7:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a8ca:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a8d0:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a8d6:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a8d9:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a8df:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a8e5:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a8e8:   56                              	push esi
0x804a8e9:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a8ec:   e8 35 ed ff ff                  	call 0x8049626 <set_var>
0x804a8f1:   83 c4 78                        	add esp, 0x78
0x804a8f4:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a8f7:   e9 88 02 00 00                  	jmp 0x804ab84 <func_1+0x1357>
0x804a8fc:   0f be 85 5d ff ff ff            	movsx eax, byte ptr [ebp - 0xa3]
0x804a903:   0f b7 95 5e ff ff ff            	movzx edx, word ptr [ebp - 0xa2]
0x804a90a:   0f be 8d 6b ff ff ff            	movsx ecx, byte ptr [ebp - 0x95]
0x804a911:   0f bf 9d 70 ff ff ff            	movsx ebx, word ptr [ebp - 0x90]
0x804a918:   0f b6 bd 7b ff ff ff            	movzx edi, byte ptr [ebp - 0x85]
0x804a91f:   0f b7 75 84                     	movzx esi, word ptr [ebp - 0x7c]
0x804a923:   89 b5 c0 fe ff ff               	mov dword ptr [ebp - 0x140], esi
0x804a929:   0f b6 75 87                     	movzx esi, byte ptr [ebp - 0x79]
0x804a92d:   89 b5 bc fe ff ff               	mov dword ptr [ebp - 0x144], esi
0x804a933:   0f be 75 b1                     	movsx esi, byte ptr [ebp - 0x4f]
0x804a937:   89 b5 b8 fe ff ff               	mov dword ptr [ebp - 0x148], esi
0x804a93d:   0f be 75 b2                     	movsx esi, byte ptr [ebp - 0x4e]
0x804a941:   89 b5 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], esi
0x804a947:   0f be 75 b3                     	movsx esi, byte ptr [ebp - 0x4d]
0x804a94b:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x804a951:   0f b6 75 eb                     	movzx esi, byte ptr [ebp - 0x15]
0x804a955:   89 b5 ac fe ff ff               	mov dword ptr [ebp - 0x154], esi
0x804a95b:   0f b7 75 94                     	movzx esi, word ptr [ebp - 0x6c]
0x804a95f:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x804a965:   0f b6 75 97                     	movzx esi, byte ptr [ebp - 0x69]
0x804a969:   89 b5 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], esi
0x804a96f:   0f bf 75 b8                     	movsx esi, word ptr [ebp - 0x48]
0x804a973:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a979:   0f be 75 bb                     	movsx esi, byte ptr [ebp - 0x45]
0x804a97d:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x804a983:   0f b7 75 c2                     	movzx esi, word ptr [ebp - 0x3e]
0x804a987:   50                              	push eax
0x804a988:   52                              	push edx
0x804a989:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a98f:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a995:   51                              	push ecx
0x804a996:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a99c:   53                              	push ebx
0x804a99d:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a9a3:   57                              	push edi
0x804a9a4:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a9aa:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a9ad:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a9b3:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a9b9:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a9bc:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a9bf:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a9c5:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a9cb:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a9d1:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a9d4:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a9da:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a9dd:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a9e0:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a9e6:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a9ec:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a9ef:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a9f5:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a9fb:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a9fe:   56                              	push esi
0x804a9ff:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804aa02:   e8 1f ec ff ff                  	call 0x8049626 <set_var>
0x804aa07:   83 c4 78                        	add esp, 0x78
0x804aa0a:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804aa0d:   e9 72 01 00 00                  	jmp 0x804ab84 <func_1+0x1357>
0x804aa12:   c6 85 ca fe ff ff 4c            	mov byte ptr [ebp - 0x136], 0x4c
0x804aa19:   c6 45 b1 11                     	mov byte ptr [ebp - 0x4f], 0x11
0x804aa1d:   0f b6 8d ca fe ff ff            	movzx ecx, byte ptr [ebp - 0x136]
0x804aa24:   b8 c3 00 00 00                  	mov eax, 0xc3
0x804aa29:   99                              	cdq 
0x804aa2a:   f7 f9                           	idiv ecx
0x804aa2c:   89 d0                           	mov eax, edx
0x804aa2e:   85 c0                           	test eax, eax
0x804aa30:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804aa33:   89 c2                           	mov edx, eax
0x804aa35:   0f b6 85 ca fe ff ff            	movzx eax, byte ptr [ebp - 0x136]
0x804aa3c:   21 d0                           	and eax, edx
0x804aa3e:   0f be d0                        	movsx edx, al
0x804aa41:   0f b6 85 ca fe ff ff            	movzx eax, byte ptr [ebp - 0x136]
0x804aa48:   0f be c0                        	movsx eax, al
0x804aa4b:   89 c1                           	mov ecx, eax
0x804aa4d:   d3 fa                           	sar edx, cl
0x804aa4f:   89 d0                           	mov eax, edx
0x804aa51:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x804aa57:   81 75 8c 39 2c ec 79            	xor dword ptr [ebp - 0x74], 0x79ec2c39
0x804aa5e:   c7 45 ec b6 3a 29 f8            	mov dword ptr [ebp - 0x14], 0xf8293ab6
0x804aa65:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804aa68:   09 85 74 ff ff ff               	or dword ptr [ebp - 0x8c], eax
0x804aa6e:   0f be 85 5d ff ff ff            	movsx eax, byte ptr [ebp - 0xa3]
0x804aa75:   0f b7 95 5e ff ff ff            	movzx edx, word ptr [ebp - 0xa2]
0x804aa7c:   0f be 8d 6b ff ff ff            	movsx ecx, byte ptr [ebp - 0x95]
0x804aa83:   0f bf 9d 70 ff ff ff            	movsx ebx, word ptr [ebp - 0x90]
0x804aa8a:   0f b6 bd 7b ff ff ff            	movzx edi, byte ptr [ebp - 0x85]
0x804aa91:   0f b7 75 84                     	movzx esi, word ptr [ebp - 0x7c]
0x804aa95:   89 b5 c0 fe ff ff               	mov dword ptr [ebp - 0x140], esi
0x804aa9b:   0f b6 75 87                     	movzx esi, byte ptr [ebp - 0x79]
0x804aa9f:   89 b5 bc fe ff ff               	mov dword ptr [ebp - 0x144], esi
0x804aaa5:   0f be 75 b1                     	movsx esi, byte ptr [ebp - 0x4f]
0x804aaa9:   89 b5 b8 fe ff ff               	mov dword ptr [ebp - 0x148], esi
0x804aaaf:   0f be 75 b2                     	movsx esi, byte ptr [ebp - 0x4e]
0x804aab3:   89 b5 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], esi
0x804aab9:   0f be 75 b3                     	movsx esi, byte ptr [ebp - 0x4d]
0x804aabd:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x804aac3:   0f b6 75 eb                     	movzx esi, byte ptr [ebp - 0x15]
0x804aac7:   89 b5 ac fe ff ff               	mov dword ptr [ebp - 0x154], esi
0x804aacd:   0f b7 75 94                     	movzx esi, word ptr [ebp - 0x6c]
0x804aad1:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x804aad7:   0f b6 75 97                     	movzx esi, byte ptr [ebp - 0x69]
0x804aadb:   89 b5 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], esi
0x804aae1:   0f bf 75 b8                     	movsx esi, word ptr [ebp - 0x48]
0x804aae5:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804aaeb:   0f be 75 bb                     	movsx esi, byte ptr [ebp - 0x45]
0x804aaef:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x804aaf5:   0f b7 75 c2                     	movzx esi, word ptr [ebp - 0x3e]
0x804aaf9:   50                              	push eax
0x804aafa:   52                              	push edx
0x804aafb:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804ab01:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804ab07:   51                              	push ecx
0x804ab08:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804ab0e:   53                              	push ebx
0x804ab0f:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804ab15:   57                              	push edi
0x804ab16:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804ab1c:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804ab1f:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804ab25:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804ab2b:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804ab2e:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804ab31:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804ab37:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804ab3d:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804ab43:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804ab46:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804ab4c:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804ab4f:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804ab52:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804ab58:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804ab5e:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804ab61:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804ab67:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804ab6d:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804ab70:   56                              	push esi
0x804ab71:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804ab74:   e8 ad ea ff ff                  	call 0x8049626 <set_var>
0x804ab79:   83 c4 78                        	add esp, 0x78
0x804ab7c:   66 0f be 85 73 ff ff ff         	movsx ax, byte ptr [ebp - 0x8d]
0x804ab84:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804ab87:   5b                              	pop ebx
0x804ab88:   5e                              	pop esi
0x804ab89:   5f                              	pop edi
0x804ab8a:   5d                              	pop ebp
0x804ab8b:   c3                              	ret 
; function: main at 0x804ab8c -- 0x804afe6
0x804ab8c:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804ab90:   83 e4 f0                        	and esp, 0xfffffff0
0x804ab93:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804ab96:   55                              	push ebp
0x804ab97:   89 e5                           	mov ebp, esp
0x804ab99:   53                              	push ebx
0x804ab9a:   51                              	push ecx
0x804ab9b:   83 ec 10                        	sub esp, 0x10
0x804ab9e:   e8 ed d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aba3:   81 c3 5d 34 00 00               	add ebx, 0x345d
0x804aba9:   89 c8                           	mov eax, ecx
0x804abab:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804abb2:   83 38 02                        	cmp dword ptr [eax], 2
0x804abb5:   75 26                           	jne 0x804abdd <main+0x51>
0x804abb7:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804abba:   83 c0 04                        	add eax, 4
0x804abbd:   8b 00                           	mov eax, dword ptr [eax]
0x804abbf:   83 ec 08                        	sub esp, 8
0x804abc2:   8d 93 ca d0 ff ff               	lea edx, [ebx - 0x2f36]
0x804abc8:   52                              	push edx
0x804abc9:   50                              	push eax
0x804abca:   e8 31 d7 ff ff                  	call 0x8048300 <strcmp>
0x804abcf:   83 c4 10                        	add esp, 0x10
0x804abd2:   85 c0                           	test eax, eax
0x804abd4:   75 07                           	jne 0x804abdd <main+0x51>
0x804abd6:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804abdd:   e8 74 d8 ff ff                  	call 0x8048456 <platform_main_begin>
0x804abe2:   e8 84 e8 ff ff                  	call 0x804946b <crc32_gentab>
0x804abe7:   e8 41 ec ff ff                  	call 0x804982d <func_1>
0x804abec:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804abf2:   83 ec 04                        	sub esp, 4
0x804abf5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abf8:   8d 93 cc d0 ff ff               	lea edx, [ebx - 0x2f34]
0x804abfe:   52                              	push edx
0x804abff:   50                              	push eax
0x804ac00:   e8 72 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac05:   83 c4 10                        	add esp, 0x10
0x804ac08:   0f b7 83 28 00 00 00            	movzx eax, word ptr [ebx + 0x28]
0x804ac0f:   0f b7 c0                        	movzx eax, ax
0x804ac12:   83 ec 04                        	sub esp, 4
0x804ac15:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac18:   8d 93 d1 d0 ff ff               	lea edx, [ebx - 0x2f2f]
0x804ac1e:   52                              	push edx
0x804ac1f:   50                              	push eax
0x804ac20:   e8 52 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac25:   83 c4 10                        	add esp, 0x10
0x804ac28:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804ac2e:   83 ec 04                        	sub esp, 4
0x804ac31:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac34:   8d 93 d6 d0 ff ff               	lea edx, [ebx - 0x2f2a]
0x804ac3a:   52                              	push edx
0x804ac3b:   50                              	push eax
0x804ac3c:   e8 36 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac41:   83 c4 10                        	add esp, 0x10
0x804ac44:   0f b6 83 30 00 00 00            	movzx eax, byte ptr [ebx + 0x30]
0x804ac4b:   0f be c0                        	movsx eax, al
0x804ac4e:   83 ec 04                        	sub esp, 4
0x804ac51:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac54:   8d 93 db d0 ff ff               	lea edx, [ebx - 0x2f25]
0x804ac5a:   52                              	push edx
0x804ac5b:   50                              	push eax
0x804ac5c:   e8 16 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac61:   83 c4 10                        	add esp, 0x10
0x804ac64:   0f b7 83 32 00 00 00            	movzx eax, word ptr [ebx + 0x32]
0x804ac6b:   98                              	cwde 
0x804ac6c:   83 ec 04                        	sub esp, 4
0x804ac6f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac72:   8d 93 e0 d0 ff ff               	lea edx, [ebx - 0x2f20]
0x804ac78:   52                              	push edx
0x804ac79:   50                              	push eax
0x804ac7a:   e8 f8 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac7f:   83 c4 10                        	add esp, 0x10
0x804ac82:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804ac88:   89 c2                           	mov edx, eax
0x804ac8a:   83 ec 04                        	sub esp, 4
0x804ac8d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac90:   8d 83 e5 d0 ff ff               	lea eax, [ebx - 0x2f1b]
0x804ac96:   50                              	push eax
0x804ac97:   52                              	push edx
0x804ac98:   e8 da e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac9d:   83 c4 10                        	add esp, 0x10
0x804aca0:   0f b6 83 38 00 00 00            	movzx eax, byte ptr [ebx + 0x38]
0x804aca7:   0f b6 c0                        	movzx eax, al
0x804acaa:   83 ec 04                        	sub esp, 4
0x804acad:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acb0:   8d 93 ea d0 ff ff               	lea edx, [ebx - 0x2f16]
0x804acb6:   52                              	push edx
0x804acb7:   50                              	push eax
0x804acb8:   e8 ba e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acbd:   83 c4 10                        	add esp, 0x10
0x804acc0:   0f b7 83 3a 00 00 00            	movzx eax, word ptr [ebx + 0x3a]
0x804acc7:   0f b7 c0                        	movzx eax, ax
0x804acca:   83 ec 04                        	sub esp, 4
0x804accd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acd0:   8d 93 ef d0 ff ff               	lea edx, [ebx - 0x2f11]
0x804acd6:   52                              	push edx
0x804acd7:   50                              	push eax
0x804acd8:   e8 9a e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acdd:   83 c4 10                        	add esp, 0x10
0x804ace0:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804ace6:   89 c2                           	mov edx, eax
0x804ace8:   83 ec 04                        	sub esp, 4
0x804aceb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acee:   8d 83 f4 d0 ff ff               	lea eax, [ebx - 0x2f0c]
0x804acf4:   50                              	push eax
0x804acf5:   52                              	push edx
0x804acf6:   e8 7c e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acfb:   83 c4 10                        	add esp, 0x10
0x804acfe:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804ad04:   89 c2                           	mov edx, eax
0x804ad06:   83 ec 04                        	sub esp, 4
0x804ad09:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad0c:   8d 83 f9 d0 ff ff               	lea eax, [ebx - 0x2f07]
0x804ad12:   50                              	push eax
0x804ad13:   52                              	push edx
0x804ad14:   e8 5e e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad19:   83 c4 10                        	add esp, 0x10
0x804ad1c:   0f b6 83 44 00 00 00            	movzx eax, byte ptr [ebx + 0x44]
0x804ad23:   0f b6 c0                        	movzx eax, al
0x804ad26:   83 ec 04                        	sub esp, 4
0x804ad29:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad2c:   8d 93 fe d0 ff ff               	lea edx, [ebx - 0x2f02]
0x804ad32:   52                              	push edx
0x804ad33:   50                              	push eax
0x804ad34:   e8 3e e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad39:   83 c4 10                        	add esp, 0x10
0x804ad3c:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804ad42:   89 c2                           	mov edx, eax
0x804ad44:   83 ec 04                        	sub esp, 4
0x804ad47:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad4a:   8d 83 04 d1 ff ff               	lea eax, [ebx - 0x2efc]
0x804ad50:   50                              	push eax
0x804ad51:   52                              	push edx
0x804ad52:   e8 20 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad57:   83 c4 10                        	add esp, 0x10
0x804ad5a:   0f b6 83 4c 00 00 00            	movzx eax, byte ptr [ebx + 0x4c]
0x804ad61:   0f be c0                        	movsx eax, al
0x804ad64:   83 ec 04                        	sub esp, 4
0x804ad67:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad6a:   8d 93 0a d1 ff ff               	lea edx, [ebx - 0x2ef6]
0x804ad70:   52                              	push edx
0x804ad71:   50                              	push eax
0x804ad72:   e8 00 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad77:   83 c4 10                        	add esp, 0x10
0x804ad7a:   0f b6 83 4d 00 00 00            	movzx eax, byte ptr [ebx + 0x4d]
0x804ad81:   0f be c0                        	movsx eax, al
0x804ad84:   83 ec 04                        	sub esp, 4
0x804ad87:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad8a:   8d 93 10 d1 ff ff               	lea edx, [ebx - 0x2ef0]
0x804ad90:   52                              	push edx
0x804ad91:   50                              	push eax
0x804ad92:   e8 e0 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad97:   83 c4 10                        	add esp, 0x10
0x804ad9a:   0f b6 83 4e 00 00 00            	movzx eax, byte ptr [ebx + 0x4e]
0x804ada1:   0f be c0                        	movsx eax, al
0x804ada4:   83 ec 04                        	sub esp, 4
0x804ada7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adaa:   8d 93 16 d1 ff ff               	lea edx, [ebx - 0x2eea]
0x804adb0:   52                              	push edx
0x804adb1:   50                              	push eax
0x804adb2:   e8 c0 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adb7:   83 c4 10                        	add esp, 0x10
0x804adba:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804adc0:   89 c2                           	mov edx, eax
0x804adc2:   83 ec 04                        	sub esp, 4
0x804adc5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adc8:   8d 83 1c d1 ff ff               	lea eax, [ebx - 0x2ee4]
0x804adce:   50                              	push eax
0x804adcf:   52                              	push edx
0x804add0:   e8 a2 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804add5:   83 c4 10                        	add esp, 0x10
0x804add8:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804adde:   89 c2                           	mov edx, eax
0x804ade0:   83 ec 04                        	sub esp, 4
0x804ade3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ade6:   8d 83 22 d1 ff ff               	lea eax, [ebx - 0x2ede]
0x804adec:   50                              	push eax
0x804aded:   52                              	push edx
0x804adee:   e8 84 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adf3:   83 c4 10                        	add esp, 0x10
0x804adf6:   0f b6 83 58 00 00 00            	movzx eax, byte ptr [ebx + 0x58]
0x804adfd:   0f b6 c0                        	movzx eax, al
0x804ae00:   83 ec 04                        	sub esp, 4
0x804ae03:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae06:   8d 93 28 d1 ff ff               	lea edx, [ebx - 0x2ed8]
0x804ae0c:   52                              	push edx
0x804ae0d:   50                              	push eax
0x804ae0e:   e8 64 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae13:   83 c4 10                        	add esp, 0x10
0x804ae16:   0f b7 83 5a 00 00 00            	movzx eax, word ptr [ebx + 0x5a]
0x804ae1d:   0f b7 c0                        	movzx eax, ax
0x804ae20:   83 ec 04                        	sub esp, 4
0x804ae23:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae26:   8d 93 2e d1 ff ff               	lea edx, [ebx - 0x2ed2]
0x804ae2c:   52                              	push edx
0x804ae2d:   50                              	push eax
0x804ae2e:   e8 44 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae33:   83 c4 10                        	add esp, 0x10
0x804ae36:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804ae3c:   89 c2                           	mov edx, eax
0x804ae3e:   83 ec 04                        	sub esp, 4
0x804ae41:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae44:   8d 83 34 d1 ff ff               	lea eax, [ebx - 0x2ecc]
0x804ae4a:   50                              	push eax
0x804ae4b:   52                              	push edx
0x804ae4c:   e8 26 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae51:   83 c4 10                        	add esp, 0x10
0x804ae54:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804ae5a:   89 c2                           	mov edx, eax
0x804ae5c:   83 ec 04                        	sub esp, 4
0x804ae5f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae62:   8d 83 3a d1 ff ff               	lea eax, [ebx - 0x2ec6]
0x804ae68:   50                              	push eax
0x804ae69:   52                              	push edx
0x804ae6a:   e8 08 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae6f:   83 c4 10                        	add esp, 0x10
0x804ae72:   0f b6 83 a4 04 00 00            	movzx eax, byte ptr [ebx + 0x4a4]
0x804ae79:   0f b6 c0                        	movzx eax, al
0x804ae7c:   83 ec 04                        	sub esp, 4
0x804ae7f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae82:   8d 93 40 d1 ff ff               	lea edx, [ebx - 0x2ec0]
0x804ae88:   52                              	push edx
0x804ae89:   50                              	push eax
0x804ae8a:   e8 e8 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae8f:   83 c4 10                        	add esp, 0x10
0x804ae92:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804ae98:   89 c2                           	mov edx, eax
0x804ae9a:   83 ec 04                        	sub esp, 4
0x804ae9d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aea0:   8d 83 46 d1 ff ff               	lea eax, [ebx - 0x2eba]
0x804aea6:   50                              	push eax
0x804aea7:   52                              	push edx
0x804aea8:   e8 ca e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aead:   83 c4 10                        	add esp, 0x10
0x804aeb0:   b8 08 00 00 00                  	mov eax, 8
0x804aeb5:   0f be c0                        	movsx eax, al
0x804aeb8:   83 ec 04                        	sub esp, 4
0x804aebb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aebe:   8d 93 4c d1 ff ff               	lea edx, [ebx - 0x2eb4]
0x804aec4:   52                              	push edx
0x804aec5:   50                              	push eax
0x804aec6:   e8 ac e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aecb:   83 c4 10                        	add esp, 0x10
0x804aece:   0f b7 83 68 00 00 00            	movzx eax, word ptr [ebx + 0x68]
0x804aed5:   98                              	cwde 
0x804aed6:   83 ec 04                        	sub esp, 4
0x804aed9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aedc:   8d 93 52 d1 ff ff               	lea edx, [ebx - 0x2eae]
0x804aee2:   52                              	push edx
0x804aee3:   50                              	push eax
0x804aee4:   e8 8e e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aee9:   83 c4 10                        	add esp, 0x10
0x804aeec:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804aef2:   83 ec 04                        	sub esp, 4
0x804aef5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aef8:   8d 93 58 d1 ff ff               	lea edx, [ebx - 0x2ea8]
0x804aefe:   52                              	push edx
0x804aeff:   50                              	push eax
0x804af00:   e8 72 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af05:   83 c4 10                        	add esp, 0x10
0x804af08:   0f b6 83 70 00 00 00            	movzx eax, byte ptr [ebx + 0x70]
0x804af0f:   0f be c0                        	movsx eax, al
0x804af12:   83 ec 04                        	sub esp, 4
0x804af15:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af18:   8d 93 5e d1 ff ff               	lea edx, [ebx - 0x2ea2]
0x804af1e:   52                              	push edx
0x804af1f:   50                              	push eax
0x804af20:   e8 52 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af25:   83 c4 10                        	add esp, 0x10
0x804af28:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804af2e:   89 c2                           	mov edx, eax
0x804af30:   83 ec 04                        	sub esp, 4
0x804af33:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af36:   8d 83 64 d1 ff ff               	lea eax, [ebx - 0x2e9c]
0x804af3c:   50                              	push eax
0x804af3d:   52                              	push edx
0x804af3e:   e8 34 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af43:   83 c4 10                        	add esp, 0x10
0x804af46:   8b 83 78 00 00 00               	mov eax, dword ptr [ebx + 0x78]
0x804af4c:   83 ec 04                        	sub esp, 4
0x804af4f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af52:   8d 93 6a d1 ff ff               	lea edx, [ebx - 0x2e96]
0x804af58:   52                              	push edx
0x804af59:   50                              	push eax
0x804af5a:   e8 18 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af5f:   83 c4 10                        	add esp, 0x10
0x804af62:   0f b7 83 7c 00 00 00            	movzx eax, word ptr [ebx + 0x7c]
0x804af69:   0f b7 c0                        	movzx eax, ax
0x804af6c:   83 ec 04                        	sub esp, 4
0x804af6f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af72:   8d 93 70 d1 ff ff               	lea edx, [ebx - 0x2e90]
0x804af78:   52                              	push edx
0x804af79:   50                              	push eax
0x804af7a:   e8 f8 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af7f:   83 c4 10                        	add esp, 0x10
0x804af82:   0f b6 83 7e 00 00 00            	movzx eax, byte ptr [ebx + 0x7e]
0x804af89:   0f be c0                        	movsx eax, al
0x804af8c:   83 ec 04                        	sub esp, 4
0x804af8f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af92:   8d 93 76 d1 ff ff               	lea edx, [ebx - 0x2e8a]
0x804af98:   52                              	push edx
0x804af99:   50                              	push eax
0x804af9a:   e8 d8 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af9f:   83 c4 10                        	add esp, 0x10
0x804afa2:   b8 05 00 00 00                  	mov eax, 5
0x804afa7:   0f b6 c0                        	movzx eax, al
0x804afaa:   83 ec 04                        	sub esp, 4
0x804afad:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afb0:   8d 93 7c d1 ff ff               	lea edx, [ebx - 0x2e84]
0x804afb6:   52                              	push edx
0x804afb7:   50                              	push eax
0x804afb8:   e8 ba e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afbd:   83 c4 10                        	add esp, 0x10
0x804afc0:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804afc6:   f7 d0                           	not eax
0x804afc8:   83 ec 08                        	sub esp, 8
0x804afcb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afce:   50                              	push eax
0x804afcf:   e8 92 d4 ff ff                  	call 0x8048466 <platform_main_end>
0x804afd4:   83 c4 10                        	add esp, 0x10
0x804afd7:   b8 00 00 00 00                  	mov eax, 0
0x804afdc:   8d 65 f8                        	lea esp, [ebp - 8]
0x804afdf:   59                              	pop ecx
0x804afe0:   5b                              	pop ebx
0x804afe1:   5d                              	pop ebp
0x804afe2:   8d 61 fc                        	lea esp, [ecx - 4]
0x804afe5:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804afe6 -- 0x804afea
0x804afe6:   8b 04 24                        	mov eax, dword ptr [esp]
0x804afe9:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804afea -- 0x804afee
0x804afea:   8b 14 24                        	mov edx, dword ptr [esp]
0x804afed:   c3                              	ret 
; data inside code section at 0x804afee -- 0x804aff0
0x804afee:   66 90                                              |f.              |
; function: __libc_csu_init at 0x804aff0 -- 0x804b04d
0x804aff0:   55                              	push ebp
0x804aff1:   57                              	push edi
0x804aff2:   56                              	push esi
0x804aff3:   53                              	push ebx
0x804aff4:   e8 97 d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aff9:   81 c3 07 30 00 00               	add ebx, 0x3007
0x804afff:   83 ec 0c                        	sub esp, 0xc
0x804b002:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b006:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b00c:   e8 bb d2 ff ff                  	call 0x80482cc <_init>
0x804b011:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b017:   29 c6                           	sub esi, eax
0x804b019:   c1 fe 02                        	sar esi, 2
0x804b01c:   85 f6                           	test esi, esi
0x804b01e:   74 25                           	je 0x804b045 <__libc_csu_init+0x55>
0x804b020:   31 ff                           	xor edi, edi
0x804b022:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b028:   83 ec 04                        	sub esp, 4
0x804b02b:   55                              	push ebp
0x804b02c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b030:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b034:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b03b:   83 c7 01                        	add edi, 1
0x804b03e:   83 c4 10                        	add esp, 0x10
0x804b041:   39 fe                           	cmp esi, edi
0x804b043:   75 e3                           	jne 0x804b028 <__libc_csu_init+0x38>
0x804b045:   83 c4 0c                        	add esp, 0xc
0x804b048:   5b                              	pop ebx
0x804b049:   5e                              	pop esi
0x804b04a:   5f                              	pop edi
0x804b04b:   5d                              	pop ebp
0x804b04c:   c3                              	ret 
; data inside code section at 0x804b04d -- 0x804b050
0x804b04d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b050 -- 0x804b052
0x804b050:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b054 -- 0x804b068
0x804b054:   53                              	push ebx
0x804b055:   83 ec 08                        	sub esp, 8
0x804b058:   e8 33 d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b05d:   81 c3 a3 2f 00 00               	add ebx, 0x2fa3
0x804b063:   83 c4 08                        	add esp, 8
0x804b066:   5b                              	pop ebx
0x804b067:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 6c b0 04 08  04 00 00 00 11 00 10 00   |....l...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b068:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b078:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b088:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b098:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b0a8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b0b8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b0c8:   08 05 31 00 67 5f 31 30  00 67 5f 32 33 00 67 5f   |..1.g_10.g_23.g_|
0x804b0d8:   32 34 00 67 5f 33 34 00  67 5f 33 35 00 67 5f 33   |24.g_34.g_35.g_3|
0x804b0e8:   36 00 67 5f 34 34 00 67  5f 36 30 00 67 5f 36 33   |6.g_44.g_60.g_63|
0x804b0f8:   00 67 5f 37 32 00 67 5f  31 31 37 00 67 5f 31 38   |.g_72.g_117.g_18|
0x804b108:   32 00 67 5f 31 38 33 00  67 5f 31 38 34 00 67 5f   |2.g_183.g_184.g_|
0x804b118:   31 38 35 00 67 5f 31 38  36 00 67 5f 31 38 37 00   |185.g_186.g_187.|
0x804b128:   67 5f 31 39 34 00 67 5f  32 30 36 00 67 5f 33 31   |g_194.g_206.g_31|
0x804b138:   32 00 67 5f 33 31 34 00  67 5f 33 31 35 00 67 5f   |2.g_314.g_315.g_|
0x804b148:   33 33 34 00 67 5f 33 33  35 00 67 5f 33 39 33 00   |334.g_335.g_393.|
0x804b158:   67 5f 34 31 38 00 67 5f  34 32 32 00 67 5f 34 32   |g_418.g_422.g_42|
0x804b168:   33 00 67 5f 34 32 34 00  67 5f 34 33 34 00 67 5f   |3.g_424.g_434.g_|
0x804b178:   34 37 39 00 67 5f 34 38  35 00 00 00 00 00 00 3f   |479.g_485......?|
0x804b188:   ff ff ff 7e 00 00 80 0d  00 00 80 31 ff ff 7f 3f   |...~.......1...?|
0x804b198:   00 00 00 27 00 00 80 71  ff ff ff 34 00 00 00 00   |...'...q...4....|
0x804b1a8:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804b1b8:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804b1c8:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804b1d8:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804b1e8:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804b1f0:   01 1b 03 3b b8 02 00 00  56 00 00 00 00 d1 ff ff   |...;....V.......|
0x804b200:   e8 02 00 00 40 d1 ff ff  0c 03 00 00 90 d1 ff ff   |....@...........|
0x804b210:   d4 02 00 00 66 d2 ff ff  20 03 00 00 76 d2 ff ff   |....f... ...v...|
0x804b220:   40 03 00 00 a4 d2 ff ff  64 03 00 00 c2 d2 ff ff   |@.......d.......|
0x804b230:   84 03 00 00 ea d2 ff ff  a4 03 00 00 14 d3 ff ff   |................|
0x804b240:   c4 03 00 00 3d d3 ff ff  e4 03 00 00 80 d3 ff ff   |....=...........|
0x804b250:   04 04 00 00 c1 d3 ff ff  24 04 00 00 19 d4 ff ff   |........$.......|
0x804b260:   48 04 00 00 6b d4 ff ff  6c 04 00 00 a8 d4 ff ff   |H...k...l.......|
0x804b270:   8c 04 00 00 df d4 ff ff  ac 04 00 00 fe d4 ff ff   |................|
0x804b280:   cc 04 00 00 28 d5 ff ff  ec 04 00 00 54 d5 ff ff   |....(.......T...|
0x804b290:   0c 05 00 00 7f d5 ff ff  2c 05 00 00 c8 d5 ff ff   |........,.......|
0x804b2a0:   4c 05 00 00 0f d6 ff ff  6c 05 00 00 69 d6 ff ff   |L.......l...i...|
0x804b2b0:   90 05 00 00 bd d6 ff ff  b4 05 00 00 fc d6 ff ff   |................|
0x804b2c0:   d4 05 00 00 35 d7 ff ff  f4 05 00 00 57 d7 ff ff   |....5.......W...|
0x804b2d0:   14 06 00 00 a5 d7 ff ff  34 06 00 00 e1 d7 ff ff   |........4.......|
0x804b2e0:   54 06 00 00 6a d8 ff ff  74 06 00 00 9c d8 ff ff   |T...j...t.......|
0x804b2f0:   94 06 00 00 cc d8 ff ff  b4 06 00 00 11 d9 ff ff   |................|
0x804b300:   d4 06 00 00 50 d9 ff ff  f4 06 00 00 82 d9 ff ff   |....P...........|
0x804b310:   14 07 00 00 ae d9 ff ff  34 07 00 00 cc d9 ff ff   |........4.......|
0x804b320:   54 07 00 00 f4 d9 ff ff  74 07 00 00 19 da ff ff   |T.......t.......|
0x804b330:   94 07 00 00 3e da ff ff  b4 07 00 00 75 da ff ff   |....>.......u...|
0x804b340:   d4 07 00 00 a9 da ff ff  f4 07 00 00 fb da ff ff   |................|
0x804b350:   18 08 00 00 47 db ff ff  3c 08 00 00 7e db ff ff   |....G...<...~...|
0x804b360:   5c 08 00 00 af db ff ff  7c 08 00 00 ce db ff ff   |\.......|.......|
0x804b370:   9c 08 00 00 f8 db ff ff  bc 08 00 00 20 dc ff ff   |............ ...|
0x804b380:   dc 08 00 00 49 dc ff ff  fc 08 00 00 85 dc ff ff   |....I...........|
0x804b390:   1c 09 00 00 bf dc ff ff  3c 09 00 00 12 dd ff ff   |........<.......|
0x804b3a0:   60 09 00 00 5f dd ff ff  84 09 00 00 97 dd ff ff   |`..._...........|
0x804b3b0:   a4 09 00 00 c9 dd ff ff  c4 09 00 00 dd dd ff ff   |................|
0x804b3c0:   e4 09 00 00 f4 dd ff ff  04 0a 00 00 09 de ff ff   |................|
0x804b3d0:   24 0a 00 00 1f de ff ff  44 0a 00 00 46 de ff ff   |$.......D...F...|
0x804b3e0:   64 0a 00 00 6b de ff ff  84 0a 00 00 aa de ff ff   |d...k...........|
0x804b3f0:   a4 0a 00 00 e3 de ff ff  c4 0a 00 00 0f df ff ff   |................|
0x804b400:   e4 0a 00 00 35 df ff ff  04 0b 00 00 77 df ff ff   |....5.......w...|
0x804b410:   24 0b 00 00 b9 df ff ff  44 0b 00 00 fb df ff ff   |$.......D.......|
0x804b420:   64 0b 00 00 70 e0 ff ff  84 0b 00 00 cd e0 ff ff   |d...p...........|
0x804b430:   a4 0b 00 00 2a e1 ff ff  c4 0b 00 00 87 e1 ff ff   |....*...........|
0x804b440:   e4 0b 00 00 17 e2 ff ff  04 0c 00 00 7b e2 ff ff   |............{...|
0x804b450:   24 0c 00 00 eb e2 ff ff  44 0c 00 00 32 e3 ff ff   |$.......D...2...|
0x804b460:   68 0c 00 00 87 e3 ff ff  88 0c 00 00 ce e3 ff ff   |h...............|
0x804b470:   ac 0c 00 00 36 e4 ff ff  d0 0c 00 00 3d e6 ff ff   |....6.......=...|
0x804b480:   00 0d 00 00 9c f9 ff ff  30 0d 00 00 f6 fd ff ff   |........0.......|
0x804b490:   68 0d 00 00 fa fd ff ff  7c 0d 00 00 00 fe ff ff   |h.......|.......|
0x804b4a0:   90 0d 00 00 60 fe ff ff  dc 0d 00 00 14            |....`........   |
; section: .eh_frame
0x804b4ac:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b4bc:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b4cc:   b4 ce ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b4dc:   30 00 00 00 10 ce ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b4ec:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b4fc:   10 00 00 00 54 00 00 00  2c ce ff ff 08 00 00 00   |....T...,.......|
0x804b50c:   00 00 00 00 1c 00 00 00  68 00 00 00 3e cf ff ff   |........h...>...|
0x804b51c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b52c:   04 04 00 00 20 00 00 00  88 00 00 00 2e cf ff ff   |.... ...........|
0x804b53c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b54c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b55c:   38 cf ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |8........A....B.|
0x804b56c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b57c:   36 cf ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |6...(....A....B.|
0x804b58c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b59c:   3e cf ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |>...*....A....B.|
0x804b5ac:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b5bc:   48 cf ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |H...)....A....B.|
0x804b5cc:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b5dc:   51 cf ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |Q...C....A....B.|
0x804b5ec:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b5fc:   74 cf ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |t...A....A....B.|
0x804b60c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b61c:   95 cf ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b62c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b63c:   90 01 00 00 c9 cf ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b64c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b65c:   1c 00 00 00 b4 01 00 00  f7 cf ff ff 3d 00 00 00   |............=...|
0x804b66c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b67c:   1c 00 00 00 d4 01 00 00  14 d0 ff ff 37 00 00 00   |............7...|
0x804b68c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b69c:   1c 00 00 00 f4 01 00 00  2b d0 ff ff 1f 00 00 00   |........+.......|
0x804b6ac:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b6bc:   1c 00 00 00 14 02 00 00  2a d0 ff ff 2a 00 00 00   |........*...*...|
0x804b6cc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b6dc:   1c 00 00 00 34 02 00 00  34 d0 ff ff 2c 00 00 00   |....4...4...,...|
0x804b6ec:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b6fc:   1c 00 00 00 54 02 00 00  40 d0 ff ff 2b 00 00 00   |....T...@...+...|
0x804b70c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b71c:   1c 00 00 00 74 02 00 00  4b d0 ff ff 49 00 00 00   |....t...K...I...|
0x804b72c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b73c:   1c 00 00 00 94 02 00 00  74 d0 ff ff 47 00 00 00   |........t...G...|
0x804b74c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b75c:   20 00 00 00 b4 02 00 00  9b d0 ff ff 5a 00 00 00   | ...........Z...|
0x804b76c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b77c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 d1 d0 ff ff   |.... ...........|
0x804b78c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b79c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b7ac:   01 d1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b7bc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b7cc:   20 d1 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   | ...9....A....B.|
0x804b7dc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b7ec:   39 d1 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |9..."....A....B.|
0x804b7fc:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b80c:   3b d1 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |;...N....A....B.|
0x804b81c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b82c:   69 d1 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |i...<....A....B.|
0x804b83c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b84c:   85 d1 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b85c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b86c:   ee d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b87c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b88c:   00 d2 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b89c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b8ac:   10 d2 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b8bc:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b8cc:   35 d2 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |5...?....A....B.|
0x804b8dc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b8ec:   54 d2 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |T...2....A....B.|
0x804b8fc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b90c:   66 d2 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |f...,....A....B.|
0x804b91c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b92c:   72 d2 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |r........A....B.|
0x804b93c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b94c:   70 d2 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |p...(....A....B.|
0x804b95c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b96c:   78 d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |x...%....A....B.|
0x804b97c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b98c:   7d d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |}...%....A....B.|
0x804b99c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b9ac:   82 d2 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b9bc:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b9cc:   99 d2 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b9dc:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b9ec:   ad d2 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b9fc:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804ba0c:   60 05 00 00 db d2 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804ba1c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804ba2c:   1c 00 00 00 84 05 00 00  03 d3 ff ff 37 00 00 00   |............7...|
0x804ba3c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804ba4c:   1c 00 00 00 a4 05 00 00  1a d3 ff ff 31 00 00 00   |............1...|
0x804ba5c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804ba6c:   1c 00 00 00 c4 05 00 00  2b d3 ff ff 1f 00 00 00   |........+.......|
0x804ba7c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804ba8c:   1c 00 00 00 e4 05 00 00  2a d3 ff ff 2a 00 00 00   |........*...*...|
0x804ba9c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804baac:   1c 00 00 00 04 06 00 00  34 d3 ff ff 28 00 00 00   |........4...(...|
0x804babc:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bacc:   1c 00 00 00 24 06 00 00  3c d3 ff ff 29 00 00 00   |....$...<...)...|
0x804badc:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804baec:   1c 00 00 00 44 06 00 00  45 d3 ff ff 3c 00 00 00   |....D...E...<...|
0x804bafc:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bb0c:   1c 00 00 00 64 06 00 00  61 d3 ff ff 3a 00 00 00   |....d...a...:...|
0x804bb1c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bb2c:   20 00 00 00 84 06 00 00  7b d3 ff ff 53 00 00 00   | .......{...S...|
0x804bb3c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bb4c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 aa d3 ff ff   |.... ...........|
0x804bb5c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bb6c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bb7c:   d3 d3 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804bb8c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bb9c:   eb d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bbac:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bbbc:   fd d3 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bbcc:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bbdc:   f1 d3 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bbec:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bbfc:   e8 d3 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc0c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bc1c:   dd d3 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc2c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bc3c:   d3 d3 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804bc4c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bc5c:   da d3 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bc6c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bc7c:   df d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804bc8c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bc9c:   fe d3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bcac:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bcbc:   17 d4 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bccc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bcdc:   23 d4 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |#...&....A....B.|
0x804bcec:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bcfc:   29 d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |)...B....A....B.|
0x804bd0c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bd1c:   4b d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |K...B....A....B.|
0x804bd2c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bd3c:   6d d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |m...B....A....B.|
0x804bd4c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bd5c:   8f d4 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804bd6c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bd7c:   e4 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bd8c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bd9c:   21 d5 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |!...]....A....B.|
0x804bdac:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bdbc:   5e d5 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |^...]....A....B.|
0x804bdcc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bddc:   9b d5 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bdec:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804bdfc:   0b d6 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804be0c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804be1c:   4f d6 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |O...p....A....B.|
0x804be2c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804be3c:   9f d6 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804be4c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804be5c:   b0 09 00 00 c2 d6 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804be6c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804be7c:   d0 09 00 00 f7 d6 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804be8c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804be9c:   20 00 00 00 f4 09 00 00  1a d7 ff ff 68 00 00 00   | ...........h...|
0x804beac:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bebc:   0c 04 04 00 2c 00 00 00  18 0a 00 00 5e d7 ff ff   |....,.......^...|
0x804becc:   07 02 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804bedc:   86 04 83 05 03 fa 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804beec:   04 00 00 00 2c 00 00 00  48 0a 00 00 35 d9 ff ff   |....,...H...5...|
0x804befc:   5f 13 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |_....A....B..I..|
0x804bf0c:   86 04 83 05 03 4f 13 c3  41 c6 41 c7 41 c5 0c 04   |.....O..A.A.A...|
0x804bf1c:   04 00 00 00 34 00 00 00  78 0a 00 00 64 ec ff ff   |....4...x...d...|
0x804bf2c:   5a 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |Z....D...G...u.D|
0x804bf3c:   0f 03 75 78 06 10 03 02  75 7c 03 45 04 c1 0c 01   |..ux....u|.E....|
0x804bf4c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bf5c:   b0 0a 00 00 86 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804bf6c:   10 00 00 00 c4 0a 00 00  76 f0 ff ff 04 00 00 00   |........v.......|
0x804bf7c:   00 00 00 00 48 00 00 00  d8 0a 00 00 68 f0 ff ff   |....H.......h...|
0x804bf8c:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bf9c:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bfac:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bfbc:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bfcc:   10 00 00 00 24 0b 00 00  7c f0 ff ff 02 00 00 00   |....$...|.......|
0x804bfdc:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 54 b0 04 08  19 00 00 00 0c df 04 08   |....T...........|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff a6 97 75 94   |..............u.|
0x804e028:   6e 19 00 00 d6 32 31 40  fd 00 f5 6b de cb a9 96   |n....21@...k....|
0x804e038:   96 00 01 00 01 00 00 00  c0 9c c9 04 f8 00 00 00   |................|
0x804e048:   70 be 74 66 21 01 99 00  89 13 fe 99 01 00 00 00   |p.tf!...........|
0x804e058:   cb 00 fd ff 3b 24 18 63  01 00 00 00 fe ff ff ff   |....;$.c........|
0x804e068:   d0 79 00 00 28 a3 9e b5  7c 00 00 00 09 00 00 00   |.y..(...|.......|
0x804e078:   08 2f 54 f2 fe ff 01 ??                            |./T....?        |
