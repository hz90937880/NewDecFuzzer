;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:44:29
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 e0 d0 ff ff               	lea eax, [ebx - 0x2f20]
0x804835c:   50                              	push eax
0x804835d:   8d 83 80 d0 ff ff               	lea eax, [ebx - 0x2f80]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 ee ab 04 08               	mov eax, 0x804abee
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 88 e0 04 08                  	mov eax, 0x804e088
0x80483a5:   3d 88 e0 04 08                  	cmp eax, 0x804e088
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 88 e0 04 08                  	push 0x804e088
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 88 e0 04 08                  	mov eax, 0x804e088
0x80483e5:   2d 88 e0 04 08                  	sub eax, 0x804e088
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 88 e0 04 08                  	push 0x804e088
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d a0 e0 04 08 00            	cmp byte ptr [0x804e0a0], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 a0 e0 04 08 01            	mov byte ptr [0x804e0a0], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 0c 2c 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 f8 2b 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 00 d1 ff ff               	lea edx, [eax - 0x2f00]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 cb 2b 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 ad 2b 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 85 2b 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 5b 2b 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 32 2b 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 ef 2a 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 ad 2a 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 55 2a 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 04 2a 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 c7 29 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 90 29 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 71 29 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 47 29 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 1b 29 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 f0 28 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 a7 28 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 5f 28 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 05 28 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 b2 27 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 73 27 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 3d 27 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 1b 27 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 cd 26 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 91 26 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 08 26 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 d6 25 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 a6 25 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 61 25 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 22 25 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 f0 24 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 c1 24 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 a3 24 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 7b 24 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 56 24 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 31 24 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 fa 23 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 c5 23 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 73 23 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 28 23 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 f1 22 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 c0 22 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 a1 22 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 77 22 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 4f 22 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 26 22 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 ea 21 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 af 21 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 5c 21 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 10 21 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 d8 20 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 a9 20 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 95 20 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 7e 20 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 69 20 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 53 20 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 2c 20 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 07 20 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 c8 1f 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 8f 1f 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 63 1f 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 3d 1f 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 18 d2 ff ff               	fld dword ptr [eax - 0x2de8]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 18 d2 ff ff               	fld dword ptr [eax - 0x2de8]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 1c d2 ff ff               	fld dword ptr [eax - 0x2de4]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 fb 1e 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 18 d2 ff ff               	fld dword ptr [eax - 0x2de8]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 18 d2 ff ff               	fld dword ptr [eax - 0x2de8]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 1c d2 ff ff               	fld dword ptr [eax - 0x2de4]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 b9 1e 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 20 d2 ff ff               	fld dword ptr [eax - 0x2de0]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 24 d2 ff ff               	fld dword ptr [eax - 0x2ddc]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 28 d2 ff ff               	fld dword ptr [eax - 0x2dd8]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 77 1e 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 2c d2 ff ff               	fld dword ptr [eax - 0x2dd4]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 30 d2 ff ff               	fld dword ptr [eax - 0x2dd0]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 34 d2 ff ff               	fld dword ptr [eax - 0x2dcc]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 ff 1d 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 38 d2 ff ff               	fld qword ptr [eax - 0x2dc8]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 38 d2 ff ff               	fld qword ptr [eax - 0x2dc8]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 40 d2 ff ff               	fld qword ptr [eax - 0x2dc0]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 a2 1d 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 38 d2 ff ff               	fld qword ptr [eax - 0x2dc8]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 38 d2 ff ff               	fld qword ptr [eax - 0x2dc8]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 40 d2 ff ff               	fld qword ptr [eax - 0x2dc0]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 45 1d 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 48 d2 ff ff               	fld qword ptr [eax - 0x2db8]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 50 d2 ff ff               	fld qword ptr [eax - 0x2db0]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 58 d2 ff ff               	fld qword ptr [eax - 0x2da8]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 e8 1c 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 60 d2 ff ff               	fld qword ptr [eax - 0x2da0]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 68 d2 ff ff               	fld qword ptr [eax - 0x2d98]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 70 d2 ff ff               	fld qword ptr [eax - 0x2d90]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 58 1c 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 78 d2 ff ff               	fld dword ptr [eax - 0x2d88]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 7c d2 ff ff               	fld dword ptr [eax - 0x2d84]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 f4 1b 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 c0 00 00 00            	mov dword ptr [eax + edx*4 + 0xc0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 83 1b 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 c0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xc0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 40 1b 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 10 d1 ff ff               	lea eax, [ebx - 0x2ef0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 34 d1 ff ff               	lea eax, [ebx - 0x2ecc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80498bf
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   81 ec 90 00 00 00               	sub esp, 0x90
0x8049632:   e8 37 1a 00 00                  	call 0x804b06e <__x86.get_pc_thunk.dx>
0x8049637:   81 c2 c9 49 00 00               	add edx, 0x49c9
0x804963d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049640:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049643:   8b 4d 14                        	mov ecx, dword ptr [ebp + 0x14]
0x8049646:   8b 5d 18                        	mov ebx, dword ptr [ebp + 0x18]
0x8049649:   8b 75 24                        	mov esi, dword ptr [ebp + 0x24]
0x804964c:   8b 7d 28                        	mov edi, dword ptr [ebp + 0x28]
0x804964f:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x8049652:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049655:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x8049658:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804965b:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x804965e:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049661:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049664:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049667:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x804966a:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804966d:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x8049670:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049673:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049676:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049679:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x804967c:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804967f:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x8049682:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x8049688:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x804968b:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x8049691:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x8049694:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804969a:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x804969d:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x80496a3:   8b 85 80 00 00 00               	mov eax, dword ptr [ebp + 0x80]
0x80496a9:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x80496af:   8b 85 84 00 00 00               	mov eax, dword ptr [ebp + 0x84]
0x80496b5:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x80496bb:   8b 85 88 00 00 00               	mov eax, dword ptr [ebp + 0x88]
0x80496c1:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x80496c7:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496cb:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x80496cf:   89 c8                           	mov eax, ecx
0x80496d1:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x80496d4:   89 d8                           	mov eax, ebx
0x80496d6:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x80496d9:   89 f0                           	mov eax, esi
0x80496db:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496de:   89 f8                           	mov eax, edi
0x80496e0:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x80496e3:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x80496e7:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496eb:   0f b6 45 98                     	movzx eax, byte ptr [ebp - 0x68]
0x80496ef:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x80496f2:   0f b7 45 94                     	movzx eax, word ptr [ebp - 0x6c]
0x80496f6:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496fa:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x80496fe:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x8049702:   0f b7 45 8c                     	movzx eax, word ptr [ebp - 0x74]
0x8049706:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x804970a:   0f b6 45 88                     	movzx eax, byte ptr [ebp - 0x78]
0x804970e:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x8049711:   0f b6 45 84                     	movzx eax, byte ptr [ebp - 0x7c]
0x8049715:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x8049718:   0f b6 45 80                     	movzx eax, byte ptr [ebp - 0x80]
0x804971c:   88 45 c0                        	mov byte ptr [ebp - 0x40], al
0x804971f:   0f b6 85 7c ff ff ff            	movzx eax, byte ptr [ebp - 0x84]
0x8049726:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x8049729:   0f b7 85 78 ff ff ff            	movzx eax, word ptr [ebp - 0x88]
0x8049730:   66 89 45 b8                     	mov word ptr [ebp - 0x48], ax
0x8049734:   0f b6 85 74 ff ff ff            	movzx eax, byte ptr [ebp - 0x8c]
0x804973b:   88 45 b4                        	mov byte ptr [ebp - 0x4c], al
0x804973e:   0f b7 85 70 ff ff ff            	movzx eax, word ptr [ebp - 0x90]
0x8049745:   66 89 45 b0                     	mov word ptr [ebp - 0x50], ax
0x8049749:   0f b6 85 6c ff ff ff            	movzx eax, byte ptr [ebp - 0x94]
0x8049750:   88 45 ac                        	mov byte ptr [ebp - 0x54], al
0x8049753:   0f b7 85 68 ff ff ff            	movzx eax, word ptr [ebp - 0x98]
0x804975a:   66 89 45 a8                     	mov word ptr [ebp - 0x58], ax
0x804975e:   0f b7 85 64 ff ff ff            	movzx eax, word ptr [ebp - 0x9c]
0x8049765:   66 89 45 a4                     	mov word ptr [ebp - 0x5c], ax
0x8049769:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804976d:   66 89 82 24 00 00 00            	mov word ptr [edx + 0x24], ax
0x8049774:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049777:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x804977d:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x8049780:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x8049786:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x804978a:   88 82 30 00 00 00               	mov byte ptr [edx + 0x30], al
0x8049790:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x8049794:   88 82 31 00 00 00               	mov byte ptr [edx + 0x31], al
0x804979a:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x804979d:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x80497a3:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x80497a6:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x80497ac:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x80497b0:   88 82 3c 00 00 00               	mov byte ptr [edx + 0x3c], al
0x80497b6:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x80497ba:   88 82 3d 00 00 00               	mov byte ptr [edx + 0x3d], al
0x80497c0:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x80497c4:   66 89 82 3e 00 00 00            	mov word ptr [edx + 0x3e], ax
0x80497cb:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x80497ce:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x80497d4:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x80497d8:   88 82 44 00 00 00               	mov byte ptr [edx + 0x44], al
0x80497de:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x80497e1:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x80497e7:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x80497eb:   66 89 82 4c 00 00 00            	mov word ptr [edx + 0x4c], ax
0x80497f2:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x80497f5:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x80497fb:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x80497ff:   66 89 82 54 00 00 00            	mov word ptr [edx + 0x54], ax
0x8049806:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x804980a:   66 89 82 56 00 00 00            	mov word ptr [edx + 0x56], ax
0x8049811:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x8049815:   88 82 58 00 00 00               	mov byte ptr [edx + 0x58], al
0x804981b:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x804981f:   88 82 59 00 00 00               	mov byte ptr [edx + 0x59], al
0x8049825:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049828:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x804982e:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x8049832:   88 82 60 00 00 00               	mov byte ptr [edx + 0x60], al
0x8049838:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x804983b:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x8049841:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x8049844:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x804984a:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x804984e:   88 82 6c 00 00 00               	mov byte ptr [edx + 0x6c], al
0x8049854:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x8049857:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x804985d:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x8049860:   89 82 74 00 00 00               	mov dword ptr [edx + 0x74], eax
0x8049866:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x8049869:   89 82 78 00 00 00               	mov dword ptr [edx + 0x78], eax
0x804986f:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x8049873:   66 89 82 7c 00 00 00            	mov word ptr [edx + 0x7c], ax
0x804987a:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x804987e:   88 82 7e 00 00 00               	mov byte ptr [edx + 0x7e], al
0x8049884:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x8049888:   66 89 82 80 00 00 00            	mov word ptr [edx + 0x80], ax
0x804988f:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x8049893:   88 82 82 00 00 00               	mov byte ptr [edx + 0x82], al
0x8049899:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x804989d:   66 89 82 84 00 00 00            	mov word ptr [edx + 0x84], ax
0x80498a4:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80498a8:   66 89 82 86 00 00 00            	mov word ptr [edx + 0x86], ax
0x80498af:   b8 00 00 00 00                  	mov eax, 0
0x80498b4:   81 c4 90 00 00 00               	add esp, 0x90
0x80498ba:   5b                              	pop ebx
0x80498bb:   5e                              	pop esi
0x80498bc:   5f                              	pop edi
0x80498bd:   5d                              	pop ebp
0x80498be:   c3                              	ret 
; function: func_1 at 0x80498bf -- 0x804abee
0x80498bf:   55                              	push ebp
0x80498c0:   89 e5                           	mov ebp, esp
0x80498c2:   57                              	push edi
0x80498c3:   56                              	push esi
0x80498c4:   53                              	push ebx
0x80498c5:   81 ec b8 01 00 00               	sub esp, 0x1b8
0x80498cb:   e8 9a 17 00 00                  	call 0x804b06a <__x86.get_pc_thunk.ax>
0x80498d0:   05 30 47 00 00                  	add eax, 0x4730
0x80498d5:   66 c7 45 82 40 0b               	mov word ptr [ebp - 0x7e], 0xb40
0x80498db:   c7 45 e8 94 b1 3a 96            	mov dword ptr [ebp - 0x18], 0x963ab194
0x80498e2:   c7 45 f0 25 65 bd 03            	mov dword ptr [ebp - 0x10], 0x3bd6525
0x80498e9:   c6 45 81 01                     	mov byte ptr [ebp - 0x7f], 1
0x80498ed:   c6 45 ef cc                     	mov byte ptr [ebp - 0x11], 0xcc
0x80498f1:   c7 45 e4 c4 d3 53 c8            	mov dword ptr [ebp - 0x1c], 0xc853d3c4
0x80498f8:   c7 45 e0 ff ff ff ff            	mov dword ptr [ebp - 0x20], 0xffffffff
0x80498ff:   c6 45 df 24                     	mov byte ptr [ebp - 0x21], 0x24
0x8049903:   c6 45 de ff                     	mov byte ptr [ebp - 0x22], 0xff
0x8049907:   66 c7 45 dc 8c 2c               	mov word ptr [ebp - 0x24], 0x2c8c
0x804990d:   c7 45 d8 44 aa ee 40            	mov dword ptr [ebp - 0x28], 0x40eeaa44
0x8049914:   c6 45 d7 67                     	mov byte ptr [ebp - 0x29], 0x67
0x8049918:   c7 45 d0 fd ff ff ff            	mov dword ptr [ebp - 0x30], 0xfffffffd
0x804991f:   66 c7 45 ce 72 41               	mov word ptr [ebp - 0x32], 0x4172
0x8049925:   c7 45 c8 ff ff ff ff            	mov dword ptr [ebp - 0x38], 0xffffffff
0x804992c:   66 c7 45 c6 f6 26               	mov word ptr [ebp - 0x3a], 0x26f6
0x8049932:   66 c7 45 c4 9a aa               	mov word ptr [ebp - 0x3c], 0xaa9a
0x8049938:   c6 45 80 f6                     	mov byte ptr [ebp - 0x80], 0xf6
0x804993c:   c6 85 7f ff ff ff c9            	mov byte ptr [ebp - 0x81], 0xc9
0x8049943:   c7 45 c0 01 00 00 00            	mov dword ptr [ebp - 0x40], 1
0x804994a:   c6 45 bf ff                     	mov byte ptr [ebp - 0x41], 0xff
0x804994e:   c7 45 b8 6c ba 77 4f            	mov dword ptr [ebp - 0x48], 0x4f77ba6c
0x8049955:   c7 45 b4 04 00 00 00            	mov dword ptr [ebp - 0x4c], 4
0x804995c:   c6 85 7e ff ff ff 3f            	mov byte ptr [ebp - 0x82], 0x3f
0x8049963:   c7 45 b0 ff ff ff ff            	mov dword ptr [ebp - 0x50], 0xffffffff
0x804996a:   c7 45 ac fc ba d9 3d            	mov dword ptr [ebp - 0x54], 0x3dd9bafc
0x8049971:   c7 45 a8 10 b7 0d 44            	mov dword ptr [ebp - 0x58], 0x440db710
0x8049978:   66 c7 85 7c ff ff ff ff ff      	mov word ptr [ebp - 0x84], 0xffff
0x8049981:   c6 85 7b ff ff ff 07            	mov byte ptr [ebp - 0x85], 7
0x8049988:   66 c7 45 a6 e5 5c               	mov word ptr [ebp - 0x5a], 0x5ce5
0x804998e:   c6 85 7a ff ff ff 03            	mov byte ptr [ebp - 0x86], 3
0x8049995:   66 c7 45 a4 03 bd               	mov word ptr [ebp - 0x5c], 0xbd03
0x804999b:   66 c7 45 a2 fd ff               	mov word ptr [ebp - 0x5e], 0xfffd
0x80499a1:   c7 45 9c 9c 5a 6f c6            	mov dword ptr [ebp - 0x64], 0xc66f5a9c
0x80499a8:   c6 85 79 ff ff ff 06            	mov byte ptr [ebp - 0x87], 6
0x80499af:   c7 45 98 69 98 5b a3            	mov dword ptr [ebp - 0x68], 0xa35b9869
0x80499b6:   c7 45 94 18 bb 02 e1            	mov dword ptr [ebp - 0x6c], 0xe102bb18
0x80499bd:   c7 85 74 ff ff ff bc 30 7f 80   	mov dword ptr [ebp - 0x8c], 0x807f30bc
0x80499c7:   c7 85 70 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0x90], 2
0x80499d1:   c6 45 93 ff                     	mov byte ptr [ebp - 0x6d], 0xff
0x80499d5:   c6 85 6f ff ff ff fa            	mov byte ptr [ebp - 0x91], 0xfa
0x80499dc:   c7 85 68 ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0x98], 5
0x80499e6:   c7 45 8c 01 00 00 00            	mov dword ptr [ebp - 0x74], 1
0x80499ed:   c7 85 64 ff ff ff 85 56 f4 99   	mov dword ptr [ebp - 0x9c], 0x99f45685
0x80499f7:   66 c7 85 62 ff ff ff f9 ff      	mov word ptr [ebp - 0x9e], 0xfff9
0x8049a00:   c7 85 5c ff ff ff 03 00 00 00   	mov dword ptr [ebp - 0xa4], 3
0x8049a0a:   c7 45 88 ff ff ff ff            	mov dword ptr [ebp - 0x78], 0xffffffff
0x8049a11:   0f bf 45 82                     	movsx eax, word ptr [ebp - 0x7e]
0x8049a15:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049a18:   83 7d e8 f9                     	cmp dword ptr [ebp - 0x18], -7
0x8049a1c:   0f 97 c0                        	seta al
0x8049a1f:   0f b6 c0                        	movzx eax, al
0x8049a22:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049a25:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049a29:   0f 84 3d 07 00 00               	je 0x804a16c <func_1+0x8ad>
0x8049a2f:   c7 85 40 ff ff ff 2d 13 84 1c   	mov dword ptr [ebp - 0xc0], 0x1c84132d
0x8049a39:   c7 85 3c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xc4], 1
0x8049a43:   c6 85 3b ff ff ff de            	mov byte ptr [ebp - 0xc5], 0xde
0x8049a4a:   c7 85 34 ff ff ff a9 5e 56 86   	mov dword ptr [ebp - 0xcc], 0x86565ea9
0x8049a54:   c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x8049a5b:   e9 e2 06 00 00                  	jmp 0x804a142 <func_1+0x883>
0x8049a60:   66 c7 85 32 ff ff ff f9 ff      	mov word ptr [ebp - 0xce], 0xfff9
0x8049a69:   c7 45 84 db 64 85 79            	mov dword ptr [ebp - 0x7c], 0x798564db
0x8049a70:   66 c7 85 30 ff ff ff e1 7c      	mov word ptr [ebp - 0xd0], 0x7ce1
0x8049a79:   0f b7 85 32 ff ff ff            	movzx eax, word ptr [ebp - 0xce]
0x8049a80:   66 3b 45 82                     	cmp ax, word ptr [ebp - 0x7e]
0x8049a84:   0f 8c ac 01 00 00               	jl 0x8049c36 <func_1+0x377>
0x8049a8a:   c6 85 f7 fe ff ff ff            	mov byte ptr [ebp - 0x109], 0xff
0x8049a91:   83 bd 40 ff ff ff 01            	cmp dword ptr [ebp - 0xc0], 1
0x8049a98:   0f 94 c0                        	sete al
0x8049a9b:   89 c2                           	mov edx, eax
0x8049a9d:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049aa0:   21 d0                           	and eax, edx
0x8049aa2:   0f b6 95 f7 fe ff ff            	movzx edx, byte ptr [ebp - 0x109]
0x8049aa9:   0f b6 c0                        	movzx eax, al
0x8049aac:   f6 f2                           	div dl
0x8049aae:   c0 e8 05                        	shr al, 5
0x8049ab1:   0f b6 c0                        	movzx eax, al
0x8049ab4:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049ab7:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049aba:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049abd:   0f 95 c0                        	setne al
0x8049ac0:   0f b6 c0                        	movzx eax, al
0x8049ac3:   f7 d0                           	not eax
0x8049ac5:   89 c2                           	mov edx, eax
0x8049ac7:   0f be 85 f7 fe ff ff            	movsx eax, byte ptr [ebp - 0x109]
0x8049ace:   39 c2                           	cmp edx, eax
0x8049ad0:   7d 11                           	jge 0x8049ae3 <func_1+0x224>
0x8049ad2:   66 83 bd 32 ff ff ff 00         	cmp word ptr [ebp - 0xce], 0
0x8049ada:   74 07                           	je 0x8049ae3 <func_1+0x224>
0x8049adc:   b8 01 00 00 00                  	mov eax, 1
0x8049ae1:   eb 05                           	jmp 0x8049ae8 <func_1+0x229>
0x8049ae3:   b8 00 00 00 00                  	mov eax, 0
0x8049ae8:   98                              	cwde 
0x8049ae9:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049aec:   0f b7 45 a2                     	movzx eax, word ptr [ebp - 0x5e]
0x8049af0:   89 85 70 fe ff ff               	mov dword ptr [ebp - 0x190], eax
0x8049af6:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x8049afa:   89 85 6c fe ff ff               	mov dword ptr [ebp - 0x194], eax
0x8049b00:   0f b6 85 7a ff ff ff            	movzx eax, byte ptr [ebp - 0x86]
0x8049b07:   89 85 68 fe ff ff               	mov dword ptr [ebp - 0x198], eax
0x8049b0d:   0f bf 45 a6                     	movsx eax, word ptr [ebp - 0x5a]
0x8049b11:   89 85 64 fe ff ff               	mov dword ptr [ebp - 0x19c], eax
0x8049b17:   0f be 85 7b ff ff ff            	movsx eax, byte ptr [ebp - 0x85]
0x8049b1e:   89 85 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], eax
0x8049b24:   0f bf 85 7c ff ff ff            	movsx eax, word ptr [ebp - 0x84]
0x8049b2b:   89 85 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], eax
0x8049b31:   0f be 85 7e ff ff ff            	movsx eax, byte ptr [ebp - 0x82]
0x8049b38:   89 85 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], eax
0x8049b3e:   0f be 45 bf                     	movsx eax, byte ptr [ebp - 0x41]
0x8049b42:   89 85 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], eax
0x8049b48:   0f b6 95 7f ff ff ff            	movzx edx, byte ptr [ebp - 0x81]
0x8049b4f:   89 95 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edx
0x8049b55:   0f be 55 80                     	movsx edx, byte ptr [ebp - 0x80]
0x8049b59:   0f b7 4d c4                     	movzx ecx, word ptr [ebp - 0x3c]
0x8049b5d:   89 8d 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], ecx
0x8049b63:   0f b7 4d c6                     	movzx ecx, word ptr [ebp - 0x3a]
0x8049b67:   0f b7 5d ce                     	movzx ebx, word ptr [ebp - 0x32]
0x8049b6b:   89 9d 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], ebx
0x8049b71:   0f b6 5d d7                     	movzx ebx, byte ptr [ebp - 0x29]
0x8049b75:   0f b7 75 dc                     	movzx esi, word ptr [ebp - 0x24]
0x8049b79:   89 b5 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], esi
0x8049b7f:   0f be 75 de                     	movsx esi, byte ptr [ebp - 0x22]
0x8049b83:   0f be 7d df                     	movsx edi, byte ptr [ebp - 0x21]
0x8049b87:   89 bd 40 fe ff ff               	mov dword ptr [ebp - 0x1c0], edi
0x8049b8d:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x8049b91:   0f be 45 81                     	movsx eax, byte ptr [ebp - 0x7f]
0x8049b95:   89 85 3c fe ff ff               	mov dword ptr [ebp - 0x1c4], eax
0x8049b9b:   0f bf 45 82                     	movsx eax, word ptr [ebp - 0x7e]
0x8049b9f:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x8049ba5:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x8049bab:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x8049bb1:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x8049bb7:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x8049bbd:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x8049bc3:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x8049bc6:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x8049bc9:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049bcc:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x8049bd2:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049bd5:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049bd8:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x8049bde:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049be1:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x8049be7:   52                              	push edx
0x8049be8:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x8049bee:   51                              	push ecx
0x8049bef:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049bf2:   ff b5 48 fe ff ff               	push dword ptr [ebp - 0x1b8]
0x8049bf8:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049bfb:   53                              	push ebx
0x8049bfc:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049bff:   ff b5 44 fe ff ff               	push dword ptr [ebp - 0x1bc]
0x8049c05:   56                              	push esi
0x8049c06:   ff b5 40 fe ff ff               	push dword ptr [ebp - 0x1c0]
0x8049c0c:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049c0f:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049c12:   57                              	push edi
0x8049c13:   ff b5 3c fe ff ff               	push dword ptr [ebp - 0x1c4]
0x8049c19:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049c1c:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049c1f:   50                              	push eax
0x8049c20:   e8 01 fa ff ff                  	call 0x8049626 <set_var>
0x8049c25:   81 c4 84 00 00 00               	add esp, 0x84
0x8049c2b:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x8049c31:   e9 b0 0f 00 00                  	jmp 0x804abe6 <func_1+0x1327>
0x8049c36:   c6 85 2f ff ff ff f9            	mov byte ptr [ebp - 0xd1], 0xf9
0x8049c3d:   c7 85 28 ff ff ff ef 33 96 d1   	mov dword ptr [ebp - 0xd8], 0xd19633ef
0x8049c47:   c7 85 24 ff ff ff a0 d4 60 61   	mov dword ptr [ebp - 0xdc], 0x6160d4a0
0x8049c51:   c7 85 20 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xe0], 1
0x8049c5b:   c7 85 1c ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0xe4], 0xfffffffe
0x8049c65:   0f bf 45 82                     	movsx eax, word ptr [ebp - 0x7e]
0x8049c69:   89 85 3c ff ff ff               	mov dword ptr [ebp - 0xc4], eax
0x8049c6f:   81 7d 84 a2 00 00 00            	cmp dword ptr [ebp - 0x7c], 0xa2
0x8049c76:   0f 95 c0                        	setne al
0x8049c79:   0f b6 c0                        	movzx eax, al
0x8049c7c:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049c7f:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x8049c83:   74 0d                           	je 0x8049c92 <func_1+0x3d3>
0x8049c85:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049c89:   74 07                           	je 0x8049c92 <func_1+0x3d3>
0x8049c8b:   b8 01 00 00 00                  	mov eax, 1
0x8049c90:   eb 05                           	jmp 0x8049c97 <func_1+0x3d8>
0x8049c92:   b8 00 00 00 00                  	mov eax, 0
0x8049c97:   98                              	cwde 
0x8049c98:   8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x8049c9b:   0f bf ca                        	movsx ecx, dx
0x8049c9e:   99                              	cdq 
0x8049c9f:   f7 f9                           	idiv ecx
0x8049ca1:   89 d0                           	mov eax, edx
0x8049ca3:   0f bf d0                        	movsx edx, ax
0x8049ca6:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049ca9:   98                              	cwde 
0x8049caa:   89 c1                           	mov ecx, eax
0x8049cac:   d3 e2                           	shl edx, cl
0x8049cae:   89 d0                           	mov eax, edx
0x8049cb0:   3d 0f a1 2b 6f                  	cmp eax, 0x6f2ba10f
0x8049cb5:   80 bd 2f ff ff ff 00            	cmp byte ptr [ebp - 0xd1], 0
0x8049cbc:   0f 84 a4 01 00 00               	je 0x8049e66 <func_1+0x5a7>
0x8049cc2:   c7 85 0c ff ff ff ed 88 89 4a   	mov dword ptr [ebp - 0xf4], 0x4a8988ed
0x8049ccc:   c7 85 08 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xf8], 0
0x8049cd6:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x8049cda:   74 36                           	je 0x8049d12 <func_1+0x453>
0x8049cdc:   0f b6 85 3b ff ff ff            	movzx eax, byte ptr [ebp - 0xc5]
0x8049ce3:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049ce6:   0f 93 c0                        	setae al
0x8049ce9:   0f b6 d0                        	movzx edx, al
0x8049cec:   0f bf 85 32 ff ff ff            	movsx eax, word ptr [ebp - 0xce]
0x8049cf3:   39 c2                           	cmp edx, eax
0x8049cf5:   0f 9f c0                        	setg al
0x8049cf8:   0f b6 c0                        	movzx eax, al
0x8049cfb:   39 85 0c ff ff ff               	cmp dword ptr [ebp - 0xf4], eax
0x8049d01:   0f 96 c0                        	setbe al
0x8049d04:   0f b6 c0                        	movzx eax, al
0x8049d07:   89 85 08 ff ff ff               	mov dword ptr [ebp - 0xf8], eax
0x8049d0d:   e9 c9 02 00 00                  	jmp 0x8049fdb <func_1+0x71c>
0x8049d12:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x8049d16:   83 c0 01                        	add eax, 1
0x8049d19:   88 45 ef                        	mov byte ptr [ebp - 0x11], al
0x8049d1c:   0f b7 45 a2                     	movzx eax, word ptr [ebp - 0x5e]
0x8049d20:   89 85 70 fe ff ff               	mov dword ptr [ebp - 0x190], eax
0x8049d26:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x8049d2a:   89 85 6c fe ff ff               	mov dword ptr [ebp - 0x194], eax
0x8049d30:   0f b6 85 7a ff ff ff            	movzx eax, byte ptr [ebp - 0x86]
0x8049d37:   89 85 68 fe ff ff               	mov dword ptr [ebp - 0x198], eax
0x8049d3d:   0f bf 45 a6                     	movsx eax, word ptr [ebp - 0x5a]
0x8049d41:   89 85 64 fe ff ff               	mov dword ptr [ebp - 0x19c], eax
0x8049d47:   0f be 85 7b ff ff ff            	movsx eax, byte ptr [ebp - 0x85]
0x8049d4e:   89 85 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], eax
0x8049d54:   0f bf 85 7c ff ff ff            	movsx eax, word ptr [ebp - 0x84]
0x8049d5b:   89 85 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], eax
0x8049d61:   0f be 85 7e ff ff ff            	movsx eax, byte ptr [ebp - 0x82]
0x8049d68:   89 85 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], eax
0x8049d6e:   0f be 45 bf                     	movsx eax, byte ptr [ebp - 0x41]
0x8049d72:   89 85 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], eax
0x8049d78:   0f b6 95 7f ff ff ff            	movzx edx, byte ptr [ebp - 0x81]
0x8049d7f:   89 95 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edx
0x8049d85:   0f be 55 80                     	movsx edx, byte ptr [ebp - 0x80]
0x8049d89:   0f b7 4d c4                     	movzx ecx, word ptr [ebp - 0x3c]
0x8049d8d:   89 8d 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], ecx
0x8049d93:   0f b7 4d c6                     	movzx ecx, word ptr [ebp - 0x3a]
0x8049d97:   0f b7 5d ce                     	movzx ebx, word ptr [ebp - 0x32]
0x8049d9b:   89 9d 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], ebx
0x8049da1:   0f b6 5d d7                     	movzx ebx, byte ptr [ebp - 0x29]
0x8049da5:   0f b7 75 dc                     	movzx esi, word ptr [ebp - 0x24]
0x8049da9:   89 b5 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], esi
0x8049daf:   0f be 75 de                     	movsx esi, byte ptr [ebp - 0x22]
0x8049db3:   0f be 7d df                     	movsx edi, byte ptr [ebp - 0x21]
0x8049db7:   89 bd 40 fe ff ff               	mov dword ptr [ebp - 0x1c0], edi
0x8049dbd:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x8049dc1:   0f be 45 81                     	movsx eax, byte ptr [ebp - 0x7f]
0x8049dc5:   89 85 3c fe ff ff               	mov dword ptr [ebp - 0x1c4], eax
0x8049dcb:   0f bf 45 82                     	movsx eax, word ptr [ebp - 0x7e]
0x8049dcf:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x8049dd5:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x8049ddb:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x8049de1:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x8049de7:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x8049ded:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x8049df3:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x8049df6:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x8049df9:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049dfc:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x8049e02:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049e05:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049e08:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x8049e0e:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049e11:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x8049e17:   52                              	push edx
0x8049e18:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x8049e1e:   51                              	push ecx
0x8049e1f:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049e22:   ff b5 48 fe ff ff               	push dword ptr [ebp - 0x1b8]
0x8049e28:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049e2b:   53                              	push ebx
0x8049e2c:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049e2f:   ff b5 44 fe ff ff               	push dword ptr [ebp - 0x1bc]
0x8049e35:   56                              	push esi
0x8049e36:   ff b5 40 fe ff ff               	push dword ptr [ebp - 0x1c0]
0x8049e3c:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049e3f:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049e42:   57                              	push edi
0x8049e43:   ff b5 3c fe ff ff               	push dword ptr [ebp - 0x1c4]
0x8049e49:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049e4c:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049e4f:   50                              	push eax
0x8049e50:   e8 d1 f7 ff ff                  	call 0x8049626 <set_var>
0x8049e55:   81 c4 84 00 00 00               	add esp, 0x84
0x8049e5b:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x8049e61:   e9 80 0d 00 00                  	jmp 0x804abe6 <func_1+0x1327>
0x8049e66:   c7 85 18 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xe8], 1
0x8049e70:   c7 85 14 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xec], 0
0x8049e7a:   c6 45 ef 00                     	mov byte ptr [ebp - 0x11], 0
0x8049e7e:   e9 8c 00 00 00                  	jmp 0x8049f0f <func_1+0x650>
0x8049e83:   c7 85 10 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xf0], 0
0x8049e8d:   66 83 bd 32 ff ff ff 00         	cmp word ptr [ebp - 0xce], 0
0x8049e95:   0f 85 80 00 00 00               	jne 0x8049f1b <func_1+0x65c>
0x8049e9b:   83 45 e4 01                     	add dword ptr [ebp - 0x1c], 1
0x8049e9f:   0f be 45 81                     	movsx eax, byte ptr [ebp - 0x7f]
0x8049ea3:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049ea6:   0f bf 95 32 ff ff ff            	movsx edx, word ptr [ebp - 0xce]
0x8049ead:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x8049eb3:   39 85 34 ff ff ff               	cmp dword ptr [ebp - 0xcc], eax
0x8049eb9:   0f 95 c0                        	setne al
0x8049ebc:   0f b6 c0                        	movzx eax, al
0x8049ebf:   33 45 e8                        	xor eax, dword ptr [ebp - 0x18]
0x8049ec2:   83 f8 01                        	cmp eax, 1
0x8049ec5:   0f 96 c0                        	setbe al
0x8049ec8:   0f b6 c0                        	movzx eax, al
0x8049ecb:   39 c2                           	cmp edx, eax
0x8049ecd:   0f 9f c0                        	setg al
0x8049ed0:   0f b6 d0                        	movzx edx, al
0x8049ed3:   0f b6 85 3b ff ff ff            	movzx eax, byte ptr [ebp - 0xc5]
0x8049eda:   39 c2                           	cmp edx, eax
0x8049edc:   0f 9f c0                        	setg al
0x8049edf:   0f b6 c0                        	movzx eax, al
0x8049ee2:   8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x8049ee5:   0f b7 ca                        	movzx ecx, dx
0x8049ee8:   99                              	cdq 
0x8049ee9:   f7 f9                           	idiv ecx
0x8049eeb:   89 d0                           	mov eax, edx
0x8049eed:   09 85 10 ff ff ff               	or dword ptr [ebp - 0xf0], eax
0x8049ef3:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x8049ef9:   39 85 10 ff ff ff               	cmp dword ptr [ebp - 0xf0], eax
0x8049eff:   0f 92 c0                        	setb al
0x8049f02:   0f b6 c0                        	movzx eax, al
0x8049f05:   89 85 3c ff ff ff               	mov dword ptr [ebp - 0xc4], eax
0x8049f0b:   80 45 ef 01                     	add byte ptr [ebp - 0x11], 1
0x8049f0f:   80 7d ef 2e                     	cmp byte ptr [ebp - 0x11], 0x2e
0x8049f13:   0f 86 6a ff ff ff               	jbe 0x8049e83 <func_1+0x5c4>
0x8049f19:   eb 01                           	jmp 0x8049f1c <func_1+0x65d>
0x8049f1b:   90                              	nop 
0x8049f1c:   c7 85 18 ff ff ff 35 00 00 00   	mov dword ptr [ebp - 0xe8], 0x35
0x8049f26:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049f29:   0f be c8                        	movsx ecx, al
0x8049f2c:   ba 56 55 55 55                  	mov edx, 0x55555556
0x8049f31:   89 c8                           	mov eax, ecx
0x8049f33:   f7 ea                           	imul edx
0x8049f35:   89 c8                           	mov eax, ecx
0x8049f37:   c1 f8 1f                        	sar eax, 0x1f
0x8049f3a:   29 c2                           	sub edx, eax
0x8049f3c:   89 d0                           	mov eax, edx
0x8049f3e:   89 c1                           	mov ecx, eax
0x8049f40:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049f44:   8d 50 01                        	lea edx, [eax + 1]
0x8049f47:   66 89 55 dc                     	mov word ptr [ebp - 0x24], dx
0x8049f4b:   89 c2                           	mov edx, eax
0x8049f4d:   8b 85 1c ff ff ff               	mov eax, dword ptr [ebp - 0xe4]
0x8049f53:   22 45 df                        	and al, byte ptr [ebp - 0x21]
0x8049f56:   01 d0                           	add eax, edx
0x8049f58:   2a 85 2f ff ff ff               	sub al, byte ptr [ebp - 0xd1]
0x8049f5e:   c0 f8 07                        	sar al, 7
0x8049f61:   66 98                           	cbw 
0x8049f63:   31 c8                           	xor eax, ecx
0x8049f65:   98                              	cwde 
0x8049f66:   23 85 34 ff ff ff               	and eax, dword ptr [ebp - 0xcc]
0x8049f6c:   85 c0                           	test eax, eax
0x8049f6e:   75 06                           	jne 0x8049f76 <func_1+0x6b7>
0x8049f70:   80 7d 81 00                     	cmp byte ptr [ebp - 0x7f], 0
0x8049f74:   74 07                           	je 0x8049f7d <func_1+0x6be>
0x8049f76:   b8 01 00 00 00                  	mov eax, 1
0x8049f7b:   eb 05                           	jmp 0x8049f82 <func_1+0x6c3>
0x8049f7d:   b8 00 00 00 00                  	mov eax, 0
0x8049f82:   89 85 3c ff ff ff               	mov dword ptr [ebp - 0xc4], eax
0x8049f88:   0f b6 85 3b ff ff ff            	movzx eax, byte ptr [ebp - 0xc5]
0x8049f8f:   66 09 45 dc                     	or word ptr [ebp - 0x24], ax
0x8049f93:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049f97:   66 c1 e8 07                     	shr ax, 7
0x8049f9b:   0f bf d0                        	movsx edx, ax
0x8049f9e:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x8049fa4:   98                              	cwde 
0x8049fa5:   8d 0c 02                        	lea ecx, [edx + eax]
0x8049fa8:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x8049fae:   0f b6 d0                        	movzx edx, al
0x8049fb1:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x8049fb5:   29 c2                           	sub edx, eax
0x8049fb7:   89 d0                           	mov eax, edx
0x8049fb9:   39 c1                           	cmp ecx, eax
0x8049fbb:   0f 9f c0                        	setg al
0x8049fbe:   0f b6 c0                        	movzx eax, al
0x8049fc1:   89 85 3c ff ff ff               	mov dword ptr [ebp - 0xc4], eax
0x8049fc7:   0f b6 8d 3b ff ff ff            	movzx ecx, byte ptr [ebp - 0xc5]
0x8049fce:   b8 01 00 00 00                  	mov eax, 1
0x8049fd3:   99                              	cdq 
0x8049fd4:   f7 f9                           	idiv ecx
0x8049fd6:   89 d0                           	mov eax, edx
0x8049fd8:   09 45 84                        	or dword ptr [ebp - 0x7c], eax
0x8049fdb:   83 bd 20 ff ff ff 00            	cmp dword ptr [ebp - 0xe0], 0
0x8049fe2:   0f 85 55 01 00 00               	jne 0x804a13d <func_1+0x87e>
0x8049fe8:   c7 45 84 00 00 00 00            	mov dword ptr [ebp - 0x7c], 0
0x8049fef:   e9 0b 01 00 00                  	jmp 0x804a0ff <func_1+0x840>
0x8049ff4:   c6 85 07 ff ff ff 10            	mov byte ptr [ebp - 0xf9], 0x10
0x8049ffb:   c7 85 00 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x100], 0xffffffff
0x804a005:   c7 85 fc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x104], 0
0x804a00f:   c6 45 de 01                     	mov byte ptr [ebp - 0x22], 1
0x804a013:   0f be 4d df                     	movsx ecx, byte ptr [ebp - 0x21]
0x804a017:   b8 01 00 00 00                  	mov eax, 1
0x804a01c:   99                              	cdq 
0x804a01d:   f7 f9                           	idiv ecx
0x804a01f:   89 d0                           	mov eax, edx
0x804a021:   0f bf d0                        	movsx edx, ax
0x804a024:   80 7d 81 00                     	cmp byte ptr [ebp - 0x7f], 0
0x804a028:   0f 95 c0                        	setne al
0x804a02b:   0f b6 c8                        	movzx ecx, al
0x804a02e:   0f be 85 07 ff ff ff            	movsx eax, byte ptr [ebp - 0xf9]
0x804a035:   39 c1                           	cmp ecx, eax
0x804a037:   0f 94 c0                        	sete al
0x804a03a:   0f b6 c0                        	movzx eax, al
0x804a03d:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a040:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a043:   0f be c8                        	movsx ecx, al
0x804a046:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a04a:   0f be c0                        	movsx eax, al
0x804a04d:   01 c8                           	add eax, ecx
0x804a04f:   85 c0                           	test eax, eax
0x804a051:   74 0d                           	je 0x804a060 <func_1+0x7a1>
0x804a053:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x804a057:   74 07                           	je 0x804a060 <func_1+0x7a1>
0x804a059:   b8 01 00 00 00                  	mov eax, 1
0x804a05e:   eb 05                           	jmp 0x804a065 <func_1+0x7a6>
0x804a060:   b8 00 00 00 00                  	mov eax, 0
0x804a065:   3b 45 9c                        	cmp eax, dword ptr [ebp - 0x64]
0x804a068:   0f 9e c0                        	setle al
0x804a06b:   0f b6 c0                        	movzx eax, al
0x804a06e:   0f af c2                        	imul eax, edx
0x804a071:   89 85 00 ff ff ff               	mov dword ptr [ebp - 0x100], eax
0x804a077:   66 83 7d dc 00                  	cmp word ptr [ebp - 0x24], 0
0x804a07c:   74 18                           	je 0x804a096 <func_1+0x7d7>
0x804a07e:   0f b7 55 dc                     	movzx edx, word ptr [ebp - 0x24]
0x804a082:   0f bf 85 32 ff ff ff            	movsx eax, word ptr [ebp - 0xce]
0x804a089:   39 c2                           	cmp edx, eax
0x804a08b:   0f 9d c0                        	setge al
0x804a08e:   0f b6 c0                        	movzx eax, al
0x804a091:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a094:   eb 29                           	jmp 0x804a0bf <func_1+0x800>
0x804a096:   c7 85 f8 fe ff ff fb ff ff ff   	mov dword ptr [ebp - 0x108], 0xfffffffb
0x804a0a0:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a0a3:   83 e0 01                        	and eax, 1
0x804a0a6:   85 c0                           	test eax, eax
0x804a0a8:   74 0d                           	je 0x804a0b7 <func_1+0x7f8>
0x804a0aa:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804a0ae:   74 07                           	je 0x804a0b7 <func_1+0x7f8>
0x804a0b0:   b8 01 00 00 00                  	mov eax, 1
0x804a0b5:   eb 05                           	jmp 0x804a0bc <func_1+0x7fd>
0x804a0b7:   b8 00 00 00 00                  	mov eax, 0
0x804a0bc:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a0bf:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a0c2:   88 45 ef                        	mov byte ptr [ebp - 0x11], al
0x804a0c5:   8b 85 fc fe ff ff               	mov eax, dword ptr [ebp - 0x104]
0x804a0cb:   0f be d0                        	movsx edx, al
0x804a0ce:   0f be 45 de                     	movsx eax, byte ptr [ebp - 0x22]
0x804a0d2:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x804a0d5:   0f 9e c0                        	setle al
0x804a0d8:   0f b6 c0                        	movzx eax, al
0x804a0db:   89 c1                           	mov ecx, eax
0x804a0dd:   d3 fa                           	sar edx, cl
0x804a0df:   89 d0                           	mov eax, edx
0x804a0e1:   89 85 3c ff ff ff               	mov dword ptr [ebp - 0xc4], eax
0x804a0e7:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x804a0ed:   30 45 d7                        	xor byte ptr [ebp - 0x29], al
0x804a0f0:   b8 00 00 00 00                  	mov eax, 0
0x804a0f5:   09 85 00 ff ff ff               	or dword ptr [ebp - 0x100], eax
0x804a0fb:   83 6d 84 03                     	sub dword ptr [ebp - 0x7c], 3
0x804a0ff:   83 7d 84 fa                     	cmp dword ptr [ebp - 0x7c], -6
0x804a103:   0f 8c eb fe ff ff               	jl 0x8049ff4 <func_1+0x735>
0x804a109:   80 bd 79 ff ff ff 00            	cmp byte ptr [ebp - 0x87], 0
0x804a110:   0f 94 c0                        	sete al
0x804a113:   89 c2                           	mov edx, eax
0x804a115:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a118:   21 d0                           	and eax, edx
0x804a11a:   0f be c0                        	movsx eax, al
0x804a11d:   0f b7 55 82                     	movzx edx, word ptr [ebp - 0x7e]
0x804a121:   0f be ca                        	movsx ecx, dl
0x804a124:   99                              	cdq 
0x804a125:   f7 f9                           	idiv ecx
0x804a127:   89 d0                           	mov eax, edx
0x804a129:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x804a12c:   0f 9c c0                        	setl al
0x804a12f:   0f b6 c0                        	movzx eax, al
0x804a132:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a135:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a138:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a13b:   eb 01                           	jmp 0x804a13e <func_1+0x87f>
0x804a13d:   90                              	nop 
0x804a13e:   83 45 e8 05                     	add dword ptr [ebp - 0x18], 5
0x804a142:   83 7d e8 17                     	cmp dword ptr [ebp - 0x18], 0x17
0x804a146:   0f 87 14 f9 ff ff               	ja 0x8049a60 <func_1+0x1a1>
0x804a14c:   80 bd 79 ff ff ff 05            	cmp byte ptr [ebp - 0x87], 5
0x804a153:   0f 94 c0                        	sete al
0x804a156:   0f b6 c0                        	movzx eax, al
0x804a159:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a15c:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a15f:   35 f0 b4 bd d0                  	xor eax, 0xd0bdb4f0
0x804a164:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a167:   e9 90 00 00 00                  	jmp 0x804a1fc <func_1+0x93d>
0x804a16c:   66 c7 85 5a ff ff ff 01 00      	mov word ptr [ebp - 0xa6], 1
0x804a175:   c7 85 54 ff ff ff 55 62 fe 3c   	mov dword ptr [ebp - 0xac], 0x3cfe6255
0x804a17f:   c7 85 50 ff ff ff a8 95 de 76   	mov dword ptr [ebp - 0xb0], 0x76de95a8
0x804a189:   c6 45 df fc                     	mov byte ptr [ebp - 0x21], 0xfc
0x804a18d:   eb 67                           	jmp 0x804a1f6 <func_1+0x937>
0x804a18f:   c7 85 4c ff ff ff 54 f3 dc 73   	mov dword ptr [ebp - 0xb4], 0x73dcf354
0x804a199:   66 c7 85 4a ff ff ff f1 cb      	mov word ptr [ebp - 0xb6], 0xcbf1
0x804a1a2:   c7 85 44 ff ff ff d4 40 51 37   	mov dword ptr [ebp - 0xbc], 0x375140d4
0x804a1ac:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a1b2:   3b 45 98                        	cmp eax, dword ptr [ebp - 0x68]
0x804a1b5:   0f 9f c0                        	setg al
0x804a1b8:   89 c2                           	mov edx, eax
0x804a1ba:   0f b6 45 de                     	movzx eax, byte ptr [ebp - 0x22]
0x804a1be:   01 d0                           	add eax, edx
0x804a1c0:   c0 e8 05                        	shr al, 5
0x804a1c3:   0f b6 55 df                     	movzx edx, byte ptr [ebp - 0x21]
0x804a1c7:   0f af c2                        	imul eax, edx
0x804a1ca:   c0 e8 05                        	shr al, 5
0x804a1cd:   0f b6 d0                        	movzx edx, al
0x804a1d0:   0f be 85 79 ff ff ff            	movsx eax, byte ptr [ebp - 0x87]
0x804a1d7:   29 c2                           	sub edx, eax
0x804a1d9:   89 d0                           	mov eax, edx
0x804a1db:   89 85 54 ff ff ff               	mov dword ptr [ebp - 0xac], eax
0x804a1e1:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a1e4:   21 45 f0                        	and dword ptr [ebp - 0x10], eax
0x804a1e7:   66 83 6d ce 01                  	sub word ptr [ebp - 0x32], 1
0x804a1ec:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x804a1f0:   83 c0 01                        	add eax, 1
0x804a1f3:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x804a1f6:   80 7d df 16                     	cmp byte ptr [ebp - 0x21], 0x16
0x804a1fa:   75 93                           	jne 0x804a18f <func_1+0x8d0>
0x804a1fc:   66 83 7d ce 00                  	cmp word ptr [ebp - 0x32], 0
0x804a201:   0f 95 c0                        	setne al
0x804a204:   0f b6 c0                        	movzx eax, al
0x804a207:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804a20a:   0f 9f c0                        	setg al
0x804a20d:   0f b6 c0                        	movzx eax, al
0x804a210:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a213:   0f be b5 79 ff ff ff            	movsx esi, byte ptr [ebp - 0x87]
0x804a21a:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a21d:   99                              	cdq 
0x804a21e:   f7 fe                           	idiv esi
0x804a220:   85 c0                           	test eax, eax
0x804a222:   74 14                           	je 0x804a238 <func_1+0x979>
0x804a224:   83 45 c8 01                     	add dword ptr [ebp - 0x38], 1
0x804a228:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x804a22c:   83 c0 01                        	add eax, 1
0x804a22f:   66 89 45 c6                     	mov word ptr [ebp - 0x3a], ax
0x804a233:   e9 22 04 00 00                  	jmp 0x804a65a <func_1+0xd9b>
0x804a238:   c7 85 f0 fe ff ff d6 a4 b8 d1   	mov dword ptr [ebp - 0x110], 0xd1b8a4d6
0x804a242:   c7 85 ec fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x114], 1
0x804a24c:   c7 85 e8 fe ff ff fe ff ff ff   	mov dword ptr [ebp - 0x118], 0xfffffffe
0x804a256:   c7 85 e4 fe ff ff 9f cc d3 20   	mov dword ptr [ebp - 0x11c], 0x20d3cc9f
0x804a260:   8b 85 f0 fe ff ff               	mov eax, dword ptr [ebp - 0x110]
0x804a266:   f7 d8                           	neg eax
0x804a268:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x804a26e:   8b 85 f0 fe ff ff               	mov eax, dword ptr [ebp - 0x110]
0x804a274:   89 85 ec fe ff ff               	mov dword ptr [ebp - 0x114], eax
0x804a27a:   c7 85 ec fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x114], 0
0x804a284:   b8 00 00 00 00                  	mov eax, 0
0x804a289:   09 85 e8 fe ff ff               	or dword ptr [ebp - 0x118], eax
0x804a28f:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x804a293:   0f 84 14 03 00 00               	je 0x804a5ad <func_1+0xcee>
0x804a299:   c7 85 d8 fe ff ff 13 32 97 27   	mov dword ptr [ebp - 0x128], 0x27973213
0x804a2a3:   c7 85 d4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x12c], 0
0x804a2ad:   c7 85 d0 fe ff ff f6 ff ff ff   	mov dword ptr [ebp - 0x130], 0xfffffff6
0x804a2b7:   c7 85 cc fe ff ff 48 1f 1a 31   	mov dword ptr [ebp - 0x134], 0x311a1f48
0x804a2c1:   66 83 6d c4 01                  	sub word ptr [ebp - 0x3c], 1
0x804a2c6:   83 bd e8 fe ff ff 00            	cmp dword ptr [ebp - 0x118], 0
0x804a2cd:   0f 84 86 00 00 00               	je 0x804a359 <func_1+0xa9a>
0x804a2d3:   c7 85 c0 fe ff ff ca e4 02 2e   	mov dword ptr [ebp - 0x140], 0x2e02e4ca
0x804a2dd:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x804a2e3:   89 c3                           	mov ebx, eax
0x804a2e5:   0f bf 55 82                     	movsx edx, word ptr [ebp - 0x7e]
0x804a2e9:   8b 85 c0 fe ff ff               	mov eax, dword ptr [ebp - 0x140]
0x804a2ef:   98                              	cwde 
0x804a2f0:   b9 ed 99 ff ff                  	mov ecx, 0xffff99ed
0x804a2f5:   29 c1                           	sub ecx, eax
0x804a2f7:   89 c8                           	mov eax, ecx
0x804a2f9:   0b 85 e8 fe ff ff               	or eax, dword ptr [ebp - 0x118]
0x804a2ff:   89 c1                           	mov ecx, eax
0x804a301:   0f b6 45 d7                     	movzx eax, byte ptr [ebp - 0x29]
0x804a305:   39 c1                           	cmp ecx, eax
0x804a307:   0f 95 c0                        	setne al
0x804a30a:   0f b6 c0                        	movzx eax, al
0x804a30d:   31 d0                           	xor eax, edx
0x804a30f:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a312:   0f 9d c0                        	setge al
0x804a315:   0f b6 c0                        	movzx eax, al
0x804a318:   21 d8                           	and eax, ebx
0x804a31a:   0f bf d0                        	movsx edx, ax
0x804a31d:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a320:   98                              	cwde 
0x804a321:   89 c1                           	mov ecx, eax
0x804a323:   d3 fa                           	sar edx, cl
0x804a325:   89 d0                           	mov eax, edx
0x804a327:   83 f8 22                        	cmp eax, 0x22
0x804a32a:   0f 9f c0                        	setg al
0x804a32d:   0f b6 c0                        	movzx eax, al
0x804a330:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a336:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804a33c:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x804a342:   0f b6 45 93                     	movzx eax, byte ptr [ebp - 0x6d]
0x804a346:   8d 50 ff                        	lea edx, [eax - 1]
0x804a349:   88 55 93                        	mov byte ptr [ebp - 0x6d], dl
0x804a34c:   84 c0                           	test al, al
0x804a34e:   0f 84 f7 01 00 00               	je 0x804a54b <func_1+0xc8c>
0x804a354:   e9 cd 01 00 00                  	jmp 0x804a526 <func_1+0xc67>
0x804a359:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x804a35f:   83 c8 56                        	or eax, 0x56
0x804a362:   39 85 d0 fe ff ff               	cmp dword ptr [ebp - 0x130], eax
0x804a368:   0f 9c c0                        	setl al
0x804a36b:   0f b6 c0                        	movzx eax, al
0x804a36e:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x804a374:   8b 85 f0 fe ff ff               	mov eax, dword ptr [ebp - 0x110]
0x804a37a:   0f bf d0                        	movsx edx, ax
0x804a37d:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a380:   98                              	cwde 
0x804a381:   01 d0                           	add eax, edx
0x804a383:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a386:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a389:   89 c2                           	mov edx, eax
0x804a38b:   8b 85 ec fe ff ff               	mov eax, dword ptr [ebp - 0x114]
0x804a391:   21 d0                           	and eax, edx
0x804a393:   0f b6 c0                        	movzx eax, al
0x804a396:   c1 e0 03                        	shl eax, 3
0x804a399:   39 85 d8 fe ff ff               	cmp dword ptr [ebp - 0x128], eax
0x804a39f:   0f 9f c0                        	setg al
0x804a3a2:   0f b6 c0                        	movzx eax, al
0x804a3a5:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a3a8:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a3ab:   c1 e0 06                        	shl eax, 6
0x804a3ae:   89 c2                           	mov edx, eax
0x804a3b0:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a3b3:   31 d0                           	xor eax, edx
0x804a3b5:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x804a3b8:   c7 85 c8 fe ff ff 31 ac 5d e5   	mov dword ptr [ebp - 0x138], 0xe55dac31
0x804a3c2:   c7 85 c4 fe ff ff b7 93 cb c1   	mov dword ptr [ebp - 0x13c], 0xc1cb93b7
0x804a3cc:   8b 85 c8 fe ff ff               	mov eax, dword ptr [ebp - 0x138]
0x804a3d2:   09 85 c4 fe ff ff               	or dword ptr [ebp - 0x13c], eax
0x804a3d8:   80 85 7f ff ff ff 01            	add byte ptr [ebp - 0x81], 1
0x804a3df:   0f b7 45 a2                     	movzx eax, word ptr [ebp - 0x5e]
0x804a3e3:   89 85 70 fe ff ff               	mov dword ptr [ebp - 0x190], eax
0x804a3e9:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x804a3ed:   89 85 6c fe ff ff               	mov dword ptr [ebp - 0x194], eax
0x804a3f3:   0f b6 85 7a ff ff ff            	movzx eax, byte ptr [ebp - 0x86]
0x804a3fa:   89 85 68 fe ff ff               	mov dword ptr [ebp - 0x198], eax
0x804a400:   0f bf 45 a6                     	movsx eax, word ptr [ebp - 0x5a]
0x804a404:   89 85 64 fe ff ff               	mov dword ptr [ebp - 0x19c], eax
0x804a40a:   0f be 85 7b ff ff ff            	movsx eax, byte ptr [ebp - 0x85]
0x804a411:   89 85 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], eax
0x804a417:   0f bf 85 7c ff ff ff            	movsx eax, word ptr [ebp - 0x84]
0x804a41e:   89 85 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], eax
0x804a424:   0f be 85 7e ff ff ff            	movsx eax, byte ptr [ebp - 0x82]
0x804a42b:   89 85 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], eax
0x804a431:   0f be 45 bf                     	movsx eax, byte ptr [ebp - 0x41]
0x804a435:   89 85 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], eax
0x804a43b:   0f b6 95 7f ff ff ff            	movzx edx, byte ptr [ebp - 0x81]
0x804a442:   89 95 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edx
0x804a448:   0f be 55 80                     	movsx edx, byte ptr [ebp - 0x80]
0x804a44c:   0f b7 4d c4                     	movzx ecx, word ptr [ebp - 0x3c]
0x804a450:   89 8d 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], ecx
0x804a456:   0f b7 4d c6                     	movzx ecx, word ptr [ebp - 0x3a]
0x804a45a:   0f b7 5d ce                     	movzx ebx, word ptr [ebp - 0x32]
0x804a45e:   89 9d 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], ebx
0x804a464:   0f b6 5d d7                     	movzx ebx, byte ptr [ebp - 0x29]
0x804a468:   0f b7 75 dc                     	movzx esi, word ptr [ebp - 0x24]
0x804a46c:   89 b5 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], esi
0x804a472:   0f be 75 de                     	movsx esi, byte ptr [ebp - 0x22]
0x804a476:   0f be 7d df                     	movsx edi, byte ptr [ebp - 0x21]
0x804a47a:   89 bd 40 fe ff ff               	mov dword ptr [ebp - 0x1c0], edi
0x804a480:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x804a484:   0f be 45 81                     	movsx eax, byte ptr [ebp - 0x7f]
0x804a488:   89 85 3c fe ff ff               	mov dword ptr [ebp - 0x1c4], eax
0x804a48e:   0f bf 45 82                     	movsx eax, word ptr [ebp - 0x7e]
0x804a492:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a498:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a49e:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a4a4:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804a4aa:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a4b0:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a4b6:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a4b9:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a4bc:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a4bf:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a4c5:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a4c8:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a4cb:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a4d1:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a4d4:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a4da:   52                              	push edx
0x804a4db:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804a4e1:   51                              	push ecx
0x804a4e2:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a4e5:   ff b5 48 fe ff ff               	push dword ptr [ebp - 0x1b8]
0x804a4eb:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a4ee:   53                              	push ebx
0x804a4ef:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a4f2:   ff b5 44 fe ff ff               	push dword ptr [ebp - 0x1bc]
0x804a4f8:   56                              	push esi
0x804a4f9:   ff b5 40 fe ff ff               	push dword ptr [ebp - 0x1c0]
0x804a4ff:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a502:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a505:   57                              	push edi
0x804a506:   ff b5 3c fe ff ff               	push dword ptr [ebp - 0x1c4]
0x804a50c:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a50f:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a512:   50                              	push eax
0x804a513:   e8 0e f1 ff ff                  	call 0x8049626 <set_var>
0x804a518:   81 c4 84 00 00 00               	add esp, 0x84
0x804a51e:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a521:   e9 c0 06 00 00                  	jmp 0x804abe6 <func_1+0x1327>
0x804a526:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a52c:   31 45 94                        	xor dword ptr [ebp - 0x6c], eax
0x804a52f:   8b 85 ec fe ff ff               	mov eax, dword ptr [ebp - 0x114]
0x804a535:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x804a538:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x804a53e:   98                              	cwde 
0x804a53f:   69 c0 18 08 00 00               	imul eax, eax, 0x818
0x804a545:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x804a54b:   b8 01 00 00 00                  	mov eax, 1
0x804a550:   99                              	cdq 
0x804a551:   f7 7d e0                        	idiv dword ptr [ebp - 0x20]
0x804a554:   f7 d0                           	not eax
0x804a556:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a559:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x804a55d:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a560:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x804a564:   0f be d0                        	movsx edx, al
0x804a567:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a56a:   2a 45 ef                        	sub al, byte ptr [ebp - 0x11]
0x804a56d:   0f b6 d8                        	movzx ebx, al
0x804a570:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a573:   0f b6 c0                        	movzx eax, al
0x804a576:   89 c1                           	mov ecx, eax
0x804a578:   d3 e3                           	shl ebx, cl
0x804a57a:   89 d8                           	mov eax, ebx
0x804a57c:   39 85 e4 fe ff ff               	cmp dword ptr [ebp - 0x11c], eax
0x804a582:   75 06                           	jne 0x804a58a <func_1+0xccb>
0x804a584:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x804a588:   74 07                           	je 0x804a591 <func_1+0xcd2>
0x804a58a:   b8 01 00 00 00                  	mov eax, 1
0x804a58f:   eb 05                           	jmp 0x804a596 <func_1+0xcd7>
0x804a591:   b8 00 00 00 00                  	mov eax, 0
0x804a596:   0f be c0                        	movsx eax, al
0x804a599:   89 c1                           	mov ecx, eax
0x804a59b:   d3 fa                           	sar edx, cl
0x804a59d:   89 d0                           	mov eax, edx
0x804a59f:   83 f8 05                        	cmp eax, 5
0x804a5a2:   0f 94 c0                        	sete al
0x804a5a5:   20 45 bf                        	and byte ptr [ebp - 0x41], al
0x804a5a8:   e9 9f 00 00 00                  	jmp 0x804a64c <func_1+0xd8d>
0x804a5ad:   c7 85 e0 fe ff ff 19 8f 7f c7   	mov dword ptr [ebp - 0x120], 0xc77f8f19
0x804a5b7:   c7 85 dc fe ff ff fb ff ff ff   	mov dword ptr [ebp - 0x124], 0xfffffffb
0x804a5c1:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a5c7:   89 c2                           	mov edx, eax
0x804a5c9:   81 75 98 6b f8 00 00            	xor dword ptr [ebp - 0x68], 0xf86b
0x804a5d0:   8b 85 e4 fe ff ff               	mov eax, dword ptr [ebp - 0x11c]
0x804a5d6:   89 85 dc fe ff ff               	mov dword ptr [ebp - 0x124], eax
0x804a5dc:   8b 85 dc fe ff ff               	mov eax, dword ptr [ebp - 0x124]
0x804a5e2:   3b 45 94                        	cmp eax, dword ptr [ebp - 0x6c]
0x804a5e5:   0f 9d c0                        	setge al
0x804a5e8:   0f b6 c0                        	movzx eax, al
0x804a5eb:   0b 85 e8 fe ff ff               	or eax, dword ptr [ebp - 0x118]
0x804a5f1:   25 2a b1 00 00                  	and eax, 0xb12a
0x804a5f6:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x804a5f9:   74 07                           	je 0x804a602 <func_1+0xd43>
0x804a5fb:   b8 01 00 00 00                  	mov eax, 1
0x804a600:   eb 05                           	jmp 0x804a607 <func_1+0xd48>
0x804a602:   b8 00 00 00 00                  	mov eax, 0
0x804a607:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a60a:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a60d:   89 c1                           	mov ecx, eax
0x804a60f:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804a613:   29 c1                           	sub ecx, eax
0x804a615:   89 c8                           	mov eax, ecx
0x804a617:   01 d0                           	add eax, edx
0x804a619:   89 c2                           	mov edx, eax
0x804a61b:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a621:   09 d0                           	or eax, edx
0x804a623:   0f be d0                        	movsx edx, al
0x804a626:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x804a62a:   0f be c0                        	movsx eax, al
0x804a62d:   89 c1                           	mov ecx, eax
0x804a62f:   d3 fa                           	sar edx, cl
0x804a631:   89 d0                           	mov eax, edx
0x804a633:   66 c1 e8 0e                     	shr ax, 0xe
0x804a637:   0f b7 c0                        	movzx eax, ax
0x804a63a:   39 85 e0 fe ff ff               	cmp dword ptr [ebp - 0x120], eax
0x804a640:   0f 9e c0                        	setle al
0x804a643:   0f b6 c0                        	movzx eax, al
0x804a646:   31 85 f0 fe ff ff               	xor dword ptr [ebp - 0x110], eax
0x804a64c:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x804a650:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a653:   81 4d d8 18 71 93 07            	or dword ptr [ebp - 0x28], 0x7937118
0x804a65a:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a65d:   89 c1                           	mov ecx, eax
0x804a65f:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a665:   0f be c0                        	movsx eax, al
0x804a668:   ba 01 00 00 00                  	mov edx, 1
0x804a66d:   29 c2                           	sub edx, eax
0x804a66f:   89 d0                           	mov eax, edx
0x804a671:   3d 2c 5c 00 00                  	cmp eax, 0x5c2c
0x804a676:   0f 9e c0                        	setle al
0x804a679:   20 45 df                        	and byte ptr [ebp - 0x21], al
0x804a67c:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x804a680:   0a 85 6f ff ff ff               	or al, byte ptr [ebp - 0x91]
0x804a686:   89 c2                           	mov edx, eax
0x804a688:   0f b6 c1                        	movzx eax, cl
0x804a68b:   f6 f2                           	div dl
0x804a68d:   0f b6 c4                        	movzx eax, ah
0x804a690:   84 c0                           	test al, al
0x804a692:   75 06                           	jne 0x804a69a <func_1+0xddb>
0x804a694:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x804a698:   74 07                           	je 0x804a6a1 <func_1+0xde2>
0x804a69a:   b8 01 00 00 00                  	mov eax, 1
0x804a69f:   eb 05                           	jmp 0x804a6a6 <func_1+0xde7>
0x804a6a1:   b8 00 00 00 00                  	mov eax, 0
0x804a6a6:   38 45 d7                        	cmp byte ptr [ebp - 0x29], al
0x804a6a9:   0f 84 c8 00 00 00               	je 0x804a777 <func_1+0xeb8>
0x804a6af:   66 c7 85 ae fe ff ff 34 a6      	mov word ptr [ebp - 0x152], 0xa634
0x804a6b8:   c7 85 a8 fe ff ff 10 8b 1b 1d   	mov dword ptr [ebp - 0x158], 0x1d1b8b10
0x804a6c2:   c7 85 a4 fe ff ff f9 ff ff ff   	mov dword ptr [ebp - 0x15c], 0xfffffff9
0x804a6cc:   c7 85 a0 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x160], 0xffffffff
0x804a6d6:   83 6d ac 01                     	sub dword ptr [ebp - 0x54], 1
0x804a6da:   8b 85 a4 fe ff ff               	mov eax, dword ptr [ebp - 0x15c]
0x804a6e0:   84 c0                           	test al, al
0x804a6e2:   0f 95 c0                        	setne al
0x804a6e5:   0f b6 c0                        	movzx eax, al
0x804a6e8:   0f bf d0                        	movsx edx, ax
0x804a6eb:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a6ee:   98                              	cwde 
0x804a6ef:   89 c1                           	mov ecx, eax
0x804a6f1:   d3 fa                           	sar edx, cl
0x804a6f3:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a6f7:   0f b6 c0                        	movzx eax, al
0x804a6fa:   bb 02 00 00 00                  	mov ebx, 2
0x804a6ff:   89 c1                           	mov ecx, eax
0x804a701:   d3 e3                           	shl ebx, cl
0x804a703:   89 d8                           	mov eax, ebx
0x804a705:   83 f8 06                        	cmp eax, 6
0x804a708:   0f 9e c0                        	setle al
0x804a70b:   0f b6 c0                        	movzx eax, al
0x804a70e:   39 c2                           	cmp edx, eax
0x804a710:   0f 9e c0                        	setle al
0x804a713:   0f b6 c0                        	movzx eax, al
0x804a716:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a719:   66 83 7d dc 00                  	cmp word ptr [ebp - 0x24], 0
0x804a71e:   75 34                           	jne 0x804a754 <func_1+0xe95>
0x804a720:   8b 85 a4 fe ff ff               	mov eax, dword ptr [ebp - 0x15c]
0x804a726:   89 c2                           	mov edx, eax
0x804a728:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a72e:   29 c2                           	sub edx, eax
0x804a730:   89 d0                           	mov eax, edx
0x804a732:   0f b7 d0                        	movzx edx, ax
0x804a735:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x804a739:   0f af c2                        	imul eax, edx
0x804a73c:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a73f:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a742:   66 c1 f8 09                     	sar ax, 9
0x804a746:   98                              	cwde 
0x804a747:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a74a:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a74d:   0b 45 d0                        	or eax, dword ptr [ebp - 0x30]
0x804a750:   85 c0                           	test eax, eax
0x804a752:   74 07                           	je 0x804a75b <func_1+0xe9c>
0x804a754:   b8 01 00 00 00                  	mov eax, 1
0x804a759:   eb 05                           	jmp 0x804a760 <func_1+0xea1>
0x804a75b:   b8 00 00 00 00                  	mov eax, 0
0x804a760:   89 c2                           	mov edx, eax
0x804a762:   b8 ac ff ff ff                  	mov eax, 0xffffffac
0x804a767:   0f b6 c0                        	movzx eax, al
0x804a76a:   f6 f2                           	div dl
0x804a76c:   0f b6 c0                        	movzx eax, al
0x804a76f:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a772:   e9 f4 00 00 00                  	jmp 0x804a86b <func_1+0xfac>
0x804a777:   66 c7 85 be fe ff ff 69 dc      	mov word ptr [ebp - 0x142], 0xdc69
0x804a780:   c7 85 b8 fe ff ff 3f b7 f4 83   	mov dword ptr [ebp - 0x148], 0x83f4b73f
0x804a78a:   c7 85 b4 fe ff ff e3 8b 77 79   	mov dword ptr [ebp - 0x14c], 0x79778be3
0x804a794:   c7 85 b0 fe ff ff 07 00 00 00   	mov dword ptr [ebp - 0x150], 7
0x804a79e:   0f be 45 81                     	movsx eax, byte ptr [ebp - 0x7f]
0x804a7a2:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x804a7a5:   0f 9f c0                        	setg al
0x804a7a8:   0f b6 c0                        	movzx eax, al
0x804a7ab:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a7ae:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a7b4:   0f b7 d0                        	movzx edx, ax
0x804a7b7:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a7bb:   01 d0                           	add eax, edx
0x804a7bd:   83 f8 01                        	cmp eax, 1
0x804a7c0:   75 06                           	jne 0x804a7c8 <func_1+0xf09>
0x804a7c2:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x804a7c6:   74 07                           	je 0x804a7cf <func_1+0xf10>
0x804a7c8:   b8 01 00 00 00                  	mov eax, 1
0x804a7cd:   eb 05                           	jmp 0x804a7d4 <func_1+0xf15>
0x804a7cf:   b8 00 00 00 00                  	mov eax, 0
0x804a7d4:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a7d7:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a7da:   66 89 45 ce                     	mov word ptr [ebp - 0x32], ax
0x804a7de:   0f b7 5d ce                     	movzx ebx, word ptr [ebp - 0x32]
0x804a7e2:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a7e8:   31 85 b8 fe ff ff               	xor dword ptr [ebp - 0x148], eax
0x804a7ee:   8b 85 b8 fe ff ff               	mov eax, dword ptr [ebp - 0x148]
0x804a7f4:   89 c1                           	mov ecx, eax
0x804a7f6:   66 0f be d1                     	movsx dx, cl
0x804a7fa:   89 d0                           	mov eax, edx
0x804a7fc:   c1 e0 02                        	shl eax, 2
0x804a7ff:   01 d0                           	add eax, edx
0x804a801:   c1 e0 04                        	shl eax, 4
0x804a804:   29 d0                           	sub eax, edx
0x804a806:   66 c1 e8 08                     	shr ax, 8
0x804a80a:   89 c2                           	mov edx, eax
0x804a80c:   c0 fa 02                        	sar dl, 2
0x804a80f:   89 c8                           	mov eax, ecx
0x804a811:   c0 f8 07                        	sar al, 7
0x804a814:   29 c2                           	sub edx, eax
0x804a816:   89 d0                           	mov eax, edx
0x804a818:   01 c0                           	add eax, eax
0x804a81a:   01 d0                           	add eax, edx
0x804a81c:   c1 e0 02                        	shl eax, 2
0x804a81f:   01 d0                           	add eax, edx
0x804a821:   29 c1                           	sub ecx, eax
0x804a823:   89 ca                           	mov edx, ecx
0x804a825:   66 0f be c2                     	movsx ax, dl
0x804a829:   0f b7 c0                        	movzx eax, ax
0x804a82c:   0f b6 4d 93                     	movzx ecx, byte ptr [ebp - 0x6d]
0x804a830:   99                              	cdq 
0x804a831:   f7 f9                           	idiv ecx
0x804a833:   89 d0                           	mov eax, edx
0x804a835:   39 85 64 ff ff ff               	cmp dword ptr [ebp - 0x9c], eax
0x804a83b:   0f 9c c0                        	setl al
0x804a83e:   0f b6 d0                        	movzx edx, al
0x804a841:   0f b7 45 82                     	movzx eax, word ptr [ebp - 0x7e]
0x804a845:   0f be c0                        	movsx eax, al
0x804a848:   0f af c2                        	imul eax, edx
0x804a84b:   39 85 b4 fe ff ff               	cmp dword ptr [ebp - 0x14c], eax
0x804a851:   0f 92 c0                        	setb al
0x804a854:   0f b6 c0                        	movzx eax, al
0x804a857:   39 c3                           	cmp ebx, eax
0x804a859:   0f 9e c0                        	setle al
0x804a85c:   0f b6 c0                        	movzx eax, al
0x804a85f:   89 85 b0 fe ff ff               	mov dword ptr [ebp - 0x150], eax
0x804a865:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a868:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a86b:   0f be 85 79 ff ff ff            	movsx eax, byte ptr [ebp - 0x87]
0x804a872:   31 85 68 ff ff ff               	xor dword ptr [ebp - 0x98], eax
0x804a878:   b8 31 00 00 00                  	mov eax, 0x31
0x804a87d:   66 21 85 7c ff ff ff            	and word ptr [ebp - 0x84], ax
0x804a884:   0f bf 95 7c ff ff ff            	movsx edx, word ptr [ebp - 0x84]
0x804a88b:   0f b6 45 d7                     	movzx eax, byte ptr [ebp - 0x29]
0x804a88f:   21 d0                           	and eax, edx
0x804a891:   3d c3 00 00 00                  	cmp eax, 0xc3
0x804a896:   0f 9e c0                        	setle al
0x804a899:   0f b6 c0                        	movzx eax, al
0x804a89c:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x804a89f:   7d 07                           	jge 0x804a8a8 <func_1+0xfe9>
0x804a8a1:   ba 6b a4 cf c4                  	mov edx, 0xc4cfa46b
0x804a8a6:   eb 05                           	jmp 0x804a8ad <func_1+0xfee>
0x804a8a8:   ba 6a a4 cf c4                  	mov edx, 0xc4cfa46a
0x804a8ad:   83 6d c8 01                     	sub dword ptr [ebp - 0x38], 1
0x804a8b1:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a8b4:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a8b7:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a8ba:   09 d0                           	or eax, edx
0x804a8bc:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a8bf:   c7 85 9c fe ff ff 05 00 00 00   	mov dword ptr [ebp - 0x164], 5
0x804a8c9:   c7 85 98 fe ff ff a6 32 87 b8   	mov dword ptr [ebp - 0x168], 0xb88732a6
0x804a8d3:   c7 85 94 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x16c], 1
0x804a8dd:   c7 85 90 fe ff ff 35 16 bb 03   	mov dword ptr [ebp - 0x170], 0x3bb1635
0x804a8e7:   c7 85 8c fe ff ff a4 81 fc ae   	mov dword ptr [ebp - 0x174], 0xaefc81a4
0x804a8f1:   0f be 45 de                     	movsx eax, byte ptr [ebp - 0x22]
0x804a8f5:   21 45 b0                        	and dword ptr [ebp - 0x50], eax
0x804a8f8:   0f b6 85 7a ff ff ff            	movzx eax, byte ptr [ebp - 0x86]
0x804a8ff:   83 e8 01                        	sub eax, 1
0x804a902:   88 85 7a ff ff ff               	mov byte ptr [ebp - 0x86], al
0x804a908:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x804a90c:   0f 94 c0                        	sete al
0x804a90f:   0f b6 c0                        	movzx eax, al
0x804a912:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a915:   0f be 45 80                     	movsx eax, byte ptr [ebp - 0x80]
0x804a919:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a91c:   75 07                           	jne 0x804a925 <func_1+0x1066>
0x804a91e:   b8 7a 23 00 00                  	mov eax, 0x237a
0x804a923:   eb 05                           	jmp 0x804a92a <func_1+0x106b>
0x804a925:   b8 bd 11 00 00                  	mov eax, 0x11bd
0x804a92a:   8b 55 8c                        	mov edx, dword ptr [ebp - 0x74]
0x804a92d:   89 d7                           	mov edi, edx
0x804a92f:   ba 00 00 00 00                  	mov edx, 0
0x804a934:   66 f7 f7                        	div di
0x804a937:   66 85 c0                        	test ax, ax
0x804a93a:   75 0b                           	jne 0x804a947 <func_1+0x1088>
0x804a93c:   66 83 7d c6 00                  	cmp word ptr [ebp - 0x3a], 0
0x804a941:   0f 84 80 00 00 00               	je 0x804a9c7 <func_1+0x1108>
0x804a947:   c7 85 7c fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x184], 0
0x804a951:   c7 85 78 fe ff ff e3 2e 0d f1   	mov dword ptr [ebp - 0x188], 0xf10d2ee3
0x804a95b:   0f b6 85 7a ff ff ff            	movzx eax, byte ptr [ebp - 0x86]
0x804a962:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a965:   8b 85 9c fe ff ff               	mov eax, dword ptr [ebp - 0x164]
0x804a96b:   66 98                           	cbw 
0x804a96d:   ba 09 00 00 00                  	mov edx, 9
0x804a972:   29 c2                           	sub edx, eax
0x804a974:   89 d0                           	mov eax, edx
0x804a976:   0f bf d0                        	movsx edx, ax
0x804a979:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a97c:   89 c3                           	mov ebx, eax
0x804a97e:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a982:   89 c1                           	mov ecx, eax
0x804a984:   89 d8                           	mov eax, ebx
0x804a986:   0f af c1                        	imul eax, ecx
0x804a989:   0f be d8                        	movsx ebx, al
0x804a98c:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a98f:   0f be c0                        	movsx eax, al
0x804a992:   89 c1                           	mov ecx, eax
0x804a994:   d3 fb                           	sar ebx, cl
0x804a996:   89 d8                           	mov eax, ebx
0x804a998:   89 85 7c fe ff ff               	mov dword ptr [ebp - 0x184], eax
0x804a99e:   8b 85 7c fe ff ff               	mov eax, dword ptr [ebp - 0x184]
0x804a9a4:   83 c0 03                        	add eax, 3
0x804a9a7:   0f bf c8                        	movsx ecx, ax
0x804a9aa:   89 d0                           	mov eax, edx
0x804a9ac:   99                              	cdq 
0x804a9ad:   f7 f9                           	idiv ecx
0x804a9af:   85 c0                           	test eax, eax
0x804a9b1:   75 07                           	jne 0x804a9ba <func_1+0x10fb>
0x804a9b3:   83 bd 8c fe ff ff 00            	cmp dword ptr [ebp - 0x174], 0
0x804a9ba:   b8 00 00 00 00                  	mov eax, 0
0x804a9bf:   09 45 88                        	or dword ptr [ebp - 0x78], eax
0x804a9c2:   e9 dd 00 00 00                  	jmp 0x804aaa4 <func_1+0x11e5>
0x804a9c7:   c6 85 8b fe ff ff 00            	mov byte ptr [ebp - 0x175], 0
0x804a9ce:   c7 85 84 fe ff ff 94 9d d5 7a   	mov dword ptr [ebp - 0x17c], 0x7ad59d94
0x804a9d8:   c7 85 80 fe ff ff 85 9e ec b2   	mov dword ptr [ebp - 0x180], 0xb2ec9e85
0x804a9e2:   66 83 6d a4 01                  	sub word ptr [ebp - 0x5c], 1
0x804a9e7:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a9ed:   89 85 8c fe ff ff               	mov dword ptr [ebp - 0x174], eax
0x804a9f3:   83 bd 8c fe ff ff 00            	cmp dword ptr [ebp - 0x174], 0
0x804a9fa:   74 04                           	je 0x804aa00 <func_1+0x1141>
0x804a9fc:   80 7d 81 00                     	cmp byte ptr [ebp - 0x7f], 0
0x804aa00:   0f be b5 8b fe ff ff            	movsx esi, byte ptr [ebp - 0x175]
0x804aa07:   b8 fb ff ff ff                  	mov eax, 0xfffffffb
0x804aa0c:   ba 00 00 00 00                  	mov edx, 0
0x804aa11:   f7 f6                           	div esi
0x804aa13:   33 45 c8                        	xor eax, dword ptr [ebp - 0x38]
0x804aa16:   83 f8 f9                        	cmp eax, -7
0x804aa19:   0f 94 c0                        	sete al
0x804aa1c:   0f b6 c0                        	movzx eax, al
0x804aa1f:   89 85 84 fe ff ff               	mov dword ptr [ebp - 0x17c], eax
0x804aa25:   83 bd 70 ff ff ff 00            	cmp dword ptr [ebp - 0x90], 0
0x804aa2c:   75 07                           	jne 0x804aa35 <func_1+0x1176>
0x804aa2e:   b8 01 00 00 00                  	mov eax, 1
0x804aa33:   eb 05                           	jmp 0x804aa3a <func_1+0x117b>
0x804aa35:   b8 00 00 00 00                  	mov eax, 0
0x804aa3a:   23 85 80 fe ff ff               	and eax, dword ptr [ebp - 0x180]
0x804aa40:   85 c0                           	test eax, eax
0x804aa42:   74 04                           	je 0x804aa48 <func_1+0x1189>
0x804aa44:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804aa48:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x804aa4c:   0f 9f c0                        	setg al
0x804aa4f:   0f b6 d0                        	movzx edx, al
0x804aa52:   0f be 85 79 ff ff ff            	movsx eax, byte ptr [ebp - 0x87]
0x804aa59:   39 c2                           	cmp edx, eax
0x804aa5b:   0f 9d c0                        	setge al
0x804aa5e:   0f b6 d0                        	movzx edx, al
0x804aa61:   0f be 85 6f ff ff ff            	movsx eax, byte ptr [ebp - 0x91]
0x804aa68:   89 c1                           	mov ecx, eax
0x804aa6a:   d3 e2                           	shl edx, cl
0x804aa6c:   89 d0                           	mov eax, edx
0x804aa6e:   66 31 45 a6                     	xor word ptr [ebp - 0x5a], ax
0x804aa72:   0f bf 55 a6                     	movsx edx, word ptr [ebp - 0x5a]
0x804aa76:   0f be 45 df                     	movsx eax, byte ptr [ebp - 0x21]
0x804aa7a:   31 d0                           	xor eax, edx
0x804aa7c:   09 85 68 ff ff ff               	or dword ptr [ebp - 0x98], eax
0x804aa82:   66 83 45 a2 01                  	add word ptr [ebp - 0x5e], 1
0x804aa87:   66 c7 45 dc 00 00               	mov word ptr [ebp - 0x24], 0
0x804aa8d:   eb 0e                           	jmp 0x804aa9d <func_1+0x11de>
0x804aa8f:   8b 85 84 fe ff ff               	mov eax, dword ptr [ebp - 0x17c]
0x804aa95:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804aa98:   66 83 45 dc 09                  	add word ptr [ebp - 0x24], 9
0x804aa9d:   66 83 7d dc 10                  	cmp word ptr [ebp - 0x24], 0x10
0x804aaa2:   76 eb                           	jbe 0x804aa8f <func_1+0x11d0>
0x804aaa4:   0f b7 45 a2                     	movzx eax, word ptr [ebp - 0x5e]
0x804aaa8:   89 85 70 fe ff ff               	mov dword ptr [ebp - 0x190], eax
0x804aaae:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x804aab2:   89 85 6c fe ff ff               	mov dword ptr [ebp - 0x194], eax
0x804aab8:   0f b6 85 7a ff ff ff            	movzx eax, byte ptr [ebp - 0x86]
0x804aabf:   89 85 68 fe ff ff               	mov dword ptr [ebp - 0x198], eax
0x804aac5:   0f bf 45 a6                     	movsx eax, word ptr [ebp - 0x5a]
0x804aac9:   89 85 64 fe ff ff               	mov dword ptr [ebp - 0x19c], eax
0x804aacf:   0f be 85 7b ff ff ff            	movsx eax, byte ptr [ebp - 0x85]
0x804aad6:   89 85 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], eax
0x804aadc:   0f bf 85 7c ff ff ff            	movsx eax, word ptr [ebp - 0x84]
0x804aae3:   89 85 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], eax
0x804aae9:   0f be 85 7e ff ff ff            	movsx eax, byte ptr [ebp - 0x82]
0x804aaf0:   89 85 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], eax
0x804aaf6:   0f be 45 bf                     	movsx eax, byte ptr [ebp - 0x41]
0x804aafa:   89 85 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], eax
0x804ab00:   0f b6 95 7f ff ff ff            	movzx edx, byte ptr [ebp - 0x81]
0x804ab07:   89 95 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edx
0x804ab0d:   0f be 55 80                     	movsx edx, byte ptr [ebp - 0x80]
0x804ab11:   0f b7 4d c4                     	movzx ecx, word ptr [ebp - 0x3c]
0x804ab15:   89 8d 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], ecx
0x804ab1b:   0f b7 4d c6                     	movzx ecx, word ptr [ebp - 0x3a]
0x804ab1f:   0f b7 5d ce                     	movzx ebx, word ptr [ebp - 0x32]
0x804ab23:   89 9d 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], ebx
0x804ab29:   0f b6 5d d7                     	movzx ebx, byte ptr [ebp - 0x29]
0x804ab2d:   0f b7 75 dc                     	movzx esi, word ptr [ebp - 0x24]
0x804ab31:   89 b5 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], esi
0x804ab37:   0f be 75 de                     	movsx esi, byte ptr [ebp - 0x22]
0x804ab3b:   0f be 7d df                     	movsx edi, byte ptr [ebp - 0x21]
0x804ab3f:   89 bd 40 fe ff ff               	mov dword ptr [ebp - 0x1c0], edi
0x804ab45:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x804ab49:   0f be 45 81                     	movsx eax, byte ptr [ebp - 0x7f]
0x804ab4d:   89 85 3c fe ff ff               	mov dword ptr [ebp - 0x1c4], eax
0x804ab53:   0f bf 45 82                     	movsx eax, word ptr [ebp - 0x7e]
0x804ab57:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804ab5d:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804ab63:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804ab69:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804ab6f:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804ab75:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804ab7b:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804ab7e:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804ab81:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804ab84:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804ab8a:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804ab8d:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804ab90:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804ab96:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804ab99:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804ab9f:   52                              	push edx
0x804aba0:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804aba6:   51                              	push ecx
0x804aba7:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804abaa:   ff b5 48 fe ff ff               	push dword ptr [ebp - 0x1b8]
0x804abb0:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804abb3:   53                              	push ebx
0x804abb4:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804abb7:   ff b5 44 fe ff ff               	push dword ptr [ebp - 0x1bc]
0x804abbd:   56                              	push esi
0x804abbe:   ff b5 40 fe ff ff               	push dword ptr [ebp - 0x1c0]
0x804abc4:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804abc7:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804abca:   57                              	push edi
0x804abcb:   ff b5 3c fe ff ff               	push dword ptr [ebp - 0x1c4]
0x804abd1:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804abd4:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804abd7:   50                              	push eax
0x804abd8:   e8 49 ea ff ff                  	call 0x8049626 <set_var>
0x804abdd:   81 c4 84 00 00 00               	add esp, 0x84
0x804abe3:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804abe6:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804abe9:   5b                              	pop ebx
0x804abea:   5e                              	pop esi
0x804abeb:   5f                              	pop edi
0x804abec:   5d                              	pop ebp
0x804abed:   c3                              	ret 
; function: main at 0x804abee -- 0x804b06a
0x804abee:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804abf2:   83 e4 f0                        	and esp, 0xfffffff0
0x804abf5:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804abf8:   55                              	push ebp
0x804abf9:   89 e5                           	mov ebp, esp
0x804abfb:   53                              	push ebx
0x804abfc:   51                              	push ecx
0x804abfd:   83 ec 10                        	sub esp, 0x10
0x804ac00:   e8 8b d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ac05:   81 c3 fb 33 00 00               	add ebx, 0x33fb
0x804ac0b:   89 c8                           	mov eax, ecx
0x804ac0d:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804ac14:   83 38 02                        	cmp dword ptr [eax], 2
0x804ac17:   75 26                           	jne 0x804ac3f <main+0x51>
0x804ac19:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804ac1c:   83 c0 04                        	add eax, 4
0x804ac1f:   8b 00                           	mov eax, dword ptr [eax]
0x804ac21:   83 ec 08                        	sub esp, 8
0x804ac24:   8d 93 58 d1 ff ff               	lea edx, [ebx - 0x2ea8]
0x804ac2a:   52                              	push edx
0x804ac2b:   50                              	push eax
0x804ac2c:   e8 cf d6 ff ff                  	call 0x8048300 <strcmp>
0x804ac31:   83 c4 10                        	add esp, 0x10
0x804ac34:   85 c0                           	test eax, eax
0x804ac36:   75 07                           	jne 0x804ac3f <main+0x51>
0x804ac38:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804ac3f:   e8 12 d8 ff ff                  	call 0x8048456 <platform_main_begin>
0x804ac44:   e8 22 e8 ff ff                  	call 0x804946b <crc32_gentab>
0x804ac49:   e8 71 ec ff ff                  	call 0x80498bf <func_1>
0x804ac4e:   0f b7 83 24 00 00 00            	movzx eax, word ptr [ebx + 0x24]
0x804ac55:   98                              	cwde 
0x804ac56:   83 ec 04                        	sub esp, 4
0x804ac59:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac5c:   8d 93 5a d1 ff ff               	lea edx, [ebx - 0x2ea6]
0x804ac62:   52                              	push edx
0x804ac63:   50                              	push eax
0x804ac64:   e8 0e e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac69:   83 c4 10                        	add esp, 0x10
0x804ac6c:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804ac72:   83 ec 04                        	sub esp, 4
0x804ac75:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac78:   8d 93 5e d1 ff ff               	lea edx, [ebx - 0x2ea2]
0x804ac7e:   52                              	push edx
0x804ac7f:   50                              	push eax
0x804ac80:   e8 f2 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac85:   83 c4 10                        	add esp, 0x10
0x804ac88:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804ac8e:   89 c2                           	mov edx, eax
0x804ac90:   83 ec 04                        	sub esp, 4
0x804ac93:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac96:   8d 83 63 d1 ff ff               	lea eax, [ebx - 0x2e9d]
0x804ac9c:   50                              	push eax
0x804ac9d:   52                              	push edx
0x804ac9e:   e8 d4 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804aca3:   83 c4 10                        	add esp, 0x10
0x804aca6:   0f b6 83 30 00 00 00            	movzx eax, byte ptr [ebx + 0x30]
0x804acad:   0f be c0                        	movsx eax, al
0x804acb0:   83 ec 04                        	sub esp, 4
0x804acb3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acb6:   8d 93 68 d1 ff ff               	lea edx, [ebx - 0x2e98]
0x804acbc:   52                              	push edx
0x804acbd:   50                              	push eax
0x804acbe:   e8 b4 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acc3:   83 c4 10                        	add esp, 0x10
0x804acc6:   0f b6 83 31 00 00 00            	movzx eax, byte ptr [ebx + 0x31]
0x804accd:   0f b6 c0                        	movzx eax, al
0x804acd0:   83 ec 04                        	sub esp, 4
0x804acd3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acd6:   8d 93 6d d1 ff ff               	lea edx, [ebx - 0x2e93]
0x804acdc:   52                              	push edx
0x804acdd:   50                              	push eax
0x804acde:   e8 94 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ace3:   83 c4 10                        	add esp, 0x10
0x804ace6:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804acec:   83 ec 04                        	sub esp, 4
0x804acef:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acf2:   8d 93 72 d1 ff ff               	lea edx, [ebx - 0x2e8e]
0x804acf8:   52                              	push edx
0x804acf9:   50                              	push eax
0x804acfa:   e8 78 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acff:   83 c4 10                        	add esp, 0x10
0x804ad02:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804ad08:   89 c2                           	mov edx, eax
0x804ad0a:   83 ec 04                        	sub esp, 4
0x804ad0d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad10:   8d 83 77 d1 ff ff               	lea eax, [ebx - 0x2e89]
0x804ad16:   50                              	push eax
0x804ad17:   52                              	push edx
0x804ad18:   e8 5a e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad1d:   83 c4 10                        	add esp, 0x10
0x804ad20:   0f b6 83 3c 00 00 00            	movzx eax, byte ptr [ebx + 0x3c]
0x804ad27:   0f be c0                        	movsx eax, al
0x804ad2a:   83 ec 04                        	sub esp, 4
0x804ad2d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad30:   8d 93 7c d1 ff ff               	lea edx, [ebx - 0x2e84]
0x804ad36:   52                              	push edx
0x804ad37:   50                              	push eax
0x804ad38:   e8 3a e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad3d:   83 c4 10                        	add esp, 0x10
0x804ad40:   0f b6 83 3d 00 00 00            	movzx eax, byte ptr [ebx + 0x3d]
0x804ad47:   0f be c0                        	movsx eax, al
0x804ad4a:   83 ec 04                        	sub esp, 4
0x804ad4d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad50:   8d 93 81 d1 ff ff               	lea edx, [ebx - 0x2e7f]
0x804ad56:   52                              	push edx
0x804ad57:   50                              	push eax
0x804ad58:   e8 1a e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad5d:   83 c4 10                        	add esp, 0x10
0x804ad60:   0f b7 83 3e 00 00 00            	movzx eax, word ptr [ebx + 0x3e]
0x804ad67:   0f b7 c0                        	movzx eax, ax
0x804ad6a:   83 ec 04                        	sub esp, 4
0x804ad6d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad70:   8d 93 86 d1 ff ff               	lea edx, [ebx - 0x2e7a]
0x804ad76:   52                              	push edx
0x804ad77:   50                              	push eax
0x804ad78:   e8 fa e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad7d:   83 c4 10                        	add esp, 0x10
0x804ad80:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804ad86:   89 c2                           	mov edx, eax
0x804ad88:   83 ec 04                        	sub esp, 4
0x804ad8b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad8e:   8d 83 8b d1 ff ff               	lea eax, [ebx - 0x2e75]
0x804ad94:   50                              	push eax
0x804ad95:   52                              	push edx
0x804ad96:   e8 dc e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad9b:   83 c4 10                        	add esp, 0x10
0x804ad9e:   0f b6 83 44 00 00 00            	movzx eax, byte ptr [ebx + 0x44]
0x804ada5:   0f b6 c0                        	movzx eax, al
0x804ada8:   83 ec 04                        	sub esp, 4
0x804adab:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adae:   8d 93 91 d1 ff ff               	lea edx, [ebx - 0x2e6f]
0x804adb4:   52                              	push edx
0x804adb5:   50                              	push eax
0x804adb6:   e8 bc e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adbb:   83 c4 10                        	add esp, 0x10
0x804adbe:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804adc4:   89 c2                           	mov edx, eax
0x804adc6:   83 ec 04                        	sub esp, 4
0x804adc9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adcc:   8d 83 97 d1 ff ff               	lea eax, [ebx - 0x2e69]
0x804add2:   50                              	push eax
0x804add3:   52                              	push edx
0x804add4:   e8 9e e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804add9:   83 c4 10                        	add esp, 0x10
0x804addc:   0f b7 83 4c 00 00 00            	movzx eax, word ptr [ebx + 0x4c]
0x804ade3:   0f b7 c0                        	movzx eax, ax
0x804ade6:   83 ec 04                        	sub esp, 4
0x804ade9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adec:   8d 93 9d d1 ff ff               	lea edx, [ebx - 0x2e63]
0x804adf2:   52                              	push edx
0x804adf3:   50                              	push eax
0x804adf4:   e8 7e e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adf9:   83 c4 10                        	add esp, 0x10
0x804adfc:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804ae02:   83 ec 04                        	sub esp, 4
0x804ae05:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae08:   8d 93 a3 d1 ff ff               	lea edx, [ebx - 0x2e5d]
0x804ae0e:   52                              	push edx
0x804ae0f:   50                              	push eax
0x804ae10:   e8 62 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae15:   83 c4 10                        	add esp, 0x10
0x804ae18:   0f b7 83 54 00 00 00            	movzx eax, word ptr [ebx + 0x54]
0x804ae1f:   0f b7 c0                        	movzx eax, ax
0x804ae22:   83 ec 04                        	sub esp, 4
0x804ae25:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae28:   8d 93 a9 d1 ff ff               	lea edx, [ebx - 0x2e57]
0x804ae2e:   52                              	push edx
0x804ae2f:   50                              	push eax
0x804ae30:   e8 42 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae35:   83 c4 10                        	add esp, 0x10
0x804ae38:   0f b7 83 56 00 00 00            	movzx eax, word ptr [ebx + 0x56]
0x804ae3f:   0f b7 c0                        	movzx eax, ax
0x804ae42:   83 ec 04                        	sub esp, 4
0x804ae45:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae48:   8d 93 af d1 ff ff               	lea edx, [ebx - 0x2e51]
0x804ae4e:   52                              	push edx
0x804ae4f:   50                              	push eax
0x804ae50:   e8 22 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae55:   83 c4 10                        	add esp, 0x10
0x804ae58:   0f b6 83 58 00 00 00            	movzx eax, byte ptr [ebx + 0x58]
0x804ae5f:   0f be c0                        	movsx eax, al
0x804ae62:   83 ec 04                        	sub esp, 4
0x804ae65:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae68:   8d 93 b5 d1 ff ff               	lea edx, [ebx - 0x2e4b]
0x804ae6e:   52                              	push edx
0x804ae6f:   50                              	push eax
0x804ae70:   e8 02 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae75:   83 c4 10                        	add esp, 0x10
0x804ae78:   0f b6 83 59 00 00 00            	movzx eax, byte ptr [ebx + 0x59]
0x804ae7f:   0f b6 c0                        	movzx eax, al
0x804ae82:   83 ec 04                        	sub esp, 4
0x804ae85:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae88:   8d 93 bb d1 ff ff               	lea edx, [ebx - 0x2e45]
0x804ae8e:   52                              	push edx
0x804ae8f:   50                              	push eax
0x804ae90:   e8 e2 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae95:   83 c4 10                        	add esp, 0x10
0x804ae98:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804ae9e:   83 ec 04                        	sub esp, 4
0x804aea1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aea4:   8d 93 c1 d1 ff ff               	lea edx, [ebx - 0x2e3f]
0x804aeaa:   52                              	push edx
0x804aeab:   50                              	push eax
0x804aeac:   e8 c6 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aeb1:   83 c4 10                        	add esp, 0x10
0x804aeb4:   0f b6 83 60 00 00 00            	movzx eax, byte ptr [ebx + 0x60]
0x804aebb:   0f be c0                        	movsx eax, al
0x804aebe:   83 ec 04                        	sub esp, 4
0x804aec1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aec4:   8d 93 c7 d1 ff ff               	lea edx, [ebx - 0x2e39]
0x804aeca:   52                              	push edx
0x804aecb:   50                              	push eax
0x804aecc:   e8 a6 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aed1:   83 c4 10                        	add esp, 0x10
0x804aed4:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804aeda:   89 c2                           	mov edx, eax
0x804aedc:   83 ec 04                        	sub esp, 4
0x804aedf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aee2:   8d 83 cd d1 ff ff               	lea eax, [ebx - 0x2e33]
0x804aee8:   50                              	push eax
0x804aee9:   52                              	push edx
0x804aeea:   e8 88 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aeef:   83 c4 10                        	add esp, 0x10
0x804aef2:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804aef8:   89 c2                           	mov edx, eax
0x804aefa:   83 ec 04                        	sub esp, 4
0x804aefd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af00:   8d 83 d3 d1 ff ff               	lea eax, [ebx - 0x2e2d]
0x804af06:   50                              	push eax
0x804af07:   52                              	push edx
0x804af08:   e8 6a e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af0d:   83 c4 10                        	add esp, 0x10
0x804af10:   0f b6 83 6c 00 00 00            	movzx eax, byte ptr [ebx + 0x6c]
0x804af17:   0f be c0                        	movsx eax, al
0x804af1a:   83 ec 04                        	sub esp, 4
0x804af1d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af20:   8d 93 d9 d1 ff ff               	lea edx, [ebx - 0x2e27]
0x804af26:   52                              	push edx
0x804af27:   50                              	push eax
0x804af28:   e8 4a e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af2d:   83 c4 10                        	add esp, 0x10
0x804af30:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804af36:   89 c2                           	mov edx, eax
0x804af38:   83 ec 04                        	sub esp, 4
0x804af3b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af3e:   8d 83 df d1 ff ff               	lea eax, [ebx - 0x2e21]
0x804af44:   50                              	push eax
0x804af45:   52                              	push edx
0x804af46:   e8 2c e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af4b:   83 c4 10                        	add esp, 0x10
0x804af4e:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804af54:   83 ec 04                        	sub esp, 4
0x804af57:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af5a:   8d 93 e5 d1 ff ff               	lea edx, [ebx - 0x2e1b]
0x804af60:   52                              	push edx
0x804af61:   50                              	push eax
0x804af62:   e8 10 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af67:   83 c4 10                        	add esp, 0x10
0x804af6a:   8b 83 78 00 00 00               	mov eax, dword ptr [ebx + 0x78]
0x804af70:   89 c2                           	mov edx, eax
0x804af72:   83 ec 04                        	sub esp, 4
0x804af75:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af78:   8d 83 eb d1 ff ff               	lea eax, [ebx - 0x2e15]
0x804af7e:   50                              	push eax
0x804af7f:   52                              	push edx
0x804af80:   e8 f2 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af85:   83 c4 10                        	add esp, 0x10
0x804af88:   0f b7 83 7c 00 00 00            	movzx eax, word ptr [ebx + 0x7c]
0x804af8f:   98                              	cwde 
0x804af90:   83 ec 04                        	sub esp, 4
0x804af93:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af96:   8d 93 f1 d1 ff ff               	lea edx, [ebx - 0x2e0f]
0x804af9c:   52                              	push edx
0x804af9d:   50                              	push eax
0x804af9e:   e8 d4 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afa3:   83 c4 10                        	add esp, 0x10
0x804afa6:   0f b6 83 7e 00 00 00            	movzx eax, byte ptr [ebx + 0x7e]
0x804afad:   0f be c0                        	movsx eax, al
0x804afb0:   83 ec 04                        	sub esp, 4
0x804afb3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afb6:   8d 93 f7 d1 ff ff               	lea edx, [ebx - 0x2e09]
0x804afbc:   52                              	push edx
0x804afbd:   50                              	push eax
0x804afbe:   e8 b4 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afc3:   83 c4 10                        	add esp, 0x10
0x804afc6:   0f b7 83 80 00 00 00            	movzx eax, word ptr [ebx + 0x80]
0x804afcd:   98                              	cwde 
0x804afce:   83 ec 04                        	sub esp, 4
0x804afd1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afd4:   8d 93 fd d1 ff ff               	lea edx, [ebx - 0x2e03]
0x804afda:   52                              	push edx
0x804afdb:   50                              	push eax
0x804afdc:   e8 96 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afe1:   83 c4 10                        	add esp, 0x10
0x804afe4:   0f b6 83 82 00 00 00            	movzx eax, byte ptr [ebx + 0x82]
0x804afeb:   0f b6 c0                        	movzx eax, al
0x804afee:   83 ec 04                        	sub esp, 4
0x804aff1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aff4:   8d 93 03 d2 ff ff               	lea edx, [ebx - 0x2dfd]
0x804affa:   52                              	push edx
0x804affb:   50                              	push eax
0x804affc:   e8 76 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b001:   83 c4 10                        	add esp, 0x10
0x804b004:   0f b7 83 84 00 00 00            	movzx eax, word ptr [ebx + 0x84]
0x804b00b:   0f b7 c0                        	movzx eax, ax
0x804b00e:   83 ec 04                        	sub esp, 4
0x804b011:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b014:   8d 93 09 d2 ff ff               	lea edx, [ebx - 0x2df7]
0x804b01a:   52                              	push edx
0x804b01b:   50                              	push eax
0x804b01c:   e8 56 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b021:   83 c4 10                        	add esp, 0x10
0x804b024:   0f b7 83 86 00 00 00            	movzx eax, word ptr [ebx + 0x86]
0x804b02b:   0f b7 c0                        	movzx eax, ax
0x804b02e:   83 ec 04                        	sub esp, 4
0x804b031:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b034:   8d 93 0f d2 ff ff               	lea edx, [ebx - 0x2df1]
0x804b03a:   52                              	push edx
0x804b03b:   50                              	push eax
0x804b03c:   e8 36 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b041:   83 c4 10                        	add esp, 0x10
0x804b044:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b04a:   f7 d0                           	not eax
0x804b04c:   83 ec 08                        	sub esp, 8
0x804b04f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b052:   50                              	push eax
0x804b053:   e8 0e d4 ff ff                  	call 0x8048466 <platform_main_end>
0x804b058:   83 c4 10                        	add esp, 0x10
0x804b05b:   b8 00 00 00 00                  	mov eax, 0
0x804b060:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b063:   59                              	pop ecx
0x804b064:   5b                              	pop ebx
0x804b065:   5d                              	pop ebp
0x804b066:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b069:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b06a -- 0x804b06e
0x804b06a:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b06d:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b06e -- 0x804b072
0x804b06e:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b071:   c3                              	ret 
; data inside code section at 0x804b072 -- 0x804b080
0x804b072:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __libc_csu_init at 0x804b080 -- 0x804b0dd
0x804b080:   55                              	push ebp
0x804b081:   57                              	push edi
0x804b082:   56                              	push esi
0x804b083:   53                              	push ebx
0x804b084:   e8 07 d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b089:   81 c3 77 2f 00 00               	add ebx, 0x2f77
0x804b08f:   83 ec 0c                        	sub esp, 0xc
0x804b092:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b096:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b09c:   e8 2b d2 ff ff                  	call 0x80482cc <_init>
0x804b0a1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b0a7:   29 c6                           	sub esi, eax
0x804b0a9:   c1 fe 02                        	sar esi, 2
0x804b0ac:   85 f6                           	test esi, esi
0x804b0ae:   74 25                           	je 0x804b0d5 <__libc_csu_init+0x55>
0x804b0b0:   31 ff                           	xor edi, edi
0x804b0b2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b0b8:   83 ec 04                        	sub esp, 4
0x804b0bb:   55                              	push ebp
0x804b0bc:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b0c0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b0c4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b0cb:   83 c7 01                        	add edi, 1
0x804b0ce:   83 c4 10                        	add esp, 0x10
0x804b0d1:   39 fe                           	cmp esi, edi
0x804b0d3:   75 e3                           	jne 0x804b0b8 <__libc_csu_init+0x38>
0x804b0d5:   83 c4 0c                        	add esp, 0xc
0x804b0d8:   5b                              	pop ebx
0x804b0d9:   5e                              	pop esi
0x804b0da:   5f                              	pop edi
0x804b0db:   5d                              	pop ebp
0x804b0dc:   c3                              	ret 
; data inside code section at 0x804b0dd -- 0x804b0e0
0x804b0dd:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b0e0 -- 0x804b0e2
0x804b0e0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b0e4 -- 0x804b0f8
0x804b0e4:   53                              	push ebx
0x804b0e5:   83 ec 08                        	sub esp, 8
0x804b0e8:   e8 a3 d2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b0ed:   81 c3 13 2f 00 00               	add ebx, 0x2f13
0x804b0f3:   83 c4 08                        	add esp, 8
0x804b0f6:   5b                              	pop ebx
0x804b0f7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 fc b0 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b0f8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b108:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b118:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b128:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b138:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b148:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b158:   31 00 67 5f 34 00 67 5f  31 30 00 67 5f 31 31 00   |1.g_4.g_10.g_11.|
0x804b168:   67 5f 34 36 00 67 5f 34  37 00 67 5f 35 33 00 67   |g_46.g_47.g_53.g|
0x804b178:   5f 36 30 00 67 5f 37 37  00 67 5f 37 38 00 67 5f   |_60.g_77.g_78.g_|
0x804b188:   38 33 00 67 5f 31 30 35  00 67 5f 31 31 34 00 67   |83.g_105.g_114.g|
0x804b198:   5f 31 33 31 00 67 5f 31  36 32 00 67 5f 31 38 30   |_131.g_162.g_180|
0x804b1a8:   00 67 5f 31 38 34 00 67  5f 31 39 39 00 67 5f 32   |.g_184.g_199.g_2|
0x804b1b8:   33 30 00 67 5f 32 33 31  00 67 5f 32 37 38 00 67   |30.g_231.g_278.g|
0x804b1c8:   5f 32 38 36 00 67 5f 32  39 39 00 67 5f 33 31 30   |_286.g_299.g_310|
0x804b1d8:   00 67 5f 33 31 33 00 67  5f 33 31 34 00 67 5f 33   |.g_313.g_314.g_3|
0x804b1e8:   31 39 00 67 5f 33 33 38  00 67 5f 33 37 32 00 67   |19.g_338.g_372.g|
0x804b1f8:   5f 33 38 35 00 67 5f 33  38 36 00 67 5f 33 38 39   |_385.g_386.g_389|
0x804b208:   00 67 5f 34 33 31 00 67  5f 34 34 39 00 00 00 00   |.g_431.g_449....|
0x804b218:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804b228:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804b238:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804b248:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804b258:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804b268:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804b278:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804b280:   01 1b 03 3b b8 02 00 00  56 00 00 00 70 d0 ff ff   |...;....V...p...|
0x804b290:   e8 02 00 00 b0 d0 ff ff  0c 03 00 00 00 d1 ff ff   |................|
0x804b2a0:   d4 02 00 00 d6 d1 ff ff  20 03 00 00 e6 d1 ff ff   |........ .......|
0x804b2b0:   40 03 00 00 14 d2 ff ff  64 03 00 00 32 d2 ff ff   |@.......d...2...|
0x804b2c0:   84 03 00 00 5a d2 ff ff  a4 03 00 00 84 d2 ff ff   |....Z...........|
0x804b2d0:   c4 03 00 00 ad d2 ff ff  e4 03 00 00 f0 d2 ff ff   |................|
0x804b2e0:   04 04 00 00 31 d3 ff ff  24 04 00 00 89 d3 ff ff   |....1...$.......|
0x804b2f0:   48 04 00 00 db d3 ff ff  6c 04 00 00 18 d4 ff ff   |H.......l.......|
0x804b300:   8c 04 00 00 4f d4 ff ff  ac 04 00 00 6e d4 ff ff   |....O.......n...|
0x804b310:   cc 04 00 00 98 d4 ff ff  ec 04 00 00 c4 d4 ff ff   |................|
0x804b320:   0c 05 00 00 ef d4 ff ff  2c 05 00 00 38 d5 ff ff   |........,...8...|
0x804b330:   4c 05 00 00 7f d5 ff ff  6c 05 00 00 d9 d5 ff ff   |L.......l.......|
0x804b340:   90 05 00 00 2d d6 ff ff  b4 05 00 00 6c d6 ff ff   |....-.......l...|
0x804b350:   d4 05 00 00 a5 d6 ff ff  f4 05 00 00 c7 d6 ff ff   |................|
0x804b360:   14 06 00 00 15 d7 ff ff  34 06 00 00 51 d7 ff ff   |........4...Q...|
0x804b370:   54 06 00 00 da d7 ff ff  74 06 00 00 0c d8 ff ff   |T.......t.......|
0x804b380:   94 06 00 00 3c d8 ff ff  b4 06 00 00 81 d8 ff ff   |....<...........|
0x804b390:   d4 06 00 00 c0 d8 ff ff  f4 06 00 00 f2 d8 ff ff   |................|
0x804b3a0:   14 07 00 00 1e d9 ff ff  34 07 00 00 3c d9 ff ff   |........4...<...|
0x804b3b0:   54 07 00 00 64 d9 ff ff  74 07 00 00 89 d9 ff ff   |T...d...t.......|
0x804b3c0:   94 07 00 00 ae d9 ff ff  b4 07 00 00 e5 d9 ff ff   |................|
0x804b3d0:   d4 07 00 00 19 da ff ff  f4 07 00 00 6b da ff ff   |............k...|
0x804b3e0:   18 08 00 00 b7 da ff ff  3c 08 00 00 ee da ff ff   |........<.......|
0x804b3f0:   5c 08 00 00 1f db ff ff  7c 08 00 00 3e db ff ff   |\.......|...>...|
0x804b400:   9c 08 00 00 68 db ff ff  bc 08 00 00 90 db ff ff   |....h...........|
0x804b410:   dc 08 00 00 b9 db ff ff  fc 08 00 00 f5 db ff ff   |................|
0x804b420:   1c 09 00 00 2f dc ff ff  3c 09 00 00 82 dc ff ff   |..../...<.......|
0x804b430:   60 09 00 00 cf dc ff ff  84 09 00 00 07 dd ff ff   |`...............|
0x804b440:   a4 09 00 00 39 dd ff ff  c4 09 00 00 4d dd ff ff   |....9.......M...|
0x804b450:   e4 09 00 00 64 dd ff ff  04 0a 00 00 79 dd ff ff   |....d.......y...|
0x804b460:   24 0a 00 00 8f dd ff ff  44 0a 00 00 b6 dd ff ff   |$.......D.......|
0x804b470:   64 0a 00 00 db dd ff ff  84 0a 00 00 1a de ff ff   |d...............|
0x804b480:   a4 0a 00 00 53 de ff ff  c4 0a 00 00 7f de ff ff   |....S...........|
0x804b490:   e4 0a 00 00 a5 de ff ff  04 0b 00 00 e7 de ff ff   |................|
0x804b4a0:   24 0b 00 00 29 df ff ff  44 0b 00 00 6b df ff ff   |$...)...D...k...|
0x804b4b0:   64 0b 00 00 e0 df ff ff  84 0b 00 00 3d e0 ff ff   |d...........=...|
0x804b4c0:   a4 0b 00 00 9a e0 ff ff  c4 0b 00 00 f7 e0 ff ff   |................|
0x804b4d0:   e4 0b 00 00 87 e1 ff ff  04 0c 00 00 eb e1 ff ff   |................|
0x804b4e0:   24 0c 00 00 5b e2 ff ff  44 0c 00 00 a2 e2 ff ff   |$...[...D.......|
0x804b4f0:   68 0c 00 00 f7 e2 ff ff  88 0c 00 00 3e e3 ff ff   |h...........>...|
0x804b500:   ac 0c 00 00 a6 e3 ff ff  d0 0c 00 00 3f e6 ff ff   |............?...|
0x804b510:   00 0d 00 00 6e f9 ff ff  30 0d 00 00 ea fd ff ff   |....n...0.......|
0x804b520:   68 0d 00 00 ee fd ff ff  7c 0d 00 00 00 fe ff ff   |h.......|.......|
0x804b530:   90 0d 00 00 60 fe ff ff  dc 0d 00 00 14            |....`........   |
; section: .eh_frame
0x804b53c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b54c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b55c:   24 ce ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |$........... ...|
0x804b56c:   30 00 00 00 80 cd ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b57c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b58c:   10 00 00 00 54 00 00 00  9c cd ff ff 08 00 00 00   |....T...........|
0x804b59c:   00 00 00 00 1c 00 00 00  68 00 00 00 ae ce ff ff   |........h.......|
0x804b5ac:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b5bc:   04 04 00 00 20 00 00 00  88 00 00 00 9e ce ff ff   |.... ...........|
0x804b5cc:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b5dc:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b5ec:   a8 ce ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b5fc:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b60c:   a6 ce ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b61c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b62c:   ae ce ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b63c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b64c:   b8 ce ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b65c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b66c:   c1 ce ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b67c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b68c:   e4 ce ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b69c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b6ac:   05 cf ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b6bc:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b6cc:   90 01 00 00 39 cf ff ff  52 00 00 00 00 41 0e 08   |....9...R....A..|
0x804b6dc:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b6ec:   1c 00 00 00 b4 01 00 00  67 cf ff ff 3d 00 00 00   |........g...=...|
0x804b6fc:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b70c:   1c 00 00 00 d4 01 00 00  84 cf ff ff 37 00 00 00   |............7...|
0x804b71c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b72c:   1c 00 00 00 f4 01 00 00  9b cf ff ff 1f 00 00 00   |................|
0x804b73c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b74c:   1c 00 00 00 14 02 00 00  9a cf ff ff 2a 00 00 00   |............*...|
0x804b75c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b76c:   1c 00 00 00 34 02 00 00  a4 cf ff ff 2c 00 00 00   |....4.......,...|
0x804b77c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b78c:   1c 00 00 00 54 02 00 00  b0 cf ff ff 2b 00 00 00   |....T.......+...|
0x804b79c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b7ac:   1c 00 00 00 74 02 00 00  bb cf ff ff 49 00 00 00   |....t.......I...|
0x804b7bc:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b7cc:   1c 00 00 00 94 02 00 00  e4 cf ff ff 47 00 00 00   |............G...|
0x804b7dc:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b7ec:   20 00 00 00 b4 02 00 00  0b d0 ff ff 5a 00 00 00   | ...........Z...|
0x804b7fc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b80c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 41 d0 ff ff   |.... .......A...|
0x804b81c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b82c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b83c:   71 d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |q...?....A....B.|
0x804b84c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b85c:   90 d0 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b86c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b87c:   a9 d0 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b88c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b89c:   ab d0 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b8ac:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b8bc:   d9 d0 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b8cc:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b8dc:   f5 d0 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b8ec:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b8fc:   5e d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |^...2....A....B.|
0x804b90c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b91c:   70 d1 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |p...0....A....B.|
0x804b92c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b93c:   80 d1 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b94c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b95c:   a5 d1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b96c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b97c:   c4 d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b98c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b99c:   d6 d1 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b9ac:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b9bc:   e2 d1 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b9cc:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b9dc:   e0 d1 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b9ec:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b9fc:   e8 d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ba0c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804ba1c:   ed d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ba2c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804ba3c:   f2 d1 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804ba4c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804ba5c:   09 d2 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804ba6c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804ba7c:   1d d2 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804ba8c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804ba9c:   60 05 00 00 4b d2 ff ff  4c 00 00 00 00 41 0e 08   |`...K...L....A..|
0x804baac:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804babc:   1c 00 00 00 84 05 00 00  73 d2 ff ff 37 00 00 00   |........s...7...|
0x804bacc:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804badc:   1c 00 00 00 a4 05 00 00  8a d2 ff ff 31 00 00 00   |............1...|
0x804baec:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bafc:   1c 00 00 00 c4 05 00 00  9b d2 ff ff 1f 00 00 00   |................|
0x804bb0c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bb1c:   1c 00 00 00 e4 05 00 00  9a d2 ff ff 2a 00 00 00   |............*...|
0x804bb2c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bb3c:   1c 00 00 00 04 06 00 00  a4 d2 ff ff 28 00 00 00   |............(...|
0x804bb4c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bb5c:   1c 00 00 00 24 06 00 00  ac d2 ff ff 29 00 00 00   |....$.......)...|
0x804bb6c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bb7c:   1c 00 00 00 44 06 00 00  b5 d2 ff ff 3c 00 00 00   |....D.......<...|
0x804bb8c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bb9c:   1c 00 00 00 64 06 00 00  d1 d2 ff ff 3a 00 00 00   |....d.......:...|
0x804bbac:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bbbc:   20 00 00 00 84 06 00 00  eb d2 ff ff 53 00 00 00   | ...........S...|
0x804bbcc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bbdc:   c5 0c 04 04 20 00 00 00  a8 06 00 00 1a d3 ff ff   |.... ...........|
0x804bbec:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bbfc:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bc0c:   43 d3 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |C...8....A....B.|
0x804bc1c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bc2c:   5b d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |[...2....A....B.|
0x804bc3c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bc4c:   6d d3 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |m........A....B.|
0x804bc5c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bc6c:   61 d3 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |a........A....B.|
0x804bc7c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bc8c:   58 d3 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |X........A....B.|
0x804bc9c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bcac:   4d d3 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |M........A....B.|
0x804bcbc:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bccc:   43 d3 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |C...'....A....B.|
0x804bcdc:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bcec:   4a d3 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |J...%....A....B.|
0x804bcfc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bd0c:   4f d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |O...?....A....B.|
0x804bd1c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bd2c:   6e d3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |n...9....A....B.|
0x804bd3c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bd4c:   87 d3 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bd5c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bd6c:   93 d3 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804bd7c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bd8c:   99 d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bd9c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bdac:   bb d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bdbc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bdcc:   dd d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bddc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bdec:   ff d3 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804bdfc:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804be0c:   54 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |T...]....A....B.|
0x804be1c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804be2c:   91 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804be3c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804be4c:   ce d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804be5c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804be6c:   0b d5 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804be7c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804be8c:   7b d5 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |{...d....A....B.|
0x804be9c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804beac:   bf d5 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804bebc:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804becc:   0f d6 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804bedc:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804beec:   b0 09 00 00 32 d6 ff ff  55 00 00 00 00 41 0e 08   |....2...U....A..|
0x804befc:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bf0c:   d0 09 00 00 67 d6 ff ff  47 00 00 00 00 41 0e 08   |....g...G....A..|
0x804bf1c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bf2c:   20 00 00 00 f4 09 00 00  8a d6 ff ff 68 00 00 00   | ...........h...|
0x804bf3c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bf4c:   0c 04 04 00 2c 00 00 00  18 0a 00 00 ce d6 ff ff   |....,...........|
0x804bf5c:   99 02 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804bf6c:   86 04 83 05 03 89 02 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bf7c:   04 00 00 00 2c 00 00 00  48 0a 00 00 37 d9 ff ff   |....,...H...7...|
0x804bf8c:   2f 13 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |/....A....B..I..|
0x804bf9c:   86 04 83 05 03 1f 13 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bfac:   04 00 00 00 34 00 00 00  78 0a 00 00 36 ec ff ff   |....4...x...6...|
0x804bfbc:   7c 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   ||....D...G...u.D|
0x804bfcc:   0f 03 75 78 06 10 03 02  75 7c 03 67 04 c1 0c 01   |..ux....u|.g....|
0x804bfdc:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bfec:   b0 0a 00 00 7a f0 ff ff  04 00 00 00 00 00 00 00   |....z...........|
0x804bffc:   10 00 00 00 c4 0a 00 00  6a f0 ff ff 04 00 00 00   |........j.......|
0x804c00c:   00 00 00 00 48 00 00 00  d8 0a 00 00 68 f0 ff ff   |....H.......h...|
0x804c01c:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c02c:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c03c:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c04c:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c05c:   10 00 00 00 24 0b 00 00  7c f0 ff ff 02 00 00 00   |....$...|.......|
0x804c06c:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 e4 b0 04 08  19 00 00 00 0c df 04 08   |................|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 40 0b 00 00   |............@...|
0x804e028:   94 b1 3a 96 25 65 bd 03  01 cc 00 00 c4 d3 53 c8   |..:.%e........S.|
0x804e038:   ff ff ff ff 24 ff 8c 2c  44 aa ee 40 67 00 00 00   |....$..,D..@g...|
0x804e048:   fd ff ff ff 72 41 00 00  ff ff ff ff f6 26 9a aa   |....rA.......&..|
0x804e058:   f6 c9 00 00 01 00 00 00  ff 00 00 00 6c ba 77 4f   |............l.wO|
0x804e068:   04 00 00 00 3f 00 00 00  ff ff ff ff fc ba d9 3d   |....?..........=|
0x804e078:   10 b7 0d 44 ff ff 07 00  e5 5c 03 00 03 bd fd ff   |...D.....\......|
0x804e088:   ??                                                 |?               |
