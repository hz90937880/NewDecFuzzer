;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-04-15 23:19:21
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                     	push ebx
0x80482cd:   83 ec 08               	sub esp, 8
0x80482d0:   e8 bb 00 00 00         	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 3d 00 00      	add ebx, 0x3d2b
0x80482db:   8b 83 fc ff ff ff      	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                  	test eax, eax
0x80482e3:   74 05                  	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00         	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08               	add esp, 8
0x80482ed:   5b                     	pop ebx
0x80482ee:   c3                     	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 c0 04 08 ff 25  08 c0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c c0 04 08      	jmp dword ptr [0x804c00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 c0 04 08      	jmp dword ptr [0x804c010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 c0 04 08      	jmp dword ptr [0x804c014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc bf 04 08      	jmp dword ptr [0x804bffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                  	xor ebp, ebp
0x8048342:   5e                     	pop esi
0x8048343:   89 e1                  	mov ecx, esp
0x8048345:   83 e4 f0               	and esp, 0xfffffff0
0x8048348:   50                     	push eax
0x8048349:   54                     	push esp
0x804834a:   52                     	push edx
0x804834b:   e8 23 00 00 00         	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 3c 00 00      	add ebx, 0x3cb0
0x8048356:   8d 83 00 de ff ff      	lea eax, [ebx - 0x2200]
0x804835c:   50                     	push eax
0x804835d:   8d 83 a0 dd ff ff      	lea eax, [ebx - 0x2260]
0x8048363:   50                     	push eax
0x8048364:   51                     	push ecx
0x8048365:   56                     	push esi
0x8048366:   c7 c0 28 9b 04 08      	mov eax, 0x8049b28
0x804836c:   50                     	push eax
0x804836d:   e8 ae ff ff ff         	call 0x8048320 <__libc_start_main>
0x8048372:   f4                     	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24               	mov ebx, dword ptr [esp]
0x8048376:   c3                     	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                  	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24               	mov ebx, dword ptr [esp]
0x8048393:   c3                     	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 5c c0 04 08         	mov eax, 0x804c05c
0x80483a5:   3d 5c c0 04 08         	cmp eax, 0x804c05c
0x80483aa:   74 24                  	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00         	mov eax, 0
0x80483b1:   85 c0                  	test eax, eax
0x80483b3:   74 1b                  	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                     	push ebp
0x80483b6:   89 e5                  	mov ebp, esp
0x80483b8:   83 ec 14               	sub esp, 0x14
0x80483bb:   68 5c c0 04 08         	push 0x804c05c
0x80483c0:   ff d0                  	call eax
0x80483c2:   83 c4 10               	add esp, 0x10
0x80483c5:   c9                     	leave 
0x80483c6:   c3                     	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                  	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 5c c0 04 08         	mov eax, 0x804c05c
0x80483e5:   2d 5c c0 04 08         	sub eax, 0x804c05c
0x80483ea:   c1 f8 02               	sar eax, 2
0x80483ed:   89 c2                  	mov edx, eax
0x80483ef:   c1 ea 1f               	shr edx, 0x1f
0x80483f2:   01 d0                  	add eax, edx
0x80483f4:   d1 f8                  	sar eax, 1
0x80483f6:   74 20                  	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00         	mov edx, 0
0x80483fd:   85 d2                  	test edx, edx
0x80483ff:   74 17                  	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                     	push ebp
0x8048402:   89 e5                  	mov ebp, esp
0x8048404:   83 ec 10               	sub esp, 0x10
0x8048407:   50                     	push eax
0x8048408:   68 5c c0 04 08         	push 0x804c05c
0x804840d:   ff d2                  	call edx
0x804840f:   83 c4 10               	add esp, 0x10
0x8048412:   c9                     	leave 
0x8048413:   c3                     	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                  	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 60 c0 04 08 00   	cmp byte ptr [0x804c060], 0
0x8048427:   75 17                  	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                     	push ebp
0x804842a:   89 e5                  	mov ebp, esp
0x804842c:   83 ec 08               	sub esp, 8
0x804842f:   e8 6c ff ff ff         	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 60 c0 04 08 01   	mov byte ptr [0x804c060], 1
0x804843b:   c9                     	leave 
0x804843c:   c3                     	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                  	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                     	push ebp
0x8048451:   89 e5                  	mov ebp, esp
0x8048453:   5d                     	pop ebp
0x8048454:   eb 8a                  	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                     	push ebp
0x8048457:   89 e5                  	mov ebp, esp
0x8048459:   e8 34 19 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 3b 00 00         	add eax, 0x3ba2
0x8048463:   90                     	nop 
0x8048464:   5d                     	pop ebp
0x8048465:   c3                     	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                     	push ebp
0x8048467:   89 e5                  	mov ebp, esp
0x8048469:   53                     	push ebx
0x804846a:   83 ec 04               	sub esp, 4
0x804846d:   e8 20 19 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 3b 00 00         	add eax, 0x3b8e
0x8048477:   83 ec 08               	sub esp, 8
0x804847a:   ff 75 08               	push dword ptr [ebp + 8]
0x804847d:   8d 90 20 de ff ff      	lea edx, [eax - 0x21e0]
0x8048483:   52                     	push edx
0x8048484:   89 c3                  	mov ebx, eax
0x8048486:   e8 85 fe ff ff         	call 0x8048310 <printf>
0x804848b:   83 c4 10               	add esp, 0x10
0x804848e:   90                     	nop 
0x804848f:   8b 5d fc               	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                     	leave 
0x8048493:   c3                     	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                     	push ebp
0x8048495:   89 e5                  	mov ebp, esp
0x8048497:   83 ec 04               	sub esp, 4
0x804849a:   e8 f3 18 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 3b 00 00         	add eax, 0x3b61
0x80484a4:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc               	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                  	neg eax
0x80484b0:   c9                     	leave 
0x80484b1:   c3                     	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                     	push ebp
0x80484b3:   89 e5                  	mov ebp, esp
0x80484b5:   83 ec 08               	sub esp, 8
0x80484b8:   e8 d5 18 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 3b 00 00         	add eax, 0x3b43
0x80484c2:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc               	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8               	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc            	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8            	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                  	add eax, edx
0x80484d8:   c9                     	leave 
0x80484d9:   c3                     	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                     	push ebp
0x80484db:   89 e5                  	mov ebp, esp
0x80484dd:   83 ec 08               	sub esp, 8
0x80484e0:   e8 ad 18 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 3b 00 00         	add eax, 0x3b1b
0x80484ea:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc               	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8               	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc            	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8            	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                  	sub edx, eax
0x8048500:   89 d0                  	mov eax, edx
0x8048502:   c9                     	leave 
0x8048503:   c3                     	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                     	push ebp
0x8048505:   89 e5                  	mov ebp, esp
0x8048507:   83 ec 08               	sub esp, 8
0x804850a:   e8 83 18 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 3a 00 00         	add eax, 0x3af1
0x8048514:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc               	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8               	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8            	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2               	imul eax, edx
0x804852b:   c9                     	leave 
0x804852c:   c3                     	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                     	push ebp
0x804852e:   89 e5                  	mov ebp, esp
0x8048530:   83 ec 08               	sub esp, 8
0x8048533:   e8 5a 18 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 3a 00 00         	add eax, 0x3ac8
0x804853d:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc               	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8               	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00            	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                  	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80            	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                  	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff            	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                  	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc            	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8            	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                     	cdq 
0x8048564:   f7 f9                  	idiv ecx
0x8048566:   89 d0                  	mov eax, edx
0x8048568:   eb 04                  	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                     	leave 
0x804856f:   c3                     	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                     	push ebp
0x8048571:   89 e5                  	mov ebp, esp
0x8048573:   83 ec 08               	sub esp, 8
0x8048576:   e8 17 18 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 3a 00 00         	add eax, 0x3a85
0x8048580:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc               	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8               	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00            	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                  	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80            	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                  	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff            	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                  	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc            	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8            	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                     	cdq 
0x80485a7:   f7 f9                  	idiv ecx
0x80485a9:   eb 04                  	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                     	leave 
0x80485b0:   c3                     	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                     	push ebp
0x80485b2:   89 e5                  	mov ebp, esp
0x80485b4:   53                     	push ebx
0x80485b5:   83 ec 04               	sub esp, 4
0x80485b8:   e8 d5 17 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 3a 00 00         	add eax, 0x3a43
0x80485c2:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8               	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00            	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                  	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                  	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                  	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8            	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00         	mov ebx, 0x7f
0x80485e6:   89 c1                  	mov ecx, eax
0x80485e8:   d3 fb                  	sar ebx, cl
0x80485ea:   89 d8                  	mov eax, ebx
0x80485ec:   39 c2                  	cmp edx, eax
0x80485ee:   7f 0f                  	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8            	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                  	mov ecx, eax
0x80485f9:   d3 e2                  	shl edx, cl
0x80485fb:   89 d0                  	mov eax, edx
0x80485fd:   eb 04                  	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8            	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04               	add esp, 4
0x8048606:   5b                     	pop ebx
0x8048607:   5d                     	pop ebp
0x8048608:   c3                     	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                     	push ebp
0x804860a:   89 e5                  	mov ebp, esp
0x804860c:   53                     	push ebx
0x804860d:   83 ec 04               	sub esp, 4
0x8048610:   e8 7d 17 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 39 00 00         	add eax, 0x39eb
0x804861a:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8               	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00            	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                  	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                  	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8            	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00         	mov ebx, 0x7f
0x8048638:   89 c1                  	mov ecx, eax
0x804863a:   d3 fb                  	sar ebx, cl
0x804863c:   89 d8                  	mov eax, ebx
0x804863e:   39 c2                  	cmp edx, eax
0x8048640:   7f 0f                  	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8            	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                  	mov ecx, eax
0x804864b:   d3 e2                  	shl edx, cl
0x804864d:   89 d0                  	mov eax, edx
0x804864f:   eb 04                  	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8            	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04               	add esp, 4
0x8048658:   5b                     	pop ebx
0x8048659:   5d                     	pop ebp
0x804865a:   c3                     	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                     	push ebp
0x804865c:   89 e5                  	mov ebp, esp
0x804865e:   83 ec 04               	sub esp, 4
0x8048661:   e8 2c 17 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 39 00 00         	add eax, 0x399a
0x804866b:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc               	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00            	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                  	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                  	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                  	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc            	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                  	mov ecx, eax
0x804868c:   d3 fa                  	sar edx, cl
0x804868e:   89 d0                  	mov eax, edx
0x8048690:   eb 04                  	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                     	leave 
0x8048697:   c3                     	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                     	push ebp
0x8048699:   89 e5                  	mov ebp, esp
0x804869b:   83 ec 04               	sub esp, 4
0x804869e:   e8 ef 16 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 39 00 00         	add eax, 0x395d
0x80486a8:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc               	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00            	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                  	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                  	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc            	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                  	mov ecx, eax
0x80486c3:   d3 fa                  	sar edx, cl
0x80486c5:   89 d0                  	mov eax, edx
0x80486c7:   eb 04                  	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                     	leave 
0x80486ce:   c3                     	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                     	push ebp
0x80486d0:   89 e5                  	mov ebp, esp
0x80486d2:   83 ec 04               	sub esp, 4
0x80486d5:   e8 b8 16 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 39 00 00         	add eax, 0x3926
0x80486df:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc            	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                  	neg eax
0x80486ec:   c9                     	leave 
0x80486ed:   c3                     	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                     	push ebp
0x80486ef:   89 e5                  	mov ebp, esp
0x80486f1:   83 ec 08               	sub esp, 8
0x80486f4:   e8 99 16 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 39 00 00         	add eax, 0x3907
0x80486fe:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc            	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc            	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8            	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                  	add eax, edx
0x8048716:   c9                     	leave 
0x8048717:   c3                     	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                     	push ebp
0x8048719:   89 e5                  	mov ebp, esp
0x804871b:   83 ec 08               	sub esp, 8
0x804871e:   e8 6f 16 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 38 00 00         	add eax, 0x38dd
0x8048728:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc            	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc            	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8            	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                  	sub edx, eax
0x8048740:   89 d0                  	mov eax, edx
0x8048742:   c9                     	leave 
0x8048743:   c3                     	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                     	push ebp
0x8048745:   89 e5                  	mov ebp, esp
0x8048747:   83 ec 08               	sub esp, 8
0x804874a:   e8 43 16 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 38 00 00         	add eax, 0x38b1
0x8048754:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc            	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc            	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8            	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2               	imul eax, edx
0x804876d:   c9                     	leave 
0x804876e:   c3                     	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                     	push ebp
0x8048770:   89 e5                  	mov ebp, esp
0x8048772:   83 ec 08               	sub esp, 8
0x8048775:   e8 18 16 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 38 00 00         	add eax, 0x3886
0x804877f:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc            	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00         	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                  	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80      	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                  	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff         	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                  	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc            	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8            	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                     	cdq 
0x80487ac:   f7 f9                  	idiv ecx
0x80487ae:   89 d0                  	mov eax, edx
0x80487b0:   eb 04                  	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                     	leave 
0x80487b7:   c3                     	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                     	push ebp
0x80487b9:   89 e5                  	mov ebp, esp
0x80487bb:   83 ec 08               	sub esp, 8
0x80487be:   e8 cf 15 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 38 00 00         	add eax, 0x383d
0x80487c8:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc            	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00         	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                  	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80      	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                  	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff         	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                  	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc            	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8            	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                     	cdq 
0x80487f5:   f7 f9                  	idiv ecx
0x80487f7:   eb 04                  	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                     	leave 
0x80487fe:   c3                     	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                     	push ebp
0x8048800:   89 e5                  	mov ebp, esp
0x8048802:   53                     	push ebx
0x8048803:   83 ec 04               	sub esp, 4
0x8048806:   e8 87 15 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 37 00 00         	add eax, 0x37f5
0x8048810:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00         	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                  	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                  	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                  	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8            	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00         	mov ebx, 0x7fff
0x8048836:   89 c1                  	mov ecx, eax
0x8048838:   d3 fb                  	sar ebx, cl
0x804883a:   89 d8                  	mov eax, ebx
0x804883c:   39 c2                  	cmp edx, eax
0x804883e:   7f 0f                  	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8            	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                  	mov ecx, eax
0x8048849:   d3 e2                  	shl edx, cl
0x804884b:   89 d0                  	mov eax, edx
0x804884d:   eb 04                  	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8            	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04               	add esp, 4
0x8048856:   5b                     	pop ebx
0x8048857:   5d                     	pop ebp
0x8048858:   c3                     	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                     	push ebp
0x804885a:   89 e5                  	mov ebp, esp
0x804885c:   53                     	push ebx
0x804885d:   83 ec 04               	sub esp, 4
0x8048860:   e8 2d 15 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 37 00 00         	add eax, 0x379b
0x804886a:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00         	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                  	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                  	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8            	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00         	mov ebx, 0x7fff
0x804888a:   89 c1                  	mov ecx, eax
0x804888c:   d3 fb                  	sar ebx, cl
0x804888e:   89 d8                  	mov eax, ebx
0x8048890:   39 c2                  	cmp edx, eax
0x8048892:   7f 0f                  	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8            	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                  	mov ecx, eax
0x804889d:   d3 e2                  	shl edx, cl
0x804889f:   89 d0                  	mov eax, edx
0x80488a1:   eb 04                  	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8            	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04               	add esp, 4
0x80488aa:   5b                     	pop ebx
0x80488ab:   5d                     	pop ebp
0x80488ac:   c3                     	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                     	push ebp
0x80488ae:   89 e5                  	mov ebp, esp
0x80488b0:   83 ec 04               	sub esp, 4
0x80488b3:   e8 da 14 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 37 00 00         	add eax, 0x3748
0x80488bd:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc            	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00         	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                  	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                  	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                  	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc            	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                  	mov ecx, eax
0x80488e0:   d3 fa                  	sar edx, cl
0x80488e2:   89 d0                  	mov eax, edx
0x80488e4:   eb 04                  	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                     	leave 
0x80488eb:   c3                     	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                     	push ebp
0x80488ed:   89 e5                  	mov ebp, esp
0x80488ef:   83 ec 04               	sub esp, 4
0x80488f2:   e8 9b 14 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 37 00 00         	add eax, 0x3709
0x80488fc:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc            	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00         	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                  	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                  	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc            	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                  	mov ecx, eax
0x8048919:   d3 fa                  	sar edx, cl
0x804891b:   89 d0                  	mov eax, edx
0x804891d:   eb 04                  	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                     	leave 
0x8048924:   c3                     	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                     	push ebp
0x8048926:   89 e5                  	mov ebp, esp
0x8048928:   e8 65 14 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 36 00 00         	add eax, 0x36d3
0x8048932:   81 7d 08 00 00 00 80   	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                  	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                  	neg eax
0x8048940:   eb 03                  	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                     	pop ebp
0x8048946:   c3                     	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                     	push ebp
0x8048948:   89 e5                  	mov ebp, esp
0x804894a:   e8 43 14 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 36 00 00         	add eax, 0x36b1
0x8048954:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                  	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                  	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f         	mov eax, 0x7fffffff
0x8048965:   2b 45 0c               	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08               	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                  	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                  	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                  	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80         	mov eax, 0x80000000
0x804897e:   2b 45 0c               	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08               	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                  	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                  	add eax, edx
0x804898e:   eb 03                  	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                     	pop ebp
0x8048994:   c3                     	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                     	push ebp
0x8048996:   89 e5                  	mov ebp, esp
0x8048998:   e8 f5 13 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 36 00 00         	add eax, 0x3663
0x80489a2:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c               	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                  	mov edx, eax
0x80489aa:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c               	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80         	and eax, 0x80000000
0x80489b5:   33 45 08               	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c               	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c               	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                  	and eax, edx
0x80489c0:   85 c0                  	test eax, eax
0x80489c2:   78 08                  	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c               	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                  	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                     	pop ebp
0x80489d0:   c3                     	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                     	push ebp
0x80489d2:   89 e5                  	mov ebp, esp
0x80489d4:   e8 b9 13 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 36 00 00         	add eax, 0x3627
0x80489de:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                  	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                  	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f         	mov eax, 0x7fffffff
0x80489ef:   99                     	cdq 
0x80489f0:   f7 7d 0c               	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08               	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                  	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                  	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                  	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80         	mov eax, 0x80000000
0x8048a09:   99                     	cdq 
0x8048a0a:   f7 7d 08               	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c               	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                  	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                  	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                  	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80         	mov eax, 0x80000000
0x8048a23:   99                     	cdq 
0x8048a24:   f7 7d 0c               	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08               	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                  	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                  	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                  	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                  	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f         	mov eax, 0x7fffffff
0x8048a43:   99                     	cdq 
0x8048a44:   f7 7d 08               	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c               	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                  	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c            	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                  	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                     	pop ebp
0x8048a59:   c3                     	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                     	push ebp
0x8048a5b:   89 e5                  	mov ebp, esp
0x8048a5d:   e8 30 13 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 35 00 00         	add eax, 0x359e
0x8048a67:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                  	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80   	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                  	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff            	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                  	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                     	cdq 
0x8048a80:   f7 7d 0c               	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                  	mov eax, edx
0x8048a85:   eb 03                  	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                     	pop ebp
0x8048a8b:   c3                     	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                     	push ebp
0x8048a8d:   89 e5                  	mov ebp, esp
0x8048a8f:   e8 fe 12 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 35 00 00         	add eax, 0x356c
0x8048a99:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                  	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80   	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                  	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff            	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                  	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                     	cdq 
0x8048ab2:   f7 7d 0c               	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                  	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                     	pop ebp
0x8048abb:   c3                     	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                     	push ebp
0x8048abd:   89 e5                  	mov ebp, esp
0x8048abf:   e8 ce 12 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 35 00 00         	add eax, 0x353c
0x8048ac9:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                  	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                  	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                  	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f         	mov edx, 0x7fffffff
0x8048ae3:   89 c1                  	mov ecx, eax
0x8048ae5:   d3 fa                  	sar edx, cl
0x8048ae7:   89 d0                  	mov eax, edx
0x8048ae9:   39 45 08               	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                  	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                  	mov ecx, eax
0x8048af6:   d3 e2                  	shl edx, cl
0x8048af8:   89 d0                  	mov eax, edx
0x8048afa:   eb 03                  	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                     	pop ebp
0x8048b00:   c3                     	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                     	push ebp
0x8048b02:   89 e5                  	mov ebp, esp
0x8048b04:   e8 89 12 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 34 00 00         	add eax, 0x34f7
0x8048b0e:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                  	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                  	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f         	mov edx, 0x7fffffff
0x8048b22:   89 c1                  	mov ecx, eax
0x8048b24:   d3 fa                  	sar edx, cl
0x8048b26:   89 d0                  	mov eax, edx
0x8048b28:   39 45 08               	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                  	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                  	mov ecx, eax
0x8048b35:   d3 e2                  	shl edx, cl
0x8048b37:   89 d0                  	mov eax, edx
0x8048b39:   eb 03                  	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                     	pop ebp
0x8048b3f:   c3                     	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                     	push ebp
0x8048b41:   89 e5                  	mov ebp, esp
0x8048b43:   e8 4a 12 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 34 00 00         	add eax, 0x34b8
0x8048b4d:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                  	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                  	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                  	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                  	mov ecx, eax
0x8048b67:   d3 fa                  	sar edx, cl
0x8048b69:   89 d0                  	mov eax, edx
0x8048b6b:   eb 03                  	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                     	pop ebp
0x8048b71:   c3                     	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                     	push ebp
0x8048b73:   89 e5                  	mov ebp, esp
0x8048b75:   e8 18 12 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 34 00 00         	add eax, 0x3486
0x8048b7f:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                  	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                  	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                  	mov ecx, eax
0x8048b93:   d3 fa                  	sar edx, cl
0x8048b95:   89 d0                  	mov eax, edx
0x8048b97:   eb 03                  	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                     	pop ebp
0x8048b9d:   c3                     	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                     	push ebp
0x8048b9f:   89 e5                  	mov ebp, esp
0x8048ba1:   83 ec 04               	sub esp, 4
0x8048ba4:   e8 e9 11 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 34 00 00         	add eax, 0x3457
0x8048bae:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc               	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                  	neg eax
0x8048bba:   c9                     	leave 
0x8048bbb:   c3                     	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                     	push ebp
0x8048bbd:   89 e5                  	mov ebp, esp
0x8048bbf:   83 ec 08               	sub esp, 8
0x8048bc2:   e8 cb 11 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 34 00 00         	add eax, 0x3439
0x8048bcc:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc               	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8               	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc            	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8            	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                  	add eax, edx
0x8048be2:   c9                     	leave 
0x8048be3:   c3                     	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                     	push ebp
0x8048be5:   89 e5                  	mov ebp, esp
0x8048be7:   83 ec 08               	sub esp, 8
0x8048bea:   e8 a3 11 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 34 00 00         	add eax, 0x3411
0x8048bf4:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc               	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8               	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8               	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                     	leave 
0x8048c08:   c3                     	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                     	push ebp
0x8048c0a:   89 e5                  	mov ebp, esp
0x8048c0c:   83 ec 08               	sub esp, 8
0x8048c0f:   e8 7e 11 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 33 00 00         	add eax, 0x33ec
0x8048c19:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc               	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8               	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8               	mul byte ptr [ebp - 8]
0x8048c2c:   c9                     	leave 
0x8048c2d:   c3                     	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                     	push ebp
0x8048c2f:   89 e5                  	mov ebp, esp
0x8048c31:   83 ec 08               	sub esp, 8
0x8048c34:   e8 59 11 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 33 00 00         	add eax, 0x33c7
0x8048c3e:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc               	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8               	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00            	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                  	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0               	movzx eax, al
0x8048c57:   f6 75 f8               	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4               	movzx eax, ah
0x8048c5d:   eb 04                  	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                     	leave 
0x8048c64:   c3                     	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                     	push ebp
0x8048c66:   89 e5                  	mov ebp, esp
0x8048c68:   83 ec 08               	sub esp, 8
0x8048c6b:   e8 22 11 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 33 00 00         	add eax, 0x3390
0x8048c75:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc               	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8               	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00            	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                  	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0               	movzx eax, al
0x8048c8e:   f6 75 f8               	div byte ptr [ebp - 8]
0x8048c91:   eb 04                  	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                     	leave 
0x8048c98:   c3                     	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                     	push ebp
0x8048c9a:   89 e5                  	mov ebp, esp
0x8048c9c:   53                     	push ebx
0x8048c9d:   83 ec 04               	sub esp, 4
0x8048ca0:   e8 ed 10 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 33 00 00         	add eax, 0x335b
0x8048caa:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8               	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                  	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                  	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8            	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00         	mov ebx, 0xff
0x8048cc8:   89 c1                  	mov ecx, eax
0x8048cca:   d3 fb                  	sar ebx, cl
0x8048ccc:   89 d8                  	mov eax, ebx
0x8048cce:   39 c2                  	cmp edx, eax
0x8048cd0:   7f 0f                  	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8            	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                  	mov ecx, eax
0x8048cdb:   d3 e2                  	shl edx, cl
0x8048cdd:   89 d0                  	mov eax, edx
0x8048cdf:   eb 04                  	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8            	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04               	add esp, 4
0x8048ce8:   5b                     	pop ebx
0x8048ce9:   5d                     	pop ebp
0x8048cea:   c3                     	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                     	push ebp
0x8048cec:   89 e5                  	mov ebp, esp
0x8048cee:   53                     	push ebx
0x8048cef:   83 ec 04               	sub esp, 4
0x8048cf2:   e8 9b 10 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 33 00 00         	add eax, 0x3309
0x8048cfc:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8               	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                  	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8            	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00         	mov ebx, 0xff
0x8048d14:   89 c1                  	mov ecx, eax
0x8048d16:   d3 fb                  	sar ebx, cl
0x8048d18:   89 d8                  	mov eax, ebx
0x8048d1a:   39 c2                  	cmp edx, eax
0x8048d1c:   7f 0f                  	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8            	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                  	mov ecx, eax
0x8048d27:   d3 e2                  	shl edx, cl
0x8048d29:   89 d0                  	mov eax, edx
0x8048d2b:   eb 04                  	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8            	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04               	add esp, 4
0x8048d34:   5b                     	pop ebx
0x8048d35:   5d                     	pop ebp
0x8048d36:   c3                     	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                     	push ebp
0x8048d38:   89 e5                  	mov ebp, esp
0x8048d3a:   83 ec 04               	sub esp, 4
0x8048d3d:   e8 50 10 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 32 00 00         	add eax, 0x32be
0x8048d47:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc               	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                  	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                  	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc            	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                  	mov ecx, eax
0x8048d62:   d3 fa                  	sar edx, cl
0x8048d64:   89 d0                  	mov eax, edx
0x8048d66:   eb 04                  	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                     	leave 
0x8048d6d:   c3                     	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                     	push ebp
0x8048d6f:   89 e5                  	mov ebp, esp
0x8048d71:   83 ec 04               	sub esp, 4
0x8048d74:   e8 19 10 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 32 00 00         	add eax, 0x3287
0x8048d7e:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc               	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                  	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc            	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                  	mov ecx, eax
0x8048d93:   d3 fa                  	sar edx, cl
0x8048d95:   89 d0                  	mov eax, edx
0x8048d97:   eb 04                  	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                     	leave 
0x8048d9e:   c3                     	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                     	push ebp
0x8048da0:   89 e5                  	mov ebp, esp
0x8048da2:   83 ec 04               	sub esp, 4
0x8048da5:   e8 e8 0f 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 32 00 00         	add eax, 0x3256
0x8048daf:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc            	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                  	neg eax
0x8048dbc:   c9                     	leave 
0x8048dbd:   c3                     	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                     	push ebp
0x8048dbf:   89 e5                  	mov ebp, esp
0x8048dc1:   83 ec 08               	sub esp, 8
0x8048dc4:   e8 c9 0f 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 32 00 00         	add eax, 0x3237
0x8048dce:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc            	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc            	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8            	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                  	add eax, edx
0x8048de6:   c9                     	leave 
0x8048de7:   c3                     	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                     	push ebp
0x8048de9:   89 e5                  	mov ebp, esp
0x8048deb:   83 ec 08               	sub esp, 8
0x8048dee:   e8 9f 0f 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 32 00 00         	add eax, 0x320d
0x8048df8:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc            	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8            	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                     	leave 
0x8048e0f:   c3                     	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                     	push ebp
0x8048e11:   89 e5                  	mov ebp, esp
0x8048e13:   83 ec 08               	sub esp, 8
0x8048e16:   e8 77 0f 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 31 00 00         	add eax, 0x31e5
0x8048e20:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc            	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8         	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                     	leave 
0x8048e38:   c3                     	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                     	push ebp
0x8048e3a:   89 e5                  	mov ebp, esp
0x8048e3c:   83 ec 08               	sub esp, 8
0x8048e3f:   e8 4e 0f 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 31 00 00         	add eax, 0x31bc
0x8048e49:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc            	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00         	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                  	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00         	mov edx, 0
0x8048e67:   66 f7 75 f8            	div word ptr [ebp - 8]
0x8048e6b:   89 d0                  	mov eax, edx
0x8048e6d:   eb 04                  	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                     	leave 
0x8048e74:   c3                     	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                     	push ebp
0x8048e76:   89 e5                  	mov ebp, esp
0x8048e78:   83 ec 08               	sub esp, 8
0x8048e7b:   e8 12 0f 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 31 00 00         	add eax, 0x3180
0x8048e85:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc            	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00         	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                  	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00         	mov edx, 0
0x8048ea3:   66 f7 75 f8            	div word ptr [ebp - 8]
0x8048ea7:   eb 04                  	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                     	leave 
0x8048eae:   c3                     	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                     	push ebp
0x8048eb0:   89 e5                  	mov ebp, esp
0x8048eb2:   53                     	push ebx
0x8048eb3:   83 ec 04               	sub esp, 4
0x8048eb6:   e8 d7 0e 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 31 00 00         	add eax, 0x3145
0x8048ec0:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                  	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                  	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8            	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00         	mov ebx, 0xffff
0x8048edf:   89 c1                  	mov ecx, eax
0x8048ee1:   d3 fb                  	sar ebx, cl
0x8048ee3:   89 d8                  	mov eax, ebx
0x8048ee5:   39 c2                  	cmp edx, eax
0x8048ee7:   7f 0f                  	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8            	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                  	mov ecx, eax
0x8048ef2:   d3 e2                  	shl edx, cl
0x8048ef4:   89 d0                  	mov eax, edx
0x8048ef6:   eb 04                  	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8            	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04               	add esp, 4
0x8048eff:   5b                     	pop ebx
0x8048f00:   5d                     	pop ebp
0x8048f01:   c3                     	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                     	push ebp
0x8048f03:   89 e5                  	mov ebp, esp
0x8048f05:   53                     	push ebx
0x8048f06:   83 ec 04               	sub esp, 4
0x8048f09:   e8 84 0e 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 30 00 00         	add eax, 0x30f2
0x8048f13:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                  	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8            	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00         	mov ebx, 0xffff
0x8048f2c:   89 c1                  	mov ecx, eax
0x8048f2e:   d3 fb                  	sar ebx, cl
0x8048f30:   89 d8                  	mov eax, ebx
0x8048f32:   39 c2                  	cmp edx, eax
0x8048f34:   7f 0f                  	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8            	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                  	mov ecx, eax
0x8048f3f:   d3 e2                  	shl edx, cl
0x8048f41:   89 d0                  	mov eax, edx
0x8048f43:   eb 04                  	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8            	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04               	add esp, 4
0x8048f4c:   5b                     	pop ebx
0x8048f4d:   5d                     	pop ebp
0x8048f4e:   c3                     	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                     	push ebp
0x8048f50:   89 e5                  	mov ebp, esp
0x8048f52:   83 ec 04               	sub esp, 4
0x8048f55:   e8 38 0e 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 30 00 00         	add eax, 0x30a6
0x8048f5f:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc            	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                  	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                  	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc            	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                  	mov ecx, eax
0x8048f7b:   d3 fa                  	sar edx, cl
0x8048f7d:   89 d0                  	mov eax, edx
0x8048f7f:   eb 04                  	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                     	leave 
0x8048f86:   c3                     	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                     	push ebp
0x8048f88:   89 e5                  	mov ebp, esp
0x8048f8a:   83 ec 04               	sub esp, 4
0x8048f8d:   e8 00 0e 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 30 00 00         	add eax, 0x306e
0x8048f97:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc            	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                  	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc            	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                  	mov ecx, eax
0x8048fad:   d3 fa                  	sar edx, cl
0x8048faf:   89 d0                  	mov eax, edx
0x8048fb1:   eb 04                  	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                     	leave 
0x8048fb8:   c3                     	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                     	push ebp
0x8048fba:   89 e5                  	mov ebp, esp
0x8048fbc:   e8 d1 0d 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 30 00 00         	add eax, 0x303f
0x8048fc6:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                  	neg eax
0x8048fcb:   5d                     	pop ebp
0x8048fcc:   c3                     	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                     	push ebp
0x8048fce:   89 e5                  	mov ebp, esp
0x8048fd0:   e8 bd 0d 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 30 00 00         	add eax, 0x302b
0x8048fda:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                  	add eax, edx
0x8048fe2:   5d                     	pop ebp
0x8048fe3:   c3                     	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                     	push ebp
0x8048fe5:   89 e5                  	mov ebp, esp
0x8048fe7:   e8 a6 0d 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 30 00 00         	add eax, 0x3014
0x8048ff1:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c               	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                     	pop ebp
0x8048ff8:   c3                     	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                     	push ebp
0x8048ffa:   89 e5                  	mov ebp, esp
0x8048ffc:   e8 91 0d 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 2f 00 00         	add eax, 0x2fff
0x8049006:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c            	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                     	pop ebp
0x804900e:   c3                     	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                     	push ebp
0x8049010:   89 e5                  	mov ebp, esp
0x8049012:   e8 7b 0d 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 2f 00 00         	add eax, 0x2fe9
0x804901c:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                  	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00         	mov edx, 0
0x804902a:   f7 75 0c               	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                  	mov eax, edx
0x804902f:   eb 03                  	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                     	pop ebp
0x8049035:   c3                     	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                     	push ebp
0x8049037:   89 e5                  	mov ebp, esp
0x8049039:   e8 54 0d 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 2f 00 00         	add eax, 0x2fc2
0x8049043:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                  	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00         	mov edx, 0
0x8049051:   f7 75 0c               	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                  	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                     	pop ebp
0x804905a:   c3                     	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                     	push ebp
0x804905c:   89 e5                  	mov ebp, esp
0x804905e:   e8 2f 0d 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 2f 00 00         	add eax, 0x2f9d
0x8049068:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                  	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                  	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff         	mov edx, 0xffffffff
0x804907c:   89 c1                  	mov ecx, eax
0x804907e:   d3 ea                  	shr edx, cl
0x8049080:   89 d0                  	mov eax, edx
0x8049082:   39 45 08               	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                  	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                  	mov ecx, eax
0x804908f:   d3 e2                  	shl edx, cl
0x8049091:   89 d0                  	mov eax, edx
0x8049093:   eb 03                  	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                     	pop ebp
0x8049099:   c3                     	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                     	push ebp
0x804909b:   89 e5                  	mov ebp, esp
0x804909d:   e8 f0 0c 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 2f 00 00         	add eax, 0x2f5e
0x80490a7:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                  	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff         	mov edx, 0xffffffff
0x80490b5:   89 c1                  	mov ecx, eax
0x80490b7:   d3 ea                  	shr edx, cl
0x80490b9:   89 d0                  	mov eax, edx
0x80490bb:   39 45 08               	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                  	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                  	mov ecx, eax
0x80490c8:   d3 e2                  	shl edx, cl
0x80490ca:   89 d0                  	mov eax, edx
0x80490cc:   eb 03                  	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                     	pop ebp
0x80490d2:   c3                     	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                     	push ebp
0x80490d4:   89 e5                  	mov ebp, esp
0x80490d6:   e8 b7 0c 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 2f 00 00         	add eax, 0x2f25
0x80490e0:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                  	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                  	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                  	mov ecx, eax
0x80490f4:   d3 ea                  	shr edx, cl
0x80490f6:   89 d0                  	mov eax, edx
0x80490f8:   eb 03                  	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                     	pop ebp
0x80490fe:   c3                     	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                     	push ebp
0x8049100:   89 e5                  	mov ebp, esp
0x8049102:   e8 8b 0c 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 2e 00 00         	add eax, 0x2ef9
0x804910c:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                  	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                  	mov ecx, eax
0x804911a:   d3 ea                  	shr edx, cl
0x804911c:   89 d0                  	mov eax, edx
0x804911e:   eb 03                  	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                     	pop ebp
0x8049124:   c3                     	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                     	push ebp
0x8049126:   89 e5                  	mov ebp, esp
0x8049128:   e8 65 0c 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 2e 00 00         	add eax, 0x2ed3
0x8049132:   d9 45 08               	fld dword ptr [ebp + 8]
0x8049135:   d9 80 c8 de ff ff      	fld dword ptr [eax - 0x2138]
0x804913b:   de c9                  	fmulp st(1)
0x804913d:   d9 45 0c               	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 c8 de ff ff      	fld dword ptr [eax - 0x2138]
0x8049146:   de c9                  	fmulp st(1)
0x8049148:   de c1                  	faddp st(1)
0x804914a:   d9 e1                  	fabs 
0x804914c:   d9 80 cc de ff ff      	fld dword ptr [eax - 0x2134]
0x8049152:   d9 c9                  	fxch st(1)
0x8049154:   df e9                  	fucomip st(1)
0x8049156:   dd d8                  	fstp st(0)
0x8049158:   76 05                  	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08               	fld dword ptr [ebp + 8]
0x804915d:   eb 06                  	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08               	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c               	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                     	pop ebp
0x8049166:   c3                     	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                     	push ebp
0x8049168:   89 e5                  	mov ebp, esp
0x804916a:   e8 23 0c 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 2e 00 00         	add eax, 0x2e91
0x8049174:   d9 45 08               	fld dword ptr [ebp + 8]
0x8049177:   d9 80 c8 de ff ff      	fld dword ptr [eax - 0x2138]
0x804917d:   de c9                  	fmulp st(1)
0x804917f:   d9 45 0c               	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 c8 de ff ff      	fld dword ptr [eax - 0x2138]
0x8049188:   de c9                  	fmulp st(1)
0x804918a:   de e9                  	fsubp st(1)
0x804918c:   d9 e1                  	fabs 
0x804918e:   d9 80 cc de ff ff      	fld dword ptr [eax - 0x2134]
0x8049194:   d9 c9                  	fxch st(1)
0x8049196:   df e9                  	fucomip st(1)
0x8049198:   dd d8                  	fstp st(0)
0x804919a:   76 05                  	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08               	fld dword ptr [ebp + 8]
0x804919f:   eb 06                  	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08               	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c               	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                     	pop ebp
0x80491a8:   c3                     	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                     	push ebp
0x80491aa:   89 e5                  	mov ebp, esp
0x80491ac:   e8 e1 0b 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 2e 00 00         	add eax, 0x2e4f
0x80491b6:   d9 45 08               	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 d0 de ff ff      	fld dword ptr [eax - 0x2130]
0x80491bf:   de c9                  	fmulp st(1)
0x80491c1:   d9 45 0c               	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 d4 de ff ff      	fld dword ptr [eax - 0x212c]
0x80491ca:   de c9                  	fmulp st(1)
0x80491cc:   de c9                  	fmulp st(1)
0x80491ce:   d9 e1                  	fabs 
0x80491d0:   d9 80 d8 de ff ff      	fld dword ptr [eax - 0x2128]
0x80491d6:   d9 c9                  	fxch st(1)
0x80491d8:   df e9                  	fucomip st(1)
0x80491da:   dd d8                  	fstp st(0)
0x80491dc:   76 05                  	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08               	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                  	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08               	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c               	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                     	pop ebp
0x80491ea:   c3                     	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                     	push ebp
0x80491ec:   89 e5                  	mov ebp, esp
0x80491ee:   e8 9f 0b 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 2e 00 00         	add eax, 0x2e0d
0x80491f8:   d9 45 0c               	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                  	fabs 
0x80491fd:   d9 e8                  	fld1 
0x80491ff:   df e9                  	fucomip st(1)
0x8049201:   dd d8                  	fstp st(0)
0x8049203:   0f 97 c2               	seta dl
0x8049206:   83 f2 01               	xor edx, 1
0x8049209:   84 d2                  	test dl, dl
0x804920b:   75 46                  	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c               	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                  	fldz 
0x8049212:   df e9                  	fucomip st(1)
0x8049214:   dd d8                  	fstp st(0)
0x8049216:   7a 0b                  	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c               	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                  	fldz 
0x804921d:   df e9                  	fucomip st(1)
0x804921f:   dd d8                  	fstp st(0)
0x8049221:   74 38                  	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08               	fld dword ptr [ebp + 8]
0x8049226:   d9 80 dc de ff ff      	fld dword ptr [eax - 0x2124]
0x804922c:   de c9                  	fmulp st(1)
0x804922e:   d9 45 0c               	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 e0 de ff ff      	fld dword ptr [eax - 0x2120]
0x8049237:   de c9                  	fmulp st(1)
0x8049239:   de f9                  	fdivp st(1)
0x804923b:   d9 e1                  	fabs 
0x804923d:   d9 80 e4 de ff ff      	fld dword ptr [eax - 0x211c]
0x8049243:   d9 c9                  	fxch st(1)
0x8049245:   df e9                  	fucomip st(1)
0x8049247:   dd d8                  	fstp st(0)
0x8049249:   0f 97 c0               	seta al
0x804924c:   83 f0 01               	xor eax, 1
0x804924f:   84 c0                  	test al, al
0x8049251:   74 08                  	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08               	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c               	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                  	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08               	fld dword ptr [ebp + 8]
0x804925e:   5d                     	pop ebp
0x804925f:   c3                     	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                     	push ebp
0x8049261:   89 e5                  	mov ebp, esp
0x8049263:   83 ec 10               	sub esp, 0x10
0x8049266:   e8 27 0b 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 2d 00 00         	add eax, 0x2d95
0x8049270:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8               	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c               	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc               	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10               	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0               	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14               	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4               	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8               	fld qword ptr [ebp - 8]
0x804928b:   dd 80 e8 de ff ff      	fld qword ptr [eax - 0x2118]
0x8049291:   de c9                  	fmulp st(1)
0x8049293:   dd 45 f0               	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 e8 de ff ff      	fld qword ptr [eax - 0x2118]
0x804929c:   de c9                  	fmulp st(1)
0x804929e:   de c1                  	faddp st(1)
0x80492a0:   d9 e1                  	fabs 
0x80492a2:   dd 80 f0 de ff ff      	fld qword ptr [eax - 0x2110]
0x80492a8:   d9 c9                  	fxch st(1)
0x80492aa:   df e9                  	fucomip st(1)
0x80492ac:   dd d8                  	fstp st(0)
0x80492ae:   76 05                  	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8               	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                  	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8               	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0               	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                     	leave 
0x80492bc:   c3                     	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                     	push ebp
0x80492be:   89 e5                  	mov ebp, esp
0x80492c0:   83 ec 10               	sub esp, 0x10
0x80492c3:   e8 ca 0a 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 2d 00 00         	add eax, 0x2d38
0x80492cd:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8               	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c               	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc               	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10               	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0               	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14               	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4               	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8               	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 e8 de ff ff      	fld qword ptr [eax - 0x2118]
0x80492ee:   de c9                  	fmulp st(1)
0x80492f0:   dd 45 f0               	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 e8 de ff ff      	fld qword ptr [eax - 0x2118]
0x80492f9:   de c9                  	fmulp st(1)
0x80492fb:   de e9                  	fsubp st(1)
0x80492fd:   d9 e1                  	fabs 
0x80492ff:   dd 80 f0 de ff ff      	fld qword ptr [eax - 0x2110]
0x8049305:   d9 c9                  	fxch st(1)
0x8049307:   df e9                  	fucomip st(1)
0x8049309:   dd d8                  	fstp st(0)
0x804930b:   76 05                  	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8               	fld qword ptr [ebp - 8]
0x8049310:   eb 06                  	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8               	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0               	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                     	leave 
0x8049319:   c3                     	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                     	push ebp
0x804931b:   89 e5                  	mov ebp, esp
0x804931d:   83 ec 10               	sub esp, 0x10
0x8049320:   e8 6d 0a 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 2c 00 00         	add eax, 0x2cdb
0x804932a:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8               	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c               	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc               	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10               	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0               	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14               	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4               	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8               	fld qword ptr [ebp - 8]
0x8049345:   dd 80 f8 de ff ff      	fld qword ptr [eax - 0x2108]
0x804934b:   de c9                  	fmulp st(1)
0x804934d:   dd 45 f0               	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 00 df ff ff      	fld qword ptr [eax - 0x2100]
0x8049356:   de c9                  	fmulp st(1)
0x8049358:   de c9                  	fmulp st(1)
0x804935a:   d9 e1                  	fabs 
0x804935c:   dd 80 08 df ff ff      	fld qword ptr [eax - 0x20f8]
0x8049362:   d9 c9                  	fxch st(1)
0x8049364:   df e9                  	fucomip st(1)
0x8049366:   dd d8                  	fstp st(0)
0x8049368:   76 05                  	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8               	fld qword ptr [ebp - 8]
0x804936d:   eb 06                  	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8               	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0               	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                     	leave 
0x8049376:   c3                     	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                     	push ebp
0x8049378:   89 e5                  	mov ebp, esp
0x804937a:   83 ec 10               	sub esp, 0x10
0x804937d:   e8 10 0a 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 2c 00 00         	add eax, 0x2c7e
0x8049387:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8               	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c               	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc               	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10               	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0               	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14               	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4               	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0               	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                  	fabs 
0x80493a4:   d9 e8                  	fld1 
0x80493a6:   df e9                  	fucomip st(1)
0x80493a8:   dd d8                  	fstp st(0)
0x80493aa:   0f 97 c2               	seta dl
0x80493ad:   83 f2 01               	xor edx, 1
0x80493b0:   84 d2                  	test dl, dl
0x80493b2:   75 46                  	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0               	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                  	fldz 
0x80493b9:   df e9                  	fucomip st(1)
0x80493bb:   dd d8                  	fstp st(0)
0x80493bd:   7a 0b                  	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0               	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                  	fldz 
0x80493c4:   df e9                  	fucomip st(1)
0x80493c6:   dd d8                  	fstp st(0)
0x80493c8:   74 38                  	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8               	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 10 df ff ff      	fld qword ptr [eax - 0x20f0]
0x80493d3:   de c9                  	fmulp st(1)
0x80493d5:   dd 45 f0               	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 18 df ff ff      	fld qword ptr [eax - 0x20e8]
0x80493de:   de c9                  	fmulp st(1)
0x80493e0:   de f9                  	fdivp st(1)
0x80493e2:   d9 e1                  	fabs 
0x80493e4:   dd 80 20 df ff ff      	fld qword ptr [eax - 0x20e0]
0x80493ea:   d9 c9                  	fxch st(1)
0x80493ec:   df e9                  	fucomip st(1)
0x80493ee:   dd d8                  	fstp st(0)
0x80493f0:   0f 97 c0               	seta al
0x80493f3:   83 f0 01               	xor eax, 1
0x80493f6:   84 c0                  	test al, al
0x80493f8:   74 08                  	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8               	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0               	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                  	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8               	fld qword ptr [ebp - 8]
0x8049405:   c9                     	leave 
0x8049406:   c3                     	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                     	push ebp
0x8049408:   89 e5                  	mov ebp, esp
0x804940a:   83 ec 08               	sub esp, 8
0x804940d:   e8 80 09 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 2b 00 00         	add eax, 0x2bee
0x8049417:   d9 45 08               	fld dword ptr [ebp + 8]
0x804941a:   d9 80 28 df ff ff      	fld dword ptr [eax - 0x20d8]
0x8049420:   df e9                  	fucomip st(1)
0x8049422:   dd d8                  	fstp st(0)
0x8049424:   0f 93 c2               	setae dl
0x8049427:   83 f2 01               	xor edx, 1
0x804942a:   84 d2                  	test dl, dl
0x804942c:   74 36                  	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 2c df ff ff      	fld dword ptr [eax - 0x20d4]
0x8049434:   d9 45 08               	fld dword ptr [ebp + 8]
0x8049437:   df e9                  	fucomip st(1)
0x8049439:   dd d8                  	fstp st(0)
0x804943b:   0f 93 c0               	setae al
0x804943e:   83 f0 01               	xor eax, 1
0x8049441:   84 c0                  	test al, al
0x8049443:   74 1f                  	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08               	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe               	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe            	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c               	or ah, 0xc
0x8049452:   66 89 45 fc            	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc               	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8               	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe               	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8               	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                  	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f         	mov eax, 0x7fffffff
0x8049469:   c9                     	leave 
0x804946a:   c3                     	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                     	push ebp
0x804946c:   89 e5                  	mov ebp, esp
0x804946e:   83 ec 10               	sub esp, 0x10
0x8049471:   e8 1c 09 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 2b 00 00         	add eax, 0x2b8a
0x804947b:   c7 45 f0 20 83 b8 ed   	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00   	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                  	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8               	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc               	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00   	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                  	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc               	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01               	and edx, 1
0x80494a0:   85 d2                  	test edx, edx
0x80494a2:   74 0d                  	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc               	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                  	shr edx, 1
0x80494a9:   33 55 f0               	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc               	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                  	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc               	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01            	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00            	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                  	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8               	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc               	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 80 00 00 00   	mov dword ptr [eax + edx*4 + 0x80], ecx
0x80494cb:   83 45 f8 01            	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00   	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                  	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                     	nop 
0x80494d9:   c9                     	leave 
0x80494da:   c3                     	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                     	push ebp
0x80494dc:   89 e5                  	mov ebp, esp
0x80494de:   53                     	push ebx
0x80494df:   83 ec 04               	sub esp, 4
0x80494e2:   e8 ab 08 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 2b 00 00         	add eax, 0x2b19
0x80494ec:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8               	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00      	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                  	mov ebx, edx
0x80494fa:   c1 eb 08               	shr ebx, 8
0x80494fd:   0f b6 4d f8            	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00      	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                  	xor edx, ecx
0x8049509:   0f b6 d2               	movzx edx, dl
0x804950c:   8b 94 90 80 00 00 00   	mov edx, dword ptr [eax + edx*4 + 0x80]
0x8049513:   31 da                  	xor edx, ebx
0x8049515:   89 90 20 00 00 00      	mov dword ptr [eax + 0x20], edx
0x804951b:   90                     	nop 
0x804951c:   83 c4 04               	add esp, 4
0x804951f:   5b                     	pop ebx
0x8049520:   5d                     	pop ebp
0x8049521:   c3                     	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                     	push ebp
0x8049523:   89 e5                  	mov ebp, esp
0x8049525:   e8 68 08 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 2a 00 00         	add eax, 0x2ad6
0x804952f:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0               	movzx eax, al
0x8049535:   50                     	push eax
0x8049536:   e8 a0 ff ff ff         	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04               	add esp, 4
0x804953e:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08               	shr eax, 8
0x8049544:   0f b6 c0               	movzx eax, al
0x8049547:   50                     	push eax
0x8049548:   e8 8e ff ff ff         	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04               	add esp, 4
0x8049550:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10               	shr eax, 0x10
0x8049556:   0f b6 c0               	movzx eax, al
0x8049559:   50                     	push eax
0x804955a:   e8 7c ff ff ff         	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04               	add esp, 4
0x8049562:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18               	shr eax, 0x18
0x8049568:   0f b6 c0               	movzx eax, al
0x804956b:   50                     	push eax
0x804956c:   e8 6a ff ff ff         	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04               	add esp, 4
0x8049574:   90                     	nop 
0x8049575:   c9                     	leave 
0x8049576:   c3                     	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                     	push ebp
0x8049578:   89 e5                  	mov ebp, esp
0x804957a:   53                     	push ebx
0x804957b:   83 ec 04               	sub esp, 4
0x804957e:   e8 0d ee ff ff         	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 2a 00 00      	add ebx, 0x2a7d
0x8049589:   ff 75 08               	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff         	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04               	add esp, 4
0x8049594:   83 7d 10 00            	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                  	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00      	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                  	not eax
0x80495a2:   83 ec 04               	sub esp, 4
0x80495a5:   50                     	push eax
0x80495a6:   ff 75 0c               	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 30 de ff ff      	lea eax, [ebx - 0x21d0]
0x80495af:   50                     	push eax
0x80495b0:   e8 5b ed ff ff         	call 0x8048310 <printf>
0x80495b5:   83 c4 10               	add esp, 0x10
0x80495b8:   90                     	nop 
0x80495b9:   8b 5d fc               	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                     	leave 
0x80495bd:   c3                     	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                     	push ebp
0x80495bf:   89 e5                  	mov ebp, esp
0x80495c1:   53                     	push ebx
0x80495c2:   83 ec 14               	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff         	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 2a 00 00      	add ebx, 0x2a36
0x80495d0:   c7 45 f4 00 00 00 00   	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                  	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4               	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                  	add eax, edx
0x80495e1:   0f b6 00               	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0               	movzx eax, al
0x80495e7:   50                     	push eax
0x80495e8:   e8 ee fe ff ff         	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04               	add esp, 4
0x80495f0:   83 45 f4 01            	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4               	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c               	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                  	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00            	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                  	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00      	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                  	not eax
0x804960a:   83 ec 04               	sub esp, 4
0x804960d:   50                     	push eax
0x804960e:   ff 75 10               	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 54 de ff ff      	lea eax, [ebx - 0x21ac]
0x8049617:   50                     	push eax
0x8049618:   e8 f3 ec ff ff         	call 0x8048310 <printf>
0x804961d:   83 c4 10               	add esp, 0x10
0x8049620:   90                     	nop 
0x8049621:   8b 5d fc               	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                     	leave 
0x8049625:   c3                     	ret 
; function: set_var at 0x8049626 -- 0x8049737
0x8049626:   55                     	push ebp
0x8049627:   89 e5                  	mov ebp, esp
0x8049629:   57                     	push edi
0x804962a:   56                     	push esi
0x804962b:   53                     	push ebx
0x804962c:   83 ec 34               	sub esp, 0x34
0x804962f:   e8 62 07 00 00         	call 0x8049d96 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 29 00 00      	add edx, 0x29cc
0x804963a:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x804963d:   8b 4d 10               	mov ecx, dword ptr [ebp + 0x10]
0x8049640:   8b 75 14               	mov esi, dword ptr [ebp + 0x14]
0x8049643:   8b 5d 1c               	mov ebx, dword ptr [ebp + 0x1c]
0x8049646:   89 5d cc               	mov dword ptr [ebp - 0x34], ebx
0x8049649:   8b 7d 20               	mov edi, dword ptr [ebp + 0x20]
0x804964c:   89 7d c8               	mov dword ptr [ebp - 0x38], edi
0x804964f:   8b 5d 28               	mov ebx, dword ptr [ebp + 0x28]
0x8049652:   89 5d c4               	mov dword ptr [ebp - 0x3c], ebx
0x8049655:   8b 7d 30               	mov edi, dword ptr [ebp + 0x30]
0x8049658:   89 7d c0               	mov dword ptr [ebp - 0x40], edi
0x804965b:   8b 7d 38               	mov edi, dword ptr [ebp + 0x38]
0x804965e:   8b 5d 40               	mov ebx, dword ptr [ebp + 0x40]
0x8049661:   66 89 45 f0            	mov word ptr [ebp - 0x10], ax
0x8049665:   89 c8                  	mov eax, ecx
0x8049667:   88 45 ec               	mov byte ptr [ebp - 0x14], al
0x804966a:   89 f0                  	mov eax, esi
0x804966c:   88 45 e8               	mov byte ptr [ebp - 0x18], al
0x804966f:   0f b6 45 cc            	movzx eax, byte ptr [ebp - 0x34]
0x8049673:   88 45 e4               	mov byte ptr [ebp - 0x1c], al
0x8049676:   0f b7 45 c8            	movzx eax, word ptr [ebp - 0x38]
0x804967a:   66 89 45 e0            	mov word ptr [ebp - 0x20], ax
0x804967e:   0f b7 45 c4            	movzx eax, word ptr [ebp - 0x3c]
0x8049682:   66 89 45 dc            	mov word ptr [ebp - 0x24], ax
0x8049686:   0f b6 45 c0            	movzx eax, byte ptr [ebp - 0x40]
0x804968a:   88 45 d8               	mov byte ptr [ebp - 0x28], al
0x804968d:   89 f8                  	mov eax, edi
0x804968f:   88 45 d4               	mov byte ptr [ebp - 0x2c], al
0x8049692:   89 d8                  	mov eax, ebx
0x8049694:   88 45 d0               	mov byte ptr [ebp - 0x30], al
0x8049697:   0f b7 45 f0            	movzx eax, word ptr [ebp - 0x10]
0x804969b:   66 89 82 28 00 00 00   	mov word ptr [edx + 0x28], ax
0x80496a2:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x80496a5:   89 82 2c 00 00 00      	mov dword ptr [edx + 0x2c], eax
0x80496ab:   0f b6 45 ec            	movzx eax, byte ptr [ebp - 0x14]
0x80496af:   88 82 30 00 00 00      	mov byte ptr [edx + 0x30], al
0x80496b5:   0f b6 45 e8            	movzx eax, byte ptr [ebp - 0x18]
0x80496b9:   88 82 31 00 00 00      	mov byte ptr [edx + 0x31], al
0x80496bf:   8b 45 18               	mov eax, dword ptr [ebp + 0x18]
0x80496c2:   89 82 34 00 00 00      	mov dword ptr [edx + 0x34], eax
0x80496c8:   0f b6 45 e4            	movzx eax, byte ptr [ebp - 0x1c]
0x80496cc:   88 82 38 00 00 00      	mov byte ptr [edx + 0x38], al
0x80496d2:   0f b7 45 e0            	movzx eax, word ptr [ebp - 0x20]
0x80496d6:   66 89 82 3a 00 00 00   	mov word ptr [edx + 0x3a], ax
0x80496dd:   8b 45 24               	mov eax, dword ptr [ebp + 0x24]
0x80496e0:   89 82 3c 00 00 00      	mov dword ptr [edx + 0x3c], eax
0x80496e6:   0f b7 45 dc            	movzx eax, word ptr [ebp - 0x24]
0x80496ea:   66 89 82 40 00 00 00   	mov word ptr [edx + 0x40], ax
0x80496f1:   8b 45 2c               	mov eax, dword ptr [ebp + 0x2c]
0x80496f4:   89 82 44 00 00 00      	mov dword ptr [edx + 0x44], eax
0x80496fa:   0f b6 45 d8            	movzx eax, byte ptr [ebp - 0x28]
0x80496fe:   88 82 48 00 00 00      	mov byte ptr [edx + 0x48], al
0x8049704:   8b 45 34               	mov eax, dword ptr [ebp + 0x34]
0x8049707:   89 82 4c 00 00 00      	mov dword ptr [edx + 0x4c], eax
0x804970d:   0f b6 45 d4            	movzx eax, byte ptr [ebp - 0x2c]
0x8049711:   88 82 50 00 00 00      	mov byte ptr [edx + 0x50], al
0x8049717:   8b 45 3c               	mov eax, dword ptr [ebp + 0x3c]
0x804971a:   89 82 54 00 00 00      	mov dword ptr [edx + 0x54], eax
0x8049720:   0f b6 45 d0            	movzx eax, byte ptr [ebp - 0x30]
0x8049724:   88 82 58 00 00 00      	mov byte ptr [edx + 0x58], al
0x804972a:   b8 00 00 00 00         	mov eax, 0
0x804972f:   83 c4 34               	add esp, 0x34
0x8049732:   5b                     	pop ebx
0x8049733:   5e                     	pop esi
0x8049734:   5f                     	pop edi
0x8049735:   5d                     	pop ebp
0x8049736:   c3                     	ret 
; function: func_1 at 0x8049737 -- 0x8049b28
0x8049737:   55                     	push ebp
0x8049738:   89 e5                  	mov ebp, esp
0x804973a:   57                     	push edi
0x804973b:   56                     	push esi
0x804973c:   53                     	push ebx
0x804973d:   83 ec 7c               	sub esp, 0x7c
0x8049740:   e8 4d 06 00 00         	call 0x8049d92 <__x86.get_pc_thunk.ax>
0x8049745:   05 bb 28 00 00         	add eax, 0x28bb
0x804974a:   c7 45 bc bd a9 a4 33   	mov dword ptr [ebp - 0x44], 0x33a4a9bd
0x8049751:   66 c7 45 ba c9 e8      	mov word ptr [ebp - 0x46], 0xe8c9
0x8049757:   c7 45 f0 01 00 00 00   	mov dword ptr [ebp - 0x10], 1
0x804975e:   c6 45 ef 06            	mov byte ptr [ebp - 0x11], 6
0x8049762:   c6 45 b9 24            	mov byte ptr [ebp - 0x47], 0x24
0x8049766:   c7 45 e8 52 c3 7b 2d   	mov dword ptr [ebp - 0x18], 0x2d7bc352
0x804976d:   c6 45 e7 ff            	mov byte ptr [ebp - 0x19], 0xff
0x8049771:   66 c7 45 e4 ef ac      	mov word ptr [ebp - 0x1c], 0xacef
0x8049777:   c7 45 e0 f9 54 ba 88   	mov dword ptr [ebp - 0x20], 0x88ba54f9
0x804977e:   66 c7 45 b6 c2 32      	mov word ptr [ebp - 0x4a], 0x32c2
0x8049784:   c7 45 dc 01 00 00 00   	mov dword ptr [ebp - 0x24], 1
0x804978b:   c6 45 db 1f            	mov byte ptr [ebp - 0x25], 0x1f
0x804978f:   c7 45 d4 d0 b4 cb 16   	mov dword ptr [ebp - 0x2c], 0x16cbb4d0
0x8049796:   c6 45 b5 57            	mov byte ptr [ebp - 0x4b], 0x57
0x804979a:   c7 45 d0 71 c5 5d 78   	mov dword ptr [ebp - 0x30], 0x785dc571
0x80497a1:   c6 45 cf 4b            	mov byte ptr [ebp - 0x31], 0x4b
0x80497a5:   c7 45 8c 1b e0 af a2   	mov dword ptr [ebp - 0x74], 0xa2afe01b
0x80497ac:   66 c7 45 cc ff ff      	mov word ptr [ebp - 0x34], 0xffff
0x80497b2:   c6 45 b4 f9            	mov byte ptr [ebp - 0x4c], 0xf9
0x80497b6:   c7 45 b0 01 00 00 00   	mov dword ptr [ebp - 0x50], 1
0x80497bd:   c7 45 c8 fb ff ff ff   	mov dword ptr [ebp - 0x38], 0xfffffffb
0x80497c4:   8b 45 bc               	mov eax, dword ptr [ebp - 0x44]
0x80497c7:   89 45 8c               	mov dword ptr [ebp - 0x74], eax
0x80497ca:   66 83 45 ba 01         	add word ptr [ebp - 0x46], 1
0x80497cf:   c7 45 f0 fd ff ff ff   	mov dword ptr [ebp - 0x10], 0xfffffffd
0x80497d6:   e9 d6 02 00 00         	jmp 0x8049ab1 <func_1+0x37a>
0x80497db:   c7 45 ac 07 00 00 00   	mov dword ptr [ebp - 0x54], 7
0x80497e2:   c7 45 c4 d8 83 5a 10   	mov dword ptr [ebp - 0x3c], 0x105a83d8
0x80497e9:   c7 45 ac 78 4b 5e 73   	mov dword ptr [ebp - 0x54], 0x735e4b78
0x80497f0:   83 45 e8 01            	add dword ptr [ebp - 0x18], 1
0x80497f4:   83 7d e8 00            	cmp dword ptr [ebp - 0x18], 0
0x80497f8:   74 21                  	je 0x804981b <func_1+0xe4>
0x80497fa:   81 7d ac 28 61 00 00   	cmp dword ptr [ebp - 0x54], 0x6128
0x8049801:   0f 9f c0               	setg al
0x8049804:   0f b6 c0               	movzx eax, al
0x8049807:   89 45 c4               	mov dword ptr [ebp - 0x3c], eax
0x804980a:   8b 45 c4               	mov eax, dword ptr [ebp - 0x3c]
0x804980d:   0b 45 ac               	or eax, dword ptr [ebp - 0x54]
0x8049810:   85 c0                  	test eax, eax
0x8049812:   74 07                  	je 0x804981b <func_1+0xe4>
0x8049814:   b8 01 00 00 00         	mov eax, 1
0x8049819:   eb 05                  	jmp 0x8049820 <func_1+0xe9>
0x804981b:   b8 00 00 00 00         	mov eax, 0
0x8049820:   3b 45 ac               	cmp eax, dword ptr [ebp - 0x54]
0x8049823:   8b 45 8c               	mov eax, dword ptr [ebp - 0x74]
0x8049826:   c6 45 e7 01            	mov byte ptr [ebp - 0x19], 1
0x804982a:   83 7d f0 00            	cmp dword ptr [ebp - 0x10], 0
0x804982e:   0f 85 78 02 00 00      	jne 0x8049aac <func_1+0x375>
0x8049834:   66 0f be 45 b9         	movsx ax, byte ptr [ebp - 0x47]
0x8049839:   0f b7 d0               	movzx edx, ax
0x804983c:   8b 45 c4               	mov eax, dword ptr [ebp - 0x3c]
0x804983f:   0f b7 c0               	movzx eax, ax
0x8049842:   89 c1                  	mov ecx, eax
0x8049844:   d3 e2                  	shl edx, cl
0x8049846:   89 d0                  	mov eax, edx
0x8049848:   85 c0                  	test eax, eax
0x804984a:   0f 84 bb 01 00 00      	je 0x8049a0b <func_1+0x2d4>
0x8049850:   c6 45 c3 1a            	mov byte ptr [ebp - 0x3d], 0x1a
0x8049854:   c7 45 9c ff ff ff ff   	mov dword ptr [ebp - 0x64], 0xffffffff
0x804985b:   8b 45 c4               	mov eax, dword ptr [ebp - 0x3c]
0x804985e:   89 c2                  	mov edx, eax
0x8049860:   0f b6 45 e7            	movzx eax, byte ptr [ebp - 0x19]
0x8049864:   31 d0                  	xor eax, edx
0x8049866:   88 45 e7               	mov byte ptr [ebp - 0x19], al
0x8049869:   c6 45 ef 01            	mov byte ptr [ebp - 0x11], 1
0x804986d:   0f be 55 ef            	movsx edx, byte ptr [ebp - 0x11]
0x8049871:   8b 45 8c               	mov eax, dword ptr [ebp - 0x74]
0x8049874:   39 c2                  	cmp edx, eax
0x8049876:   0f 9d c0               	setge al
0x8049879:   0f b6 c0               	movzx eax, al
0x804987c:   0f b6 d0               	movzx edx, al
0x804987f:   0f b6 45 c3            	movzx eax, byte ptr [ebp - 0x3d]
0x8049883:   0f b6 c0               	movzx eax, al
0x8049886:   29 c2                  	sub edx, eax
0x8049888:   89 d0                  	mov eax, edx
0x804988a:   f7 d0                  	not eax
0x804988c:   89 c2                  	mov edx, eax
0x804988e:   0f b7 45 e4            	movzx eax, word ptr [ebp - 0x1c]
0x8049892:   21 d0                  	and eax, edx
0x8049894:   66 89 45 e4            	mov word ptr [ebp - 0x1c], ax
0x8049898:   0f b7 55 e4            	movzx edx, word ptr [ebp - 0x1c]
0x804989c:   66 0f be 45 b9         	movsx ax, byte ptr [ebp - 0x47]
0x80498a1:   0f b7 c0               	movzx eax, ax
0x80498a4:   0f af c2               	imul eax, edx
0x80498a7:   3d 05 35 00 00         	cmp eax, 0x3505
0x80498ac:   0f 94 c0               	sete al
0x80498af:   0f b6 d0               	movzx edx, al
0x80498b2:   0f be 45 b9            	movsx eax, byte ptr [ebp - 0x47]
0x80498b6:   39 c2                  	cmp edx, eax
0x80498b8:   0f 9e c0               	setle al
0x80498bb:   0f b6 c0               	movzx eax, al
0x80498be:   39 45 c4               	cmp dword ptr [ebp - 0x3c], eax
0x80498c1:   0f 9d c0               	setge al
0x80498c4:   0f b6 c0               	movzx eax, al
0x80498c7:   39 45 e8               	cmp dword ptr [ebp - 0x18], eax
0x80498ca:   0f 92 c0               	setb al
0x80498cd:   0f b6 d0               	movzx edx, al
0x80498d0:   0f be 45 b9            	movsx eax, byte ptr [ebp - 0x47]
0x80498d4:   39 c2                  	cmp edx, eax
0x80498d6:   7f 05                  	jg 0x80498dd <func_1+0x1a6>
0x80498d8:   8b 45 8c               	mov eax, dword ptr [ebp - 0x74]
0x80498db:   85 c0                  	test eax, eax
0x80498dd:   80 7d b9 01            	cmp byte ptr [ebp - 0x47], 1
0x80498e1:   0f 95 c0               	setne al
0x80498e4:   0f b6 c0               	movzx eax, al
0x80498e7:   39 45 f0               	cmp dword ptr [ebp - 0x10], eax
0x80498ea:   0f 94 c0               	sete al
0x80498ed:   0f b6 c0               	movzx eax, al
0x80498f0:   89 45 e0               	mov dword ptr [ebp - 0x20], eax
0x80498f3:   0f b7 45 cc            	movzx eax, word ptr [ebp - 0x34]
0x80498f7:   83 e8 01               	sub eax, 1
0x80498fa:   66 89 45 cc            	mov word ptr [ebp - 0x34], ax
0x80498fe:   80 7d c3 00            	cmp byte ptr [ebp - 0x3d], 0
0x8049902:   0f 94 c0               	sete al
0x8049905:   0f b6 c0               	movzx eax, al
0x8049908:   89 45 dc               	mov dword ptr [ebp - 0x24], eax
0x804990b:   83 7d dc 00            	cmp dword ptr [ebp - 0x24], 0
0x804990f:   74 1b                  	je 0x804992c <func_1+0x1f5>
0x8049911:   8b 45 e0               	mov eax, dword ptr [ebp - 0x20]
0x8049914:   c0 f8 02               	sar al, 2
0x8049917:   0f be c0               	movsx eax, al
0x804991a:   89 45 9c               	mov dword ptr [ebp - 0x64], eax
0x804991d:   8b 45 9c               	mov eax, dword ptr [ebp - 0x64]
0x8049920:   20 45 db               	and byte ptr [ebp - 0x25], al
0x8049923:   83 45 d4 01            	add dword ptr [ebp - 0x2c], 1
0x8049927:   e9 93 00 00 00         	jmp 0x80499bf <func_1+0x288>
0x804992c:   c7 45 98 e9 16 8d 62   	mov dword ptr [ebp - 0x68], 0x628d16e9
0x8049933:   c7 45 94 05 00 00 00   	mov dword ptr [ebp - 0x6c], 5
0x804993a:   81 7d e8 fc c3 00 00   	cmp dword ptr [ebp - 0x18], 0xc3fc
0x8049941:   0f 94 c0               	sete al
0x8049944:   0f b6 d0               	movzx edx, al
0x8049947:   8b 45 8c               	mov eax, dword ptr [ebp - 0x74]
0x804994a:   39 c2                  	cmp edx, eax
0x804994c:   0f 95 c0               	setne al
0x804994f:   0f b6 d0               	movzx edx, al
0x8049952:   0f be 45 b5            	movsx eax, byte ptr [ebp - 0x4b]
0x8049956:   39 c2                  	cmp edx, eax
0x8049958:   7d 0d                  	jge 0x8049967 <func_1+0x230>
0x804995a:   83 7d 98 00            	cmp dword ptr [ebp - 0x68], 0
0x804995e:   74 07                  	je 0x8049967 <func_1+0x230>
0x8049960:   b8 01 00 00 00         	mov eax, 1
0x8049965:   eb 05                  	jmp 0x804996c <func_1+0x235>
0x8049967:   b8 00 00 00 00         	mov eax, 0
0x804996c:   0a 45 b9               	or al, byte ptr [ebp - 0x47]
0x804996f:   0f be d0               	movsx edx, al
0x8049972:   0f be 45 db            	movsx eax, byte ptr [ebp - 0x25]
0x8049976:   29 c2                  	sub edx, eax
0x8049978:   0f b7 45 cc            	movzx eax, word ptr [ebp - 0x34]
0x804997c:   39 c2                  	cmp edx, eax
0x804997e:   7d 07                  	jge 0x8049987 <func_1+0x250>
0x8049980:   b8 9f ff ff ff         	mov eax, 0xffffff9f
0x8049985:   eb 05                  	jmp 0x804998c <func_1+0x255>
0x8049987:   b8 9e ff ff ff         	mov eax, 0xffffff9e
0x804998c:   33 45 ac               	xor eax, dword ptr [ebp - 0x54]
0x804998f:   3d 5c 6f c9 a4         	cmp eax, 0xa4c96f5c
0x8049994:   0f 96 c0               	setbe al
0x8049997:   0f b6 d0               	movzx edx, al
0x804999a:   0f b7 45 cc            	movzx eax, word ptr [ebp - 0x34]
0x804999e:   09 d0                  	or eax, edx
0x80499a0:   39 45 e0               	cmp dword ptr [ebp - 0x20], eax
0x80499a3:   0f 94 c0               	sete al
0x80499a6:   0f b6 c0               	movzx eax, al
0x80499a9:   39 45 ac               	cmp dword ptr [ebp - 0x54], eax
0x80499ac:   0f 9d c0               	setge al
0x80499af:   0f b6 c0               	movzx eax, al
0x80499b2:   0f b7 55 e4            	movzx edx, word ptr [ebp - 0x1c]
0x80499b6:   0f be da               	movsx ebx, dl
0x80499b9:   99                     	cdq 
0x80499ba:   f7 fb                  	idiv ebx
0x80499bc:   89 45 94               	mov dword ptr [ebp - 0x6c], eax
0x80499bf:   c6 45 c3 1c            	mov byte ptr [ebp - 0x3d], 0x1c
0x80499c3:   eb 3b                  	jmp 0x8049a00 <func_1+0x2c9>
0x80499c5:   66 c7 45 92 fc ff      	mov word ptr [ebp - 0x6e], 0xfffc
0x80499cb:   83 7d ac 00            	cmp dword ptr [ebp - 0x54], 0
0x80499cf:   74 13                  	je 0x80499e4 <func_1+0x2ad>
0x80499d1:   0f b7 45 92            	movzx eax, word ptr [ebp - 0x6e]
0x80499d5:   83 e0 78               	and eax, 0x78
0x80499d8:   89 c2                  	mov edx, eax
0x80499da:   0f b7 45 92            	movzx eax, word ptr [ebp - 0x6e]
0x80499de:   01 d0                  	add eax, edx
0x80499e0:   3c 01                  	cmp al, 1
0x80499e2:   75 07                  	jne 0x80499eb <func_1+0x2b4>
0x80499e4:   b8 01 00 00 00         	mov eax, 1
0x80499e9:   eb 05                  	jmp 0x80499f0 <func_1+0x2b9>
0x80499eb:   b8 00 00 00 00         	mov eax, 0
0x80499f0:   0f b7 c0               	movzx eax, ax
0x80499f3:   89 45 d0               	mov dword ptr [ebp - 0x30], eax
0x80499f6:   0f b6 45 c3            	movzx eax, byte ptr [ebp - 0x3d]
0x80499fa:   83 e8 01               	sub eax, 1
0x80499fd:   88 45 c3               	mov byte ptr [ebp - 0x3d], al
0x8049a00:   80 7d c3 f6            	cmp byte ptr [ebp - 0x3d], 0xf6
0x8049a04:   7d bf                  	jge 0x80499c5 <func_1+0x28e>
0x8049a06:   e9 a2 00 00 00         	jmp 0x8049aad <func_1+0x376>
0x8049a0b:   66 c7 45 aa 00 00      	mov word ptr [ebp - 0x56], 0
0x8049a11:   c7 45 a4 01 00 00 00   	mov dword ptr [ebp - 0x5c], 1
0x8049a18:   c7 45 a0 b4 fd 2b 43   	mov dword ptr [ebp - 0x60], 0x432bfdb4
0x8049a1f:   66 c7 45 aa 42 09      	mov word ptr [ebp - 0x56], 0x942
0x8049a25:   66 c7 45 e4 01 00      	mov word ptr [ebp - 0x1c], 1
0x8049a2b:   8b 45 a4               	mov eax, dword ptr [ebp - 0x5c]
0x8049a2e:   0f bf f0               	movsx esi, ax
0x8049a31:   b8 01 00 00 00         	mov eax, 1
0x8049a36:   99                     	cdq 
0x8049a37:   f7 fe                  	idiv esi
0x8049a39:   85 c0                  	test eax, eax
0x8049a3b:   75 06                  	jne 0x8049a43 <func_1+0x30c>
0x8049a3d:   83 7d ac 00            	cmp dword ptr [ebp - 0x54], 0
0x8049a41:   74 07                  	je 0x8049a4a <func_1+0x313>
0x8049a43:   b8 01 00 00 00         	mov eax, 1
0x8049a48:   eb 05                  	jmp 0x8049a4f <func_1+0x318>
0x8049a4a:   b8 00 00 00 00         	mov eax, 0
0x8049a4f:   89 c2                  	mov edx, eax
0x8049a51:   66 0f be c2            	movsx ax, dl
0x8049a55:   6b c0 89               	imul eax, eax, -0x77
0x8049a58:   66 c1 e8 08            	shr ax, 8
0x8049a5c:   01 d0                  	add eax, edx
0x8049a5e:   c0 f8 06               	sar al, 6
0x8049a61:   89 c1                  	mov ecx, eax
0x8049a63:   89 d0                  	mov eax, edx
0x8049a65:   c0 f8 07               	sar al, 7
0x8049a68:   29 c1                  	sub ecx, eax
0x8049a6a:   89 c8                  	mov eax, ecx
0x8049a6c:   b9 78 00 00 00         	mov ecx, 0x78
0x8049a71:   0f af c1               	imul eax, ecx
0x8049a74:   29 c2                  	sub edx, eax
0x8049a76:   89 d0                  	mov eax, edx
0x8049a78:   38 45 b4               	cmp byte ptr [ebp - 0x4c], al
0x8049a7b:   0f 94 c0               	sete al
0x8049a7e:   88 45 cf               	mov byte ptr [ebp - 0x31], al
0x8049a81:   8b 45 c4               	mov eax, dword ptr [ebp - 0x3c]
0x8049a84:   3b 45 f0               	cmp eax, dword ptr [ebp - 0x10]
0x8049a87:   0f 9c c0               	setl al
0x8049a8a:   0f b6 c0               	movzx eax, al
0x8049a8d:   89 45 b0               	mov dword ptr [ebp - 0x50], eax
0x8049a90:   8b 45 b0               	mov eax, dword ptr [ebp - 0x50]
0x8049a93:   89 45 c8               	mov dword ptr [ebp - 0x38], eax
0x8049a96:   66 c7 45 e4 07 00      	mov word ptr [ebp - 0x1c], 7
0x8049a9c:   c7 45 ac 09 00 00 00   	mov dword ptr [ebp - 0x54], 9
0x8049aa3:   c7 45 a0 01 00 00 00   	mov dword ptr [ebp - 0x60], 1
0x8049aaa:   eb 01                  	jmp 0x8049aad <func_1+0x376>
0x8049aac:   90                     	nop 
0x8049aad:   83 45 f0 07            	add dword ptr [ebp - 0x10], 7
0x8049ab1:   83 7d f0 05            	cmp dword ptr [ebp - 0x10], 5
0x8049ab5:   0f 8f 20 fd ff ff      	jg 0x80497db <func_1+0xa4>
0x8049abb:   0f b6 45 cf            	movzx eax, byte ptr [ebp - 0x31]
0x8049abf:   0f be 4d b5            	movsx ecx, byte ptr [ebp - 0x4b]
0x8049ac3:   0f be 5d db            	movsx ebx, byte ptr [ebp - 0x25]
0x8049ac7:   89 5d 80               	mov dword ptr [ebp - 0x80], ebx
0x8049aca:   0f bf 75 b6            	movsx esi, word ptr [ebp - 0x4a]
0x8049ace:   89 b5 7c ff ff ff      	mov dword ptr [ebp - 0x84], esi
0x8049ad4:   0f b7 7d e4            	movzx edi, word ptr [ebp - 0x1c]
0x8049ad8:   89 bd 78 ff ff ff      	mov dword ptr [ebp - 0x88], edi
0x8049ade:   0f b6 7d e7            	movzx edi, byte ptr [ebp - 0x19]
0x8049ae2:   0f be 75 b9            	movsx esi, byte ptr [ebp - 0x47]
0x8049ae6:   0f be 5d ef            	movsx ebx, byte ptr [ebp - 0x11]
0x8049aea:   0f b7 55 ba            	movzx edx, word ptr [ebp - 0x46]
0x8049aee:   50                     	push eax
0x8049aef:   ff 75 d0               	push dword ptr [ebp - 0x30]
0x8049af2:   51                     	push ecx
0x8049af3:   ff 75 d4               	push dword ptr [ebp - 0x2c]
0x8049af6:   ff 75 80               	push dword ptr [ebp - 0x80]
0x8049af9:   ff 75 dc               	push dword ptr [ebp - 0x24]
0x8049afc:   ff b5 7c ff ff ff      	push dword ptr [ebp - 0x84]
0x8049b02:   ff 75 e0               	push dword ptr [ebp - 0x20]
0x8049b05:   ff b5 78 ff ff ff      	push dword ptr [ebp - 0x88]
0x8049b0b:   57                     	push edi
0x8049b0c:   ff 75 e8               	push dword ptr [ebp - 0x18]
0x8049b0f:   56                     	push esi
0x8049b10:   53                     	push ebx
0x8049b11:   ff 75 f0               	push dword ptr [ebp - 0x10]
0x8049b14:   52                     	push edx
0x8049b15:   e8 0c fb ff ff         	call 0x8049626 <set_var>
0x8049b1a:   83 c4 3c               	add esp, 0x3c
0x8049b1d:   8b 45 c8               	mov eax, dword ptr [ebp - 0x38]
0x8049b20:   8d 65 f4               	lea esp, [ebp - 0xc]
0x8049b23:   5b                     	pop ebx
0x8049b24:   5e                     	pop esi
0x8049b25:   5f                     	pop edi
0x8049b26:   5d                     	pop ebp
0x8049b27:   c3                     	ret 
; function: main at 0x8049b28 -- 0x8049d92
0x8049b28:   8d 4c 24 04            	lea ecx, [esp + 4]
0x8049b2c:   83 e4 f0               	and esp, 0xfffffff0
0x8049b2f:   ff 71 fc               	push dword ptr [ecx - 4]
0x8049b32:   55                     	push ebp
0x8049b33:   89 e5                  	mov ebp, esp
0x8049b35:   53                     	push ebx
0x8049b36:   51                     	push ecx
0x8049b37:   83 ec 10               	sub esp, 0x10
0x8049b3a:   e8 51 e8 ff ff         	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049b3f:   81 c3 c1 24 00 00      	add ebx, 0x24c1
0x8049b45:   89 c8                  	mov eax, ecx
0x8049b47:   c7 45 f4 00 00 00 00   	mov dword ptr [ebp - 0xc], 0
0x8049b4e:   83 38 02               	cmp dword ptr [eax], 2
0x8049b51:   75 26                  	jne 0x8049b79 <main+0x51>
0x8049b53:   8b 40 04               	mov eax, dword ptr [eax + 4]
0x8049b56:   83 c0 04               	add eax, 4
0x8049b59:   8b 00                  	mov eax, dword ptr [eax]
0x8049b5b:   83 ec 08               	sub esp, 8
0x8049b5e:   8d 93 78 de ff ff      	lea edx, [ebx - 0x2188]
0x8049b64:   52                     	push edx
0x8049b65:   50                     	push eax
0x8049b66:   e8 95 e7 ff ff         	call 0x8048300 <strcmp>
0x8049b6b:   83 c4 10               	add esp, 0x10
0x8049b6e:   85 c0                  	test eax, eax
0x8049b70:   75 07                  	jne 0x8049b79 <main+0x51>
0x8049b72:   c7 45 f4 01 00 00 00   	mov dword ptr [ebp - 0xc], 1
0x8049b79:   e8 d8 e8 ff ff         	call 0x8048456 <platform_main_begin>
0x8049b7e:   e8 e8 f8 ff ff         	call 0x804946b <crc32_gentab>
0x8049b83:   e8 af fb ff ff         	call 0x8049737 <func_1>
0x8049b88:   8b 83 24 00 00 00      	mov eax, dword ptr [ebx + 0x24]
0x8049b8e:   83 ec 04               	sub esp, 4
0x8049b91:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049b94:   8d 93 7a de ff ff      	lea edx, [ebx - 0x2186]
0x8049b9a:   52                     	push edx
0x8049b9b:   50                     	push eax
0x8049b9c:   e8 d6 f9 ff ff         	call 0x8049577 <transparent_crc>
0x8049ba1:   83 c4 10               	add esp, 0x10
0x8049ba4:   0f b7 83 28 00 00 00   	movzx eax, word ptr [ebx + 0x28]
0x8049bab:   0f b7 c0               	movzx eax, ax
0x8049bae:   83 ec 04               	sub esp, 4
0x8049bb1:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049bb4:   8d 93 7e de ff ff      	lea edx, [ebx - 0x2182]
0x8049bba:   52                     	push edx
0x8049bbb:   50                     	push eax
0x8049bbc:   e8 b6 f9 ff ff         	call 0x8049577 <transparent_crc>
0x8049bc1:   83 c4 10               	add esp, 0x10
0x8049bc4:   8b 83 2c 00 00 00      	mov eax, dword ptr [ebx + 0x2c]
0x8049bca:   89 c2                  	mov edx, eax
0x8049bcc:   83 ec 04               	sub esp, 4
0x8049bcf:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049bd2:   8d 83 82 de ff ff      	lea eax, [ebx - 0x217e]
0x8049bd8:   50                     	push eax
0x8049bd9:   52                     	push edx
0x8049bda:   e8 98 f9 ff ff         	call 0x8049577 <transparent_crc>
0x8049bdf:   83 c4 10               	add esp, 0x10
0x8049be2:   0f b6 83 30 00 00 00   	movzx eax, byte ptr [ebx + 0x30]
0x8049be9:   0f be c0               	movsx eax, al
0x8049bec:   83 ec 04               	sub esp, 4
0x8049bef:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049bf2:   8d 93 86 de ff ff      	lea edx, [ebx - 0x217a]
0x8049bf8:   52                     	push edx
0x8049bf9:   50                     	push eax
0x8049bfa:   e8 78 f9 ff ff         	call 0x8049577 <transparent_crc>
0x8049bff:   83 c4 10               	add esp, 0x10
0x8049c02:   0f b6 83 31 00 00 00   	movzx eax, byte ptr [ebx + 0x31]
0x8049c09:   0f be c0               	movsx eax, al
0x8049c0c:   83 ec 04               	sub esp, 4
0x8049c0f:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049c12:   8d 93 8b de ff ff      	lea edx, [ebx - 0x2175]
0x8049c18:   52                     	push edx
0x8049c19:   50                     	push eax
0x8049c1a:   e8 58 f9 ff ff         	call 0x8049577 <transparent_crc>
0x8049c1f:   83 c4 10               	add esp, 0x10
0x8049c22:   8b 83 34 00 00 00      	mov eax, dword ptr [ebx + 0x34]
0x8049c28:   83 ec 04               	sub esp, 4
0x8049c2b:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049c2e:   8d 93 90 de ff ff      	lea edx, [ebx - 0x2170]
0x8049c34:   52                     	push edx
0x8049c35:   50                     	push eax
0x8049c36:   e8 3c f9 ff ff         	call 0x8049577 <transparent_crc>
0x8049c3b:   83 c4 10               	add esp, 0x10
0x8049c3e:   0f b6 83 38 00 00 00   	movzx eax, byte ptr [ebx + 0x38]
0x8049c45:   0f b6 c0               	movzx eax, al
0x8049c48:   83 ec 04               	sub esp, 4
0x8049c4b:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049c4e:   8d 93 95 de ff ff      	lea edx, [ebx - 0x216b]
0x8049c54:   52                     	push edx
0x8049c55:   50                     	push eax
0x8049c56:   e8 1c f9 ff ff         	call 0x8049577 <transparent_crc>
0x8049c5b:   83 c4 10               	add esp, 0x10
0x8049c5e:   0f b7 83 3a 00 00 00   	movzx eax, word ptr [ebx + 0x3a]
0x8049c65:   0f b7 c0               	movzx eax, ax
0x8049c68:   83 ec 04               	sub esp, 4
0x8049c6b:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049c6e:   8d 93 9a de ff ff      	lea edx, [ebx - 0x2166]
0x8049c74:   52                     	push edx
0x8049c75:   50                     	push eax
0x8049c76:   e8 fc f8 ff ff         	call 0x8049577 <transparent_crc>
0x8049c7b:   83 c4 10               	add esp, 0x10
0x8049c7e:   8b 83 3c 00 00 00      	mov eax, dword ptr [ebx + 0x3c]
0x8049c84:   83 ec 04               	sub esp, 4
0x8049c87:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049c8a:   8d 93 9f de ff ff      	lea edx, [ebx - 0x2161]
0x8049c90:   52                     	push edx
0x8049c91:   50                     	push eax
0x8049c92:   e8 e0 f8 ff ff         	call 0x8049577 <transparent_crc>
0x8049c97:   83 c4 10               	add esp, 0x10
0x8049c9a:   0f b7 83 40 00 00 00   	movzx eax, word ptr [ebx + 0x40]
0x8049ca1:   98                     	cwde 
0x8049ca2:   83 ec 04               	sub esp, 4
0x8049ca5:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049ca8:   8d 93 a4 de ff ff      	lea edx, [ebx - 0x215c]
0x8049cae:   52                     	push edx
0x8049caf:   50                     	push eax
0x8049cb0:   e8 c2 f8 ff ff         	call 0x8049577 <transparent_crc>
0x8049cb5:   83 c4 10               	add esp, 0x10
0x8049cb8:   8b 83 44 00 00 00      	mov eax, dword ptr [ebx + 0x44]
0x8049cbe:   83 ec 04               	sub esp, 4
0x8049cc1:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049cc4:   8d 93 a9 de ff ff      	lea edx, [ebx - 0x2157]
0x8049cca:   52                     	push edx
0x8049ccb:   50                     	push eax
0x8049ccc:   e8 a6 f8 ff ff         	call 0x8049577 <transparent_crc>
0x8049cd1:   83 c4 10               	add esp, 0x10
0x8049cd4:   0f b6 83 48 00 00 00   	movzx eax, byte ptr [ebx + 0x48]
0x8049cdb:   0f be c0               	movsx eax, al
0x8049cde:   83 ec 04               	sub esp, 4
0x8049ce1:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049ce4:   8d 93 ae de ff ff      	lea edx, [ebx - 0x2152]
0x8049cea:   52                     	push edx
0x8049ceb:   50                     	push eax
0x8049cec:   e8 86 f8 ff ff         	call 0x8049577 <transparent_crc>
0x8049cf1:   83 c4 10               	add esp, 0x10
0x8049cf4:   8b 83 4c 00 00 00      	mov eax, dword ptr [ebx + 0x4c]
0x8049cfa:   83 ec 04               	sub esp, 4
0x8049cfd:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049d00:   8d 93 b3 de ff ff      	lea edx, [ebx - 0x214d]
0x8049d06:   52                     	push edx
0x8049d07:   50                     	push eax
0x8049d08:   e8 6a f8 ff ff         	call 0x8049577 <transparent_crc>
0x8049d0d:   83 c4 10               	add esp, 0x10
0x8049d10:   0f b6 83 50 00 00 00   	movzx eax, byte ptr [ebx + 0x50]
0x8049d17:   0f be c0               	movsx eax, al
0x8049d1a:   83 ec 04               	sub esp, 4
0x8049d1d:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049d20:   8d 93 b8 de ff ff      	lea edx, [ebx - 0x2148]
0x8049d26:   52                     	push edx
0x8049d27:   50                     	push eax
0x8049d28:   e8 4a f8 ff ff         	call 0x8049577 <transparent_crc>
0x8049d2d:   83 c4 10               	add esp, 0x10
0x8049d30:   8b 83 54 00 00 00      	mov eax, dword ptr [ebx + 0x54]
0x8049d36:   83 ec 04               	sub esp, 4
0x8049d39:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049d3c:   8d 93 bd de ff ff      	lea edx, [ebx - 0x2143]
0x8049d42:   52                     	push edx
0x8049d43:   50                     	push eax
0x8049d44:   e8 2e f8 ff ff         	call 0x8049577 <transparent_crc>
0x8049d49:   83 c4 10               	add esp, 0x10
0x8049d4c:   0f b6 83 58 00 00 00   	movzx eax, byte ptr [ebx + 0x58]
0x8049d53:   0f b6 c0               	movzx eax, al
0x8049d56:   83 ec 04               	sub esp, 4
0x8049d59:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049d5c:   8d 93 c2 de ff ff      	lea edx, [ebx - 0x213e]
0x8049d62:   52                     	push edx
0x8049d63:   50                     	push eax
0x8049d64:   e8 0e f8 ff ff         	call 0x8049577 <transparent_crc>
0x8049d69:   83 c4 10               	add esp, 0x10
0x8049d6c:   8b 83 20 00 00 00      	mov eax, dword ptr [ebx + 0x20]
0x8049d72:   f7 d0                  	not eax
0x8049d74:   83 ec 08               	sub esp, 8
0x8049d77:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049d7a:   50                     	push eax
0x8049d7b:   e8 e6 e6 ff ff         	call 0x8048466 <platform_main_end>
0x8049d80:   83 c4 10               	add esp, 0x10
0x8049d83:   b8 00 00 00 00         	mov eax, 0
0x8049d88:   8d 65 f8               	lea esp, [ebp - 8]
0x8049d8b:   59                     	pop ecx
0x8049d8c:   5b                     	pop ebx
0x8049d8d:   5d                     	pop ebp
0x8049d8e:   8d 61 fc               	lea esp, [ecx - 4]
0x8049d91:   c3                     	ret 
; function: __x86.get_pc_thunk.ax at 0x8049d92 -- 0x8049d96
0x8049d92:   8b 04 24               	mov eax, dword ptr [esp]
0x8049d95:   c3                     	ret 
; function: __x86.get_pc_thunk.dx at 0x8049d96 -- 0x8049d9a
0x8049d96:   8b 14 24               	mov edx, dword ptr [esp]
0x8049d99:   c3                     	ret 
; data inside code section at 0x8049d9a -- 0x8049da0
0x8049d9a:   66 90 66 90 66 90                                  |f.f.f.          |
; function: __libc_csu_init at 0x8049da0 -- 0x8049dfd
0x8049da0:   55                     	push ebp
0x8049da1:   57                     	push edi
0x8049da2:   56                     	push esi
0x8049da3:   53                     	push ebx
0x8049da4:   e8 e7 e5 ff ff         	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049da9:   81 c3 57 22 00 00      	add ebx, 0x2257
0x8049daf:   83 ec 0c               	sub esp, 0xc
0x8049db2:   8b 6c 24 28            	mov ebp, dword ptr [esp + 0x28]
0x8049db6:   8d b3 10 ff ff ff      	lea esi, [ebx - 0xf0]
0x8049dbc:   e8 0b e5 ff ff         	call 0x80482cc <_init>
0x8049dc1:   8d 83 0c ff ff ff      	lea eax, [ebx - 0xf4]
0x8049dc7:   29 c6                  	sub esi, eax
0x8049dc9:   c1 fe 02               	sar esi, 2
0x8049dcc:   85 f6                  	test esi, esi
0x8049dce:   74 25                  	je 0x8049df5 <__libc_csu_init+0x55>
0x8049dd0:   31 ff                  	xor edi, edi
0x8049dd2:   8d b6 00 00 00 00      	lea esi, [esi]
0x8049dd8:   83 ec 04               	sub esp, 4
0x8049ddb:   55                     	push ebp
0x8049ddc:   ff 74 24 2c            	push dword ptr [esp + 0x2c]
0x8049de0:   ff 74 24 2c            	push dword ptr [esp + 0x2c]
0x8049de4:   ff 94 bb 0c ff ff ff   	call dword ptr [ebx + edi*4 - 0xf4]
0x8049deb:   83 c7 01               	add edi, 1
0x8049dee:   83 c4 10               	add esp, 0x10
0x8049df1:   39 fe                  	cmp esi, edi
0x8049df3:   75 e3                  	jne 0x8049dd8 <__libc_csu_init+0x38>
0x8049df5:   83 c4 0c               	add esp, 0xc
0x8049df8:   5b                     	pop ebx
0x8049df9:   5e                     	pop esi
0x8049dfa:   5f                     	pop edi
0x8049dfb:   5d                     	pop ebp
0x8049dfc:   c3                     	ret 
; data inside code section at 0x8049dfd -- 0x8049e00
0x8049dfd:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x8049e00 -- 0x8049e02
0x8049e00:   f3 c3                  	ret 
; section: .fini
; function: _fini at 0x8049e04 -- 0x8049e18
0x8049e04:   53                     	push ebx
0x8049e05:   83 ec 08               	sub esp, 8
0x8049e08:   e8 83 e5 ff ff         	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049e0d:   81 c3 f3 21 00 00      	add ebx, 0x21f3
0x8049e13:   83 c4 08               	add esp, 8
0x8049e16:   5b                     	pop ebx
0x8049e17:   c3                     	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 1c 9e 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc bf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c c0 04 08 07 01 00 00  10 c0 04 08 07 02 00 00   |................|
0x80482c4:   14 c0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x8049e18:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x8049e28:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x8049e38:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x8049e48:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x8049e58:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x8049e68:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x8049e78:   31 00 67 5f 32 00 67 5f  34 00 67 5f 37 00 67 5f   |1.g_2.g_4.g_7.g_|
0x8049e88:   31 35 00 67 5f 31 36 00  67 5f 31 37 00 67 5f 32   |15.g_16.g_17.g_2|
0x8049e98:   33 00 67 5f 33 36 00 67  5f 33 37 00 67 5f 33 38   |3.g_36.g_37.g_38|
0x8049ea8:   00 67 5f 34 36 00 67 5f  34 39 00 67 5f 35 30 00   |.g_46.g_49.g_50.|
0x8049eb8:   67 5f 35 39 00 67 5f 37  36 00 67 5f 38 37 00 00   |g_59.g_76.g_87..|
0x8049ec8:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x8049ed8:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x8049ee8:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x8049ef8:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x8049f08:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x8049f18:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x8049f28:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x8049f30:   01 1b 03 3b b8 02 00 00  56 00 00 00 c0 e3 ff ff   |...;....V.......|
0x8049f40:   e8 02 00 00 00 e4 ff ff  0c 03 00 00 50 e4 ff ff   |............P...|
0x8049f50:   d4 02 00 00 26 e5 ff ff  20 03 00 00 36 e5 ff ff   |....&... ...6...|
0x8049f60:   40 03 00 00 64 e5 ff ff  64 03 00 00 82 e5 ff ff   |@...d...d.......|
0x8049f70:   84 03 00 00 aa e5 ff ff  a4 03 00 00 d4 e5 ff ff   |................|
0x8049f80:   c4 03 00 00 fd e5 ff ff  e4 03 00 00 40 e6 ff ff   |............@...|
0x8049f90:   04 04 00 00 81 e6 ff ff  24 04 00 00 d9 e6 ff ff   |........$.......|
0x8049fa0:   48 04 00 00 2b e7 ff ff  6c 04 00 00 68 e7 ff ff   |H...+...l...h...|
0x8049fb0:   8c 04 00 00 9f e7 ff ff  ac 04 00 00 be e7 ff ff   |................|
0x8049fc0:   cc 04 00 00 e8 e7 ff ff  ec 04 00 00 14 e8 ff ff   |................|
0x8049fd0:   0c 05 00 00 3f e8 ff ff  2c 05 00 00 88 e8 ff ff   |....?...,.......|
0x8049fe0:   4c 05 00 00 cf e8 ff ff  6c 05 00 00 29 e9 ff ff   |L.......l...)...|
0x8049ff0:   90 05 00 00 7d e9 ff ff  b4 05 00 00 bc e9 ff ff   |....}...........|
0x804a000:   d4 05 00 00 f5 e9 ff ff  f4 05 00 00 17 ea ff ff   |................|
0x804a010:   14 06 00 00 65 ea ff ff  34 06 00 00 a1 ea ff ff   |....e...4.......|
0x804a020:   54 06 00 00 2a eb ff ff  74 06 00 00 5c eb ff ff   |T...*...t...\...|
0x804a030:   94 06 00 00 8c eb ff ff  b4 06 00 00 d1 eb ff ff   |................|
0x804a040:   d4 06 00 00 10 ec ff ff  f4 06 00 00 42 ec ff ff   |............B...|
0x804a050:   14 07 00 00 6e ec ff ff  34 07 00 00 8c ec ff ff   |....n...4.......|
0x804a060:   54 07 00 00 b4 ec ff ff  74 07 00 00 d9 ec ff ff   |T.......t.......|
0x804a070:   94 07 00 00 fe ec ff ff  b4 07 00 00 35 ed ff ff   |............5...|
0x804a080:   d4 07 00 00 69 ed ff ff  f4 07 00 00 bb ed ff ff   |....i...........|
0x804a090:   18 08 00 00 07 ee ff ff  3c 08 00 00 3e ee ff ff   |........<...>...|
0x804a0a0:   5c 08 00 00 6f ee ff ff  7c 08 00 00 8e ee ff ff   |\...o...|.......|
0x804a0b0:   9c 08 00 00 b8 ee ff ff  bc 08 00 00 e0 ee ff ff   |................|
0x804a0c0:   dc 08 00 00 09 ef ff ff  fc 08 00 00 45 ef ff ff   |............E...|
0x804a0d0:   1c 09 00 00 7f ef ff ff  3c 09 00 00 d2 ef ff ff   |........<.......|
0x804a0e0:   60 09 00 00 1f f0 ff ff  84 09 00 00 57 f0 ff ff   |`...........W...|
0x804a0f0:   a4 09 00 00 89 f0 ff ff  c4 09 00 00 9d f0 ff ff   |................|
0x804a100:   e4 09 00 00 b4 f0 ff ff  04 0a 00 00 c9 f0 ff ff   |................|
0x804a110:   24 0a 00 00 df f0 ff ff  44 0a 00 00 06 f1 ff ff   |$.......D.......|
0x804a120:   64 0a 00 00 2b f1 ff ff  84 0a 00 00 6a f1 ff ff   |d...+.......j...|
0x804a130:   a4 0a 00 00 a3 f1 ff ff  c4 0a 00 00 cf f1 ff ff   |................|
0x804a140:   e4 0a 00 00 f5 f1 ff ff  04 0b 00 00 37 f2 ff ff   |............7...|
0x804a150:   24 0b 00 00 79 f2 ff ff  44 0b 00 00 bb f2 ff ff   |$...y...D.......|
0x804a160:   64 0b 00 00 30 f3 ff ff  84 0b 00 00 8d f3 ff ff   |d...0...........|
0x804a170:   a4 0b 00 00 ea f3 ff ff  c4 0b 00 00 47 f4 ff ff   |............G...|
0x804a180:   e4 0b 00 00 d7 f4 ff ff  04 0c 00 00 3b f5 ff ff   |............;...|
0x804a190:   24 0c 00 00 ab f5 ff ff  44 0c 00 00 f2 f5 ff ff   |$.......D.......|
0x804a1a0:   68 0c 00 00 47 f6 ff ff  88 0c 00 00 8e f6 ff ff   |h...G...........|
0x804a1b0:   ac 0c 00 00 f6 f6 ff ff  d0 0c 00 00 07 f8 ff ff   |................|
0x804a1c0:   00 0d 00 00 f8 fb ff ff  30 0d 00 00 62 fe ff ff   |........0...b...|
0x804a1d0:   68 0d 00 00 66 fe ff ff  7c 0d 00 00 70 fe ff ff   |h...f...|...p...|
0x804a1e0:   90 0d 00 00 d0 fe ff ff  dc 0d 00 00 14            |.............   |
; section: .eh_frame
0x804a1ec:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804a1fc:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804a20c:   74 e1 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |t........... ...|
0x804a21c:   30 00 00 00 d0 e0 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804a22c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804a23c:   10 00 00 00 54 00 00 00  ec e0 ff ff 08 00 00 00   |....T...........|
0x804a24c:   00 00 00 00 1c 00 00 00  68 00 00 00 fe e1 ff ff   |........h.......|
0x804a25c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804a26c:   04 04 00 00 20 00 00 00  88 00 00 00 ee e1 ff ff   |.... ...........|
0x804a27c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804a28c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804a29c:   f8 e1 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804a2ac:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804a2bc:   f6 e1 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804a2cc:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804a2dc:   fe e1 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804a2ec:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804a2fc:   08 e2 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804a30c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804a31c:   11 e2 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804a32c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804a33c:   34 e2 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |4...A....A....B.|
0x804a34c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804a35c:   55 e2 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |U...X....A....B.|
0x804a36c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804a37c:   90 01 00 00 89 e2 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804a38c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804a39c:   1c 00 00 00 b4 01 00 00  b7 e2 ff ff 3d 00 00 00   |............=...|
0x804a3ac:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804a3bc:   1c 00 00 00 d4 01 00 00  d4 e2 ff ff 37 00 00 00   |............7...|
0x804a3cc:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804a3dc:   1c 00 00 00 f4 01 00 00  eb e2 ff ff 1f 00 00 00   |................|
0x804a3ec:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804a3fc:   1c 00 00 00 14 02 00 00  ea e2 ff ff 2a 00 00 00   |............*...|
0x804a40c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804a41c:   1c 00 00 00 34 02 00 00  f4 e2 ff ff 2c 00 00 00   |....4.......,...|
0x804a42c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804a43c:   1c 00 00 00 54 02 00 00  00 e3 ff ff 2b 00 00 00   |....T.......+...|
0x804a44c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804a45c:   1c 00 00 00 74 02 00 00  0b e3 ff ff 49 00 00 00   |....t.......I...|
0x804a46c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804a47c:   1c 00 00 00 94 02 00 00  34 e3 ff ff 47 00 00 00   |........4...G...|
0x804a48c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804a49c:   20 00 00 00 b4 02 00 00  5b e3 ff ff 5a 00 00 00   | .......[...Z...|
0x804a4ac:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804a4bc:   c5 0c 04 04 20 00 00 00  d8 02 00 00 91 e3 ff ff   |.... ...........|
0x804a4cc:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804a4dc:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804a4ec:   c1 e3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804a4fc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804a50c:   e0 e3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804a51c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804a52c:   f9 e3 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804a53c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804a54c:   fb e3 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804a55c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804a56c:   29 e4 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |)...<....A....B.|
0x804a57c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804a58c:   45 e4 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |E........A....B.|
0x804a59c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804a5ac:   ae e4 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804a5bc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804a5cc:   c0 e4 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804a5dc:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804a5ec:   d0 e4 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804a5fc:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804a60c:   f5 e4 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804a61c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804a62c:   14 e5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804a63c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804a64c:   26 e5 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |&...,....A....B.|
0x804a65c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804a66c:   32 e5 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |2........A....B.|
0x804a67c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804a68c:   30 e5 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |0...(....A....B.|
0x804a69c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804a6ac:   38 e5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |8...%....A....B.|
0x804a6bc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804a6cc:   3d e5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |=...%....A....B.|
0x804a6dc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804a6ec:   42 e5 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |B...7....A....B.|
0x804a6fc:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804a70c:   59 e5 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |Y...4....A....B.|
0x804a71c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804a72c:   6d e5 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |m...R....A....B.|
0x804a73c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804a74c:   60 05 00 00 9b e5 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804a75c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804a76c:   1c 00 00 00 84 05 00 00  c3 e5 ff ff 37 00 00 00   |............7...|
0x804a77c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804a78c:   1c 00 00 00 a4 05 00 00  da e5 ff ff 31 00 00 00   |............1...|
0x804a79c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804a7ac:   1c 00 00 00 c4 05 00 00  eb e5 ff ff 1f 00 00 00   |................|
0x804a7bc:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804a7cc:   1c 00 00 00 e4 05 00 00  ea e5 ff ff 2a 00 00 00   |............*...|
0x804a7dc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804a7ec:   1c 00 00 00 04 06 00 00  f4 e5 ff ff 28 00 00 00   |............(...|
0x804a7fc:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804a80c:   1c 00 00 00 24 06 00 00  fc e5 ff ff 29 00 00 00   |....$.......)...|
0x804a81c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804a82c:   1c 00 00 00 44 06 00 00  05 e6 ff ff 3c 00 00 00   |....D.......<...|
0x804a83c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804a84c:   1c 00 00 00 64 06 00 00  21 e6 ff ff 3a 00 00 00   |....d...!...:...|
0x804a85c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804a86c:   20 00 00 00 84 06 00 00  3b e6 ff ff 53 00 00 00   | .......;...S...|
0x804a87c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804a88c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 6a e6 ff ff   |.... .......j...|
0x804a89c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804a8ac:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804a8bc:   93 e6 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804a8cc:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804a8dc:   ab e6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804a8ec:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804a8fc:   bd e6 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804a90c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804a91c:   b1 e6 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804a92c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804a93c:   a8 e6 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804a94c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804a95c:   9d e6 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804a96c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804a97c:   93 e6 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804a98c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804a99c:   9a e6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804a9ac:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804a9bc:   9f e6 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804a9cc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804a9dc:   be e6 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804a9ec:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804a9fc:   d7 e6 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804aa0c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804aa1c:   e3 e6 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804aa2c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804aa3c:   e9 e6 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804aa4c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804aa5c:   0b e7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804aa6c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804aa7c:   2d e7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |-...B....A....B.|
0x804aa8c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804aa9c:   4f e7 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |O...u....A....B.|
0x804aaac:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804aabc:   a4 e7 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804aacc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804aadc:   e1 e7 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804aaec:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804aafc:   1e e8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804ab0c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804ab1c:   5b e8 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |[........A....B.|
0x804ab2c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804ab3c:   cb e8 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804ab4c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804ab5c:   0f e9 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804ab6c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804ab7c:   5f e9 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |_...G....A....B.|
0x804ab8c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804ab9c:   b0 09 00 00 82 e9 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804abac:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804abbc:   d0 09 00 00 b7 e9 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804abcc:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804abdc:   20 00 00 00 f4 09 00 00  da e9 ff ff 68 00 00 00   | ...........h...|
0x804abec:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804abfc:   0c 04 04 00 2c 00 00 00  18 0a 00 00 1e ea ff ff   |....,...........|
0x804ac0c:   11 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804ac1c:   86 04 83 05 03 04 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804ac2c:   04 00 00 00 2c 00 00 00  48 0a 00 00 ff ea ff ff   |....,...H.......|
0x804ac3c:   f1 03 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804ac4c:   86 04 83 05 03 e4 03 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804ac5c:   04 00 00 00 34 00 00 00  78 0a 00 00 c0 ee ff ff   |....4...x.......|
0x804ac6c:   6a 02 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |j....D...G...u.D|
0x804ac7c:   0f 03 75 78 06 10 03 02  75 7c 03 55 02 c1 0c 01   |..ux....u|.U....|
0x804ac8c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804ac9c:   b0 0a 00 00 f2 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804acac:   10 00 00 00 c4 0a 00 00  e2 f0 ff ff 04 00 00 00   |................|
0x804acbc:   00 00 00 00 48 00 00 00  d8 0a 00 00 d8 f0 ff ff   |....H...........|
0x804accc:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804acdc:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804acec:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804acfc:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804ad0c:   10 00 00 00 24 0b 00 00  ec f0 ff ff 02 00 00 00   |....$...........|
0x804ad1c:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804bf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804bf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804bf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804bf24:   0d 00 00 00 04 9e 04 08  19 00 00 00 0c bf 04 08   |................|
0x804bf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 bf 04 08   |................|
0x804bf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804bf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804bf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804bf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 c0 04 08   |................|
0x804bf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804bf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804bfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804bfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804bfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804bfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804bfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804bff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804bffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804c000:   14 bf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804c010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804c018:   00 00 00 00 00 00 00 00  ff ff ff ff bd a9 a4 33   |...............3|
0x804c028:   c9 e8 00 00 01 00 00 00  06 24 00 00 52 c3 7b 2d   |.........$..R.{-|
0x804c038:   ff 00 ef ac f9 54 ba 88  c2 32 00 00 01 00 00 00   |.....T...2......|
0x804c048:   1f 00 00 00 d0 b4 cb 16  57 00 00 00 71 c5 5d 78   |........W...q.]x|
0x804c058:   4b ??                                              |K?              |
