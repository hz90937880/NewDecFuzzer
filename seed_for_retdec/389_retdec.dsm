;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:18:48
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 10 d1 ff ff               	lea eax, [ebx - 0x2ef0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 b0 d0 ff ff               	lea eax, [ebx - 0x2f50]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 be ac 04 08               	mov eax, 0x804acbe
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 6c e0 04 08                  	mov eax, 0x804e06c
0x80483a5:   3d 6c e0 04 08                  	cmp eax, 0x804e06c
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 6c e0 04 08                  	push 0x804e06c
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 6c e0 04 08                  	mov eax, 0x804e06c
0x80483e5:   2d 6c e0 04 08                  	sub eax, 0x804e06c
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 6c e0 04 08                  	push 0x804e06c
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 e0 04 08 00            	cmp byte ptr [0x804e080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 e0 04 08 01            	mov byte ptr [0x804e080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 40 2c 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 2c 2c 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 30 d1 ff ff               	lea edx, [eax - 0x2ed0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 ff 2b 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 e1 2b 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 b9 2b 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 8f 2b 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 66 2b 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 23 2b 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 e1 2a 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 89 2a 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 38 2a 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 fb 29 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 c4 29 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 a5 29 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 7b 29 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 4f 29 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 24 29 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 db 28 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 93 28 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 39 28 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 e6 27 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 a7 27 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 71 27 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 4f 27 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 01 27 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 c5 26 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 3c 26 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 0a 26 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 da 25 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 95 25 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 56 25 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 24 25 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 f5 24 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 d7 24 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 af 24 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 8a 24 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 65 24 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 2e 24 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 f9 23 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 a7 23 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 5c 23 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 25 23 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 f4 22 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 d5 22 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 ab 22 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 83 22 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 5a 22 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 1e 22 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 e3 21 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 90 21 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 44 21 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 0c 21 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 dd 20 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 c9 20 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 b2 20 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 9d 20 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 87 20 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 60 20 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 3b 20 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 fc 1f 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 c3 1f 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 97 1f 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 71 1f 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 28 d2 ff ff               	fld dword ptr [eax - 0x2dd8]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 28 d2 ff ff               	fld dword ptr [eax - 0x2dd8]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 2c d2 ff ff               	fld dword ptr [eax - 0x2dd4]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 2f 1f 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 28 d2 ff ff               	fld dword ptr [eax - 0x2dd8]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 28 d2 ff ff               	fld dword ptr [eax - 0x2dd8]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 2c d2 ff ff               	fld dword ptr [eax - 0x2dd4]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 ed 1e 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 30 d2 ff ff               	fld dword ptr [eax - 0x2dd0]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 34 d2 ff ff               	fld dword ptr [eax - 0x2dcc]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 38 d2 ff ff               	fld dword ptr [eax - 0x2dc8]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 ab 1e 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 3c d2 ff ff               	fld dword ptr [eax - 0x2dc4]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 40 d2 ff ff               	fld dword ptr [eax - 0x2dc0]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 44 d2 ff ff               	fld dword ptr [eax - 0x2dbc]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 33 1e 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 48 d2 ff ff               	fld qword ptr [eax - 0x2db8]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 48 d2 ff ff               	fld qword ptr [eax - 0x2db8]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 50 d2 ff ff               	fld qword ptr [eax - 0x2db0]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 d6 1d 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 48 d2 ff ff               	fld qword ptr [eax - 0x2db8]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 48 d2 ff ff               	fld qword ptr [eax - 0x2db8]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 50 d2 ff ff               	fld qword ptr [eax - 0x2db0]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 79 1d 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 58 d2 ff ff               	fld qword ptr [eax - 0x2da8]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 60 d2 ff ff               	fld qword ptr [eax - 0x2da0]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 68 d2 ff ff               	fld qword ptr [eax - 0x2d98]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 1c 1d 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 70 d2 ff ff               	fld qword ptr [eax - 0x2d90]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 78 d2 ff ff               	fld qword ptr [eax - 0x2d88]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 80 d2 ff ff               	fld qword ptr [eax - 0x2d80]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 8c 1c 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 88 d2 ff ff               	fld dword ptr [eax - 0x2d78]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 8c d2 ff ff               	fld dword ptr [eax - 0x2d74]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 28 1c 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 b7 1b 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 74 1b 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 40 d1 ff ff               	lea eax, [ebx - 0x2ec0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 64 d1 ff ff               	lea eax, [ebx - 0x2e9c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804988d
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   81 ec 90 00 00 00               	sub esp, 0x90
0x8049632:   e8 6b 1a 00 00                  	call 0x804b0a2 <__x86.get_pc_thunk.dx>
0x8049637:   81 c2 c9 49 00 00               	add edx, 0x49c9
0x804963d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049640:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049643:   8b 4d 0c                        	mov ecx, dword ptr [ebp + 0xc]
0x8049646:   8b 5d 10                        	mov ebx, dword ptr [ebp + 0x10]
0x8049649:   8b 75 14                        	mov esi, dword ptr [ebp + 0x14]
0x804964c:   8b 7d 18                        	mov edi, dword ptr [ebp + 0x18]
0x804964f:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x8049652:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049655:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x8049658:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804965b:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x804965e:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049661:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x8049664:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049667:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x804966a:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804966d:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x8049670:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049673:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049676:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049679:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x804967c:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804967f:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049682:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x8049688:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x804968b:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x8049691:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x8049694:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804969a:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x804969d:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x80496a3:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x80496a6:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x80496ac:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x80496af:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x80496b5:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x80496b8:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x80496be:   0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x80496c2:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x80496c5:   89 c8                           	mov eax, ecx
0x80496c7:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x80496cb:   89 d8                           	mov eax, ebx
0x80496cd:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x80496d1:   89 f0                           	mov eax, esi
0x80496d3:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496d6:   89 f8                           	mov eax, edi
0x80496d8:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x80496dc:   0f b6 45 9c                     	movzx eax, byte ptr [ebp - 0x64]
0x80496e0:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496e3:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x80496e7:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496eb:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x80496ef:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496f2:   0f b6 45 90                     	movzx eax, byte ptr [ebp - 0x70]
0x80496f6:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496f9:   0f b6 45 8c                     	movzx eax, byte ptr [ebp - 0x74]
0x80496fd:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x8049700:   0f b6 45 88                     	movzx eax, byte ptr [ebp - 0x78]
0x8049704:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x8049707:   0f b7 45 84                     	movzx eax, word ptr [ebp - 0x7c]
0x804970b:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x804970f:   0f b6 45 80                     	movzx eax, byte ptr [ebp - 0x80]
0x8049713:   88 45 c0                        	mov byte ptr [ebp - 0x40], al
0x8049716:   0f b7 85 7c ff ff ff            	movzx eax, word ptr [ebp - 0x84]
0x804971d:   66 89 45 bc                     	mov word ptr [ebp - 0x44], ax
0x8049721:   0f b7 85 78 ff ff ff            	movzx eax, word ptr [ebp - 0x88]
0x8049728:   66 89 45 b8                     	mov word ptr [ebp - 0x48], ax
0x804972c:   0f b7 85 74 ff ff ff            	movzx eax, word ptr [ebp - 0x8c]
0x8049733:   66 89 45 b4                     	mov word ptr [ebp - 0x4c], ax
0x8049737:   0f b7 85 70 ff ff ff            	movzx eax, word ptr [ebp - 0x90]
0x804973e:   66 89 45 b0                     	mov word ptr [ebp - 0x50], ax
0x8049742:   0f b7 85 6c ff ff ff            	movzx eax, word ptr [ebp - 0x94]
0x8049749:   66 89 45 ac                     	mov word ptr [ebp - 0x54], ax
0x804974d:   0f b7 85 68 ff ff ff            	movzx eax, word ptr [ebp - 0x98]
0x8049754:   66 89 45 a8                     	mov word ptr [ebp - 0x58], ax
0x8049758:   0f b6 85 64 ff ff ff            	movzx eax, byte ptr [ebp - 0x9c]
0x804975f:   88 45 a4                        	mov byte ptr [ebp - 0x5c], al
0x8049762:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x8049766:   88 82 24 00 00 00               	mov byte ptr [edx + 0x24], al
0x804976c:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x8049770:   66 89 82 26 00 00 00            	mov word ptr [edx + 0x26], ax
0x8049777:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x804977b:   66 89 82 28 00 00 00            	mov word ptr [edx + 0x28], ax
0x8049782:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x8049786:   88 82 2a 00 00 00               	mov byte ptr [edx + 0x2a], al
0x804978c:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x8049790:   66 89 82 2c 00 00 00            	mov word ptr [edx + 0x2c], ax
0x8049797:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x804979b:   88 82 2e 00 00 00               	mov byte ptr [edx + 0x2e], al
0x80497a1:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x80497a5:   66 89 82 30 00 00 00            	mov word ptr [edx + 0x30], ax
0x80497ac:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x80497af:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x80497b5:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x80497b8:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x80497be:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x80497c2:   88 82 a4 04 00 00               	mov byte ptr [edx + 0x4a4], al
0x80497c8:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x80497cb:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x80497d1:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x80497d5:   88 82 40 00 00 00               	mov byte ptr [edx + 0x40], al
0x80497db:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x80497de:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x80497e4:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x80497e8:   88 82 48 00 00 00               	mov byte ptr [edx + 0x48], al
0x80497ee:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497f2:   88 82 49 00 00 00               	mov byte ptr [edx + 0x49], al
0x80497f8:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x80497fb:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x8049801:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x8049805:   66 89 82 50 00 00 00            	mov word ptr [edx + 0x50], ax
0x804980c:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x804980f:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x8049815:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x8049819:   88 82 58 00 00 00               	mov byte ptr [edx + 0x58], al
0x804981f:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x8049823:   66 89 82 a6 04 00 00            	mov word ptr [edx + 0x4a6], ax
0x804982a:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x804982e:   66 89 82 5a 00 00 00            	mov word ptr [edx + 0x5a], ax
0x8049835:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x8049838:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x804983e:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x8049842:   66 89 82 a8 04 00 00            	mov word ptr [edx + 0x4a8], ax
0x8049849:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x804984d:   66 89 82 aa 04 00 00            	mov word ptr [edx + 0x4aa], ax
0x8049854:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x8049858:   66 89 82 60 00 00 00            	mov word ptr [edx + 0x60], ax
0x804985f:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x8049863:   66 89 82 62 00 00 00            	mov word ptr [edx + 0x62], ax
0x804986a:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x804986d:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x8049873:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x8049877:   88 82 68 00 00 00               	mov byte ptr [edx + 0x68], al
0x804987d:   b8 00 00 00 00                  	mov eax, 0
0x8049882:   81 c4 90 00 00 00               	add esp, 0x90
0x8049888:   5b                              	pop ebx
0x8049889:   5e                              	pop esi
0x804988a:   5f                              	pop edi
0x804988b:   5d                              	pop ebp
0x804988c:   c3                              	ret 
; function: func_1 at 0x804988d -- 0x804acbe
0x804988d:   55                              	push ebp
0x804988e:   89 e5                           	mov ebp, esp
0x8049890:   57                              	push edi
0x8049891:   56                              	push esi
0x8049892:   53                              	push ebx
0x8049893:   81 ec 48 01 00 00               	sub esp, 0x148
0x8049899:   e8 00 18 00 00                  	call 0x804b09e <__x86.get_pc_thunk.ax>
0x804989e:   05 62 47 00 00                  	add eax, 0x4762
0x80498a3:   c6 45 9f 54                     	mov byte ptr [ebp - 0x61], 0x54
0x80498a7:   66 c7 45 f2 ff ff               	mov word ptr [ebp - 0xe], 0xffff
0x80498ad:   66 c7 45 f0 ed 95               	mov word ptr [ebp - 0x10], 0x95ed
0x80498b3:   c6 45 ef fc                     	mov byte ptr [ebp - 0x11], 0xfc
0x80498b7:   66 c7 45 ec 08 00               	mov word ptr [ebp - 0x14], 8
0x80498bd:   c6 45 eb 04                     	mov byte ptr [ebp - 0x15], 4
0x80498c1:   66 c7 45 9c f6 ff               	mov word ptr [ebp - 0x64], 0xfff6
0x80498c7:   c7 45 e4 d7 cf 0b 80            	mov dword ptr [ebp - 0x1c], 0x800bcfd7
0x80498ce:   c7 45 98 b2 cd f7 c4            	mov dword ptr [ebp - 0x68], 0xc4f7cdb2
0x80498d5:   c6 45 cb 00                     	mov byte ptr [ebp - 0x35], 0
0x80498d9:   c7 45 c4 32 45 ac 3f            	mov dword ptr [ebp - 0x3c], 0x3fac4532
0x80498e0:   c6 45 c3 ff                     	mov byte ptr [ebp - 0x3d], 0xff
0x80498e4:   c7 45 e0 3b 85 8b ce            	mov dword ptr [ebp - 0x20], 0xce8b853b
0x80498eb:   c6 45 df 33                     	mov byte ptr [ebp - 0x21], 0x33
0x80498ef:   c6 45 de 6e                     	mov byte ptr [ebp - 0x22], 0x6e
0x80498f3:   c7 45 d8 01 00 00 00            	mov dword ptr [ebp - 0x28], 1
0x80498fa:   66 c7 45 d6 01 00               	mov word ptr [ebp - 0x2a], 1
0x8049900:   c7 45 d0 85 78 55 93            	mov dword ptr [ebp - 0x30], 0x93557885
0x8049907:   c6 45 97 c6                     	mov byte ptr [ebp - 0x69], 0xc6
0x804990b:   66 c7 45 94 00 00               	mov word ptr [ebp - 0x6c], 0
0x8049911:   66 c7 45 92 65 0e               	mov word ptr [ebp - 0x6e], 0xe65
0x8049917:   c7 45 cc 29 49 bb 4b            	mov dword ptr [ebp - 0x34], 0x4bbb4929
0x804991e:   66 c7 45 90 00 00               	mov word ptr [ebp - 0x70], 0
0x8049924:   66 c7 45 8e 00 00               	mov word ptr [ebp - 0x72], 0
0x804992a:   66 c7 45 c0 02 00               	mov word ptr [ebp - 0x40], 2
0x8049930:   66 c7 45 8c 07 00               	mov word ptr [ebp - 0x74], 7
0x8049936:   c7 45 bc fb ff ff ff            	mov dword ptr [ebp - 0x44], 0xfffffffb
0x804993d:   c6 45 8b 01                     	mov byte ptr [ebp - 0x75], 1
0x8049941:   c7 45 b8 09 00 00 00            	mov dword ptr [ebp - 0x48], 9
0x8049948:   c7 45 b4 02 00 00 00            	mov dword ptr [ebp - 0x4c], 2
0x804994f:   66 c7 45 88 02 00               	mov word ptr [ebp - 0x78], 2
0x8049955:   c7 45 84 dc d1 17 38            	mov dword ptr [ebp - 0x7c], 0x3817d1dc
0x804995c:   c7 45 b0 f7 ff ff ff            	mov dword ptr [ebp - 0x50], 0xfffffff7
0x8049963:   c7 45 80 04 00 00 00            	mov dword ptr [ebp - 0x80], 4
0x804996a:   c7 85 7c ff ff ff 06 52 c9 32   	mov dword ptr [ebp - 0x84], 0x32c95206
0x8049974:   c7 85 78 ff ff ff 37 7b 3e 04   	mov dword ptr [ebp - 0x88], 0x43e7b37
0x804997e:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049982:   ba 01 00 00 00                  	mov edx, 1
0x8049987:   89 c1                           	mov ecx, eax
0x8049989:   d3 fa                           	sar edx, cl
0x804998b:   89 d0                           	mov eax, edx
0x804998d:   f7 d0                           	not eax
0x804998f:   c1 e8 1f                        	shr eax, 0x1f
0x8049992:   0f b6 c0                        	movzx eax, al
0x8049995:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x8049999:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804999c:   8d 50 01                        	lea edx, [eax + 1]
0x804999f:   89 55 b8                        	mov dword ptr [ebp - 0x48], edx
0x80499a2:   8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x80499a5:   39 d0                           	cmp eax, edx
0x80499a7:   0f 96 c0                        	setbe al
0x80499aa:   0f b6 d0                        	movzx edx, al
0x80499ad:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x80499b0:   98                              	cwde 
0x80499b1:   29 c2                           	sub edx, eax
0x80499b3:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x80499b7:   21 d0                           	and eax, edx
0x80499b9:   31 45 b0                        	xor dword ptr [ebp - 0x50], eax
0x80499bc:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x80499bf:   88 45 ef                        	mov byte ptr [ebp - 0x11], al
0x80499c2:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x80499c6:   0f b6 d0                        	movzx edx, al
0x80499c9:   89 d0                           	mov eax, edx
0x80499cb:   c1 e0 03                        	shl eax, 3
0x80499ce:   29 d0                           	sub eax, edx
0x80499d0:   c1 e0 04                        	shl eax, 4
0x80499d3:   29 d0                           	sub eax, edx
0x80499d5:   66 c1 e8 08                     	shr ax, 8
0x80499d9:   c0 e8 05                        	shr al, 5
0x80499dc:   0f be c0                        	movsx eax, al
0x80499df:   f7 d8                           	neg eax
0x80499e1:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x80499e4:   0f 8e 26 0a 00 00               	jle 0x804a410 <func_1+0xb83>
0x80499ea:   c6 85 3a ff ff ff ff            	mov byte ptr [ebp - 0xc6], 0xff
0x80499f1:   c7 45 ac 94 d9 2e 59            	mov dword ptr [ebp - 0x54], 0x592ed994
0x80499f8:   c6 85 39 ff ff ff 00            	mov byte ptr [ebp - 0xc7], 0
0x80499ff:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049a02:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x8049a06:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x8049a0a:   20 45 eb                        	and byte ptr [ebp - 0x15], al
0x8049a0d:   66 81 65 f2 8d a2               	and word ptr [ebp - 0xe], 0xa28d
0x8049a13:   0f bf 45 ec                     	movsx eax, word ptr [ebp - 0x14]
0x8049a17:   25 b1 01 00 00                  	and eax, 0x1b1
0x8049a1c:   85 c0                           	test eax, eax
0x8049a1e:   0f 84 ca 00 00 00               	je 0x8049aee <func_1+0x261>
0x8049a24:   c7 85 f4 fe ff ff 00 95 ac 25   	mov dword ptr [ebp - 0x10c], 0x25ac9500
0x8049a2e:   c7 85 f0 fe ff ff b4 cc bd e9   	mov dword ptr [ebp - 0x110], 0xe9bdccb4
0x8049a38:   0f be 9d 3a ff ff ff            	movsx ebx, byte ptr [ebp - 0xc6]
0x8049a3f:   0f be 95 3a ff ff ff            	movsx edx, byte ptr [ebp - 0xc6]
0x8049a46:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x8049a4c:   66 98                           	cbw 
0x8049a4e:   66 2d 39 53                     	sub ax, 0x5339
0x8049a52:   98                              	cwde 
0x8049a53:   89 c1                           	mov ecx, eax
0x8049a55:   d3 fa                           	sar edx, cl
0x8049a57:   89 d0                           	mov eax, edx
0x8049a59:   0f be bd 3a ff ff ff            	movsx edi, byte ptr [ebp - 0xc6]
0x8049a60:   99                              	cdq 
0x8049a61:   f7 ff                           	idiv edi
0x8049a63:   39 c3                           	cmp ebx, eax
0x8049a65:   7f 09                           	jg 0x8049a70 <func_1+0x1e3>
0x8049a67:   80 bd 3a ff ff ff 00            	cmp byte ptr [ebp - 0xc6], 0
0x8049a6e:   74 07                           	je 0x8049a77 <func_1+0x1ea>
0x8049a70:   b8 01 00 00 00                  	mov eax, 1
0x8049a75:   eb 05                           	jmp 0x8049a7c <func_1+0x1ef>
0x8049a77:   b8 00 00 00 00                  	mov eax, 0
0x8049a7c:   89 85 f4 fe ff ff               	mov dword ptr [ebp - 0x10c], eax
0x8049a82:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x8049a87:   66 c7 85 ee fe ff ff a7 8c      	mov word ptr [ebp - 0x112], 0x8ca7
0x8049a90:   c7 85 f4 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x10c], 0xffffffff
0x8049a9a:   0f b6 45 9f                     	movzx eax, byte ptr [ebp - 0x61]
0x8049a9e:   3a 85 3a ff ff ff               	cmp al, byte ptr [ebp - 0xc6]
0x8049aa4:   0f 9d c0                        	setge al
0x8049aa7:   0f b6 c0                        	movzx eax, al
0x8049aaa:   f7 d0                           	not eax
0x8049aac:   89 c3                           	mov ebx, eax
0x8049aae:   0f b7 8d ee fe ff ff            	movzx ecx, word ptr [ebp - 0x112]
0x8049ab5:   b8 f6 71 65 20                  	mov eax, 0x206571f6
0x8049aba:   ba 00 00 00 00                  	mov edx, 0
0x8049abf:   f7 f1                           	div ecx
0x8049ac1:   89 d0                           	mov eax, edx
0x8049ac3:   89 c2                           	mov edx, eax
0x8049ac5:   66 0f be 45 ef                  	movsx ax, byte ptr [ebp - 0x11]
0x8049aca:   01 d0                           	add eax, edx
0x8049acc:   98                              	cwde 
0x8049acd:   0f b7 55 9c                     	movzx edx, word ptr [ebp - 0x64]
0x8049ad1:   0f bf f2                        	movsx esi, dx
0x8049ad4:   99                              	cdq 
0x8049ad5:   f7 fe                           	idiv esi
0x8049ad7:   39 c3                           	cmp ebx, eax
0x8049ad9:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049adc:   83 e0 04                        	and eax, 4
0x8049adf:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049ae2:   c7 45 ac 01 00 00 00            	mov dword ptr [ebp - 0x54], 1
0x8049ae9:   e9 13 09 00 00                  	jmp 0x804a401 <func_1+0xb74>
0x8049aee:   c6 85 38 ff ff ff 3a            	mov byte ptr [ebp - 0xc8], 0x3a
0x8049af5:   c6 85 37 ff ff ff fe            	mov byte ptr [ebp - 0xc9], 0xfe
0x8049afc:   c7 85 30 ff ff ff 45 60 58 47   	mov dword ptr [ebp - 0xd0], 0x47586045
0x8049b06:   c7 85 2c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd4], 0
0x8049b10:   c7 85 28 ff ff ff 76 10 7d 9b   	mov dword ptr [ebp - 0xd8], 0x9b7d1076
0x8049b1a:   c7 85 24 ff ff ff 6a 6f 22 84   	mov dword ptr [ebp - 0xdc], 0x84226f6a
0x8049b24:   c7 85 20 ff ff ff 26 9d 35 bb   	mov dword ptr [ebp - 0xe0], 0xbb359d26
0x8049b2e:   c7 85 1c ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xe4], 2
0x8049b38:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x8049b3d:   0f 84 8b 01 00 00               	je 0x8049cce <func_1+0x441>
0x8049b43:   c6 85 ff fe ff ff 55            	mov byte ptr [ebp - 0x101], 0x55
0x8049b4a:   c7 85 f8 fe ff ff 90 6b 4c 7b   	mov dword ptr [ebp - 0x108], 0x7b4c6b90
0x8049b54:   c7 45 98 01 00 00 00            	mov dword ptr [ebp - 0x68], 1
0x8049b5b:   c6 45 cb 01                     	mov byte ptr [ebp - 0x35], 1
0x8049b5f:   0f be 95 ff fe ff ff            	movsx edx, byte ptr [ebp - 0x101]
0x8049b66:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049b6a:   0f b6 c0                        	movzx eax, al
0x8049b6d:   f7 d8                           	neg eax
0x8049b6f:   89 c1                           	mov ecx, eax
0x8049b71:   0f bf 45 ec                     	movsx eax, word ptr [ebp - 0x14]
0x8049b75:   39 c1                           	cmp ecx, eax
0x8049b77:   7e 07                           	jle 0x8049b80 <func_1+0x2f3>
0x8049b79:   b9 c6 2a 00 00                  	mov ecx, 0x2ac6
0x8049b7e:   eb 05                           	jmp 0x8049b85 <func_1+0x2f8>
0x8049b80:   b9 00 00 00 00                  	mov ecx, 0
0x8049b85:   0f b6 85 38 ff ff ff            	movzx eax, byte ptr [ebp - 0xc8]
0x8049b8c:   39 c1                           	cmp ecx, eax
0x8049b8e:   7f 07                           	jg 0x8049b97 <func_1+0x30a>
0x8049b90:   b8 fd ff ff ff                  	mov eax, 0xfffffffd
0x8049b95:   eb 05                           	jmp 0x8049b9c <func_1+0x30f>
0x8049b97:   b8 fc ff ff ff                  	mov eax, 0xfffffffc
0x8049b9c:   0b 45 e4                        	or eax, dword ptr [ebp - 0x1c]
0x8049b9f:   31 d0                           	xor eax, edx
0x8049ba1:   31 45 ac                        	xor dword ptr [ebp - 0x54], eax
0x8049ba4:   0f b6 45 8b                     	movzx eax, byte ptr [ebp - 0x75]
0x8049ba8:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x8049bae:   0f bf 45 8c                     	movsx eax, word ptr [ebp - 0x74]
0x8049bb2:   89 85 dc fe ff ff               	mov dword ptr [ebp - 0x124], eax
0x8049bb8:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x8049bbc:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x8049bc2:   0f bf 45 8e                     	movsx eax, word ptr [ebp - 0x72]
0x8049bc6:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x8049bcc:   0f bf 45 90                     	movsx eax, word ptr [ebp - 0x70]
0x8049bd0:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x8049bd6:   0f bf 45 92                     	movsx eax, word ptr [ebp - 0x6e]
0x8049bda:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x8049be0:   0f bf 45 94                     	movsx eax, word ptr [ebp - 0x6c]
0x8049be4:   89 85 c8 fe ff ff               	mov dword ptr [ebp - 0x138], eax
0x8049bea:   0f be 45 97                     	movsx eax, byte ptr [ebp - 0x69]
0x8049bee:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x8049bf4:   0f b7 55 d6                     	movzx edx, word ptr [ebp - 0x2a]
0x8049bf8:   89 95 c0 fe ff ff               	mov dword ptr [ebp - 0x140], edx
0x8049bfe:   0f be 55 de                     	movsx edx, byte ptr [ebp - 0x22]
0x8049c02:   0f b6 4d df                     	movzx ecx, byte ptr [ebp - 0x21]
0x8049c06:   89 8d bc fe ff ff               	mov dword ptr [ebp - 0x144], ecx
0x8049c0c:   0f b6 4d c3                     	movzx ecx, byte ptr [ebp - 0x3d]
0x8049c10:   0f be 5d cb                     	movsx ebx, byte ptr [ebp - 0x35]
0x8049c14:   89 9d b8 fe ff ff               	mov dword ptr [ebp - 0x148], ebx
0x8049c1a:   0f b7 5d 9c                     	movzx ebx, word ptr [ebp - 0x64]
0x8049c1e:   0f be 75 eb                     	movsx esi, byte ptr [ebp - 0x15]
0x8049c22:   89 b5 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], esi
0x8049c28:   0f bf 75 ec                     	movsx esi, word ptr [ebp - 0x14]
0x8049c2c:   0f be 7d ef                     	movsx edi, byte ptr [ebp - 0x11]
0x8049c30:   89 bd b0 fe ff ff               	mov dword ptr [ebp - 0x150], edi
0x8049c36:   0f b7 7d f0                     	movzx edi, word ptr [ebp - 0x10]
0x8049c3a:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049c3e:   89 85 ac fe ff ff               	mov dword ptr [ebp - 0x154], eax
0x8049c44:   0f be 45 9f                     	movsx eax, byte ptr [ebp - 0x61]
0x8049c48:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x8049c4e:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049c51:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x8049c57:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x8049c5d:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x8049c63:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x8049c69:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049c6c:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x8049c72:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x8049c78:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x8049c7e:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049c81:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x8049c87:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049c8a:   52                              	push edx
0x8049c8b:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x8049c91:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049c94:   51                              	push ecx
0x8049c95:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049c98:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x8049c9e:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x8049ca1:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049ca4:   53                              	push ebx
0x8049ca5:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x8049cab:   56                              	push esi
0x8049cac:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x8049cb2:   57                              	push edi
0x8049cb3:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x8049cb9:   50                              	push eax
0x8049cba:   e8 67 f9 ff ff                  	call 0x8049626 <set_var>
0x8049cbf:   83 c4 70                        	add esp, 0x70
0x8049cc2:   0f b6 85 37 ff ff ff            	movzx eax, byte ptr [ebp - 0xc9]
0x8049cc9:   e9 e8 0f 00 00                  	jmp 0x804acb6 <func_1+0x1429>
0x8049cce:   66 c7 85 1a ff ff ff 4b 0e      	mov word ptr [ebp - 0xe6], 0xe4b
0x8049cd7:   0f bf 85 1a ff ff ff            	movsx eax, word ptr [ebp - 0xe6]
0x8049cde:   31 45 ac                        	xor dword ptr [ebp - 0x54], eax
0x8049ce1:   80 7d ef 01                     	cmp byte ptr [ebp - 0x11], 1
0x8049ce5:   0f 94 c1                        	sete cl
0x8049ce8:   83 bd 2c ff ff ff 00            	cmp dword ptr [ebp - 0xd4], 0
0x8049cef:   74 1c                           	je 0x8049d0d <func_1+0x480>
0x8049cf1:   0f be 95 3a ff ff ff            	movsx edx, byte ptr [ebp - 0xc6]
0x8049cf8:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x8049cfc:   0f be c0                        	movsx eax, al
0x8049cff:   0f af c2                        	imul eax, edx
0x8049d02:   85 c0                           	test eax, eax
0x8049d04:   74 07                           	je 0x8049d0d <func_1+0x480>
0x8049d06:   b8 01 00 00 00                  	mov eax, 1
0x8049d0b:   eb 05                           	jmp 0x8049d12 <func_1+0x485>
0x8049d0d:   b8 00 00 00 00                  	mov eax, 0
0x8049d12:   89 c2                           	mov edx, eax
0x8049d14:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049d17:   01 d0                           	add eax, edx
0x8049d19:   0f be d0                        	movsx edx, al
0x8049d1c:   0f be 45 ef                     	movsx eax, byte ptr [ebp - 0x11]
0x8049d20:   29 c2                           	sub edx, eax
0x8049d22:   0f be 45 9f                     	movsx eax, byte ptr [ebp - 0x61]
0x8049d26:   39 c2                           	cmp edx, eax
0x8049d28:   0f 94 c0                        	sete al
0x8049d2b:   09 c8                           	or eax, ecx
0x8049d2d:   84 c0                           	test al, al
0x8049d2f:   75 06                           	jne 0x8049d37 <func_1+0x4aa>
0x8049d31:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x8049d35:   74 07                           	je 0x8049d3e <func_1+0x4b1>
0x8049d37:   b8 01 00 00 00                  	mov eax, 1
0x8049d3c:   eb 05                           	jmp 0x8049d43 <func_1+0x4b6>
0x8049d3e:   b8 00 00 00 00                  	mov eax, 0
0x8049d43:   0f be c0                        	movsx eax, al
0x8049d46:   f7 d8                           	neg eax
0x8049d48:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049d4b:   0f 9d c0                        	setge al
0x8049d4e:   0f b6 c0                        	movzx eax, al
0x8049d51:   66 0f be 55 eb                  	movsx dx, byte ptr [ebp - 0x15]
0x8049d56:   0f b7 fa                        	movzx edi, dx
0x8049d59:   99                              	cdq 
0x8049d5a:   f7 ff                           	idiv edi
0x8049d5c:   0f b6 d0                        	movzx edx, al
0x8049d5f:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049d62:   0f b6 c0                        	movzx eax, al
0x8049d65:   29 c2                           	sub edx, eax
0x8049d67:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x8049d6b:   39 c2                           	cmp edx, eax
0x8049d6d:   0f 9c c0                        	setl al
0x8049d70:   0f b6 c0                        	movzx eax, al
0x8049d73:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049d76:   0f b6 85 3a ff ff ff            	movzx eax, byte ptr [ebp - 0xc6]
0x8049d7d:   88 45 ef                        	mov byte ptr [ebp - 0x11], al
0x8049d80:   0f b7 85 1a ff ff ff            	movzx eax, word ptr [ebp - 0xe6]
0x8049d87:   0f be c8                        	movsx ecx, al
0x8049d8a:   ba 3b fc b4 1e                  	mov edx, 0x1eb4fc3b
0x8049d8f:   89 c8                           	mov eax, ecx
0x8049d91:   f7 ea                           	imul edx
0x8049d93:   89 d0                           	mov eax, edx
0x8049d95:   c1 f8 1a                        	sar eax, 0x1a
0x8049d98:   c1 f9 1f                        	sar ecx, 0x1f
0x8049d9b:   89 ca                           	mov edx, ecx
0x8049d9d:   29 c2                           	sub edx, eax
0x8049d9f:   89 d0                           	mov eax, edx
0x8049da1:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x8049da4:   0f be 45 9f                     	movsx eax, byte ptr [ebp - 0x61]
0x8049da8:   83 e0 01                        	and eax, 1
0x8049dab:   3d 83 9c df 0e                  	cmp eax, 0xedf9c83
0x8049db0:   7f 07                           	jg 0x8049db9 <func_1+0x52c>
0x8049db2:   b8 01 00 00 00                  	mov eax, 1
0x8049db7:   eb 05                           	jmp 0x8049dbe <func_1+0x531>
0x8049db9:   b8 00 00 00 00                  	mov eax, 0
0x8049dbe:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049dc1:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x8049dc7:   0f b7 d0                        	movzx edx, ax
0x8049dca:   80 7d cb 00                     	cmp byte ptr [ebp - 0x35], 0
0x8049dce:   0f 95 c0                        	setne al
0x8049dd1:   0f b6 c0                        	movzx eax, al
0x8049dd4:   66 2d ca 70                     	sub ax, 0x70ca
0x8049dd8:   0f b7 c0                        	movzx eax, ax
0x8049ddb:   01 d0                           	add eax, edx
0x8049ddd:   83 f8 08                        	cmp eax, 8
0x8049de0:   b8 ed 7f 5b f5                  	mov eax, 0xf55b7fed
0x8049de5:   99                              	cdq 
0x8049de6:   f7 7d 84                        	idiv dword ptr [ebp - 0x7c]
0x8049de9:   21 45 e4                        	and dword ptr [ebp - 0x1c], eax
0x8049dec:   c7 45 b0 14 00 00 00            	mov dword ptr [ebp - 0x50], 0x14
0x8049df3:   e9 97 05 00 00                  	jmp 0x804a38f <func_1+0xb02>
0x8049df8:   c6 85 19 ff ff ff fb            	mov byte ptr [ebp - 0xe7], 0xfb
0x8049dff:   66 c7 85 16 ff ff ff 00 00      	mov word ptr [ebp - 0xea], 0
0x8049e08:   c7 85 10 ff ff ff 90 96 3b 81   	mov dword ptr [ebp - 0xf0], 0x813b9690
0x8049e12:   0f be 45 ef                     	movsx eax, byte ptr [ebp - 0x11]
0x8049e16:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049e19:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049e1c:   88 85 19 ff ff ff               	mov byte ptr [ebp - 0xe7], al
0x8049e22:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x8049e26:   0f 84 91 02 00 00               	je 0x804a0bd <func_1+0x830>
0x8049e2c:   c6 85 0e ff ff ff ff            	mov byte ptr [ebp - 0xf2], 0xff
0x8049e33:   c7 85 08 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xf8], 0
0x8049e3d:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049e40:   ba 31 00 00 00                  	mov edx, 0x31
0x8049e45:   0f af c2                        	imul eax, edx
0x8049e48:   0f b6 d0                        	movzx edx, al
0x8049e4b:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049e4e:   0f b6 c0                        	movzx eax, al
0x8049e51:   89 c1                           	mov ecx, eax
0x8049e53:   d3 e2                           	shl edx, cl
0x8049e55:   89 d0                           	mov eax, edx
0x8049e57:   39 85 08 ff ff ff               	cmp dword ptr [ebp - 0xf8], eax
0x8049e5d:   74 04                           	je 0x8049e63 <func_1+0x5d6>
0x8049e5f:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x8049e63:   0f b6 85 0e ff ff ff            	movzx eax, byte ptr [ebp - 0xf2]
0x8049e6a:   22 45 9f                        	and al, byte ptr [ebp - 0x61]
0x8049e6d:   88 85 0e ff ff ff               	mov byte ptr [ebp - 0xf2], al
0x8049e73:   0f b6 85 0e ff ff ff            	movzx eax, byte ptr [ebp - 0xf2]
0x8049e7a:   f7 d8                           	neg eax
0x8049e7c:   0f be f0                        	movsx esi, al
0x8049e7f:   b8 5b 00 00 00                  	mov eax, 0x5b
0x8049e84:   99                              	cdq 
0x8049e85:   f7 fe                           	idiv esi
0x8049e87:   89 c2                           	mov edx, eax
0x8049e89:   0f be 85 19 ff ff ff            	movsx eax, byte ptr [ebp - 0xe7]
0x8049e90:   0c d2                           	or al, 0xd2
0x8049e92:   39 c2                           	cmp edx, eax
0x8049e94:   0f 9e c0                        	setle al
0x8049e97:   0f b6 c0                        	movzx eax, al
0x8049e9a:   89 85 08 ff ff ff               	mov dword ptr [ebp - 0xf8], eax
0x8049ea0:   83 bd 08 ff ff ff 00            	cmp dword ptr [ebp - 0xf8], 0
0x8049ea7:   74 05                           	je 0x8049eae <func_1+0x621>
0x8049ea9:   66 83 7d 9c 00                  	cmp word ptr [ebp - 0x64], 0
0x8049eae:   66 c7 85 16 ff ff ff 00 00      	mov word ptr [ebp - 0xea], 0
0x8049eb7:   66 0f be 95 19 ff ff ff         	movsx dx, byte ptr [ebp - 0xe7]
0x8049ebf:   66 0f be 45 ef                  	movsx ax, byte ptr [ebp - 0x11]
0x8049ec4:   0f af c2                        	imul eax, edx
0x8049ec7:   98                              	cwde 
0x8049ec8:   8b 95 08 ff ff ff               	mov edx, dword ptr [ebp - 0xf8]
0x8049ece:   0f bf ca                        	movsx ecx, dx
0x8049ed1:   99                              	cdq 
0x8049ed2:   f7 f9                           	idiv ecx
0x8049ed4:   89 d0                           	mov eax, edx
0x8049ed6:   83 f8 76                        	cmp eax, 0x76
0x8049ed9:   0f 94 c0                        	sete al
0x8049edc:   0f b6 d0                        	movzx edx, al
0x8049edf:   0f be 85 3a ff ff ff            	movsx eax, byte ptr [ebp - 0xc6]
0x8049ee6:   21 d0                           	and eax, edx
0x8049ee8:   89 85 28 ff ff ff               	mov dword ptr [ebp - 0xd8], eax
0x8049eee:   8b 8d 30 ff ff ff               	mov ecx, dword ptr [ebp - 0xd0]
0x8049ef4:   ba 0d cd b5 60                  	mov edx, 0x60b5cd0d
0x8049ef9:   89 c8                           	mov eax, ecx
0x8049efb:   f7 ea                           	imul edx
0x8049efd:   c1 fa 1b                        	sar edx, 0x1b
0x8049f00:   89 c8                           	mov eax, ecx
0x8049f02:   c1 f8 1f                        	sar eax, 0x1f
0x8049f05:   29 c2                           	sub edx, eax
0x8049f07:   89 d0                           	mov eax, edx
0x8049f09:   69 c0 d3 3a 2d 15               	imul eax, eax, 0x152d3ad3
0x8049f0f:   29 c1                           	sub ecx, eax
0x8049f11:   89 c8                           	mov eax, ecx
0x8049f13:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x8049f16:   83 bd 08 ff ff ff 00            	cmp dword ptr [ebp - 0xf8], 0
0x8049f1d:   0f 84 67 01 00 00               	je 0x804a08a <func_1+0x7fd>
0x8049f23:   c7 85 00 ff ff ff f7 ff ff ff   	mov dword ptr [ebp - 0x100], 0xfffffff7
0x8049f2d:   81 7d 98 66 60 00 00            	cmp dword ptr [ebp - 0x68], 0x6066
0x8049f34:   0f 94 c0                        	sete al
0x8049f37:   0f b6 c0                        	movzx eax, al
0x8049f3a:   89 85 28 ff ff ff               	mov dword ptr [ebp - 0xd8], eax
0x8049f40:   0f b6 8d 38 ff ff ff            	movzx ecx, byte ptr [ebp - 0xc8]
0x8049f47:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049f4b:   83 c0 01                        	add eax, 1
0x8049f4e:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x8049f52:   b8 00 00 00 00                  	mov eax, 0
0x8049f57:   31 45 ac                        	xor dword ptr [ebp - 0x54], eax
0x8049f5a:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x8049f5e:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x8049f61:   0f 95 c0                        	setne al
0x8049f64:   0f b6 d0                        	movzx edx, al
0x8049f67:   0f be 85 3a ff ff ff            	movsx eax, byte ptr [ebp - 0xc6]
0x8049f6e:   39 c2                           	cmp edx, eax
0x8049f70:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x8049f74:   0f be 5d eb                     	movsx ebx, byte ptr [ebp - 0x15]
0x8049f78:   99                              	cdq 
0x8049f79:   f7 fb                           	idiv ebx
0x8049f7b:   89 d0                           	mov eax, edx
0x8049f7d:   0f be c0                        	movsx eax, al
0x8049f80:   0f be 5d eb                     	movsx ebx, byte ptr [ebp - 0x15]
0x8049f84:   99                              	cdq 
0x8049f85:   f7 fb                           	idiv ebx
0x8049f87:   89 d0                           	mov eax, edx
0x8049f89:   88 45 cb                        	mov byte ptr [ebp - 0x35], al
0x8049f8c:   80 7d cb 14                     	cmp byte ptr [ebp - 0x35], 0x14
0x8049f90:   0f 9e c0                        	setle al
0x8049f93:   0f b6 c0                        	movzx eax, al
0x8049f96:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049f99:   0f 95 c0                        	setne al
0x8049f9c:   0f b6 c0                        	movzx eax, al
0x8049f9f:   09 c8                           	or eax, ecx
0x8049fa1:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x8049fa4:   0f 95 c0                        	setne al
0x8049fa7:   f7 d8                           	neg eax
0x8049fa9:   88 45 ef                        	mov byte ptr [ebp - 0x11], al
0x8049fac:   0f be 45 ef                     	movsx eax, byte ptr [ebp - 0x11]
0x8049fb0:   0f be 8d 3a ff ff ff            	movsx ecx, byte ptr [ebp - 0xc6]
0x8049fb7:   99                              	cdq 
0x8049fb8:   f7 f9                           	idiv ecx
0x8049fba:   89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0x8049fbd:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x8049fc1:   0f 85 c3 03 00 00               	jne 0x804a38a <func_1+0xafd>
0x8049fc7:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x8049fcb:   8d 50 ff                        	lea edx, [eax - 1]
0x8049fce:   88 55 c3                        	mov byte ptr [ebp - 0x3d], dl
0x8049fd1:   0f b6 d8                        	movzx ebx, al
0x8049fd4:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x8049fda:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x8049fde:   0f b7 75 f0                     	movzx esi, word ptr [ebp - 0x10]
0x8049fe2:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x8049fe6:   74 48                           	je 0x804a030 <func_1+0x7a3>
0x8049fe8:   80 7d ef 00                     	cmp byte ptr [ebp - 0x11], 0
0x8049fec:   74 0d                           	je 0x8049ffb <func_1+0x76e>
0x8049fee:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x8049ff2:   74 07                           	je 0x8049ffb <func_1+0x76e>
0x8049ff4:   b8 01 00 00 00                  	mov eax, 1
0x8049ff9:   eb 05                           	jmp 0x804a000 <func_1+0x773>
0x8049ffb:   b8 00 00 00 00                  	mov eax, 0
0x804a000:   0f be c0                        	movsx eax, al
0x804a003:   01 c0                           	add eax, eax
0x804a005:   85 c0                           	test eax, eax
0x804a007:   74 10                           	je 0x804a019 <func_1+0x78c>
0x804a009:   83 bd 00 ff ff ff 00            	cmp dword ptr [ebp - 0x100], 0
0x804a010:   74 07                           	je 0x804a019 <func_1+0x78c>
0x804a012:   ba 01 00 00 00                  	mov edx, 1
0x804a017:   eb 05                           	jmp 0x804a01e <func_1+0x791>
0x804a019:   ba 00 00 00 00                  	mov edx, 0
0x804a01e:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x804a022:   09 d0                           	or eax, edx
0x804a024:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x804a027:   73 07                           	jae 0x804a030 <func_1+0x7a3>
0x804a029:   b8 01 00 00 00                  	mov eax, 1
0x804a02e:   eb 05                           	jmp 0x804a035 <func_1+0x7a8>
0x804a030:   b8 00 00 00 00                  	mov eax, 0
0x804a035:   89 c1                           	mov ecx, eax
0x804a037:   66 0f be c1                     	movsx ax, cl
0x804a03b:   6b c0 67                        	imul eax, eax, 0x67
0x804a03e:   66 c1 e8 08                     	shr ax, 8
0x804a042:   89 c2                           	mov edx, eax
0x804a044:   c0 fa 02                        	sar dl, 2
0x804a047:   89 c8                           	mov eax, ecx
0x804a049:   c0 f8 07                        	sar al, 7
0x804a04c:   29 c2                           	sub edx, eax
0x804a04e:   89 d0                           	mov eax, edx
0x804a050:   c1 e0 02                        	shl eax, 2
0x804a053:   01 d0                           	add eax, edx
0x804a055:   01 c0                           	add eax, eax
0x804a057:   29 c1                           	sub ecx, eax
0x804a059:   89 ca                           	mov edx, ecx
0x804a05b:   0f be c2                        	movsx eax, dl
0x804a05e:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x804a061:   75 07                           	jne 0x804a06a <func_1+0x7dd>
0x804a063:   b8 f6 ff 00 00                  	mov eax, 0xfff6
0x804a068:   eb 05                           	jmp 0x804a06f <func_1+0x7e2>
0x804a06a:   b8 f7 ff 00 00                  	mov eax, 0xfff7
0x804a06f:   39 f0                           	cmp eax, esi
0x804a071:   0f 94 c0                        	sete al
0x804a074:   0f b6 c0                        	movzx eax, al
0x804a077:   39 c3                           	cmp ebx, eax
0x804a079:   0f 9d c0                        	setge al
0x804a07c:   0f b6 c0                        	movzx eax, al
0x804a07f:   89 85 10 ff ff ff               	mov dword ptr [ebp - 0xf0], eax
0x804a085:   e9 c1 01 00 00                  	jmp 0x804a24b <func_1+0x9be>
0x804a08a:   c7 85 04 ff ff ff 01 29 34 15   	mov dword ptr [ebp - 0xfc], 0x15342901
0x804a094:   83 85 04 ff ff ff 01            	add dword ptr [ebp - 0xfc], 1
0x804a09b:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x804a09f:   8d 50 ff                        	lea edx, [eax - 1]
0x804a0a2:   88 55 c3                        	mov byte ptr [ebp - 0x3d], dl
0x804a0a5:   0f be c0                        	movsx eax, al
0x804a0a8:   83 e8 62                        	sub eax, 0x62
0x804a0ab:   21 45 e4                        	and dword ptr [ebp - 0x1c], eax
0x804a0ae:   80 7d ef 00                     	cmp byte ptr [ebp - 0x11], 0
0x804a0b2:   0f 84 93 01 00 00               	je 0x804a24b <func_1+0x9be>
0x804a0b8:   e9 04 fd ff ff                  	jmp 0x8049dc1 <func_1+0x534>
0x804a0bd:   c6 85 0f ff ff ff ff            	mov byte ptr [ebp - 0xf1], 0xff
0x804a0c4:   80 7d cb 00                     	cmp byte ptr [ebp - 0x35], 0
0x804a0c8:   74 0d                           	je 0x804a0d7 <func_1+0x84a>
0x804a0ca:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x804a0ce:   74 07                           	je 0x804a0d7 <func_1+0x84a>
0x804a0d0:   ba 01 00 00 00                  	mov edx, 1
0x804a0d5:   eb 05                           	jmp 0x804a0dc <func_1+0x84f>
0x804a0d7:   ba 00 00 00 00                  	mov edx, 0
0x804a0dc:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a0e0:   39 c2                           	cmp edx, eax
0x804a0e2:   0f 9e c0                        	setle al
0x804a0e5:   0f b6 d0                        	movzx edx, al
0x804a0e8:   0f b6 85 0f ff ff ff            	movzx eax, byte ptr [ebp - 0xf1]
0x804a0ef:   39 c2                           	cmp edx, eax
0x804a0f1:   0f 9d c0                        	setge al
0x804a0f4:   0f b6 c0                        	movzx eax, al
0x804a0f7:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x804a0fa:   0f 95 c0                        	setne al
0x804a0fd:   0f b6 c0                        	movzx eax, al
0x804a100:   89 c2                           	mov edx, eax
0x804a102:   8b 85 10 ff ff ff               	mov eax, dword ptr [ebp - 0xf0]
0x804a108:   21 d0                           	and eax, edx
0x804a10a:   22 45 eb                        	and al, byte ptr [ebp - 0x15]
0x804a10d:   0f b6 d0                        	movzx edx, al
0x804a110:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804a114:   0f b6 c0                        	movzx eax, al
0x804a117:   89 c1                           	mov ecx, eax
0x804a119:   d3 e2                           	shl edx, cl
0x804a11b:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x804a11f:   09 d0                           	or eax, edx
0x804a121:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a124:   0f b6 45 8b                     	movzx eax, byte ptr [ebp - 0x75]
0x804a128:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x804a12e:   0f bf 45 8c                     	movsx eax, word ptr [ebp - 0x74]
0x804a132:   89 85 dc fe ff ff               	mov dword ptr [ebp - 0x124], eax
0x804a138:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804a13c:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x804a142:   0f bf 45 8e                     	movsx eax, word ptr [ebp - 0x72]
0x804a146:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x804a14c:   0f bf 45 90                     	movsx eax, word ptr [ebp - 0x70]
0x804a150:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a156:   0f bf 45 92                     	movsx eax, word ptr [ebp - 0x6e]
0x804a15a:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x804a160:   0f bf 45 94                     	movsx eax, word ptr [ebp - 0x6c]
0x804a164:   89 85 c8 fe ff ff               	mov dword ptr [ebp - 0x138], eax
0x804a16a:   0f be 45 97                     	movsx eax, byte ptr [ebp - 0x69]
0x804a16e:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x804a174:   0f b7 55 d6                     	movzx edx, word ptr [ebp - 0x2a]
0x804a178:   89 95 c0 fe ff ff               	mov dword ptr [ebp - 0x140], edx
0x804a17e:   0f be 55 de                     	movsx edx, byte ptr [ebp - 0x22]
0x804a182:   0f b6 4d df                     	movzx ecx, byte ptr [ebp - 0x21]
0x804a186:   89 8d bc fe ff ff               	mov dword ptr [ebp - 0x144], ecx
0x804a18c:   0f b6 4d c3                     	movzx ecx, byte ptr [ebp - 0x3d]
0x804a190:   0f be 5d cb                     	movsx ebx, byte ptr [ebp - 0x35]
0x804a194:   89 9d b8 fe ff ff               	mov dword ptr [ebp - 0x148], ebx
0x804a19a:   0f b7 5d 9c                     	movzx ebx, word ptr [ebp - 0x64]
0x804a19e:   0f be 75 eb                     	movsx esi, byte ptr [ebp - 0x15]
0x804a1a2:   89 b5 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], esi
0x804a1a8:   0f bf 75 ec                     	movsx esi, word ptr [ebp - 0x14]
0x804a1ac:   0f be 7d ef                     	movsx edi, byte ptr [ebp - 0x11]
0x804a1b0:   89 bd b0 fe ff ff               	mov dword ptr [ebp - 0x150], edi
0x804a1b6:   0f b7 7d f0                     	movzx edi, word ptr [ebp - 0x10]
0x804a1ba:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a1be:   89 85 ac fe ff ff               	mov dword ptr [ebp - 0x154], eax
0x804a1c4:   0f be 45 9f                     	movsx eax, byte ptr [ebp - 0x61]
0x804a1c8:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a1ce:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a1d1:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a1d7:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a1dd:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a1e3:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a1e9:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a1ec:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a1f2:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a1f8:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a1fe:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a201:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a207:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a20a:   52                              	push edx
0x804a20b:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a211:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a214:   51                              	push ecx
0x804a215:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a218:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a21e:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a221:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a224:   53                              	push ebx
0x804a225:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a22b:   56                              	push esi
0x804a22c:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a232:   57                              	push edi
0x804a233:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a239:   50                              	push eax
0x804a23a:   e8 e7 f3 ff ff                  	call 0x8049626 <set_var>
0x804a23f:   83 c4 70                        	add esp, 0x70
0x804a242:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x804a246:   e9 6b 0a 00 00                  	jmp 0x804acb6 <func_1+0x1429>
0x804a24b:   c7 45 ac 78 f4 ac 31            	mov dword ptr [ebp - 0x54], 0x31acf478
0x804a252:   66 c7 45 f2 fc ff               	mov word ptr [ebp - 0xe], 0xfffc
0x804a258:   66 83 7d f2 29                  	cmp word ptr [ebp - 0xe], 0x29
0x804a25d:   0f 84 28 01 00 00               	je 0x804a38b <func_1+0xafe>
0x804a263:   0f b6 45 8b                     	movzx eax, byte ptr [ebp - 0x75]
0x804a267:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x804a26d:   0f bf 45 8c                     	movsx eax, word ptr [ebp - 0x74]
0x804a271:   89 85 dc fe ff ff               	mov dword ptr [ebp - 0x124], eax
0x804a277:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804a27b:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x804a281:   0f bf 45 8e                     	movsx eax, word ptr [ebp - 0x72]
0x804a285:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x804a28b:   0f bf 45 90                     	movsx eax, word ptr [ebp - 0x70]
0x804a28f:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a295:   0f bf 45 92                     	movsx eax, word ptr [ebp - 0x6e]
0x804a299:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x804a29f:   0f bf 45 94                     	movsx eax, word ptr [ebp - 0x6c]
0x804a2a3:   89 85 c8 fe ff ff               	mov dword ptr [ebp - 0x138], eax
0x804a2a9:   0f be 45 97                     	movsx eax, byte ptr [ebp - 0x69]
0x804a2ad:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x804a2b3:   0f b7 55 d6                     	movzx edx, word ptr [ebp - 0x2a]
0x804a2b7:   89 95 c0 fe ff ff               	mov dword ptr [ebp - 0x140], edx
0x804a2bd:   0f be 55 de                     	movsx edx, byte ptr [ebp - 0x22]
0x804a2c1:   0f b6 4d df                     	movzx ecx, byte ptr [ebp - 0x21]
0x804a2c5:   89 8d bc fe ff ff               	mov dword ptr [ebp - 0x144], ecx
0x804a2cb:   0f b6 4d c3                     	movzx ecx, byte ptr [ebp - 0x3d]
0x804a2cf:   0f be 5d cb                     	movsx ebx, byte ptr [ebp - 0x35]
0x804a2d3:   89 9d b8 fe ff ff               	mov dword ptr [ebp - 0x148], ebx
0x804a2d9:   0f b7 5d 9c                     	movzx ebx, word ptr [ebp - 0x64]
0x804a2dd:   0f be 75 eb                     	movsx esi, byte ptr [ebp - 0x15]
0x804a2e1:   89 b5 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], esi
0x804a2e7:   0f bf 75 ec                     	movsx esi, word ptr [ebp - 0x14]
0x804a2eb:   0f be 7d ef                     	movsx edi, byte ptr [ebp - 0x11]
0x804a2ef:   89 bd b0 fe ff ff               	mov dword ptr [ebp - 0x150], edi
0x804a2f5:   0f b7 7d f0                     	movzx edi, word ptr [ebp - 0x10]
0x804a2f9:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a2fd:   89 85 ac fe ff ff               	mov dword ptr [ebp - 0x154], eax
0x804a303:   0f be 45 9f                     	movsx eax, byte ptr [ebp - 0x61]
0x804a307:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a30d:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a310:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a316:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a31c:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a322:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a328:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a32b:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a331:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a337:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a33d:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a340:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a346:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a349:   52                              	push edx
0x804a34a:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a350:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a353:   51                              	push ecx
0x804a354:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a357:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a35d:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a360:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a363:   53                              	push ebx
0x804a364:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a36a:   56                              	push esi
0x804a36b:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a371:   57                              	push edi
0x804a372:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a378:   50                              	push eax
0x804a379:   e8 a8 f2 ff ff                  	call 0x8049626 <set_var>
0x804a37e:   83 c4 70                        	add esp, 0x70
0x804a381:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x804a385:   e9 2c 09 00 00                  	jmp 0x804acb6 <func_1+0x1429>
0x804a38a:   90                              	nop 
0x804a38b:   83 6d b0 01                     	sub dword ptr [ebp - 0x50], 1
0x804a38f:   83 7d b0 ea                     	cmp dword ptr [ebp - 0x50], -0x16
0x804a393:   0f 8c 5f fa ff ff               	jl 0x8049df8 <func_1+0x56b>
0x804a399:   8b 4d e0                        	mov ecx, dword ptr [ebp - 0x20]
0x804a39c:   8d 41 ff                        	lea eax, [ecx - 1]
0x804a39f:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a3a2:   0f b6 bd 38 ff ff ff            	movzx edi, byte ptr [ebp - 0xc8]
0x804a3a9:   b8 8e a4 8a f5                  	mov eax, 0xf58aa48e
0x804a3ae:   ba 00 00 00 00                  	mov edx, 0
0x804a3b3:   f7 f7                           	div edi
0x804a3b5:   3d fe 00 00 00                  	cmp eax, 0xfe
0x804a3ba:   76 10                           	jbe 0x804a3cc <func_1+0xb3f>
0x804a3bc:   80 bd 39 ff ff ff 00            	cmp byte ptr [ebp - 0xc7], 0
0x804a3c3:   74 07                           	je 0x804a3cc <func_1+0xb3f>
0x804a3c5:   b8 01 00 00 00                  	mov eax, 1
0x804a3ca:   eb 05                           	jmp 0x804a3d1 <func_1+0xb44>
0x804a3cc:   b8 00 00 00 00                  	mov eax, 0
0x804a3d1:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x804a3d4:   0f b6 55 df                     	movzx edx, byte ptr [ebp - 0x21]
0x804a3d8:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a3db:   01 d0                           	add eax, edx
0x804a3dd:   39 c1                           	cmp ecx, eax
0x804a3df:   73 0e                           	jae 0x804a3ef <func_1+0xb62>
0x804a3e1:   66 83 7d ec 00                  	cmp word ptr [ebp - 0x14], 0
0x804a3e6:   74 07                           	je 0x804a3ef <func_1+0xb62>
0x804a3e8:   b8 01 00 00 00                  	mov eax, 1
0x804a3ed:   eb 05                           	jmp 0x804a3f4 <func_1+0xb67>
0x804a3ef:   b8 00 00 00 00                  	mov eax, 0
0x804a3f4:   3b 85 30 ff ff ff               	cmp eax, dword ptr [ebp - 0xd0]
0x804a3fa:   c7 45 e4 fb ff ff ff            	mov dword ptr [ebp - 0x1c], 0xfffffffb
0x804a401:   0f be 85 39 ff ff ff            	movsx eax, byte ptr [ebp - 0xc7]
0x804a408:   09 45 e4                        	or dword ptr [ebp - 0x1c], eax
0x804a40b:   e9 85 07 00 00                  	jmp 0x804ab95 <func_1+0x1308>
0x804a410:   c6 85 77 ff ff ff fe            	mov byte ptr [ebp - 0x89], 0xfe
0x804a417:   c7 45 a8 05 00 00 00            	mov dword ptr [ebp - 0x58], 5
0x804a41e:   66 c7 85 74 ff ff ff 06 00      	mov word ptr [ebp - 0x8c], 6
0x804a427:   c7 45 e4 19 00 00 00            	mov dword ptr [ebp - 0x1c], 0x19
0x804a42e:   e9 0e 07 00 00                  	jmp 0x804ab41 <func_1+0x12b4>
0x804a433:   c7 85 70 ff ff ff ed 38 1e 6c   	mov dword ptr [ebp - 0x90], 0x6c1e38ed
0x804a43d:   c7 85 6c ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0x94], 0xfffffff6
0x804a447:   66 c7 85 6a ff ff ff 00 00      	mov word ptr [ebp - 0x96], 0
0x804a450:   c7 85 64 ff ff ff f9 ff ff ff   	mov dword ptr [ebp - 0x9c], 0xfffffff9
0x804a45a:   83 45 d8 01                     	add dword ptr [ebp - 0x28], 1
0x804a45e:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804a462:   0f 84 27 01 00 00               	je 0x804a58f <func_1+0xd02>
0x804a468:   0f b6 45 8b                     	movzx eax, byte ptr [ebp - 0x75]
0x804a46c:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x804a472:   0f bf 45 8c                     	movsx eax, word ptr [ebp - 0x74]
0x804a476:   89 85 dc fe ff ff               	mov dword ptr [ebp - 0x124], eax
0x804a47c:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804a480:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x804a486:   0f bf 45 8e                     	movsx eax, word ptr [ebp - 0x72]
0x804a48a:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x804a490:   0f bf 45 90                     	movsx eax, word ptr [ebp - 0x70]
0x804a494:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a49a:   0f bf 45 92                     	movsx eax, word ptr [ebp - 0x6e]
0x804a49e:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x804a4a4:   0f bf 45 94                     	movsx eax, word ptr [ebp - 0x6c]
0x804a4a8:   89 85 c8 fe ff ff               	mov dword ptr [ebp - 0x138], eax
0x804a4ae:   0f be 45 97                     	movsx eax, byte ptr [ebp - 0x69]
0x804a4b2:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x804a4b8:   0f b7 55 d6                     	movzx edx, word ptr [ebp - 0x2a]
0x804a4bc:   89 95 c0 fe ff ff               	mov dword ptr [ebp - 0x140], edx
0x804a4c2:   0f be 55 de                     	movsx edx, byte ptr [ebp - 0x22]
0x804a4c6:   0f b6 4d df                     	movzx ecx, byte ptr [ebp - 0x21]
0x804a4ca:   89 8d bc fe ff ff               	mov dword ptr [ebp - 0x144], ecx
0x804a4d0:   0f b6 4d c3                     	movzx ecx, byte ptr [ebp - 0x3d]
0x804a4d4:   0f be 5d cb                     	movsx ebx, byte ptr [ebp - 0x35]
0x804a4d8:   89 9d b8 fe ff ff               	mov dword ptr [ebp - 0x148], ebx
0x804a4de:   0f b7 5d 9c                     	movzx ebx, word ptr [ebp - 0x64]
0x804a4e2:   0f be 75 eb                     	movsx esi, byte ptr [ebp - 0x15]
0x804a4e6:   89 b5 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], esi
0x804a4ec:   0f bf 75 ec                     	movsx esi, word ptr [ebp - 0x14]
0x804a4f0:   0f be 7d ef                     	movsx edi, byte ptr [ebp - 0x11]
0x804a4f4:   89 bd b0 fe ff ff               	mov dword ptr [ebp - 0x150], edi
0x804a4fa:   0f b7 7d f0                     	movzx edi, word ptr [ebp - 0x10]
0x804a4fe:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a502:   89 85 ac fe ff ff               	mov dword ptr [ebp - 0x154], eax
0x804a508:   0f be 45 9f                     	movsx eax, byte ptr [ebp - 0x61]
0x804a50c:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a512:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a515:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a51b:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a521:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a527:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a52d:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a530:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a536:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a53c:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a542:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a545:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a54b:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a54e:   52                              	push edx
0x804a54f:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a555:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a558:   51                              	push ecx
0x804a559:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a55c:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a562:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a565:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a568:   53                              	push ebx
0x804a569:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a56f:   56                              	push esi
0x804a570:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a576:   57                              	push edi
0x804a577:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a57d:   50                              	push eax
0x804a57e:   e8 a3 f0 ff ff                  	call 0x8049626 <set_var>
0x804a583:   83 c4 70                        	add esp, 0x70
0x804a586:   0f b6 45 9f                     	movzx eax, byte ptr [ebp - 0x61]
0x804a58a:   e9 27 07 00 00                  	jmp 0x804acb6 <func_1+0x1429>
0x804a58f:   c7 85 60 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xa0], 0xffffffff
0x804a599:   c7 45 a4 04 00 00 00            	mov dword ptr [ebp - 0x5c], 4
0x804a5a0:   66 c7 45 f0 f7 ff               	mov word ptr [ebp - 0x10], 0xfff7
0x804a5a6:   66 83 7d f0 10                  	cmp word ptr [ebp - 0x10], 0x10
0x804a5ab:   0f 86 e3 01 00 00               	jbe 0x804a794 <func_1+0xf07>
0x804a5b1:   66 c7 85 42 ff ff ff de 85      	mov word ptr [ebp - 0xbe], 0x85de
0x804a5ba:   0f b6 9d 77 ff ff ff            	movzx ebx, byte ptr [ebp - 0x89]
0x804a5c1:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x804a5c5:   0f 94 c0                        	sete al
0x804a5c8:   0f b6 c0                        	movzx eax, al
0x804a5cb:   8b b5 60 ff ff ff               	mov esi, dword ptr [ebp - 0xa0]
0x804a5d1:   ba 00 00 00 00                  	mov edx, 0
0x804a5d6:   f7 f6                           	div esi
0x804a5d8:   0f b7 c0                        	movzx eax, ax
0x804a5db:   89 c1                           	mov ecx, eax
0x804a5dd:   d3 e3                           	shl ebx, cl
0x804a5df:   89 d8                           	mov eax, ebx
0x804a5e1:   ba 8e ff ff ff                  	mov edx, 0xffffff8e
0x804a5e6:   29 c2                           	sub edx, eax
0x804a5e8:   89 d0                           	mov eax, edx
0x804a5ea:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x804a5ed:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x804a5f1:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a5f4:   0f 97 c0                        	seta al
0x804a5f7:   0f b6 d0                        	movzx edx, al
0x804a5fa:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a5fe:   39 c2                           	cmp edx, eax
0x804a600:   0f 9c c0                        	setl al
0x804a603:   0f b6 c0                        	movzx eax, al
0x804a606:   8b 55 80                        	mov edx, dword ptr [ebp - 0x80]
0x804a609:   29 d0                           	sub eax, edx
0x804a60b:   66 83 f8 01                     	cmp ax, 1
0x804a60f:   74 08                           	je 0x804a619 <func_1+0xd8c>
0x804a611:   66 83 bd 42 ff ff ff 00         	cmp word ptr [ebp - 0xbe], 0
0x804a619:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a61f:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a622:   0f 92 c0                        	setb al
0x804a625:   0f b6 c0                        	movzx eax, al
0x804a628:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804a62b:   8b 55 80                        	mov edx, dword ptr [ebp - 0x80]
0x804a62e:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a634:   01 c2                           	add edx, eax
0x804a636:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a639:   09 d0                           	or eax, edx
0x804a63b:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804a63e:   c7 45 a4 e8 ff ff ff            	mov dword ptr [ebp - 0x5c], 0xffffffe8
0x804a645:   eb 21                           	jmp 0x804a668 <func_1+0xddb>
0x804a647:   c7 85 3c ff ff ff 60 68 2f e2   	mov dword ptr [ebp - 0xc4], 0xe22f6860
0x804a651:   c6 85 3b ff ff ff f9            	mov byte ptr [ebp - 0xc5], 0xf9
0x804a658:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x804a65e:   88 85 3b ff ff ff               	mov byte ptr [ebp - 0xc5], al
0x804a664:   83 45 a4 04                     	add dword ptr [ebp - 0x5c], 4
0x804a668:   83 7d a4 17                     	cmp dword ptr [ebp - 0x5c], 0x17
0x804a66c:   74 d9                           	je 0x804a647 <func_1+0xdba>
0x804a66e:   0f b6 45 8b                     	movzx eax, byte ptr [ebp - 0x75]
0x804a672:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x804a678:   0f bf 45 8c                     	movsx eax, word ptr [ebp - 0x74]
0x804a67c:   89 85 dc fe ff ff               	mov dword ptr [ebp - 0x124], eax
0x804a682:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804a686:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x804a68c:   0f bf 45 8e                     	movsx eax, word ptr [ebp - 0x72]
0x804a690:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x804a696:   0f bf 45 90                     	movsx eax, word ptr [ebp - 0x70]
0x804a69a:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a6a0:   0f bf 45 92                     	movsx eax, word ptr [ebp - 0x6e]
0x804a6a4:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x804a6aa:   0f bf 45 94                     	movsx eax, word ptr [ebp - 0x6c]
0x804a6ae:   89 85 c8 fe ff ff               	mov dword ptr [ebp - 0x138], eax
0x804a6b4:   0f be 45 97                     	movsx eax, byte ptr [ebp - 0x69]
0x804a6b8:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x804a6be:   0f b7 55 d6                     	movzx edx, word ptr [ebp - 0x2a]
0x804a6c2:   89 95 c0 fe ff ff               	mov dword ptr [ebp - 0x140], edx
0x804a6c8:   0f be 55 de                     	movsx edx, byte ptr [ebp - 0x22]
0x804a6cc:   0f b6 4d df                     	movzx ecx, byte ptr [ebp - 0x21]
0x804a6d0:   89 8d bc fe ff ff               	mov dword ptr [ebp - 0x144], ecx
0x804a6d6:   0f b6 4d c3                     	movzx ecx, byte ptr [ebp - 0x3d]
0x804a6da:   0f be 5d cb                     	movsx ebx, byte ptr [ebp - 0x35]
0x804a6de:   89 9d b8 fe ff ff               	mov dword ptr [ebp - 0x148], ebx
0x804a6e4:   0f b7 5d 9c                     	movzx ebx, word ptr [ebp - 0x64]
0x804a6e8:   0f be 75 eb                     	movsx esi, byte ptr [ebp - 0x15]
0x804a6ec:   89 b5 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], esi
0x804a6f2:   0f bf 75 ec                     	movsx esi, word ptr [ebp - 0x14]
0x804a6f6:   0f be 7d ef                     	movsx edi, byte ptr [ebp - 0x11]
0x804a6fa:   89 bd b0 fe ff ff               	mov dword ptr [ebp - 0x150], edi
0x804a700:   0f b7 7d f0                     	movzx edi, word ptr [ebp - 0x10]
0x804a704:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a708:   89 85 ac fe ff ff               	mov dword ptr [ebp - 0x154], eax
0x804a70e:   0f be 45 9f                     	movsx eax, byte ptr [ebp - 0x61]
0x804a712:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a718:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a71b:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a721:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a727:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a72d:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a733:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a736:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a73c:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a742:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a748:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a74b:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a751:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a754:   52                              	push edx
0x804a755:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a75b:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a75e:   51                              	push ecx
0x804a75f:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a762:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a768:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a76b:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a76e:   53                              	push ebx
0x804a76f:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a775:   56                              	push esi
0x804a776:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a77c:   57                              	push edi
0x804a77d:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a783:   50                              	push eax
0x804a784:   e8 9d ee ff ff                  	call 0x8049626 <set_var>
0x804a789:   83 c4 70                        	add esp, 0x70
0x804a78c:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a78f:   e9 22 05 00 00                  	jmp 0x804acb6 <func_1+0x1429>
0x804a794:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x804a79b:   e9 94 01 00 00                  	jmp 0x804a934 <func_1+0x10a7>
0x804a7a0:   66 c7 85 56 ff ff ff 36 0e      	mov word ptr [ebp - 0xaa], 0xe36
0x804a7a9:   c7 85 50 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xb0], 0xffffffff
0x804a7b3:   c7 45 a0 e3 c8 ca b3            	mov dword ptr [ebp - 0x60], 0xb3cac8e3
0x804a7ba:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x804a7be:   74 10                           	je 0x804a7d0 <func_1+0xf43>
0x804a7c0:   83 bd 70 ff ff ff 00            	cmp dword ptr [ebp - 0x90], 0
0x804a7c7:   74 07                           	je 0x804a7d0 <func_1+0xf43>
0x804a7c9:   b8 01 00 00 00                  	mov eax, 1
0x804a7ce:   eb 05                           	jmp 0x804a7d5 <func_1+0xf48>
0x804a7d0:   b8 00 00 00 00                  	mov eax, 0
0x804a7d5:   83 f8 05                        	cmp eax, 5
0x804a7d8:   0f 97 c0                        	seta al
0x804a7db:   0f b6 d0                        	movzx edx, al
0x804a7de:   0f b7 85 56 ff ff ff            	movzx eax, word ptr [ebp - 0xaa]
0x804a7e5:   09 d0                           	or eax, edx
0x804a7e7:   66 89 85 56 ff ff ff            	mov word ptr [ebp - 0xaa], ax
0x804a7ee:   0f b7 85 56 ff ff ff            	movzx eax, word ptr [ebp - 0xaa]
0x804a7f5:   66 89 45 d6                     	mov word ptr [ebp - 0x2a], ax
0x804a7f9:   c7 45 b8 ef ff ff ff            	mov dword ptr [ebp - 0x48], 0xffffffef
0x804a800:   e9 ba 00 00 00                  	jmp 0x804a8bf <func_1+0x1032>
0x804a805:   c6 85 4f ff ff ff fb            	mov byte ptr [ebp - 0xb1], 0xfb
0x804a80c:   0f be 45 de                     	movsx eax, byte ptr [ebp - 0x22]
0x804a810:   23 45 b4                        	and eax, dword ptr [ebp - 0x4c]
0x804a813:   85 c0                           	test eax, eax
0x804a815:   0f 84 96 00 00 00               	je 0x804a8b1 <func_1+0x1024>
0x804a81b:   c7 85 48 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xb8], 0xffffffff
0x804a825:   c7 85 44 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xbc], 0xffffffff
0x804a82f:   80 7d ef 00                     	cmp byte ptr [ebp - 0x11], 0
0x804a833:   74 1a                           	je 0x804a84f <func_1+0xfc2>
0x804a835:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x804a839:   88 45 de                        	mov byte ptr [ebp - 0x22], al
0x804a83c:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a83f:   ba 11 91 ff ff                  	mov edx, 0xffff9111
0x804a844:   29 c2                           	sub edx, eax
0x804a846:   89 d0                           	mov eax, edx
0x804a848:   98                              	cwde 
0x804a849:   c1 e0 0d                        	shl eax, 0xd
0x804a84c:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a84f:   b8 00 00 00 00                  	mov eax, 0
0x804a854:   0b 85 48 ff ff ff               	or eax, dword ptr [ebp - 0xb8]
0x804a85a:   89 85 44 ff ff ff               	mov dword ptr [ebp - 0xbc], eax
0x804a860:   c7 85 50 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xb0], 0
0x804a86a:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804a86e:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a871:   89 c2                           	mov edx, eax
0x804a873:   0f b7 85 56 ff ff ff            	movzx eax, word ptr [ebp - 0xaa]
0x804a87a:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x804a880:   0f 96 c0                        	setbe al
0x804a883:   09 d0                           	or eax, edx
0x804a885:   0f be d0                        	movsx edx, al
0x804a888:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a88b:   0f be c0                        	movsx eax, al
0x804a88e:   0f af c2                        	imul eax, edx
0x804a891:   83 f8 67                        	cmp eax, 0x67
0x804a894:   0f 9e c0                        	setle al
0x804a897:   0f b6 d0                        	movzx edx, al
0x804a89a:   0f b7 85 56 ff ff ff            	movzx eax, word ptr [ebp - 0xaa]
0x804a8a1:   89 c1                           	mov ecx, eax
0x804a8a3:   d3 fa                           	sar edx, cl
0x804a8a5:   89 d0                           	mov eax, edx
0x804a8a7:   21 45 a0                        	and dword ptr [ebp - 0x60], eax
0x804a8aa:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x804a8af:   eb 0a                           	jmp 0x804a8bb <func_1+0x102e>
0x804a8b1:   83 6d d0 01                     	sub dword ptr [ebp - 0x30], 1
0x804a8b5:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x804a8b9:   75 10                           	jne 0x804a8cb <func_1+0x103e>
0x804a8bb:   83 45 b8 01                     	add dword ptr [ebp - 0x48], 1
0x804a8bf:   83 7d b8 07                     	cmp dword ptr [ebp - 0x48], 7
0x804a8c3:   0f 87 3c ff ff ff               	ja 0x804a805 <func_1+0xf78>
0x804a8c9:   eb 01                           	jmp 0x804a8cc <func_1+0x103f>
0x804a8cb:   90                              	nop 
0x804a8cc:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804a8d0:   83 e8 01                        	sub eax, 1
0x804a8d3:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x804a8d7:   0f be 55 eb                     	movsx edx, byte ptr [ebp - 0x15]
0x804a8db:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a8df:   66 83 bd 6a ff ff ff 00         	cmp word ptr [ebp - 0x96], 0
0x804a8e7:   75 09                           	jne 0x804a8f2 <func_1+0x1065>
0x804a8e9:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x804a8f0:   74 07                           	je 0x804a8f9 <func_1+0x106c>
0x804a8f2:   b9 01 00 00 00                  	mov ecx, 1
0x804a8f7:   eb 05                           	jmp 0x804a8fe <func_1+0x1071>
0x804a8f9:   b9 00 00 00 00                  	mov ecx, 0
0x804a8fe:   39 c1                           	cmp ecx, eax
0x804a900:   0f 94 c0                        	sete al
0x804a903:   0f b6 c0                        	movzx eax, al
0x804a906:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x804a909:   0f 95 c0                        	setne al
0x804a90c:   0f b6 c8                        	movzx ecx, al
0x804a90f:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a913:   39 c1                           	cmp ecx, eax
0x804a915:   75 0d                           	jne 0x804a924 <func_1+0x1097>
0x804a917:   80 7d ef 00                     	cmp byte ptr [ebp - 0x11], 0
0x804a91b:   74 07                           	je 0x804a924 <func_1+0x1097>
0x804a91d:   b8 01 00 00 00                  	mov eax, 1
0x804a922:   eb 05                           	jmp 0x804a929 <func_1+0x109c>
0x804a924:   b8 00 00 00 00                  	mov eax, 0
0x804a929:   09 d0                           	or eax, edx
0x804a92b:   f7 d0                           	not eax
0x804a92d:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a930:   83 45 e0 02                     	add dword ptr [ebp - 0x20], 2
0x804a934:   83 7d e0 22                     	cmp dword ptr [ebp - 0x20], 0x22
0x804a938:   0f 85 62 fe ff ff               	jne 0x804a7a0 <func_1+0xf13>
0x804a93e:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x804a942:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x804a948:   76 13                           	jbe 0x804a95d <func_1+0x10d0>
0x804a94a:   c7 85 58 ff ff ff b2 1f 94 f6   	mov dword ptr [ebp - 0xa8], 0xf6941fb2
0x804a954:   83 6d bc 01                     	sub dword ptr [ebp - 0x44], 1
0x804a958:   e9 e0 01 00 00                  	jmp 0x804ab3d <func_1+0x12b0>
0x804a95d:   c7 85 5c ff ff ff 29 ca a3 e9   	mov dword ptr [ebp - 0xa4], 0xe9a3ca29
0x804a967:   83 6d 98 01                     	sub dword ptr [ebp - 0x68], 1
0x804a96b:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x804a971:   0f bf d0                        	movsx edx, ax
0x804a974:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a97a:   89 c1                           	mov ecx, eax
0x804a97c:   0f b7 45 8c                     	movzx eax, word ptr [ebp - 0x74]
0x804a980:   21 c8                           	and eax, ecx
0x804a982:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x804a986:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a98a:   98                              	cwde 
0x804a98b:   89 c1                           	mov ecx, eax
0x804a98d:   d3 fa                           	sar edx, cl
0x804a98f:   89 d0                           	mov eax, edx
0x804a991:   0f be c0                        	movsx eax, al
0x804a994:   8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x804a997:   0f be fa                        	movsx edi, dl
0x804a99a:   99                              	cdq 
0x804a99b:   f7 ff                           	idiv edi
0x804a99d:   89 c1                           	mov ecx, eax
0x804a99f:   66 83 f9 fb                     	cmp cx, -5
0x804a9a3:   0f 93 c0                        	setae al
0x804a9a6:   0f b6 c0                        	movzx eax, al
0x804a9a9:   89 c2                           	mov edx, eax
0x804a9ab:   c1 e2 02                        	shl edx, 2
0x804a9ae:   01 c2                           	add edx, eax
0x804a9b0:   89 d0                           	mov eax, edx
0x804a9b2:   f7 d8                           	neg eax
0x804a9b4:   29 c1                           	sub ecx, eax
0x804a9b6:   89 c8                           	mov eax, ecx
0x804a9b8:   66 83 f8 06                     	cmp ax, 6
0x804a9bc:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x804a9c0:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x804a9c6:   0f bf 55 92                     	movsx edx, word ptr [ebp - 0x6e]
0x804a9ca:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a9d0:   83 f0 32                        	xor eax, 0x32
0x804a9d3:   39 45 cc                        	cmp dword ptr [ebp - 0x34], eax
0x804a9d6:   0f 9c c0                        	setl al
0x804a9d9:   0f b6 c0                        	movzx eax, al
0x804a9dc:   39 c2                           	cmp edx, eax
0x804a9de:   74 07                           	je 0x804a9e7 <func_1+0x115a>
0x804a9e0:   b8 e9 ff ff ff                  	mov eax, 0xffffffe9
0x804a9e5:   eb 05                           	jmp 0x804a9ec <func_1+0x115f>
0x804a9e7:   b8 ea ff ff ff                  	mov eax, 0xffffffea
0x804a9ec:   88 45 de                        	mov byte ptr [ebp - 0x22], al
0x804a9ef:   0f be 55 de                     	movsx edx, byte ptr [ebp - 0x22]
0x804a9f3:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a9f9:   0f be c0                        	movsx eax, al
0x804a9fc:   0f af c2                        	imul eax, edx
0x804a9ff:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804aa05:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804aa0b:   89 c2                           	mov edx, eax
0x804aa0d:   0f b6 45 8b                     	movzx eax, byte ptr [ebp - 0x75]
0x804aa11:   21 d0                           	and eax, edx
0x804aa13:   88 45 8b                        	mov byte ptr [ebp - 0x75], al
0x804aa16:   0f b6 45 8b                     	movzx eax, byte ptr [ebp - 0x75]
0x804aa1a:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x804aa20:   0f bf 45 8c                     	movsx eax, word ptr [ebp - 0x74]
0x804aa24:   89 85 dc fe ff ff               	mov dword ptr [ebp - 0x124], eax
0x804aa2a:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804aa2e:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x804aa34:   0f bf 45 8e                     	movsx eax, word ptr [ebp - 0x72]
0x804aa38:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x804aa3e:   0f bf 45 90                     	movsx eax, word ptr [ebp - 0x70]
0x804aa42:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804aa48:   0f bf 45 92                     	movsx eax, word ptr [ebp - 0x6e]
0x804aa4c:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x804aa52:   0f bf 45 94                     	movsx eax, word ptr [ebp - 0x6c]
0x804aa56:   89 85 c8 fe ff ff               	mov dword ptr [ebp - 0x138], eax
0x804aa5c:   0f be 45 97                     	movsx eax, byte ptr [ebp - 0x69]
0x804aa60:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x804aa66:   0f b7 55 d6                     	movzx edx, word ptr [ebp - 0x2a]
0x804aa6a:   89 95 c0 fe ff ff               	mov dword ptr [ebp - 0x140], edx
0x804aa70:   0f be 55 de                     	movsx edx, byte ptr [ebp - 0x22]
0x804aa74:   0f b6 4d df                     	movzx ecx, byte ptr [ebp - 0x21]
0x804aa78:   89 8d bc fe ff ff               	mov dword ptr [ebp - 0x144], ecx
0x804aa7e:   0f b6 4d c3                     	movzx ecx, byte ptr [ebp - 0x3d]
0x804aa82:   0f be 5d cb                     	movsx ebx, byte ptr [ebp - 0x35]
0x804aa86:   89 9d b8 fe ff ff               	mov dword ptr [ebp - 0x148], ebx
0x804aa8c:   0f b7 5d 9c                     	movzx ebx, word ptr [ebp - 0x64]
0x804aa90:   0f be 75 eb                     	movsx esi, byte ptr [ebp - 0x15]
0x804aa94:   89 b5 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], esi
0x804aa9a:   0f bf 75 ec                     	movsx esi, word ptr [ebp - 0x14]
0x804aa9e:   0f be 7d ef                     	movsx edi, byte ptr [ebp - 0x11]
0x804aaa2:   89 bd b0 fe ff ff               	mov dword ptr [ebp - 0x150], edi
0x804aaa8:   0f b7 7d f0                     	movzx edi, word ptr [ebp - 0x10]
0x804aaac:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804aab0:   89 85 ac fe ff ff               	mov dword ptr [ebp - 0x154], eax
0x804aab6:   0f be 45 9f                     	movsx eax, byte ptr [ebp - 0x61]
0x804aaba:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804aac0:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804aac3:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804aac9:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804aacf:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804aad5:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804aadb:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804aade:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804aae4:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804aaea:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804aaf0:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804aaf3:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804aaf9:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804aafc:   52                              	push edx
0x804aafd:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804ab03:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804ab06:   51                              	push ecx
0x804ab07:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804ab0a:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804ab10:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804ab13:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804ab16:   53                              	push ebx
0x804ab17:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804ab1d:   56                              	push esi
0x804ab1e:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804ab24:   57                              	push edi
0x804ab25:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804ab2b:   50                              	push eax
0x804ab2c:   e8 f5 ea ff ff                  	call 0x8049626 <set_var>
0x804ab31:   83 c4 70                        	add esp, 0x70
0x804ab34:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x804ab38:   e9 79 01 00 00                  	jmp 0x804acb6 <func_1+0x1429>
0x804ab3d:   83 6d e4 01                     	sub dword ptr [ebp - 0x1c], 1
0x804ab41:   83 7d e4 06                     	cmp dword ptr [ebp - 0x1c], 6
0x804ab45:   0f 8f e8 f8 ff ff               	jg 0x804a433 <func_1+0xba6>
0x804ab4b:   83 7d 80 09                     	cmp dword ptr [ebp - 0x80], 9
0x804ab4f:   0f 94 c0                        	sete al
0x804ab52:   89 c2                           	mov edx, eax
0x804ab54:   0f b6 85 77 ff ff ff            	movzx eax, byte ptr [ebp - 0x89]
0x804ab5b:   09 d0                           	or eax, edx
0x804ab5d:   0f b6 c0                        	movzx eax, al
0x804ab60:   83 e8 04                        	sub eax, 4
0x804ab63:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804ab66:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804ab69:   0f bf d0                        	movsx edx, ax
0x804ab6c:   0f b6 45 8b                     	movzx eax, byte ptr [ebp - 0x75]
0x804ab70:   89 c1                           	mov ecx, eax
0x804ab72:   d3 fa                           	sar edx, cl
0x804ab74:   89 d0                           	mov eax, edx
0x804ab76:   09 45 cc                        	or dword ptr [ebp - 0x34], eax
0x804ab79:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x804ab7d:   74 05                           	je 0x804ab84 <func_1+0x12f7>
0x804ab7f:   e9 a3 f8 ff ff                  	jmp 0x804a427 <func_1+0xb9a>
0x804ab84:   0f b7 85 74 ff ff ff            	movzx eax, word ptr [ebp - 0x8c]
0x804ab8b:   83 c0 01                        	add eax, 1
0x804ab8e:   66 89 85 74 ff ff ff            	mov word ptr [ebp - 0x8c], ax
0x804ab95:   0f b6 45 8b                     	movzx eax, byte ptr [ebp - 0x75]
0x804ab99:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x804ab9f:   0f bf 45 8c                     	movsx eax, word ptr [ebp - 0x74]
0x804aba3:   89 85 dc fe ff ff               	mov dword ptr [ebp - 0x124], eax
0x804aba9:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804abad:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x804abb3:   0f bf 45 8e                     	movsx eax, word ptr [ebp - 0x72]
0x804abb7:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x804abbd:   0f bf 45 90                     	movsx eax, word ptr [ebp - 0x70]
0x804abc1:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804abc7:   0f bf 45 92                     	movsx eax, word ptr [ebp - 0x6e]
0x804abcb:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x804abd1:   0f bf 45 94                     	movsx eax, word ptr [ebp - 0x6c]
0x804abd5:   89 85 c8 fe ff ff               	mov dword ptr [ebp - 0x138], eax
0x804abdb:   0f be 45 97                     	movsx eax, byte ptr [ebp - 0x69]
0x804abdf:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x804abe5:   0f b7 55 d6                     	movzx edx, word ptr [ebp - 0x2a]
0x804abe9:   89 95 c0 fe ff ff               	mov dword ptr [ebp - 0x140], edx
0x804abef:   0f be 55 de                     	movsx edx, byte ptr [ebp - 0x22]
0x804abf3:   0f b6 4d df                     	movzx ecx, byte ptr [ebp - 0x21]
0x804abf7:   89 8d bc fe ff ff               	mov dword ptr [ebp - 0x144], ecx
0x804abfd:   0f b6 4d c3                     	movzx ecx, byte ptr [ebp - 0x3d]
0x804ac01:   0f be 5d cb                     	movsx ebx, byte ptr [ebp - 0x35]
0x804ac05:   89 9d b8 fe ff ff               	mov dword ptr [ebp - 0x148], ebx
0x804ac0b:   0f b7 5d 9c                     	movzx ebx, word ptr [ebp - 0x64]
0x804ac0f:   0f be 75 eb                     	movsx esi, byte ptr [ebp - 0x15]
0x804ac13:   89 b5 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], esi
0x804ac19:   0f bf 75 ec                     	movsx esi, word ptr [ebp - 0x14]
0x804ac1d:   0f be 7d ef                     	movsx edi, byte ptr [ebp - 0x11]
0x804ac21:   89 bd b0 fe ff ff               	mov dword ptr [ebp - 0x150], edi
0x804ac27:   0f b7 7d f0                     	movzx edi, word ptr [ebp - 0x10]
0x804ac2b:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804ac2f:   89 85 ac fe ff ff               	mov dword ptr [ebp - 0x154], eax
0x804ac35:   0f be 45 9f                     	movsx eax, byte ptr [ebp - 0x61]
0x804ac39:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804ac3f:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804ac42:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804ac48:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804ac4e:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804ac54:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804ac5a:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804ac5d:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804ac63:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804ac69:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804ac6f:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804ac72:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804ac78:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804ac7b:   52                              	push edx
0x804ac7c:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804ac82:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804ac85:   51                              	push ecx
0x804ac86:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804ac89:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804ac8f:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804ac92:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804ac95:   53                              	push ebx
0x804ac96:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804ac9c:   56                              	push esi
0x804ac9d:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804aca3:   57                              	push edi
0x804aca4:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804acaa:   50                              	push eax
0x804acab:   e8 76 e9 ff ff                  	call 0x8049626 <set_var>
0x804acb0:   83 c4 70                        	add esp, 0x70
0x804acb3:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804acb6:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804acb9:   5b                              	pop ebx
0x804acba:   5e                              	pop esi
0x804acbb:   5f                              	pop edi
0x804acbc:   5d                              	pop ebp
0x804acbd:   c3                              	ret 
; function: main at 0x804acbe -- 0x804b09e
0x804acbe:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804acc2:   83 e4 f0                        	and esp, 0xfffffff0
0x804acc5:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804acc8:   55                              	push ebp
0x804acc9:   89 e5                           	mov ebp, esp
0x804accb:   53                              	push ebx
0x804accc:   51                              	push ecx
0x804accd:   83 ec 10                        	sub esp, 0x10
0x804acd0:   e8 bb d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804acd5:   81 c3 2b 33 00 00               	add ebx, 0x332b
0x804acdb:   89 c8                           	mov eax, ecx
0x804acdd:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804ace4:   83 38 02                        	cmp dword ptr [eax], 2
0x804ace7:   75 26                           	jne 0x804ad0f <main+0x51>
0x804ace9:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804acec:   83 c0 04                        	add eax, 4
0x804acef:   8b 00                           	mov eax, dword ptr [eax]
0x804acf1:   83 ec 08                        	sub esp, 8
0x804acf4:   8d 93 88 d1 ff ff               	lea edx, [ebx - 0x2e78]
0x804acfa:   52                              	push edx
0x804acfb:   50                              	push eax
0x804acfc:   e8 ff d5 ff ff                  	call 0x8048300 <strcmp>
0x804ad01:   83 c4 10                        	add esp, 0x10
0x804ad04:   85 c0                           	test eax, eax
0x804ad06:   75 07                           	jne 0x804ad0f <main+0x51>
0x804ad08:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804ad0f:   e8 42 d7 ff ff                  	call 0x8048456 <platform_main_begin>
0x804ad14:   e8 52 e7 ff ff                  	call 0x804946b <crc32_gentab>
0x804ad19:   e8 6f eb ff ff                  	call 0x804988d <func_1>
0x804ad1e:   0f b6 83 24 00 00 00            	movzx eax, byte ptr [ebx + 0x24]
0x804ad25:   0f be c0                        	movsx eax, al
0x804ad28:   83 ec 04                        	sub esp, 4
0x804ad2b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad2e:   8d 93 8a d1 ff ff               	lea edx, [ebx - 0x2e76]
0x804ad34:   52                              	push edx
0x804ad35:   50                              	push eax
0x804ad36:   e8 3c e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad3b:   83 c4 10                        	add esp, 0x10
0x804ad3e:   0f b7 83 26 00 00 00            	movzx eax, word ptr [ebx + 0x26]
0x804ad45:   0f b7 c0                        	movzx eax, ax
0x804ad48:   83 ec 04                        	sub esp, 4
0x804ad4b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad4e:   8d 93 8f d1 ff ff               	lea edx, [ebx - 0x2e71]
0x804ad54:   52                              	push edx
0x804ad55:   50                              	push eax
0x804ad56:   e8 1c e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad5b:   83 c4 10                        	add esp, 0x10
0x804ad5e:   0f b7 83 28 00 00 00            	movzx eax, word ptr [ebx + 0x28]
0x804ad65:   0f b7 c0                        	movzx eax, ax
0x804ad68:   83 ec 04                        	sub esp, 4
0x804ad6b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad6e:   8d 93 94 d1 ff ff               	lea edx, [ebx - 0x2e6c]
0x804ad74:   52                              	push edx
0x804ad75:   50                              	push eax
0x804ad76:   e8 fc e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad7b:   83 c4 10                        	add esp, 0x10
0x804ad7e:   0f b6 83 2a 00 00 00            	movzx eax, byte ptr [ebx + 0x2a]
0x804ad85:   0f be c0                        	movsx eax, al
0x804ad88:   83 ec 04                        	sub esp, 4
0x804ad8b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad8e:   8d 93 99 d1 ff ff               	lea edx, [ebx - 0x2e67]
0x804ad94:   52                              	push edx
0x804ad95:   50                              	push eax
0x804ad96:   e8 dc e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad9b:   83 c4 10                        	add esp, 0x10
0x804ad9e:   0f b7 83 2c 00 00 00            	movzx eax, word ptr [ebx + 0x2c]
0x804ada5:   98                              	cwde 
0x804ada6:   83 ec 04                        	sub esp, 4
0x804ada9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adac:   8d 93 9e d1 ff ff               	lea edx, [ebx - 0x2e62]
0x804adb2:   52                              	push edx
0x804adb3:   50                              	push eax
0x804adb4:   e8 be e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adb9:   83 c4 10                        	add esp, 0x10
0x804adbc:   0f b6 83 2e 00 00 00            	movzx eax, byte ptr [ebx + 0x2e]
0x804adc3:   0f be c0                        	movsx eax, al
0x804adc6:   83 ec 04                        	sub esp, 4
0x804adc9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adcc:   8d 93 a3 d1 ff ff               	lea edx, [ebx - 0x2e5d]
0x804add2:   52                              	push edx
0x804add3:   50                              	push eax
0x804add4:   e8 9e e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804add9:   83 c4 10                        	add esp, 0x10
0x804addc:   0f b7 83 30 00 00 00            	movzx eax, word ptr [ebx + 0x30]
0x804ade3:   0f b7 c0                        	movzx eax, ax
0x804ade6:   83 ec 04                        	sub esp, 4
0x804ade9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adec:   8d 93 a8 d1 ff ff               	lea edx, [ebx - 0x2e58]
0x804adf2:   52                              	push edx
0x804adf3:   50                              	push eax
0x804adf4:   e8 7e e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adf9:   83 c4 10                        	add esp, 0x10
0x804adfc:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804ae02:   89 c2                           	mov edx, eax
0x804ae04:   83 ec 04                        	sub esp, 4
0x804ae07:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae0a:   8d 83 ad d1 ff ff               	lea eax, [ebx - 0x2e53]
0x804ae10:   50                              	push eax
0x804ae11:   52                              	push edx
0x804ae12:   e8 60 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae17:   83 c4 10                        	add esp, 0x10
0x804ae1a:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804ae20:   83 ec 04                        	sub esp, 4
0x804ae23:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae26:   8d 93 b2 d1 ff ff               	lea edx, [ebx - 0x2e4e]
0x804ae2c:   52                              	push edx
0x804ae2d:   50                              	push eax
0x804ae2e:   e8 44 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae33:   83 c4 10                        	add esp, 0x10
0x804ae36:   0f b6 83 a4 04 00 00            	movzx eax, byte ptr [ebx + 0x4a4]
0x804ae3d:   0f be c0                        	movsx eax, al
0x804ae40:   83 ec 04                        	sub esp, 4
0x804ae43:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae46:   8d 93 b7 d1 ff ff               	lea edx, [ebx - 0x2e49]
0x804ae4c:   52                              	push edx
0x804ae4d:   50                              	push eax
0x804ae4e:   e8 24 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae53:   83 c4 10                        	add esp, 0x10
0x804ae56:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804ae5c:   89 c2                           	mov edx, eax
0x804ae5e:   83 ec 04                        	sub esp, 4
0x804ae61:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae64:   8d 83 bc d1 ff ff               	lea eax, [ebx - 0x2e44]
0x804ae6a:   50                              	push eax
0x804ae6b:   52                              	push edx
0x804ae6c:   e8 06 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae71:   83 c4 10                        	add esp, 0x10
0x804ae74:   0f b6 83 40 00 00 00            	movzx eax, byte ptr [ebx + 0x40]
0x804ae7b:   0f b6 c0                        	movzx eax, al
0x804ae7e:   83 ec 04                        	sub esp, 4
0x804ae81:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae84:   8d 93 c2 d1 ff ff               	lea edx, [ebx - 0x2e3e]
0x804ae8a:   52                              	push edx
0x804ae8b:   50                              	push eax
0x804ae8c:   e8 e6 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae91:   83 c4 10                        	add esp, 0x10
0x804ae94:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804ae9a:   83 ec 04                        	sub esp, 4
0x804ae9d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aea0:   8d 93 c8 d1 ff ff               	lea edx, [ebx - 0x2e38]
0x804aea6:   52                              	push edx
0x804aea7:   50                              	push eax
0x804aea8:   e8 ca e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aead:   83 c4 10                        	add esp, 0x10
0x804aeb0:   0f b6 83 48 00 00 00            	movzx eax, byte ptr [ebx + 0x48]
0x804aeb7:   0f b6 c0                        	movzx eax, al
0x804aeba:   83 ec 04                        	sub esp, 4
0x804aebd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aec0:   8d 93 ce d1 ff ff               	lea edx, [ebx - 0x2e32]
0x804aec6:   52                              	push edx
0x804aec7:   50                              	push eax
0x804aec8:   e8 aa e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aecd:   83 c4 10                        	add esp, 0x10
0x804aed0:   0f b6 83 49 00 00 00            	movzx eax, byte ptr [ebx + 0x49]
0x804aed7:   0f be c0                        	movsx eax, al
0x804aeda:   83 ec 04                        	sub esp, 4
0x804aedd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aee0:   8d 93 d4 d1 ff ff               	lea edx, [ebx - 0x2e2c]
0x804aee6:   52                              	push edx
0x804aee7:   50                              	push eax
0x804aee8:   e8 8a e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aeed:   83 c4 10                        	add esp, 0x10
0x804aef0:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804aef6:   83 ec 04                        	sub esp, 4
0x804aef9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aefc:   8d 93 da d1 ff ff               	lea edx, [ebx - 0x2e26]
0x804af02:   52                              	push edx
0x804af03:   50                              	push eax
0x804af04:   e8 6e e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af09:   83 c4 10                        	add esp, 0x10
0x804af0c:   0f b7 83 50 00 00 00            	movzx eax, word ptr [ebx + 0x50]
0x804af13:   0f b7 c0                        	movzx eax, ax
0x804af16:   83 ec 04                        	sub esp, 4
0x804af19:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af1c:   8d 93 e0 d1 ff ff               	lea edx, [ebx - 0x2e20]
0x804af22:   52                              	push edx
0x804af23:   50                              	push eax
0x804af24:   e8 4e e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af29:   83 c4 10                        	add esp, 0x10
0x804af2c:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804af32:   83 ec 04                        	sub esp, 4
0x804af35:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af38:   8d 93 e6 d1 ff ff               	lea edx, [ebx - 0x2e1a]
0x804af3e:   52                              	push edx
0x804af3f:   50                              	push eax
0x804af40:   e8 32 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af45:   83 c4 10                        	add esp, 0x10
0x804af48:   0f b6 83 58 00 00 00            	movzx eax, byte ptr [ebx + 0x58]
0x804af4f:   0f be c0                        	movsx eax, al
0x804af52:   83 ec 04                        	sub esp, 4
0x804af55:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af58:   8d 93 ec d1 ff ff               	lea edx, [ebx - 0x2e14]
0x804af5e:   52                              	push edx
0x804af5f:   50                              	push eax
0x804af60:   e8 12 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af65:   83 c4 10                        	add esp, 0x10
0x804af68:   0f b7 83 a6 04 00 00            	movzx eax, word ptr [ebx + 0x4a6]
0x804af6f:   98                              	cwde 
0x804af70:   83 ec 04                        	sub esp, 4
0x804af73:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af76:   8d 93 f2 d1 ff ff               	lea edx, [ebx - 0x2e0e]
0x804af7c:   52                              	push edx
0x804af7d:   50                              	push eax
0x804af7e:   e8 f4 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af83:   83 c4 10                        	add esp, 0x10
0x804af86:   0f b7 83 5a 00 00 00            	movzx eax, word ptr [ebx + 0x5a]
0x804af8d:   98                              	cwde 
0x804af8e:   83 ec 04                        	sub esp, 4
0x804af91:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af94:   8d 93 f8 d1 ff ff               	lea edx, [ebx - 0x2e08]
0x804af9a:   52                              	push edx
0x804af9b:   50                              	push eax
0x804af9c:   e8 d6 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afa1:   83 c4 10                        	add esp, 0x10
0x804afa4:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804afaa:   89 c2                           	mov edx, eax
0x804afac:   83 ec 04                        	sub esp, 4
0x804afaf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afb2:   8d 83 fe d1 ff ff               	lea eax, [ebx - 0x2e02]
0x804afb8:   50                              	push eax
0x804afb9:   52                              	push edx
0x804afba:   e8 b8 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afbf:   83 c4 10                        	add esp, 0x10
0x804afc2:   0f b7 83 a8 04 00 00            	movzx eax, word ptr [ebx + 0x4a8]
0x804afc9:   98                              	cwde 
0x804afca:   83 ec 04                        	sub esp, 4
0x804afcd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afd0:   8d 93 04 d2 ff ff               	lea edx, [ebx - 0x2dfc]
0x804afd6:   52                              	push edx
0x804afd7:   50                              	push eax
0x804afd8:   e8 9a e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afdd:   83 c4 10                        	add esp, 0x10
0x804afe0:   0f b7 83 aa 04 00 00            	movzx eax, word ptr [ebx + 0x4aa]
0x804afe7:   98                              	cwde 
0x804afe8:   83 ec 04                        	sub esp, 4
0x804afeb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afee:   8d 93 0a d2 ff ff               	lea edx, [ebx - 0x2df6]
0x804aff4:   52                              	push edx
0x804aff5:   50                              	push eax
0x804aff6:   e8 7c e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804affb:   83 c4 10                        	add esp, 0x10
0x804affe:   0f b7 83 60 00 00 00            	movzx eax, word ptr [ebx + 0x60]
0x804b005:   0f b7 c0                        	movzx eax, ax
0x804b008:   83 ec 04                        	sub esp, 4
0x804b00b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b00e:   8d 93 10 d2 ff ff               	lea edx, [ebx - 0x2df0]
0x804b014:   52                              	push edx
0x804b015:   50                              	push eax
0x804b016:   e8 5c e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b01b:   83 c4 10                        	add esp, 0x10
0x804b01e:   0f b7 83 62 00 00 00            	movzx eax, word ptr [ebx + 0x62]
0x804b025:   98                              	cwde 
0x804b026:   83 ec 04                        	sub esp, 4
0x804b029:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b02c:   8d 93 16 d2 ff ff               	lea edx, [ebx - 0x2dea]
0x804b032:   52                              	push edx
0x804b033:   50                              	push eax
0x804b034:   e8 3e e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b039:   83 c4 10                        	add esp, 0x10
0x804b03c:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804b042:   83 ec 04                        	sub esp, 4
0x804b045:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b048:   8d 93 1c d2 ff ff               	lea edx, [ebx - 0x2de4]
0x804b04e:   52                              	push edx
0x804b04f:   50                              	push eax
0x804b050:   e8 22 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b055:   83 c4 10                        	add esp, 0x10
0x804b058:   0f b6 83 68 00 00 00            	movzx eax, byte ptr [ebx + 0x68]
0x804b05f:   0f b6 c0                        	movzx eax, al
0x804b062:   83 ec 04                        	sub esp, 4
0x804b065:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b068:   8d 93 22 d2 ff ff               	lea edx, [ebx - 0x2dde]
0x804b06e:   52                              	push edx
0x804b06f:   50                              	push eax
0x804b070:   e8 02 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b075:   83 c4 10                        	add esp, 0x10
0x804b078:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b07e:   f7 d0                           	not eax
0x804b080:   83 ec 08                        	sub esp, 8
0x804b083:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b086:   50                              	push eax
0x804b087:   e8 da d3 ff ff                  	call 0x8048466 <platform_main_end>
0x804b08c:   83 c4 10                        	add esp, 0x10
0x804b08f:   b8 00 00 00 00                  	mov eax, 0
0x804b094:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b097:   59                              	pop ecx
0x804b098:   5b                              	pop ebx
0x804b099:   5d                              	pop ebp
0x804b09a:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b09d:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b09e -- 0x804b0a2
0x804b09e:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b0a1:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b0a2 -- 0x804b0a6
0x804b0a2:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b0a5:   c3                              	ret 
; data inside code section at 0x804b0a6 -- 0x804b0b0
0x804b0a6:   66 90 66 90 66 90 66 90  66 90                     |f.f.f.f.f.      |
; function: __libc_csu_init at 0x804b0b0 -- 0x804b10d
0x804b0b0:   55                              	push ebp
0x804b0b1:   57                              	push edi
0x804b0b2:   56                              	push esi
0x804b0b3:   53                              	push ebx
0x804b0b4:   e8 d7 d2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b0b9:   81 c3 47 2f 00 00               	add ebx, 0x2f47
0x804b0bf:   83 ec 0c                        	sub esp, 0xc
0x804b0c2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b0c6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b0cc:   e8 fb d1 ff ff                  	call 0x80482cc <_init>
0x804b0d1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b0d7:   29 c6                           	sub esi, eax
0x804b0d9:   c1 fe 02                        	sar esi, 2
0x804b0dc:   85 f6                           	test esi, esi
0x804b0de:   74 25                           	je 0x804b105 <__libc_csu_init+0x55>
0x804b0e0:   31 ff                           	xor edi, edi
0x804b0e2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b0e8:   83 ec 04                        	sub esp, 4
0x804b0eb:   55                              	push ebp
0x804b0ec:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b0f0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b0f4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b0fb:   83 c7 01                        	add edi, 1
0x804b0fe:   83 c4 10                        	add esp, 0x10
0x804b101:   39 fe                           	cmp esi, edi
0x804b103:   75 e3                           	jne 0x804b0e8 <__libc_csu_init+0x38>
0x804b105:   83 c4 0c                        	add esp, 0xc
0x804b108:   5b                              	pop ebx
0x804b109:   5e                              	pop esi
0x804b10a:   5f                              	pop edi
0x804b10b:   5d                              	pop ebp
0x804b10c:   c3                              	ret 
; data inside code section at 0x804b10d -- 0x804b110
0x804b10d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b110 -- 0x804b112
0x804b110:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b114 -- 0x804b128
0x804b114:   53                              	push ebx
0x804b115:   83 ec 08                        	sub esp, 8
0x804b118:   e8 73 d2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b11d:   81 c3 e3 2e 00 00               	add ebx, 0x2ee3
0x804b123:   83 c4 08                        	add esp, 8
0x804b126:   5b                              	pop ebx
0x804b127:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 2c b1 04 08  04 00 00 00 11 00 10 00   |....,...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b128:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b138:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b148:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b158:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b168:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b178:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b188:   31 00 67 5f 31 35 00 67  5f 31 36 00 67 5f 31 37   |1.g_15.g_16.g_17|
0x804b198:   00 67 5f 32 30 00 67 5f  32 31 00 67 5f 32 32 00   |.g_20.g_21.g_22.|
0x804b1a8:   67 5f 37 34 00 67 5f 37  36 00 67 5f 39 30 00 67   |g_74.g_76.g_90.g|
0x804b1b8:   5f 39 31 00 67 5f 32 33  37 00 67 5f 32 36 36 00   |_91.g_237.g_266.|
0x804b1c8:   67 5f 32 39 34 00 67 5f  33 30 31 00 67 5f 33 30   |g_294.g_301.g_30|
0x804b1d8:   34 00 67 5f 33 30 35 00  67 5f 33 34 36 00 67 5f   |4.g_305.g_346.g_|
0x804b1e8:   33 38 34 00 67 5f 33 38  37 00 67 5f 33 38 38 00   |384.g_387.g_388.|
0x804b1f8:   67 5f 33 38 39 00 67 5f  33 39 30 00 67 5f 33 39   |g_389.g_390.g_39|
0x804b208:   32 00 67 5f 33 39 33 00  67 5f 33 39 34 00 67 5f   |2.g_393.g_394.g_|
0x804b218:   33 39 39 00 67 5f 34 30  31 00 67 5f 34 32 30 00   |399.g_401.g_420.|
0x804b228:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804b238:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804b248:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804b258:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804b268:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804b278:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804b288:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804b290:   01 1b 03 3b b8 02 00 00  56 00 00 00 60 d0 ff ff   |...;....V...`...|
0x804b2a0:   e8 02 00 00 a0 d0 ff ff  0c 03 00 00 f0 d0 ff ff   |................|
0x804b2b0:   d4 02 00 00 c6 d1 ff ff  20 03 00 00 d6 d1 ff ff   |........ .......|
0x804b2c0:   40 03 00 00 04 d2 ff ff  64 03 00 00 22 d2 ff ff   |@.......d..."...|
0x804b2d0:   84 03 00 00 4a d2 ff ff  a4 03 00 00 74 d2 ff ff   |....J.......t...|
0x804b2e0:   c4 03 00 00 9d d2 ff ff  e4 03 00 00 e0 d2 ff ff   |................|
0x804b2f0:   04 04 00 00 21 d3 ff ff  24 04 00 00 79 d3 ff ff   |....!...$...y...|
0x804b300:   48 04 00 00 cb d3 ff ff  6c 04 00 00 08 d4 ff ff   |H.......l.......|
0x804b310:   8c 04 00 00 3f d4 ff ff  ac 04 00 00 5e d4 ff ff   |....?.......^...|
0x804b320:   cc 04 00 00 88 d4 ff ff  ec 04 00 00 b4 d4 ff ff   |................|
0x804b330:   0c 05 00 00 df d4 ff ff  2c 05 00 00 28 d5 ff ff   |........,...(...|
0x804b340:   4c 05 00 00 6f d5 ff ff  6c 05 00 00 c9 d5 ff ff   |L...o...l.......|
0x804b350:   90 05 00 00 1d d6 ff ff  b4 05 00 00 5c d6 ff ff   |............\...|
0x804b360:   d4 05 00 00 95 d6 ff ff  f4 05 00 00 b7 d6 ff ff   |................|
0x804b370:   14 06 00 00 05 d7 ff ff  34 06 00 00 41 d7 ff ff   |........4...A...|
0x804b380:   54 06 00 00 ca d7 ff ff  74 06 00 00 fc d7 ff ff   |T.......t.......|
0x804b390:   94 06 00 00 2c d8 ff ff  b4 06 00 00 71 d8 ff ff   |....,.......q...|
0x804b3a0:   d4 06 00 00 b0 d8 ff ff  f4 06 00 00 e2 d8 ff ff   |................|
0x804b3b0:   14 07 00 00 0e d9 ff ff  34 07 00 00 2c d9 ff ff   |........4...,...|
0x804b3c0:   54 07 00 00 54 d9 ff ff  74 07 00 00 79 d9 ff ff   |T...T...t...y...|
0x804b3d0:   94 07 00 00 9e d9 ff ff  b4 07 00 00 d5 d9 ff ff   |................|
0x804b3e0:   d4 07 00 00 09 da ff ff  f4 07 00 00 5b da ff ff   |............[...|
0x804b3f0:   18 08 00 00 a7 da ff ff  3c 08 00 00 de da ff ff   |........<.......|
0x804b400:   5c 08 00 00 0f db ff ff  7c 08 00 00 2e db ff ff   |\.......|.......|
0x804b410:   9c 08 00 00 58 db ff ff  bc 08 00 00 80 db ff ff   |....X...........|
0x804b420:   dc 08 00 00 a9 db ff ff  fc 08 00 00 e5 db ff ff   |................|
0x804b430:   1c 09 00 00 1f dc ff ff  3c 09 00 00 72 dc ff ff   |........<...r...|
0x804b440:   60 09 00 00 bf dc ff ff  84 09 00 00 f7 dc ff ff   |`...............|
0x804b450:   a4 09 00 00 29 dd ff ff  c4 09 00 00 3d dd ff ff   |....).......=...|
0x804b460:   e4 09 00 00 54 dd ff ff  04 0a 00 00 69 dd ff ff   |....T.......i...|
0x804b470:   24 0a 00 00 7f dd ff ff  44 0a 00 00 a6 dd ff ff   |$.......D.......|
0x804b480:   64 0a 00 00 cb dd ff ff  84 0a 00 00 0a de ff ff   |d...............|
0x804b490:   a4 0a 00 00 43 de ff ff  c4 0a 00 00 6f de ff ff   |....C.......o...|
0x804b4a0:   e4 0a 00 00 95 de ff ff  04 0b 00 00 d7 de ff ff   |................|
0x804b4b0:   24 0b 00 00 19 df ff ff  44 0b 00 00 5b df ff ff   |$.......D...[...|
0x804b4c0:   64 0b 00 00 d0 df ff ff  84 0b 00 00 2d e0 ff ff   |d...........-...|
0x804b4d0:   a4 0b 00 00 8a e0 ff ff  c4 0b 00 00 e7 e0 ff ff   |................|
0x804b4e0:   e4 0b 00 00 77 e1 ff ff  04 0c 00 00 db e1 ff ff   |....w...........|
0x804b4f0:   24 0c 00 00 4b e2 ff ff  44 0c 00 00 92 e2 ff ff   |$...K...D.......|
0x804b500:   68 0c 00 00 e7 e2 ff ff  88 0c 00 00 2e e3 ff ff   |h...............|
0x804b510:   ac 0c 00 00 96 e3 ff ff  d0 0c 00 00 fd e5 ff ff   |................|
0x804b520:   00 0d 00 00 2e fa ff ff  30 0d 00 00 0e fe ff ff   |........0.......|
0x804b530:   68 0d 00 00 12 fe ff ff  7c 0d 00 00 20 fe ff ff   |h.......|... ...|
0x804b540:   90 0d 00 00 80 fe ff ff  dc 0d 00 00 14            |.............   |
; section: .eh_frame
0x804b54c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b55c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b56c:   14 ce ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b57c:   30 00 00 00 70 cd ff ff  40 00 00 00 00 0e 08 46   |0...p...@......F|
0x804b58c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b59c:   10 00 00 00 54 00 00 00  8c cd ff ff 08 00 00 00   |....T...........|
0x804b5ac:   00 00 00 00 1c 00 00 00  68 00 00 00 9e ce ff ff   |........h.......|
0x804b5bc:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b5cc:   04 04 00 00 20 00 00 00  88 00 00 00 8e ce ff ff   |.... ...........|
0x804b5dc:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b5ec:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b5fc:   98 ce ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b60c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b61c:   96 ce ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b62c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b63c:   9e ce ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b64c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b65c:   a8 ce ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b66c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b67c:   b1 ce ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b68c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b69c:   d4 ce ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b6ac:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b6bc:   f5 ce ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b6cc:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b6dc:   90 01 00 00 29 cf ff ff  52 00 00 00 00 41 0e 08   |....)...R....A..|
0x804b6ec:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b6fc:   1c 00 00 00 b4 01 00 00  57 cf ff ff 3d 00 00 00   |........W...=...|
0x804b70c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b71c:   1c 00 00 00 d4 01 00 00  74 cf ff ff 37 00 00 00   |........t...7...|
0x804b72c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b73c:   1c 00 00 00 f4 01 00 00  8b cf ff ff 1f 00 00 00   |................|
0x804b74c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b75c:   1c 00 00 00 14 02 00 00  8a cf ff ff 2a 00 00 00   |............*...|
0x804b76c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b77c:   1c 00 00 00 34 02 00 00  94 cf ff ff 2c 00 00 00   |....4.......,...|
0x804b78c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b79c:   1c 00 00 00 54 02 00 00  a0 cf ff ff 2b 00 00 00   |....T.......+...|
0x804b7ac:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b7bc:   1c 00 00 00 74 02 00 00  ab cf ff ff 49 00 00 00   |....t.......I...|
0x804b7cc:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b7dc:   1c 00 00 00 94 02 00 00  d4 cf ff ff 47 00 00 00   |............G...|
0x804b7ec:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b7fc:   20 00 00 00 b4 02 00 00  fb cf ff ff 5a 00 00 00   | ...........Z...|
0x804b80c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b81c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 31 d0 ff ff   |.... .......1...|
0x804b82c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b83c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b84c:   61 d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |a...?....A....B.|
0x804b85c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b86c:   80 d0 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b87c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b88c:   99 d0 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b89c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b8ac:   9b d0 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b8bc:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b8cc:   c9 d0 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b8dc:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b8ec:   e5 d0 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b8fc:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b90c:   4e d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |N...2....A....B.|
0x804b91c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b92c:   60 d1 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |`...0....A....B.|
0x804b93c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b94c:   70 d1 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |p...E....A....B.|
0x804b95c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b96c:   95 d1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b97c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b98c:   b4 d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b99c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b9ac:   c6 d1 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b9bc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b9cc:   d2 d1 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b9dc:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b9ec:   d0 d1 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b9fc:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804ba0c:   d8 d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ba1c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804ba2c:   dd d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ba3c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804ba4c:   e2 d1 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804ba5c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804ba6c:   f9 d1 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804ba7c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804ba8c:   0d d2 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804ba9c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804baac:   60 05 00 00 3b d2 ff ff  4c 00 00 00 00 41 0e 08   |`...;...L....A..|
0x804babc:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804bacc:   1c 00 00 00 84 05 00 00  63 d2 ff ff 37 00 00 00   |........c...7...|
0x804badc:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804baec:   1c 00 00 00 a4 05 00 00  7a d2 ff ff 31 00 00 00   |........z...1...|
0x804bafc:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bb0c:   1c 00 00 00 c4 05 00 00  8b d2 ff ff 1f 00 00 00   |................|
0x804bb1c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bb2c:   1c 00 00 00 e4 05 00 00  8a d2 ff ff 2a 00 00 00   |............*...|
0x804bb3c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bb4c:   1c 00 00 00 04 06 00 00  94 d2 ff ff 28 00 00 00   |............(...|
0x804bb5c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bb6c:   1c 00 00 00 24 06 00 00  9c d2 ff ff 29 00 00 00   |....$.......)...|
0x804bb7c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bb8c:   1c 00 00 00 44 06 00 00  a5 d2 ff ff 3c 00 00 00   |....D.......<...|
0x804bb9c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bbac:   1c 00 00 00 64 06 00 00  c1 d2 ff ff 3a 00 00 00   |....d.......:...|
0x804bbbc:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bbcc:   20 00 00 00 84 06 00 00  db d2 ff ff 53 00 00 00   | ...........S...|
0x804bbdc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bbec:   c5 0c 04 04 20 00 00 00  a8 06 00 00 0a d3 ff ff   |.... ...........|
0x804bbfc:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bc0c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bc1c:   33 d3 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |3...8....A....B.|
0x804bc2c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bc3c:   4b d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |K...2....A....B.|
0x804bc4c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bc5c:   5d d3 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |]........A....B.|
0x804bc6c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bc7c:   51 d3 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |Q........A....B.|
0x804bc8c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bc9c:   48 d3 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |H........A....B.|
0x804bcac:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bcbc:   3d d3 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |=........A....B.|
0x804bccc:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bcdc:   33 d3 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |3...'....A....B.|
0x804bcec:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bcfc:   3a d3 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |:...%....A....B.|
0x804bd0c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bd1c:   3f d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |?...?....A....B.|
0x804bd2c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bd3c:   5e d3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |^...9....A....B.|
0x804bd4c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bd5c:   77 d3 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |w...,....A....B.|
0x804bd6c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bd7c:   83 d3 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804bd8c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bd9c:   89 d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bdac:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bdbc:   ab d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bdcc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bddc:   cd d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bdec:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bdfc:   ef d3 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804be0c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804be1c:   44 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |D...]....A....B.|
0x804be2c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804be3c:   81 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804be4c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804be5c:   be d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804be6c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804be7c:   fb d4 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804be8c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804be9c:   6b d5 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |k...d....A....B.|
0x804beac:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bebc:   af d5 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804becc:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bedc:   ff d5 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804beec:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804befc:   b0 09 00 00 22 d6 ff ff  55 00 00 00 00 41 0e 08   |...."...U....A..|
0x804bf0c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bf1c:   d0 09 00 00 57 d6 ff ff  47 00 00 00 00 41 0e 08   |....W...G....A..|
0x804bf2c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bf3c:   20 00 00 00 f4 09 00 00  7a d6 ff ff 68 00 00 00   | .......z...h...|
0x804bf4c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bf5c:   0c 04 04 00 2c 00 00 00  18 0a 00 00 be d6 ff ff   |....,...........|
0x804bf6c:   67 02 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |g....A....B..I..|
0x804bf7c:   86 04 83 05 03 57 02 c3  41 c6 41 c7 41 c5 0c 04   |.....W..A.A.A...|
0x804bf8c:   04 00 00 00 2c 00 00 00  48 0a 00 00 f5 d8 ff ff   |....,...H.......|
0x804bf9c:   31 14 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |1....A....B..I..|
0x804bfac:   86 04 83 05 03 21 14 c3  41 c6 41 c7 41 c5 0c 04   |.....!..A.A.A...|
0x804bfbc:   04 00 00 00 34 00 00 00  78 0a 00 00 f6 ec ff ff   |....4...x.......|
0x804bfcc:   e0 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804bfdc:   0f 03 75 78 06 10 03 02  75 7c 03 cb 03 c1 0c 01   |..ux....u|......|
0x804bfec:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bffc:   b0 0a 00 00 9e f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804c00c:   10 00 00 00 c4 0a 00 00  8e f0 ff ff 04 00 00 00   |................|
0x804c01c:   00 00 00 00 48 00 00 00  d8 0a 00 00 88 f0 ff ff   |....H...........|
0x804c02c:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c03c:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c04c:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c05c:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c06c:   10 00 00 00 24 0b 00 00  9c f0 ff ff 02 00 00 00   |....$...........|
0x804c07c:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 14 b1 04 08  19 00 00 00 0c df 04 08   |................|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 54 00 ff ff   |............T...|
0x804e028:   ed 95 fc 00 08 00 04 00  f6 ff 00 00 d7 cf 0b 80   |................|
0x804e038:   b2 cd f7 c4 32 45 ac 3f  ff 00 00 00 3b 85 8b ce   |....2E.?....;...|
0x804e048:   33 6e 00 00 01 00 00 00  01 00 00 00 85 78 55 93   |3n...........xU.|
0x804e058:   c6 00 65 0e 29 49 bb 4b  02 00 07 00 fb ff ff ff   |..e.)I.K........|
0x804e068:   01 ??                                              |.?              |
