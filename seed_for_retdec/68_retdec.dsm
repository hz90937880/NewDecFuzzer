;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:05:33
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 60 df ff ff               	lea eax, [ebx - 0x20a0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 00 df ff ff               	lea eax, [ebx - 0x2100]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 9c aa 04 08               	mov eax, 0x804aa9c
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 68 d0 04 08                  	mov eax, 0x804d068
0x80483a5:   3d 68 d0 04 08                  	cmp eax, 0x804d068
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 68 d0 04 08                  	push 0x804d068
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 68 d0 04 08                  	mov eax, 0x804d068
0x80483e5:   2d 68 d0 04 08                  	sub eax, 0x804d068
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 68 d0 04 08                  	push 0x804d068
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 96 2a 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 82 2a 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 80 df ff ff               	lea edx, [eax - 0x2080]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 55 2a 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 37 2a 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 0f 2a 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 e5 29 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 bc 29 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 79 29 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 37 29 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 df 28 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 8e 28 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 51 28 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 1a 28 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 fb 27 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 d1 27 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 a5 27 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 7a 27 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 31 27 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 e9 26 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 8f 26 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 3c 26 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 fd 25 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 c7 25 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 a5 25 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 57 25 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 1b 25 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 92 24 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 60 24 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 30 24 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 eb 23 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 ac 23 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 7a 23 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 4b 23 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 2d 23 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 05 23 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 e0 22 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 bb 22 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 84 22 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 4f 22 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 fd 21 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 b2 21 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 7b 21 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 4a 21 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 2b 21 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 01 21 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 d9 20 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 b0 20 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 74 20 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 39 20 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 e6 1f 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 9a 1f 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 62 1f 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 33 1f 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 1f 1f 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 08 1f 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 f3 1e 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 dd 1e 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 b6 1e 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 91 1e 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 52 1e 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 19 1e 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 ed 1d 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 c7 1d 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 88 e0 ff ff               	fld dword ptr [eax - 0x1f78]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 88 e0 ff ff               	fld dword ptr [eax - 0x1f78]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 8c e0 ff ff               	fld dword ptr [eax - 0x1f74]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 85 1d 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 88 e0 ff ff               	fld dword ptr [eax - 0x1f78]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 88 e0 ff ff               	fld dword ptr [eax - 0x1f78]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 8c e0 ff ff               	fld dword ptr [eax - 0x1f74]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 43 1d 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 90 e0 ff ff               	fld dword ptr [eax - 0x1f70]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 94 e0 ff ff               	fld dword ptr [eax - 0x1f6c]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 98 e0 ff ff               	fld dword ptr [eax - 0x1f68]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 01 1d 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 9c e0 ff ff               	fld dword ptr [eax - 0x1f64]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 a0 e0 ff ff               	fld dword ptr [eax - 0x1f60]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 a4 e0 ff ff               	fld dword ptr [eax - 0x1f5c]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 89 1c 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 a8 e0 ff ff               	fld qword ptr [eax - 0x1f58]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 a8 e0 ff ff               	fld qword ptr [eax - 0x1f58]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 b0 e0 ff ff               	fld qword ptr [eax - 0x1f50]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 2c 1c 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 a8 e0 ff ff               	fld qword ptr [eax - 0x1f58]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 a8 e0 ff ff               	fld qword ptr [eax - 0x1f58]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 b0 e0 ff ff               	fld qword ptr [eax - 0x1f50]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 cf 1b 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 b8 e0 ff ff               	fld qword ptr [eax - 0x1f48]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 c0 e0 ff ff               	fld qword ptr [eax - 0x1f40]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 c8 e0 ff ff               	fld qword ptr [eax - 0x1f38]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 72 1b 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 d0 e0 ff ff               	fld qword ptr [eax - 0x1f30]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 d8 e0 ff ff               	fld qword ptr [eax - 0x1f28]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 e0 e0 ff ff               	fld qword ptr [eax - 0x1f20]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 e2 1a 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 e8 e0 ff ff               	fld dword ptr [eax - 0x1f18]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 ec e0 ff ff               	fld dword ptr [eax - 0x1f14]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 7e 1a 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 0d 1a 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 ca 19 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 90 df ff ff               	lea eax, [ebx - 0x2070]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 b4 df ff ff               	lea eax, [ebx - 0x204c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80498b9
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   81 ec 90 00 00 00               	sub esp, 0x90
0x8049632:   e8 c1 18 00 00                  	call 0x804aef8 <__x86.get_pc_thunk.dx>
0x8049637:   81 c2 c9 39 00 00               	add edx, 0x39c9
0x804963d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049640:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049643:   8b 4d 0c                        	mov ecx, dword ptr [ebp + 0xc]
0x8049646:   8b 5d 14                        	mov ebx, dword ptr [ebp + 0x14]
0x8049649:   8b 75 18                        	mov esi, dword ptr [ebp + 0x18]
0x804964c:   8b 7d 1c                        	mov edi, dword ptr [ebp + 0x1c]
0x804964f:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x8049652:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049655:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x8049658:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804965b:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x804965e:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049661:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x8049664:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049667:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x804966a:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804966d:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x8049670:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049673:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x8049676:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049679:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x804967c:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804967f:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049682:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x8049688:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x804968b:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x8049691:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049694:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804969a:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x804969d:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x80496a3:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x80496a6:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x80496ac:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x80496af:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x80496b5:   8b 85 84 00 00 00               	mov eax, dword ptr [ebp + 0x84]
0x80496bb:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x80496c1:   0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x80496c5:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x80496c8:   89 c8                           	mov eax, ecx
0x80496ca:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x80496ce:   89 d8                           	mov eax, ebx
0x80496d0:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x80496d4:   89 f0                           	mov eax, esi
0x80496d6:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x80496da:   89 f8                           	mov eax, edi
0x80496dc:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x80496df:   0f b6 45 9c                     	movzx eax, byte ptr [ebp - 0x64]
0x80496e3:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496e6:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x80496ea:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496ee:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x80496f2:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496f5:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x80496f9:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496fd:   0f b6 45 8c                     	movzx eax, byte ptr [ebp - 0x74]
0x8049701:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x8049704:   0f b6 45 88                     	movzx eax, byte ptr [ebp - 0x78]
0x8049708:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x804970b:   0f b7 45 84                     	movzx eax, word ptr [ebp - 0x7c]
0x804970f:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x8049713:   0f b7 45 80                     	movzx eax, word ptr [ebp - 0x80]
0x8049717:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x804971b:   0f b6 85 7c ff ff ff            	movzx eax, byte ptr [ebp - 0x84]
0x8049722:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x8049725:   0f b6 85 78 ff ff ff            	movzx eax, byte ptr [ebp - 0x88]
0x804972c:   88 45 b8                        	mov byte ptr [ebp - 0x48], al
0x804972f:   0f b7 85 74 ff ff ff            	movzx eax, word ptr [ebp - 0x8c]
0x8049736:   66 89 45 b4                     	mov word ptr [ebp - 0x4c], ax
0x804973a:   0f b7 85 70 ff ff ff            	movzx eax, word ptr [ebp - 0x90]
0x8049741:   66 89 45 b0                     	mov word ptr [ebp - 0x50], ax
0x8049745:   0f b7 85 6c ff ff ff            	movzx eax, word ptr [ebp - 0x94]
0x804974c:   66 89 45 ac                     	mov word ptr [ebp - 0x54], ax
0x8049750:   0f b7 85 68 ff ff ff            	movzx eax, word ptr [ebp - 0x98]
0x8049757:   66 89 45 a8                     	mov word ptr [ebp - 0x58], ax
0x804975b:   0f b7 85 64 ff ff ff            	movzx eax, word ptr [ebp - 0x9c]
0x8049762:   66 89 45 a4                     	mov word ptr [ebp - 0x5c], ax
0x8049766:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x804976a:   88 82 24 00 00 00               	mov byte ptr [edx + 0x24], al
0x8049770:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x8049774:   66 89 82 26 00 00 00            	mov word ptr [edx + 0x26], ax
0x804977b:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x804977e:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x8049784:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049788:   66 89 82 a4 04 00 00            	mov word ptr [edx + 0x4a4], ax
0x804978f:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049793:   66 89 82 2c 00 00 00            	mov word ptr [edx + 0x2c], ax
0x804979a:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x804979e:   88 82 2e 00 00 00               	mov byte ptr [edx + 0x2e], al
0x80497a4:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x80497a8:   88 82 2f 00 00 00               	mov byte ptr [edx + 0x2f], al
0x80497ae:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x80497b2:   66 89 82 30 00 00 00            	mov word ptr [edx + 0x30], ax
0x80497b9:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x80497bd:   88 82 32 00 00 00               	mov byte ptr [edx + 0x32], al
0x80497c3:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x80497c7:   66 89 82 34 00 00 00            	mov word ptr [edx + 0x34], ax
0x80497ce:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x80497d2:   88 82 36 00 00 00               	mov byte ptr [edx + 0x36], al
0x80497d8:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497dc:   88 82 37 00 00 00               	mov byte ptr [edx + 0x37], al
0x80497e2:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x80497e5:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x80497eb:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80497ef:   66 89 82 3c 00 00 00            	mov word ptr [edx + 0x3c], ax
0x80497f6:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x80497fa:   66 89 82 3e 00 00 00            	mov word ptr [edx + 0x3e], ax
0x8049801:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049804:   89 82 a8 04 00 00               	mov dword ptr [edx + 0x4a8], eax
0x804980a:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x804980e:   88 82 40 00 00 00               	mov byte ptr [edx + 0x40], al
0x8049814:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x8049817:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x804981d:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x8049821:   88 82 48 00 00 00               	mov byte ptr [edx + 0x48], al
0x8049827:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x804982b:   66 89 82 4a 00 00 00            	mov word ptr [edx + 0x4a], ax
0x8049832:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x8049836:   66 89 82 4c 00 00 00            	mov word ptr [edx + 0x4c], ax
0x804983d:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x8049840:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x8049846:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x8049849:   89 82 ac 04 00 00               	mov dword ptr [edx + 0x4ac], eax
0x804984f:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x8049852:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x8049858:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x804985b:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x8049861:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x8049865:   66 89 82 5c 00 00 00            	mov word ptr [edx + 0x5c], ax
0x804986c:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x8049870:   66 89 82 5e 00 00 00            	mov word ptr [edx + 0x5e], ax
0x8049877:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x804987a:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x8049880:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x8049883:   89 82 b0 04 00 00               	mov dword ptr [edx + 0x4b0], eax
0x8049889:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x804988c:   89 82 b4 04 00 00               	mov dword ptr [edx + 0x4b4], eax
0x8049892:   8b 85 80 00 00 00               	mov eax, dword ptr [ebp + 0x80]
0x8049898:   89 82 b8 04 00 00               	mov dword ptr [edx + 0x4b8], eax
0x804989e:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80498a2:   66 89 82 64 00 00 00            	mov word ptr [edx + 0x64], ax
0x80498a9:   b8 00 00 00 00                  	mov eax, 0
0x80498ae:   81 c4 90 00 00 00               	add esp, 0x90
0x80498b4:   5b                              	pop ebx
0x80498b5:   5e                              	pop esi
0x80498b6:   5f                              	pop edi
0x80498b7:   5d                              	pop ebp
0x80498b8:   c3                              	ret 
; function: func_1 at 0x80498b9 -- 0x804aa9c
0x80498b9:   55                              	push ebp
0x80498ba:   89 e5                           	mov ebp, esp
0x80498bc:   57                              	push edi
0x80498bd:   56                              	push esi
0x80498be:   53                              	push ebx
0x80498bf:   81 ec 38 01 00 00               	sub esp, 0x138
0x80498c5:   e8 2a 16 00 00                  	call 0x804aef4 <__x86.get_pc_thunk.ax>
0x80498ca:   05 36 37 00 00                  	add eax, 0x3736
0x80498cf:   c6 45 8e 9c                     	mov byte ptr [ebp - 0x72], 0x9c
0x80498d3:   66 c7 45 f2 ca 98               	mov word ptr [ebp - 0xe], 0x98ca
0x80498d9:   c7 45 ec 09 00 00 00            	mov dword ptr [ebp - 0x14], 9
0x80498e0:   66 c7 45 ea 00 00               	mov word ptr [ebp - 0x16], 0
0x80498e6:   66 c7 45 e8 fe ff               	mov word ptr [ebp - 0x18], 0xfffe
0x80498ec:   c6 45 e7 f8                     	mov byte ptr [ebp - 0x19], 0xf8
0x80498f0:   c6 45 e6 ff                     	mov byte ptr [ebp - 0x1a], 0xff
0x80498f4:   66 c7 45 e4 88 ae               	mov word ptr [ebp - 0x1c], 0xae88
0x80498fa:   c6 45 8d 05                     	mov byte ptr [ebp - 0x73], 5
0x80498fe:   66 c7 45 e2 01 a5               	mov word ptr [ebp - 0x1e], 0xa501
0x8049904:   c6 45 d9 f7                     	mov byte ptr [ebp - 0x27], 0xf7
0x8049908:   c6 45 8c a1                     	mov byte ptr [ebp - 0x74], 0xa1
0x804990c:   c7 45 dc d2 94 9c f7            	mov dword ptr [ebp - 0x24], 0xf79c94d2
0x8049913:   66 c7 45 da 9c 5f               	mov word ptr [ebp - 0x26], 0x5f9c
0x8049919:   66 c7 45 d6 40 7e               	mov word ptr [ebp - 0x2a], 0x7e40
0x804991f:   c7 45 d0 00 00 00 00            	mov dword ptr [ebp - 0x30], 0
0x8049926:   c6 45 cf 72                     	mov byte ptr [ebp - 0x31], 0x72
0x804992a:   c7 45 88 90 cc 00 52            	mov dword ptr [ebp - 0x78], 0x5200cc90
0x8049931:   c6 45 ce ff                     	mov byte ptr [ebp - 0x32], 0xff
0x8049935:   66 c7 45 86 9e 13               	mov word ptr [ebp - 0x7a], 0x139e
0x804993b:   66 c7 45 cc fe ff               	mov word ptr [ebp - 0x34], 0xfffe
0x8049941:   c7 45 c8 0f 74 45 c1            	mov dword ptr [ebp - 0x38], 0xc145740f
0x8049948:   c7 45 c4 00 00 00 00            	mov dword ptr [ebp - 0x3c], 0
0x804994f:   c7 45 c0 f7 ff ff ff            	mov dword ptr [ebp - 0x40], 0xfffffff7
0x8049956:   c7 45 bc 1d 7d 40 82            	mov dword ptr [ebp - 0x44], 0x82407d1d
0x804995d:   66 c7 45 ba 46 e1               	mov word ptr [ebp - 0x46], 0xe146
0x8049963:   66 c7 45 84 2f a9               	mov word ptr [ebp - 0x7c], 0xa92f
0x8049969:   c7 45 b4 08 00 00 00            	mov dword ptr [ebp - 0x4c], 8
0x8049970:   c7 45 b0 00 00 00 00            	mov dword ptr [ebp - 0x50], 0
0x8049977:   c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0x804997e:   c7 45 a8 00 00 00 00            	mov dword ptr [ebp - 0x58], 0
0x8049985:   66 c7 45 82 63 22               	mov word ptr [ebp - 0x7e], 0x2263
0x804998b:   c7 85 7c ff ff ff 2c 1f 90 08   	mov dword ptr [ebp - 0x84], 0x8901f2c
0x8049995:   c7 45 a4 e6 a4 d1 d2            	mov dword ptr [ebp - 0x5c], 0xd2d1a4e6
0x804999c:   c7 45 a0 ff ff ff ff            	mov dword ptr [ebp - 0x60], 0xffffffff
0x80499a3:   c7 85 78 ff ff ff d3 be 42 56   	mov dword ptr [ebp - 0x88], 0x5642bed3
0x80499ad:   c7 85 74 ff ff ff 03 94 21 ba   	mov dword ptr [ebp - 0x8c], 0xba219403
0x80499b7:   66 c7 85 72 ff ff ff 01 00      	mov word ptr [ebp - 0x8e], 1
0x80499c0:   66 c7 85 70 ff ff ff 90 54      	mov word ptr [ebp - 0x90], 0x5490
0x80499c9:   66 83 7d f2 ff                  	cmp word ptr [ebp - 0xe], -1
0x80499ce:   0f 9c c0                        	setl al
0x80499d1:   0f b6 c0                        	movzx eax, al
0x80499d4:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x80499d7:   b8 01 00 00 00                  	mov eax, 1
0x80499dc:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x80499df:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x80499e2:   3b 45 ec                        	cmp eax, dword ptr [ebp - 0x14]
0x80499e5:   0f 9e c0                        	setle al
0x80499e8:   0f b6 c0                        	movzx eax, al
0x80499eb:   89 c2                           	mov edx, eax
0x80499ed:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x80499f1:   09 d0                           	or eax, edx
0x80499f3:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x80499f7:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x80499fb:   39 85 7c ff ff ff               	cmp dword ptr [ebp - 0x84], eax
0x8049a01:   7c 11                           	jl 0x8049a14 <func_1+0x15b>
0x8049a03:   66 83 6d e8 01                  	sub word ptr [ebp - 0x18], 1
0x8049a08:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049a0c:   88 45 e7                        	mov byte ptr [ebp - 0x19], al
0x8049a0f:   e9 53 0f 00 00                  	jmp 0x804a967 <func_1+0x10ae>
0x8049a14:   66 c7 85 6e ff ff ff ff ff      	mov word ptr [ebp - 0x92], 0xffff
0x8049a1d:   c7 45 9c 9e 27 00 92            	mov dword ptr [ebp - 0x64], 0x9200279e
0x8049a24:   c7 45 98 01 00 00 00            	mov dword ptr [ebp - 0x68], 1
0x8049a2b:   66 c7 45 96 ff ff               	mov word ptr [ebp - 0x6a], 0xffff
0x8049a31:   c7 85 68 ff ff ff d4 5c bd 96   	mov dword ptr [ebp - 0x98], 0x96bd5cd4
0x8049a3b:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049a3f:   8b 55 9c                        	mov edx, dword ptr [ebp - 0x64]
0x8049a42:   b9 18 00 00 00                  	mov ecx, 0x18
0x8049a47:   29 d1                           	sub ecx, edx
0x8049a49:   89 ca                           	mov edx, ecx
0x8049a4b:   66 c1 fa 04                     	sar dx, 4
0x8049a4f:   0f bf ca                        	movsx ecx, dx
0x8049a52:   0f b6 55 8e                     	movzx edx, byte ptr [ebp - 0x72]
0x8049a56:   39 d1                           	cmp ecx, edx
0x8049a58:   0f 9e c2                        	setle dl
0x8049a5b:   88 55 e6                        	mov byte ptr [ebp - 0x1a], dl
0x8049a5e:   80 7d e6 00                     	cmp byte ptr [ebp - 0x1a], 0
0x8049a62:   75 06                           	jne 0x8049a6a <func_1+0x1b1>
0x8049a64:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x8049a68:   74 07                           	je 0x8049a71 <func_1+0x1b8>
0x8049a6a:   ba 01 00 00 00                  	mov edx, 1
0x8049a6f:   eb 05                           	jmp 0x8049a76 <func_1+0x1bd>
0x8049a71:   ba 00 00 00 00                  	mov edx, 0
0x8049a76:   39 c2                           	cmp edx, eax
0x8049a78:   0f 9e c0                        	setle al
0x8049a7b:   0f b6 c0                        	movzx eax, al
0x8049a7e:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x8049a81:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049a85:   8d 50 ff                        	lea edx, [eax - 1]
0x8049a88:   66 89 55 ea                     	mov word ptr [ebp - 0x16], dx
0x8049a8c:   0f b7 c0                        	movzx eax, ax
0x8049a8f:   0f bf 8d 6e ff ff ff            	movsx ecx, word ptr [ebp - 0x92]
0x8049a96:   0f bf 55 f2                     	movsx edx, word ptr [ebp - 0xe]
0x8049a9a:   21 ca                           	and edx, ecx
0x8049a9c:   21 c2                           	and edx, eax
0x8049a9e:   0f bf 85 6e ff ff ff            	movsx eax, word ptr [ebp - 0x92]
0x8049aa5:   39 c2                           	cmp edx, eax
0x8049aa7:   0f 9c c0                        	setl al
0x8049aaa:   0f b6 c0                        	movzx eax, al
0x8049aad:   89 c2                           	mov edx, eax
0x8049aaf:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049ab3:   21 d0                           	and eax, edx
0x8049ab5:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x8049ab9:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x8049abd:   83 c0 01                        	add eax, 1
0x8049ac0:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x8049ac4:   0f bf 95 6e ff ff ff            	movsx edx, word ptr [ebp - 0x92]
0x8049acb:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049ace:   98                              	cwde 
0x8049acf:   0f af c2                        	imul eax, edx
0x8049ad2:   83 c8 01                        	or eax, 1
0x8049ad5:   f7 d0                           	not eax
0x8049ad7:   89 c2                           	mov edx, eax
0x8049ad9:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049adc:   09 d0                           	or eax, edx
0x8049ade:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049ae1:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x8049ae5:   66 83 7d e4 00                  	cmp word ptr [ebp - 0x1c], 0
0x8049aea:   0f 84 54 02 00 00               	je 0x8049d44 <func_1+0x48b>
0x8049af0:   c7 45 90 fa ff ff ff            	mov dword ptr [ebp - 0x70], 0xfffffffa
0x8049af7:   c6 85 63 ff ff ff 0e            	mov byte ptr [ebp - 0x9d], 0xe
0x8049afe:   c7 85 5c ff ff ff f7 ff ff ff   	mov dword ptr [ebp - 0xa4], 0xfffffff7
0x8049b08:   c7 85 58 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xa8], 1
0x8049b12:   66 c7 85 56 ff ff ff ff ff      	mov word ptr [ebp - 0xaa], 0xffff
0x8049b1b:   0f b6 45 d9                     	movzx eax, byte ptr [ebp - 0x27]
0x8049b1f:   83 e8 01                        	sub eax, 1
0x8049b22:   88 45 d9                        	mov byte ptr [ebp - 0x27], al
0x8049b25:   c7 45 9c 00 00 00 00            	mov dword ptr [ebp - 0x64], 0
0x8049b2c:   e9 ca 01 00 00                  	jmp 0x8049cfb <func_1+0x442>
0x8049b31:   66 c7 85 26 ff ff ff 04 00      	mov word ptr [ebp - 0xda], 4
0x8049b3a:   c7 85 20 ff ff ff 21 7a f6 46   	mov dword ptr [ebp - 0xe0], 0x46f67a21
0x8049b44:   c7 85 1c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xe4], 1
0x8049b4e:   c7 85 18 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe8], 0
0x8049b58:   c7 85 14 ff ff ff ff 11 fd 6a   	mov dword ptr [ebp - 0xec], 0x6afd11ff
0x8049b62:   c7 85 10 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xf0], 0
0x8049b6c:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x8049b73:   eb 0d                           	jmp 0x8049b82 <func_1+0x2c9>
0x8049b75:   83 45 dc 01                     	add dword ptr [ebp - 0x24], 1
0x8049b79:   66 83 45 da 01                  	add word ptr [ebp - 0x26], 1
0x8049b7e:   83 6d ec 01                     	sub dword ptr [ebp - 0x14], 1
0x8049b82:   83 7d ec f7                     	cmp dword ptr [ebp - 0x14], -9
0x8049b86:   7c ed                           	jl 0x8049b75 <func_1+0x2bc>
0x8049b88:   66 c7 45 d6 01 00               	mov word ptr [ebp - 0x2a], 1
0x8049b8e:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049b92:   83 45 d0 01                     	add dword ptr [ebp - 0x30], 1
0x8049b96:   c6 45 cf 08                     	mov byte ptr [ebp - 0x31], 8
0x8049b9a:   66 83 7d ea 00                  	cmp word ptr [ebp - 0x16], 0
0x8049b9f:   75 34                           	jne 0x8049bd5 <func_1+0x31c>
0x8049ba1:   66 0f be 45 cf                  	movsx ax, byte ptr [ebp - 0x31]
0x8049ba6:   0f b7 c0                        	movzx eax, ax
0x8049ba9:   25 bd f6 00 00                  	and eax, 0xf6bd
0x8049bae:   89 c2                           	mov edx, eax
0x8049bb0:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049bb3:   0f b7 c0                        	movzx eax, ax
0x8049bb6:   89 c1                           	mov ecx, eax
0x8049bb8:   d3 fa                           	sar edx, cl
0x8049bba:   89 d0                           	mov eax, edx
0x8049bbc:   21 85 20 ff ff ff               	and dword ptr [ebp - 0xe0], eax
0x8049bc2:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x8049bc9:   89 c2                           	mov edx, eax
0x8049bcb:   0f b6 45 e6                     	movzx eax, byte ptr [ebp - 0x1a]
0x8049bcf:   01 d0                           	add eax, edx
0x8049bd1:   3c 02                           	cmp al, 2
0x8049bd3:   74 07                           	je 0x8049bdc <func_1+0x323>
0x8049bd5:   b8 01 00 00 00                  	mov eax, 1
0x8049bda:   eb 05                           	jmp 0x8049be1 <func_1+0x328>
0x8049bdc:   b8 00 00 00 00                  	mov eax, 0
0x8049be1:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049be4:   80 45 ce 01                     	add byte ptr [ebp - 0x32], 1
0x8049be8:   c7 45 a0 a7 e7 50 50            	mov dword ptr [ebp - 0x60], 0x5050e7a7
0x8049bef:   66 83 6d d6 01                  	sub word ptr [ebp - 0x2a], 1
0x8049bf4:   83 7d 90 00                     	cmp dword ptr [ebp - 0x70], 0
0x8049bf8:   7e 07                           	jle 0x8049c01 <func_1+0x348>
0x8049bfa:   b8 17 09 dc 48                  	mov eax, 0x48dc0917
0x8049bff:   eb 05                           	jmp 0x8049c06 <func_1+0x34d>
0x8049c01:   b8 16 09 dc 48                  	mov eax, 0x48dc0916
0x8049c06:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049c09:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x8049c0f:   89 85 58 ff ff ff               	mov dword ptr [ebp - 0xa8], eax
0x8049c15:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x8049c1b:   89 85 10 ff ff ff               	mov dword ptr [ebp - 0xf0], eax
0x8049c21:   c7 45 90 f3 ff ff ff            	mov dword ptr [ebp - 0x70], 0xfffffff3
0x8049c28:   e9 c0 00 00 00                  	jmp 0x8049ced <func_1+0x434>
0x8049c2d:   c6 85 0f ff ff ff 4c            	mov byte ptr [ebp - 0xf1], 0x4c
0x8049c34:   c7 85 08 ff ff ff 7a 1f 62 a2   	mov dword ptr [ebp - 0xf8], 0xa2621f7a
0x8049c3e:   c6 45 e7 fc                     	mov byte ptr [ebp - 0x19], 0xfc
0x8049c42:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049c46:   83 e0 05                        	and eax, 5
0x8049c49:   89 c2                           	mov edx, eax
0x8049c4b:   83 6d c8 01                     	sub dword ptr [ebp - 0x38], 1
0x8049c4f:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049c52:   83 e0 9c                        	and eax, 0xffffff9c
0x8049c55:   88 85 0f ff ff ff               	mov byte ptr [ebp - 0xf1], al
0x8049c5b:   0f b6 85 0f ff ff ff            	movzx eax, byte ptr [ebp - 0xf1]
0x8049c62:   83 f0 fc                        	xor eax, 0xfffffffc
0x8049c65:   09 d0                           	or eax, edx
0x8049c67:   0f be d0                        	movsx edx, al
0x8049c6a:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049c6d:   0f be c0                        	movsx eax, al
0x8049c70:   89 c1                           	mov ecx, eax
0x8049c72:   d3 fa                           	sar edx, cl
0x8049c74:   89 d0                           	mov eax, edx
0x8049c76:   0f b6 d0                        	movzx edx, al
0x8049c79:   8b 85 08 ff ff ff               	mov eax, dword ptr [ebp - 0xf8]
0x8049c7f:   98                              	cwde 
0x8049c80:   0f af c2                        	imul eax, edx
0x8049c83:   85 c0                           	test eax, eax
0x8049c85:   74 2c                           	je 0x8049cb3 <func_1+0x3fa>
0x8049c87:   c7 85 00 ff ff ff 62 dc 39 d6   	mov dword ptr [ebp - 0x100], 0xd639dc62
0x8049c91:   66 83 7d ea 00                  	cmp word ptr [ebp - 0x16], 0
0x8049c96:   0f 95 c0                        	setne al
0x8049c99:   0f b6 c0                        	movzx eax, al
0x8049c9c:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x8049c9f:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x8049ca3:   74 05                           	je 0x8049caa <func_1+0x3f1>
0x8049ca5:   e9 91 fd ff ff                  	jmp 0x8049a3b <func_1+0x182>
0x8049caa:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049cae:   09 45 c0                        	or dword ptr [ebp - 0x40], eax
0x8049cb1:   eb 36                           	jmp 0x8049ce9 <func_1+0x430>
0x8049cb3:   c7 85 04 ff ff ff 04 00 00 00   	mov dword ptr [ebp - 0xfc], 4
0x8049cbd:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049cc0:   0f be d0                        	movsx edx, al
0x8049cc3:   0f be 45 cf                     	movsx eax, byte ptr [ebp - 0x31]
0x8049cc7:   0f af c2                        	imul eax, edx
0x8049cca:   85 c0                           	test eax, eax
0x8049ccc:   75 06                           	jne 0x8049cd4 <func_1+0x41b>
0x8049cce:   83 7d c0 00                     	cmp dword ptr [ebp - 0x40], 0
0x8049cd2:   74 07                           	je 0x8049cdb <func_1+0x422>
0x8049cd4:   b8 01 00 00 00                  	mov eax, 1
0x8049cd9:   eb 05                           	jmp 0x8049ce0 <func_1+0x427>
0x8049cdb:   b8 00 00 00 00                  	mov eax, 0
0x8049ce0:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049ce3:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049ce6:   21 45 bc                        	and dword ptr [ebp - 0x44], eax
0x8049ce9:   83 6d 90 01                     	sub dword ptr [ebp - 0x70], 1
0x8049ced:   83 7d 90 f2                     	cmp dword ptr [ebp - 0x70], -0xe
0x8049cf1:   0f 8c 36 ff ff ff               	jl 0x8049c2d <func_1+0x374>
0x8049cf7:   83 6d 9c 01                     	sub dword ptr [ebp - 0x64], 1
0x8049cfb:   83 7d 9c f6                     	cmp dword ptr [ebp - 0x64], -0xa
0x8049cff:   0f 8c 2c fe ff ff               	jl 0x8049b31 <func_1+0x278>
0x8049d05:   c7 45 a0 10 00 00 00            	mov dword ptr [ebp - 0x60], 0x10
0x8049d0c:   eb 16                           	jmp 0x8049d24 <func_1+0x46b>
0x8049d0e:   66 c7 45 ba 00 00               	mov word ptr [ebp - 0x46], 0
0x8049d14:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x8049d18:   75 12                           	jne 0x8049d2c <func_1+0x473>
0x8049d1a:   80 7d 8d 00                     	cmp byte ptr [ebp - 0x73], 0
0x8049d1e:   75 0f                           	jne 0x8049d2f <func_1+0x476>
0x8049d20:   83 6d a0 01                     	sub dword ptr [ebp - 0x60], 1
0x8049d24:   83 7d a0 0e                     	cmp dword ptr [ebp - 0x60], 0xe
0x8049d28:   7e e4                           	jle 0x8049d0e <func_1+0x455>
0x8049d2a:   eb 04                           	jmp 0x8049d30 <func_1+0x477>
0x8049d2c:   90                              	nop 
0x8049d2d:   eb 01                           	jmp 0x8049d30 <func_1+0x477>
0x8049d2f:   90                              	nop 
0x8049d30:   66 83 a5 56 ff ff ff 01         	and word ptr [ebp - 0xaa], 1
0x8049d38:   90                              	nop 
0x8049d39:   66 c7 45 ea 00 00               	mov word ptr [ebp - 0x16], 0
0x8049d3f:   e9 18 0c 00 00                  	jmp 0x804a95c <func_1+0x10a3>
0x8049d44:   c7 85 64 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x9c], 1
0x8049d4e:   0f b6 55 ce                     	movzx edx, byte ptr [ebp - 0x32]
0x8049d52:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049d55:   f7 d0                           	not eax
0x8049d57:   66 83 7d da 00                  	cmp word ptr [ebp - 0x26], 0
0x8049d5c:   74 0d                           	je 0x8049d6b <func_1+0x4b2>
0x8049d5e:   80 7d e6 00                     	cmp byte ptr [ebp - 0x1a], 0
0x8049d62:   74 07                           	je 0x8049d6b <func_1+0x4b2>
0x8049d64:   b9 01 00 00 00                  	mov ecx, 1
0x8049d69:   eb 05                           	jmp 0x8049d70 <func_1+0x4b7>
0x8049d6b:   b9 00 00 00 00                  	mov ecx, 0
0x8049d70:   21 c8                           	and eax, ecx
0x8049d72:   3d ef 00 00 00                  	cmp eax, 0xef
0x8049d77:   0f 9f c0                        	setg al
0x8049d7a:   0f b6 c0                        	movzx eax, al
0x8049d7d:   39 c2                           	cmp edx, eax
0x8049d7f:   0f 9c c0                        	setl al
0x8049d82:   0f b6 d0                        	movzx edx, al
0x8049d85:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x8049d89:   29 c2                           	sub edx, eax
0x8049d8b:   89 d0                           	mov eax, edx
0x8049d8d:   66 89 45 84                     	mov word ptr [ebp - 0x7c], ax
0x8049d91:   0f b7 45 82                     	movzx eax, word ptr [ebp - 0x7e]
0x8049d95:   0f b7 55 84                     	movzx edx, word ptr [ebp - 0x7c]
0x8049d99:   0f b7 4d ba                     	movzx ecx, word ptr [ebp - 0x46]
0x8049d9d:   0f bf 75 cc                     	movsx esi, word ptr [ebp - 0x34]
0x8049da1:   0f bf 7d 86                     	movsx edi, word ptr [ebp - 0x7a]
0x8049da5:   89 bd f0 fe ff ff               	mov dword ptr [ebp - 0x110], edi
0x8049dab:   0f b6 5d ce                     	movzx ebx, byte ptr [ebp - 0x32]
0x8049daf:   89 9d ec fe ff ff               	mov dword ptr [ebp - 0x114], ebx
0x8049db5:   0f be 7d cf                     	movsx edi, byte ptr [ebp - 0x31]
0x8049db9:   89 bd e8 fe ff ff               	mov dword ptr [ebp - 0x118], edi
0x8049dbf:   0f b7 5d d6                     	movzx ebx, word ptr [ebp - 0x2a]
0x8049dc3:   89 9d e4 fe ff ff               	mov dword ptr [ebp - 0x11c], ebx
0x8049dc9:   0f b7 7d da                     	movzx edi, word ptr [ebp - 0x26]
0x8049dcd:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x8049dd3:   0f be 5d 8c                     	movsx ebx, byte ptr [ebp - 0x74]
0x8049dd7:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x8049ddd:   0f b6 7d d9                     	movzx edi, byte ptr [ebp - 0x27]
0x8049de1:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x8049de7:   0f b7 5d e2                     	movzx ebx, word ptr [ebp - 0x1e]
0x8049deb:   89 9d d4 fe ff ff               	mov dword ptr [ebp - 0x12c], ebx
0x8049df1:   0f be 7d 8d                     	movsx edi, byte ptr [ebp - 0x73]
0x8049df5:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x8049dfb:   0f b7 5d e4                     	movzx ebx, word ptr [ebp - 0x1c]
0x8049dff:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x8049e05:   0f be 7d e6                     	movsx edi, byte ptr [ebp - 0x1a]
0x8049e09:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x8049e0f:   0f be 5d e7                     	movsx ebx, byte ptr [ebp - 0x19]
0x8049e13:   89 9d c4 fe ff ff               	mov dword ptr [ebp - 0x13c], ebx
0x8049e19:   0f b7 7d e8                     	movzx edi, word ptr [ebp - 0x18]
0x8049e1d:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x8049e23:   0f b7 5d ea                     	movzx ebx, word ptr [ebp - 0x16]
0x8049e27:   89 9d bc fe ff ff               	mov dword ptr [ebp - 0x144], ebx
0x8049e2d:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x8049e31:   0f b6 5d 8e                     	movzx ebx, byte ptr [ebp - 0x72]
0x8049e35:   50                              	push eax
0x8049e36:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x8049e39:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x8049e3c:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049e3f:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049e42:   52                              	push edx
0x8049e43:   51                              	push ecx
0x8049e44:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049e47:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049e4a:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049e4d:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049e50:   56                              	push esi
0x8049e51:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x8049e57:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x8049e5d:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049e60:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x8049e66:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049e69:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x8049e6f:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x8049e75:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049e78:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x8049e7e:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x8049e84:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x8049e8a:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x8049e90:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x8049e96:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x8049e9c:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x8049ea2:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x8049ea8:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x8049eae:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049eb1:   57                              	push edi
0x8049eb2:   53                              	push ebx
0x8049eb3:   e8 6e f7 ff ff                  	call 0x8049626 <set_var>
0x8049eb8:   83 ec 80                        	sub esp, -0x80
0x8049ebb:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049ebe:   e9 d1 0b 00 00                  	jmp 0x804aa94 <func_1+0x11db>
0x8049ec3:   c7 85 50 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xb0], 0xffffffff
0x8049ecd:   c7 85 4c ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0xb4], 8
0x8049ed7:   c7 85 48 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xb8], 2
0x8049ee1:   c7 45 b4 07 00 00 00            	mov dword ptr [ebp - 0x4c], 7
0x8049ee8:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x8049eef:   75 06                           	jne 0x8049ef7 <func_1+0x63e>
0x8049ef1:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x8049ef5:   74 07                           	je 0x8049efe <func_1+0x645>
0x8049ef7:   b8 01 00 00 00                  	mov eax, 1
0x8049efc:   eb 05                           	jmp 0x8049f03 <func_1+0x64a>
0x8049efe:   b8 00 00 00 00                  	mov eax, 0
0x8049f03:   0f be d0                        	movsx edx, al
0x8049f06:   0f b7 45 ba                     	movzx eax, word ptr [ebp - 0x46]
0x8049f0a:   39 85 68 ff ff ff               	cmp dword ptr [ebp - 0x98], eax
0x8049f10:   0f 92 c0                        	setb al
0x8049f13:   88 45 e7                        	mov byte ptr [ebp - 0x19], al
0x8049f16:   0f be 45 e7                     	movsx eax, byte ptr [ebp - 0x19]
0x8049f1a:   0f af c2                        	imul eax, edx
0x8049f1d:   85 c0                           	test eax, eax
0x8049f1f:   0f 84 54 02 00 00               	je 0x804a179 <func_1+0x8c0>
0x8049f25:   c6 45 8f b8                     	mov byte ptr [ebp - 0x71], 0xb8
0x8049f29:   c7 85 40 ff ff ff a3 f5 e6 69   	mov dword ptr [ebp - 0xc0], 0x69e6f5a3
0x8049f33:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x8049f3a:   83 7d a0 ff                     	cmp dword ptr [ebp - 0x60], -1
0x8049f3e:   0f 8d 4d 01 00 00               	jge 0x804a091 <func_1+0x7d8>
0x8049f44:   c7 85 4c ff ff ff 7b c3 7f ac   	mov dword ptr [ebp - 0xb4], 0xac7fc37b
0x8049f4e:   80 7d 8f 00                     	cmp byte ptr [ebp - 0x71], 0
0x8049f52:   0f 94 c0                        	sete al
0x8049f55:   0f b6 c0                        	movzx eax, al
0x8049f58:   31 45 b0                        	xor dword ptr [ebp - 0x50], eax
0x8049f5b:   0f b7 45 82                     	movzx eax, word ptr [ebp - 0x7e]
0x8049f5f:   0f b7 55 84                     	movzx edx, word ptr [ebp - 0x7c]
0x8049f63:   0f b7 4d ba                     	movzx ecx, word ptr [ebp - 0x46]
0x8049f67:   0f bf 75 cc                     	movsx esi, word ptr [ebp - 0x34]
0x8049f6b:   0f bf 7d 86                     	movsx edi, word ptr [ebp - 0x7a]
0x8049f6f:   89 bd f0 fe ff ff               	mov dword ptr [ebp - 0x110], edi
0x8049f75:   0f b6 5d ce                     	movzx ebx, byte ptr [ebp - 0x32]
0x8049f79:   89 9d ec fe ff ff               	mov dword ptr [ebp - 0x114], ebx
0x8049f7f:   0f be 7d cf                     	movsx edi, byte ptr [ebp - 0x31]
0x8049f83:   89 bd e8 fe ff ff               	mov dword ptr [ebp - 0x118], edi
0x8049f89:   0f b7 5d d6                     	movzx ebx, word ptr [ebp - 0x2a]
0x8049f8d:   89 9d e4 fe ff ff               	mov dword ptr [ebp - 0x11c], ebx
0x8049f93:   0f b7 7d da                     	movzx edi, word ptr [ebp - 0x26]
0x8049f97:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x8049f9d:   0f be 5d 8c                     	movsx ebx, byte ptr [ebp - 0x74]
0x8049fa1:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x8049fa7:   0f b6 7d d9                     	movzx edi, byte ptr [ebp - 0x27]
0x8049fab:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x8049fb1:   0f b7 5d e2                     	movzx ebx, word ptr [ebp - 0x1e]
0x8049fb5:   89 9d d4 fe ff ff               	mov dword ptr [ebp - 0x12c], ebx
0x8049fbb:   0f be 7d 8d                     	movsx edi, byte ptr [ebp - 0x73]
0x8049fbf:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x8049fc5:   0f b7 5d e4                     	movzx ebx, word ptr [ebp - 0x1c]
0x8049fc9:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x8049fcf:   0f be 7d e6                     	movsx edi, byte ptr [ebp - 0x1a]
0x8049fd3:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x8049fd9:   0f be 5d e7                     	movsx ebx, byte ptr [ebp - 0x19]
0x8049fdd:   89 9d c4 fe ff ff               	mov dword ptr [ebp - 0x13c], ebx
0x8049fe3:   0f b7 7d e8                     	movzx edi, word ptr [ebp - 0x18]
0x8049fe7:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x8049fed:   0f b7 5d ea                     	movzx ebx, word ptr [ebp - 0x16]
0x8049ff1:   89 9d bc fe ff ff               	mov dword ptr [ebp - 0x144], ebx
0x8049ff7:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x8049ffb:   0f b6 5d 8e                     	movzx ebx, byte ptr [ebp - 0x72]
0x8049fff:   50                              	push eax
0x804a000:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a003:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a006:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a009:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a00c:   52                              	push edx
0x804a00d:   51                              	push ecx
0x804a00e:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a011:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a014:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a017:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a01a:   56                              	push esi
0x804a01b:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a021:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a027:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a02a:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a030:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a033:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x804a039:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a03f:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a042:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a048:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a04e:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a054:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a05a:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a060:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a066:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a06c:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a072:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a078:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a07b:   57                              	push edi
0x804a07c:   53                              	push ebx
0x804a07d:   e8 a4 f5 ff ff                  	call 0x8049626 <set_var>
0x804a082:   83 ec 80                        	sub esp, -0x80
0x804a085:   0f b7 85 6e ff ff ff            	movzx eax, word ptr [ebp - 0x92]
0x804a08c:   e9 03 0a 00 00                  	jmp 0x804aa94 <func_1+0x11db>
0x804a091:   66 c7 45 f2 04 00               	mov word ptr [ebp - 0xe], 4
0x804a097:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a09a:   0f bf d0                        	movsx edx, ax
0x804a09d:   0f be 45 e7                     	movsx eax, byte ptr [ebp - 0x19]
0x804a0a1:   39 45 9c                        	cmp dword ptr [ebp - 0x64], eax
0x804a0a4:   7c 10                           	jl 0x804a0b6 <func_1+0x7fd>
0x804a0a6:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x804a0ad:   74 07                           	je 0x804a0b6 <func_1+0x7fd>
0x804a0af:   b8 01 00 00 00                  	mov eax, 1
0x804a0b4:   eb 05                           	jmp 0x804a0bb <func_1+0x802>
0x804a0b6:   b8 00 00 00 00                  	mov eax, 0
0x804a0bb:   98                              	cwde 
0x804a0bc:   0f af d0                        	imul edx, eax
0x804a0bf:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x804a0c3:   39 c2                           	cmp edx, eax
0x804a0c5:   7e 0e                           	jle 0x804a0d5 <func_1+0x81c>
0x804a0c7:   66 83 7d ea 00                  	cmp word ptr [ebp - 0x16], 0
0x804a0cc:   74 07                           	je 0x804a0d5 <func_1+0x81c>
0x804a0ce:   b8 01 00 00 00                  	mov eax, 1
0x804a0d3:   eb 05                           	jmp 0x804a0da <func_1+0x821>
0x804a0d5:   b8 00 00 00 00                  	mov eax, 0
0x804a0da:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x804a0e0:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a0e6:   89 c1                           	mov ecx, eax
0x804a0e8:   0f b6 d1                        	movzx edx, cl
0x804a0eb:   89 d0                           	mov eax, edx
0x804a0ed:   c1 e0 02                        	shl eax, 2
0x804a0f0:   01 d0                           	add eax, edx
0x804a0f2:   8d 1c 85 00 00 00 00            	lea ebx, [eax*4]
0x804a0f9:   01 d8                           	add eax, ebx
0x804a0fb:   c1 e0 02                        	shl eax, 2
0x804a0fe:   01 d0                           	add eax, edx
0x804a100:   66 c1 e8 08                     	shr ax, 8
0x804a104:   29 c1                           	sub ecx, eax
0x804a106:   89 ca                           	mov edx, ecx
0x804a108:   d0 ea                           	shr dl, 1
0x804a10a:   01 d0                           	add eax, edx
0x804a10c:   c0 e8 04                        	shr al, 4
0x804a10f:   0f b6 c0                        	movzx eax, al
0x804a112:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a115:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a118:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x804a11b:   0f 96 c0                        	setbe al
0x804a11e:   0f b6 c0                        	movzx eax, al
0x804a121:   8b 8d 50 ff ff ff               	mov ecx, dword ptr [ebp - 0xb0]
0x804a127:   ba 00 00 00 00                  	mov edx, 0
0x804a12c:   f7 f1                           	div ecx
0x804a12e:   89 d0                           	mov eax, edx
0x804a130:   89 c2                           	mov edx, eax
0x804a132:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a135:   09 d0                           	or eax, edx
0x804a137:   66 c1 e8 0f                     	shr ax, 0xf
0x804a13b:   0f b7 c0                        	movzx eax, ax
0x804a13e:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x804a144:   0f 9e c0                        	setle al
0x804a147:   0f b6 d0                        	movzx edx, al
0x804a14a:   0f be 45 e6                     	movsx eax, byte ptr [ebp - 0x1a]
0x804a14e:   09 d0                           	or eax, edx
0x804a150:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a153:   c6 45 8f 00                     	mov byte ptr [ebp - 0x71], 0
0x804a157:   eb 15                           	jmp 0x804a16e <func_1+0x8b5>
0x804a159:   83 45 a8 01                     	add dword ptr [ebp - 0x58], 1
0x804a15d:   c7 45 b0 2c 72 c4 3e            	mov dword ptr [ebp - 0x50], 0x3ec4722c
0x804a164:   0f b6 45 8f                     	movzx eax, byte ptr [ebp - 0x71]
0x804a168:   83 e8 03                        	sub eax, 3
0x804a16b:   88 45 8f                        	mov byte ptr [ebp - 0x71], al
0x804a16e:   80 7d 8f e5                     	cmp byte ptr [ebp - 0x71], 0xe5
0x804a172:   75 e5                           	jne 0x804a159 <func_1+0x8a0>
0x804a174:   e9 4f 01 00 00                  	jmp 0x804a2c8 <func_1+0xa0f>
0x804a179:   c7 85 44 ff ff ff 44 7b 42 95   	mov dword ptr [ebp - 0xbc], 0x95427b44
0x804a183:   c7 45 b0 00 00 00 00            	mov dword ptr [ebp - 0x50], 0
0x804a18a:   0f b7 45 82                     	movzx eax, word ptr [ebp - 0x7e]
0x804a18e:   83 c0 01                        	add eax, 1
0x804a191:   66 89 45 82                     	mov word ptr [ebp - 0x7e], ax
0x804a195:   0f b7 45 82                     	movzx eax, word ptr [ebp - 0x7e]
0x804a199:   0f b7 55 84                     	movzx edx, word ptr [ebp - 0x7c]
0x804a19d:   0f b7 4d ba                     	movzx ecx, word ptr [ebp - 0x46]
0x804a1a1:   0f bf 75 cc                     	movsx esi, word ptr [ebp - 0x34]
0x804a1a5:   0f bf 7d 86                     	movsx edi, word ptr [ebp - 0x7a]
0x804a1a9:   89 bd f0 fe ff ff               	mov dword ptr [ebp - 0x110], edi
0x804a1af:   0f b6 5d ce                     	movzx ebx, byte ptr [ebp - 0x32]
0x804a1b3:   89 9d ec fe ff ff               	mov dword ptr [ebp - 0x114], ebx
0x804a1b9:   0f be 7d cf                     	movsx edi, byte ptr [ebp - 0x31]
0x804a1bd:   89 bd e8 fe ff ff               	mov dword ptr [ebp - 0x118], edi
0x804a1c3:   0f b7 5d d6                     	movzx ebx, word ptr [ebp - 0x2a]
0x804a1c7:   89 9d e4 fe ff ff               	mov dword ptr [ebp - 0x11c], ebx
0x804a1cd:   0f b7 7d da                     	movzx edi, word ptr [ebp - 0x26]
0x804a1d1:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x804a1d7:   0f be 5d 8c                     	movsx ebx, byte ptr [ebp - 0x74]
0x804a1db:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x804a1e1:   0f b6 7d d9                     	movzx edi, byte ptr [ebp - 0x27]
0x804a1e5:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x804a1eb:   0f b7 5d e2                     	movzx ebx, word ptr [ebp - 0x1e]
0x804a1ef:   89 9d d4 fe ff ff               	mov dword ptr [ebp - 0x12c], ebx
0x804a1f5:   0f be 7d 8d                     	movsx edi, byte ptr [ebp - 0x73]
0x804a1f9:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x804a1ff:   0f b7 5d e4                     	movzx ebx, word ptr [ebp - 0x1c]
0x804a203:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x804a209:   0f be 7d e6                     	movsx edi, byte ptr [ebp - 0x1a]
0x804a20d:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x804a213:   0f be 5d e7                     	movsx ebx, byte ptr [ebp - 0x19]
0x804a217:   89 9d c4 fe ff ff               	mov dword ptr [ebp - 0x13c], ebx
0x804a21d:   0f b7 7d e8                     	movzx edi, word ptr [ebp - 0x18]
0x804a221:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x804a227:   0f b7 5d ea                     	movzx ebx, word ptr [ebp - 0x16]
0x804a22b:   89 9d bc fe ff ff               	mov dword ptr [ebp - 0x144], ebx
0x804a231:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x804a235:   0f b6 5d 8e                     	movzx ebx, byte ptr [ebp - 0x72]
0x804a239:   50                              	push eax
0x804a23a:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a23d:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a240:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a243:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a246:   52                              	push edx
0x804a247:   51                              	push ecx
0x804a248:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a24b:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a24e:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a251:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a254:   56                              	push esi
0x804a255:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a25b:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a261:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a264:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a26a:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a26d:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x804a273:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a279:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a27c:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a282:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a288:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a28e:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a294:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a29a:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a2a0:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a2a6:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a2ac:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a2b2:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a2b5:   57                              	push edi
0x804a2b6:   53                              	push ebx
0x804a2b7:   e8 6a f3 ff ff                  	call 0x8049626 <set_var>
0x804a2bc:   83 ec 80                        	sub esp, -0x80
0x804a2bf:   0f b7 45 86                     	movzx eax, word ptr [ebp - 0x7a]
0x804a2c3:   e9 cc 07 00 00                  	jmp 0x804aa94 <func_1+0x11db>
0x804a2c8:   c7 45 c0 f0 ff ff ff            	mov dword ptr [ebp - 0x40], 0xfffffff0
0x804a2cf:   83 7d c0 28                     	cmp dword ptr [ebp - 0x40], 0x28
0x804a2d3:   0f 86 32 01 00 00               	jbe 0x804a40b <func_1+0xb52>
0x804a2d9:   0f b7 45 82                     	movzx eax, word ptr [ebp - 0x7e]
0x804a2dd:   0f b7 55 84                     	movzx edx, word ptr [ebp - 0x7c]
0x804a2e1:   0f b7 4d ba                     	movzx ecx, word ptr [ebp - 0x46]
0x804a2e5:   0f bf 75 cc                     	movsx esi, word ptr [ebp - 0x34]
0x804a2e9:   0f bf 7d 86                     	movsx edi, word ptr [ebp - 0x7a]
0x804a2ed:   89 bd f0 fe ff ff               	mov dword ptr [ebp - 0x110], edi
0x804a2f3:   0f b6 5d ce                     	movzx ebx, byte ptr [ebp - 0x32]
0x804a2f7:   89 9d ec fe ff ff               	mov dword ptr [ebp - 0x114], ebx
0x804a2fd:   0f be 7d cf                     	movsx edi, byte ptr [ebp - 0x31]
0x804a301:   89 bd e8 fe ff ff               	mov dword ptr [ebp - 0x118], edi
0x804a307:   0f b7 5d d6                     	movzx ebx, word ptr [ebp - 0x2a]
0x804a30b:   89 9d e4 fe ff ff               	mov dword ptr [ebp - 0x11c], ebx
0x804a311:   0f b7 7d da                     	movzx edi, word ptr [ebp - 0x26]
0x804a315:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x804a31b:   0f be 5d 8c                     	movsx ebx, byte ptr [ebp - 0x74]
0x804a31f:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x804a325:   0f b6 7d d9                     	movzx edi, byte ptr [ebp - 0x27]
0x804a329:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x804a32f:   0f b7 5d e2                     	movzx ebx, word ptr [ebp - 0x1e]
0x804a333:   89 9d d4 fe ff ff               	mov dword ptr [ebp - 0x12c], ebx
0x804a339:   0f be 7d 8d                     	movsx edi, byte ptr [ebp - 0x73]
0x804a33d:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x804a343:   0f b7 5d e4                     	movzx ebx, word ptr [ebp - 0x1c]
0x804a347:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x804a34d:   0f be 7d e6                     	movsx edi, byte ptr [ebp - 0x1a]
0x804a351:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x804a357:   0f be 5d e7                     	movsx ebx, byte ptr [ebp - 0x19]
0x804a35b:   89 9d c4 fe ff ff               	mov dword ptr [ebp - 0x13c], ebx
0x804a361:   0f b7 7d e8                     	movzx edi, word ptr [ebp - 0x18]
0x804a365:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x804a36b:   0f b7 5d ea                     	movzx ebx, word ptr [ebp - 0x16]
0x804a36f:   89 9d bc fe ff ff               	mov dword ptr [ebp - 0x144], ebx
0x804a375:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x804a379:   0f b6 5d 8e                     	movzx ebx, byte ptr [ebp - 0x72]
0x804a37d:   50                              	push eax
0x804a37e:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a381:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a384:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a387:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a38a:   52                              	push edx
0x804a38b:   51                              	push ecx
0x804a38c:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a38f:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a392:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a395:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a398:   56                              	push esi
0x804a399:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a39f:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a3a5:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a3a8:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a3ae:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a3b1:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x804a3b7:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a3bd:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a3c0:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a3c6:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a3cc:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a3d2:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a3d8:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a3de:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a3e4:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a3ea:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a3f0:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a3f6:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a3f9:   57                              	push edi
0x804a3fa:   53                              	push ebx
0x804a3fb:   e8 26 f2 ff ff                  	call 0x8049626 <set_var>
0x804a400:   83 ec 80                        	sub esp, -0x80
0x804a403:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a406:   e9 89 06 00 00                  	jmp 0x804aa94 <func_1+0x11db>
0x804a40b:   c6 45 e6 f8                     	mov byte ptr [ebp - 0x1a], 0xf8
0x804a40f:   e9 36 05 00 00                  	jmp 0x804a94a <func_1+0x1091>
0x804a414:   c7 85 3c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xc4], 1
0x804a41e:   c7 85 38 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xc8], 0
0x804a428:   c7 85 34 ff ff ff 19 aa 9f 83   	mov dword ptr [ebp - 0xcc], 0x839faa19
0x804a432:   0f bf 85 6e ff ff ff            	movsx eax, word ptr [ebp - 0x92]
0x804a439:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x804a43f:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x804a445:   ba 87 d9 f8 7b                  	mov edx, 0x7bf8d987
0x804a44a:   f7 e2                           	mul edx
0x804a44c:   89 d0                           	mov eax, edx
0x804a44e:   c1 e8 1d                        	shr eax, 0x1d
0x804a451:   0f b7 d0                        	movzx edx, ax
0x804a454:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a457:   0f b7 c0                        	movzx eax, ax
0x804a45a:   89 c1                           	mov ecx, eax
0x804a45c:   d3 fa                           	sar edx, cl
0x804a45e:   89 d0                           	mov eax, edx
0x804a460:   39 85 74 ff ff ff               	cmp dword ptr [ebp - 0x8c], eax
0x804a466:   0f 97 c0                        	seta al
0x804a469:   0f b6 c0                        	movzx eax, al
0x804a46c:   09 85 38 ff ff ff               	or dword ptr [ebp - 0xc8], eax
0x804a472:   81 bd 38 ff ff ff ad 00 00 00   	cmp dword ptr [ebp - 0xc8], 0xad
0x804a47c:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x804a482:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x804a486:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a48a:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x804a48e:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a491:   0f b6 c0                        	movzx eax, al
0x804a494:   c1 e0 04                        	shl eax, 4
0x804a497:   39 85 3c ff ff ff               	cmp dword ptr [ebp - 0xc4], eax
0x804a49d:   81 bd 74 ff ff ff a9 ae e1 8b   	cmp dword ptr [ebp - 0x8c], 0x8be1aea9
0x804a4a7:   77 07                           	ja 0x804a4b0 <func_1+0xbf7>
0x804a4a9:   ba 03 e1 f7 93                  	mov edx, 0x93f7e103
0x804a4ae:   eb 05                           	jmp 0x804a4b5 <func_1+0xbfc>
0x804a4b0:   ba 04 e1 f7 93                  	mov edx, 0x93f7e104
0x804a4b5:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a4b8:   39 c2                           	cmp edx, eax
0x804a4ba:   0f 93 c0                        	setae al
0x804a4bd:   0f b6 c0                        	movzx eax, al
0x804a4c0:   21 85 34 ff ff ff               	and dword ptr [ebp - 0xcc], eax
0x804a4c6:   80 7d 8c 00                     	cmp byte ptr [ebp - 0x74], 0
0x804a4ca:   0f 84 44 04 00 00               	je 0x804a914 <func_1+0x105b>
0x804a4d0:   c7 85 30 ff ff ff 9c ba 75 d2   	mov dword ptr [ebp - 0xd0], 0xd275ba9c
0x804a4da:   c7 85 2c ff ff ff b9 12 71 38   	mov dword ptr [ebp - 0xd4], 0x387112b9
0x804a4e4:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x804a4ea:   0f b7 d0                        	movzx edx, ax
0x804a4ed:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x804a4f3:   0f b7 c0                        	movzx eax, ax
0x804a4f6:   89 c1                           	mov ecx, eax
0x804a4f8:   d3 fa                           	sar edx, cl
0x804a4fa:   89 d0                           	mov eax, edx
0x804a4fc:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x804a4ff:   0f 94 c0                        	sete al
0x804a502:   89 c2                           	mov edx, eax
0x804a504:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a508:   21 d0                           	and eax, edx
0x804a50a:   0f b6 55 8c                     	movzx edx, byte ptr [ebp - 0x74]
0x804a50e:   0f b6 c0                        	movzx eax, al
0x804a511:   f6 f2                           	div dl
0x804a513:   0f b6 c0                        	movzx eax, al
0x804a516:   05 14 19 00 00                  	add eax, 0x1914
0x804a51b:   3d 28 32 00 00                  	cmp eax, 0x3228
0x804a520:   76 1d                           	jbe 0x804a53f <func_1+0xc86>
0x804a522:   66 83 7d d6 00                  	cmp word ptr [ebp - 0x2a], 0
0x804a527:   0f 85 29 04 00 00               	jne 0x804a956 <func_1+0x109d>
0x804a52d:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x804a534:   0f 84 24 02 00 00               	je 0x804a75e <func_1+0xea5>
0x804a53a:   e9 01 04 00 00                  	jmp 0x804a940 <func_1+0x1087>
0x804a53f:   c7 85 28 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd8], 0
0x804a549:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x804a54f:   0f be d0                        	movsx edx, al
0x804a552:   0f be 4d cf                     	movsx ecx, byte ptr [ebp - 0x31]
0x804a556:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x804a55c:   39 c1                           	cmp ecx, eax
0x804a55e:   0f 95 c0                        	setne al
0x804a561:   0f b6 c0                        	movzx eax, al
0x804a564:   39 45 9c                        	cmp dword ptr [ebp - 0x64], eax
0x804a567:   0f 95 c0                        	setne al
0x804a56a:   0f b6 c8                        	movzx ecx, al
0x804a56d:   0f be 45 e6                     	movsx eax, byte ptr [ebp - 0x1a]
0x804a571:   39 c1                           	cmp ecx, eax
0x804a573:   74 07                           	je 0x804a57c <func_1+0xcc3>
0x804a575:   b8 92 9b 4d a7                  	mov eax, 0xa74d9b92
0x804a57a:   eb 05                           	jmp 0x804a581 <func_1+0xcc8>
0x804a57c:   b8 91 9b 4d a7                  	mov eax, 0xa74d9b91
0x804a581:   3b 85 7c ff ff ff               	cmp eax, dword ptr [ebp - 0x84]
0x804a587:   0f 9c c0                        	setl al
0x804a58a:   88 45 e7                        	mov byte ptr [ebp - 0x19], al
0x804a58d:   0f be 45 e7                     	movsx eax, byte ptr [ebp - 0x19]
0x804a591:   29 c2                           	sub edx, eax
0x804a593:   89 d0                           	mov eax, edx
0x804a595:   3d 91 b7 54 0a                  	cmp eax, 0xa54b791
0x804a59a:   0f 9e c0                        	setle al
0x804a59d:   0f b6 c0                        	movzx eax, al
0x804a5a0:   0b 85 50 ff ff ff               	or eax, dword ptr [ebp - 0xb0]
0x804a5a6:   85 c0                           	test eax, eax
0x804a5a8:   75 04                           	jne 0x804a5ae <func_1+0xcf5>
0x804a5aa:   80 7d 8e 00                     	cmp byte ptr [ebp - 0x72], 0
0x804a5ae:   b8 00 00 00 00                  	mov eax, 0
0x804a5b3:   31 45 b0                        	xor dword ptr [ebp - 0x50], eax
0x804a5b6:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x804a5bc:   f7 d8                           	neg eax
0x804a5be:   98                              	cwde 
0x804a5bf:   8b 95 50 ff ff ff               	mov edx, dword ptr [ebp - 0xb0]
0x804a5c5:   89 d3                           	mov ebx, edx
0x804a5c7:   8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x804a5ca:   33 95 68 ff ff ff               	xor edx, dword ptr [ebp - 0x98]
0x804a5d0:   89 55 b0                        	mov dword ptr [ebp - 0x50], edx
0x804a5d3:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x804a5d7:   75 09                           	jne 0x804a5e2 <func_1+0xd29>
0x804a5d9:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x804a5e0:   74 07                           	je 0x804a5e9 <func_1+0xd30>
0x804a5e2:   ba 01 00 00 00                  	mov edx, 1
0x804a5e7:   eb 05                           	jmp 0x804a5ee <func_1+0xd35>
0x804a5e9:   ba 00 00 00 00                  	mov edx, 0
0x804a5ee:   66 0f be d2                     	movsx dx, dl
0x804a5f2:   8b 4d 9c                        	mov ecx, dword ptr [ebp - 0x64]
0x804a5f5:   01 ca                           	add edx, ecx
0x804a5f7:   89 d1                           	mov ecx, edx
0x804a5f9:   0f b7 55 84                     	movzx edx, word ptr [ebp - 0x7c]
0x804a5fd:   21 ca                           	and edx, ecx
0x804a5ff:   29 d3                           	sub ebx, edx
0x804a601:   89 da                           	mov edx, ebx
0x804a603:   0f bf ca                        	movsx ecx, dx
0x804a606:   99                              	cdq 
0x804a607:   f7 f9                           	idiv ecx
0x804a609:   89 d0                           	mov eax, edx
0x804a60b:   34 a9                           	xor al, 0xa9
0x804a60d:   31 85 2c ff ff ff               	xor dword ptr [ebp - 0xd4], eax
0x804a613:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x804a619:   89 c2                           	mov edx, eax
0x804a61b:   0f b7 85 72 ff ff ff            	movzx eax, word ptr [ebp - 0x8e]
0x804a622:   09 d0                           	or eax, edx
0x804a624:   66 89 85 72 ff ff ff            	mov word ptr [ebp - 0x8e], ax
0x804a62b:   0f b7 45 82                     	movzx eax, word ptr [ebp - 0x7e]
0x804a62f:   0f b7 55 84                     	movzx edx, word ptr [ebp - 0x7c]
0x804a633:   0f b7 4d ba                     	movzx ecx, word ptr [ebp - 0x46]
0x804a637:   0f bf 75 cc                     	movsx esi, word ptr [ebp - 0x34]
0x804a63b:   0f bf 7d 86                     	movsx edi, word ptr [ebp - 0x7a]
0x804a63f:   89 bd f0 fe ff ff               	mov dword ptr [ebp - 0x110], edi
0x804a645:   0f b6 5d ce                     	movzx ebx, byte ptr [ebp - 0x32]
0x804a649:   89 9d ec fe ff ff               	mov dword ptr [ebp - 0x114], ebx
0x804a64f:   0f be 7d cf                     	movsx edi, byte ptr [ebp - 0x31]
0x804a653:   89 bd e8 fe ff ff               	mov dword ptr [ebp - 0x118], edi
0x804a659:   0f b7 5d d6                     	movzx ebx, word ptr [ebp - 0x2a]
0x804a65d:   89 9d e4 fe ff ff               	mov dword ptr [ebp - 0x11c], ebx
0x804a663:   0f b7 7d da                     	movzx edi, word ptr [ebp - 0x26]
0x804a667:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x804a66d:   0f be 5d 8c                     	movsx ebx, byte ptr [ebp - 0x74]
0x804a671:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x804a677:   0f b6 7d d9                     	movzx edi, byte ptr [ebp - 0x27]
0x804a67b:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x804a681:   0f b7 5d e2                     	movzx ebx, word ptr [ebp - 0x1e]
0x804a685:   89 9d d4 fe ff ff               	mov dword ptr [ebp - 0x12c], ebx
0x804a68b:   0f be 7d 8d                     	movsx edi, byte ptr [ebp - 0x73]
0x804a68f:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x804a695:   0f b7 5d e4                     	movzx ebx, word ptr [ebp - 0x1c]
0x804a699:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x804a69f:   0f be 7d e6                     	movsx edi, byte ptr [ebp - 0x1a]
0x804a6a3:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x804a6a9:   0f be 5d e7                     	movsx ebx, byte ptr [ebp - 0x19]
0x804a6ad:   89 9d c4 fe ff ff               	mov dword ptr [ebp - 0x13c], ebx
0x804a6b3:   0f b7 7d e8                     	movzx edi, word ptr [ebp - 0x18]
0x804a6b7:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x804a6bd:   0f b7 5d ea                     	movzx ebx, word ptr [ebp - 0x16]
0x804a6c1:   89 9d bc fe ff ff               	mov dword ptr [ebp - 0x144], ebx
0x804a6c7:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x804a6cb:   0f b6 5d 8e                     	movzx ebx, byte ptr [ebp - 0x72]
0x804a6cf:   50                              	push eax
0x804a6d0:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a6d3:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a6d6:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a6d9:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a6dc:   52                              	push edx
0x804a6dd:   51                              	push ecx
0x804a6de:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a6e1:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a6e4:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a6e7:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a6ea:   56                              	push esi
0x804a6eb:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a6f1:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a6f7:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a6fa:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a700:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a703:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x804a709:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a70f:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a712:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a718:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a71e:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a724:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a72a:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a730:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a736:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a73c:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a742:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a748:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a74b:   57                              	push edi
0x804a74c:   53                              	push ebx
0x804a74d:   e8 d4 ee ff ff                  	call 0x8049626 <set_var>
0x804a752:   83 ec 80                        	sub esp, -0x80
0x804a755:   0f b7 45 86                     	movzx eax, word ptr [ebp - 0x7a]
0x804a759:   e9 36 03 00 00                  	jmp 0x804aa94 <func_1+0x11db>
0x804a75e:   66 83 bd 70 ff ff ff 00         	cmp word ptr [ebp - 0x90], 0
0x804a766:   75 4d                           	jne 0x804a7b5 <func_1+0xefc>
0x804a768:   0f b6 55 8e                     	movzx edx, byte ptr [ebp - 0x72]
0x804a76c:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a76f:   89 85 48 ff ff ff               	mov dword ptr [ebp - 0xb8], eax
0x804a775:   83 75 a4 01                     	xor dword ptr [ebp - 0x5c], 1
0x804a779:   c7 45 a0 01 00 00 00            	mov dword ptr [ebp - 0x60], 1
0x804a780:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a783:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a786:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a789:   0f b7 c0                        	movzx eax, ax
0x804a78c:   83 e8 06                        	sub eax, 6
0x804a78f:   39 c2                           	cmp edx, eax
0x804a791:   0f 9f c0                        	setg al
0x804a794:   0f b6 c0                        	movzx eax, al
0x804a797:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x804a79a:   75 07                           	jne 0x804a7a3 <func_1+0xeea>
0x804a79c:   b8 a7 ff ff ff                  	mov eax, 0xffffffa7
0x804a7a1:   eb 05                           	jmp 0x804a7a8 <func_1+0xeef>
0x804a7a3:   b8 a6 ff ff ff                  	mov eax, 0xffffffa6
0x804a7a8:   8b 55 9c                        	mov edx, dword ptr [ebp - 0x64]
0x804a7ab:   0f be f2                        	movsx esi, dl
0x804a7ae:   99                              	cdq 
0x804a7af:   f7 fe                           	idiv esi
0x804a7b1:   85 c0                           	test eax, eax
0x804a7b3:   74 07                           	je 0x804a7bc <func_1+0xf03>
0x804a7b5:   ba 01 00 00 00                  	mov edx, 1
0x804a7ba:   eb 05                           	jmp 0x804a7c1 <func_1+0xf08>
0x804a7bc:   ba 00 00 00 00                  	mov edx, 0
0x804a7c1:   0f be 45 e7                     	movsx eax, byte ptr [ebp - 0x19]
0x804a7c5:   39 c2                           	cmp edx, eax
0x804a7c7:   0f 9f c0                        	setg al
0x804a7ca:   0f b6 c0                        	movzx eax, al
0x804a7cd:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a7d0:   66 c7 45 96 00 00               	mov word ptr [ebp - 0x6a], 0
0x804a7d6:   66 83 7d 96 2d                  	cmp word ptr [ebp - 0x6a], 0x2d
0x804a7db:   0f 87 5f 01 00 00               	ja 0x804a940 <func_1+0x1087>
0x804a7e1:   0f b7 45 82                     	movzx eax, word ptr [ebp - 0x7e]
0x804a7e5:   0f b7 55 84                     	movzx edx, word ptr [ebp - 0x7c]
0x804a7e9:   0f b7 4d ba                     	movzx ecx, word ptr [ebp - 0x46]
0x804a7ed:   0f bf 75 cc                     	movsx esi, word ptr [ebp - 0x34]
0x804a7f1:   0f bf 7d 86                     	movsx edi, word ptr [ebp - 0x7a]
0x804a7f5:   89 bd f0 fe ff ff               	mov dword ptr [ebp - 0x110], edi
0x804a7fb:   0f b6 5d ce                     	movzx ebx, byte ptr [ebp - 0x32]
0x804a7ff:   89 9d ec fe ff ff               	mov dword ptr [ebp - 0x114], ebx
0x804a805:   0f be 7d cf                     	movsx edi, byte ptr [ebp - 0x31]
0x804a809:   89 bd e8 fe ff ff               	mov dword ptr [ebp - 0x118], edi
0x804a80f:   0f b7 5d d6                     	movzx ebx, word ptr [ebp - 0x2a]
0x804a813:   89 9d e4 fe ff ff               	mov dword ptr [ebp - 0x11c], ebx
0x804a819:   0f b7 7d da                     	movzx edi, word ptr [ebp - 0x26]
0x804a81d:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x804a823:   0f be 5d 8c                     	movsx ebx, byte ptr [ebp - 0x74]
0x804a827:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x804a82d:   0f b6 7d d9                     	movzx edi, byte ptr [ebp - 0x27]
0x804a831:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x804a837:   0f b7 5d e2                     	movzx ebx, word ptr [ebp - 0x1e]
0x804a83b:   89 9d d4 fe ff ff               	mov dword ptr [ebp - 0x12c], ebx
0x804a841:   0f be 7d 8d                     	movsx edi, byte ptr [ebp - 0x73]
0x804a845:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x804a84b:   0f b7 5d e4                     	movzx ebx, word ptr [ebp - 0x1c]
0x804a84f:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x804a855:   0f be 7d e6                     	movsx edi, byte ptr [ebp - 0x1a]
0x804a859:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x804a85f:   0f be 5d e7                     	movsx ebx, byte ptr [ebp - 0x19]
0x804a863:   89 9d c4 fe ff ff               	mov dword ptr [ebp - 0x13c], ebx
0x804a869:   0f b7 7d e8                     	movzx edi, word ptr [ebp - 0x18]
0x804a86d:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x804a873:   0f b7 5d ea                     	movzx ebx, word ptr [ebp - 0x16]
0x804a877:   89 9d bc fe ff ff               	mov dword ptr [ebp - 0x144], ebx
0x804a87d:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x804a881:   0f b6 5d 8e                     	movzx ebx, byte ptr [ebp - 0x72]
0x804a885:   50                              	push eax
0x804a886:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a889:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a88c:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a88f:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a892:   52                              	push edx
0x804a893:   51                              	push ecx
0x804a894:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a897:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a89a:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a89d:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a8a0:   56                              	push esi
0x804a8a1:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a8a7:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a8ad:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a8b0:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a8b6:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a8b9:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x804a8bf:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a8c5:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a8c8:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a8ce:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a8d4:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a8da:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a8e0:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a8e6:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a8ec:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a8f2:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a8f8:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a8fe:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a901:   57                              	push edi
0x804a902:   53                              	push ebx
0x804a903:   e8 1e ed ff ff                  	call 0x8049626 <set_var>
0x804a908:   83 ec 80                        	sub esp, -0x80
0x804a90b:   0f b7 45 82                     	movzx eax, word ptr [ebp - 0x7e]
0x804a90f:   e9 80 01 00 00                  	jmp 0x804aa94 <func_1+0x11db>
0x804a914:   0f b7 45 86                     	movzx eax, word ptr [ebp - 0x7a]
0x804a918:   0f be c0                        	movsx eax, al
0x804a91b:   0f b7 55 96                     	movzx edx, word ptr [ebp - 0x6a]
0x804a91f:   0f be ca                        	movsx ecx, dl
0x804a922:   99                              	cdq 
0x804a923:   f7 f9                           	idiv ecx
0x804a925:   89 d1                           	mov ecx, edx
0x804a927:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a92a:   f7 d0                           	not eax
0x804a92c:   99                              	cdq 
0x804a92d:   f7 bd 3c ff ff ff               	idiv dword ptr [ebp - 0xc4]
0x804a933:   89 d0                           	mov eax, edx
0x804a935:   39 c1                           	cmp ecx, eax
0x804a937:   0f 9f c0                        	setg al
0x804a93a:   0f b6 c0                        	movzx eax, al
0x804a93d:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a940:   0f b6 45 e6                     	movzx eax, byte ptr [ebp - 0x1a]
0x804a944:   83 e8 02                        	sub eax, 2
0x804a947:   88 45 e6                        	mov byte ptr [ebp - 0x1a], al
0x804a94a:   80 7d e6 f5                     	cmp byte ptr [ebp - 0x1a], 0xf5
0x804a94e:   0f 8c c0 fa ff ff               	jl 0x804a414 <func_1+0xb5b>
0x804a954:   eb 01                           	jmp 0x804a957 <func_1+0x109e>
0x804a956:   90                              	nop 
0x804a957:   66 83 45 ea 01                  	add word ptr [ebp - 0x16], 1
0x804a95c:   66 83 7d ea 21                  	cmp word ptr [ebp - 0x16], 0x21
0x804a961:   0f 85 5c f5 ff ff               	jne 0x8049ec3 <func_1+0x60a>
0x804a967:   0f b7 45 82                     	movzx eax, word ptr [ebp - 0x7e]
0x804a96b:   0f b7 55 84                     	movzx edx, word ptr [ebp - 0x7c]
0x804a96f:   0f b7 4d ba                     	movzx ecx, word ptr [ebp - 0x46]
0x804a973:   0f bf 75 cc                     	movsx esi, word ptr [ebp - 0x34]
0x804a977:   0f bf 7d 86                     	movsx edi, word ptr [ebp - 0x7a]
0x804a97b:   89 bd f0 fe ff ff               	mov dword ptr [ebp - 0x110], edi
0x804a981:   0f b6 5d ce                     	movzx ebx, byte ptr [ebp - 0x32]
0x804a985:   89 9d ec fe ff ff               	mov dword ptr [ebp - 0x114], ebx
0x804a98b:   0f be 7d cf                     	movsx edi, byte ptr [ebp - 0x31]
0x804a98f:   89 bd e8 fe ff ff               	mov dword ptr [ebp - 0x118], edi
0x804a995:   0f b7 5d d6                     	movzx ebx, word ptr [ebp - 0x2a]
0x804a999:   89 9d e4 fe ff ff               	mov dword ptr [ebp - 0x11c], ebx
0x804a99f:   0f b7 7d da                     	movzx edi, word ptr [ebp - 0x26]
0x804a9a3:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x804a9a9:   0f be 5d 8c                     	movsx ebx, byte ptr [ebp - 0x74]
0x804a9ad:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x804a9b3:   0f b6 7d d9                     	movzx edi, byte ptr [ebp - 0x27]
0x804a9b7:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x804a9bd:   0f b7 5d e2                     	movzx ebx, word ptr [ebp - 0x1e]
0x804a9c1:   89 9d d4 fe ff ff               	mov dword ptr [ebp - 0x12c], ebx
0x804a9c7:   0f be 7d 8d                     	movsx edi, byte ptr [ebp - 0x73]
0x804a9cb:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x804a9d1:   0f b7 5d e4                     	movzx ebx, word ptr [ebp - 0x1c]
0x804a9d5:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x804a9db:   0f be 7d e6                     	movsx edi, byte ptr [ebp - 0x1a]
0x804a9df:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x804a9e5:   0f be 5d e7                     	movsx ebx, byte ptr [ebp - 0x19]
0x804a9e9:   89 9d c4 fe ff ff               	mov dword ptr [ebp - 0x13c], ebx
0x804a9ef:   0f b7 7d e8                     	movzx edi, word ptr [ebp - 0x18]
0x804a9f3:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x804a9f9:   0f b7 5d ea                     	movzx ebx, word ptr [ebp - 0x16]
0x804a9fd:   89 9d bc fe ff ff               	mov dword ptr [ebp - 0x144], ebx
0x804aa03:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x804aa07:   0f b6 5d 8e                     	movzx ebx, byte ptr [ebp - 0x72]
0x804aa0b:   50                              	push eax
0x804aa0c:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804aa0f:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804aa12:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804aa15:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804aa18:   52                              	push edx
0x804aa19:   51                              	push ecx
0x804aa1a:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804aa1d:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804aa20:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804aa23:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804aa26:   56                              	push esi
0x804aa27:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804aa2d:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804aa33:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804aa36:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804aa3c:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804aa3f:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x804aa45:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804aa4b:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804aa4e:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804aa54:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804aa5a:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804aa60:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804aa66:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804aa6c:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804aa72:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804aa78:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804aa7e:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804aa84:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804aa87:   57                              	push edi
0x804aa88:   53                              	push ebx
0x804aa89:   e8 98 eb ff ff                  	call 0x8049626 <set_var>
0x804aa8e:   83 ec 80                        	sub esp, -0x80
0x804aa91:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804aa94:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804aa97:   5b                              	pop ebx
0x804aa98:   5e                              	pop esi
0x804aa99:   5f                              	pop edi
0x804aa9a:   5d                              	pop ebp
0x804aa9b:   c3                              	ret 
; function: main at 0x804aa9c -- 0x804aef4
0x804aa9c:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804aaa0:   83 e4 f0                        	and esp, 0xfffffff0
0x804aaa3:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804aaa6:   55                              	push ebp
0x804aaa7:   89 e5                           	mov ebp, esp
0x804aaa9:   53                              	push ebx
0x804aaaa:   51                              	push ecx
0x804aaab:   83 ec 10                        	sub esp, 0x10
0x804aaae:   e8 dd d8 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aab3:   81 c3 4d 25 00 00               	add ebx, 0x254d
0x804aab9:   89 c8                           	mov eax, ecx
0x804aabb:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804aac2:   83 38 02                        	cmp dword ptr [eax], 2
0x804aac5:   75 26                           	jne 0x804aaed <main+0x51>
0x804aac7:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804aaca:   83 c0 04                        	add eax, 4
0x804aacd:   8b 00                           	mov eax, dword ptr [eax]
0x804aacf:   83 ec 08                        	sub esp, 8
0x804aad2:   8d 93 d8 df ff ff               	lea edx, [ebx - 0x2028]
0x804aad8:   52                              	push edx
0x804aad9:   50                              	push eax
0x804aada:   e8 21 d8 ff ff                  	call 0x8048300 <strcmp>
0x804aadf:   83 c4 10                        	add esp, 0x10
0x804aae2:   85 c0                           	test eax, eax
0x804aae4:   75 07                           	jne 0x804aaed <main+0x51>
0x804aae6:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804aaed:   e8 64 d9 ff ff                  	call 0x8048456 <platform_main_begin>
0x804aaf2:   e8 74 e9 ff ff                  	call 0x804946b <crc32_gentab>
0x804aaf7:   e8 bd ed ff ff                  	call 0x80498b9 <func_1>
0x804aafc:   0f b6 83 24 00 00 00            	movzx eax, byte ptr [ebx + 0x24]
0x804ab03:   0f b6 c0                        	movzx eax, al
0x804ab06:   83 ec 04                        	sub esp, 4
0x804ab09:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab0c:   8d 93 da df ff ff               	lea edx, [ebx - 0x2026]
0x804ab12:   52                              	push edx
0x804ab13:   50                              	push eax
0x804ab14:   e8 5e ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab19:   83 c4 10                        	add esp, 0x10
0x804ab1c:   0f b7 83 26 00 00 00            	movzx eax, word ptr [ebx + 0x26]
0x804ab23:   98                              	cwde 
0x804ab24:   83 ec 04                        	sub esp, 4
0x804ab27:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab2a:   8d 93 de df ff ff               	lea edx, [ebx - 0x2022]
0x804ab30:   52                              	push edx
0x804ab31:   50                              	push eax
0x804ab32:   e8 40 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab37:   83 c4 10                        	add esp, 0x10
0x804ab3a:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804ab40:   89 c2                           	mov edx, eax
0x804ab42:   83 ec 04                        	sub esp, 4
0x804ab45:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab48:   8d 83 e2 df ff ff               	lea eax, [ebx - 0x201e]
0x804ab4e:   50                              	push eax
0x804ab4f:   52                              	push edx
0x804ab50:   e8 22 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab55:   83 c4 10                        	add esp, 0x10
0x804ab58:   0f b7 83 a4 04 00 00            	movzx eax, word ptr [ebx + 0x4a4]
0x804ab5f:   0f b7 c0                        	movzx eax, ax
0x804ab62:   83 ec 04                        	sub esp, 4
0x804ab65:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab68:   8d 93 e7 df ff ff               	lea edx, [ebx - 0x2019]
0x804ab6e:   52                              	push edx
0x804ab6f:   50                              	push eax
0x804ab70:   e8 02 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab75:   83 c4 10                        	add esp, 0x10
0x804ab78:   0f b7 83 2c 00 00 00            	movzx eax, word ptr [ebx + 0x2c]
0x804ab7f:   0f b7 c0                        	movzx eax, ax
0x804ab82:   83 ec 04                        	sub esp, 4
0x804ab85:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab88:   8d 93 ec df ff ff               	lea edx, [ebx - 0x2014]
0x804ab8e:   52                              	push edx
0x804ab8f:   50                              	push eax
0x804ab90:   e8 e2 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab95:   83 c4 10                        	add esp, 0x10
0x804ab98:   0f b6 83 2e 00 00 00            	movzx eax, byte ptr [ebx + 0x2e]
0x804ab9f:   0f be c0                        	movsx eax, al
0x804aba2:   83 ec 04                        	sub esp, 4
0x804aba5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aba8:   8d 93 f1 df ff ff               	lea edx, [ebx - 0x200f]
0x804abae:   52                              	push edx
0x804abaf:   50                              	push eax
0x804abb0:   e8 c2 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abb5:   83 c4 10                        	add esp, 0x10
0x804abb8:   0f b6 83 2f 00 00 00            	movzx eax, byte ptr [ebx + 0x2f]
0x804abbf:   0f be c0                        	movsx eax, al
0x804abc2:   83 ec 04                        	sub esp, 4
0x804abc5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abc8:   8d 93 f6 df ff ff               	lea edx, [ebx - 0x200a]
0x804abce:   52                              	push edx
0x804abcf:   50                              	push eax
0x804abd0:   e8 a2 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abd5:   83 c4 10                        	add esp, 0x10
0x804abd8:   0f b7 83 30 00 00 00            	movzx eax, word ptr [ebx + 0x30]
0x804abdf:   0f b7 c0                        	movzx eax, ax
0x804abe2:   83 ec 04                        	sub esp, 4
0x804abe5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abe8:   8d 93 fb df ff ff               	lea edx, [ebx - 0x2005]
0x804abee:   52                              	push edx
0x804abef:   50                              	push eax
0x804abf0:   e8 82 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abf5:   83 c4 10                        	add esp, 0x10
0x804abf8:   0f b6 83 32 00 00 00            	movzx eax, byte ptr [ebx + 0x32]
0x804abff:   0f be c0                        	movsx eax, al
0x804ac02:   83 ec 04                        	sub esp, 4
0x804ac05:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac08:   8d 93 00 e0 ff ff               	lea edx, [ebx - 0x2000]
0x804ac0e:   52                              	push edx
0x804ac0f:   50                              	push eax
0x804ac10:   e8 62 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac15:   83 c4 10                        	add esp, 0x10
0x804ac18:   0f b7 83 34 00 00 00            	movzx eax, word ptr [ebx + 0x34]
0x804ac1f:   0f b7 c0                        	movzx eax, ax
0x804ac22:   83 ec 04                        	sub esp, 4
0x804ac25:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac28:   8d 93 05 e0 ff ff               	lea edx, [ebx - 0x1ffb]
0x804ac2e:   52                              	push edx
0x804ac2f:   50                              	push eax
0x804ac30:   e8 42 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac35:   83 c4 10                        	add esp, 0x10
0x804ac38:   0f b6 83 36 00 00 00            	movzx eax, byte ptr [ebx + 0x36]
0x804ac3f:   0f b6 c0                        	movzx eax, al
0x804ac42:   83 ec 04                        	sub esp, 4
0x804ac45:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac48:   8d 93 0a e0 ff ff               	lea edx, [ebx - 0x1ff6]
0x804ac4e:   52                              	push edx
0x804ac4f:   50                              	push eax
0x804ac50:   e8 22 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac55:   83 c4 10                        	add esp, 0x10
0x804ac58:   0f b6 83 37 00 00 00            	movzx eax, byte ptr [ebx + 0x37]
0x804ac5f:   0f be c0                        	movsx eax, al
0x804ac62:   83 ec 04                        	sub esp, 4
0x804ac65:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac68:   8d 93 0f e0 ff ff               	lea edx, [ebx - 0x1ff1]
0x804ac6e:   52                              	push edx
0x804ac6f:   50                              	push eax
0x804ac70:   e8 02 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac75:   83 c4 10                        	add esp, 0x10
0x804ac78:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804ac7e:   83 ec 04                        	sub esp, 4
0x804ac81:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac84:   8d 93 14 e0 ff ff               	lea edx, [ebx - 0x1fec]
0x804ac8a:   52                              	push edx
0x804ac8b:   50                              	push eax
0x804ac8c:   e8 e6 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac91:   83 c4 10                        	add esp, 0x10
0x804ac94:   0f b7 83 3c 00 00 00            	movzx eax, word ptr [ebx + 0x3c]
0x804ac9b:   0f b7 c0                        	movzx eax, ax
0x804ac9e:   83 ec 04                        	sub esp, 4
0x804aca1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aca4:   8d 93 19 e0 ff ff               	lea edx, [ebx - 0x1fe7]
0x804acaa:   52                              	push edx
0x804acab:   50                              	push eax
0x804acac:   e8 c6 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acb1:   83 c4 10                        	add esp, 0x10
0x804acb4:   0f b7 83 3e 00 00 00            	movzx eax, word ptr [ebx + 0x3e]
0x804acbb:   0f b7 c0                        	movzx eax, ax
0x804acbe:   83 ec 04                        	sub esp, 4
0x804acc1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acc4:   8d 93 1e e0 ff ff               	lea edx, [ebx - 0x1fe2]
0x804acca:   52                              	push edx
0x804accb:   50                              	push eax
0x804accc:   e8 a6 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acd1:   83 c4 10                        	add esp, 0x10
0x804acd4:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804acda:   83 ec 04                        	sub esp, 4
0x804acdd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ace0:   8d 93 23 e0 ff ff               	lea edx, [ebx - 0x1fdd]
0x804ace6:   52                              	push edx
0x804ace7:   50                              	push eax
0x804ace8:   e8 8a e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804aced:   83 c4 10                        	add esp, 0x10
0x804acf0:   0f b6 83 40 00 00 00            	movzx eax, byte ptr [ebx + 0x40]
0x804acf7:   0f be c0                        	movsx eax, al
0x804acfa:   83 ec 04                        	sub esp, 4
0x804acfd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad00:   8d 93 28 e0 ff ff               	lea edx, [ebx - 0x1fd8]
0x804ad06:   52                              	push edx
0x804ad07:   50                              	push eax
0x804ad08:   e8 6a e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad0d:   83 c4 10                        	add esp, 0x10
0x804ad10:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804ad16:   83 ec 04                        	sub esp, 4
0x804ad19:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad1c:   8d 93 2d e0 ff ff               	lea edx, [ebx - 0x1fd3]
0x804ad22:   52                              	push edx
0x804ad23:   50                              	push eax
0x804ad24:   e8 4e e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad29:   83 c4 10                        	add esp, 0x10
0x804ad2c:   0f b6 83 48 00 00 00            	movzx eax, byte ptr [ebx + 0x48]
0x804ad33:   0f b6 c0                        	movzx eax, al
0x804ad36:   83 ec 04                        	sub esp, 4
0x804ad39:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad3c:   8d 93 32 e0 ff ff               	lea edx, [ebx - 0x1fce]
0x804ad42:   52                              	push edx
0x804ad43:   50                              	push eax
0x804ad44:   e8 2e e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad49:   83 c4 10                        	add esp, 0x10
0x804ad4c:   0f b7 83 4a 00 00 00            	movzx eax, word ptr [ebx + 0x4a]
0x804ad53:   98                              	cwde 
0x804ad54:   83 ec 04                        	sub esp, 4
0x804ad57:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad5a:   8d 93 37 e0 ff ff               	lea edx, [ebx - 0x1fc9]
0x804ad60:   52                              	push edx
0x804ad61:   50                              	push eax
0x804ad62:   e8 10 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad67:   83 c4 10                        	add esp, 0x10
0x804ad6a:   0f b7 83 4c 00 00 00            	movzx eax, word ptr [ebx + 0x4c]
0x804ad71:   98                              	cwde 
0x804ad72:   83 ec 04                        	sub esp, 4
0x804ad75:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad78:   8d 93 3d e0 ff ff               	lea edx, [ebx - 0x1fc3]
0x804ad7e:   52                              	push edx
0x804ad7f:   50                              	push eax
0x804ad80:   e8 f2 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad85:   83 c4 10                        	add esp, 0x10
0x804ad88:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804ad8e:   83 ec 04                        	sub esp, 4
0x804ad91:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad94:   8d 93 43 e0 ff ff               	lea edx, [ebx - 0x1fbd]
0x804ad9a:   52                              	push edx
0x804ad9b:   50                              	push eax
0x804ad9c:   e8 d6 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ada1:   83 c4 10                        	add esp, 0x10
0x804ada4:   8b 83 ac 04 00 00               	mov eax, dword ptr [ebx + 0x4ac]
0x804adaa:   83 ec 04                        	sub esp, 4
0x804adad:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adb0:   8d 93 49 e0 ff ff               	lea edx, [ebx - 0x1fb7]
0x804adb6:   52                              	push edx
0x804adb7:   50                              	push eax
0x804adb8:   e8 ba e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adbd:   83 c4 10                        	add esp, 0x10
0x804adc0:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804adc6:   83 ec 04                        	sub esp, 4
0x804adc9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adcc:   8d 93 4f e0 ff ff               	lea edx, [ebx - 0x1fb1]
0x804add2:   52                              	push edx
0x804add3:   50                              	push eax
0x804add4:   e8 9e e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804add9:   83 c4 10                        	add esp, 0x10
0x804addc:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804ade2:   89 c2                           	mov edx, eax
0x804ade4:   83 ec 04                        	sub esp, 4
0x804ade7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adea:   8d 83 55 e0 ff ff               	lea eax, [ebx - 0x1fab]
0x804adf0:   50                              	push eax
0x804adf1:   52                              	push edx
0x804adf2:   e8 80 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adf7:   83 c4 10                        	add esp, 0x10
0x804adfa:   0f b7 83 5c 00 00 00            	movzx eax, word ptr [ebx + 0x5c]
0x804ae01:   0f b7 c0                        	movzx eax, ax
0x804ae04:   83 ec 04                        	sub esp, 4
0x804ae07:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae0a:   8d 93 5b e0 ff ff               	lea edx, [ebx - 0x1fa5]
0x804ae10:   52                              	push edx
0x804ae11:   50                              	push eax
0x804ae12:   e8 60 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae17:   83 c4 10                        	add esp, 0x10
0x804ae1a:   0f b7 83 5e 00 00 00            	movzx eax, word ptr [ebx + 0x5e]
0x804ae21:   0f b7 c0                        	movzx eax, ax
0x804ae24:   83 ec 04                        	sub esp, 4
0x804ae27:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae2a:   8d 93 61 e0 ff ff               	lea edx, [ebx - 0x1f9f]
0x804ae30:   52                              	push edx
0x804ae31:   50                              	push eax
0x804ae32:   e8 40 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae37:   83 c4 10                        	add esp, 0x10
0x804ae3a:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804ae40:   89 c2                           	mov edx, eax
0x804ae42:   83 ec 04                        	sub esp, 4
0x804ae45:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae48:   8d 83 67 e0 ff ff               	lea eax, [ebx - 0x1f99]
0x804ae4e:   50                              	push eax
0x804ae4f:   52                              	push edx
0x804ae50:   e8 22 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae55:   83 c4 10                        	add esp, 0x10
0x804ae58:   8b 83 b0 04 00 00               	mov eax, dword ptr [ebx + 0x4b0]
0x804ae5e:   89 c2                           	mov edx, eax
0x804ae60:   83 ec 04                        	sub esp, 4
0x804ae63:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae66:   8d 83 6d e0 ff ff               	lea eax, [ebx - 0x1f93]
0x804ae6c:   50                              	push eax
0x804ae6d:   52                              	push edx
0x804ae6e:   e8 04 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae73:   83 c4 10                        	add esp, 0x10
0x804ae76:   8b 83 b4 04 00 00               	mov eax, dword ptr [ebx + 0x4b4]
0x804ae7c:   83 ec 04                        	sub esp, 4
0x804ae7f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae82:   8d 93 73 e0 ff ff               	lea edx, [ebx - 0x1f8d]
0x804ae88:   52                              	push edx
0x804ae89:   50                              	push eax
0x804ae8a:   e8 e8 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae8f:   83 c4 10                        	add esp, 0x10
0x804ae92:   8b 83 b8 04 00 00               	mov eax, dword ptr [ebx + 0x4b8]
0x804ae98:   83 ec 04                        	sub esp, 4
0x804ae9b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae9e:   8d 93 79 e0 ff ff               	lea edx, [ebx - 0x1f87]
0x804aea4:   52                              	push edx
0x804aea5:   50                              	push eax
0x804aea6:   e8 cc e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aeab:   83 c4 10                        	add esp, 0x10
0x804aeae:   0f b7 83 64 00 00 00            	movzx eax, word ptr [ebx + 0x64]
0x804aeb5:   0f b7 c0                        	movzx eax, ax
0x804aeb8:   83 ec 04                        	sub esp, 4
0x804aebb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aebe:   8d 93 7f e0 ff ff               	lea edx, [ebx - 0x1f81]
0x804aec4:   52                              	push edx
0x804aec5:   50                              	push eax
0x804aec6:   e8 ac e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aecb:   83 c4 10                        	add esp, 0x10
0x804aece:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804aed4:   f7 d0                           	not eax
0x804aed6:   83 ec 08                        	sub esp, 8
0x804aed9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aedc:   50                              	push eax
0x804aedd:   e8 84 d5 ff ff                  	call 0x8048466 <platform_main_end>
0x804aee2:   83 c4 10                        	add esp, 0x10
0x804aee5:   b8 00 00 00 00                  	mov eax, 0
0x804aeea:   8d 65 f8                        	lea esp, [ebp - 8]
0x804aeed:   59                              	pop ecx
0x804aeee:   5b                              	pop ebx
0x804aeef:   5d                              	pop ebp
0x804aef0:   8d 61 fc                        	lea esp, [ecx - 4]
0x804aef3:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804aef4 -- 0x804aef8
0x804aef4:   8b 04 24                        	mov eax, dword ptr [esp]
0x804aef7:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804aef8 -- 0x804aefc
0x804aef8:   8b 14 24                        	mov edx, dword ptr [esp]
0x804aefb:   c3                              	ret 
; data inside code section at 0x804aefc -- 0x804af00
0x804aefc:   66 90 66 90                                        |f.f.            |
; function: __libc_csu_init at 0x804af00 -- 0x804af5d
0x804af00:   55                              	push ebp
0x804af01:   57                              	push edi
0x804af02:   56                              	push esi
0x804af03:   53                              	push ebx
0x804af04:   e8 87 d4 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804af09:   81 c3 f7 20 00 00               	add ebx, 0x20f7
0x804af0f:   83 ec 0c                        	sub esp, 0xc
0x804af12:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804af16:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804af1c:   e8 ab d3 ff ff                  	call 0x80482cc <_init>
0x804af21:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804af27:   29 c6                           	sub esi, eax
0x804af29:   c1 fe 02                        	sar esi, 2
0x804af2c:   85 f6                           	test esi, esi
0x804af2e:   74 25                           	je 0x804af55 <__libc_csu_init+0x55>
0x804af30:   31 ff                           	xor edi, edi
0x804af32:   8d b6 00 00 00 00               	lea esi, [esi]
0x804af38:   83 ec 04                        	sub esp, 4
0x804af3b:   55                              	push ebp
0x804af3c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804af40:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804af44:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804af4b:   83 c7 01                        	add edi, 1
0x804af4e:   83 c4 10                        	add esp, 0x10
0x804af51:   39 fe                           	cmp esi, edi
0x804af53:   75 e3                           	jne 0x804af38 <__libc_csu_init+0x38>
0x804af55:   83 c4 0c                        	add esp, 0xc
0x804af58:   5b                              	pop ebx
0x804af59:   5e                              	pop esi
0x804af5a:   5f                              	pop edi
0x804af5b:   5d                              	pop ebp
0x804af5c:   c3                              	ret 
; data inside code section at 0x804af5d -- 0x804af60
0x804af5d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804af60 -- 0x804af62
0x804af60:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804af64 -- 0x804af78
0x804af64:   53                              	push ebx
0x804af65:   83 ec 08                        	sub esp, 8
0x804af68:   e8 23 d4 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804af6d:   81 c3 93 20 00 00               	add ebx, 0x2093
0x804af73:   83 c4 08                        	add esp, 8
0x804af76:   5b                              	pop ebx
0x804af77:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 7c af 04 08  04 00 00 00 11 00 10 00   |....|...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804af78:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804af88:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804af98:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804afa8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804afb8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804afc8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804afd8:   31 00 67 5f 33 00 67 5f  38 00 67 5f 31 30 00 67   |1.g_3.g_8.g_10.g|
0x804afe8:   5f 31 32 00 67 5f 31 33  00 67 5f 31 36 00 67 5f   |_12.g_13.g_16.g_|
0x804aff8:   32 39 00 67 5f 33 30 00  67 5f 33 31 00 67 5f 33   |29.g_30.g_31.g_3|
0x804b008:   32 00 67 5f 34 31 00 67  5f 34 38 00 67 5f 34 39   |2.g_41.g_48.g_49|
0x804b018:   00 67 5f 35 32 00 67 5f  36 31 00 67 5f 36 33 00   |.g_52.g_61.g_63.|
0x804b028:   67 5f 36 36 00 67 5f 37  39 00 67 5f 38 32 00 67   |g_66.g_79.g_82.g|
0x804b038:   5f 31 31 36 00 67 5f 31  33 32 00 67 5f 31 33 33   |_116.g_132.g_133|
0x804b048:   00 67 5f 31 35 35 00 67  5f 31 35 37 00 67 5f 31   |.g_155.g_157.g_1|
0x804b058:   36 33 00 67 5f 31 37 34  00 67 5f 31 38 38 00 67   |63.g_174.g_188.g|
0x804b068:   5f 31 39 31 00 67 5f 32  31 30 00 67 5f 32 32 30   |_191.g_210.g_220|
0x804b078:   00 67 5f 32 32 34 00 67  5f 32 34 30 00 00 00 00   |.g_224.g_240....|
0x804b088:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804b098:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804b0a8:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804b0b8:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804b0c8:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804b0d8:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804b0e8:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804b0f0:   01 1b 03 3b b8 02 00 00  56 00 00 00 00 d2 ff ff   |...;....V.......|
0x804b100:   e8 02 00 00 40 d2 ff ff  0c 03 00 00 90 d2 ff ff   |....@...........|
0x804b110:   d4 02 00 00 66 d3 ff ff  20 03 00 00 76 d3 ff ff   |....f... ...v...|
0x804b120:   40 03 00 00 a4 d3 ff ff  64 03 00 00 c2 d3 ff ff   |@.......d.......|
0x804b130:   84 03 00 00 ea d3 ff ff  a4 03 00 00 14 d4 ff ff   |................|
0x804b140:   c4 03 00 00 3d d4 ff ff  e4 03 00 00 80 d4 ff ff   |....=...........|
0x804b150:   04 04 00 00 c1 d4 ff ff  24 04 00 00 19 d5 ff ff   |........$.......|
0x804b160:   48 04 00 00 6b d5 ff ff  6c 04 00 00 a8 d5 ff ff   |H...k...l.......|
0x804b170:   8c 04 00 00 df d5 ff ff  ac 04 00 00 fe d5 ff ff   |................|
0x804b180:   cc 04 00 00 28 d6 ff ff  ec 04 00 00 54 d6 ff ff   |....(.......T...|
0x804b190:   0c 05 00 00 7f d6 ff ff  2c 05 00 00 c8 d6 ff ff   |........,.......|
0x804b1a0:   4c 05 00 00 0f d7 ff ff  6c 05 00 00 69 d7 ff ff   |L.......l...i...|
0x804b1b0:   90 05 00 00 bd d7 ff ff  b4 05 00 00 fc d7 ff ff   |................|
0x804b1c0:   d4 05 00 00 35 d8 ff ff  f4 05 00 00 57 d8 ff ff   |....5.......W...|
0x804b1d0:   14 06 00 00 a5 d8 ff ff  34 06 00 00 e1 d8 ff ff   |........4.......|
0x804b1e0:   54 06 00 00 6a d9 ff ff  74 06 00 00 9c d9 ff ff   |T...j...t.......|
0x804b1f0:   94 06 00 00 cc d9 ff ff  b4 06 00 00 11 da ff ff   |................|
0x804b200:   d4 06 00 00 50 da ff ff  f4 06 00 00 82 da ff ff   |....P...........|
0x804b210:   14 07 00 00 ae da ff ff  34 07 00 00 cc da ff ff   |........4.......|
0x804b220:   54 07 00 00 f4 da ff ff  74 07 00 00 19 db ff ff   |T.......t.......|
0x804b230:   94 07 00 00 3e db ff ff  b4 07 00 00 75 db ff ff   |....>.......u...|
0x804b240:   d4 07 00 00 a9 db ff ff  f4 07 00 00 fb db ff ff   |................|
0x804b250:   18 08 00 00 47 dc ff ff  3c 08 00 00 7e dc ff ff   |....G...<...~...|
0x804b260:   5c 08 00 00 af dc ff ff  7c 08 00 00 ce dc ff ff   |\.......|.......|
0x804b270:   9c 08 00 00 f8 dc ff ff  bc 08 00 00 20 dd ff ff   |............ ...|
0x804b280:   dc 08 00 00 49 dd ff ff  fc 08 00 00 85 dd ff ff   |....I...........|
0x804b290:   1c 09 00 00 bf dd ff ff  3c 09 00 00 12 de ff ff   |........<.......|
0x804b2a0:   60 09 00 00 5f de ff ff  84 09 00 00 97 de ff ff   |`..._...........|
0x804b2b0:   a4 09 00 00 c9 de ff ff  c4 09 00 00 dd de ff ff   |................|
0x804b2c0:   e4 09 00 00 f4 de ff ff  04 0a 00 00 09 df ff ff   |................|
0x804b2d0:   24 0a 00 00 1f df ff ff  44 0a 00 00 46 df ff ff   |$.......D...F...|
0x804b2e0:   64 0a 00 00 6b df ff ff  84 0a 00 00 aa df ff ff   |d...k...........|
0x804b2f0:   a4 0a 00 00 e3 df ff ff  c4 0a 00 00 0f e0 ff ff   |................|
0x804b300:   e4 0a 00 00 35 e0 ff ff  04 0b 00 00 77 e0 ff ff   |....5.......w...|
0x804b310:   24 0b 00 00 b9 e0 ff ff  44 0b 00 00 fb e0 ff ff   |$.......D.......|
0x804b320:   64 0b 00 00 70 e1 ff ff  84 0b 00 00 cd e1 ff ff   |d...p...........|
0x804b330:   a4 0b 00 00 2a e2 ff ff  c4 0b 00 00 87 e2 ff ff   |....*...........|
0x804b340:   e4 0b 00 00 17 e3 ff ff  04 0c 00 00 7b e3 ff ff   |............{...|
0x804b350:   24 0c 00 00 eb e3 ff ff  44 0c 00 00 32 e4 ff ff   |$.......D...2...|
0x804b360:   68 0c 00 00 87 e4 ff ff  88 0c 00 00 ce e4 ff ff   |h...............|
0x804b370:   ac 0c 00 00 36 e5 ff ff  d0 0c 00 00 c9 e7 ff ff   |....6...........|
0x804b380:   00 0d 00 00 ac f9 ff ff  30 0d 00 00 04 fe ff ff   |........0.......|
0x804b390:   68 0d 00 00 08 fe ff ff  7c 0d 00 00 10 fe ff ff   |h.......|.......|
0x804b3a0:   90 0d 00 00 70 fe ff ff  dc 0d 00 00 14            |....p........   |
; section: .eh_frame
0x804b3ac:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b3bc:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b3cc:   b4 cf ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b3dc:   30 00 00 00 10 cf ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b3ec:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b3fc:   10 00 00 00 54 00 00 00  2c cf ff ff 08 00 00 00   |....T...,.......|
0x804b40c:   00 00 00 00 1c 00 00 00  68 00 00 00 3e d0 ff ff   |........h...>...|
0x804b41c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b42c:   04 04 00 00 20 00 00 00  88 00 00 00 2e d0 ff ff   |.... ...........|
0x804b43c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b44c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b45c:   38 d0 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |8........A....B.|
0x804b46c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b47c:   36 d0 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |6...(....A....B.|
0x804b48c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b49c:   3e d0 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |>...*....A....B.|
0x804b4ac:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b4bc:   48 d0 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |H...)....A....B.|
0x804b4cc:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b4dc:   51 d0 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |Q...C....A....B.|
0x804b4ec:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b4fc:   74 d0 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |t...A....A....B.|
0x804b50c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b51c:   95 d0 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b52c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b53c:   90 01 00 00 c9 d0 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b54c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b55c:   1c 00 00 00 b4 01 00 00  f7 d0 ff ff 3d 00 00 00   |............=...|
0x804b56c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b57c:   1c 00 00 00 d4 01 00 00  14 d1 ff ff 37 00 00 00   |............7...|
0x804b58c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b59c:   1c 00 00 00 f4 01 00 00  2b d1 ff ff 1f 00 00 00   |........+.......|
0x804b5ac:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b5bc:   1c 00 00 00 14 02 00 00  2a d1 ff ff 2a 00 00 00   |........*...*...|
0x804b5cc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b5dc:   1c 00 00 00 34 02 00 00  34 d1 ff ff 2c 00 00 00   |....4...4...,...|
0x804b5ec:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b5fc:   1c 00 00 00 54 02 00 00  40 d1 ff ff 2b 00 00 00   |....T...@...+...|
0x804b60c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b61c:   1c 00 00 00 74 02 00 00  4b d1 ff ff 49 00 00 00   |....t...K...I...|
0x804b62c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b63c:   1c 00 00 00 94 02 00 00  74 d1 ff ff 47 00 00 00   |........t...G...|
0x804b64c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b65c:   20 00 00 00 b4 02 00 00  9b d1 ff ff 5a 00 00 00   | ...........Z...|
0x804b66c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b67c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 d1 d1 ff ff   |.... ...........|
0x804b68c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b69c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b6ac:   01 d2 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b6bc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b6cc:   20 d2 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   | ...9....A....B.|
0x804b6dc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b6ec:   39 d2 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |9..."....A....B.|
0x804b6fc:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b70c:   3b d2 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |;...N....A....B.|
0x804b71c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b72c:   69 d2 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |i...<....A....B.|
0x804b73c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b74c:   85 d2 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b75c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b76c:   ee d2 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b77c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b78c:   00 d3 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b79c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b7ac:   10 d3 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b7bc:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b7cc:   35 d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |5...?....A....B.|
0x804b7dc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b7ec:   54 d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |T...2....A....B.|
0x804b7fc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b80c:   66 d3 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |f...,....A....B.|
0x804b81c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b82c:   72 d3 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |r........A....B.|
0x804b83c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b84c:   70 d3 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |p...(....A....B.|
0x804b85c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b86c:   78 d3 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |x...%....A....B.|
0x804b87c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b88c:   7d d3 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |}...%....A....B.|
0x804b89c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b8ac:   82 d3 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b8bc:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b8cc:   99 d3 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b8dc:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b8ec:   ad d3 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b8fc:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b90c:   60 05 00 00 db d3 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b91c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b92c:   1c 00 00 00 84 05 00 00  03 d4 ff ff 37 00 00 00   |............7...|
0x804b93c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b94c:   1c 00 00 00 a4 05 00 00  1a d4 ff ff 31 00 00 00   |............1...|
0x804b95c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b96c:   1c 00 00 00 c4 05 00 00  2b d4 ff ff 1f 00 00 00   |........+.......|
0x804b97c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b98c:   1c 00 00 00 e4 05 00 00  2a d4 ff ff 2a 00 00 00   |........*...*...|
0x804b99c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b9ac:   1c 00 00 00 04 06 00 00  34 d4 ff ff 28 00 00 00   |........4...(...|
0x804b9bc:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b9cc:   1c 00 00 00 24 06 00 00  3c d4 ff ff 29 00 00 00   |....$...<...)...|
0x804b9dc:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b9ec:   1c 00 00 00 44 06 00 00  45 d4 ff ff 3c 00 00 00   |....D...E...<...|
0x804b9fc:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804ba0c:   1c 00 00 00 64 06 00 00  61 d4 ff ff 3a 00 00 00   |....d...a...:...|
0x804ba1c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804ba2c:   20 00 00 00 84 06 00 00  7b d4 ff ff 53 00 00 00   | .......{...S...|
0x804ba3c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804ba4c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 aa d4 ff ff   |.... ...........|
0x804ba5c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804ba6c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804ba7c:   d3 d4 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804ba8c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804ba9c:   eb d4 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804baac:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804babc:   fd d4 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bacc:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804badc:   f1 d4 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804baec:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bafc:   e8 d4 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bb0c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bb1c:   dd d4 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bb2c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bb3c:   d3 d4 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804bb4c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bb5c:   da d4 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bb6c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bb7c:   df d4 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804bb8c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bb9c:   fe d4 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bbac:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bbbc:   17 d5 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bbcc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bbdc:   23 d5 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |#...&....A....B.|
0x804bbec:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bbfc:   29 d5 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |)...B....A....B.|
0x804bc0c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bc1c:   4b d5 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |K...B....A....B.|
0x804bc2c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bc3c:   6d d5 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |m...B....A....B.|
0x804bc4c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bc5c:   8f d5 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804bc6c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bc7c:   e4 d5 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bc8c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bc9c:   21 d6 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |!...]....A....B.|
0x804bcac:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bcbc:   5e d6 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |^...]....A....B.|
0x804bccc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bcdc:   9b d6 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bcec:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804bcfc:   0b d7 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804bd0c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bd1c:   4f d7 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |O...p....A....B.|
0x804bd2c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bd3c:   9f d7 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804bd4c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bd5c:   b0 09 00 00 c2 d7 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804bd6c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bd7c:   d0 09 00 00 f7 d7 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804bd8c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bd9c:   20 00 00 00 f4 09 00 00  1a d8 ff ff 68 00 00 00   | ...........h...|
0x804bdac:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bdbc:   0c 04 04 00 2c 00 00 00  18 0a 00 00 5e d8 ff ff   |....,.......^...|
0x804bdcc:   93 02 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804bddc:   86 04 83 05 03 83 02 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bdec:   04 00 00 00 2c 00 00 00  48 0a 00 00 c1 da ff ff   |....,...H.......|
0x804bdfc:   e3 11 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804be0c:   86 04 83 05 03 d3 11 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804be1c:   04 00 00 00 34 00 00 00  78 0a 00 00 74 ec ff ff   |....4...x...t...|
0x804be2c:   58 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |X....D...G...u.D|
0x804be3c:   0f 03 75 78 06 10 03 02  75 7c 03 43 04 c1 0c 01   |..ux....u|.C....|
0x804be4c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804be5c:   b0 0a 00 00 94 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804be6c:   10 00 00 00 c4 0a 00 00  84 f0 ff ff 04 00 00 00   |................|
0x804be7c:   00 00 00 00 48 00 00 00  d8 0a 00 00 78 f0 ff ff   |....H.......x...|
0x804be8c:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804be9c:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804beac:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bebc:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804becc:   10 00 00 00 24 0b 00 00  8c f0 ff ff 02 00 00 00   |....$...........|
0x804bedc:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 64 af 04 08  19 00 00 00 0c cf 04 08   |....d...........|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff 9c 00 ca 98   |................|
0x804d028:   09 00 00 00 fe ff f8 ff  88 ae 05 00 01 a5 f7 a1   |................|
0x804d038:   d2 94 9c f7 9c 5f 40 7e  72 00 00 00 90 cc 00 52   |....._@~r......R|
0x804d048:   ff 00 9e 13 fe ff 00 00  0f 74 45 c1 f7 ff ff ff   |.........tE.....|
0x804d058:   1d 7d 40 82 46 e1 2f a9  08 00 00 00 63 22 ??      |.}@.F./.....c"? |
