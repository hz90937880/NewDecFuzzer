;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:44:16
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 90 d4 ff ff               	lea eax, [ebx - 0x2b70]
0x804835c:   50                              	push eax
0x804835d:   8d 83 30 d4 ff ff               	lea eax, [ebx - 0x2bd0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 2a a1 04 08               	mov eax, 0x804a12a
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 70 d0 04 08                  	mov eax, 0x804d070
0x80483a5:   3d 70 d0 04 08                  	cmp eax, 0x804d070
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 70 d0 04 08                  	push 0x804d070
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 70 d0 04 08                  	mov eax, 0x804d070
0x80483e5:   2d 70 d0 04 08                  	sub eax, 0x804d070
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 70 d0 04 08                  	push 0x804d070
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 c2 1f 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 ae 1f 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 b0 d4 ff ff               	lea edx, [eax - 0x2b50]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 81 1f 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 63 1f 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 3b 1f 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 11 1f 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 e8 1e 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 a5 1e 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 63 1e 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 0b 1e 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 ba 1d 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 7d 1d 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 46 1d 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 27 1d 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 fd 1c 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 d1 1c 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 a6 1c 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 5d 1c 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 15 1c 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 bb 1b 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 68 1b 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 29 1b 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 f3 1a 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 d1 1a 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 83 1a 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 47 1a 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 be 19 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 8c 19 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 5c 19 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 17 19 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 d8 18 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 a6 18 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 77 18 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 59 18 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 31 18 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 0c 18 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 e7 17 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 b0 17 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 7b 17 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 29 17 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 de 16 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 a7 16 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 76 16 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 57 16 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 2d 16 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 05 16 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 dc 15 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 a0 15 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 65 15 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 12 15 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 c6 14 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 8e 14 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 5f 14 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 4b 14 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 34 14 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 1f 14 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 09 14 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 e2 13 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 bd 13 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 7e 13 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 45 13 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 19 13 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 f3 12 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 7c d5 ff ff               	fld dword ptr [eax - 0x2a84]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 7c d5 ff ff               	fld dword ptr [eax - 0x2a84]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 80 d5 ff ff               	fld dword ptr [eax - 0x2a80]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 b1 12 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 7c d5 ff ff               	fld dword ptr [eax - 0x2a84]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 7c d5 ff ff               	fld dword ptr [eax - 0x2a84]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 80 d5 ff ff               	fld dword ptr [eax - 0x2a80]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 6f 12 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 84 d5 ff ff               	fld dword ptr [eax - 0x2a7c]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 88 d5 ff ff               	fld dword ptr [eax - 0x2a78]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 8c d5 ff ff               	fld dword ptr [eax - 0x2a74]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 2d 12 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 90 d5 ff ff               	fld dword ptr [eax - 0x2a70]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 94 d5 ff ff               	fld dword ptr [eax - 0x2a6c]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 98 d5 ff ff               	fld dword ptr [eax - 0x2a68]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 b5 11 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 a0 d5 ff ff               	fld qword ptr [eax - 0x2a60]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 a0 d5 ff ff               	fld qword ptr [eax - 0x2a60]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 a8 d5 ff ff               	fld qword ptr [eax - 0x2a58]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 58 11 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 a0 d5 ff ff               	fld qword ptr [eax - 0x2a60]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 a0 d5 ff ff               	fld qword ptr [eax - 0x2a60]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 a8 d5 ff ff               	fld qword ptr [eax - 0x2a58]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 fb 10 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 b0 d5 ff ff               	fld qword ptr [eax - 0x2a50]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 b8 d5 ff ff               	fld qword ptr [eax - 0x2a48]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 c0 d5 ff ff               	fld qword ptr [eax - 0x2a40]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 9e 10 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 c8 d5 ff ff               	fld qword ptr [eax - 0x2a38]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 d0 d5 ff ff               	fld qword ptr [eax - 0x2a30]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 d8 d5 ff ff               	fld qword ptr [eax - 0x2a28]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 0e 10 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 e0 d5 ff ff               	fld dword ptr [eax - 0x2a20]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 e4 d5 ff ff               	fld dword ptr [eax - 0x2a1c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 aa 0f 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 39 0f 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 f6 0e 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 c0 d4 ff ff               	lea eax, [ebx - 0x2b40]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 e4 d4 ff ff               	lea eax, [ebx - 0x2b1c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x8049742
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 1c                        	sub esp, 0x1c
0x804962f:   e8 ec 0d 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8049634:   05 cc 39 00 00                  	add eax, 0x39cc
0x8049639:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x804963c:   8b 4d 14                        	mov ecx, dword ptr [ebp + 0x14]
0x804963f:   89 4d d8                        	mov dword ptr [ebp - 0x28], ecx
0x8049642:   8b 7d 1c                        	mov edi, dword ptr [ebp + 0x1c]
0x8049645:   8b 75 2c                        	mov esi, dword ptr [ebp + 0x2c]
0x8049648:   8b 5d 34                        	mov ebx, dword ptr [ebp + 0x34]
0x804964b:   8b 4d 58                        	mov ecx, dword ptr [ebp + 0x58]
0x804964e:   88 55 f0                        	mov byte ptr [ebp - 0x10], dl
0x8049651:   0f b7 55 d8                     	movzx edx, word ptr [ebp - 0x28]
0x8049655:   66 89 55 ec                     	mov word ptr [ebp - 0x14], dx
0x8049659:   89 fa                           	mov edx, edi
0x804965b:   88 55 e8                        	mov byte ptr [ebp - 0x18], dl
0x804965e:   89 f2                           	mov edx, esi
0x8049660:   66 89 55 e4                     	mov word ptr [ebp - 0x1c], dx
0x8049664:   89 da                           	mov edx, ebx
0x8049666:   88 55 e0                        	mov byte ptr [ebp - 0x20], dl
0x8049669:   89 ca                           	mov edx, ecx
0x804966b:   66 89 55 dc                     	mov word ptr [ebp - 0x24], dx
0x804966f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049672:   89 90 24 00 00 00               	mov dword ptr [eax + 0x24], edx
0x8049678:   0f b6 55 f0                     	movzx edx, byte ptr [ebp - 0x10]
0x804967c:   88 90 28 00 00 00               	mov byte ptr [eax + 0x28], dl
0x8049682:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049685:   89 90 2c 00 00 00               	mov dword ptr [eax + 0x2c], edx
0x804968b:   0f b7 55 ec                     	movzx edx, word ptr [ebp - 0x14]
0x804968f:   66 89 90 30 00 00 00            	mov word ptr [eax + 0x30], dx
0x8049696:   8b 55 18                        	mov edx, dword ptr [ebp + 0x18]
0x8049699:   89 90 34 00 00 00               	mov dword ptr [eax + 0x34], edx
0x804969f:   0f b6 55 e8                     	movzx edx, byte ptr [ebp - 0x18]
0x80496a3:   88 90 38 00 00 00               	mov byte ptr [eax + 0x38], dl
0x80496a9:   8b 55 20                        	mov edx, dword ptr [ebp + 0x20]
0x80496ac:   89 90 3c 00 00 00               	mov dword ptr [eax + 0x3c], edx
0x80496b2:   8b 55 24                        	mov edx, dword ptr [ebp + 0x24]
0x80496b5:   89 90 40 00 00 00               	mov dword ptr [eax + 0x40], edx
0x80496bb:   8b 55 28                        	mov edx, dword ptr [ebp + 0x28]
0x80496be:   89 90 a4 04 00 00               	mov dword ptr [eax + 0x4a4], edx
0x80496c4:   0f b7 55 e4                     	movzx edx, word ptr [ebp - 0x1c]
0x80496c8:   66 89 90 44 00 00 00            	mov word ptr [eax + 0x44], dx
0x80496cf:   8b 55 30                        	mov edx, dword ptr [ebp + 0x30]
0x80496d2:   89 90 48 00 00 00               	mov dword ptr [eax + 0x48], edx
0x80496d8:   0f b6 55 e0                     	movzx edx, byte ptr [ebp - 0x20]
0x80496dc:   88 90 4c 00 00 00               	mov byte ptr [eax + 0x4c], dl
0x80496e2:   8b 55 38                        	mov edx, dword ptr [ebp + 0x38]
0x80496e5:   89 90 50 00 00 00               	mov dword ptr [eax + 0x50], edx
0x80496eb:   8b 55 3c                        	mov edx, dword ptr [ebp + 0x3c]
0x80496ee:   89 90 54 00 00 00               	mov dword ptr [eax + 0x54], edx
0x80496f4:   8b 55 40                        	mov edx, dword ptr [ebp + 0x40]
0x80496f7:   89 90 58 00 00 00               	mov dword ptr [eax + 0x58], edx
0x80496fd:   8b 55 44                        	mov edx, dword ptr [ebp + 0x44]
0x8049700:   89 90 5c 00 00 00               	mov dword ptr [eax + 0x5c], edx
0x8049706:   8b 55 48                        	mov edx, dword ptr [ebp + 0x48]
0x8049709:   89 90 60 00 00 00               	mov dword ptr [eax + 0x60], edx
0x804970f:   8b 55 4c                        	mov edx, dword ptr [ebp + 0x4c]
0x8049712:   89 90 64 00 00 00               	mov dword ptr [eax + 0x64], edx
0x8049718:   8b 55 50                        	mov edx, dword ptr [ebp + 0x50]
0x804971b:   89 90 68 00 00 00               	mov dword ptr [eax + 0x68], edx
0x8049721:   8b 55 54                        	mov edx, dword ptr [ebp + 0x54]
0x8049724:   89 90 a8 04 00 00               	mov dword ptr [eax + 0x4a8], edx
0x804972a:   0f b7 55 dc                     	movzx edx, word ptr [ebp - 0x24]
0x804972e:   66 89 90 6c 00 00 00            	mov word ptr [eax + 0x6c], dx
0x8049735:   b8 00 00 00 00                  	mov eax, 0
0x804973a:   83 c4 1c                        	add esp, 0x1c
0x804973d:   5b                              	pop ebx
0x804973e:   5e                              	pop esi
0x804973f:   5f                              	pop edi
0x8049740:   5d                              	pop ebp
0x8049741:   c3                              	ret 
; function: func_1 at 0x8049742 -- 0x804a12a
0x8049742:   55                              	push ebp
0x8049743:   89 e5                           	mov ebp, esp
0x8049745:   57                              	push edi
0x8049746:   56                              	push esi
0x8049747:   53                              	push ebx
0x8049748:   81 ec f0 00 00 00               	sub esp, 0xf0
0x804974e:   e8 cd 0c 00 00                  	call 0x804a420 <__x86.get_pc_thunk.ax>
0x8049753:   05 ad 38 00 00                  	add eax, 0x38ad
0x8049758:   c7 45 90 ff ff ff ff            	mov dword ptr [ebp - 0x70], 0xffffffff
0x804975f:   c6 45 f3 02                     	mov byte ptr [ebp - 0xd], 2
0x8049763:   c7 45 ec 76 95 5a 98            	mov dword ptr [ebp - 0x14], 0x985a9576
0x804976a:   66 c7 45 ea 05 00               	mov word ptr [ebp - 0x16], 5
0x8049770:   c7 45 e4 90 b0 cc 94            	mov dword ptr [ebp - 0x1c], 0x94ccb090
0x8049777:   c6 45 e3 83                     	mov byte ptr [ebp - 0x1d], 0x83
0x804977b:   c7 45 dc 01 00 00 00            	mov dword ptr [ebp - 0x24], 1
0x8049782:   c7 45 8c a3 bd be b3            	mov dword ptr [ebp - 0x74], 0xb3bebda3
0x8049789:   c7 45 88 00 00 00 00            	mov dword ptr [ebp - 0x78], 0
0x8049790:   66 c7 45 da b7 cf               	mov word ptr [ebp - 0x26], 0xcfb7
0x8049796:   c7 45 d4 ff ff ff ff            	mov dword ptr [ebp - 0x2c], 0xffffffff
0x804979d:   c6 45 d3 c0                     	mov byte ptr [ebp - 0x2d], 0xc0
0x80497a1:   c7 45 cc 01 00 00 00            	mov dword ptr [ebp - 0x34], 1
0x80497a8:   c7 45 c8 94 67 29 4f            	mov dword ptr [ebp - 0x38], 0x4f296794
0x80497af:   c7 45 84 fe ff ff ff            	mov dword ptr [ebp - 0x7c], 0xfffffffe
0x80497b6:   c7 45 80 ff ff ff ff            	mov dword ptr [ebp - 0x80], 0xffffffff
0x80497bd:   c7 45 c4 fa ff ff ff            	mov dword ptr [ebp - 0x3c], 0xfffffffa
0x80497c4:   c7 45 c0 01 00 00 00            	mov dword ptr [ebp - 0x40], 1
0x80497cb:   c7 45 bc fe ff ff ff            	mov dword ptr [ebp - 0x44], 0xfffffffe
0x80497d2:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x80497d9:   66 c7 45 b6 4d a2               	mov word ptr [ebp - 0x4a], 0xa24d
0x80497df:   c7 45 b0 02 a0 7c e1            	mov dword ptr [ebp - 0x50], 0xe17ca002
0x80497e6:   c6 85 7f ff ff ff 96            	mov byte ptr [ebp - 0x81], 0x96
0x80497ed:   c7 85 78 ff ff ff 02 78 d9 70   	mov dword ptr [ebp - 0x88], 0x70d97802
0x80497f7:   c7 85 74 ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0x8c], 8
0x8049801:   c7 45 ac 05 00 00 00            	mov dword ptr [ebp - 0x54], 5
0x8049808:   c7 85 70 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x90], 0xffffffff
0x8049812:   66 c7 85 6e ff ff ff f7 ff      	mov word ptr [ebp - 0x92], 0xfff7
0x804981b:   c6 85 6d ff ff ff 01            	mov byte ptr [ebp - 0x93], 1
0x8049822:   83 45 90 01                     	add dword ptr [ebp - 0x70], 1
0x8049826:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049829:   66 c1 e8 0b                     	shr ax, 0xb
0x804982d:   20 45 f3                        	and byte ptr [ebp - 0xd], al
0x8049830:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x8049834:   74 3f                           	je 0x8049875 <func_1+0x133>
0x8049836:   c7 85 08 ff ff ff 91 cc d2 6d   	mov dword ptr [ebp - 0xf8], 0x6dd2cc91
0x8049840:   c7 45 ec 09 00 00 00            	mov dword ptr [ebp - 0x14], 9
0x8049847:   66 c7 45 ea 04 00               	mov word ptr [ebp - 0x16], 4
0x804984d:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x8049851:   75 09                           	jne 0x804985c <func_1+0x11a>
0x8049853:   83 bd 08 ff ff ff 00            	cmp dword ptr [ebp - 0xf8], 0
0x804985a:   74 07                           	je 0x8049863 <func_1+0x121>
0x804985c:   b8 01 00 00 00                  	mov eax, 1
0x8049861:   eb 05                           	jmp 0x8049868 <func_1+0x126>
0x8049863:   b8 00 00 00 00                  	mov eax, 0
0x8049868:   35 5a db 00 00                  	xor eax, 0xdb5a
0x804986d:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049870:   e9 54 08 00 00                  	jmp 0x804a0c9 <func_1+0x987>
0x8049875:   c6 45 ab bc                     	mov byte ptr [ebp - 0x55], 0xbc
0x8049879:   c7 45 a4 8b 35 03 f3            	mov dword ptr [ebp - 0x5c], 0xf303358b
0x8049880:   66 c7 85 6a ff ff ff 03 00      	mov word ptr [ebp - 0x96], 3
0x8049889:   c7 85 64 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x9c], 1
0x8049893:   c6 85 63 ff ff ff ff            	mov byte ptr [ebp - 0x9d], 0xff
0x804989a:   c6 85 62 ff ff ff fe            	mov byte ptr [ebp - 0x9e], 0xfe
0x80498a1:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x80498a5:   75 0a                           	jne 0x80498b1 <func_1+0x16f>
0x80498a7:   80 7d ab 00                     	cmp byte ptr [ebp - 0x55], 0
0x80498ab:   0f 84 95 00 00 00               	je 0x8049946 <func_1+0x204>
0x80498b1:   c7 85 0c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xf4], 0xffffffff
0x80498bb:   0f be 95 7f ff ff ff            	movsx edx, byte ptr [ebp - 0x81]
0x80498c2:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x80498c8:   3b 45 b0                        	cmp eax, dword ptr [ebp - 0x50]
0x80498cb:   0f 96 c0                        	setbe al
0x80498ce:   0f b6 c0                        	movzx eax, al
0x80498d1:   01 c2                           	add edx, eax
0x80498d3:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x80498d6:   3b 85 78 ff ff ff               	cmp eax, dword ptr [ebp - 0x88]
0x80498dc:   0f 92 c0                        	setb al
0x80498df:   0f b6 c0                        	movzx eax, al
0x80498e2:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x80498e5:   0f 96 c0                        	setbe al
0x80498e8:   0f b6 c0                        	movzx eax, al
0x80498eb:   39 c2                           	cmp edx, eax
0x80498ed:   0f 9c c0                        	setl al
0x80498f0:   0f b6 c0                        	movzx eax, al
0x80498f3:   0f b6 55 f3                     	movzx edx, byte ptr [ebp - 0xd]
0x80498f7:   0f af c2                        	imul eax, edx
0x80498fa:   88 45 e3                        	mov byte ptr [ebp - 0x1d], al
0x80498fd:   0f be 55 e3                     	movsx edx, byte ptr [ebp - 0x1d]
0x8049901:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x8049905:   31 d0                           	xor eax, edx
0x8049907:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804990a:   83 a5 74 ff ff ff 01            	and dword ptr [ebp - 0x8c], 1
0x8049911:   0f be 45 e3                     	movsx eax, byte ptr [ebp - 0x1d]
0x8049915:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x804991b:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x8049921:   83 c0 1f                        	add eax, 0x1f
0x8049924:   39 85 78 ff ff ff               	cmp dword ptr [ebp - 0x88], eax
0x804992a:   0f 97 c0                        	seta al
0x804992d:   0f b6 c0                        	movzx eax, al
0x8049930:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049933:   c7 45 dc 01 00 00 00            	mov dword ptr [ebp - 0x24], 1
0x804993a:   0f be 45 e3                     	movsx eax, byte ptr [ebp - 0x1d]
0x804993e:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049941:   e9 67 07 00 00                  	jmp 0x804a0ad <func_1+0x96b>
0x8049946:   c7 85 5c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xa4], 1
0x8049950:   c7 85 58 ff ff ff 20 b4 00 fb   	mov dword ptr [ebp - 0xa8], 0xfb00b420
0x804995a:   66 c7 45 a2 f3 66               	mov word ptr [ebp - 0x5e], 0x66f3
0x8049960:   c7 85 54 ff ff ff 03 00 00 00   	mov dword ptr [ebp - 0xac], 3
0x804996a:   c7 85 50 ff ff ff 43 ef b1 83   	mov dword ptr [ebp - 0xb0], 0x83b1ef43
0x8049974:   c6 85 4f ff ff ff 00            	mov byte ptr [ebp - 0xb1], 0
0x804997b:   83 7d 90 00                     	cmp dword ptr [ebp - 0x70], 0
0x804997f:   0f 84 5a 06 00 00               	je 0x8049fdf <func_1+0x89d>
0x8049985:   c6 85 47 ff ff ff 00            	mov byte ptr [ebp - 0xb9], 0
0x804998c:   c7 45 9c 00 00 00 00            	mov dword ptr [ebp - 0x64], 0
0x8049993:   c7 45 98 00 00 00 00            	mov dword ptr [ebp - 0x68], 0
0x804999a:   c7 85 40 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xc0], 0xffffffff
0x80499a4:   c7 45 b0 eb ff ff ff            	mov dword ptr [ebp - 0x50], 0xffffffeb
0x80499ab:   e9 20 02 00 00                  	jmp 0x8049bd0 <func_1+0x48e>
0x80499b0:   c7 85 20 ff ff ff d5 03 31 99   	mov dword ptr [ebp - 0xe0], 0x993103d5
0x80499ba:   66 c7 85 1e ff ff ff ff ff      	mov word ptr [ebp - 0xe2], 0xffff
0x80499c3:   83 45 9c 01                     	add dword ptr [ebp - 0x64], 1
0x80499c7:   c7 45 ac 01 00 00 00            	mov dword ptr [ebp - 0x54], 1
0x80499ce:   83 bd 5c ff ff ff 00            	cmp dword ptr [ebp - 0xa4], 0
0x80499d5:   0f 8f b3 00 00 00               	jg 0x8049a8e <func_1+0x34c>
0x80499db:   c6 85 17 ff ff ff 6f            	mov byte ptr [ebp - 0xe9], 0x6f
0x80499e2:   c7 85 10 ff ff ff 66 b7 6e 80   	mov dword ptr [ebp - 0xf0], 0x806eb766
0x80499ec:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x80499f0:   30 85 17 ff ff ff               	xor byte ptr [ebp - 0xe9], al
0x80499f6:   0f be 85 17 ff ff ff            	movsx eax, byte ptr [ebp - 0xe9]
0x80499fd:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049a00:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049a03:   83 e8 01                        	sub eax, 1
0x8049a06:   0f b6 c0                        	movzx eax, al
0x8049a09:   c1 e0 05                        	shl eax, 5
0x8049a0c:   3d 1e f7 00 00                  	cmp eax, 0xf71e
0x8049a11:   66 c7 45 da ff ff               	mov word ptr [ebp - 0x26], 0xffff
0x8049a17:   b8 01 00 00 00                  	mov eax, 1
0x8049a1c:   21 85 10 ff ff ff               	and dword ptr [ebp - 0xf0], eax
0x8049a22:   c6 45 e3 01                     	mov byte ptr [ebp - 0x1d], 1
0x8049a26:   ba 9a b6 1c eb                  	mov edx, 0xeb1cb69a
0x8049a2b:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049a2e:   31 d0                           	xor eax, edx
0x8049a30:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049a33:   0f b7 7d b6                     	movzx edi, word ptr [ebp - 0x4a]
0x8049a37:   0f b6 75 d3                     	movzx esi, byte ptr [ebp - 0x2d]
0x8049a3b:   0f b7 5d da                     	movzx ebx, word ptr [ebp - 0x26]
0x8049a3f:   0f be 4d e3                     	movsx ecx, byte ptr [ebp - 0x1d]
0x8049a43:   0f bf 55 ea                     	movsx edx, word ptr [ebp - 0x16]
0x8049a47:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049a4b:   57                              	push edi
0x8049a4c:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049a4f:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049a52:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049a55:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049a58:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049a5b:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049a5e:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049a61:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049a64:   56                              	push esi
0x8049a65:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049a68:   53                              	push ebx
0x8049a69:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049a6c:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049a6f:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049a72:   51                              	push ecx
0x8049a73:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049a76:   52                              	push edx
0x8049a77:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049a7a:   50                              	push eax
0x8049a7b:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049a7e:   e8 a3 fb ff ff                  	call 0x8049626 <set_var>
0x8049a83:   83 c4 54                        	add esp, 0x54
0x8049a86:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049a89:   e9 94 06 00 00                  	jmp 0x804a122 <func_1+0x9e0>
0x8049a8e:   66 c7 85 1c ff ff ff f9 6c      	mov word ptr [ebp - 0xe4], 0x6cf9
0x8049a97:   c7 85 18 ff ff ff db cb 87 47   	mov dword ptr [ebp - 0xe8], 0x4787cbdb
0x8049aa1:   80 7d e3 01                     	cmp byte ptr [ebp - 0x1d], 1
0x8049aa5:   0f 9e c0                        	setle al
0x8049aa8:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x8049aab:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x8049aaf:   0f 94 c0                        	sete al
0x8049ab2:   0f b6 c0                        	movzx eax, al
0x8049ab5:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049ab8:   83 bd 5c ff ff ff 00            	cmp dword ptr [ebp - 0xa4], 0
0x8049abf:   0f 84 80 00 00 00               	je 0x8049b45 <func_1+0x403>
0x8049ac5:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049ac8:   89 c2                           	mov edx, eax
0x8049aca:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049ace:   89 d1                           	mov ecx, edx
0x8049ad0:   31 c1                           	xor ecx, eax
0x8049ad2:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x8049ad8:   89 c2                           	mov edx, eax
0x8049ada:   0f b6 c1                        	movzx eax, cl
0x8049add:   f6 f2                           	div dl
0x8049adf:   0f be d0                        	movsx edx, al
0x8049ae2:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049ae5:   0f be c0                        	movsx eax, al
0x8049ae8:   89 c1                           	mov ecx, eax
0x8049aea:   d3 fa                           	sar edx, cl
0x8049aec:   0f bf 85 1c ff ff ff            	movsx eax, word ptr [ebp - 0xe4]
0x8049af3:   39 c2                           	cmp edx, eax
0x8049af5:   0f 95 c0                        	setne al
0x8049af8:   0f b6 c0                        	movzx eax, al
0x8049afb:   21 45 d4                        	and dword ptr [ebp - 0x2c], eax
0x8049afe:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x8049b02:   74 11                           	je 0x8049b15 <func_1+0x3d3>
0x8049b04:   66 83 bd 6a ff ff ff 00         	cmp word ptr [ebp - 0x96], 0
0x8049b0c:   74 07                           	je 0x8049b15 <func_1+0x3d3>
0x8049b0e:   b8 01 00 00 00                  	mov eax, 1
0x8049b13:   eb 05                           	jmp 0x8049b1a <func_1+0x3d8>
0x8049b15:   b8 00 00 00 00                  	mov eax, 0
0x8049b1a:   c0 f8 03                        	sar al, 3
0x8049b1d:   66 98                           	cbw 
0x8049b1f:   66 89 45 da                     	mov word ptr [ebp - 0x26], ax
0x8049b23:   0f b7 85 1e ff ff ff            	movzx eax, word ptr [ebp - 0xe2]
0x8049b2a:   0f b6 d0                        	movzx edx, al
0x8049b2d:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049b30:   0f b6 c0                        	movzx eax, al
0x8049b33:   89 c1                           	mov ecx, eax
0x8049b35:   d3 fa                           	sar edx, cl
0x8049b37:   89 d0                           	mov eax, edx
0x8049b39:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x8049b3c:   7e 07                           	jle 0x8049b45 <func_1+0x403>
0x8049b3e:   b8 01 00 00 00                  	mov eax, 1
0x8049b43:   eb 05                           	jmp 0x8049b4a <func_1+0x408>
0x8049b45:   b8 00 00 00 00                  	mov eax, 0
0x8049b4a:   31 45 98                        	xor dword ptr [ebp - 0x68], eax
0x8049b4d:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049b50:   0b 45 8c                        	or eax, dword ptr [ebp - 0x74]
0x8049b53:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049b56:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049b59:   21 85 18 ff ff ff               	and dword ptr [ebp - 0xe8], eax
0x8049b5f:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x8049b65:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049b68:   0f be 8d 7f ff ff ff            	movsx ecx, byte ptr [ebp - 0x81]
0x8049b6f:   83 7d 90 00                     	cmp dword ptr [ebp - 0x70], 0
0x8049b73:   74 0d                           	je 0x8049b82 <func_1+0x440>
0x8049b75:   80 7d d3 00                     	cmp byte ptr [ebp - 0x2d], 0
0x8049b79:   74 07                           	je 0x8049b82 <func_1+0x440>
0x8049b7b:   b8 01 00 00 00                  	mov eax, 1
0x8049b80:   eb 05                           	jmp 0x8049b87 <func_1+0x445>
0x8049b82:   b8 00 00 00 00                  	mov eax, 0
0x8049b87:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049b8a:   76 06                           	jbe 0x8049b92 <func_1+0x450>
0x8049b8c:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x8049b90:   74 07                           	je 0x8049b99 <func_1+0x457>
0x8049b92:   b8 01 00 00 00                  	mov eax, 1
0x8049b97:   eb 05                           	jmp 0x8049b9e <func_1+0x45c>
0x8049b99:   b8 00 00 00 00                  	mov eax, 0
0x8049b9e:   0f be c0                        	movsx eax, al
0x8049ba1:   8b 95 74 ff ff ff               	mov edx, dword ptr [ebp - 0x8c]
0x8049ba7:   0f be fa                        	movsx edi, dl
0x8049baa:   99                              	cdq 
0x8049bab:   f7 ff                           	idiv edi
0x8049bad:   98                              	cwde 
0x8049bae:   39 c1                           	cmp ecx, eax
0x8049bb0:   0f 9c c0                        	setl al
0x8049bb3:   0f b6 d0                        	movzx edx, al
0x8049bb6:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x8049bba:   31 d0                           	xor eax, edx
0x8049bbc:   0f bf d0                        	movsx edx, ax
0x8049bbf:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x8049bc5:   98                              	cwde 
0x8049bc6:   0f af c2                        	imul eax, edx
0x8049bc9:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049bcc:   83 45 b0 01                     	add dword ptr [ebp - 0x50], 1
0x8049bd0:   83 7d b0 28                     	cmp dword ptr [ebp - 0x50], 0x28
0x8049bd4:   0f 87 d6 fd ff ff               	ja 0x80499b0 <func_1+0x26e>
0x8049bda:   c6 45 ab f9                     	mov byte ptr [ebp - 0x55], 0xf9
0x8049bde:   eb 2b                           	jmp 0x8049c0b <func_1+0x4c9>
0x8049be0:   c6 85 29 ff ff ff 01            	mov byte ptr [ebp - 0xd7], 1
0x8049be7:   c7 85 24 ff ff ff fd ff ff ff   	mov dword ptr [ebp - 0xdc], 0xfffffffd
0x8049bf1:   0f be 55 f3                     	movsx edx, byte ptr [ebp - 0xd]
0x8049bf5:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049bf8:   21 d0                           	and eax, edx
0x8049bfa:   83 e0 01                        	and eax, 1
0x8049bfd:   89 85 24 ff ff ff               	mov dword ptr [ebp - 0xdc], eax
0x8049c03:   83 45 c4 01                     	add dword ptr [ebp - 0x3c], 1
0x8049c07:   80 45 ab 09                     	add byte ptr [ebp - 0x55], 9
0x8049c0b:   80 7d ab 2c                     	cmp byte ptr [ebp - 0x55], 0x2c
0x8049c0f:   76 cf                           	jbe 0x8049be0 <func_1+0x49e>
0x8049c11:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049c14:   89 c2                           	mov edx, eax
0x8049c16:   0f b7 85 6a ff ff ff            	movzx eax, word ptr [ebp - 0x96]
0x8049c1d:   01 d0                           	add eax, edx
0x8049c1f:   66 2d ad 7a                     	sub ax, 0x7aad
0x8049c23:   0f b7 c0                        	movzx eax, ax
0x8049c26:   69 c0 31 ff 00 00               	imul eax, eax, 0xff31
0x8049c2c:   c1 e8 10                        	shr eax, 0x10
0x8049c2f:   66 c1 e8 0d                     	shr ax, 0xd
0x8049c33:   0f be c0                        	movsx eax, al
0x8049c36:   0f b6 55 ab                     	movzx edx, byte ptr [ebp - 0x55]
0x8049c3a:   0f be ca                        	movsx ecx, dl
0x8049c3d:   99                              	cdq 
0x8049c3e:   f7 f9                           	idiv ecx
0x8049c40:   89 d0                           	mov eax, edx
0x8049c42:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x8049c45:   0f 95 c0                        	setne al
0x8049c48:   0f b6 c0                        	movzx eax, al
0x8049c4b:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x8049c4e:   0f 8c 4d 03 00 00               	jl 0x8049fa1 <func_1+0x85f>
0x8049c54:   c7 85 38 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0xc8], 0xfffffffe
0x8049c5e:   66 c7 85 36 ff ff ff d5 7e      	mov word ptr [ebp - 0xca], 0x7ed5
0x8049c67:   c7 45 94 04 b9 ac 13            	mov dword ptr [ebp - 0x6c], 0x13acb904
0x8049c6e:   c7 85 30 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xd0], 0xffffffff
0x8049c78:   83 6d c0 01                     	sub dword ptr [ebp - 0x40], 1
0x8049c7c:   83 bd 38 ff ff ff 00            	cmp dword ptr [ebp - 0xc8], 0
0x8049c83:   0f 84 a5 00 00 00               	je 0x8049d2e <func_1+0x5ec>
0x8049c89:   c7 85 2c ff ff ff 21 36 1d c2   	mov dword ptr [ebp - 0xd4], 0xc21d3621
0x8049c93:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x8049c99:   0d 20 72 00 00                  	or eax, 0x7220
0x8049c9e:   89 c3                           	mov ebx, eax
0x8049ca0:   66 83 bd 36 ff ff ff 00         	cmp word ptr [ebp - 0xca], 0
0x8049ca8:   75 0a                           	jne 0x8049cb4 <func_1+0x572>
0x8049caa:   66 83 bd 6e ff ff ff 00         	cmp word ptr [ebp - 0x92], 0
0x8049cb2:   74 07                           	je 0x8049cbb <func_1+0x579>
0x8049cb4:   b8 01 00 00 00                  	mov eax, 1
0x8049cb9:   eb 05                           	jmp 0x8049cc0 <func_1+0x57e>
0x8049cbb:   b8 00 00 00 00                  	mov eax, 0
0x8049cc0:   0f be c0                        	movsx eax, al
0x8049cc3:   8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x8049cc6:   0f be ca                        	movsx ecx, dl
0x8049cc9:   99                              	cdq 
0x8049cca:   f7 f9                           	idiv ecx
0x8049ccc:   89 d0                           	mov eax, edx
0x8049cce:   89 c1                           	mov ecx, eax
0x8049cd0:   66 83 f9 fb                     	cmp cx, -5
0x8049cd4:   0f 93 c0                        	setae al
0x8049cd7:   0f b6 c0                        	movzx eax, al
0x8049cda:   89 c2                           	mov edx, eax
0x8049cdc:   c1 e2 02                        	shl edx, 2
0x8049cdf:   01 c2                           	add edx, eax
0x8049ce1:   89 d0                           	mov eax, edx
0x8049ce3:   f7 d8                           	neg eax
0x8049ce5:   29 c1                           	sub ecx, eax
0x8049ce7:   89 c8                           	mov eax, ecx
0x8049ce9:   0f b7 c8                        	movzx ecx, ax
0x8049cec:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x8049cf2:   99                              	cdq 
0x8049cf3:   f7 f9                           	idiv ecx
0x8049cf5:   89 d0                           	mov eax, edx
0x8049cf7:   31 45 94                        	xor dword ptr [ebp - 0x6c], eax
0x8049cfa:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x8049cfe:   74 10                           	je 0x8049d10 <func_1+0x5ce>
0x8049d00:   83 bd 30 ff ff ff 00            	cmp dword ptr [ebp - 0xd0], 0
0x8049d07:   74 07                           	je 0x8049d10 <func_1+0x5ce>
0x8049d09:   b8 01 00 00 00                  	mov eax, 1
0x8049d0e:   eb 05                           	jmp 0x8049d15 <func_1+0x5d3>
0x8049d10:   b8 00 00 00 00                  	mov eax, 0
0x8049d15:   39 d8                           	cmp eax, ebx
0x8049d17:   0f 9e c0                        	setle al
0x8049d1a:   0f b6 c0                        	movzx eax, al
0x8049d1d:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049d20:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049d23:   31 45 dc                        	xor dword ptr [ebp - 0x24], eax
0x8049d26:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049d29:   21 45 cc                        	and dword ptr [ebp - 0x34], eax
0x8049d2c:   eb 27                           	jmp 0x8049d55 <func_1+0x613>
0x8049d2e:   0f b7 45 a2                     	movzx eax, word ptr [ebp - 0x5e]
0x8049d32:   83 c0 01                        	add eax, 1
0x8049d35:   66 89 45 a2                     	mov word ptr [ebp - 0x5e], ax
0x8049d39:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049d3c:   0f b6 c0                        	movzx eax, al
0x8049d3f:   c1 e0 02                        	shl eax, 2
0x8049d42:   39 85 58 ff ff ff               	cmp dword ptr [ebp - 0xa8], eax
0x8049d48:   0f 9e c0                        	setle al
0x8049d4b:   0f b6 c0                        	movzx eax, al
0x8049d4e:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049d51:   83 45 b8 01                     	add dword ptr [ebp - 0x48], 1
0x8049d55:   66 83 bd 36 ff ff ff 00         	cmp word ptr [ebp - 0xca], 0
0x8049d5d:   0f 84 c1 01 00 00               	je 0x8049f24 <func_1+0x7e2>
0x8049d63:   66 c7 85 2a ff ff ff f3 c2      	mov word ptr [ebp - 0xd6], 0xc2f3
0x8049d6c:   66 c7 45 b6 b4 00               	mov word ptr [ebp - 0x4a], 0xb4
0x8049d72:   80 6d d3 01                     	sub byte ptr [ebp - 0x2d], 1
0x8049d76:   0f bf 8d 2a ff ff ff            	movsx ecx, word ptr [ebp - 0xd6]
0x8049d7d:   81 7d 84 30 ff ff ff            	cmp dword ptr [ebp - 0x7c], 0xffffff30
0x8049d84:   0f 94 c0                        	sete al
0x8049d87:   0f b6 c0                        	movzx eax, al
0x8049d8a:   8b 95 64 ff ff ff               	mov edx, dword ptr [ebp - 0x9c]
0x8049d90:   0f b6 da                        	movzx ebx, dl
0x8049d93:   99                              	cdq 
0x8049d94:   f7 fb                           	idiv ebx
0x8049d96:   89 d0                           	mov eax, edx
0x8049d98:   21 85 70 ff ff ff               	and dword ptr [ebp - 0x90], eax
0x8049d9e:   89 c8                           	mov eax, ecx
0x8049da0:   0b 85 70 ff ff ff               	or eax, dword ptr [ebp - 0x90]
0x8049da6:   83 f8 ff                        	cmp eax, -1
0x8049da9:   7c 04                           	jl 0x8049daf <func_1+0x66d>
0x8049dab:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x8049daf:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049db2:   38 45 e3                        	cmp byte ptr [ebp - 0x1d], al
0x8049db5:   0f 95 c0                        	setne al
0x8049db8:   0f b6 d0                        	movzx edx, al
0x8049dbb:   0f bf 85 36 ff ff ff            	movsx eax, word ptr [ebp - 0xca]
0x8049dc2:   39 c2                           	cmp edx, eax
0x8049dc4:   0f 9d c0                        	setge al
0x8049dc7:   0f b6 c0                        	movzx eax, al
0x8049dca:   09 45 bc                        	or dword ptr [ebp - 0x44], eax
0x8049dcd:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x8049dd1:   66 98                           	cbw 
0x8049dd3:   f7 d8                           	neg eax
0x8049dd5:   89 c2                           	mov edx, eax
0x8049dd7:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x8049ddb:   09 d0                           	or eax, edx
0x8049ddd:   66 69 c0 9e 5a                  	imul ax, ax, 0x5a9e
0x8049de2:   66 89 45 b6                     	mov word ptr [ebp - 0x4a], ax
0x8049de6:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049dea:   0f b6 55 ab                     	movzx edx, byte ptr [ebp - 0x55]
0x8049dee:   81 ca 89 ed 00 00               	or edx, 0xed89
0x8049df4:   83 fa f9                        	cmp edx, -7
0x8049df7:   0f 94 c2                        	sete dl
0x8049dfa:   89 d1                           	mov ecx, edx
0x8049dfc:   8b 55 94                        	mov edx, dword ptr [ebp - 0x6c]
0x8049dff:   31 ca                           	xor edx, ecx
0x8049e01:   0f be ca                        	movsx ecx, dl
0x8049e04:   99                              	cdq 
0x8049e05:   f7 f9                           	idiv ecx
0x8049e07:   89 d0                           	mov eax, edx
0x8049e09:   99                              	cdq 
0x8049e0a:   f7 7d 84                        	idiv dword ptr [ebp - 0x7c]
0x8049e0d:   89 d0                           	mov eax, edx
0x8049e0f:   85 c0                           	test eax, eax
0x8049e11:   74 0d                           	je 0x8049e20 <func_1+0x6de>
0x8049e13:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049e17:   74 07                           	je 0x8049e20 <func_1+0x6de>
0x8049e19:   b8 01 00 00 00                  	mov eax, 1
0x8049e1e:   eb 05                           	jmp 0x8049e25 <func_1+0x6e3>
0x8049e20:   b8 00 00 00 00                  	mov eax, 0
0x8049e25:   3c da                           	cmp al, 0xda
0x8049e27:   0f 93 c2                        	setae dl
0x8049e2a:   80 fa ff                        	cmp dl, 0xff
0x8049e2d:   0f 93 c0                        	setae al
0x8049e30:   f7 d8                           	neg eax
0x8049e32:   29 c2                           	sub edx, eax
0x8049e34:   66 c7 45 da f8 99               	mov word ptr [ebp - 0x26], 0x99f8
0x8049e3a:   66 81 7d da 0c 2c               	cmp word ptr [ebp - 0x26], 0x2c0c
0x8049e40:   0f 94 c0                        	sete al
0x8049e43:   0f b6 c0                        	movzx eax, al
0x8049e46:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x8049e49:   0f 97 c0                        	seta al
0x8049e4c:   0f b6 c0                        	movzx eax, al
0x8049e4f:   f7 d8                           	neg eax
0x8049e51:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049e54:   0f be 85 47 ff ff ff            	movsx eax, byte ptr [ebp - 0xb9]
0x8049e5b:   89 85 40 ff ff ff               	mov dword ptr [ebp - 0xc0], eax
0x8049e61:   66 83 7d ea 00                  	cmp word ptr [ebp - 0x16], 0
0x8049e66:   0f 9e c0                        	setle al
0x8049e69:   0f b6 c0                        	movzx eax, al
0x8049e6c:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x8049e6f:   0f 9e c0                        	setle al
0x8049e72:   89 c2                           	mov edx, eax
0x8049e74:   0f b7 85 2a ff ff ff            	movzx eax, word ptr [ebp - 0xd6]
0x8049e7b:   8d 0c 02                        	lea ecx, [edx + eax]
0x8049e7e:   0f b6 d1                        	movzx edx, cl
0x8049e81:   89 d0                           	mov eax, edx
0x8049e83:   c1 e0 05                        	shl eax, 5
0x8049e86:   29 d0                           	sub eax, edx
0x8049e88:   c1 e0 03                        	shl eax, 3
0x8049e8b:   01 d0                           	add eax, edx
0x8049e8d:   66 c1 e8 08                     	shr ax, 8
0x8049e91:   c0 e8 06                        	shr al, 6
0x8049e94:   ba 42 00 00 00                  	mov edx, 0x42
0x8049e99:   0f af c2                        	imul eax, edx
0x8049e9c:   29 c1                           	sub ecx, eax
0x8049e9e:   89 c8                           	mov eax, ecx
0x8049ea0:   0f b6 c0                        	movzx eax, al
0x8049ea3:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x8049ea6:   0f 95 c0                        	setne al
0x8049ea9:   89 c2                           	mov edx, eax
0x8049eab:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049eae:   31 d0                           	xor eax, edx
0x8049eb0:   0f b6 d0                        	movzx edx, al
0x8049eb3:   0f b7 85 2a ff ff ff            	movzx eax, word ptr [ebp - 0xd6]
0x8049eba:   0f b6 c0                        	movzx eax, al
0x8049ebd:   01 d0                           	add eax, edx
0x8049ebf:   3d 5e b1 98 e3                  	cmp eax, 0xe398b15e
0x8049ec4:   76 07                           	jbe 0x8049ecd <func_1+0x78b>
0x8049ec6:   b8 20 04 00 00                  	mov eax, 0x420
0x8049ecb:   eb 05                           	jmp 0x8049ed2 <func_1+0x790>
0x8049ecd:   b8 10 04 00 00                  	mov eax, 0x410
0x8049ed2:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049ed5:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049ed8:   33 45 90                        	xor eax, dword ptr [ebp - 0x70]
0x8049edb:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049ede:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x8049ee4:   0f be c0                        	movsx eax, al
0x8049ee7:   0f b6 95 7f ff ff ff            	movzx edx, byte ptr [ebp - 0x81]
0x8049eee:   0f b6 da                        	movzx ebx, dl
0x8049ef1:   8b 95 50 ff ff ff               	mov edx, dword ptr [ebp - 0xb0]
0x8049ef7:   0f be f2                        	movsx esi, dl
0x8049efa:   8b 55 9c                        	mov edx, dword ptr [ebp - 0x64]
0x8049efd:   0f be d2                        	movsx edx, dl
0x8049f00:   89 d1                           	mov ecx, edx
0x8049f02:   d3 fe                           	sar esi, cl
0x8049f04:   89 f1                           	mov ecx, esi
0x8049f06:   0f b7 55 a2                     	movzx edx, word ptr [ebp - 0x5e]
0x8049f0a:   39 d1                           	cmp ecx, edx
0x8049f0c:   0f 9c c2                        	setl dl
0x8049f0f:   0f b6 d2                        	movzx edx, dl
0x8049f12:   89 d1                           	mov ecx, edx
0x8049f14:   d3 fb                           	sar ebx, cl
0x8049f16:   89 da                           	mov edx, ebx
0x8049f18:   0f be fa                        	movsx edi, dl
0x8049f1b:   99                              	cdq 
0x8049f1c:   f7 ff                           	idiv edi
0x8049f1e:   85 c0                           	test eax, eax
0x8049f20:   74 6d                           	je 0x8049f8f <func_1+0x84d>
0x8049f22:   eb 5b                           	jmp 0x8049f7f <func_1+0x83d>
0x8049f24:   0f b7 7d b6                     	movzx edi, word ptr [ebp - 0x4a]
0x8049f28:   0f b6 75 d3                     	movzx esi, byte ptr [ebp - 0x2d]
0x8049f2c:   0f b7 5d da                     	movzx ebx, word ptr [ebp - 0x26]
0x8049f30:   0f be 4d e3                     	movsx ecx, byte ptr [ebp - 0x1d]
0x8049f34:   0f bf 55 ea                     	movsx edx, word ptr [ebp - 0x16]
0x8049f38:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049f3c:   57                              	push edi
0x8049f3d:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049f40:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049f43:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049f46:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049f49:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049f4c:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049f4f:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049f52:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049f55:   56                              	push esi
0x8049f56:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049f59:   53                              	push ebx
0x8049f5a:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049f5d:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049f60:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049f63:   51                              	push ecx
0x8049f64:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049f67:   52                              	push edx
0x8049f68:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049f6b:   50                              	push eax
0x8049f6c:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049f6f:   e8 b2 f6 ff ff                  	call 0x8049626 <set_var>
0x8049f74:   83 c4 54                        	add esp, 0x54
0x8049f77:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049f7a:   e9 a3 01 00 00                  	jmp 0x804a122 <func_1+0x9e0>
0x8049f7f:   80 bd 62 ff ff ff 00            	cmp byte ptr [ebp - 0x9e], 0
0x8049f86:   74 07                           	je 0x8049f8f <func_1+0x84d>
0x8049f88:   b8 01 00 00 00                  	mov eax, 1
0x8049f8d:   eb 05                           	jmp 0x8049f94 <func_1+0x852>
0x8049f8f:   b8 00 00 00 00                  	mov eax, 0
0x8049f94:   f7 d0                           	not eax
0x8049f96:   89 85 58 ff ff ff               	mov dword ptr [ebp - 0xa8], eax
0x8049f9c:   e9 c3 00 00 00                  	jmp 0x804a064 <func_1+0x922>
0x8049fa1:   c6 85 3f ff ff ff 04            	mov byte ptr [ebp - 0xc1], 4
0x8049fa8:   c6 45 f3 eb                     	mov byte ptr [ebp - 0xd], 0xeb
0x8049fac:   eb 26                           	jmp 0x8049fd4 <func_1+0x892>
0x8049fae:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x8049fb4:   0f b6 95 4f ff ff ff            	movzx edx, byte ptr [ebp - 0xb1]
0x8049fbb:   0f b6 c0                        	movzx eax, al
0x8049fbe:   f6 f2                           	div dl
0x8049fc0:   0f b6 c0                        	movzx eax, al
0x8049fc3:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049fc6:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x8049fca:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049fce:   83 e8 01                        	sub eax, 1
0x8049fd1:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x8049fd4:   80 7d f3 e3                     	cmp byte ptr [ebp - 0xd], 0xe3
0x8049fd8:   7d d4                           	jge 0x8049fae <func_1+0x86c>
0x8049fda:   e9 85 00 00 00                  	jmp 0x804a064 <func_1+0x922>
0x8049fdf:   66 c7 85 4c ff ff ff 09 00      	mov word ptr [ebp - 0xb4], 9
0x8049fe8:   c7 85 48 ff ff ff f8 ff ff ff   	mov dword ptr [ebp - 0xb8], 0xfffffff8
0x8049ff2:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x8049ff9:   83 7d a4 f3                     	cmp dword ptr [ebp - 0x5c], -0xd
0x8049ffd:   7d 5b                           	jge 0x804a05a <func_1+0x918>
0x8049fff:   0f b7 7d b6                     	movzx edi, word ptr [ebp - 0x4a]
0x804a003:   0f b6 75 d3                     	movzx esi, byte ptr [ebp - 0x2d]
0x804a007:   0f b7 5d da                     	movzx ebx, word ptr [ebp - 0x26]
0x804a00b:   0f be 4d e3                     	movsx ecx, byte ptr [ebp - 0x1d]
0x804a00f:   0f bf 55 ea                     	movsx edx, word ptr [ebp - 0x16]
0x804a013:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x804a017:   57                              	push edi
0x804a018:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a01b:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a01e:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a021:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a024:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a027:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a02a:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a02d:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a030:   56                              	push esi
0x804a031:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a034:   53                              	push ebx
0x804a035:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a038:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a03b:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a03e:   51                              	push ecx
0x804a03f:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a042:   52                              	push edx
0x804a043:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a046:   50                              	push eax
0x804a047:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a04a:   e8 d7 f5 ff ff                  	call 0x8049626 <set_var>
0x804a04f:   83 c4 54                        	add esp, 0x54
0x804a052:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a055:   e9 c8 00 00 00                  	jmp 0x804a122 <func_1+0x9e0>
0x804a05a:   c7 85 48 ff ff ff 40 b0 00 00   	mov dword ptr [ebp - 0xb8], 0xb040
0x804a064:   66 83 bd 6e ff ff ff 00         	cmp word ptr [ebp - 0x92], 0
0x804a06c:   74 25                           	je 0x804a093 <func_1+0x951>
0x804a06e:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a071:   89 c2                           	mov edx, eax
0x804a073:   b8 01 00 00 00                  	mov eax, 1
0x804a078:   0f b6 c0                        	movzx eax, al
0x804a07b:   f6 f2                           	div dl
0x804a07d:   22 45 ab                        	and al, byte ptr [ebp - 0x55]
0x804a080:   0f b6 d0                        	movzx edx, al
0x804a083:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a086:   01 d0                           	add eax, edx
0x804a088:   85 c0                           	test eax, eax
0x804a08a:   74 07                           	je 0x804a093 <func_1+0x951>
0x804a08c:   b8 01 00 00 00                  	mov eax, 1
0x804a091:   eb 05                           	jmp 0x804a098 <func_1+0x956>
0x804a093:   b8 00 00 00 00                  	mov eax, 0
0x804a098:   f7 d0                           	not eax
0x804a09a:   20 45 e3                        	and byte ptr [ebp - 0x1d], al
0x804a09d:   80 bd 4f ff ff ff 00            	cmp byte ptr [ebp - 0xb1], 0
0x804a0a4:   0f 94 c0                        	sete al
0x804a0a7:   0f b6 c0                        	movzx eax, al
0x804a0aa:   31 45 bc                        	xor dword ptr [ebp - 0x44], eax
0x804a0ad:   0f b6 85 6d ff ff ff            	movzx eax, byte ptr [ebp - 0x93]
0x804a0b4:   83 c0 01                        	add eax, 1
0x804a0b7:   88 85 6d ff ff ff               	mov byte ptr [ebp - 0x93], al
0x804a0bd:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a0c0:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804a0c3:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a0c6:   31 45 c8                        	xor dword ptr [ebp - 0x38], eax
0x804a0c9:   0f b7 7d b6                     	movzx edi, word ptr [ebp - 0x4a]
0x804a0cd:   0f b6 75 d3                     	movzx esi, byte ptr [ebp - 0x2d]
0x804a0d1:   0f b7 5d da                     	movzx ebx, word ptr [ebp - 0x26]
0x804a0d5:   0f be 4d e3                     	movsx ecx, byte ptr [ebp - 0x1d]
0x804a0d9:   0f bf 55 ea                     	movsx edx, word ptr [ebp - 0x16]
0x804a0dd:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x804a0e1:   57                              	push edi
0x804a0e2:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a0e5:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a0e8:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a0eb:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a0ee:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a0f1:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a0f4:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a0f7:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a0fa:   56                              	push esi
0x804a0fb:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a0fe:   53                              	push ebx
0x804a0ff:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a102:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a105:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a108:   51                              	push ecx
0x804a109:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a10c:   52                              	push edx
0x804a10d:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a110:   50                              	push eax
0x804a111:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a114:   e8 0d f5 ff ff                  	call 0x8049626 <set_var>
0x804a119:   83 c4 54                        	add esp, 0x54
0x804a11c:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a122:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a125:   5b                              	pop ebx
0x804a126:   5e                              	pop esi
0x804a127:   5f                              	pop edi
0x804a128:   5d                              	pop ebp
0x804a129:   c3                              	ret 
; function: main at 0x804a12a -- 0x804a420
0x804a12a:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a12e:   83 e4 f0                        	and esp, 0xfffffff0
0x804a131:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a134:   55                              	push ebp
0x804a135:   89 e5                           	mov ebp, esp
0x804a137:   53                              	push ebx
0x804a138:   51                              	push ecx
0x804a139:   83 ec 10                        	sub esp, 0x10
0x804a13c:   e8 4f e2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a141:   81 c3 bf 2e 00 00               	add ebx, 0x2ebf
0x804a147:   89 c8                           	mov eax, ecx
0x804a149:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a150:   83 38 02                        	cmp dword ptr [eax], 2
0x804a153:   75 26                           	jne 0x804a17b <main+0x51>
0x804a155:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a158:   83 c0 04                        	add eax, 4
0x804a15b:   8b 00                           	mov eax, dword ptr [eax]
0x804a15d:   83 ec 08                        	sub esp, 8
0x804a160:   8d 93 08 d5 ff ff               	lea edx, [ebx - 0x2af8]
0x804a166:   52                              	push edx
0x804a167:   50                              	push eax
0x804a168:   e8 93 e1 ff ff                  	call 0x8048300 <strcmp>
0x804a16d:   83 c4 10                        	add esp, 0x10
0x804a170:   85 c0                           	test eax, eax
0x804a172:   75 07                           	jne 0x804a17b <main+0x51>
0x804a174:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a17b:   e8 d6 e2 ff ff                  	call 0x8048456 <platform_main_begin>
0x804a180:   e8 e6 f2 ff ff                  	call 0x804946b <crc32_gentab>
0x804a185:   e8 b8 f5 ff ff                  	call 0x8049742 <func_1>
0x804a18a:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804a190:   83 ec 04                        	sub esp, 4
0x804a193:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a196:   8d 93 0a d5 ff ff               	lea edx, [ebx - 0x2af6]
0x804a19c:   52                              	push edx
0x804a19d:   50                              	push eax
0x804a19e:   e8 d4 f3 ff ff                  	call 0x8049577 <transparent_crc>
0x804a1a3:   83 c4 10                        	add esp, 0x10
0x804a1a6:   0f b6 83 28 00 00 00            	movzx eax, byte ptr [ebx + 0x28]
0x804a1ad:   0f be c0                        	movsx eax, al
0x804a1b0:   83 ec 04                        	sub esp, 4
0x804a1b3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a1b6:   8d 93 0e d5 ff ff               	lea edx, [ebx - 0x2af2]
0x804a1bc:   52                              	push edx
0x804a1bd:   50                              	push eax
0x804a1be:   e8 b4 f3 ff ff                  	call 0x8049577 <transparent_crc>
0x804a1c3:   83 c4 10                        	add esp, 0x10
0x804a1c6:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a1cc:   83 ec 04                        	sub esp, 4
0x804a1cf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a1d2:   8d 93 12 d5 ff ff               	lea edx, [ebx - 0x2aee]
0x804a1d8:   52                              	push edx
0x804a1d9:   50                              	push eax
0x804a1da:   e8 98 f3 ff ff                  	call 0x8049577 <transparent_crc>
0x804a1df:   83 c4 10                        	add esp, 0x10
0x804a1e2:   0f b7 83 30 00 00 00            	movzx eax, word ptr [ebx + 0x30]
0x804a1e9:   98                              	cwde 
0x804a1ea:   83 ec 04                        	sub esp, 4
0x804a1ed:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a1f0:   8d 93 16 d5 ff ff               	lea edx, [ebx - 0x2aea]
0x804a1f6:   52                              	push edx
0x804a1f7:   50                              	push eax
0x804a1f8:   e8 7a f3 ff ff                  	call 0x8049577 <transparent_crc>
0x804a1fd:   83 c4 10                        	add esp, 0x10
0x804a200:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a206:   83 ec 04                        	sub esp, 4
0x804a209:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a20c:   8d 93 1b d5 ff ff               	lea edx, [ebx - 0x2ae5]
0x804a212:   52                              	push edx
0x804a213:   50                              	push eax
0x804a214:   e8 5e f3 ff ff                  	call 0x8049577 <transparent_crc>
0x804a219:   83 c4 10                        	add esp, 0x10
0x804a21c:   0f b6 83 38 00 00 00            	movzx eax, byte ptr [ebx + 0x38]
0x804a223:   0f be c0                        	movsx eax, al
0x804a226:   83 ec 04                        	sub esp, 4
0x804a229:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a22c:   8d 93 20 d5 ff ff               	lea edx, [ebx - 0x2ae0]
0x804a232:   52                              	push edx
0x804a233:   50                              	push eax
0x804a234:   e8 3e f3 ff ff                  	call 0x8049577 <transparent_crc>
0x804a239:   83 c4 10                        	add esp, 0x10
0x804a23c:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804a242:   89 c2                           	mov edx, eax
0x804a244:   83 ec 04                        	sub esp, 4
0x804a247:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a24a:   8d 83 25 d5 ff ff               	lea eax, [ebx - 0x2adb]
0x804a250:   50                              	push eax
0x804a251:   52                              	push edx
0x804a252:   e8 20 f3 ff ff                  	call 0x8049577 <transparent_crc>
0x804a257:   83 c4 10                        	add esp, 0x10
0x804a25a:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804a260:   89 c2                           	mov edx, eax
0x804a262:   83 ec 04                        	sub esp, 4
0x804a265:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a268:   8d 83 2a d5 ff ff               	lea eax, [ebx - 0x2ad6]
0x804a26e:   50                              	push eax
0x804a26f:   52                              	push edx
0x804a270:   e8 02 f3 ff ff                  	call 0x8049577 <transparent_crc>
0x804a275:   83 c4 10                        	add esp, 0x10
0x804a278:   8b 83 a4 04 00 00               	mov eax, dword ptr [ebx + 0x4a4]
0x804a27e:   83 ec 04                        	sub esp, 4
0x804a281:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a284:   8d 93 2f d5 ff ff               	lea edx, [ebx - 0x2ad1]
0x804a28a:   52                              	push edx
0x804a28b:   50                              	push eax
0x804a28c:   e8 e6 f2 ff ff                  	call 0x8049577 <transparent_crc>
0x804a291:   83 c4 10                        	add esp, 0x10
0x804a294:   0f b7 83 44 00 00 00            	movzx eax, word ptr [ebx + 0x44]
0x804a29b:   0f b7 c0                        	movzx eax, ax
0x804a29e:   83 ec 04                        	sub esp, 4
0x804a2a1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a2a4:   8d 93 34 d5 ff ff               	lea edx, [ebx - 0x2acc]
0x804a2aa:   52                              	push edx
0x804a2ab:   50                              	push eax
0x804a2ac:   e8 c6 f2 ff ff                  	call 0x8049577 <transparent_crc>
0x804a2b1:   83 c4 10                        	add esp, 0x10
0x804a2b4:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804a2ba:   83 ec 04                        	sub esp, 4
0x804a2bd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a2c0:   8d 93 39 d5 ff ff               	lea edx, [ebx - 0x2ac7]
0x804a2c6:   52                              	push edx
0x804a2c7:   50                              	push eax
0x804a2c8:   e8 aa f2 ff ff                  	call 0x8049577 <transparent_crc>
0x804a2cd:   83 c4 10                        	add esp, 0x10
0x804a2d0:   0f b6 83 4c 00 00 00            	movzx eax, byte ptr [ebx + 0x4c]
0x804a2d7:   0f b6 c0                        	movzx eax, al
0x804a2da:   83 ec 04                        	sub esp, 4
0x804a2dd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a2e0:   8d 93 3e d5 ff ff               	lea edx, [ebx - 0x2ac2]
0x804a2e6:   52                              	push edx
0x804a2e7:   50                              	push eax
0x804a2e8:   e8 8a f2 ff ff                  	call 0x8049577 <transparent_crc>
0x804a2ed:   83 c4 10                        	add esp, 0x10
0x804a2f0:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804a2f6:   89 c2                           	mov edx, eax
0x804a2f8:   83 ec 04                        	sub esp, 4
0x804a2fb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a2fe:   8d 83 44 d5 ff ff               	lea eax, [ebx - 0x2abc]
0x804a304:   50                              	push eax
0x804a305:   52                              	push edx
0x804a306:   e8 6c f2 ff ff                  	call 0x8049577 <transparent_crc>
0x804a30b:   83 c4 10                        	add esp, 0x10
0x804a30e:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804a314:   89 c2                           	mov edx, eax
0x804a316:   83 ec 04                        	sub esp, 4
0x804a319:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a31c:   8d 83 4a d5 ff ff               	lea eax, [ebx - 0x2ab6]
0x804a322:   50                              	push eax
0x804a323:   52                              	push edx
0x804a324:   e8 4e f2 ff ff                  	call 0x8049577 <transparent_crc>
0x804a329:   83 c4 10                        	add esp, 0x10
0x804a32c:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804a332:   89 c2                           	mov edx, eax
0x804a334:   83 ec 04                        	sub esp, 4
0x804a337:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a33a:   8d 83 50 d5 ff ff               	lea eax, [ebx - 0x2ab0]
0x804a340:   50                              	push eax
0x804a341:   52                              	push edx
0x804a342:   e8 30 f2 ff ff                  	call 0x8049577 <transparent_crc>
0x804a347:   83 c4 10                        	add esp, 0x10
0x804a34a:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804a350:   89 c2                           	mov edx, eax
0x804a352:   83 ec 04                        	sub esp, 4
0x804a355:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a358:   8d 83 56 d5 ff ff               	lea eax, [ebx - 0x2aaa]
0x804a35e:   50                              	push eax
0x804a35f:   52                              	push edx
0x804a360:   e8 12 f2 ff ff                  	call 0x8049577 <transparent_crc>
0x804a365:   83 c4 10                        	add esp, 0x10
0x804a368:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804a36e:   83 ec 04                        	sub esp, 4
0x804a371:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a374:   8d 93 5c d5 ff ff               	lea edx, [ebx - 0x2aa4]
0x804a37a:   52                              	push edx
0x804a37b:   50                              	push eax
0x804a37c:   e8 f6 f1 ff ff                  	call 0x8049577 <transparent_crc>
0x804a381:   83 c4 10                        	add esp, 0x10
0x804a384:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804a38a:   83 ec 04                        	sub esp, 4
0x804a38d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a390:   8d 93 62 d5 ff ff               	lea edx, [ebx - 0x2a9e]
0x804a396:   52                              	push edx
0x804a397:   50                              	push eax
0x804a398:   e8 da f1 ff ff                  	call 0x8049577 <transparent_crc>
0x804a39d:   83 c4 10                        	add esp, 0x10
0x804a3a0:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804a3a6:   89 c2                           	mov edx, eax
0x804a3a8:   83 ec 04                        	sub esp, 4
0x804a3ab:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a3ae:   8d 83 68 d5 ff ff               	lea eax, [ebx - 0x2a98]
0x804a3b4:   50                              	push eax
0x804a3b5:   52                              	push edx
0x804a3b6:   e8 bc f1 ff ff                  	call 0x8049577 <transparent_crc>
0x804a3bb:   83 c4 10                        	add esp, 0x10
0x804a3be:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804a3c4:   83 ec 04                        	sub esp, 4
0x804a3c7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a3ca:   8d 93 6e d5 ff ff               	lea edx, [ebx - 0x2a92]
0x804a3d0:   52                              	push edx
0x804a3d1:   50                              	push eax
0x804a3d2:   e8 a0 f1 ff ff                  	call 0x8049577 <transparent_crc>
0x804a3d7:   83 c4 10                        	add esp, 0x10
0x804a3da:   0f b7 83 6c 00 00 00            	movzx eax, word ptr [ebx + 0x6c]
0x804a3e1:   0f b7 c0                        	movzx eax, ax
0x804a3e4:   83 ec 04                        	sub esp, 4
0x804a3e7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a3ea:   8d 93 74 d5 ff ff               	lea edx, [ebx - 0x2a8c]
0x804a3f0:   52                              	push edx
0x804a3f1:   50                              	push eax
0x804a3f2:   e8 80 f1 ff ff                  	call 0x8049577 <transparent_crc>
0x804a3f7:   83 c4 10                        	add esp, 0x10
0x804a3fa:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804a400:   f7 d0                           	not eax
0x804a402:   83 ec 08                        	sub esp, 8
0x804a405:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a408:   50                              	push eax
0x804a409:   e8 58 e0 ff ff                  	call 0x8048466 <platform_main_end>
0x804a40e:   83 c4 10                        	add esp, 0x10
0x804a411:   b8 00 00 00 00                  	mov eax, 0
0x804a416:   8d 65 f8                        	lea esp, [ebp - 8]
0x804a419:   59                              	pop ecx
0x804a41a:   5b                              	pop ebx
0x804a41b:   5d                              	pop ebp
0x804a41c:   8d 61 fc                        	lea esp, [ecx - 4]
0x804a41f:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804a420 -- 0x804a424
0x804a420:   8b 04 24                        	mov eax, dword ptr [esp]
0x804a423:   c3                              	ret 
; data inside code section at 0x804a424 -- 0x804a430
0x804a424:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: __libc_csu_init at 0x804a430 -- 0x804a48d
0x804a430:   55                              	push ebp
0x804a431:   57                              	push edi
0x804a432:   56                              	push esi
0x804a433:   53                              	push ebx
0x804a434:   e8 57 df ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a439:   81 c3 c7 2b 00 00               	add ebx, 0x2bc7
0x804a43f:   83 ec 0c                        	sub esp, 0xc
0x804a442:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804a446:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804a44c:   e8 7b de ff ff                  	call 0x80482cc <_init>
0x804a451:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804a457:   29 c6                           	sub esi, eax
0x804a459:   c1 fe 02                        	sar esi, 2
0x804a45c:   85 f6                           	test esi, esi
0x804a45e:   74 25                           	je 0x804a485 <__libc_csu_init+0x55>
0x804a460:   31 ff                           	xor edi, edi
0x804a462:   8d b6 00 00 00 00               	lea esi, [esi]
0x804a468:   83 ec 04                        	sub esp, 4
0x804a46b:   55                              	push ebp
0x804a46c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a470:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a474:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804a47b:   83 c7 01                        	add edi, 1
0x804a47e:   83 c4 10                        	add esp, 0x10
0x804a481:   39 fe                           	cmp esi, edi
0x804a483:   75 e3                           	jne 0x804a468 <__libc_csu_init+0x38>
0x804a485:   83 c4 0c                        	add esp, 0xc
0x804a488:   5b                              	pop ebx
0x804a489:   5e                              	pop esi
0x804a48a:   5f                              	pop edi
0x804a48b:   5d                              	pop ebp
0x804a48c:   c3                              	ret 
; data inside code section at 0x804a48d -- 0x804a490
0x804a48d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804a490 -- 0x804a492
0x804a490:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804a494 -- 0x804a4a8
0x804a494:   53                              	push ebx
0x804a495:   83 ec 08                        	sub esp, 8
0x804a498:   e8 f3 de ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a49d:   81 c3 63 2b 00 00               	add ebx, 0x2b63
0x804a4a3:   83 c4 08                        	add esp, 8
0x804a4a6:   5b                              	pop ebx
0x804a4a7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 ac a4 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804a4a8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804a4b8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804a4c8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804a4d8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804a4e8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804a4f8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804a508:   31 00 67 5f 32 00 67 5f  38 00 67 5f 39 00 67 5f   |1.g_2.g_8.g_9.g_|
0x804a518:   31 30 00 67 5f 32 37 00  67 5f 33 34 00 67 5f 33   |10.g_27.g_34.g_3|
0x804a528:   35 00 67 5f 34 37 00 67  5f 37 31 00 67 5f 37 35   |5.g_47.g_71.g_75|
0x804a538:   00 67 5f 39 38 00 67 5f  31 31 31 00 67 5f 31 32   |.g_98.g_111.g_12|
0x804a548:   30 00 67 5f 31 32 31 00  67 5f 31 32 33 00 67 5f   |0.g_121.g_123.g_|
0x804a558:   31 32 34 00 67 5f 31 32  35 00 67 5f 31 33 36 00   |124.g_125.g_136.|
0x804a568:   67 5f 31 35 36 00 67 5f  31 36 32 00 67 5f 31 37   |g_156.g_162.g_17|
0x804a578:   34 00 00 00 00 00 00 3f  ff ff ff 7e 00 00 80 0d   |4......?...~....|
0x804a588:   00 00 80 31 ff ff 7f 3f  00 00 00 27 00 00 80 71   |...1...?...'...q|
0x804a598:   ff ff ff 34 00 00 00 00  00 00 00 00 00 00 e0 3f   |...4...........?|
0x804a5a8:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804a5b8:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804a5c8:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804a5d8:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804a5e8:   01                                                 |.               |
; section: .eh_frame_hdr
0x804a5e8:   01 1b 03 3b b0 02 00 00  55 00 00 00 08 dd ff ff   |...;....U.......|
0x804a5f8:   e0 02 00 00 48 dd ff ff  04 03 00 00 98 dd ff ff   |....H...........|
0x804a608:   cc 02 00 00 6e de ff ff  18 03 00 00 7e de ff ff   |....n.......~...|
0x804a618:   38 03 00 00 ac de ff ff  5c 03 00 00 ca de ff ff   |8.......\.......|
0x804a628:   7c 03 00 00 f2 de ff ff  9c 03 00 00 1c df ff ff   ||...............|
0x804a638:   bc 03 00 00 45 df ff ff  dc 03 00 00 88 df ff ff   |....E...........|
0x804a648:   fc 03 00 00 c9 df ff ff  1c 04 00 00 21 e0 ff ff   |............!...|
0x804a658:   40 04 00 00 73 e0 ff ff  64 04 00 00 b0 e0 ff ff   |@...s...d.......|
0x804a668:   84 04 00 00 e7 e0 ff ff  a4 04 00 00 06 e1 ff ff   |................|
0x804a678:   c4 04 00 00 30 e1 ff ff  e4 04 00 00 5c e1 ff ff   |....0.......\...|
0x804a688:   04 05 00 00 87 e1 ff ff  24 05 00 00 d0 e1 ff ff   |........$.......|
0x804a698:   44 05 00 00 17 e2 ff ff  64 05 00 00 71 e2 ff ff   |D.......d...q...|
0x804a6a8:   88 05 00 00 c5 e2 ff ff  ac 05 00 00 04 e3 ff ff   |................|
0x804a6b8:   cc 05 00 00 3d e3 ff ff  ec 05 00 00 5f e3 ff ff   |....=......._...|
0x804a6c8:   0c 06 00 00 ad e3 ff ff  2c 06 00 00 e9 e3 ff ff   |........,.......|
0x804a6d8:   4c 06 00 00 72 e4 ff ff  6c 06 00 00 a4 e4 ff ff   |L...r...l.......|
0x804a6e8:   8c 06 00 00 d4 e4 ff ff  ac 06 00 00 19 e5 ff ff   |................|
0x804a6f8:   cc 06 00 00 58 e5 ff ff  ec 06 00 00 8a e5 ff ff   |....X...........|
0x804a708:   0c 07 00 00 b6 e5 ff ff  2c 07 00 00 d4 e5 ff ff   |........,.......|
0x804a718:   4c 07 00 00 fc e5 ff ff  6c 07 00 00 21 e6 ff ff   |L.......l...!...|
0x804a728:   8c 07 00 00 46 e6 ff ff  ac 07 00 00 7d e6 ff ff   |....F.......}...|
0x804a738:   cc 07 00 00 b1 e6 ff ff  ec 07 00 00 03 e7 ff ff   |................|
0x804a748:   10 08 00 00 4f e7 ff ff  34 08 00 00 86 e7 ff ff   |....O...4.......|
0x804a758:   54 08 00 00 b7 e7 ff ff  74 08 00 00 d6 e7 ff ff   |T.......t.......|
0x804a768:   94 08 00 00 00 e8 ff ff  b4 08 00 00 28 e8 ff ff   |............(...|
0x804a778:   d4 08 00 00 51 e8 ff ff  f4 08 00 00 8d e8 ff ff   |....Q...........|
0x804a788:   14 09 00 00 c7 e8 ff ff  34 09 00 00 1a e9 ff ff   |........4.......|
0x804a798:   58 09 00 00 67 e9 ff ff  7c 09 00 00 9f e9 ff ff   |X...g...|.......|
0x804a7a8:   9c 09 00 00 d1 e9 ff ff  bc 09 00 00 e5 e9 ff ff   |................|
0x804a7b8:   dc 09 00 00 fc e9 ff ff  fc 09 00 00 11 ea ff ff   |................|
0x804a7c8:   1c 0a 00 00 27 ea ff ff  3c 0a 00 00 4e ea ff ff   |....'...<...N...|
0x804a7d8:   5c 0a 00 00 73 ea ff ff  7c 0a 00 00 b2 ea ff ff   |\...s...|.......|
0x804a7e8:   9c 0a 00 00 eb ea ff ff  bc 0a 00 00 17 eb ff ff   |................|
0x804a7f8:   dc 0a 00 00 3d eb ff ff  fc 0a 00 00 7f eb ff ff   |....=...........|
0x804a808:   1c 0b 00 00 c1 eb ff ff  3c 0b 00 00 03 ec ff ff   |........<.......|
0x804a818:   5c 0b 00 00 78 ec ff ff  7c 0b 00 00 d5 ec ff ff   |\...x...|.......|
0x804a828:   9c 0b 00 00 32 ed ff ff  bc 0b 00 00 8f ed ff ff   |....2...........|
0x804a838:   dc 0b 00 00 1f ee ff ff  fc 0b 00 00 83 ee ff ff   |................|
0x804a848:   1c 0c 00 00 f3 ee ff ff  3c 0c 00 00 3a ef ff ff   |........<...:...|
0x804a858:   60 0c 00 00 8f ef ff ff  80 0c 00 00 d6 ef ff ff   |`...............|
0x804a868:   a4 0c 00 00 3e f0 ff ff  c8 0c 00 00 5a f1 ff ff   |....>.......Z...|
0x804a878:   f8 0c 00 00 42 fb ff ff  28 0d 00 00 38 fe ff ff   |....B...(...8...|
0x804a888:   60 0d 00 00 48 fe ff ff  74 0d 00 00 a8 fe ff ff   |`...H...t.......|
0x804a898:   c0 0d 00 00 14                                     |.....           |
; section: .eh_frame
0x804a89c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804a8ac:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804a8bc:   c4 da ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804a8cc:   30 00 00 00 20 da ff ff  40 00 00 00 00 0e 08 46   |0... ...@......F|
0x804a8dc:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804a8ec:   10 00 00 00 54 00 00 00  3c da ff ff 08 00 00 00   |....T...<.......|
0x804a8fc:   00 00 00 00 1c 00 00 00  68 00 00 00 4e db ff ff   |........h...N...|
0x804a90c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804a91c:   04 04 00 00 20 00 00 00  88 00 00 00 3e db ff ff   |.... .......>...|
0x804a92c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804a93c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804a94c:   48 db ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |H........A....B.|
0x804a95c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804a96c:   46 db ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |F...(....A....B.|
0x804a97c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804a98c:   4e db ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |N...*....A....B.|
0x804a99c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804a9ac:   58 db ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |X...)....A....B.|
0x804a9bc:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804a9cc:   61 db ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |a...C....A....B.|
0x804a9dc:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804a9ec:   84 db ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804a9fc:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804aa0c:   a5 db ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804aa1c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804aa2c:   90 01 00 00 d9 db ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804aa3c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804aa4c:   1c 00 00 00 b4 01 00 00  07 dc ff ff 3d 00 00 00   |............=...|
0x804aa5c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804aa6c:   1c 00 00 00 d4 01 00 00  24 dc ff ff 37 00 00 00   |........$...7...|
0x804aa7c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804aa8c:   1c 00 00 00 f4 01 00 00  3b dc ff ff 1f 00 00 00   |........;.......|
0x804aa9c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804aaac:   1c 00 00 00 14 02 00 00  3a dc ff ff 2a 00 00 00   |........:...*...|
0x804aabc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804aacc:   1c 00 00 00 34 02 00 00  44 dc ff ff 2c 00 00 00   |....4...D...,...|
0x804aadc:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804aaec:   1c 00 00 00 54 02 00 00  50 dc ff ff 2b 00 00 00   |....T...P...+...|
0x804aafc:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804ab0c:   1c 00 00 00 74 02 00 00  5b dc ff ff 49 00 00 00   |....t...[...I...|
0x804ab1c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804ab2c:   1c 00 00 00 94 02 00 00  84 dc ff ff 47 00 00 00   |............G...|
0x804ab3c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804ab4c:   20 00 00 00 b4 02 00 00  ab dc ff ff 5a 00 00 00   | ...........Z...|
0x804ab5c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804ab6c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 e1 dc ff ff   |.... ...........|
0x804ab7c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804ab8c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804ab9c:   11 dd ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804abac:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804abbc:   30 dd ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |0...9....A....B.|
0x804abcc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804abdc:   49 dd ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |I..."....A....B.|
0x804abec:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804abfc:   4b dd ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |K...N....A....B.|
0x804ac0c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804ac1c:   79 dd ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |y...<....A....B.|
0x804ac2c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804ac3c:   95 dd ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804ac4c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804ac5c:   fe dd ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804ac6c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804ac7c:   10 de ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804ac8c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804ac9c:   20 de ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   | ...E....A....B.|
0x804acac:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804acbc:   45 de ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |E...?....A....B.|
0x804accc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804acdc:   64 de ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |d...2....A....B.|
0x804acec:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804acfc:   76 de ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |v...,....A....B.|
0x804ad0c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804ad1c:   82 de ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804ad2c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804ad3c:   80 de ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804ad4c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804ad5c:   88 de ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ad6c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804ad7c:   8d de ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ad8c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804ad9c:   92 de ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804adac:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804adbc:   a9 de ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804adcc:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804addc:   bd de ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804adec:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804adfc:   60 05 00 00 eb de ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804ae0c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804ae1c:   1c 00 00 00 84 05 00 00  13 df ff ff 37 00 00 00   |............7...|
0x804ae2c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804ae3c:   1c 00 00 00 a4 05 00 00  2a df ff ff 31 00 00 00   |........*...1...|
0x804ae4c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804ae5c:   1c 00 00 00 c4 05 00 00  3b df ff ff 1f 00 00 00   |........;.......|
0x804ae6c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804ae7c:   1c 00 00 00 e4 05 00 00  3a df ff ff 2a 00 00 00   |........:...*...|
0x804ae8c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804ae9c:   1c 00 00 00 04 06 00 00  44 df ff ff 28 00 00 00   |........D...(...|
0x804aeac:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804aebc:   1c 00 00 00 24 06 00 00  4c df ff ff 29 00 00 00   |....$...L...)...|
0x804aecc:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804aedc:   1c 00 00 00 44 06 00 00  55 df ff ff 3c 00 00 00   |....D...U...<...|
0x804aeec:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804aefc:   1c 00 00 00 64 06 00 00  71 df ff ff 3a 00 00 00   |....d...q...:...|
0x804af0c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804af1c:   20 00 00 00 84 06 00 00  8b df ff ff 53 00 00 00   | ...........S...|
0x804af2c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804af3c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 ba df ff ff   |.... ...........|
0x804af4c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804af5c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804af6c:   e3 df ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804af7c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804af8c:   fb df ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804af9c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804afac:   0d e0 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804afbc:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804afcc:   01 e0 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804afdc:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804afec:   f8 df ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804affc:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b00c:   ed df ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b01c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b02c:   e3 df ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b03c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b04c:   ea df ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b05c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b06c:   ef df ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b07c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b08c:   0e e0 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b09c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b0ac:   27 e0 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |'...,....A....B.|
0x804b0bc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b0cc:   33 e0 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |3...&....A....B.|
0x804b0dc:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b0ec:   39 e0 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |9...B....A....B.|
0x804b0fc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b10c:   5b e0 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |[...B....A....B.|
0x804b11c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b12c:   7d e0 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |}...B....A....B.|
0x804b13c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b14c:   9f e0 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804b15c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b16c:   f4 e0 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b17c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b18c:   31 e1 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |1...]....A....B.|
0x804b19c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b1ac:   6e e1 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |n...]....A....B.|
0x804b1bc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b1cc:   ab e1 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b1dc:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b1ec:   1b e2 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804b1fc:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b20c:   5f e2 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |_...p....A....B.|
0x804b21c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b22c:   af e2 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b23c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b24c:   b0 09 00 00 d2 e2 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804b25c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b26c:   d0 09 00 00 07 e3 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804b27c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b28c:   20 00 00 00 f4 09 00 00  2a e3 ff ff 68 00 00 00   | .......*...h...|
0x804b29c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b2ac:   0c 04 04 00 2c 00 00 00  18 0a 00 00 6e e3 ff ff   |....,.......n...|
0x804b2bc:   1c 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804b2cc:   86 04 83 05 03 0f 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804b2dc:   04 00 00 00 2c 00 00 00  48 0a 00 00 5a e4 ff ff   |....,...H...Z...|
0x804b2ec:   e8 09 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804b2fc:   86 04 83 05 03 d8 09 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804b30c:   04 00 00 00 34 00 00 00  78 0a 00 00 12 ee ff ff   |....4...x.......|
0x804b31c:   f6 02 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804b32c:   0f 03 75 78 06 10 03 02  75 7c 03 e1 02 c1 0c 01   |..ux....u|......|
0x804b33c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804b34c:   b0 0a 00 00 d0 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804b35c:   48 00 00 00 c4 0a 00 00  cc f0 ff ff 5d 00 00 00   |H...........]...|
0x804b36c:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x804b37c:   41 0e 14 83 05 4e 0e 20  69 0e 24 41 0e 28 44 0e   |A....N. i.$A.(D.|
0x804b38c:   2c 44 0e 30 4d 0e 20 47  0e 14 41 c3 0e 10 41 c6   |,D.0M. G..A...A.|
0x804b39c:   0e 0c 41 c7 0e 08 41 c5  0e 04 00 00 10 00 00 00   |..A...A.........|
0x804b3ac:   10 0b 00 00 e0 f0 ff ff  02 00 00 00 00 00 00 00   |................|
0x804b3bc:   00 00 00 00 ??                                     |....?           |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 94 a4 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff ff ff ff ff   |................|
0x804d028:   02 00 00 00 76 95 5a 98  05 00 00 00 90 b0 cc 94   |....v.Z.........|
0x804d038:   83 00 00 00 01 00 00 00  a3 bd be b3 b7 cf 00 00   |................|
0x804d048:   ff ff ff ff c0 00 00 00  01 00 00 00 94 67 29 4f   |.............g)O|
0x804d058:   fe ff ff ff ff ff ff ff  fa ff ff ff 01 00 00 00   |................|
0x804d068:   fe ff ff ff 4d a2 ??                               |....M.?         |
