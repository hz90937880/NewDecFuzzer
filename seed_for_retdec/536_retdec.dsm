;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:42:55
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 80 d0 ff ff               	lea eax, [ebx - 0x2f80]
0x804835c:   50                              	push eax
0x804835d:   8d 83 20 d0 ff ff               	lea eax, [ebx - 0x2fe0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 07 ac 04 08               	mov eax, 0x804ac07
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 88 e0 04 08                  	mov eax, 0x804e088
0x80483a5:   3d 88 e0 04 08                  	cmp eax, 0x804e088
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 88 e0 04 08                  	push 0x804e088
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 88 e0 04 08                  	mov eax, 0x804e088
0x80483e5:   2d 88 e0 04 08                  	sub eax, 0x804e088
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 88 e0 04 08                  	push 0x804e088
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d a0 e0 04 08 00            	cmp byte ptr [0x804e0a0], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 a0 e0 04 08 01            	mov byte ptr [0x804e0a0], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 b2 2b 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 9e 2b 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 a0 d0 ff ff               	lea edx, [eax - 0x2f60]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 71 2b 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 53 2b 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 2b 2b 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 01 2b 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 d8 2a 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 95 2a 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 53 2a 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 fb 29 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 aa 29 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 6d 29 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 36 29 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 17 29 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 ed 28 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 c1 28 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 96 28 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 4d 28 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 05 28 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 ab 27 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 58 27 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 19 27 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 e3 26 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 c1 26 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 73 26 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 37 26 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 ae 25 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 7c 25 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 4c 25 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 07 25 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 c8 24 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 96 24 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 67 24 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 49 24 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 21 24 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 fc 23 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 d7 23 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 a0 23 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 6b 23 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 19 23 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 ce 22 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 97 22 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 66 22 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 47 22 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 1d 22 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 f5 21 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 cc 21 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 90 21 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 55 21 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 02 21 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 b6 20 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 7e 20 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 4f 20 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 3b 20 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 24 20 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 0f 20 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 f9 1f 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 d2 1f 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 ad 1f 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 6e 1f 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 35 1f 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 09 1f 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 e3 1e 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 a4 d1 ff ff               	fld dword ptr [eax - 0x2e5c]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 a4 d1 ff ff               	fld dword ptr [eax - 0x2e5c]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 a8 d1 ff ff               	fld dword ptr [eax - 0x2e58]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 a1 1e 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 a4 d1 ff ff               	fld dword ptr [eax - 0x2e5c]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 a4 d1 ff ff               	fld dword ptr [eax - 0x2e5c]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 a8 d1 ff ff               	fld dword ptr [eax - 0x2e58]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 5f 1e 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 ac d1 ff ff               	fld dword ptr [eax - 0x2e54]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 b0 d1 ff ff               	fld dword ptr [eax - 0x2e50]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 b4 d1 ff ff               	fld dword ptr [eax - 0x2e4c]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 1d 1e 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 b8 d1 ff ff               	fld dword ptr [eax - 0x2e48]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 bc d1 ff ff               	fld dword ptr [eax - 0x2e44]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 c0 d1 ff ff               	fld dword ptr [eax - 0x2e40]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 a5 1d 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 c8 d1 ff ff               	fld qword ptr [eax - 0x2e38]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 c8 d1 ff ff               	fld qword ptr [eax - 0x2e38]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 d0 d1 ff ff               	fld qword ptr [eax - 0x2e30]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 48 1d 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 c8 d1 ff ff               	fld qword ptr [eax - 0x2e38]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 c8 d1 ff ff               	fld qword ptr [eax - 0x2e38]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 d0 d1 ff ff               	fld qword ptr [eax - 0x2e30]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 eb 1c 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 d8 d1 ff ff               	fld qword ptr [eax - 0x2e28]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 e0 d1 ff ff               	fld qword ptr [eax - 0x2e20]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 e8 d1 ff ff               	fld qword ptr [eax - 0x2e18]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 8e 1c 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 f0 d1 ff ff               	fld qword ptr [eax - 0x2e10]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 f8 d1 ff ff               	fld qword ptr [eax - 0x2e08]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 00 d2 ff ff               	fld qword ptr [eax - 0x2e00]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 fe 1b 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 08 d2 ff ff               	fld dword ptr [eax - 0x2df8]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 0c d2 ff ff               	fld dword ptr [eax - 0x2df4]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 9a 1b 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 c0 00 00 00            	mov dword ptr [eax + edx*4 + 0xc0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 29 1b 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 c0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xc0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 e6 1a 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 b0 d0 ff ff               	lea eax, [ebx - 0x2f50]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 d4 d0 ff ff               	lea eax, [ebx - 0x2f2c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804980c
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 60                        	sub esp, 0x60
0x804962f:   e8 e0 19 00 00                  	call 0x804b014 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 49 00 00               	add edx, 0x49cc
0x804963a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804963d:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049640:   8b 4d 10                        	mov ecx, dword ptr [ebp + 0x10]
0x8049643:   8b 5d 18                        	mov ebx, dword ptr [ebp + 0x18]
0x8049646:   8b 75 30                        	mov esi, dword ptr [ebp + 0x30]
0x8049649:   8b 7d 3c                        	mov edi, dword ptr [ebp + 0x3c]
0x804964c:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x804964f:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049652:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049655:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049658:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x804965b:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804965e:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x8049661:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049664:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049667:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804966a:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x804966d:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049670:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x8049673:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049676:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x8049679:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804967c:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x804967f:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049682:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x8049686:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x804968a:   89 c8                           	mov eax, ecx
0x804968c:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x804968f:   89 d8                           	mov eax, ebx
0x8049691:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x8049695:   89 f0                           	mov eax, esi
0x8049697:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x804969b:   89 f8                           	mov eax, edi
0x804969d:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x80496a0:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x80496a4:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496a8:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x80496ac:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496b0:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x80496b4:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496b7:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496bb:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496bf:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80496c3:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496c7:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496cb:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x80496cf:   0f b6 45 9c                     	movzx eax, byte ptr [ebp - 0x64]
0x80496d3:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x80496d6:   0f b6 45 98                     	movzx eax, byte ptr [ebp - 0x68]
0x80496da:   88 45 c0                        	mov byte ptr [ebp - 0x40], al
0x80496dd:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x80496e1:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x80496e4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80496e7:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x80496ed:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x80496f1:   66 89 82 28 00 00 00            	mov word ptr [edx + 0x28], ax
0x80496f8:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x80496fc:   88 82 2a 00 00 00               	mov byte ptr [edx + 0x2a], al
0x8049702:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x8049705:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x804970b:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x804970f:   66 89 82 30 00 00 00            	mov word ptr [edx + 0x30], ax
0x8049716:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x8049719:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x804971f:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x8049722:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x8049728:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x804972b:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x8049731:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x8049734:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x804973a:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x804973d:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x8049743:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049747:   66 89 82 48 00 00 00            	mov word ptr [edx + 0x48], ax
0x804974e:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x8049751:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x8049757:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x804975a:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x8049760:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049764:   88 82 54 00 00 00               	mov byte ptr [edx + 0x54], al
0x804976a:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804976e:   66 89 82 56 00 00 00            	mov word ptr [edx + 0x56], ax
0x8049775:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x8049779:   66 89 82 58 00 00 00            	mov word ptr [edx + 0x58], ax
0x8049780:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x8049784:   88 82 5a 00 00 00               	mov byte ptr [edx + 0x5a], al
0x804978a:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804978e:   66 89 82 5c 00 00 00            	mov word ptr [edx + 0x5c], ax
0x8049795:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049798:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x804979e:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x80497a2:   66 89 82 64 00 00 00            	mov word ptr [edx + 0x64], ax
0x80497a9:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x80497ac:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x80497b2:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x80497b5:   89 82 6c 00 00 00               	mov dword ptr [edx + 0x6c], eax
0x80497bb:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x80497bf:   66 89 82 70 00 00 00            	mov word ptr [edx + 0x70], ax
0x80497c6:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x80497c9:   89 82 74 00 00 00               	mov dword ptr [edx + 0x74], eax
0x80497cf:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x80497d2:   89 82 78 00 00 00               	mov dword ptr [edx + 0x78], eax
0x80497d8:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x80497dc:   88 82 7c 00 00 00               	mov byte ptr [edx + 0x7c], al
0x80497e2:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x80497e5:   89 82 80 00 00 00               	mov dword ptr [edx + 0x80], eax
0x80497eb:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x80497ef:   88 82 84 00 00 00               	mov byte ptr [edx + 0x84], al
0x80497f5:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x80497f9:   88 82 85 00 00 00               	mov byte ptr [edx + 0x85], al
0x80497ff:   b8 00 00 00 00                  	mov eax, 0
0x8049804:   83 c4 60                        	add esp, 0x60
0x8049807:   5b                              	pop ebx
0x8049808:   5e                              	pop esi
0x8049809:   5f                              	pop edi
0x804980a:   5d                              	pop ebp
0x804980b:   c3                              	ret 
; function: func_1 at 0x804980c -- 0x804ac07
0x804980c:   55                              	push ebp
0x804980d:   89 e5                           	mov ebp, esp
0x804980f:   57                              	push edi
0x8049810:   56                              	push esi
0x8049811:   53                              	push ebx
0x8049812:   81 ec 70 01 00 00               	sub esp, 0x170
0x8049818:   e8 f3 17 00 00                  	call 0x804b010 <__x86.get_pc_thunk.ax>
0x804981d:   05 e3 47 00 00                  	add eax, 0x47e3
0x8049822:   c7 45 a4 64 b0 be 39            	mov dword ptr [ebp - 0x5c], 0x39beb064
0x8049829:   66 c7 45 ea ff ff               	mov word ptr [ebp - 0x16], 0xffff
0x804982f:   c6 45 e9 f5                     	mov byte ptr [ebp - 0x17], 0xf5
0x8049833:   c7 45 e4 79 b3 06 57            	mov dword ptr [ebp - 0x1c], 0x5706b379
0x804983a:   66 c7 45 e2 8b 05               	mov word ptr [ebp - 0x1e], 0x58b
0x8049840:   c7 45 a0 01 00 00 00            	mov dword ptr [ebp - 0x60], 1
0x8049847:   c7 45 9c f6 ff ff ff            	mov dword ptr [ebp - 0x64], 0xfffffff6
0x804984e:   c7 45 f0 19 f0 d9 1b            	mov dword ptr [ebp - 0x10], 0x1bd9f019
0x8049855:   c7 45 98 80 d7 bf 80            	mov dword ptr [ebp - 0x68], 0x80bfd780
0x804985c:   c7 45 ec 0c 34 be 0e            	mov dword ptr [ebp - 0x14], 0xebe340c
0x8049863:   66 c7 45 e0 51 eb               	mov word ptr [ebp - 0x20], 0xeb51
0x8049869:   c7 45 dc ff ff ff ff            	mov dword ptr [ebp - 0x24], 0xffffffff
0x8049870:   c7 45 d8 9b a0 bb d4            	mov dword ptr [ebp - 0x28], 0xd4bba09b
0x8049877:   c6 45 d7 32                     	mov byte ptr [ebp - 0x29], 0x32
0x804987b:   66 c7 45 d4 6c 94               	mov word ptr [ebp - 0x2c], 0x946c
0x8049881:   66 c7 45 d2 ff ff               	mov word ptr [ebp - 0x2e], 0xffff
0x8049887:   c6 45 97 15                     	mov byte ptr [ebp - 0x69], 0x15
0x804988b:   66 c7 45 94 8a 6e               	mov word ptr [ebp - 0x6c], 0x6e8a
0x8049891:   c7 45 90 e4 2c c1 e9            	mov dword ptr [ebp - 0x70], 0xe9c12ce4
0x8049898:   66 c7 45 d0 fe 91               	mov word ptr [ebp - 0x30], 0x91fe
0x804989e:   c7 45 8c ff ff ff ff            	mov dword ptr [ebp - 0x74], 0xffffffff
0x80498a5:   c7 45 cc 94 69 65 82            	mov dword ptr [ebp - 0x34], 0x82656994
0x80498ac:   66 c7 45 ca 06 00               	mov word ptr [ebp - 0x36], 6
0x80498b2:   c7 45 c4 3f 0b 39 85            	mov dword ptr [ebp - 0x3c], 0x85390b3f
0x80498b9:   c7 45 c0 c4 00 46 d1            	mov dword ptr [ebp - 0x40], 0xd14600c4
0x80498c0:   c6 45 bf 86                     	mov byte ptr [ebp - 0x41], 0x86
0x80498c4:   c7 45 88 b2 1b b6 51            	mov dword ptr [ebp - 0x78], 0x51b61bb2
0x80498cb:   c7 45 84 6f 1f a2 5a            	mov dword ptr [ebp - 0x7c], 0x5aa21f6f
0x80498d2:   c6 45 be 08                     	mov byte ptr [ebp - 0x42], 8
0x80498d6:   c6 45 83 09                     	mov byte ptr [ebp - 0x7d], 9
0x80498da:   c6 45 82 01                     	mov byte ptr [ebp - 0x7e], 1
0x80498de:   c7 45 b8 f9 ff ff ff            	mov dword ptr [ebp - 0x48], 0xfffffff9
0x80498e5:   c7 45 b4 fc ff ff ff            	mov dword ptr [ebp - 0x4c], 0xfffffffc
0x80498ec:   c7 45 b0 5e 32 27 3f            	mov dword ptr [ebp - 0x50], 0x3f27325e
0x80498f3:   c7 85 7c ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0x84], 5
0x80498fd:   c6 85 7b ff ff ff 1c            	mov byte ptr [ebp - 0x85], 0x1c
0x8049904:   80 7d 82 00                     	cmp byte ptr [ebp - 0x7e], 0
0x8049908:   74 1c                           	je 0x8049926 <func_1+0x11a>
0x804990a:   0f b6 45 82                     	movzx eax, byte ptr [ebp - 0x7e]
0x804990e:   88 45 e9                        	mov byte ptr [ebp - 0x17], al
0x8049911:   0f b6 45 82                     	movzx eax, byte ptr [ebp - 0x7e]
0x8049915:   83 c8 0a                        	or eax, 0xa
0x8049918:   38 45 82                        	cmp byte ptr [ebp - 0x7e], al
0x804991b:   0f 95 c0                        	setne al
0x804991e:   0f b6 c0                        	movzx eax, al
0x8049921:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x8049925:   90                              	nop 
0x8049926:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049929:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804992c:   0f b6 55 82                     	movzx edx, byte ptr [ebp - 0x7e]
0x8049930:   0f b6 45 82                     	movzx eax, byte ptr [ebp - 0x7e]
0x8049934:   0f af d0                        	imul edx, eax
0x8049937:   0f b6 45 82                     	movzx eax, byte ptr [ebp - 0x7e]
0x804993b:   39 c2                           	cmp edx, eax
0x804993d:   7f 07                           	jg 0x8049946 <func_1+0x13a>
0x804993f:   ba 00 a0 4f 01                  	mov edx, 0x14fa000
0x8049944:   eb 05                           	jmp 0x804994b <func_1+0x13f>
0x8049946:   ba 00 80 4f 01                  	mov edx, 0x14f8000
0x804994b:   0f b6 45 82                     	movzx eax, byte ptr [ebp - 0x7e]
0x804994f:   39 c2                           	cmp edx, eax
0x8049951:   0f 9c c0                        	setl al
0x8049954:   0f b6 d0                        	movzx edx, al
0x8049957:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x804995b:   39 c2                           	cmp edx, eax
0x804995d:   0f 9f c0                        	setg al
0x8049960:   0f b6 c0                        	movzx eax, al
0x8049963:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049966:   66 c7 45 ea e4 ff               	mov word ptr [ebp - 0x16], 0xffe4
0x804996c:   e9 a3 11 00 00                  	jmp 0x804ab14 <func_1+0x1308>
0x8049971:   66 c7 85 78 ff ff ff 08 00      	mov word ptr [ebp - 0x88], 8
0x804997a:   c7 85 74 ff ff ff db 9a f2 58   	mov dword ptr [ebp - 0x8c], 0x58f29adb
0x8049984:   c7 45 ac 31 f9 75 3a            	mov dword ptr [ebp - 0x54], 0x3a75f931
0x804998b:   c7 85 70 ff ff ff 08 d4 27 46   	mov dword ptr [ebp - 0x90], 0x4627d408
0x8049995:   c7 85 6c ff ff ff 03 50 e2 39   	mov dword ptr [ebp - 0x94], 0x39e25003
0x804999f:   c7 85 68 ff ff ff dd 00 2f 09   	mov dword ptr [ebp - 0x98], 0x92f00dd
0x80499a9:   c7 85 64 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x9c], 0
0x80499b3:   c6 85 63 ff ff ff 4d            	mov byte ptr [ebp - 0x9d], 0x4d
0x80499ba:   66 c7 85 60 ff ff ff fb ff      	mov word ptr [ebp - 0xa0], 0xfffb
0x80499c3:   c7 85 5c ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xa4], 0xfffffffc
0x80499cd:   66 83 bd 78 ff ff ff 00         	cmp word ptr [ebp - 0x88], 0
0x80499d5:   0f 84 18 02 00 00               	je 0x8049bf3 <func_1+0x3e7>
0x80499db:   66 c7 85 52 ff ff ff f2 46      	mov word ptr [ebp - 0xae], 0x46f2
0x80499e4:   c7 85 4c ff ff ff ec e0 55 1d   	mov dword ptr [ebp - 0xb4], 0x1d55e0ec
0x80499ee:   c7 85 48 ff ff ff 07 9e 8b 35   	mov dword ptr [ebp - 0xb8], 0x358b9e07
0x80499f8:   0f b7 85 52 ff ff ff            	movzx eax, word ptr [ebp - 0xae]
0x80499ff:   83 e8 01                        	sub eax, 1
0x8049a02:   66 89 85 52 ff ff ff            	mov word ptr [ebp - 0xae], ax
0x8049a09:   66 83 bd 78 ff ff ff 00         	cmp word ptr [ebp - 0x88], 0
0x8049a11:   74 07                           	je 0x8049a1a <func_1+0x20e>
0x8049a13:   b8 61 00 00 00                  	mov eax, 0x61
0x8049a18:   eb 05                           	jmp 0x8049a1f <func_1+0x213>
0x8049a1a:   b8 60 00 00 00                  	mov eax, 0x60
0x8049a1f:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049a22:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049a25:   0f b6 c0                        	movzx eax, al
0x8049a28:   01 c0                           	add eax, eax
0x8049a2a:   83 f8 08                        	cmp eax, 8
0x8049a2d:   0f 9e c0                        	setle al
0x8049a30:   0f b6 c0                        	movzx eax, al
0x8049a33:   8b 95 4c ff ff ff               	mov edx, dword ptr [ebp - 0xb4]
0x8049a39:   09 d0                           	or eax, edx
0x8049a3b:   0f bf d0                        	movsx edx, ax
0x8049a3e:   0f b6 45 82                     	movzx eax, byte ptr [ebp - 0x7e]
0x8049a42:   89 c1                           	mov ecx, eax
0x8049a44:   d3 e2                           	shl edx, cl
0x8049a46:   89 d0                           	mov eax, edx
0x8049a48:   09 45 e4                        	or dword ptr [ebp - 0x1c], eax
0x8049a4b:   66 83 45 e2 01                  	add word ptr [ebp - 0x1e], 1
0x8049a50:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x8049a54:   66 c1 e8 05                     	shr ax, 5
0x8049a58:   0f b7 c0                        	movzx eax, ax
0x8049a5b:   f7 d0                           	not eax
0x8049a5d:   89 c1                           	mov ecx, eax
0x8049a5f:   83 7d f0 01                     	cmp dword ptr [ebp - 0x10], 1
0x8049a63:   75 06                           	jne 0x8049a6b <func_1+0x25f>
0x8049a65:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049a69:   74 07                           	je 0x8049a72 <func_1+0x266>
0x8049a6b:   b8 01 00 00 00                  	mov eax, 1
0x8049a70:   eb 05                           	jmp 0x8049a77 <func_1+0x26b>
0x8049a72:   b8 00 00 00 00                  	mov eax, 0
0x8049a77:   89 c6                           	mov esi, eax
0x8049a79:   b8 57 1d 00 00                  	mov eax, 0x1d57
0x8049a7e:   ba 00 00 00 00                  	mov edx, 0
0x8049a83:   66 f7 f6                        	div si
0x8049a86:   0f b7 c0                        	movzx eax, ax
0x8049a89:   39 c1                           	cmp ecx, eax
0x8049a8b:   0f 9e c0                        	setle al
0x8049a8e:   0f b6 c0                        	movzx eax, al
0x8049a91:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049a94:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049a98:   0f 84 db 00 00 00               	je 0x8049b79 <func_1+0x36d>
0x8049a9e:   0f b6 45 83                     	movzx eax, byte ptr [ebp - 0x7d]
0x8049aa2:   0f be 55 be                     	movsx edx, byte ptr [ebp - 0x42]
0x8049aa6:   0f b6 4d bf                     	movzx ecx, byte ptr [ebp - 0x41]
0x8049aaa:   0f b7 75 ca                     	movzx esi, word ptr [ebp - 0x36]
0x8049aae:   0f b7 7d d0                     	movzx edi, word ptr [ebp - 0x30]
0x8049ab2:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x8049ab8:   0f bf 5d 94                     	movsx ebx, word ptr [ebp - 0x6c]
0x8049abc:   89 9d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ebx
0x8049ac2:   0f be 7d 97                     	movsx edi, byte ptr [ebp - 0x69]
0x8049ac6:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x8049acc:   0f bf 5d d2                     	movsx ebx, word ptr [ebp - 0x2e]
0x8049ad0:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x8049ad6:   0f b7 7d d4                     	movzx edi, word ptr [ebp - 0x2c]
0x8049ada:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x8049ae0:   0f be 5d d7                     	movsx ebx, byte ptr [ebp - 0x29]
0x8049ae4:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x8049aea:   0f bf 7d e0                     	movsx edi, word ptr [ebp - 0x20]
0x8049aee:   89 bd 88 fe ff ff               	mov dword ptr [ebp - 0x178], edi
0x8049af4:   0f b7 5d e2                     	movzx ebx, word ptr [ebp - 0x1e]
0x8049af8:   89 9d 84 fe ff ff               	mov dword ptr [ebp - 0x17c], ebx
0x8049afe:   0f be 7d e9                     	movsx edi, byte ptr [ebp - 0x17]
0x8049b02:   0f bf 5d ea                     	movsx ebx, word ptr [ebp - 0x16]
0x8049b06:   50                              	push eax
0x8049b07:   52                              	push edx
0x8049b08:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049b0b:   51                              	push ecx
0x8049b0c:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049b0f:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049b12:   56                              	push esi
0x8049b13:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049b16:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049b19:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049b1f:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049b22:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049b28:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x8049b2e:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x8049b34:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x8049b3a:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x8049b40:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049b43:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049b46:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x8049b4c:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049b4f:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x8049b52:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049b55:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x8049b58:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x8049b5b:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x8049b61:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049b64:   57                              	push edi
0x8049b65:   53                              	push ebx
0x8049b66:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x8049b69:   e8 b8 fa ff ff                  	call 0x8049626 <set_var>
0x8049b6e:   83 c4 74                        	add esp, 0x74
0x8049b71:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049b74:   e9 86 10 00 00                  	jmp 0x804abff <func_1+0x13f3>
0x8049b79:   c6 85 47 ff ff ff c3            	mov byte ptr [ebp - 0xb9], 0xc3
0x8049b80:   80 ad 47 ff ff ff 01            	sub byte ptr [ebp - 0xb9], 1
0x8049b87:   0f bf 4d ea                     	movsx ecx, word ptr [ebp - 0x16]
0x8049b8b:   0f b7 9d 78 ff ff ff            	movzx ebx, word ptr [ebp - 0x88]
0x8049b92:   83 7d f0 ff                     	cmp dword ptr [ebp - 0x10], -1
0x8049b96:   0f 94 c0                        	sete al
0x8049b99:   0f b6 c0                        	movzx eax, al
0x8049b9c:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x8049b9f:   0f 97 c0                        	seta al
0x8049ba2:   0f b6 c0                        	movzx eax, al
0x8049ba5:   0f b6 b5 47 ff ff ff            	movzx esi, byte ptr [ebp - 0xb9]
0x8049bac:   99                              	cdq 
0x8049bad:   f7 fe                           	idiv esi
0x8049baf:   39 c3                           	cmp ebx, eax
0x8049bb1:   0f 9d c0                        	setge al
0x8049bb4:   0f b6 c0                        	movzx eax, al
0x8049bb7:   39 c1                           	cmp ecx, eax
0x8049bb9:   0f 94 c0                        	sete al
0x8049bbc:   0f b6 c0                        	movzx eax, al
0x8049bbf:   39 85 48 ff ff ff               	cmp dword ptr [ebp - 0xb8], eax
0x8049bc5:   0f 9f c0                        	setg al
0x8049bc8:   0f b6 c0                        	movzx eax, al
0x8049bcb:   21 45 e4                        	and dword ptr [ebp - 0x1c], eax
0x8049bce:   83 bd 74 ff ff ff 00            	cmp dword ptr [ebp - 0x8c], 0
0x8049bd5:   75 06                           	jne 0x8049bdd <func_1+0x3d1>
0x8049bd7:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x8049bdb:   74 07                           	je 0x8049be4 <func_1+0x3d8>
0x8049bdd:   b8 01 00 00 00                  	mov eax, 1
0x8049be2:   eb 05                           	jmp 0x8049be9 <func_1+0x3dd>
0x8049be4:   b8 00 00 00 00                  	mov eax, 0
0x8049be9:   f7 d0                           	not eax
0x8049beb:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049bee:   e9 63 01 00 00                  	jmp 0x8049d56 <func_1+0x54a>
0x8049bf3:   c7 85 58 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xa8], 1
0x8049bfd:   c7 85 54 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xac], 0xffffffff
0x8049c07:   c7 45 f0 0b 00 00 00            	mov dword ptr [ebp - 0x10], 0xb
0x8049c0e:   83 7d f0 18                     	cmp dword ptr [ebp - 0x10], 0x18
0x8049c12:   0f 84 de 00 00 00               	je 0x8049cf6 <func_1+0x4ea>
0x8049c18:   0f b6 45 83                     	movzx eax, byte ptr [ebp - 0x7d]
0x8049c1c:   0f be 55 be                     	movsx edx, byte ptr [ebp - 0x42]
0x8049c20:   0f b6 4d bf                     	movzx ecx, byte ptr [ebp - 0x41]
0x8049c24:   0f b7 75 ca                     	movzx esi, word ptr [ebp - 0x36]
0x8049c28:   0f b7 7d d0                     	movzx edi, word ptr [ebp - 0x30]
0x8049c2c:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x8049c32:   0f bf 5d 94                     	movsx ebx, word ptr [ebp - 0x6c]
0x8049c36:   89 9d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ebx
0x8049c3c:   0f be 7d 97                     	movsx edi, byte ptr [ebp - 0x69]
0x8049c40:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x8049c46:   0f bf 5d d2                     	movsx ebx, word ptr [ebp - 0x2e]
0x8049c4a:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x8049c50:   0f b7 7d d4                     	movzx edi, word ptr [ebp - 0x2c]
0x8049c54:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x8049c5a:   0f be 5d d7                     	movsx ebx, byte ptr [ebp - 0x29]
0x8049c5e:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x8049c64:   0f bf 7d e0                     	movsx edi, word ptr [ebp - 0x20]
0x8049c68:   89 bd 88 fe ff ff               	mov dword ptr [ebp - 0x178], edi
0x8049c6e:   0f b7 5d e2                     	movzx ebx, word ptr [ebp - 0x1e]
0x8049c72:   89 9d 84 fe ff ff               	mov dword ptr [ebp - 0x17c], ebx
0x8049c78:   0f be 7d e9                     	movsx edi, byte ptr [ebp - 0x17]
0x8049c7c:   0f bf 5d ea                     	movsx ebx, word ptr [ebp - 0x16]
0x8049c80:   50                              	push eax
0x8049c81:   52                              	push edx
0x8049c82:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049c85:   51                              	push ecx
0x8049c86:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049c89:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049c8c:   56                              	push esi
0x8049c8d:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049c90:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049c93:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049c99:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049c9c:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049ca2:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x8049ca8:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x8049cae:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x8049cb4:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x8049cba:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049cbd:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049cc0:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x8049cc6:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049cc9:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x8049ccc:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049ccf:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x8049cd2:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x8049cd5:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x8049cdb:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049cde:   57                              	push edi
0x8049cdf:   53                              	push ebx
0x8049ce0:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x8049ce3:   e8 3e f9 ff ff                  	call 0x8049626 <set_var>
0x8049ce8:   83 c4 74                        	add esp, 0x74
0x8049ceb:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x8049cf1:   e9 09 0f 00 00                  	jmp 0x804abff <func_1+0x13f3>
0x8049cf6:   83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x8049cfa:   0f b7 55 e2                     	movzx edx, word ptr [ebp - 0x1e]
0x8049cfe:   0f b6 45 82                     	movzx eax, byte ptr [ebp - 0x7e]
0x8049d02:   09 d0                           	or eax, edx
0x8049d04:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049d07:   80 7d e9 01                     	cmp byte ptr [ebp - 0x17], 1
0x8049d0b:   0f 9e c0                        	setle al
0x8049d0e:   0f b6 d0                        	movzx edx, al
0x8049d11:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049d14:   98                              	cwde 
0x8049d15:   01 d0                           	add eax, edx
0x8049d17:   85 c0                           	test eax, eax
0x8049d19:   75 04                           	jne 0x8049d1f <func_1+0x513>
0x8049d1b:   80 7d e9 00                     	cmp byte ptr [ebp - 0x17], 0
0x8049d1f:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049d22:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x8049d26:   0f b6 45 82                     	movzx eax, byte ptr [ebp - 0x7e]
0x8049d2a:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049d2d:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049d31:   75 05                           	jne 0x8049d38 <func_1+0x52c>
0x8049d33:   66 83 7d e2 00                  	cmp word ptr [ebp - 0x1e], 0
0x8049d38:   0f b6 55 82                     	movzx edx, byte ptr [ebp - 0x7e]
0x8049d3c:   66 81 7d e2 39 a8               	cmp word ptr [ebp - 0x1e], 0xa839
0x8049d42:   0f 96 c0                        	setbe al
0x8049d45:   0f b6 c0                        	movzx eax, al
0x8049d48:   39 c2                           	cmp edx, eax
0x8049d4a:   0f 9c c0                        	setl al
0x8049d4d:   0f b6 c0                        	movzx eax, al
0x8049d50:   89 85 58 ff ff ff               	mov dword ptr [ebp - 0xa8], eax
0x8049d56:   0f b7 95 78 ff ff ff            	movzx edx, word ptr [ebp - 0x88]
0x8049d5d:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x8049d61:   39 c2                           	cmp edx, eax
0x8049d63:   0f 94 c0                        	sete al
0x8049d66:   89 c2                           	mov edx, eax
0x8049d68:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049d6b:   89 c1                           	mov ecx, eax
0x8049d6d:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049d70:   31 c8                           	xor eax, ecx
0x8049d72:   09 d0                           	or eax, edx
0x8049d74:   0f b6 d0                        	movzx edx, al
0x8049d77:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049d7a:   0f b6 c0                        	movzx eax, al
0x8049d7d:   0f af c2                        	imul eax, edx
0x8049d80:   39 45 b4                        	cmp dword ptr [ebp - 0x4c], eax
0x8049d83:   0f 9f c0                        	setg al
0x8049d86:   0f b6 c0                        	movzx eax, al
0x8049d89:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049d8c:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049d8f:   0f bf d0                        	movsx edx, ax
0x8049d92:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049d95:   98                              	cwde 
0x8049d96:   89 c1                           	mov ecx, eax
0x8049d98:   d3 e2                           	shl edx, cl
0x8049d9a:   89 d0                           	mov eax, edx
0x8049d9c:   3d 2d a1 00 00                  	cmp eax, 0xa12d
0x8049da1:   0f 9e c0                        	setle al
0x8049da4:   0f b6 c0                        	movzx eax, al
0x8049da7:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049daa:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049dad:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049db0:   0f b7 85 78 ff ff ff            	movzx eax, word ptr [ebp - 0x88]
0x8049db7:   83 4d dc 01                     	or dword ptr [ebp - 0x24], 1
0x8049dbb:   8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x8049dbe:   81 c2 2e 8b fa 36               	add edx, 0x36fa8b2e
0x8049dc4:   21 d0                           	and eax, edx
0x8049dc6:   85 c0                           	test eax, eax
0x8049dc8:   0f 84 cb 0a 00 00               	je 0x804a899 <func_1+0x108d>
0x8049dce:   c7 85 3c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xc4], 0
0x8049dd8:   c7 85 38 ff ff ff 66 31 36 16   	mov dword ptr [ebp - 0xc8], 0x16363166
0x8049de2:   c7 85 34 ff ff ff 07 00 00 00   	mov dword ptr [ebp - 0xcc], 7
0x8049dec:   c7 45 a8 01 00 00 00            	mov dword ptr [ebp - 0x58], 1
0x8049df3:   66 c7 85 32 ff ff ff 98 b9      	mov word ptr [ebp - 0xce], 0xb998
0x8049dfc:   c6 85 31 ff ff ff 00            	mov byte ptr [ebp - 0xcf], 0
0x8049e03:   66 c7 85 2e ff ff ff 79 b1      	mov word ptr [ebp - 0xd2], 0xb179
0x8049e0c:   c6 85 2d ff ff ff ff            	mov byte ptr [ebp - 0xd3], 0xff
0x8049e13:   66 c7 85 2a ff ff ff fd 4a      	mov word ptr [ebp - 0xd6], 0x4afd
0x8049e1c:   c7 85 24 ff ff ff 30 25 d2 de   	mov dword ptr [ebp - 0xdc], 0xded22530
0x8049e26:   83 bd 3c ff ff ff 00            	cmp dword ptr [ebp - 0xc4], 0
0x8049e2d:   0f 84 b4 02 00 00               	je 0x804a0e7 <func_1+0x8db>
0x8049e33:   66 c7 85 f4 fe ff ff 04 00      	mov word ptr [ebp - 0x10c], 4
0x8049e3c:   66 c7 85 f2 fe ff ff 17 93      	mov word ptr [ebp - 0x10e], 0x9317
0x8049e45:   8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x8049e48:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049e4b:   29 c2                           	sub edx, eax
0x8049e4d:   89 d0                           	mov eax, edx
0x8049e4f:   f7 d8                           	neg eax
0x8049e51:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x8049e57:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x8049e5d:   c0 e8 02                        	shr al, 2
0x8049e60:   0f b6 c8                        	movzx ecx, al
0x8049e63:   b8 4e 3e 00 00                  	mov eax, 0x3e4e
0x8049e68:   99                              	cdq 
0x8049e69:   f7 f9                           	idiv ecx
0x8049e6b:   89 d0                           	mov eax, edx
0x8049e6d:   85 c0                           	test eax, eax
0x8049e6f:   0f 84 81 01 00 00               	je 0x8049ff6 <func_1+0x7ea>
0x8049e75:   c7 85 e4 fe ff ff af a5 5f c0   	mov dword ptr [ebp - 0x11c], 0xc05fa5af
0x8049e7f:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049e82:   83 f0 04                        	xor eax, 4
0x8049e85:   66 0f be 4d e9                  	movsx cx, byte ptr [ebp - 0x17]
0x8049e8a:   ba 00 00 00 00                  	mov edx, 0
0x8049e8f:   66 f7 f1                        	div cx
0x8049e92:   89 d0                           	mov eax, edx
0x8049e94:   89 c1                           	mov ecx, eax
0x8049e96:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049e99:   89 c2                           	mov edx, eax
0x8049e9b:   0f b6 c1                        	movzx eax, cl
0x8049e9e:   f6 f2                           	div dl
0x8049ea0:   84 c0                           	test al, al
0x8049ea2:   75 09                           	jne 0x8049ead <func_1+0x6a1>
0x8049ea4:   83 bd 34 ff ff ff 00            	cmp dword ptr [ebp - 0xcc], 0
0x8049eab:   74 07                           	je 0x8049eb4 <func_1+0x6a8>
0x8049ead:   b8 01 00 00 00                  	mov eax, 1
0x8049eb2:   eb 05                           	jmp 0x8049eb9 <func_1+0x6ad>
0x8049eb4:   b8 00 00 00 00                  	mov eax, 0
0x8049eb9:   0f b7 d0                        	movzx edx, ax
0x8049ebc:   8b 85 e4 fe ff ff               	mov eax, dword ptr [ebp - 0x11c]
0x8049ec2:   0f b7 c0                        	movzx eax, ax
0x8049ec5:   89 c1                           	mov ecx, eax
0x8049ec7:   d3 fa                           	sar edx, cl
0x8049ec9:   89 d0                           	mov eax, edx
0x8049ecb:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x8049ed1:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x8049ed7:   89 c2                           	mov edx, eax
0x8049ed9:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049edc:   29 c2                           	sub edx, eax
0x8049ede:   89 d0                           	mov eax, edx
0x8049ee0:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x8049ee4:   c7 45 a8 00 00 00 00            	mov dword ptr [ebp - 0x58], 0
0x8049eeb:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049eee:   66 2d 86 5d                     	sub ax, 0x5d86
0x8049ef2:   89 c1                           	mov ecx, eax
0x8049ef4:   8b 85 e4 fe ff ff               	mov eax, dword ptr [ebp - 0x11c]
0x8049efa:   89 c2                           	mov edx, eax
0x8049efc:   89 c8                           	mov eax, ecx
0x8049efe:   0f af c2                        	imul eax, edx
0x8049f01:   f7 d0                           	not eax
0x8049f03:   01 c0                           	add eax, eax
0x8049f05:   83 f0 01                        	xor eax, 1
0x8049f08:   0f b6 c0                        	movzx eax, al
0x8049f0b:   c1 e0 07                        	shl eax, 7
0x8049f0e:   66 89 85 f2 fe ff ff            	mov word ptr [ebp - 0x10e], ax
0x8049f15:   66 83 6d d4 01                  	sub word ptr [ebp - 0x2c], 1
0x8049f1a:   0f b6 45 83                     	movzx eax, byte ptr [ebp - 0x7d]
0x8049f1e:   0f be 55 be                     	movsx edx, byte ptr [ebp - 0x42]
0x8049f22:   0f b6 4d bf                     	movzx ecx, byte ptr [ebp - 0x41]
0x8049f26:   0f b7 75 ca                     	movzx esi, word ptr [ebp - 0x36]
0x8049f2a:   0f b7 7d d0                     	movzx edi, word ptr [ebp - 0x30]
0x8049f2e:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x8049f34:   0f bf 5d 94                     	movsx ebx, word ptr [ebp - 0x6c]
0x8049f38:   89 9d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ebx
0x8049f3e:   0f be 7d 97                     	movsx edi, byte ptr [ebp - 0x69]
0x8049f42:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x8049f48:   0f bf 5d d2                     	movsx ebx, word ptr [ebp - 0x2e]
0x8049f4c:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x8049f52:   0f b7 7d d4                     	movzx edi, word ptr [ebp - 0x2c]
0x8049f56:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x8049f5c:   0f be 5d d7                     	movsx ebx, byte ptr [ebp - 0x29]
0x8049f60:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x8049f66:   0f bf 7d e0                     	movsx edi, word ptr [ebp - 0x20]
0x8049f6a:   89 bd 88 fe ff ff               	mov dword ptr [ebp - 0x178], edi
0x8049f70:   0f b7 5d e2                     	movzx ebx, word ptr [ebp - 0x1e]
0x8049f74:   89 9d 84 fe ff ff               	mov dword ptr [ebp - 0x17c], ebx
0x8049f7a:   0f be 7d e9                     	movsx edi, byte ptr [ebp - 0x17]
0x8049f7e:   0f bf 5d ea                     	movsx ebx, word ptr [ebp - 0x16]
0x8049f82:   50                              	push eax
0x8049f83:   52                              	push edx
0x8049f84:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049f87:   51                              	push ecx
0x8049f88:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049f8b:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049f8e:   56                              	push esi
0x8049f8f:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049f92:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049f95:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049f9b:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049f9e:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049fa4:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x8049faa:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x8049fb0:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x8049fb6:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x8049fbc:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049fbf:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049fc2:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x8049fc8:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049fcb:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x8049fce:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049fd1:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x8049fd4:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x8049fd7:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x8049fdd:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049fe0:   57                              	push edi
0x8049fe1:   53                              	push ebx
0x8049fe2:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x8049fe5:   e8 3c f6 ff ff                  	call 0x8049626 <set_var>
0x8049fea:   83 c4 74                        	add esp, 0x74
0x8049fed:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x8049ff1:   e9 09 0c 00 00                  	jmp 0x804abff <func_1+0x13f3>
0x8049ff6:   c6 85 f1 fe ff ff 15            	mov byte ptr [ebp - 0x10f], 0x15
0x8049ffd:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a001:   74 09                           	je 0x804a00c <func_1+0x800>
0x804a003:   c7 45 ac 63 68 92 3e            	mov dword ptr [ebp - 0x54], 0x3e926863
0x804a00a:   eb 2c                           	jmp 0x804a038 <func_1+0x82c>
0x804a00c:   c7 85 ec fe ff ff 95 1c 1e ae   	mov dword ptr [ebp - 0x114], 0xae1e1c95
0x804a016:   c7 85 e8 fe ff ff fa ff ff ff   	mov dword ptr [ebp - 0x118], 0xfffffffa
0x804a020:   83 ad ec fe ff ff 01            	sub dword ptr [ebp - 0x114], 1
0x804a027:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804a02b:   83 e8 01                        	sub eax, 1
0x804a02e:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x804a032:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a035:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a038:   c7 45 e4 e0 31 ed 06            	mov dword ptr [ebp - 0x1c], 0x6ed31e0
0x804a03f:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a042:   0f be c0                        	movsx eax, al
0x804a045:   6b c0 17                        	imul eax, eax, 0x17
0x804a048:   21 45 b0                        	and dword ptr [ebp - 0x50], eax
0x804a04b:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804a04f:   0f bf d8                        	movsx ebx, ax
0x804a052:   0f b7 85 f2 fe ff ff            	movzx eax, word ptr [ebp - 0x10e]
0x804a059:   0f b7 c0                        	movzx eax, ax
0x804a05c:   83 e0 01                        	and eax, 1
0x804a05f:   89 c2                           	mov edx, eax
0x804a061:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a064:   0f b7 c0                        	movzx eax, ax
0x804a067:   89 c1                           	mov ecx, eax
0x804a069:   d3 e2                           	shl edx, cl
0x804a06b:   89 d0                           	mov eax, edx
0x804a06d:   39 85 34 ff ff ff               	cmp dword ptr [ebp - 0xcc], eax
0x804a073:   0f 95 c0                        	setne al
0x804a076:   0f b6 d0                        	movzx edx, al
0x804a079:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x804a07d:   39 c2                           	cmp edx, eax
0x804a07f:   0f 9c c0                        	setl al
0x804a082:   0f b6 c0                        	movzx eax, al
0x804a085:   8b 95 70 ff ff ff               	mov edx, dword ptr [ebp - 0x90]
0x804a08b:   0f be ca                        	movsx ecx, dl
0x804a08e:   99                              	cdq 
0x804a08f:   f7 f9                           	idiv ecx
0x804a091:   89 d0                           	mov eax, edx
0x804a093:   98                              	cwde 
0x804a094:   01 d8                           	add eax, ebx
0x804a096:   09 45 a8                        	or dword ptr [ebp - 0x58], eax
0x804a099:   0f be 85 31 ff ff ff            	movsx eax, byte ptr [ebp - 0xcf]
0x804a0a0:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a0a3:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a0a6:   8d 50 01                        	lea edx, [eax + 1]
0x804a0a9:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804a0ac:   89 c2                           	mov edx, eax
0x804a0ae:   0f b7 85 f4 fe ff ff            	movzx eax, word ptr [ebp - 0x10c]
0x804a0b5:   2d ff fa cf 02                  	sub eax, 0x2cffaff
0x804a0ba:   3d 73 9c 00 00                  	cmp eax, 0x9c73
0x804a0bf:   0f 9f c0                        	setg al
0x804a0c2:   31 c2                           	xor edx, eax
0x804a0c4:   0f b6 45 97                     	movzx eax, byte ptr [ebp - 0x69]
0x804a0c8:   31 d0                           	xor eax, edx
0x804a0ca:   88 45 e9                        	mov byte ptr [ebp - 0x17], al
0x804a0cd:   66 0f be 45 e9                  	movsx ax, byte ptr [ebp - 0x17]
0x804a0d2:   66 39 85 f2 fe ff ff            	cmp word ptr [ebp - 0x10e], ax
0x804a0d9:   0f 94 c0                        	sete al
0x804a0dc:   0f b6 c0                        	movzx eax, al
0x804a0df:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a0e2:   e9 8c 03 00 00                  	jmp 0x804a473 <func_1+0xc67>
0x804a0e7:   66 c7 85 22 ff ff ff 01 00      	mov word ptr [ebp - 0xde], 1
0x804a0f0:   c7 85 1c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xe4], 1
0x804a0fa:   c7 45 e4 04 6e ba 7c            	mov dword ptr [ebp - 0x1c], 0x7cba6e04
0x804a101:   0f b7 85 78 ff ff ff            	movzx eax, word ptr [ebp - 0x88]
0x804a108:   31 45 b4                        	xor dword ptr [ebp - 0x4c], eax
0x804a10b:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a10e:   89 85 1c ff ff ff               	mov dword ptr [ebp - 0xe4], eax
0x804a114:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x804a118:   39 85 1c ff ff ff               	cmp dword ptr [ebp - 0xe4], eax
0x804a11e:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x804a122:   74 04                           	je 0x804a128 <func_1+0x91c>
0x804a124:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804a128:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a12e:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a131:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x804a135:   0f 84 f9 00 00 00               	je 0x804a234 <func_1+0xa28>
0x804a13b:   c6 85 03 ff ff ff 08            	mov byte ptr [ebp - 0xfd], 8
0x804a142:   c7 85 fc fe ff ff f9 69 e8 c9   	mov dword ptr [ebp - 0x104], 0xc9e869f9
0x804a14c:   c7 85 f8 fe ff ff fc ff ff ff   	mov dword ptr [ebp - 0x108], 0xfffffffc
0x804a156:   0f b6 85 03 ff ff ff            	movzx eax, byte ptr [ebp - 0xfd]
0x804a15d:   0f b7 55 d0                     	movzx edx, word ptr [ebp - 0x30]
0x804a161:   f7 d2                           	not edx
0x804a163:   0f b7 ca                        	movzx ecx, dx
0x804a166:   8b 95 6c ff ff ff               	mov edx, dword ptr [ebp - 0x94]
0x804a16c:   0f b7 d2                        	movzx edx, dx
0x804a16f:   01 ca                           	add edx, ecx
0x804a171:   81 f2 cd f6 00 00               	xor edx, 0xf6cd
0x804a177:   39 d0                           	cmp eax, edx
0x804a179:   0f 9d c0                        	setge al
0x804a17c:   0f b6 c0                        	movzx eax, al
0x804a17f:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a182:   c7 45 b0 00 00 00 00            	mov dword ptr [ebp - 0x50], 0
0x804a189:   e9 97 00 00 00                  	jmp 0x804a225 <func_1+0xa19>
0x804a18e:   c6 85 f7 fe ff ff c5            	mov byte ptr [ebp - 0x109], 0xc5
0x804a195:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a198:   89 c1                           	mov ecx, eax
0x804a19a:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x804a1a0:   89 c2                           	mov edx, eax
0x804a1a2:   89 c8                           	mov eax, ecx
0x804a1a4:   0f af c2                        	imul eax, edx
0x804a1a7:   0f be c0                        	movsx eax, al
0x804a1aa:   8b 55 b8                        	mov edx, dword ptr [ebp - 0x48]
0x804a1ad:   0f be f2                        	movsx esi, dl
0x804a1b0:   99                              	cdq 
0x804a1b1:   f7 fe                           	idiv esi
0x804a1b3:   0f b7 d0                        	movzx edx, ax
0x804a1b6:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x804a1ba:   0f af c2                        	imul eax, edx
0x804a1bd:   0b 85 6c ff ff ff               	or eax, dword ptr [ebp - 0x94]
0x804a1c3:   89 85 fc fe ff ff               	mov dword ptr [ebp - 0x104], eax
0x804a1c9:   83 bd 70 ff ff ff 00            	cmp dword ptr [ebp - 0x90], 0
0x804a1d0:   74 07                           	je 0x804a1d9 <func_1+0x9cd>
0x804a1d2:   b8 01 00 00 00                  	mov eax, 1
0x804a1d7:   eb 05                           	jmp 0x804a1de <func_1+0x9d2>
0x804a1d9:   b8 00 00 00 00                  	mov eax, 0
0x804a1de:   0f be d0                        	movsx edx, al
0x804a1e1:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x804a1e5:   89 c1                           	mov ecx, eax
0x804a1e7:   d3 e2                           	shl edx, cl
0x804a1e9:   89 d0                           	mov eax, edx
0x804a1eb:   89 85 f8 fe ff ff               	mov dword ptr [ebp - 0x108], eax
0x804a1f1:   8b 85 f8 fe ff ff               	mov eax, dword ptr [ebp - 0x108]
0x804a1f7:   3b 45 90                        	cmp eax, dword ptr [ebp - 0x70]
0x804a1fa:   7f 07                           	jg 0x804a203 <func_1+0x9f7>
0x804a1fc:   ba 51 00 00 00                  	mov edx, 0x51
0x804a201:   eb 05                           	jmp 0x804a208 <func_1+0x9fc>
0x804a203:   ba 50 00 00 00                  	mov edx, 0x50
0x804a208:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804a20c:   39 c2                           	cmp edx, eax
0x804a20e:   0f 9c c0                        	setl al
0x804a211:   0f b6 c0                        	movzx eax, al
0x804a214:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x804a21a:   83 bd 74 ff ff ff 00            	cmp dword ptr [ebp - 0x8c], 0
0x804a221:   83 6d b0 01                     	sub dword ptr [ebp - 0x50], 1
0x804a225:   83 7d b0 e4                     	cmp dword ptr [ebp - 0x50], -0x1c
0x804a229:   0f 8d 5f ff ff ff               	jge 0x804a18e <func_1+0x982>
0x804a22f:   e9 3f 02 00 00                  	jmp 0x804a473 <func_1+0xc67>
0x804a234:   c7 85 18 ff ff ff 9e b7 00 fa   	mov dword ptr [ebp - 0xe8], 0xfa00b79e
0x804a23e:   c7 85 14 ff ff ff 3b f3 eb 76   	mov dword ptr [ebp - 0xec], 0x76ebf33b
0x804a248:   c7 85 10 ff ff ff 4e 0e 86 fd   	mov dword ptr [ebp - 0xf0], 0xfd860e4e
0x804a252:   66 c7 45 d2 ed ff               	mov word ptr [ebp - 0x2e], 0xffed
0x804a258:   eb 6c                           	jmp 0x804a2c6 <func_1+0xaba>
0x804a25a:   c7 45 e4 bf 7a 34 78            	mov dword ptr [ebp - 0x1c], 0x78347abf
0x804a261:   c7 45 cc 01 00 00 00            	mov dword ptr [ebp - 0x34], 1
0x804a268:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a26b:   83 e8 13                        	sub eax, 0x13
0x804a26e:   0f b6 d0                        	movzx edx, al
0x804a271:   89 d0                           	mov eax, edx
0x804a273:   01 c0                           	add eax, eax
0x804a275:   01 d0                           	add eax, edx
0x804a277:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x804a27b:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x804a27f:   66 c1 e8 08                     	shr ax, 8
0x804a283:   66 39 45 d0                     	cmp word ptr [ebp - 0x30], ax
0x804a287:   77 09                           	ja 0x804a292 <func_1+0xa86>
0x804a289:   83 bd 1c ff ff ff 00            	cmp dword ptr [ebp - 0xe4], 0
0x804a290:   74 07                           	je 0x804a299 <func_1+0xa8d>
0x804a292:   b8 01 00 00 00                  	mov eax, 1
0x804a297:   eb 05                           	jmp 0x804a29e <func_1+0xa92>
0x804a299:   b8 00 00 00 00                  	mov eax, 0
0x804a29e:   85 c0                           	test eax, eax
0x804a2a0:   0f 9e c0                        	setle al
0x804a2a3:   0f b6 c0                        	movzx eax, al
0x804a2a6:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a2a9:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a2ac:   33 45 ec                        	xor eax, dword ptr [ebp - 0x14]
0x804a2af:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x804a2b2:   0f 93 c0                        	setae al
0x804a2b5:   0f b6 c0                        	movzx eax, al
0x804a2b8:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a2bb:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a2bf:   83 c0 07                        	add eax, 7
0x804a2c2:   66 89 45 d2                     	mov word ptr [ebp - 0x2e], ax
0x804a2c6:   66 83 7d d2 ed                  	cmp word ptr [ebp - 0x2e], -0x13
0x804a2cb:   75 8d                           	jne 0x804a25a <func_1+0xa4e>
0x804a2cd:   0f be 8d 2d ff ff ff            	movsx ecx, byte ptr [ebp - 0xd3]
0x804a2d4:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x804a2d9:   99                              	cdq 
0x804a2da:   f7 f9                           	idiv ecx
0x804a2dc:   89 d0                           	mov eax, edx
0x804a2de:   31 85 14 ff ff ff               	xor dword ptr [ebp - 0xec], eax
0x804a2e4:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x804a2e8:   3a 45 97                        	cmp al, byte ptr [ebp - 0x69]
0x804a2eb:   0f 9c c0                        	setl al
0x804a2ee:   0f b6 c0                        	movzx eax, al
0x804a2f1:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a2f4:   0f be 95 7b ff ff ff            	movsx edx, byte ptr [ebp - 0x85]
0x804a2fb:   8b 85 1c ff ff ff               	mov eax, dword ptr [ebp - 0xe4]
0x804a301:   3b 45 b0                        	cmp eax, dword ptr [ebp - 0x50]
0x804a304:   0f 9c c0                        	setl al
0x804a307:   0f b6 c0                        	movzx eax, al
0x804a30a:   39 c2                           	cmp edx, eax
0x804a30c:   0f 9c c0                        	setl al
0x804a30f:   0f b6 d0                        	movzx edx, al
0x804a312:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x804a316:   31 d0                           	xor eax, edx
0x804a318:   3d 4d 9a 0a 1f                  	cmp eax, 0x1f0a9a4d
0x804a31d:   7f 07                           	jg 0x804a326 <func_1+0xb1a>
0x804a31f:   b8 5a 00 00 00                  	mov eax, 0x5a
0x804a324:   eb 05                           	jmp 0x804a32b <func_1+0xb1f>
0x804a326:   b8 59 00 00 00                  	mov eax, 0x59
0x804a32b:   0f be 75 d7                     	movsx esi, byte ptr [ebp - 0x29]
0x804a32f:   99                              	cdq 
0x804a330:   f7 fe                           	idiv esi
0x804a332:   85 c0                           	test eax, eax
0x804a334:   0f 84 dc 00 00 00               	je 0x804a416 <func_1+0xc0a>
0x804a33a:   c7 85 0c ff ff ff 66 da 81 c4   	mov dword ptr [ebp - 0xf4], 0xc481da66
0x804a344:   c7 85 08 ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0xf8], 0xfffffffa
0x804a34e:   c7 85 04 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xfc], 9
0x804a358:   83 bd 14 ff ff ff 00            	cmp dword ptr [ebp - 0xec], 0
0x804a35f:   75 47                           	jne 0x804a3a8 <func_1+0xb9c>
0x804a361:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x804a365:   66 23 45 d2                     	and ax, word ptr [ebp - 0x2e]
0x804a369:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x804a36d:   66 83 7d e2 00                  	cmp word ptr [ebp - 0x1e], 0
0x804a372:   74 07                           	je 0x804a37b <func_1+0xb6f>
0x804a374:   b8 01 00 00 00                  	mov eax, 1
0x804a379:   eb 05                           	jmp 0x804a380 <func_1+0xb74>
0x804a37b:   b8 00 00 00 00                  	mov eax, 0
0x804a380:   89 c2                           	mov edx, eax
0x804a382:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x804a388:   31 d0                           	xor eax, edx
0x804a38a:   0f bf d0                        	movsx edx, ax
0x804a38d:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x804a391:   98                              	cwde 
0x804a392:   89 c1                           	mov ecx, eax
0x804a394:   d3 fa                           	sar edx, cl
0x804a396:   89 d0                           	mov eax, edx
0x804a398:   0f be d0                        	movsx edx, al
0x804a39b:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a39f:   0f be c0                        	movsx eax, al
0x804a3a2:   01 d0                           	add eax, edx
0x804a3a4:   85 c0                           	test eax, eax
0x804a3a6:   74 07                           	je 0x804a3af <func_1+0xba3>
0x804a3a8:   b8 01 00 00 00                  	mov eax, 1
0x804a3ad:   eb 05                           	jmp 0x804a3b4 <func_1+0xba8>
0x804a3af:   b8 00 00 00 00                  	mov eax, 0
0x804a3b4:   3b 85 18 ff ff ff               	cmp eax, dword ptr [ebp - 0xe8]
0x804a3ba:   0f 95 c0                        	setne al
0x804a3bd:   0f b6 c0                        	movzx eax, al
0x804a3c0:   09 85 08 ff ff ff               	or dword ptr [ebp - 0xf8], eax
0x804a3c6:   c7 85 08 ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xf8], 0xfffffff6
0x804a3d0:   c7 85 14 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xec], 1
0x804a3da:   8b 85 1c ff ff ff               	mov eax, dword ptr [ebp - 0xe4]
0x804a3e0:   0f b6 c0                        	movzx eax, al
0x804a3e3:   83 e8 36                        	sub eax, 0x36
0x804a3e6:   39 45 8c                        	cmp dword ptr [ebp - 0x74], eax
0x804a3e9:   0f 96 c0                        	setbe al
0x804a3ec:   0f b6 c0                        	movzx eax, al
0x804a3ef:   39 85 14 ff ff ff               	cmp dword ptr [ebp - 0xec], eax
0x804a3f5:   0f 95 c0                        	setne al
0x804a3f8:   0f b6 c0                        	movzx eax, al
0x804a3fb:   f7 d8                           	neg eax
0x804a3fd:   89 85 04 ff ff ff               	mov dword ptr [ebp - 0xfc], eax
0x804a403:   0f b7 85 78 ff ff ff            	movzx eax, word ptr [ebp - 0x88]
0x804a40a:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a40d:   83 85 10 ff ff ff 01            	add dword ptr [ebp - 0xf0], 1
0x804a414:   eb 5d                           	jmp 0x804a473 <func_1+0xc67>
0x804a416:   c7 45 b4 05 00 00 00            	mov dword ptr [ebp - 0x4c], 5
0x804a41d:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a420:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a423:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a426:   98                              	cwde 
0x804a427:   8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x804a42a:   0f bf ca                        	movsx ecx, dx
0x804a42d:   99                              	cdq 
0x804a42e:   f7 f9                           	idiv ecx
0x804a430:   89 d1                           	mov ecx, edx
0x804a432:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x804a436:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804a43c:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a442:   3b 85 18 ff ff ff               	cmp eax, dword ptr [ebp - 0xe8]
0x804a448:   0f 9d c0                        	setge al
0x804a44b:   0f b6 d0                        	movzx edx, al
0x804a44e:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x804a452:   39 c2                           	cmp edx, eax
0x804a454:   0f 95 c0                        	setne al
0x804a457:   0f b6 c0                        	movzx eax, al
0x804a45a:   39 c1                           	cmp ecx, eax
0x804a45c:   0f 95 c0                        	setne al
0x804a45f:   0f b6 c0                        	movzx eax, al
0x804a462:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a465:   66 83 bd 22 ff ff ff 00         	cmp word ptr [ebp - 0xde], 0
0x804a46d:   0f 85 ae 06 00 00               	jne 0x804ab21 <func_1+0x1315>
0x804a473:   83 bd 7c ff ff ff 00            	cmp dword ptr [ebp - 0x84], 0
0x804a47a:   0f 84 fa 02 00 00               	je 0x804a77a <func_1+0xf6e>
0x804a480:   c6 85 d3 fe ff ff 0a            	mov byte ptr [ebp - 0x12d], 0xa
0x804a487:   c7 85 cc fe ff ff e7 0f aa 5f   	mov dword ptr [ebp - 0x134], 0x5faa0fe7
0x804a491:   66 c7 85 ca fe ff ff 01 00      	mov word ptr [ebp - 0x136], 1
0x804a49a:   66 83 7d ca 00                  	cmp word ptr [ebp - 0x36], 0
0x804a49f:   74 16                           	je 0x804a4b7 <func_1+0xcab>
0x804a4a1:   c7 85 ac fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x154], 0
0x804a4ab:   83 85 ac fe ff ff 01            	add dword ptr [ebp - 0x154], 1
0x804a4b2:   e9 51 02 00 00                  	jmp 0x804a708 <func_1+0xefc>
0x804a4b7:   c7 85 c4 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x13c], 1
0x804a4c1:   c6 85 d3 fe ff ff ff            	mov byte ptr [ebp - 0x12d], 0xff
0x804a4c8:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a4cb:   66 89 45 ca                     	mov word ptr [ebp - 0x36], ax
0x804a4cf:   0f b7 55 ca                     	movzx edx, word ptr [ebp - 0x36]
0x804a4d3:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x804a4d7:   39 85 c4 fe ff ff               	cmp dword ptr [ebp - 0x13c], eax
0x804a4dd:   0f 97 c0                        	seta al
0x804a4e0:   0f b6 c0                        	movzx eax, al
0x804a4e3:   39 c2                           	cmp edx, eax
0x804a4e5:   7c 07                           	jl 0x804a4ee <func_1+0xce2>
0x804a4e7:   b8 b3 df 00 70                  	mov eax, 0x7000dfb3
0x804a4ec:   eb 05                           	jmp 0x804a4f3 <func_1+0xce7>
0x804a4ee:   b8 b2 df 00 70                  	mov eax, 0x7000dfb2
0x804a4f3:   3b 45 b0                        	cmp eax, dword ptr [ebp - 0x50]
0x804a4f6:   0f 94 c0                        	sete al
0x804a4f9:   0f b6 c0                        	movzx eax, al
0x804a4fc:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a4ff:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a502:   23 45 ac                        	and eax, dword ptr [ebp - 0x54]
0x804a505:   83 f8 01                        	cmp eax, 1
0x804a508:   0f 94 c0                        	sete al
0x804a50b:   0f b6 c0                        	movzx eax, al
0x804a50e:   8b 95 c4 fe ff ff               	mov edx, dword ptr [ebp - 0x13c]
0x804a514:   0f b7 ca                        	movzx ecx, dx
0x804a517:   99                              	cdq 
0x804a518:   f7 f9                           	idiv ecx
0x804a51a:   89 d0                           	mov eax, edx
0x804a51c:   98                              	cwde 
0x804a51d:   c1 e0 02                        	shl eax, 2
0x804a520:   3c 3a                           	cmp al, 0x3a
0x804a522:   74 0d                           	je 0x804a531 <func_1+0xd25>
0x804a524:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x804a528:   74 07                           	je 0x804a531 <func_1+0xd25>
0x804a52a:   b8 01 00 00 00                  	mov eax, 1
0x804a52f:   eb 05                           	jmp 0x804a536 <func_1+0xd2a>
0x804a531:   b8 00 00 00 00                  	mov eax, 0
0x804a536:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x804a53c:   0f 92 c0                        	setb al
0x804a53f:   0f b6 c0                        	movzx eax, al
0x804a542:   0b 45 b0                        	or eax, dword ptr [ebp - 0x50]
0x804a545:   83 f8 f9                        	cmp eax, -7
0x804a548:   0f 9c c0                        	setl al
0x804a54b:   0f b6 c0                        	movzx eax, al
0x804a54e:   0b 45 dc                        	or eax, dword ptr [ebp - 0x24]
0x804a551:   89 c2                           	mov edx, eax
0x804a553:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a556:   39 c2                           	cmp edx, eax
0x804a558:   0f 86 a5 00 00 00               	jbe 0x804a603 <func_1+0xdf7>
0x804a55e:   c6 85 bf fe ff ff ff            	mov byte ptr [ebp - 0x141], 0xff
0x804a565:   c7 85 b8 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x148], 1
0x804a56f:   0f be 9d 2d ff ff ff            	movsx ebx, byte ptr [ebp - 0xd3]
0x804a576:   0f b6 45 97                     	movzx eax, byte ptr [ebp - 0x69]
0x804a57a:   88 85 bf fe ff ff               	mov byte ptr [ebp - 0x141], al
0x804a580:   0f b6 8d bf fe ff ff            	movzx ecx, byte ptr [ebp - 0x141]
0x804a587:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x804a58b:   8d 50 ff                        	lea edx, [eax - 1]
0x804a58e:   66 89 55 e2                     	mov word ptr [ebp - 0x1e], dx
0x804a592:   66 39 c1                        	cmp cx, ax
0x804a595:   0f 95 c0                        	setne al
0x804a598:   0f b6 f0                        	movzx esi, al
0x804a59b:   0f bf 7d d2                     	movsx edi, word ptr [ebp - 0x2e]
0x804a59f:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a5a2:   ba 00 00 00 00                  	mov edx, 0
0x804a5a7:   f7 f7                           	div edi
0x804a5a9:   89 c2                           	mov edx, eax
0x804a5ab:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a5ae:   31 d0                           	xor eax, edx
0x804a5b0:   c0 e8 04                        	shr al, 4
0x804a5b3:   0f b6 c0                        	movzx eax, al
0x804a5b6:   39 85 b8 fe ff ff               	cmp dword ptr [ebp - 0x148], eax
0x804a5bc:   0f 9d c0                        	setge al
0x804a5bf:   0f b6 c0                        	movzx eax, al
0x804a5c2:   89 c1                           	mov ecx, eax
0x804a5c4:   d3 e6                           	shl esi, cl
0x804a5c6:   89 f0                           	mov eax, esi
0x804a5c8:   0f be f0                        	movsx esi, al
0x804a5cb:   89 d8                           	mov eax, ebx
0x804a5cd:   99                              	cdq 
0x804a5ce:   f7 fe                           	idiv esi
0x804a5d0:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804a5d3:   75 04                           	jne 0x804a5d9 <func_1+0xdcd>
0x804a5d5:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x804a5d9:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a5df:   0f be c0                        	movsx eax, al
0x804a5e2:   f7 d8                           	neg eax
0x804a5e4:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a5e7:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a5ea:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x804a5ed:   73 07                           	jae 0x804a5f6 <func_1+0xdea>
0x804a5ef:   b8 fd ff ff ff                  	mov eax, 0xfffffffd
0x804a5f4:   eb 05                           	jmp 0x804a5fb <func_1+0xdef>
0x804a5f6:   b8 fc ff ff ff                  	mov eax, 0xfffffffc
0x804a5fb:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x804a601:   eb 41                           	jmp 0x804a644 <func_1+0xe38>
0x804a603:   c7 85 c0 fe ff ff 1e bd bf 47   	mov dword ptr [ebp - 0x140], 0x47bfbd1e
0x804a60d:   c7 85 c0 fe ff ff 3c b5 97 b5   	mov dword ptr [ebp - 0x140], 0xb597b53c
0x804a617:   c7 45 b8 ce 7b 44 13            	mov dword ptr [ebp - 0x48], 0x13447bce
0x804a61e:   80 65 e9 01                     	and byte ptr [ebp - 0x17], 1
0x804a622:   66 83 bd 2a ff ff ff 00         	cmp word ptr [ebp - 0xd6], 0
0x804a62a:   83 bd c4 fe ff ff f9            	cmp dword ptr [ebp - 0x13c], -7
0x804a631:   81 bd 34 ff ff ff ce 7b 44 13   	cmp dword ptr [ebp - 0xcc], 0x13447bce
0x804a63b:   0f 9e c0                        	setle al
0x804a63e:   0f b6 c0                        	movzx eax, al
0x804a641:   31 45 e4                        	xor dword ptr [ebp - 0x1c], eax
0x804a644:   c7 45 cc 00 00 00 00            	mov dword ptr [ebp - 0x34], 0
0x804a64b:   e9 ae 00 00 00                  	jmp 0x804a6fe <func_1+0xef2>
0x804a650:   c6 85 b7 fe ff ff 67            	mov byte ptr [ebp - 0x149], 0x67
0x804a657:   c7 85 b0 fe ff ff d9 2e ea e2   	mov dword ptr [ebp - 0x150], 0xe2ea2ed9
0x804a661:   66 83 7d e2 00                  	cmp word ptr [ebp - 0x1e], 0
0x804a666:   75 52                           	jne 0x804a6ba <func_1+0xeae>
0x804a668:   0f be 55 97                     	movsx edx, byte ptr [ebp - 0x69]
0x804a66c:   0f be 85 31 ff ff ff            	movsx eax, byte ptr [ebp - 0xcf]
0x804a673:   01 d0                           	add eax, edx
0x804a675:   85 c0                           	test eax, eax
0x804a677:   0f 95 c0                        	setne al
0x804a67a:   0f b6 c0                        	movzx eax, al
0x804a67d:   89 c2                           	mov edx, eax
0x804a67f:   b8 77 00 00 00                  	mov eax, 0x77
0x804a684:   0f b6 c0                        	movzx eax, al
0x804a687:   f6 f2                           	div dl
0x804a689:   0f b6 c4                        	movzx eax, ah
0x804a68c:   0f b6 d0                        	movzx edx, al
0x804a68f:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a692:   0f b7 c0                        	movzx eax, ax
0x804a695:   89 c1                           	mov ecx, eax
0x804a697:   d3 fa                           	sar edx, cl
0x804a699:   89 d0                           	mov eax, edx
0x804a69b:   25 d1 75 00 00                  	and eax, 0x75d1
0x804a6a0:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a6a3:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a6a6:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804a6a9:   0f 94 c0                        	sete al
0x804a6ac:   0f b6 d0                        	movzx edx, al
0x804a6af:   0f b6 85 d3 fe ff ff            	movzx eax, byte ptr [ebp - 0x12d]
0x804a6b6:   01 d0                           	add eax, edx
0x804a6b8:   85 c0                           	test eax, eax
0x804a6ba:   81 bd c4 fe ff ff ef 5b 00 00   	cmp dword ptr [ebp - 0x13c], 0x5bef
0x804a6c4:   0f 97 c0                        	seta al
0x804a6c7:   0f b6 d0                        	movzx edx, al
0x804a6ca:   66 0f be 85 b7 fe ff ff         	movsx ax, byte ptr [ebp - 0x149]
0x804a6d2:   0f b7 c0                        	movzx eax, ax
0x804a6d5:   0f af c2                        	imul eax, edx
0x804a6d8:   39 85 c4 fe ff ff               	cmp dword ptr [ebp - 0x13c], eax
0x804a6de:   0f 94 c0                        	sete al
0x804a6e1:   0f b6 c0                        	movzx eax, al
0x804a6e4:   39 85 c4 fe ff ff               	cmp dword ptr [ebp - 0x13c], eax
0x804a6ea:   0f 94 c0                        	sete al
0x804a6ed:   0f b6 c0                        	movzx eax, al
0x804a6f0:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x804a6f6:   83 45 c0 01                     	add dword ptr [ebp - 0x40], 1
0x804a6fa:   83 45 cc 01                     	add dword ptr [ebp - 0x34], 1
0x804a6fe:   83 7d cc 32                     	cmp dword ptr [ebp - 0x34], 0x32
0x804a702:   0f 86 48 ff ff ff               	jbe 0x804a650 <func_1+0xe44>
0x804a708:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a70b:   0f b6 c0                        	movzx eax, al
0x804a70e:   09 45 ac                        	or dword ptr [ebp - 0x54], eax
0x804a711:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a714:   30 45 d7                        	xor byte ptr [ebp - 0x29], al
0x804a717:   c7 85 a8 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x158], 1
0x804a721:   c7 85 a4 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x15c], 0xffffffff
0x804a72b:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a72e:   ba 66 45 00 00                  	mov edx, 0x4566
0x804a733:   29 c2                           	sub edx, eax
0x804a735:   89 d0                           	mov eax, edx
0x804a737:   89 c1                           	mov ecx, eax
0x804a739:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a73d:   89 c2                           	mov edx, eax
0x804a73f:   89 c8                           	mov eax, ecx
0x804a741:   0f af c2                        	imul eax, edx
0x804a744:   88 45 bf                        	mov byte ptr [ebp - 0x41], al
0x804a747:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a74a:   83 c8 08                        	or eax, 8
0x804a74d:   89 85 a8 fe ff ff               	mov dword ptr [ebp - 0x158], eax
0x804a753:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a756:   0f be c0                        	movsx eax, al
0x804a759:   8d 48 ff                        	lea ecx, [eax - 1]
0x804a75c:   b8 c0 01 00 00                  	mov eax, 0x1c0
0x804a761:   99                              	cdq 
0x804a762:   f7 f9                           	idiv ecx
0x804a764:   89 d0                           	mov eax, edx
0x804a766:   09 85 a4 fe ff ff               	or dword ptr [ebp - 0x15c], eax
0x804a76c:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x804a772:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a775:   e9 a3 00 00 00                  	jmp 0x804a81d <func_1+0x1011>
0x804a77a:   c7 85 e0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x120], 1
0x804a784:   c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0x804a78b:   eb 7c                           	jmp 0x804a809 <func_1+0xffd>
0x804a78d:   66 c7 85 de fe ff ff 06 00      	mov word ptr [ebp - 0x122], 6
0x804a796:   c7 85 d8 fe ff ff fa ff ff ff   	mov dword ptr [ebp - 0x128], 0xfffffffa
0x804a7a0:   83 7d c0 00                     	cmp dword ptr [ebp - 0x40], 0
0x804a7a4:   74 32                           	je 0x804a7d8 <func_1+0xfcc>
0x804a7a6:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804a7aa:   8d 50 ff                        	lea edx, [eax - 1]
0x804a7ad:   66 89 55 ca                     	mov word ptr [ebp - 0x36], dx
0x804a7b1:   66 39 85 2e ff ff ff            	cmp word ptr [ebp - 0xd2], ax
0x804a7b8:   0f 97 c0                        	seta al
0x804a7bb:   0f b6 c0                        	movzx eax, al
0x804a7be:   8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x804a7c1:   89 d1                           	mov ecx, edx
0x804a7c3:   ba 00 00 00 00                  	mov edx, 0
0x804a7c8:   66 f7 f1                        	div cx
0x804a7cb:   89 d0                           	mov eax, edx
0x804a7cd:   0f b7 c0                        	movzx eax, ax
0x804a7d0:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x804a7d6:   eb 2d                           	jmp 0x804a805 <func_1+0xff9>
0x804a7d8:   c7 85 d4 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x12c], 1
0x804a7e2:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x804a7e8:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x804a7eb:   0f 95 c0                        	setne al
0x804a7ee:   0f b6 c0                        	movzx eax, al
0x804a7f1:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a7f4:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a7f7:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a7fa:   83 85 d4 fe ff ff 01            	add dword ptr [ebp - 0x12c], 1
0x804a801:   83 75 e4 08                     	xor dword ptr [ebp - 0x1c], 8
0x804a805:   83 45 ac 03                     	add dword ptr [ebp - 0x54], 3
0x804a809:   83 7d ac 0c                     	cmp dword ptr [ebp - 0x54], 0xc
0x804a80d:   0f 8e 7a ff ff ff               	jle 0x804a78d <func_1+0xf81>
0x804a813:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a817:   0f 85 07 03 00 00               	jne 0x804ab24 <func_1+0x1318>
0x804a81d:   0f b6 45 82                     	movzx eax, byte ptr [ebp - 0x7e]
0x804a821:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x804a825:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804a829:   66 89 45 ca                     	mov word ptr [ebp - 0x36], ax
0x804a82d:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x804a831:   78 07                           	js 0x804a83a <func_1+0x102e>
0x804a833:   b8 d5 ae ff ff                  	mov eax, 0xffffaed5
0x804a838:   eb 05                           	jmp 0x804a83f <func_1+0x1033>
0x804a83a:   b8 d4 ae ff ff                  	mov eax, 0xffffaed4
0x804a83f:   3b 45 b8                        	cmp eax, dword ptr [ebp - 0x48]
0x804a842:   0f 9c c0                        	setl al
0x804a845:   0f b6 d0                        	movzx edx, al
0x804a848:   0f b7 85 78 ff ff ff            	movzx eax, word ptr [ebp - 0x88]
0x804a84f:   0f b6 c0                        	movzx eax, al
0x804a852:   89 c1                           	mov ecx, eax
0x804a854:   d3 e2                           	shl edx, cl
0x804a856:   89 d0                           	mov eax, edx
0x804a858:   0f be c0                        	movsx eax, al
0x804a85b:   0f be b5 63 ff ff ff            	movsx esi, byte ptr [ebp - 0x9d]
0x804a862:   99                              	cdq 
0x804a863:   f7 fe                           	idiv esi
0x804a865:   85 c0                           	test eax, eax
0x804a867:   75 07                           	jne 0x804a870 <func_1+0x1064>
0x804a869:   83 bd 24 ff ff ff 00            	cmp dword ptr [ebp - 0xdc], 0
0x804a870:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a873:   34 ff                           	xor al, 0xff
0x804a875:   0f b7 c0                        	movzx eax, ax
0x804a878:   c1 e0 0b                        	shl eax, 0xb
0x804a87b:   34 ef                           	xor al, 0xef
0x804a87d:   89 c2                           	mov edx, eax
0x804a87f:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x804a883:   0f af c2                        	imul eax, edx
0x804a886:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x804a88a:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x804a88e:   83 e0 03                        	and eax, 3
0x804a891:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a894:   e9 70 02 00 00                  	jmp 0x804ab09 <func_1+0x12fd>
0x804a899:   66 c7 85 44 ff ff ff 7d 2b      	mov word ptr [ebp - 0xbc], 0x2b7d
0x804a8a2:   0f bf 45 d2                     	movsx eax, word ptr [ebp - 0x2e]
0x804a8a6:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x804a8ac:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a8b2:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x804a8b5:   0f 96 c0                        	setbe al
0x804a8b8:   0f b6 c0                        	movzx eax, al
0x804a8bb:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x804a8c1:   0f 95 c0                        	setne al
0x804a8c4:   0f b6 c0                        	movzx eax, al
0x804a8c7:   39 45 9c                        	cmp dword ptr [ebp - 0x64], eax
0x804a8ca:   0f b7 85 44 ff ff ff            	movzx eax, word ptr [ebp - 0xbc]
0x804a8d1:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x804a8d4:   0f 93 c0                        	setae al
0x804a8d7:   0f b6 c0                        	movzx eax, al
0x804a8da:   8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x804a8dd:   21 d0                           	and eax, edx
0x804a8df:   66 89 85 60 ff ff ff            	mov word ptr [ebp - 0xa0], ax
0x804a8e6:   0f bf 85 60 ff ff ff            	movsx eax, word ptr [ebp - 0xa0]
0x804a8ed:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a8f0:   66 c7 85 78 ff ff ff 18 00      	mov word ptr [ebp - 0x88], 0x18
0x804a8f9:   66 83 bd 78 ff ff ff 34         	cmp word ptr [ebp - 0x88], 0x34
0x804a901:   0f 86 73 01 00 00               	jbe 0x804aa7a <func_1+0x126e>
0x804a907:   c7 85 40 ff ff ff 14 e9 48 b7   	mov dword ptr [ebp - 0xc0], 0xb748e914
0x804a911:   66 83 bd 44 ff ff ff 00         	cmp word ptr [ebp - 0xbc], 0
0x804a919:   74 6c                           	je 0x804a987 <func_1+0x117b>
0x804a91b:   83 bd 40 ff ff ff 4f            	cmp dword ptr [ebp - 0xc0], 0x4f
0x804a922:   0f 95 c0                        	setne al
0x804a925:   0f b6 c0                        	movzx eax, al
0x804a928:   f7 d0                           	not eax
0x804a92a:   33 45 ac                        	xor eax, dword ptr [ebp - 0x54]
0x804a92d:   83 f8 05                        	cmp eax, 5
0x804a930:   0f 9e c0                        	setle al
0x804a933:   0f b6 d0                        	movzx edx, al
0x804a936:   0f b7 85 44 ff ff ff            	movzx eax, word ptr [ebp - 0xbc]
0x804a93d:   31 d0                           	xor eax, edx
0x804a93f:   89 c2                           	mov edx, eax
0x804a941:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x804a947:   21 d0                           	and eax, edx
0x804a949:   0f b7 c0                        	movzx eax, ax
0x804a94c:   c1 e0 0c                        	shl eax, 0xc
0x804a94f:   85 c0                           	test eax, eax
0x804a951:   74 16                           	je 0x804a969 <func_1+0x115d>
0x804a953:   83 bd 5c ff ff ff 00            	cmp dword ptr [ebp - 0xa4], 0
0x804a95a:   74 0d                           	je 0x804a969 <func_1+0x115d>
0x804a95c:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a960:   74 07                           	je 0x804a969 <func_1+0x115d>
0x804a962:   b8 01 00 00 00                  	mov eax, 1
0x804a967:   eb 05                           	jmp 0x804a96e <func_1+0x1162>
0x804a969:   b8 00 00 00 00                  	mov eax, 0
0x804a96e:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804a971:   0f 97 c0                        	seta al
0x804a974:   0f b6 c0                        	movzx eax, al
0x804a977:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a97a:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a97e:   74 07                           	je 0x804a987 <func_1+0x117b>
0x804a980:   ba 01 00 00 00                  	mov edx, 1
0x804a985:   eb 05                           	jmp 0x804a98c <func_1+0x1180>
0x804a987:   ba 00 00 00 00                  	mov edx, 0
0x804a98c:   0f b7 85 44 ff ff ff            	movzx eax, word ptr [ebp - 0xbc]
0x804a993:   39 c2                           	cmp edx, eax
0x804a995:   c7 85 74 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x8c], 0xffffffff
0x804a99f:   0f b6 45 83                     	movzx eax, byte ptr [ebp - 0x7d]
0x804a9a3:   0f be 55 be                     	movsx edx, byte ptr [ebp - 0x42]
0x804a9a7:   0f b6 4d bf                     	movzx ecx, byte ptr [ebp - 0x41]
0x804a9ab:   0f b7 75 ca                     	movzx esi, word ptr [ebp - 0x36]
0x804a9af:   0f b7 7d d0                     	movzx edi, word ptr [ebp - 0x30]
0x804a9b3:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x804a9b9:   0f bf 5d 94                     	movsx ebx, word ptr [ebp - 0x6c]
0x804a9bd:   89 9d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ebx
0x804a9c3:   0f be 7d 97                     	movsx edi, byte ptr [ebp - 0x69]
0x804a9c7:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x804a9cd:   0f bf 5d d2                     	movsx ebx, word ptr [ebp - 0x2e]
0x804a9d1:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x804a9d7:   0f b7 7d d4                     	movzx edi, word ptr [ebp - 0x2c]
0x804a9db:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804a9e1:   0f be 5d d7                     	movsx ebx, byte ptr [ebp - 0x29]
0x804a9e5:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x804a9eb:   0f bf 7d e0                     	movsx edi, word ptr [ebp - 0x20]
0x804a9ef:   89 bd 88 fe ff ff               	mov dword ptr [ebp - 0x178], edi
0x804a9f5:   0f b7 5d e2                     	movzx ebx, word ptr [ebp - 0x1e]
0x804a9f9:   89 9d 84 fe ff ff               	mov dword ptr [ebp - 0x17c], ebx
0x804a9ff:   0f be 7d e9                     	movsx edi, byte ptr [ebp - 0x17]
0x804aa03:   0f bf 5d ea                     	movsx ebx, word ptr [ebp - 0x16]
0x804aa07:   50                              	push eax
0x804aa08:   52                              	push edx
0x804aa09:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804aa0c:   51                              	push ecx
0x804aa0d:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804aa10:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804aa13:   56                              	push esi
0x804aa14:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804aa17:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804aa1a:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804aa20:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804aa23:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804aa29:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804aa2f:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804aa35:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804aa3b:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804aa41:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804aa44:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804aa47:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804aa4d:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804aa50:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804aa53:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804aa56:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804aa59:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804aa5c:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804aa62:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804aa65:   57                              	push edi
0x804aa66:   53                              	push ebx
0x804aa67:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804aa6a:   e8 b7 eb ff ff                  	call 0x8049626 <set_var>
0x804aa6f:   83 c4 74                        	add esp, 0x74
0x804aa72:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804aa75:   e9 85 01 00 00                  	jmp 0x804abff <func_1+0x13f3>
0x804aa7a:   0f b7 5d d0                     	movzx ebx, word ptr [ebp - 0x30]
0x804aa7e:   0f b6 45 82                     	movzx eax, byte ptr [ebp - 0x7e]
0x804aa82:   33 45 8c                        	xor eax, dword ptr [ebp - 0x74]
0x804aa85:   89 c2                           	mov edx, eax
0x804aa87:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804aa8a:   09 d0                           	or eax, edx
0x804aa8c:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804aa8f:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804aa92:   88 45 be                        	mov byte ptr [ebp - 0x42], al
0x804aa95:   0f be 55 be                     	movsx edx, byte ptr [ebp - 0x42]
0x804aa99:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804aa9c:   98                              	cwde 
0x804aa9d:   29 c2                           	sub edx, eax
0x804aa9f:   89 d0                           	mov eax, edx
0x804aaa1:   09 45 b4                        	or dword ptr [ebp - 0x4c], eax
0x804aaa4:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804aaa7:   89 c2                           	mov edx, eax
0x804aaa9:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804aaac:   09 d0                           	or eax, edx
0x804aaae:   0f b6 c8                        	movzx ecx, al
0x804aab1:   ba bf 3c b6 22                  	mov edx, 0x22b63cbf
0x804aab6:   89 c8                           	mov eax, ecx
0x804aab8:   f7 ea                           	imul edx
0x804aaba:   c1 fa 05                        	sar edx, 5
0x804aabd:   89 c8                           	mov eax, ecx
0x804aabf:   c1 f8 1f                        	sar eax, 0x1f
0x804aac2:   29 c2                           	sub edx, eax
0x804aac4:   89 d0                           	mov eax, edx
0x804aac6:   69 c0 ec 00 00 00               	imul eax, eax, 0xec
0x804aacc:   29 c1                           	sub ecx, eax
0x804aace:   ba 01 00 00 00                  	mov edx, 1
0x804aad3:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x804aad7:   39 c2                           	cmp edx, eax
0x804aad9:   0f 95 c0                        	setne al
0x804aadc:   0f b6 d0                        	movzx edx, al
0x804aadf:   0f b7 85 44 ff ff ff            	movzx eax, word ptr [ebp - 0xbc]
0x804aae6:   0f be c0                        	movsx eax, al
0x804aae9:   0f af d0                        	imul edx, eax
0x804aaec:   0f b6 45 bf                     	movzx eax, byte ptr [ebp - 0x41]
0x804aaf0:   39 c2                           	cmp edx, eax
0x804aaf2:   74 07                           	je 0x804aafb <func_1+0x12ef>
0x804aaf4:   b8 00 40 00 00                  	mov eax, 0x4000
0x804aaf9:   eb 05                           	jmp 0x804ab00 <func_1+0x12f4>
0x804aafb:   b8 00 00 00 00                  	mov eax, 0
0x804ab00:   89 c1                           	mov ecx, eax
0x804ab02:   d3 e3                           	shl ebx, cl
0x804ab04:   89 d8                           	mov eax, ebx
0x804ab06:   09 45 e4                        	or dword ptr [ebp - 0x1c], eax
0x804ab09:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804ab0d:   83 c0 07                        	add eax, 7
0x804ab10:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x804ab14:   66 83 7d ea f2                  	cmp word ptr [ebp - 0x16], -0xe
0x804ab19:   0f 85 52 ee ff ff               	jne 0x8049971 <func_1+0x165>
0x804ab1f:   eb 04                           	jmp 0x804ab25 <func_1+0x1319>
0x804ab21:   90                              	nop 
0x804ab22:   eb 01                           	jmp 0x804ab25 <func_1+0x1319>
0x804ab24:   90                              	nop 
0x804ab25:   0f b6 45 83                     	movzx eax, byte ptr [ebp - 0x7d]
0x804ab29:   0f be 55 be                     	movsx edx, byte ptr [ebp - 0x42]
0x804ab2d:   0f b6 4d bf                     	movzx ecx, byte ptr [ebp - 0x41]
0x804ab31:   0f b7 75 ca                     	movzx esi, word ptr [ebp - 0x36]
0x804ab35:   0f b7 7d d0                     	movzx edi, word ptr [ebp - 0x30]
0x804ab39:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x804ab3f:   0f bf 5d 94                     	movsx ebx, word ptr [ebp - 0x6c]
0x804ab43:   89 9d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ebx
0x804ab49:   0f be 7d 97                     	movsx edi, byte ptr [ebp - 0x69]
0x804ab4d:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x804ab53:   0f bf 5d d2                     	movsx ebx, word ptr [ebp - 0x2e]
0x804ab57:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x804ab5d:   0f b7 7d d4                     	movzx edi, word ptr [ebp - 0x2c]
0x804ab61:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804ab67:   0f be 5d d7                     	movsx ebx, byte ptr [ebp - 0x29]
0x804ab6b:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x804ab71:   0f bf 7d e0                     	movsx edi, word ptr [ebp - 0x20]
0x804ab75:   89 bd 88 fe ff ff               	mov dword ptr [ebp - 0x178], edi
0x804ab7b:   0f b7 5d e2                     	movzx ebx, word ptr [ebp - 0x1e]
0x804ab7f:   89 9d 84 fe ff ff               	mov dword ptr [ebp - 0x17c], ebx
0x804ab85:   0f be 7d e9                     	movsx edi, byte ptr [ebp - 0x17]
0x804ab89:   0f bf 5d ea                     	movsx ebx, word ptr [ebp - 0x16]
0x804ab8d:   50                              	push eax
0x804ab8e:   52                              	push edx
0x804ab8f:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804ab92:   51                              	push ecx
0x804ab93:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804ab96:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804ab99:   56                              	push esi
0x804ab9a:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804ab9d:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804aba0:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804aba6:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804aba9:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804abaf:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804abb5:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804abbb:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804abc1:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804abc7:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804abca:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804abcd:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804abd3:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804abd6:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804abd9:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804abdc:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804abdf:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804abe2:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804abe8:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804abeb:   57                              	push edi
0x804abec:   53                              	push ebx
0x804abed:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804abf0:   e8 31 ea ff ff                  	call 0x8049626 <set_var>
0x804abf5:   83 c4 74                        	add esp, 0x74
0x804abf8:   0f b6 85 7b ff ff ff            	movzx eax, byte ptr [ebp - 0x85]
0x804abff:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804ac02:   5b                              	pop ebx
0x804ac03:   5e                              	pop esi
0x804ac04:   5f                              	pop edi
0x804ac05:   5d                              	pop ebp
0x804ac06:   c3                              	ret 
; function: main at 0x804ac07 -- 0x804b010
0x804ac07:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804ac0b:   83 e4 f0                        	and esp, 0xfffffff0
0x804ac0e:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804ac11:   55                              	push ebp
0x804ac12:   89 e5                           	mov ebp, esp
0x804ac14:   53                              	push ebx
0x804ac15:   51                              	push ecx
0x804ac16:   83 ec 10                        	sub esp, 0x10
0x804ac19:   e8 72 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ac1e:   81 c3 e2 33 00 00               	add ebx, 0x33e2
0x804ac24:   89 c8                           	mov eax, ecx
0x804ac26:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804ac2d:   83 38 02                        	cmp dword ptr [eax], 2
0x804ac30:   75 26                           	jne 0x804ac58 <main+0x51>
0x804ac32:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804ac35:   83 c0 04                        	add eax, 4
0x804ac38:   8b 00                           	mov eax, dword ptr [eax]
0x804ac3a:   83 ec 08                        	sub esp, 8
0x804ac3d:   8d 93 fc d0 ff ff               	lea edx, [ebx - 0x2f04]
0x804ac43:   52                              	push edx
0x804ac44:   50                              	push eax
0x804ac45:   e8 b6 d6 ff ff                  	call 0x8048300 <strcmp>
0x804ac4a:   83 c4 10                        	add esp, 0x10
0x804ac4d:   85 c0                           	test eax, eax
0x804ac4f:   75 07                           	jne 0x804ac58 <main+0x51>
0x804ac51:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804ac58:   e8 f9 d7 ff ff                  	call 0x8048456 <platform_main_begin>
0x804ac5d:   e8 09 e8 ff ff                  	call 0x804946b <crc32_gentab>
0x804ac62:   e8 a5 eb ff ff                  	call 0x804980c <func_1>
0x804ac67:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804ac6d:   83 ec 04                        	sub esp, 4
0x804ac70:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac73:   8d 93 fe d0 ff ff               	lea edx, [ebx - 0x2f02]
0x804ac79:   52                              	push edx
0x804ac7a:   50                              	push eax
0x804ac7b:   e8 f7 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac80:   83 c4 10                        	add esp, 0x10
0x804ac83:   0f b7 83 28 00 00 00            	movzx eax, word ptr [ebx + 0x28]
0x804ac8a:   98                              	cwde 
0x804ac8b:   83 ec 04                        	sub esp, 4
0x804ac8e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac91:   8d 93 02 d1 ff ff               	lea edx, [ebx - 0x2efe]
0x804ac97:   52                              	push edx
0x804ac98:   50                              	push eax
0x804ac99:   e8 d9 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac9e:   83 c4 10                        	add esp, 0x10
0x804aca1:   0f b6 83 2a 00 00 00            	movzx eax, byte ptr [ebx + 0x2a]
0x804aca8:   0f be c0                        	movsx eax, al
0x804acab:   83 ec 04                        	sub esp, 4
0x804acae:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acb1:   8d 93 07 d1 ff ff               	lea edx, [ebx - 0x2ef9]
0x804acb7:   52                              	push edx
0x804acb8:   50                              	push eax
0x804acb9:   e8 b9 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acbe:   83 c4 10                        	add esp, 0x10
0x804acc1:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804acc7:   89 c2                           	mov edx, eax
0x804acc9:   83 ec 04                        	sub esp, 4
0x804accc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804accf:   8d 83 0c d1 ff ff               	lea eax, [ebx - 0x2ef4]
0x804acd5:   50                              	push eax
0x804acd6:   52                              	push edx
0x804acd7:   e8 9b e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acdc:   83 c4 10                        	add esp, 0x10
0x804acdf:   0f b7 83 30 00 00 00            	movzx eax, word ptr [ebx + 0x30]
0x804ace6:   0f b7 c0                        	movzx eax, ax
0x804ace9:   83 ec 04                        	sub esp, 4
0x804acec:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acef:   8d 93 11 d1 ff ff               	lea edx, [ebx - 0x2eef]
0x804acf5:   52                              	push edx
0x804acf6:   50                              	push eax
0x804acf7:   e8 7b e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acfc:   83 c4 10                        	add esp, 0x10
0x804acff:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804ad05:   89 c2                           	mov edx, eax
0x804ad07:   83 ec 04                        	sub esp, 4
0x804ad0a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad0d:   8d 83 16 d1 ff ff               	lea eax, [ebx - 0x2eea]
0x804ad13:   50                              	push eax
0x804ad14:   52                              	push edx
0x804ad15:   e8 5d e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad1a:   83 c4 10                        	add esp, 0x10
0x804ad1d:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804ad23:   83 ec 04                        	sub esp, 4
0x804ad26:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad29:   8d 93 1b d1 ff ff               	lea edx, [ebx - 0x2ee5]
0x804ad2f:   52                              	push edx
0x804ad30:   50                              	push eax
0x804ad31:   e8 41 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad36:   83 c4 10                        	add esp, 0x10
0x804ad39:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804ad3f:   83 ec 04                        	sub esp, 4
0x804ad42:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad45:   8d 93 20 d1 ff ff               	lea edx, [ebx - 0x2ee0]
0x804ad4b:   52                              	push edx
0x804ad4c:   50                              	push eax
0x804ad4d:   e8 25 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad52:   83 c4 10                        	add esp, 0x10
0x804ad55:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804ad5b:   89 c2                           	mov edx, eax
0x804ad5d:   83 ec 04                        	sub esp, 4
0x804ad60:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad63:   8d 83 25 d1 ff ff               	lea eax, [ebx - 0x2edb]
0x804ad69:   50                              	push eax
0x804ad6a:   52                              	push edx
0x804ad6b:   e8 07 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad70:   83 c4 10                        	add esp, 0x10
0x804ad73:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804ad79:   83 ec 04                        	sub esp, 4
0x804ad7c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad7f:   8d 93 2a d1 ff ff               	lea edx, [ebx - 0x2ed6]
0x804ad85:   52                              	push edx
0x804ad86:   50                              	push eax
0x804ad87:   e8 eb e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad8c:   83 c4 10                        	add esp, 0x10
0x804ad8f:   0f b7 83 48 00 00 00            	movzx eax, word ptr [ebx + 0x48]
0x804ad96:   98                              	cwde 
0x804ad97:   83 ec 04                        	sub esp, 4
0x804ad9a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad9d:   8d 93 2f d1 ff ff               	lea edx, [ebx - 0x2ed1]
0x804ada3:   52                              	push edx
0x804ada4:   50                              	push eax
0x804ada5:   e8 cd e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adaa:   83 c4 10                        	add esp, 0x10
0x804adad:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804adb3:   83 ec 04                        	sub esp, 4
0x804adb6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adb9:   8d 93 34 d1 ff ff               	lea edx, [ebx - 0x2ecc]
0x804adbf:   52                              	push edx
0x804adc0:   50                              	push eax
0x804adc1:   e8 b1 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adc6:   83 c4 10                        	add esp, 0x10
0x804adc9:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804adcf:   83 ec 04                        	sub esp, 4
0x804add2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804add5:   8d 93 39 d1 ff ff               	lea edx, [ebx - 0x2ec7]
0x804addb:   52                              	push edx
0x804addc:   50                              	push eax
0x804addd:   e8 95 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ade2:   83 c4 10                        	add esp, 0x10
0x804ade5:   0f b6 83 54 00 00 00            	movzx eax, byte ptr [ebx + 0x54]
0x804adec:   0f be c0                        	movsx eax, al
0x804adef:   83 ec 04                        	sub esp, 4
0x804adf2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adf5:   8d 93 3e d1 ff ff               	lea edx, [ebx - 0x2ec2]
0x804adfb:   52                              	push edx
0x804adfc:   50                              	push eax
0x804adfd:   e8 75 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae02:   83 c4 10                        	add esp, 0x10
0x804ae05:   0f b7 83 56 00 00 00            	movzx eax, word ptr [ebx + 0x56]
0x804ae0c:   0f b7 c0                        	movzx eax, ax
0x804ae0f:   83 ec 04                        	sub esp, 4
0x804ae12:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae15:   8d 93 44 d1 ff ff               	lea edx, [ebx - 0x2ebc]
0x804ae1b:   52                              	push edx
0x804ae1c:   50                              	push eax
0x804ae1d:   e8 55 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae22:   83 c4 10                        	add esp, 0x10
0x804ae25:   0f b7 83 58 00 00 00            	movzx eax, word ptr [ebx + 0x58]
0x804ae2c:   98                              	cwde 
0x804ae2d:   83 ec 04                        	sub esp, 4
0x804ae30:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae33:   8d 93 4a d1 ff ff               	lea edx, [ebx - 0x2eb6]
0x804ae39:   52                              	push edx
0x804ae3a:   50                              	push eax
0x804ae3b:   e8 37 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae40:   83 c4 10                        	add esp, 0x10
0x804ae43:   0f b6 83 5a 00 00 00            	movzx eax, byte ptr [ebx + 0x5a]
0x804ae4a:   0f be c0                        	movsx eax, al
0x804ae4d:   83 ec 04                        	sub esp, 4
0x804ae50:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae53:   8d 93 50 d1 ff ff               	lea edx, [ebx - 0x2eb0]
0x804ae59:   52                              	push edx
0x804ae5a:   50                              	push eax
0x804ae5b:   e8 17 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae60:   83 c4 10                        	add esp, 0x10
0x804ae63:   0f b7 83 5c 00 00 00            	movzx eax, word ptr [ebx + 0x5c]
0x804ae6a:   98                              	cwde 
0x804ae6b:   83 ec 04                        	sub esp, 4
0x804ae6e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae71:   8d 93 56 d1 ff ff               	lea edx, [ebx - 0x2eaa]
0x804ae77:   52                              	push edx
0x804ae78:   50                              	push eax
0x804ae79:   e8 f9 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae7e:   83 c4 10                        	add esp, 0x10
0x804ae81:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804ae87:   89 c2                           	mov edx, eax
0x804ae89:   83 ec 04                        	sub esp, 4
0x804ae8c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae8f:   8d 83 5c d1 ff ff               	lea eax, [ebx - 0x2ea4]
0x804ae95:   50                              	push eax
0x804ae96:   52                              	push edx
0x804ae97:   e8 db e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae9c:   83 c4 10                        	add esp, 0x10
0x804ae9f:   0f b7 83 64 00 00 00            	movzx eax, word ptr [ebx + 0x64]
0x804aea6:   0f b7 c0                        	movzx eax, ax
0x804aea9:   83 ec 04                        	sub esp, 4
0x804aeac:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aeaf:   8d 93 62 d1 ff ff               	lea edx, [ebx - 0x2e9e]
0x804aeb5:   52                              	push edx
0x804aeb6:   50                              	push eax
0x804aeb7:   e8 bb e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aebc:   83 c4 10                        	add esp, 0x10
0x804aebf:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804aec5:   83 ec 04                        	sub esp, 4
0x804aec8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aecb:   8d 93 68 d1 ff ff               	lea edx, [ebx - 0x2e98]
0x804aed1:   52                              	push edx
0x804aed2:   50                              	push eax
0x804aed3:   e8 9f e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aed8:   83 c4 10                        	add esp, 0x10
0x804aedb:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804aee1:   83 ec 04                        	sub esp, 4
0x804aee4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aee7:   8d 93 6e d1 ff ff               	lea edx, [ebx - 0x2e92]
0x804aeed:   52                              	push edx
0x804aeee:   50                              	push eax
0x804aeef:   e8 83 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aef4:   83 c4 10                        	add esp, 0x10
0x804aef7:   0f b7 83 70 00 00 00            	movzx eax, word ptr [ebx + 0x70]
0x804aefe:   0f b7 c0                        	movzx eax, ax
0x804af01:   83 ec 04                        	sub esp, 4
0x804af04:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af07:   8d 93 74 d1 ff ff               	lea edx, [ebx - 0x2e8c]
0x804af0d:   52                              	push edx
0x804af0e:   50                              	push eax
0x804af0f:   e8 63 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af14:   83 c4 10                        	add esp, 0x10
0x804af17:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804af1d:   89 c2                           	mov edx, eax
0x804af1f:   83 ec 04                        	sub esp, 4
0x804af22:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af25:   8d 83 7a d1 ff ff               	lea eax, [ebx - 0x2e86]
0x804af2b:   50                              	push eax
0x804af2c:   52                              	push edx
0x804af2d:   e8 45 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af32:   83 c4 10                        	add esp, 0x10
0x804af35:   8b 83 78 00 00 00               	mov eax, dword ptr [ebx + 0x78]
0x804af3b:   83 ec 04                        	sub esp, 4
0x804af3e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af41:   8d 93 80 d1 ff ff               	lea edx, [ebx - 0x2e80]
0x804af47:   52                              	push edx
0x804af48:   50                              	push eax
0x804af49:   e8 29 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af4e:   83 c4 10                        	add esp, 0x10
0x804af51:   0f b6 83 7c 00 00 00            	movzx eax, byte ptr [ebx + 0x7c]
0x804af58:   0f b6 c0                        	movzx eax, al
0x804af5b:   83 ec 04                        	sub esp, 4
0x804af5e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af61:   8d 93 86 d1 ff ff               	lea edx, [ebx - 0x2e7a]
0x804af67:   52                              	push edx
0x804af68:   50                              	push eax
0x804af69:   e8 09 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af6e:   83 c4 10                        	add esp, 0x10
0x804af71:   b8 b2 1b b6 51                  	mov eax, 0x51b61bb2
0x804af76:   89 c2                           	mov edx, eax
0x804af78:   83 ec 04                        	sub esp, 4
0x804af7b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af7e:   8d 83 8c d1 ff ff               	lea eax, [ebx - 0x2e74]
0x804af84:   50                              	push eax
0x804af85:   52                              	push edx
0x804af86:   e8 ec e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af8b:   83 c4 10                        	add esp, 0x10
0x804af8e:   8b 83 80 00 00 00               	mov eax, dword ptr [ebx + 0x80]
0x804af94:   83 ec 04                        	sub esp, 4
0x804af97:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af9a:   8d 93 92 d1 ff ff               	lea edx, [ebx - 0x2e6e]
0x804afa0:   52                              	push edx
0x804afa1:   50                              	push eax
0x804afa2:   e8 d0 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afa7:   83 c4 10                        	add esp, 0x10
0x804afaa:   0f b6 83 84 00 00 00            	movzx eax, byte ptr [ebx + 0x84]
0x804afb1:   0f be c0                        	movsx eax, al
0x804afb4:   83 ec 04                        	sub esp, 4
0x804afb7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afba:   8d 93 98 d1 ff ff               	lea edx, [ebx - 0x2e68]
0x804afc0:   52                              	push edx
0x804afc1:   50                              	push eax
0x804afc2:   e8 b0 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afc7:   83 c4 10                        	add esp, 0x10
0x804afca:   0f b6 83 85 00 00 00            	movzx eax, byte ptr [ebx + 0x85]
0x804afd1:   0f b6 c0                        	movzx eax, al
0x804afd4:   83 ec 04                        	sub esp, 4
0x804afd7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afda:   8d 93 9e d1 ff ff               	lea edx, [ebx - 0x2e62]
0x804afe0:   52                              	push edx
0x804afe1:   50                              	push eax
0x804afe2:   e8 90 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afe7:   83 c4 10                        	add esp, 0x10
0x804afea:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804aff0:   f7 d0                           	not eax
0x804aff2:   83 ec 08                        	sub esp, 8
0x804aff5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aff8:   50                              	push eax
0x804aff9:   e8 68 d4 ff ff                  	call 0x8048466 <platform_main_end>
0x804affe:   83 c4 10                        	add esp, 0x10
0x804b001:   b8 00 00 00 00                  	mov eax, 0
0x804b006:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b009:   59                              	pop ecx
0x804b00a:   5b                              	pop ebx
0x804b00b:   5d                              	pop ebp
0x804b00c:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b00f:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b010 -- 0x804b014
0x804b010:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b013:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b014 -- 0x804b018
0x804b014:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b017:   c3                              	ret 
; data inside code section at 0x804b018 -- 0x804b020
0x804b018:   66 90 66 90 66 90 66 90                            |f.f.f.f.        |
; function: __libc_csu_init at 0x804b020 -- 0x804b07d
0x804b020:   55                              	push ebp
0x804b021:   57                              	push edi
0x804b022:   56                              	push esi
0x804b023:   53                              	push ebx
0x804b024:   e8 67 d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b029:   81 c3 d7 2f 00 00               	add ebx, 0x2fd7
0x804b02f:   83 ec 0c                        	sub esp, 0xc
0x804b032:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b036:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b03c:   e8 8b d2 ff ff                  	call 0x80482cc <_init>
0x804b041:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b047:   29 c6                           	sub esi, eax
0x804b049:   c1 fe 02                        	sar esi, 2
0x804b04c:   85 f6                           	test esi, esi
0x804b04e:   74 25                           	je 0x804b075 <__libc_csu_init+0x55>
0x804b050:   31 ff                           	xor edi, edi
0x804b052:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b058:   83 ec 04                        	sub esp, 4
0x804b05b:   55                              	push ebp
0x804b05c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b060:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b064:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b06b:   83 c7 01                        	add edi, 1
0x804b06e:   83 c4 10                        	add esp, 0x10
0x804b071:   39 fe                           	cmp esi, edi
0x804b073:   75 e3                           	jne 0x804b058 <__libc_csu_init+0x38>
0x804b075:   83 c4 0c                        	add esp, 0xc
0x804b078:   5b                              	pop ebx
0x804b079:   5e                              	pop esi
0x804b07a:   5f                              	pop edi
0x804b07b:   5d                              	pop ebp
0x804b07c:   c3                              	ret 
; data inside code section at 0x804b07d -- 0x804b080
0x804b07d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b080 -- 0x804b082
0x804b080:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b084 -- 0x804b098
0x804b084:   53                              	push ebx
0x804b085:   83 ec 08                        	sub esp, 8
0x804b088:   e8 03 d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b08d:   81 c3 73 2f 00 00               	add ebx, 0x2f73
0x804b093:   83 c4 08                        	add esp, 8
0x804b096:   5b                              	pop ebx
0x804b097:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 9c b0 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b098:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b0a8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b0b8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b0c8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b0d8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b0e8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b0f8:   b2 1b b6 51 31 00 67 5f  32 00 67 5f 31 36 00 67   |...Q1.g_2.g_16.g|
0x804b108:   5f 31 37 00 67 5f 31 38  00 67 5f 31 39 00 67 5f   |_17.g_18.g_19.g_|
0x804b118:   32 30 00 67 5f 35 32 00  67 5f 35 38 00 67 5f 36   |20.g_52.g_58.g_6|
0x804b128:   30 00 67 5f 37 37 00 67  5f 38 39 00 67 5f 39 36   |0.g_77.g_89.g_96|
0x804b138:   00 67 5f 39 37 00 67 5f  31 35 35 00 67 5f 31 35   |.g_97.g_155.g_15|
0x804b148:   36 00 67 5f 31 39 31 00  67 5f 31 39 33 00 67 5f   |6.g_191.g_193.g_|
0x804b158:   31 39 35 00 67 5f 32 30  30 00 67 5f 32 30 31 00   |195.g_200.g_201.|
0x804b168:   67 5f 32 35 32 00 67 5f  32 38 34 00 67 5f 33 34   |g_252.g_284.g_34|
0x804b178:   30 00 67 5f 34 30 34 00  67 5f 34 30 35 00 67 5f   |0.g_404.g_405.g_|
0x804b188:   34 31 39 00 67 5f 34 34  32 00 67 5f 34 38 35 00   |419.g_442.g_485.|
0x804b198:   67 5f 35 31 35 00 67 5f  35 31 36 00 00 00 00 3f   |g_515.g_516....?|
0x804b1a8:   ff ff ff 7e 00 00 80 0d  00 00 80 31 ff ff 7f 3f   |...~.......1...?|
0x804b1b8:   00 00 00 27 00 00 80 71  ff ff ff 34 00 00 00 00   |...'...q...4....|
0x804b1c8:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804b1d8:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804b1e8:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804b1f8:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804b208:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804b210:   01 1b 03 3b b8 02 00 00  56 00 00 00 e0 d0 ff ff   |...;....V.......|
0x804b220:   e8 02 00 00 20 d1 ff ff  0c 03 00 00 70 d1 ff ff   |.... .......p...|
0x804b230:   d4 02 00 00 46 d2 ff ff  20 03 00 00 56 d2 ff ff   |....F... ...V...|
0x804b240:   40 03 00 00 84 d2 ff ff  64 03 00 00 a2 d2 ff ff   |@.......d.......|
0x804b250:   84 03 00 00 ca d2 ff ff  a4 03 00 00 f4 d2 ff ff   |................|
0x804b260:   c4 03 00 00 1d d3 ff ff  e4 03 00 00 60 d3 ff ff   |............`...|
0x804b270:   04 04 00 00 a1 d3 ff ff  24 04 00 00 f9 d3 ff ff   |........$.......|
0x804b280:   48 04 00 00 4b d4 ff ff  6c 04 00 00 88 d4 ff ff   |H...K...l.......|
0x804b290:   8c 04 00 00 bf d4 ff ff  ac 04 00 00 de d4 ff ff   |................|
0x804b2a0:   cc 04 00 00 08 d5 ff ff  ec 04 00 00 34 d5 ff ff   |............4...|
0x804b2b0:   0c 05 00 00 5f d5 ff ff  2c 05 00 00 a8 d5 ff ff   |...._...,.......|
0x804b2c0:   4c 05 00 00 ef d5 ff ff  6c 05 00 00 49 d6 ff ff   |L.......l...I...|
0x804b2d0:   90 05 00 00 9d d6 ff ff  b4 05 00 00 dc d6 ff ff   |................|
0x804b2e0:   d4 05 00 00 15 d7 ff ff  f4 05 00 00 37 d7 ff ff   |............7...|
0x804b2f0:   14 06 00 00 85 d7 ff ff  34 06 00 00 c1 d7 ff ff   |........4.......|
0x804b300:   54 06 00 00 4a d8 ff ff  74 06 00 00 7c d8 ff ff   |T...J...t...|...|
0x804b310:   94 06 00 00 ac d8 ff ff  b4 06 00 00 f1 d8 ff ff   |................|
0x804b320:   d4 06 00 00 30 d9 ff ff  f4 06 00 00 62 d9 ff ff   |....0.......b...|
0x804b330:   14 07 00 00 8e d9 ff ff  34 07 00 00 ac d9 ff ff   |........4.......|
0x804b340:   54 07 00 00 d4 d9 ff ff  74 07 00 00 f9 d9 ff ff   |T.......t.......|
0x804b350:   94 07 00 00 1e da ff ff  b4 07 00 00 55 da ff ff   |............U...|
0x804b360:   d4 07 00 00 89 da ff ff  f4 07 00 00 db da ff ff   |................|
0x804b370:   18 08 00 00 27 db ff ff  3c 08 00 00 5e db ff ff   |....'...<...^...|
0x804b380:   5c 08 00 00 8f db ff ff  7c 08 00 00 ae db ff ff   |\.......|.......|
0x804b390:   9c 08 00 00 d8 db ff ff  bc 08 00 00 00 dc ff ff   |................|
0x804b3a0:   dc 08 00 00 29 dc ff ff  fc 08 00 00 65 dc ff ff   |....).......e...|
0x804b3b0:   1c 09 00 00 9f dc ff ff  3c 09 00 00 f2 dc ff ff   |........<.......|
0x804b3c0:   60 09 00 00 3f dd ff ff  84 09 00 00 77 dd ff ff   |`...?.......w...|
0x804b3d0:   a4 09 00 00 a9 dd ff ff  c4 09 00 00 bd dd ff ff   |................|
0x804b3e0:   e4 09 00 00 d4 dd ff ff  04 0a 00 00 e9 dd ff ff   |................|
0x804b3f0:   24 0a 00 00 ff dd ff ff  44 0a 00 00 26 de ff ff   |$.......D...&...|
0x804b400:   64 0a 00 00 4b de ff ff  84 0a 00 00 8a de ff ff   |d...K...........|
0x804b410:   a4 0a 00 00 c3 de ff ff  c4 0a 00 00 ef de ff ff   |................|
0x804b420:   e4 0a 00 00 15 df ff ff  04 0b 00 00 57 df ff ff   |............W...|
0x804b430:   24 0b 00 00 99 df ff ff  44 0b 00 00 db df ff ff   |$.......D.......|
0x804b440:   64 0b 00 00 50 e0 ff ff  84 0b 00 00 ad e0 ff ff   |d...P...........|
0x804b450:   a4 0b 00 00 0a e1 ff ff  c4 0b 00 00 67 e1 ff ff   |............g...|
0x804b460:   e4 0b 00 00 f7 e1 ff ff  04 0c 00 00 5b e2 ff ff   |............[...|
0x804b470:   24 0c 00 00 cb e2 ff ff  44 0c 00 00 12 e3 ff ff   |$.......D.......|
0x804b480:   68 0c 00 00 67 e3 ff ff  88 0c 00 00 ae e3 ff ff   |h...g...........|
0x804b490:   ac 0c 00 00 16 e4 ff ff  d0 0c 00 00 fc e5 ff ff   |................|
0x804b4a0:   00 0d 00 00 f7 f9 ff ff  30 0d 00 00 00 fe ff ff   |........0.......|
0x804b4b0:   68 0d 00 00 04 fe ff ff  7c 0d 00 00 10 fe ff ff   |h.......|.......|
0x804b4c0:   90 0d 00 00 70 fe ff ff  dc 0d 00 00 14            |....p........   |
; section: .eh_frame
0x804b4cc:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b4dc:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b4ec:   94 ce ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b4fc:   30 00 00 00 f0 cd ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b50c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b51c:   10 00 00 00 54 00 00 00  0c ce ff ff 08 00 00 00   |....T...........|
0x804b52c:   00 00 00 00 1c 00 00 00  68 00 00 00 1e cf ff ff   |........h.......|
0x804b53c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b54c:   04 04 00 00 20 00 00 00  88 00 00 00 0e cf ff ff   |.... ...........|
0x804b55c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b56c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b57c:   18 cf ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b58c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b59c:   16 cf ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b5ac:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b5bc:   1e cf ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b5cc:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b5dc:   28 cf ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |(...)....A....B.|
0x804b5ec:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b5fc:   31 cf ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |1...C....A....B.|
0x804b60c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b61c:   54 cf ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |T...A....A....B.|
0x804b62c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b63c:   75 cf ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |u...X....A....B.|
0x804b64c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b65c:   90 01 00 00 a9 cf ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b66c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b67c:   1c 00 00 00 b4 01 00 00  d7 cf ff ff 3d 00 00 00   |............=...|
0x804b68c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b69c:   1c 00 00 00 d4 01 00 00  f4 cf ff ff 37 00 00 00   |............7...|
0x804b6ac:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b6bc:   1c 00 00 00 f4 01 00 00  0b d0 ff ff 1f 00 00 00   |................|
0x804b6cc:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b6dc:   1c 00 00 00 14 02 00 00  0a d0 ff ff 2a 00 00 00   |............*...|
0x804b6ec:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b6fc:   1c 00 00 00 34 02 00 00  14 d0 ff ff 2c 00 00 00   |....4.......,...|
0x804b70c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b71c:   1c 00 00 00 54 02 00 00  20 d0 ff ff 2b 00 00 00   |....T... ...+...|
0x804b72c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b73c:   1c 00 00 00 74 02 00 00  2b d0 ff ff 49 00 00 00   |....t...+...I...|
0x804b74c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b75c:   1c 00 00 00 94 02 00 00  54 d0 ff ff 47 00 00 00   |........T...G...|
0x804b76c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b77c:   20 00 00 00 b4 02 00 00  7b d0 ff ff 5a 00 00 00   | .......{...Z...|
0x804b78c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b79c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 b1 d0 ff ff   |.... ...........|
0x804b7ac:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b7bc:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b7cc:   e1 d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b7dc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b7ec:   00 d1 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b7fc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b80c:   19 d1 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b81c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b82c:   1b d1 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b83c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b84c:   49 d1 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |I...<....A....B.|
0x804b85c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b86c:   65 d1 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |e........A....B.|
0x804b87c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b88c:   ce d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b89c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b8ac:   e0 d1 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b8bc:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b8cc:   f0 d1 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b8dc:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b8ec:   15 d2 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b8fc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b90c:   34 d2 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |4...2....A....B.|
0x804b91c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b92c:   46 d2 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |F...,....A....B.|
0x804b93c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b94c:   52 d2 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |R........A....B.|
0x804b95c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b96c:   50 d2 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |P...(....A....B.|
0x804b97c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b98c:   58 d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |X...%....A....B.|
0x804b99c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b9ac:   5d d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |]...%....A....B.|
0x804b9bc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b9cc:   62 d2 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |b...7....A....B.|
0x804b9dc:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b9ec:   79 d2 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |y...4....A....B.|
0x804b9fc:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804ba0c:   8d d2 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804ba1c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804ba2c:   60 05 00 00 bb d2 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804ba3c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804ba4c:   1c 00 00 00 84 05 00 00  e3 d2 ff ff 37 00 00 00   |............7...|
0x804ba5c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804ba6c:   1c 00 00 00 a4 05 00 00  fa d2 ff ff 31 00 00 00   |............1...|
0x804ba7c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804ba8c:   1c 00 00 00 c4 05 00 00  0b d3 ff ff 1f 00 00 00   |................|
0x804ba9c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804baac:   1c 00 00 00 e4 05 00 00  0a d3 ff ff 2a 00 00 00   |............*...|
0x804babc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bacc:   1c 00 00 00 04 06 00 00  14 d3 ff ff 28 00 00 00   |............(...|
0x804badc:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804baec:   1c 00 00 00 24 06 00 00  1c d3 ff ff 29 00 00 00   |....$.......)...|
0x804bafc:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bb0c:   1c 00 00 00 44 06 00 00  25 d3 ff ff 3c 00 00 00   |....D...%...<...|
0x804bb1c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bb2c:   1c 00 00 00 64 06 00 00  41 d3 ff ff 3a 00 00 00   |....d...A...:...|
0x804bb3c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bb4c:   20 00 00 00 84 06 00 00  5b d3 ff ff 53 00 00 00   | .......[...S...|
0x804bb5c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bb6c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 8a d3 ff ff   |.... ...........|
0x804bb7c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bb8c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bb9c:   b3 d3 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804bbac:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bbbc:   cb d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bbcc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bbdc:   dd d3 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bbec:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bbfc:   d1 d3 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc0c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bc1c:   c8 d3 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc2c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bc3c:   bd d3 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc4c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bc5c:   b3 d3 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804bc6c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bc7c:   ba d3 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bc8c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bc9c:   bf d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804bcac:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bcbc:   de d3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bccc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bcdc:   f7 d3 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bcec:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bcfc:   03 d4 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804bd0c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bd1c:   09 d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bd2c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bd3c:   2b d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |+...B....A....B.|
0x804bd4c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bd5c:   4d d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |M...B....A....B.|
0x804bd6c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bd7c:   6f d4 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |o...u....A....B.|
0x804bd8c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bd9c:   c4 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bdac:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bdbc:   01 d5 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bdcc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bddc:   3e d5 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |>...]....A....B.|
0x804bdec:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bdfc:   7b d5 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |{........A....B.|
0x804be0c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804be1c:   eb d5 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804be2c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804be3c:   2f d6 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |/...p....A....B.|
0x804be4c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804be5c:   7f d6 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804be6c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804be7c:   b0 09 00 00 a2 d6 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804be8c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804be9c:   d0 09 00 00 d7 d6 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804beac:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bebc:   20 00 00 00 f4 09 00 00  fa d6 ff ff 68 00 00 00   | ...........h...|
0x804becc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bedc:   0c 04 04 00 2c 00 00 00  18 0a 00 00 3e d7 ff ff   |....,.......>...|
0x804beec:   e6 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804befc:   86 04 83 05 03 d9 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bf0c:   04 00 00 00 2c 00 00 00  48 0a 00 00 f4 d8 ff ff   |....,...H.......|
0x804bf1c:   fb 13 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804bf2c:   86 04 83 05 03 eb 13 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bf3c:   04 00 00 00 34 00 00 00  78 0a 00 00 bf ec ff ff   |....4...x.......|
0x804bf4c:   09 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804bf5c:   0f 03 75 78 06 10 03 02  75 7c 03 f4 03 c1 0c 01   |..ux....u|......|
0x804bf6c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bf7c:   b0 0a 00 00 90 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804bf8c:   10 00 00 00 c4 0a 00 00  80 f0 ff ff 04 00 00 00   |................|
0x804bf9c:   00 00 00 00 48 00 00 00  d8 0a 00 00 78 f0 ff ff   |....H.......x...|
0x804bfac:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bfbc:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bfcc:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bfdc:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bfec:   10 00 00 00 24 0b 00 00  8c f0 ff ff 02 00 00 00   |....$...........|
0x804bffc:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 84 b0 04 08  19 00 00 00 0c df 04 08   |................|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 64 b0 be 39   |............d..9|
0x804e028:   ff ff f5 00 79 b3 06 57  8b 05 00 00 01 00 00 00   |....y..W........|
0x804e038:   f6 ff ff ff 19 f0 d9 1b  80 d7 bf 80 0c 34 be 0e   |.............4..|
0x804e048:   51 eb 00 00 ff ff ff ff  9b a0 bb d4 32 00 6c 94   |Q...........2.l.|
0x804e058:   ff ff 15 00 8a 6e 00 00  e4 2c c1 e9 fe 91 00 00   |.....n...,......|
0x804e068:   ff ff ff ff 94 69 65 82  06 00 00 00 3f 0b 39 85   |.....ie.....?.9.|
0x804e078:   c4 00 46 d1 86 00 00 00  6f 1f a2 5a 08 09 ??      |..F.....o..Z..? |
