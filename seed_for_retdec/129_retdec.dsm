;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 16:59:44
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 b0 d1 ff ff               	lea eax, [ebx - 0x2e50]
0x804835c:   50                              	push eax
0x804835d:   8d 83 50 d1 ff ff               	lea eax, [ebx - 0x2eb0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 0b ad 04 08               	mov eax, 0x804ad0b
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 80 e0 04 08                  	mov eax, 0x804e080
0x80483a5:   3d 80 e0 04 08                  	cmp eax, 0x804e080
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 80 e0 04 08                  	push 0x804e080
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 80 e0 04 08                  	mov eax, 0x804e080
0x80483e5:   2d 80 e0 04 08                  	sub eax, 0x804e080
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 80 e0 04 08                  	push 0x804e080
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 e0 04 08 00            	cmp byte ptr [0x804e080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 e0 04 08 01            	mov byte ptr [0x804e080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 e9 2c 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 d5 2c 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 d0 d1 ff ff               	lea edx, [eax - 0x2e30]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 a8 2c 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 8a 2c 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 62 2c 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 38 2c 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 0f 2c 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 cc 2b 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 8a 2b 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 32 2b 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 e1 2a 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 a4 2a 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 6d 2a 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 4e 2a 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 24 2a 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 f8 29 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 cd 29 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 84 29 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 3c 29 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 e2 28 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 8f 28 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 50 28 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 1a 28 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 f8 27 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 aa 27 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 6e 27 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 e5 26 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 b3 26 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 83 26 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 3e 26 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 ff 25 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 cd 25 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 9e 25 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 80 25 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 58 25 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 33 25 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 0e 25 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 d7 24 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 a2 24 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 50 24 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 05 24 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 ce 23 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 9d 23 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 7e 23 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 54 23 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 2c 23 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 03 23 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 c7 22 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 8c 22 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 39 22 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 ed 21 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 b5 21 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 86 21 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 72 21 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 5b 21 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 46 21 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 30 21 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 09 21 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 e4 20 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 a5 20 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 6c 20 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 40 20 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 1a 20 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 d8 d2 ff ff               	fld dword ptr [eax - 0x2d28]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 d8 d2 ff ff               	fld dword ptr [eax - 0x2d28]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 dc d2 ff ff               	fld dword ptr [eax - 0x2d24]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 d8 1f 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 d8 d2 ff ff               	fld dword ptr [eax - 0x2d28]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 d8 d2 ff ff               	fld dword ptr [eax - 0x2d28]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 dc d2 ff ff               	fld dword ptr [eax - 0x2d24]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 96 1f 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 e0 d2 ff ff               	fld dword ptr [eax - 0x2d20]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 e4 d2 ff ff               	fld dword ptr [eax - 0x2d1c]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 e8 d2 ff ff               	fld dword ptr [eax - 0x2d18]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 54 1f 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 ec d2 ff ff               	fld dword ptr [eax - 0x2d14]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 f0 d2 ff ff               	fld dword ptr [eax - 0x2d10]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 f4 d2 ff ff               	fld dword ptr [eax - 0x2d0c]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 dc 1e 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 f8 d2 ff ff               	fld qword ptr [eax - 0x2d08]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 f8 d2 ff ff               	fld qword ptr [eax - 0x2d08]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 00 d3 ff ff               	fld qword ptr [eax - 0x2d00]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 7f 1e 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 f8 d2 ff ff               	fld qword ptr [eax - 0x2d08]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 f8 d2 ff ff               	fld qword ptr [eax - 0x2d08]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 00 d3 ff ff               	fld qword ptr [eax - 0x2d00]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 22 1e 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 08 d3 ff ff               	fld qword ptr [eax - 0x2cf8]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 10 d3 ff ff               	fld qword ptr [eax - 0x2cf0]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 18 d3 ff ff               	fld qword ptr [eax - 0x2ce8]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 c5 1d 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 20 d3 ff ff               	fld qword ptr [eax - 0x2ce0]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 28 d3 ff ff               	fld qword ptr [eax - 0x2cd8]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 30 d3 ff ff               	fld qword ptr [eax - 0x2cd0]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 35 1d 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 38 d3 ff ff               	fld dword ptr [eax - 0x2cc8]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 3c d3 ff ff               	fld dword ptr [eax - 0x2cc4]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 d1 1c 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 60 1c 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 1d 1c 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 e0 d1 ff ff               	lea eax, [ebx - 0x2e20]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 04 d2 ff ff               	lea eax, [ebx - 0x2dfc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804988b
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   81 ec 88 00 00 00               	sub esp, 0x88
0x8049632:   e8 14 1b 00 00                  	call 0x804b14b <__x86.get_pc_thunk.dx>
0x8049637:   81 c2 c9 49 00 00               	add edx, 0x49c9
0x804963d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049640:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049643:   8b 4d 0c                        	mov ecx, dword ptr [ebp + 0xc]
0x8049646:   8b 5d 10                        	mov ebx, dword ptr [ebp + 0x10]
0x8049649:   8b 75 14                        	mov esi, dword ptr [ebp + 0x14]
0x804964c:   8b 7d 18                        	mov edi, dword ptr [ebp + 0x18]
0x804964f:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x8049652:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049655:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x8049658:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804965b:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x804965e:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049661:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x8049664:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049667:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x804966a:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804966d:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x8049670:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049673:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049676:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049679:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x804967c:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804967f:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x8049682:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x8049685:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x8049688:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804968e:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x8049691:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x8049697:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x804969a:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x80496a0:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x80496a3:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x80496a9:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x80496ac:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x80496b2:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80496b6:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x80496ba:   89 c8                           	mov eax, ecx
0x80496bc:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x80496bf:   89 d8                           	mov eax, ebx
0x80496c1:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x80496c4:   89 f0                           	mov eax, esi
0x80496c6:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496c9:   89 f8                           	mov eax, edi
0x80496cb:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x80496ce:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496d2:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496d6:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x80496da:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496de:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x80496e2:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496e6:   0f b7 45 94                     	movzx eax, word ptr [ebp - 0x6c]
0x80496ea:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496ee:   0f b6 45 90                     	movzx eax, byte ptr [ebp - 0x70]
0x80496f2:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496f5:   0f b6 45 8c                     	movzx eax, byte ptr [ebp - 0x74]
0x80496f9:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496fc:   0f b7 45 88                     	movzx eax, word ptr [ebp - 0x78]
0x8049700:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x8049704:   0f b6 45 84                     	movzx eax, byte ptr [ebp - 0x7c]
0x8049708:   88 45 c0                        	mov byte ptr [ebp - 0x40], al
0x804970b:   0f b7 45 80                     	movzx eax, word ptr [ebp - 0x80]
0x804970f:   66 89 45 bc                     	mov word ptr [ebp - 0x44], ax
0x8049713:   0f b7 85 7c ff ff ff            	movzx eax, word ptr [ebp - 0x84]
0x804971a:   66 89 45 b8                     	mov word ptr [ebp - 0x48], ax
0x804971e:   0f b6 85 78 ff ff ff            	movzx eax, byte ptr [ebp - 0x88]
0x8049725:   88 45 b4                        	mov byte ptr [ebp - 0x4c], al
0x8049728:   0f b6 85 74 ff ff ff            	movzx eax, byte ptr [ebp - 0x8c]
0x804972f:   88 45 b0                        	mov byte ptr [ebp - 0x50], al
0x8049732:   0f b6 85 70 ff ff ff            	movzx eax, byte ptr [ebp - 0x90]
0x8049739:   88 45 ac                        	mov byte ptr [ebp - 0x54], al
0x804973c:   0f b6 85 6c ff ff ff            	movzx eax, byte ptr [ebp - 0x94]
0x8049743:   88 45 a8                        	mov byte ptr [ebp - 0x58], al
0x8049746:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804974a:   66 89 82 24 00 00 00            	mov word ptr [edx + 0x24], ax
0x8049751:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x8049755:   88 82 26 00 00 00               	mov byte ptr [edx + 0x26], al
0x804975b:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x804975f:   88 82 27 00 00 00               	mov byte ptr [edx + 0x27], al
0x8049765:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x8049769:   88 82 28 00 00 00               	mov byte ptr [edx + 0x28], al
0x804976f:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049773:   88 82 29 00 00 00               	mov byte ptr [edx + 0x29], al
0x8049779:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804977d:   66 89 82 2a 00 00 00            	mov word ptr [edx + 0x2a], ax
0x8049784:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x8049788:   66 89 82 2c 00 00 00            	mov word ptr [edx + 0x2c], ax
0x804978f:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x8049792:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x8049798:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x804979b:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x80497a1:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x80497a4:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x80497aa:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x80497ad:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x80497b3:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x80497b6:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x80497bc:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x80497c0:   66 89 82 44 00 00 00            	mov word ptr [edx + 0x44], ax
0x80497c7:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x80497cb:   66 89 82 46 00 00 00            	mov word ptr [edx + 0x46], ax
0x80497d2:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x80497d5:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x80497db:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x80497df:   88 82 4c 00 00 00               	mov byte ptr [edx + 0x4c], al
0x80497e5:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x80497e8:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x80497ee:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497f2:   88 82 54 00 00 00               	mov byte ptr [edx + 0x54], al
0x80497f8:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80497fc:   66 89 82 56 00 00 00            	mov word ptr [edx + 0x56], ax
0x8049803:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x8049807:   88 82 58 00 00 00               	mov byte ptr [edx + 0x58], al
0x804980d:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x8049811:   66 89 82 5a 00 00 00            	mov word ptr [edx + 0x5a], ax
0x8049818:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x804981c:   66 89 82 5c 00 00 00            	mov word ptr [edx + 0x5c], ax
0x8049823:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x8049826:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x804982c:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x8049830:   88 82 a4 04 00 00               	mov byte ptr [edx + 0x4a4], al
0x8049836:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x804983a:   88 82 64 00 00 00               	mov byte ptr [edx + 0x64], al
0x8049840:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x8049843:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x8049849:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x804984c:   89 82 6c 00 00 00               	mov dword ptr [edx + 0x6c], eax
0x8049852:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x8049856:   88 82 70 00 00 00               	mov byte ptr [edx + 0x70], al
0x804985c:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x804985f:   89 82 74 00 00 00               	mov dword ptr [edx + 0x74], eax
0x8049865:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x8049869:   88 82 78 00 00 00               	mov byte ptr [edx + 0x78], al
0x804986f:   8b 85 80 00 00 00               	mov eax, dword ptr [ebp + 0x80]
0x8049875:   89 82 7c 00 00 00               	mov dword ptr [edx + 0x7c], eax
0x804987b:   b8 00 00 00 00                  	mov eax, 0
0x8049880:   81 c4 88 00 00 00               	add esp, 0x88
0x8049886:   5b                              	pop ebx
0x8049887:   5e                              	pop esi
0x8049888:   5f                              	pop edi
0x8049889:   5d                              	pop ebp
0x804988a:   c3                              	ret 
; function: func_1 at 0x804988b -- 0x804ad0b
0x804988b:   55                              	push ebp
0x804988c:   89 e5                           	mov ebp, esp
0x804988e:   57                              	push edi
0x804988f:   56                              	push esi
0x8049890:   53                              	push ebx
0x8049891:   81 ec 64 01 00 00               	sub esp, 0x164
0x8049897:   e8 ab 18 00 00                  	call 0x804b147 <__x86.get_pc_thunk.ax>
0x804989c:   05 64 47 00 00                  	add eax, 0x4764
0x80498a1:   66 c7 85 7a ff ff ff 1e 2a      	mov word ptr [ebp - 0x86], 0x2a1e
0x80498aa:   c6 45 e4 01                     	mov byte ptr [ebp - 0x1c], 1
0x80498ae:   c6 45 e3 b0                     	mov byte ptr [ebp - 0x1d], 0xb0
0x80498b2:   c6 45 e2 01                     	mov byte ptr [ebp - 0x1e], 1
0x80498b6:   c6 45 e5 ca                     	mov byte ptr [ebp - 0x1b], 0xca
0x80498ba:   66 c7 45 f2 ff ff               	mov word ptr [ebp - 0xe], 0xffff
0x80498c0:   66 c7 45 e6 09 00               	mov word ptr [ebp - 0x1a], 9
0x80498c6:   c7 85 74 ff ff ff d3 ab b6 7b   	mov dword ptr [ebp - 0x8c], 0x7bb6abd3
0x80498d0:   c7 85 70 ff ff ff c0 17 0a 93   	mov dword ptr [ebp - 0x90], 0x930a17c0
0x80498da:   c7 85 6c ff ff ff dc e7 b9 25   	mov dword ptr [ebp - 0x94], 0x25b9e7dc
0x80498e4:   c7 45 ec 3d 05 69 dd            	mov dword ptr [ebp - 0x14], 0xdd69053d
0x80498eb:   c7 85 68 ff ff ff 43 70 e6 e8   	mov dword ptr [ebp - 0x98], 0xe8e67043
0x80498f5:   66 c7 45 ea ae e2               	mov word ptr [ebp - 0x16], 0xe2ae
0x80498fb:   66 c7 45 e8 fb ff               	mov word ptr [ebp - 0x18], 0xfffb
0x8049901:   c7 45 dc f6 ff ff ff            	mov dword ptr [ebp - 0x24], 0xfffffff6
0x8049908:   c6 45 db c6                     	mov byte ptr [ebp - 0x25], 0xc6
0x804990c:   c7 45 d4 e5 91 6a 8b            	mov dword ptr [ebp - 0x2c], 0x8b6a91e5
0x8049913:   c6 45 d3 ff                     	mov byte ptr [ebp - 0x2d], 0xff
0x8049917:   66 c7 85 66 ff ff ff 4c c5      	mov word ptr [ebp - 0x9a], 0xc54c
0x8049920:   c6 85 65 ff ff ff 01            	mov byte ptr [ebp - 0x9b], 1
0x8049927:   66 c7 85 62 ff ff ff fb ff      	mov word ptr [ebp - 0x9e], 0xfffb
0x8049930:   66 c7 45 d0 61 4f               	mov word ptr [ebp - 0x30], 0x4f61
0x8049936:   c7 45 cc ff ff ff ff            	mov dword ptr [ebp - 0x34], 0xffffffff
0x804993d:   c6 45 cb 00                     	mov byte ptr [ebp - 0x35], 0
0x8049941:   c6 85 61 ff ff ff a5            	mov byte ptr [ebp - 0x9f], 0xa5
0x8049948:   c7 45 c4 ff ff ff ff            	mov dword ptr [ebp - 0x3c], 0xffffffff
0x804994f:   c7 45 c0 ff ff ff ff            	mov dword ptr [ebp - 0x40], 0xffffffff
0x8049956:   c6 45 bf 4a                     	mov byte ptr [ebp - 0x41], 0x4a
0x804995a:   c7 45 b8 bb 3f 8f 2e            	mov dword ptr [ebp - 0x48], 0x2e8f3fbb
0x8049961:   c6 45 b7 16                     	mov byte ptr [ebp - 0x49], 0x16
0x8049965:   c7 85 5c ff ff ff e2 e5 be 3f   	mov dword ptr [ebp - 0xa4], 0x3fbee5e2
0x804996f:   66 c7 45 b4 fe ff               	mov word ptr [ebp - 0x4c], 0xfffe
0x8049975:   66 c7 45 b2 af 4f               	mov word ptr [ebp - 0x4e], 0x4faf
0x804997b:   c7 45 ac fc ff ff ff            	mov dword ptr [ebp - 0x54], 0xfffffffc
0x8049982:   c7 85 58 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xa8], 9
0x804998c:   c7 45 a8 07 dc a7 5f            	mov dword ptr [ebp - 0x58], 0x5fa7dc07
0x8049993:   c7 45 a4 60 16 03 0e            	mov dword ptr [ebp - 0x5c], 0xe031660
0x804999a:   66 c7 85 56 ff ff ff c1 50      	mov word ptr [ebp - 0xaa], 0x50c1
0x80499a3:   66 c7 85 54 ff ff ff 31 53      	mov word ptr [ebp - 0xac], 0x5331
0x80499ac:   c7 85 50 ff ff ff 50 73 53 25   	mov dword ptr [ebp - 0xb0], 0x25537350
0x80499b6:   66 c7 85 4e ff ff ff 2c 76      	mov word ptr [ebp - 0xb2], 0x762c
0x80499bf:   c6 45 e3 00                     	mov byte ptr [ebp - 0x1d], 0
0x80499c3:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x80499c7:   83 e8 01                        	sub eax, 1
0x80499ca:   88 45 e2                        	mov byte ptr [ebp - 0x1e], al
0x80499cd:   c7 85 48 ff ff ff 88 9b 33 79   	mov dword ptr [ebp - 0xb8], 0x79339b88
0x80499d7:   c7 85 44 ff ff ff ea 0a 3f 7a   	mov dword ptr [ebp - 0xbc], 0x7a3f0aea
0x80499e1:   0f b6 55 e4                     	movzx edx, byte ptr [ebp - 0x1c]
0x80499e5:   83 bd 48 ff ff ff ff            	cmp dword ptr [ebp - 0xb8], -1
0x80499ec:   0f 95 c0                        	setne al
0x80499ef:   0f b6 c8                        	movzx ecx, al
0x80499f2:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x80499f6:   39 c1                           	cmp ecx, eax
0x80499f8:   0f 95 c0                        	setne al
0x80499fb:   0f b6 c0                        	movzx eax, al
0x80499fe:   09 45 ac                        	or dword ptr [ebp - 0x54], eax
0x8049a01:   80 4d e5 f7                     	or byte ptr [ebp - 0x1b], 0xf7
0x8049a05:   b8 01 00 00 00                  	mov eax, 1
0x8049a0a:   29 c2                           	sub edx, eax
0x8049a0c:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x8049a10:   21 d0                           	and eax, edx
0x8049a12:   89 85 44 ff ff ff               	mov dword ptr [ebp - 0xbc], eax
0x8049a18:   66 c7 45 f2 00 00               	mov word ptr [ebp - 0xe], 0
0x8049a1e:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x8049a24:   0f bf d0                        	movsx edx, ax
0x8049a27:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x8049a2b:   0f af c2                        	imul eax, edx
0x8049a2e:   83 e0 01                        	and eax, 1
0x8049a31:   89 c2                           	mov edx, eax
0x8049a33:   0f b6 45 e5                     	movzx eax, byte ptr [ebp - 0x1b]
0x8049a37:   39 c2                           	cmp edx, eax
0x8049a39:   c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0x8049a40:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049a44:   83 c0 01                        	add eax, 1
0x8049a47:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x8049a4b:   0f b6 45 e5                     	movzx eax, byte ptr [ebp - 0x1b]
0x8049a4f:   32 45 e3                        	xor al, byte ptr [ebp - 0x1d]
0x8049a52:   0f b6 c0                        	movzx eax, al
0x8049a55:   01 c0                           	add eax, eax
0x8049a57:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x8049a5d:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049a61:   0f b7 c0                        	movzx eax, ax
0x8049a64:   21 45 a8                        	and dword ptr [ebp - 0x58], eax
0x8049a67:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x8049a6b:   ba d2 70 00 00                  	mov edx, 0x70d2
0x8049a70:   29 c2                           	sub edx, eax
0x8049a72:   89 d0                           	mov eax, edx
0x8049a74:   09 85 44 ff ff ff               	or dword ptr [ebp - 0xbc], eax
0x8049a7a:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x8049a81:   75 09                           	jne 0x8049a8c <func_1+0x201>
0x8049a83:   83 bd 58 ff ff ff 00            	cmp dword ptr [ebp - 0xa8], 0
0x8049a8a:   74 07                           	je 0x8049a93 <func_1+0x208>
0x8049a8c:   b8 01 00 00 00                  	mov eax, 1
0x8049a91:   eb 05                           	jmp 0x8049a98 <func_1+0x20d>
0x8049a93:   b8 00 00 00 00                  	mov eax, 0
0x8049a98:   0f be c0                        	movsx eax, al
0x8049a9b:   c1 e0 03                        	shl eax, 3
0x8049a9e:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049aa1:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x8049aa6:   0f 85 8c 00 00 00               	jne 0x8049b38 <func_1+0x2ad>
0x8049aac:   c7 45 ac 04 00 00 00            	mov dword ptr [ebp - 0x54], 4
0x8049ab3:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049ab6:   0b 85 68 ff ff ff               	or eax, dword ptr [ebp - 0x98]
0x8049abc:   89 c2                           	mov edx, eax
0x8049abe:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x8049ac2:   39 c2                           	cmp edx, eax
0x8049ac4:   7f 10                           	jg 0x8049ad6 <func_1+0x24b>
0x8049ac6:   83 bd 70 ff ff ff 00            	cmp dword ptr [ebp - 0x90], 0
0x8049acd:   74 07                           	je 0x8049ad6 <func_1+0x24b>
0x8049acf:   b8 01 00 00 00                  	mov eax, 1
0x8049ad4:   eb 05                           	jmp 0x8049adb <func_1+0x250>
0x8049ad6:   b8 00 00 00 00                  	mov eax, 0
0x8049adb:   0f be d0                        	movsx edx, al
0x8049ade:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049ae1:   0f be c0                        	movsx eax, al
0x8049ae4:   89 c1                           	mov ecx, eax
0x8049ae6:   d3 fa                           	sar edx, cl
0x8049ae8:   89 d0                           	mov eax, edx
0x8049aea:   89 c1                           	mov ecx, eax
0x8049aec:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049aef:   89 c2                           	mov edx, eax
0x8049af1:   89 c8                           	mov eax, ecx
0x8049af3:   0f af c2                        	imul eax, edx
0x8049af6:   f7 d8                           	neg eax
0x8049af8:   c0 e8 02                        	shr al, 2
0x8049afb:   0f b6 d0                        	movzx edx, al
0x8049afe:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x8049b02:   39 c2                           	cmp edx, eax
0x8049b04:   0f 9f c0                        	setg al
0x8049b07:   89 c2                           	mov edx, eax
0x8049b09:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x8049b0d:   01 d0                           	add eax, edx
0x8049b0f:   0f b6 d0                        	movzx edx, al
0x8049b12:   89 d0                           	mov eax, edx
0x8049b14:   c1 e0 05                        	shl eax, 5
0x8049b17:   29 d0                           	sub eax, edx
0x8049b19:   c1 e0 03                        	shl eax, 3
0x8049b1c:   01 d0                           	add eax, edx
0x8049b1e:   66 c1 e8 08                     	shr ax, 8
0x8049b22:   c0 e8 06                        	shr al, 6
0x8049b25:   0f b6 c0                        	movzx eax, al
0x8049b28:   ba 6a e3 ff ff                  	mov edx, 0xffffe36a
0x8049b2d:   29 c2                           	sub edx, eax
0x8049b2f:   89 d0                           	mov eax, edx
0x8049b31:   3d 06 9a 00 00                  	cmp eax, 0x9a06
0x8049b36:   74 07                           	je 0x8049b3f <func_1+0x2b4>
0x8049b38:   ba 01 00 00 00                  	mov edx, 1
0x8049b3d:   eb 05                           	jmp 0x8049b44 <func_1+0x2b9>
0x8049b3f:   ba 00 00 00 00                  	mov edx, 0
0x8049b44:   0f be 45 e3                     	movsx eax, byte ptr [ebp - 0x1d]
0x8049b48:   89 d1                           	mov ecx, edx
0x8049b4a:   29 c1                           	sub ecx, eax
0x8049b4c:   ba 39 7d f4 4a                  	mov edx, 0x4af47d39
0x8049b51:   89 c8                           	mov eax, ecx
0x8049b53:   f7 ea                           	imul edx
0x8049b55:   89 d0                           	mov eax, edx
0x8049b57:   c1 f8 1d                        	sar eax, 0x1d
0x8049b5a:   c1 f9 1f                        	sar ecx, 0x1f
0x8049b5d:   89 ca                           	mov edx, ecx
0x8049b5f:   29 c2                           	sub edx, eax
0x8049b61:   89 d0                           	mov eax, edx
0x8049b63:   21 45 a4                        	and dword ptr [ebp - 0x5c], eax
0x8049b66:   66 c7 85 56 ff ff ff 00 00      	mov word ptr [ebp - 0xaa], 0
0x8049b6f:   66 c7 45 b2 02 00               	mov word ptr [ebp - 0x4e], 2
0x8049b75:   e9 40 10 00 00                  	jmp 0x804abba <func_1+0x132f>
0x8049b7a:   c6 85 43 ff ff ff ff            	mov byte ptr [ebp - 0xbd], 0xff
0x8049b81:   c7 45 a0 02 00 00 00            	mov dword ptr [ebp - 0x60], 2
0x8049b88:   66 c7 85 40 ff ff ff 4e 8f      	mov word ptr [ebp - 0xc0], 0x8f4e
0x8049b91:   66 c7 85 3e ff ff ff f9 ff      	mov word ptr [ebp - 0xc2], 0xfff9
0x8049b9a:   c7 85 38 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xc8], 0xffffffff
0x8049ba4:   c7 45 9c f6 0e 97 47            	mov dword ptr [ebp - 0x64], 0x47970ef6
0x8049bab:   66 c7 45 9a fe ff               	mov word ptr [ebp - 0x66], 0xfffe
0x8049bb1:   c6 85 37 ff ff ff 70            	mov byte ptr [ebp - 0xc9], 0x70
0x8049bb8:   c6 45 99 ab                     	mov byte ptr [ebp - 0x67], 0xab
0x8049bbc:   66 c7 85 34 ff ff ff 65 b3      	mov word ptr [ebp - 0xcc], 0xb365
0x8049bc5:   c7 85 30 ff ff ff 04 00 00 00   	mov dword ptr [ebp - 0xd0], 4
0x8049bcf:   c7 85 2c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd4], 0
0x8049bd9:   c6 45 e2 11                     	mov byte ptr [ebp - 0x1e], 0x11
0x8049bdd:   e9 c3 0f 00 00                  	jmp 0x804aba5 <func_1+0x131a>
0x8049be2:   66 c7 85 2a ff ff ff 00 00      	mov word ptr [ebp - 0xd6], 0
0x8049beb:   c6 85 29 ff ff ff 83            	mov byte ptr [ebp - 0xd7], 0x83
0x8049bf2:   c7 45 94 ab aa 64 71            	mov dword ptr [ebp - 0x6c], 0x7164aaab
0x8049bf9:   c6 85 28 ff ff ff 01            	mov byte ptr [ebp - 0xd8], 1
0x8049c00:   c7 45 90 ff ff ff ff            	mov dword ptr [ebp - 0x70], 0xffffffff
0x8049c07:   66 c7 85 26 ff ff ff 08 4c      	mov word ptr [ebp - 0xda], 0x4c08
0x8049c10:   c6 85 25 ff ff ff c6            	mov byte ptr [ebp - 0xdb], 0xc6
0x8049c17:   c7 85 20 ff ff ff c3 8e e2 b3   	mov dword ptr [ebp - 0xe0], 0xb3e28ec3
0x8049c21:   c6 45 8f 1f                     	mov byte ptr [ebp - 0x71], 0x1f
0x8049c25:   c7 85 1c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe4], 0
0x8049c2f:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x8049c36:   e9 f4 04 00 00                  	jmp 0x804a12f <func_1+0x8a4>
0x8049c3b:   c7 85 18 ff ff ff 2c ba 0e 33   	mov dword ptr [ebp - 0xe8], 0x330eba2c
0x8049c45:   c7 45 88 fa ff ff ff            	mov dword ptr [ebp - 0x78], 0xfffffffa
0x8049c4c:   c7 85 14 ff ff ff 03 00 00 00   	mov dword ptr [ebp - 0xec], 3
0x8049c56:   c6 85 13 ff ff ff ea            	mov byte ptr [ebp - 0xed], 0xea
0x8049c5d:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x8049c64:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x8049c68:   75 4d                           	jne 0x8049cb7 <func_1+0x42c>
0x8049c6a:   0f b6 85 29 ff ff ff            	movzx eax, byte ptr [ebp - 0xd7]
0x8049c71:   0f be d0                        	movsx edx, al
0x8049c74:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x8049c7b:   0f be c0                        	movsx eax, al
0x8049c7e:   89 c1                           	mov ecx, eax
0x8049c80:   d3 e2                           	shl edx, cl
0x8049c82:   89 d0                           	mov eax, edx
0x8049c84:   66 31 45 f2                     	xor word ptr [ebp - 0xe], ax
0x8049c88:   83 bd 18 ff ff ff 00            	cmp dword ptr [ebp - 0xe8], 0
0x8049c8f:   74 07                           	je 0x8049c98 <func_1+0x40d>
0x8049c91:   b8 01 00 00 00                  	mov eax, 1
0x8049c96:   eb 05                           	jmp 0x8049c9d <func_1+0x412>
0x8049c98:   b8 00 00 00 00                  	mov eax, 0
0x8049c9d:   89 c2                           	mov edx, eax
0x8049c9f:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049ca3:   21 d0                           	and eax, edx
0x8049ca5:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x8049ca9:   66 83 7d ea 00                  	cmp word ptr [ebp - 0x16], 0
0x8049cae:   74 07                           	je 0x8049cb7 <func_1+0x42c>
0x8049cb0:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x8049cb7:   c7 45 ec 14 31 c2 ba            	mov dword ptr [ebp - 0x14], 0xbac23114
0x8049cbe:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049cc1:   3d d5 8f e6 d2                  	cmp eax, 0xd2e68fd5
0x8049cc6:   0f 86 42 01 00 00               	jbe 0x8049e0e <func_1+0x583>
0x8049ccc:   c6 85 05 ff ff ff 33            	mov byte ptr [ebp - 0xfb], 0x33
0x8049cd3:   0f be 45 e2                     	movsx eax, byte ptr [ebp - 0x1e]
0x8049cd7:   83 c0 01                        	add eax, 1
0x8049cda:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049cdd:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x8049ce1:   0f 84 b4 00 00 00               	je 0x8049d9b <func_1+0x510>
0x8049ce7:   c6 85 04 ff ff ff 01            	mov byte ptr [ebp - 0xfc], 1
0x8049cee:   0f b7 4d e6                     	movzx ecx, word ptr [ebp - 0x1a]
0x8049cf2:   0f b7 85 2a ff ff ff            	movzx eax, word ptr [ebp - 0xd6]
0x8049cf9:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x8049cfc:   0f b7 95 40 ff ff ff            	movzx edx, word ptr [ebp - 0xc0]
0x8049d03:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049d07:   21 d0                           	and eax, edx
0x8049d09:   39 85 74 ff ff ff               	cmp dword ptr [ebp - 0x8c], eax
0x8049d0f:   66 c7 45 f2 63 5c               	mov word ptr [ebp - 0xe], 0x5c63
0x8049d15:   0f be 45 e2                     	movsx eax, byte ptr [ebp - 0x1e]
0x8049d19:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049d1c:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049d1f:   89 c2                           	mov edx, eax
0x8049d21:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x8049d27:   21 c2                           	and edx, eax
0x8049d29:   0f bf c2                        	movsx eax, dx
0x8049d2c:   69 c0 31 73 00 00               	imul eax, eax, 0x7331
0x8049d32:   c1 e8 10                        	shr eax, 0x10
0x8049d35:   89 c3                           	mov ebx, eax
0x8049d37:   66 c1 fb 0d                     	sar bx, 0xd
0x8049d3b:   89 d0                           	mov eax, edx
0x8049d3d:   66 c1 f8 0f                     	sar ax, 0xf
0x8049d41:   29 c3                           	sub ebx, eax
0x8049d43:   89 d8                           	mov eax, ebx
0x8049d45:   66 69 c0 1e 47                  	imul ax, ax, 0x471e
0x8049d4a:   29 c2                           	sub edx, eax
0x8049d4c:   89 d0                           	mov eax, edx
0x8049d4e:   98                              	cwde 
0x8049d4f:   39 c1                           	cmp ecx, eax
0x8049d51:   0f 9c c0                        	setl al
0x8049d54:   0f b6 c0                        	movzx eax, al
0x8049d57:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049d5a:   c7 45 ec 48 ab 6c cc            	mov dword ptr [ebp - 0x14], 0xcc6cab48
0x8049d61:   0f b6 85 04 ff ff ff            	movzx eax, byte ptr [ebp - 0xfc]
0x8049d68:   83 c0 01                        	add eax, 1
0x8049d6b:   88 85 04 ff ff ff               	mov byte ptr [ebp - 0xfc], al
0x8049d71:   0f b6 85 05 ff ff ff            	movzx eax, byte ptr [ebp - 0xfb]
0x8049d78:   08 45 e4                        	or byte ptr [ebp - 0x1c], al
0x8049d7b:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x8049d7f:   c1 e0 02                        	shl eax, 2
0x8049d82:   98                              	cwde 
0x8049d83:   0f b7 95 7a ff ff ff            	movzx edx, word ptr [ebp - 0x86]
0x8049d8a:   0f bf f2                        	movsx esi, dx
0x8049d8d:   99                              	cdq 
0x8049d8e:   f7 fe                           	idiv esi
0x8049d90:   0f be c0                        	movsx eax, al
0x8049d93:   c1 e0 05                        	shl eax, 5
0x8049d96:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049d99:   eb 0a                           	jmp 0x8049da5 <func_1+0x51a>
0x8049d9b:   80 7d e5 00                     	cmp byte ptr [ebp - 0x1b], 0
0x8049d9f:   0f 85 96 03 00 00               	jne 0x804a13b <func_1+0x8b0>
0x8049da5:   0f bf 85 3e ff ff ff            	movsx eax, word ptr [ebp - 0xc2]
0x8049dac:   31 45 ec                        	xor dword ptr [ebp - 0x14], eax
0x8049daf:   0f b6 55 e5                     	movzx edx, byte ptr [ebp - 0x1b]
0x8049db3:   0f b6 4d e4                     	movzx ecx, byte ptr [ebp - 0x1c]
0x8049db7:   0f bf 85 2a ff ff ff            	movsx eax, word ptr [ebp - 0xd6]
0x8049dbe:   39 c1                           	cmp ecx, eax
0x8049dc0:   0f 9e c0                        	setle al
0x8049dc3:   0f b6 c0                        	movzx eax, al
0x8049dc6:   33 85 14 ff ff ff               	xor eax, dword ptr [ebp - 0xec]
0x8049dcc:   21 d0                           	and eax, edx
0x8049dce:   39 45 a0                        	cmp dword ptr [ebp - 0x60], eax
0x8049dd1:   7d 0d                           	jge 0x8049de0 <func_1+0x555>
0x8049dd3:   80 7d e4 00                     	cmp byte ptr [ebp - 0x1c], 0
0x8049dd7:   74 07                           	je 0x8049de0 <func_1+0x555>
0x8049dd9:   ba 01 00 00 00                  	mov edx, 1
0x8049dde:   eb 05                           	jmp 0x8049de5 <func_1+0x55a>
0x8049de0:   ba 00 00 00 00                  	mov edx, 0
0x8049de5:   0f bf 85 3e ff ff ff            	movsx eax, word ptr [ebp - 0xc2]
0x8049dec:   39 c2                           	cmp edx, eax
0x8049dee:   0f 9d c0                        	setge al
0x8049df1:   0f b6 c0                        	movzx eax, al
0x8049df4:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x8049df7:   0f 95 c0                        	setne al
0x8049dfa:   0f b6 d0                        	movzx edx, al
0x8049dfd:   0f be 85 43 ff ff ff            	movsx eax, byte ptr [ebp - 0xbd]
0x8049e04:   31 d0                           	xor eax, edx
0x8049e06:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049e09:   e9 cd 02 00 00                  	jmp 0x804a0db <func_1+0x850>
0x8049e0e:   c7 85 0c ff ff ff 5c 5c 51 c4   	mov dword ptr [ebp - 0xf4], 0xc4515c5c
0x8049e18:   c7 45 84 01 00 00 00            	mov dword ptr [ebp - 0x7c], 1
0x8049e1f:   c7 85 08 ff ff ff 5e 93 bb 60   	mov dword ptr [ebp - 0xf8], 0x60bb935e
0x8049e29:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x8049e2d:   39 85 38 ff ff ff               	cmp dword ptr [ebp - 0xc8], eax
0x8049e33:   0f 83 89 00 00 00               	jae 0x8049ec2 <func_1+0x637>
0x8049e39:   c6 85 07 ff ff ff de            	mov byte ptr [ebp - 0xf9], 0xde
0x8049e40:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049e43:   83 c8 01                        	or eax, 1
0x8049e46:   89 c2                           	mov edx, eax
0x8049e48:   66 0f be c2                     	movsx ax, dl
0x8049e4c:   6b c0 a1                        	imul eax, eax, -0x5f
0x8049e4f:   66 c1 e8 08                     	shr ax, 8
0x8049e53:   01 d0                           	add eax, edx
0x8049e55:   c0 f8 05                        	sar al, 5
0x8049e58:   89 c1                           	mov ecx, eax
0x8049e5a:   89 d0                           	mov eax, edx
0x8049e5c:   c0 f8 07                        	sar al, 7
0x8049e5f:   29 c1                           	sub ecx, eax
0x8049e61:   89 c8                           	mov eax, ecx
0x8049e63:   b9 33 00 00 00                  	mov ecx, 0x33
0x8049e68:   0f af c1                        	imul eax, ecx
0x8049e6b:   29 c2                           	sub edx, eax
0x8049e6d:   89 d0                           	mov eax, edx
0x8049e6f:   89 c2                           	mov edx, eax
0x8049e71:   0f b6 45 e2                     	movzx eax, byte ptr [ebp - 0x1e]
0x8049e75:   01 d0                           	add eax, edx
0x8049e77:   0f b6 d0                        	movzx edx, al
0x8049e7a:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049e7e:   0f b6 c0                        	movzx eax, al
0x8049e81:   89 c1                           	mov ecx, eax
0x8049e83:   d3 e2                           	shl edx, cl
0x8049e85:   89 d0                           	mov eax, edx
0x8049e87:   0f be c0                        	movsx eax, al
0x8049e8a:   0f be 8d 28 ff ff ff            	movsx ecx, byte ptr [ebp - 0xd8]
0x8049e91:   99                              	cdq 
0x8049e92:   f7 f9                           	idiv ecx
0x8049e94:   89 d0                           	mov eax, edx
0x8049e96:   3d 81 00 00 00                  	cmp eax, 0x81
0x8049e9b:   0f 9f c0                        	setg al
0x8049e9e:   0f b6 c0                        	movzx eax, al
0x8049ea1:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049ea4:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049ea7:   88 45 e3                        	mov byte ptr [ebp - 0x1d], al
0x8049eaa:   83 bd 74 ff ff ff 00            	cmp dword ptr [ebp - 0x8c], 0
0x8049eb1:   0f 94 c0                        	sete al
0x8049eb4:   22 85 43 ff ff ff               	and al, byte ptr [ebp - 0xbd]
0x8049eba:   88 85 07 ff ff ff               	mov byte ptr [ebp - 0xf9], al
0x8049ec0:   eb 07                           	jmp 0x8049ec9 <func_1+0x63e>
0x8049ec2:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049ec6:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049ec9:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049ecd:   8d 50 01                        	lea edx, [eax + 1]
0x8049ed0:   66 89 55 ea                     	mov word ptr [ebp - 0x16], dx
0x8049ed4:   0f b7 d0                        	movzx edx, ax
0x8049ed7:   0f b6 4d e4                     	movzx ecx, byte ptr [ebp - 0x1c]
0x8049edb:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049ede:   0f b7 c0                        	movzx eax, ax
0x8049ee1:   29 c1                           	sub ecx, eax
0x8049ee3:   89 c8                           	mov eax, ecx
0x8049ee5:   89 c3                           	mov ebx, eax
0x8049ee7:   0f b7 85 40 ff ff ff            	movzx eax, word ptr [ebp - 0xc0]
0x8049eee:   b9 ff ff 00 00                  	mov ecx, 0xffff
0x8049ef3:   29 c1                           	sub ecx, eax
0x8049ef5:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x8049ef9:   09 c8                           	or eax, ecx
0x8049efb:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x8049f01:   0f 97 c0                        	seta al
0x8049f04:   0f b6 c8                        	movzx ecx, al
0x8049f07:   0f be 45 e2                     	movsx eax, byte ptr [ebp - 0x1e]
0x8049f0b:   39 c1                           	cmp ecx, eax
0x8049f0d:   0f 9e c0                        	setle al
0x8049f10:   0f b6 c0                        	movzx eax, al
0x8049f13:   39 85 74 ff ff ff               	cmp dword ptr [ebp - 0x8c], eax
0x8049f19:   0f 9c c0                        	setl al
0x8049f1c:   0f b6 c0                        	movzx eax, al
0x8049f1f:   23 85 18 ff ff ff               	and eax, dword ptr [ebp - 0xe8]
0x8049f25:   39 c3                           	cmp ebx, eax
0x8049f27:   0f 97 c0                        	seta al
0x8049f2a:   0f b6 c0                        	movzx eax, al
0x8049f2d:   89 c1                           	mov ecx, eax
0x8049f2f:   d3 e2                           	shl edx, cl
0x8049f31:   89 d0                           	mov eax, edx
0x8049f33:   39 85 18 ff ff ff               	cmp dword ptr [ebp - 0xe8], eax
0x8049f39:   0f 93 c0                        	setae al
0x8049f3c:   0f b6 c0                        	movzx eax, al
0x8049f3f:   09 85 08 ff ff ff               	or dword ptr [ebp - 0xf8], eax
0x8049f45:   8b 85 08 ff ff ff               	mov eax, dword ptr [ebp - 0xf8]
0x8049f4b:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049f4e:   66 81 7d ea c7 00               	cmp word ptr [ebp - 0x16], 0xc7
0x8049f54:   0f 96 c0                        	setbe al
0x8049f57:   89 c2                           	mov edx, eax
0x8049f59:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049f5c:   01 d0                           	add eax, edx
0x8049f5e:   89 c2                           	mov edx, eax
0x8049f60:   0f b6 45 e5                     	movzx eax, byte ptr [ebp - 0x1b]
0x8049f64:   21 d0                           	and eax, edx
0x8049f66:   88 45 e5                        	mov byte ptr [ebp - 0x1b], al
0x8049f69:   0f b6 45 e5                     	movzx eax, byte ptr [ebp - 0x1b]
0x8049f6d:   39 85 38 ff ff ff               	cmp dword ptr [ebp - 0xc8], eax
0x8049f73:   8b 85 08 ff ff ff               	mov eax, dword ptr [ebp - 0xf8]
0x8049f79:   89 c2                           	mov edx, eax
0x8049f7b:   0f b7 85 2a ff ff ff            	movzx eax, word ptr [ebp - 0xd6]
0x8049f82:   21 d0                           	and eax, edx
0x8049f84:   3c 06                           	cmp al, 6
0x8049f86:   0f 95 c0                        	setne al
0x8049f89:   0f b6 d0                        	movzx edx, al
0x8049f8c:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049f92:   0f be c0                        	movsx eax, al
0x8049f95:   89 c1                           	mov ecx, eax
0x8049f97:   d3 e2                           	shl edx, cl
0x8049f99:   89 d0                           	mov eax, edx
0x8049f9b:   38 45 e3                        	cmp byte ptr [ebp - 0x1d], al
0x8049f9e:   7f 07                           	jg 0x8049fa7 <func_1+0x71c>
0x8049fa0:   b8 01 00 00 00                  	mov eax, 1
0x8049fa5:   eb 05                           	jmp 0x8049fac <func_1+0x721>
0x8049fa7:   b8 00 00 00 00                  	mov eax, 0
0x8049fac:   66 89 45 9a                     	mov word ptr [ebp - 0x66], ax
0x8049fb0:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049fb3:   89 c2                           	mov edx, eax
0x8049fb5:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049fb9:   01 d0                           	add eax, edx
0x8049fbb:   0f bf d0                        	movsx edx, ax
0x8049fbe:   0f be 45 e3                     	movsx eax, byte ptr [ebp - 0x1d]
0x8049fc2:   89 c1                           	mov ecx, eax
0x8049fc4:   d3 e2                           	shl edx, cl
0x8049fc6:   89 d0                           	mov eax, edx
0x8049fc8:   85 c0                           	test eax, eax
0x8049fca:   74 3a                           	je 0x804a006 <func_1+0x77b>
0x8049fcc:   66 83 7d ea 00                  	cmp word ptr [ebp - 0x16], 0
0x8049fd1:   74 15                           	je 0x8049fe8 <func_1+0x75d>
0x8049fd3:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x8049fd9:   3b 85 08 ff ff ff               	cmp eax, dword ptr [ebp - 0xf8]
0x8049fdf:   72 07                           	jb 0x8049fe8 <func_1+0x75d>
0x8049fe1:   b8 01 00 00 00                  	mov eax, 1
0x8049fe6:   eb 05                           	jmp 0x8049fed <func_1+0x762>
0x8049fe8:   b8 00 00 00 00                  	mov eax, 0
0x8049fed:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049ff0:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x8049ff7:   0f 85 41 01 00 00               	jne 0x804a13e <func_1+0x8b3>
0x8049ffd:   83 6d dc 01                     	sub dword ptr [ebp - 0x24], 1
0x804a001:   e9 d5 00 00 00                  	jmp 0x804a0db <func_1+0x850>
0x804a006:   c6 85 06 ff ff ff e3            	mov byte ptr [ebp - 0xfa], 0xe3
0x804a00d:   0f b7 95 56 ff ff ff            	movzx edx, word ptr [ebp - 0xaa]
0x804a014:   66 0f be 45 e3                  	movsx ax, byte ptr [ebp - 0x1d]
0x804a019:   0f b7 c0                        	movzx eax, ax
0x804a01c:   89 c1                           	mov ecx, eax
0x804a01e:   d3 e2                           	shl edx, cl
0x804a020:   89 d0                           	mov eax, edx
0x804a022:   98                              	cwde 
0x804a023:   83 c0 01                        	add eax, 1
0x804a026:   39 85 0c ff ff ff               	cmp dword ptr [ebp - 0xf4], eax
0x804a02c:   0f 9c c0                        	setl al
0x804a02f:   32 45 e3                        	xor al, byte ptr [ebp - 0x1d]
0x804a032:   88 45 e5                        	mov byte ptr [ebp - 0x1b], al
0x804a035:   83 bd 74 ff ff ff 00            	cmp dword ptr [ebp - 0x8c], 0
0x804a03c:   0f 95 c0                        	setne al
0x804a03f:   0f b6 d0                        	movzx edx, al
0x804a042:   0f bf 85 26 ff ff ff            	movsx eax, word ptr [ebp - 0xda]
0x804a049:   39 c2                           	cmp edx, eax
0x804a04b:   0f 9c c0                        	setl al
0x804a04e:   88 85 13 ff ff ff               	mov byte ptr [ebp - 0xed], al
0x804a054:   80 bd 13 ff ff ff ff            	cmp byte ptr [ebp - 0xed], 0xff
0x804a05b:   0f 94 c0                        	sete al
0x804a05e:   0f b6 c0                        	movzx eax, al
0x804a061:   89 c2                           	mov edx, eax
0x804a063:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a067:   38 c2                           	cmp dl, al
0x804a069:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x804a06f:   98                              	cwde 
0x804a070:   c1 e0 08                        	shl eax, 8
0x804a073:   85 c0                           	test eax, eax
0x804a075:   0f 94 c0                        	sete al
0x804a078:   0f b6 d0                        	movzx edx, al
0x804a07b:   0f be 85 06 ff ff ff            	movsx eax, byte ptr [ebp - 0xfa]
0x804a082:   29 c2                           	sub edx, eax
0x804a084:   89 d0                           	mov eax, edx
0x804a086:   89 c2                           	mov edx, eax
0x804a088:   0f b6 45 99                     	movzx eax, byte ptr [ebp - 0x67]
0x804a08c:   09 d0                           	or eax, edx
0x804a08e:   88 45 99                        	mov byte ptr [ebp - 0x67], al
0x804a091:   66 0f be 85 06 ff ff ff         	movsx ax, byte ptr [ebp - 0xfa]
0x804a099:   8b 55 94                        	mov edx, dword ptr [ebp - 0x6c]
0x804a09c:   21 d0                           	and eax, edx
0x804a09e:   89 c1                           	mov ecx, eax
0x804a0a0:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a0a6:   89 c2                           	mov edx, eax
0x804a0a8:   89 c8                           	mov eax, ecx
0x804a0aa:   0f af c2                        	imul eax, edx
0x804a0ad:   0f b6 c0                        	movzx eax, al
0x804a0b0:   c1 f8 05                        	sar eax, 5
0x804a0b3:   89 c2                           	mov edx, eax
0x804a0b5:   0f b6 85 37 ff ff ff            	movzx eax, byte ptr [ebp - 0xc9]
0x804a0bc:   39 c2                           	cmp edx, eax
0x804a0be:   0f 9c c0                        	setl al
0x804a0c1:   0f b6 d0                        	movzx edx, al
0x804a0c4:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x804a0cb:   21 d0                           	and eax, edx
0x804a0cd:   f7 d0                           	not eax
0x804a0cf:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804a0d2:   0f 9f c0                        	setg al
0x804a0d5:   0f b6 c0                        	movzx eax, al
0x804a0d8:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a0db:   0f b6 55 e4                     	movzx edx, byte ptr [ebp - 0x1c]
0x804a0df:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a0e2:   0f b6 c0                        	movzx eax, al
0x804a0e5:   29 c2                           	sub edx, eax
0x804a0e7:   89 d0                           	mov eax, edx
0x804a0e9:   21 45 94                        	and dword ptr [ebp - 0x6c], eax
0x804a0ec:   0f b6 45 e5                     	movzx eax, byte ptr [ebp - 0x1b]
0x804a0f0:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x804a0f4:   0f bf 55 f2                     	movsx edx, word ptr [ebp - 0xe]
0x804a0f8:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a0fb:   98                              	cwde 
0x804a0fc:   0f af d0                        	imul edx, eax
0x804a0ff:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a103:   39 c2                           	cmp edx, eax
0x804a105:   0f 9d c0                        	setge al
0x804a108:   0f b6 c0                        	movzx eax, al
0x804a10b:   21 45 a0                        	and dword ptr [ebp - 0x60], eax
0x804a10e:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a111:   ba 00 00 00 00                  	mov edx, 0
0x804a116:   f7 b5 18 ff ff ff               	div dword ptr [ebp - 0xe8]
0x804a11c:   0f bf 45 e8                     	movsx eax, word ptr [ebp - 0x18]
0x804a120:   39 c2                           	cmp edx, eax
0x804a122:   0f 92 c0                        	setb al
0x804a125:   0f b6 c0                        	movzx eax, al
0x804a128:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a12b:   83 6d a4 01                     	sub dword ptr [ebp - 0x5c], 1
0x804a12f:   83 7d a4 f1                     	cmp dword ptr [ebp - 0x5c], -0xf
0x804a133:   0f 8c 02 fb ff ff               	jl 0x8049c3b <func_1+0x3b0>
0x804a139:   eb 04                           	jmp 0x804a13f <func_1+0x8b4>
0x804a13b:   90                              	nop 
0x804a13c:   eb 01                           	jmp 0x804a13f <func_1+0x8b4>
0x804a13e:   90                              	nop 
0x804a13f:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x804a146:   eb 2a                           	jmp 0x804a172 <func_1+0x8e7>
0x804a148:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a14c:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a14f:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a152:   0f b6 95 25 ff ff ff            	movzx edx, byte ptr [ebp - 0xdb]
0x804a159:   21 45 ac                        	and dword ptr [ebp - 0x54], eax
0x804a15c:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a15f:   0f b6 c0                        	movzx eax, al
0x804a162:   0f af c2                        	imul eax, edx
0x804a165:   85 c0                           	test eax, eax
0x804a167:   c7 45 a0 d8 ed 01 75            	mov dword ptr [ebp - 0x60], 0x7501edd8
0x804a16e:   83 6d a4 04                     	sub dword ptr [ebp - 0x5c], 4
0x804a172:   83 7d a4 ec                     	cmp dword ptr [ebp - 0x5c], -0x14
0x804a176:   7c d0                           	jl 0x804a148 <func_1+0x8bd>
0x804a178:   83 bd 58 ff ff ff 01            	cmp dword ptr [ebp - 0xa8], 1
0x804a17f:   0f 94 c0                        	sete al
0x804a182:   0f b6 c0                        	movzx eax, al
0x804a185:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x804a18b:   0f 93 c0                        	setae al
0x804a18e:   0f b6 d0                        	movzx edx, al
0x804a191:   0f be 85 28 ff ff ff            	movsx eax, byte ptr [ebp - 0xd8]
0x804a198:   39 c2                           	cmp edx, eax
0x804a19a:   0f 9c c0                        	setl al
0x804a19d:   0f b6 d0                        	movzx edx, al
0x804a1a0:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a1a4:   01 d0                           	add eax, edx
0x804a1a6:   85 c0                           	test eax, eax
0x804a1a8:   0f 84 d2 00 00 00               	je 0x804a280 <func_1+0x9f5>
0x804a1ae:   66 c7 45 82 7b 9e               	mov word ptr [ebp - 0x7e], 0x9e7b
0x804a1b4:   c7 85 7c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x84], 0
0x804a1be:   0f be 45 e2                     	movsx eax, byte ptr [ebp - 0x1e]
0x804a1c2:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a1c5:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a1c9:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x804a1cd:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a1d1:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a1d4:   c7 45 a8 12 00 00 00            	mov dword ptr [ebp - 0x58], 0x12
0x804a1db:   e9 91 00 00 00                  	jmp 0x804a271 <func_1+0x9e6>
0x804a1e0:   0f bf 45 9a                     	movsx eax, word ptr [ebp - 0x66]
0x804a1e4:   09 45 90                        	or dword ptr [ebp - 0x70], eax
0x804a1e7:   66 c7 45 b4 0e 00               	mov word ptr [ebp - 0x4c], 0xe
0x804a1ed:   eb 6a                           	jmp 0x804a259 <func_1+0x9ce>
0x804a1ef:   c7 85 c4 fe ff ff 08 00 00 00   	mov dword ptr [ebp - 0x13c], 8
0x804a1f9:   80 bd 43 ff ff ff 00            	cmp byte ptr [ebp - 0xbd], 0
0x804a200:   74 05                           	je 0x804a207 <func_1+0x97c>
0x804a202:   e9 73 f8 ff ff                  	jmp 0x8049a7a <func_1+0x1ef>
0x804a207:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x804a20d:   89 c2                           	mov edx, eax
0x804a20f:   0f b7 45 82                     	movzx eax, word ptr [ebp - 0x7e]
0x804a213:   09 d0                           	or eax, edx
0x804a215:   66 89 45 82                     	mov word ptr [ebp - 0x7e], ax
0x804a219:   0f b7 45 82                     	movzx eax, word ptr [ebp - 0x7e]
0x804a21d:   98                              	cwde 
0x804a21e:   8b 95 7c ff ff ff               	mov edx, dword ptr [ebp - 0x84]
0x804a224:   0f bf fa                        	movsx edi, dx
0x804a227:   99                              	cdq 
0x804a228:   f7 ff                           	idiv edi
0x804a22a:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a22d:   81 7d ac fb 00 00 00            	cmp dword ptr [ebp - 0x54], 0xfb
0x804a234:   66 c7 45 f2 01 00               	mov word ptr [ebp - 0xe], 1
0x804a23a:   80 7d e5 00                     	cmp byte ptr [ebp - 0x1b], 0
0x804a23e:   0f 95 c0                        	setne al
0x804a241:   0f b6 d0                        	movzx edx, al
0x804a244:   0f b7 85 40 ff ff ff            	movzx eax, word ptr [ebp - 0xc0]
0x804a24b:   0f af c2                        	imul eax, edx
0x804a24e:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804a254:   66 83 6d b4 08                  	sub word ptr [ebp - 0x4c], 8
0x804a259:   66 83 7d b4 06                  	cmp word ptr [ebp - 0x4c], 6
0x804a25e:   76 8f                           	jbe 0x804a1ef <func_1+0x964>
0x804a260:   80 bd 25 ff ff ff 00            	cmp byte ptr [ebp - 0xdb], 0
0x804a267:   0f 85 af 08 00 00               	jne 0x804ab1c <func_1+0x1291>
0x804a26d:   83 45 a8 05                     	add dword ptr [ebp - 0x58], 5
0x804a271:   83 7d a8 17                     	cmp dword ptr [ebp - 0x58], 0x17
0x804a275:   0f 85 65 ff ff ff               	jne 0x804a1e0 <func_1+0x955>
0x804a27b:   e9 9d 08 00 00                  	jmp 0x804ab1d <func_1+0x1292>
0x804a280:   66 c7 85 02 ff ff ff 00 00      	mov word ptr [ebp - 0xfe], 0
0x804a289:   c7 85 fc fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x104], 0xffffffff
0x804a293:   c6 85 fb fe ff ff 00            	mov byte ptr [ebp - 0x105], 0
0x804a29a:   c7 85 f4 fe ff ff fc ff ff ff   	mov dword ptr [ebp - 0x10c], 0xfffffffc
0x804a2a4:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x804a2ab:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804a2ae:   0f 94 c0                        	sete al
0x804a2b1:   0f b6 c0                        	movzx eax, al
0x804a2b4:   0f bf b5 3e ff ff ff            	movsx esi, word ptr [ebp - 0xc2]
0x804a2bb:   99                              	cdq 
0x804a2bc:   f7 fe                           	idiv esi
0x804a2be:   c0 f8 03                        	sar al, 3
0x804a2c1:   0f be c0                        	movsx eax, al
0x804a2c4:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a2c7:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a2cd:   66 0f be c8                     	movsx cx, al
0x804a2d1:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a2d5:   99                              	cdq 
0x804a2d6:   f7 bd 74 ff ff ff               	idiv dword ptr [ebp - 0x8c]
0x804a2dc:   89 d0                           	mov eax, edx
0x804a2de:   66 98                           	cbw 
0x804a2e0:   29 c1                           	sub ecx, eax
0x804a2e2:   89 c8                           	mov eax, ecx
0x804a2e4:   89 c2                           	mov edx, eax
0x804a2e6:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x804a2ea:   01 d0                           	add eax, edx
0x804a2ec:   98                              	cwde 
0x804a2ed:   0f b6 4d e5                     	movzx ecx, byte ptr [ebp - 0x1b]
0x804a2f1:   99                              	cdq 
0x804a2f2:   f7 f9                           	idiv ecx
0x804a2f4:   89 d0                           	mov eax, edx
0x804a2f6:   3d 4e 72 a7 84                  	cmp eax, 0x84a7724e
0x804a2fb:   74 08                           	je 0x804a305 <func_1+0xa7a>
0x804a2fd:   66 83 bd 54 ff ff ff 00         	cmp word ptr [ebp - 0xac], 0
0x804a305:   81 bd 6c ff ff ff ff db 04 21   	cmp dword ptr [ebp - 0x94], 0x2104dbff
0x804a30f:   0f 97 c0                        	seta al
0x804a312:   0f b6 c0                        	movzx eax, al
0x804a315:   89 85 20 ff ff ff               	mov dword ptr [ebp - 0xe0], eax
0x804a31b:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x804a321:   0f be c0                        	movsx eax, al
0x804a324:   01 c0                           	add eax, eax
0x804a326:   0f be c0                        	movsx eax, al
0x804a329:   6b c0 ab                        	imul eax, eax, -0x55
0x804a32c:   83 f8 09                        	cmp eax, 9
0x804a32f:   0f 84 36 02 00 00               	je 0x804a56b <func_1+0xce0>
0x804a335:   c6 85 eb fe ff ff f7            	mov byte ptr [ebp - 0x115], 0xf7
0x804a33c:   c7 85 e4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x11c], 0
0x804a346:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x804a34a:   83 c0 01                        	add eax, 1
0x804a34d:   88 45 d3                        	mov byte ptr [ebp - 0x2d], al
0x804a350:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a353:   21 85 20 ff ff ff               	and dword ptr [ebp - 0xe0], eax
0x804a359:   66 0f be 95 eb fe ff ff         	movsx dx, byte ptr [ebp - 0x115]
0x804a361:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a364:   c0 f8 07                        	sar al, 7
0x804a367:   0f be c0                        	movsx eax, al
0x804a36a:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x804a370:   73 07                           	jae 0x804a379 <func_1+0xaee>
0x804a372:   b9 9e 33 00 00                  	mov ecx, 0x339e
0x804a377:   eb 05                           	jmp 0x804a37e <func_1+0xaf3>
0x804a379:   b9 cf 19 00 00                  	mov ecx, 0x19cf
0x804a37e:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a382:   21 c8                           	and eax, ecx
0x804a384:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x804a388:   0f b7 4d e6                     	movzx ecx, word ptr [ebp - 0x1a]
0x804a38c:   0f be 45 db                     	movsx eax, byte ptr [ebp - 0x25]
0x804a390:   39 c1                           	cmp ecx, eax
0x804a392:   0f 9d c0                        	setge al
0x804a395:   0f b6 c8                        	movzx ecx, al
0x804a398:   66 0f be 45 db                  	movsx ax, byte ptr [ebp - 0x25]
0x804a39d:   21 c8                           	and eax, ecx
0x804a39f:   29 c2                           	sub edx, eax
0x804a3a1:   89 d0                           	mov eax, edx
0x804a3a3:   0f bf d0                        	movsx edx, ax
0x804a3a6:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x804a3aa:   39 c2                           	cmp edx, eax
0x804a3ac:   75 09                           	jne 0x804a3b7 <func_1+0xb2c>
0x804a3ae:   80 bd eb fe ff ff 00            	cmp byte ptr [ebp - 0x115], 0
0x804a3b5:   74 07                           	je 0x804a3be <func_1+0xb33>
0x804a3b7:   b8 01 00 00 00                  	mov eax, 1
0x804a3bc:   eb 05                           	jmp 0x804a3c3 <func_1+0xb38>
0x804a3be:   b8 00 00 00 00                  	mov eax, 0
0x804a3c3:   83 f8 55                        	cmp eax, 0x55
0x804a3c6:   0f 9f c0                        	setg al
0x804a3c9:   0f b6 c0                        	movzx eax, al
0x804a3cc:   89 c2                           	mov edx, eax
0x804a3ce:   0f b6 45 e5                     	movzx eax, byte ptr [ebp - 0x1b]
0x804a3d2:   21 d0                           	and eax, edx
0x804a3d4:   88 45 e5                        	mov byte ptr [ebp - 0x1b], al
0x804a3d7:   0f b6 55 e5                     	movzx edx, byte ptr [ebp - 0x1b]
0x804a3db:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a3e1:   0f b6 c0                        	movzx eax, al
0x804a3e4:   29 c2                           	sub edx, eax
0x804a3e6:   89 d0                           	mov eax, edx
0x804a3e8:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a3eb:   66 83 7d e6 00                  	cmp word ptr [ebp - 0x1a], 0
0x804a3f0:   0f b7 85 56 ff ff ff            	movzx eax, word ptr [ebp - 0xaa]
0x804a3f7:   0f be d0                        	movsx edx, al
0x804a3fa:   89 d0                           	mov eax, edx
0x804a3fc:   c1 e0 05                        	shl eax, 5
0x804a3ff:   01 d0                           	add eax, edx
0x804a401:   85 c0                           	test eax, eax
0x804a403:   0f 84 4c 01 00 00               	je 0x804a555 <func_1+0xcca>
0x804a409:   66 83 ad 66 ff ff ff 01         	sub word ptr [ebp - 0x9a], 1
0x804a411:   0f be 45 b7                     	movsx eax, byte ptr [ebp - 0x49]
0x804a415:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x804a41b:   0f b6 45 bf                     	movzx eax, byte ptr [ebp - 0x41]
0x804a41f:   89 85 bc fe ff ff               	mov dword ptr [ebp - 0x144], eax
0x804a425:   0f be 85 61 ff ff ff            	movsx eax, byte ptr [ebp - 0x9f]
0x804a42c:   89 85 b8 fe ff ff               	mov dword ptr [ebp - 0x148], eax
0x804a432:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x804a436:   89 85 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], eax
0x804a43c:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804a440:   89 85 b0 fe ff ff               	mov dword ptr [ebp - 0x150], eax
0x804a446:   0f bf 85 62 ff ff ff            	movsx eax, word ptr [ebp - 0x9e]
0x804a44d:   89 85 ac fe ff ff               	mov dword ptr [ebp - 0x154], eax
0x804a453:   0f be 85 65 ff ff ff            	movsx eax, byte ptr [ebp - 0x9b]
0x804a45a:   89 85 a8 fe ff ff               	mov dword ptr [ebp - 0x158], eax
0x804a460:   0f b7 85 66 ff ff ff            	movzx eax, word ptr [ebp - 0x9a]
0x804a467:   89 85 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], eax
0x804a46d:   0f b6 55 d3                     	movzx edx, byte ptr [ebp - 0x2d]
0x804a471:   89 95 a0 fe ff ff               	mov dword ptr [ebp - 0x160], edx
0x804a477:   0f be 55 db                     	movsx edx, byte ptr [ebp - 0x25]
0x804a47b:   0f bf 4d e8                     	movsx ecx, word ptr [ebp - 0x18]
0x804a47f:   89 8d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ecx
0x804a485:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x804a489:   0f b7 5d e6                     	movzx ebx, word ptr [ebp - 0x1a]
0x804a48d:   89 9d 98 fe ff ff               	mov dword ptr [ebp - 0x168], ebx
0x804a493:   0f bf 5d f2                     	movsx ebx, word ptr [ebp - 0xe]
0x804a497:   0f b6 75 e5                     	movzx esi, byte ptr [ebp - 0x1b]
0x804a49b:   89 b5 94 fe ff ff               	mov dword ptr [ebp - 0x16c], esi
0x804a4a1:   0f be 75 e2                     	movsx esi, byte ptr [ebp - 0x1e]
0x804a4a5:   0f be 7d e3                     	movsx edi, byte ptr [ebp - 0x1d]
0x804a4a9:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804a4af:   0f b6 7d e4                     	movzx edi, byte ptr [ebp - 0x1c]
0x804a4b3:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x804a4ba:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804a4c0:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a4c6:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a4c9:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a4cf:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a4d2:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a4d5:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a4db:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a4e1:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a4e4:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a4ea:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a4f0:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a4f6:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a4fc:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a502:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a505:   52                              	push edx
0x804a506:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a509:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a50f:   51                              	push ecx
0x804a510:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a516:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a519:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a51f:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a525:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a52b:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a531:   53                              	push ebx
0x804a532:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a538:   56                              	push esi
0x804a539:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a53f:   57                              	push edi
0x804a540:   50                              	push eax
0x804a541:   e8 e0 f0 ff ff                  	call 0x8049626 <set_var>
0x804a546:   83 c4 7c                        	add esp, 0x7c
0x804a549:   0f b7 85 02 ff ff ff            	movzx eax, word ptr [ebp - 0xfe]
0x804a550:   e9 ae 07 00 00                  	jmp 0x804ad03 <func_1+0x1478>
0x804a555:   66 c7 85 e2 fe ff ff f6 ff      	mov word ptr [ebp - 0x11e], 0xfff6
0x804a55e:   66 83 85 e2 fe ff ff 01         	add word ptr [ebp - 0x11e], 1
0x804a566:   e9 a5 00 00 00                  	jmp 0x804a610 <func_1+0xd85>
0x804a56b:   c7 85 f0 fe ff ff bb f0 20 92   	mov dword ptr [ebp - 0x110], 0x9220f0bb
0x804a575:   c7 85 ec fe ff ff c6 4b 32 59   	mov dword ptr [ebp - 0x114], 0x59324bc6
0x804a57f:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804a583:   83 e8 01                        	sub eax, 1
0x804a586:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x804a58a:   c6 45 e3 00                     	mov byte ptr [ebp - 0x1d], 0
0x804a58e:   eb 7a                           	jmp 0x804a60a <func_1+0xd7f>
0x804a590:   80 7d d3 00                     	cmp byte ptr [ebp - 0x2d], 0
0x804a594:   74 10                           	je 0x804a5a6 <func_1+0xd1b>
0x804a596:   83 bd f0 fe ff ff 00            	cmp dword ptr [ebp - 0x110], 0
0x804a59d:   74 07                           	je 0x804a5a6 <func_1+0xd1b>
0x804a59f:   b8 01 00 00 00                  	mov eax, 1
0x804a5a4:   eb 05                           	jmp 0x804a5ab <func_1+0xd20>
0x804a5a6:   b8 00 00 00 00                  	mov eax, 0
0x804a5ab:   89 c2                           	mov edx, eax
0x804a5ad:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a5b0:   21 d0                           	and eax, edx
0x804a5b2:   88 45 8f                        	mov byte ptr [ebp - 0x71], al
0x804a5b5:   81 75 a0 af 0a 00 00            	xor dword ptr [ebp - 0x60], 0xaaf
0x804a5bc:   0f b7 85 62 ff ff ff            	movzx eax, word ptr [ebp - 0x9e]
0x804a5c3:   66 c1 f8 08                     	sar ax, 8
0x804a5c7:   66 85 c0                        	test ax, ax
0x804a5ca:   c7 45 d4 08 00 00 00            	mov dword ptr [ebp - 0x2c], 8
0x804a5d1:   83 bd ec fe ff ff 00            	cmp dword ptr [ebp - 0x114], 0
0x804a5d8:   0f 94 c0                        	sete al
0x804a5db:   0f b6 c0                        	movzx eax, al
0x804a5de:   f7 d8                           	neg eax
0x804a5e0:   89 c2                           	mov edx, eax
0x804a5e2:   0f be 45 e3                     	movsx eax, byte ptr [ebp - 0x1d]
0x804a5e6:   39 c2                           	cmp edx, eax
0x804a5e8:   0f 9e c0                        	setle al
0x804a5eb:   0f b6 c0                        	movzx eax, al
0x804a5ee:   0f b7 95 02 ff ff ff            	movzx edx, word ptr [ebp - 0xfe]
0x804a5f5:   0f b6 ca                        	movzx ecx, dl
0x804a5f8:   99                              	cdq 
0x804a5f9:   f7 f9                           	idiv ecx
0x804a5fb:   89 d0                           	mov eax, edx
0x804a5fd:   21 45 a0                        	and dword ptr [ebp - 0x60], eax
0x804a600:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x804a604:   83 e8 01                        	sub eax, 1
0x804a607:   88 45 e3                        	mov byte ptr [ebp - 0x1d], al
0x804a60a:   80 7d e3 e7                     	cmp byte ptr [ebp - 0x1d], 0xe7
0x804a60e:   7c 80                           	jl 0x804a590 <func_1+0xd05>
0x804a610:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x804a616:   89 c2                           	mov edx, eax
0x804a618:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a61e:   21 d0                           	and eax, edx
0x804a620:   f7 d8                           	neg eax
0x804a622:   0f b6 c0                        	movzx eax, al
0x804a625:   66 2d ff 00                     	sub ax, 0xff
0x804a629:   98                              	cwde 
0x804a62a:   8b 55 a4                        	mov edx, dword ptr [ebp - 0x5c]
0x804a62d:   0f bf fa                        	movsx edi, dx
0x804a630:   99                              	cdq 
0x804a631:   f7 ff                           	idiv edi
0x804a633:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x804a637:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804a63d:   0f b7 d0                        	movzx edx, ax
0x804a640:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a644:   0f 9e c0                        	setle al
0x804a647:   0f b6 c0                        	movzx eax, al
0x804a64a:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804a64d:   0f 9d c0                        	setge al
0x804a650:   0f b6 c0                        	movzx eax, al
0x804a653:   0f af c2                        	imul eax, edx
0x804a656:   0b 45 a4                        	or eax, dword ptr [ebp - 0x5c]
0x804a659:   85 c0                           	test eax, eax
0x804a65b:   74 71                           	je 0x804a6ce <func_1+0xe43>
0x804a65d:   83 6d cc 01                     	sub dword ptr [ebp - 0x34], 1
0x804a661:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x804a666:   0f 85 2b 05 00 00               	jne 0x804ab97 <func_1+0x130c>
0x804a66c:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x804a671:   0f 85 23 05 00 00               	jne 0x804ab9a <func_1+0x130f>
0x804a677:   66 c7 45 b4 ed ff               	mov word ptr [ebp - 0x4c], 0xffed
0x804a67d:   eb 46                           	jmp 0x804a6c5 <func_1+0xe3a>
0x804a67f:   c7 85 d8 fe ff ff 6d 61 86 bb   	mov dword ptr [ebp - 0x128], 0xbb86616d
0x804a689:   0f bf 45 e8                     	movsx eax, word ptr [ebp - 0x18]
0x804a68d:   89 85 fc fe ff ff               	mov dword ptr [ebp - 0x104], eax
0x804a693:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a699:   31 85 fc fe ff ff               	xor dword ptr [ebp - 0x104], eax
0x804a69f:   0f be 85 28 ff ff ff            	movsx eax, byte ptr [ebp - 0xd8]
0x804a6a6:   23 85 70 ff ff ff               	and eax, dword ptr [ebp - 0x90]
0x804a6ac:   85 c0                           	test eax, eax
0x804a6ae:   0f 94 c0                        	sete al
0x804a6b1:   0f b6 c0                        	movzx eax, al
0x804a6b4:   89 85 20 ff ff ff               	mov dword ptr [ebp - 0xe0], eax
0x804a6ba:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a6bd:   09 45 ec                        	or dword ptr [ebp - 0x14], eax
0x804a6c0:   66 83 45 b4 01                  	add word ptr [ebp - 0x4c], 1
0x804a6c5:   66 83 7d b4 2b                  	cmp word ptr [ebp - 0x4c], 0x2b
0x804a6ca:   76 b3                           	jbe 0x804a67f <func_1+0xdf4>
0x804a6cc:   eb 72                           	jmp 0x804a740 <func_1+0xeb5>
0x804a6ce:   c7 85 dc fe ff ff 7f 13 c2 d3   	mov dword ptr [ebp - 0x124], 0xd3c2137f
0x804a6d8:   c6 45 db 10                     	mov byte ptr [ebp - 0x25], 0x10
0x804a6dc:   eb 52                           	jmp 0x804a730 <func_1+0xea5>
0x804a6de:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a6e1:   89 c1                           	mov ecx, eax
0x804a6e3:   8b 85 fc fe ff ff               	mov eax, dword ptr [ebp - 0x104]
0x804a6e9:   0f be d0                        	movsx edx, al
0x804a6ec:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a6f2:   0f be c0                        	movsx eax, al
0x804a6f5:   01 c2                           	add edx, eax
0x804a6f7:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x804a6fb:   39 c2                           	cmp edx, eax
0x804a6fd:   0f 9d c0                        	setge al
0x804a700:   0f b6 c0                        	movzx eax, al
0x804a703:   0f af c1                        	imul eax, ecx
0x804a706:   0f b7 d0                        	movzx edx, ax
0x804a709:   66 0f be 45 8f                  	movsx ax, byte ptr [ebp - 0x71]
0x804a70e:   0f b7 c0                        	movzx eax, ax
0x804a711:   29 c2                           	sub edx, eax
0x804a713:   89 d0                           	mov eax, edx
0x804a715:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a718:   83 bd 58 ff ff ff 00            	cmp dword ptr [ebp - 0xa8], 0
0x804a71f:   74 05                           	je 0x804a726 <func_1+0xe9b>
0x804a721:   e9 7b f3 ff ff                  	jmp 0x8049aa1 <func_1+0x216>
0x804a726:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804a72a:   83 e8 01                        	sub eax, 1
0x804a72d:   88 45 db                        	mov byte ptr [ebp - 0x25], al
0x804a730:   80 7d db 0e                     	cmp byte ptr [ebp - 0x25], 0xe
0x804a734:   7e a8                           	jle 0x804a6de <func_1+0xe53>
0x804a736:   0f b6 45 bf                     	movzx eax, byte ptr [ebp - 0x41]
0x804a73a:   83 e8 01                        	sub eax, 1
0x804a73d:   88 45 bf                        	mov byte ptr [ebp - 0x41], al
0x804a740:   83 45 b8 01                     	add dword ptr [ebp - 0x48], 1
0x804a744:   c7 45 ec 12 00 00 00            	mov dword ptr [ebp - 0x14], 0x12
0x804a74b:   e9 c0 03 00 00                  	jmp 0x804ab10 <func_1+0x1285>
0x804a750:   c7 85 d4 fe ff ff 25 04 28 58   	mov dword ptr [ebp - 0x12c], 0x58280425
0x804a75a:   c6 85 d3 fe ff ff 75            	mov byte ptr [ebp - 0x12d], 0x75
0x804a761:   c7 85 cc fe ff ff 1f aa 17 db   	mov dword ptr [ebp - 0x134], 0xdb17aa1f
0x804a76b:   66 83 6d ea 01                  	sub word ptr [ebp - 0x16], 1
0x804a770:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a774:   39 85 d4 fe ff ff               	cmp dword ptr [ebp - 0x12c], eax
0x804a77a:   0f 97 c0                        	seta al
0x804a77d:   0f b6 d0                        	movzx edx, al
0x804a780:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x804a784:   83 e8 01                        	sub eax, 1
0x804a787:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x804a78a:   66 0f be 85 28 ff ff ff         	movsx ax, byte ptr [ebp - 0xd8]
0x804a792:   0f b7 c8                        	movzx ecx, ax
0x804a795:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804a79b:   0f b7 c0                        	movzx eax, ax
0x804a79e:   29 c1                           	sub ecx, eax
0x804a7a0:   89 c8                           	mov eax, ecx
0x804a7a2:   39 45 94                        	cmp dword ptr [ebp - 0x6c], eax
0x804a7a5:   0f 94 c0                        	sete al
0x804a7a8:   0f b6 c0                        	movzx eax, al
0x804a7ab:   89 85 fc fe ff ff               	mov dword ptr [ebp - 0x104], eax
0x804a7b1:   83 bd fc fe ff ff 00            	cmp dword ptr [ebp - 0x104], 0
0x804a7b8:   75 09                           	jne 0x804a7c3 <func_1+0xf38>
0x804a7ba:   80 bd d3 fe ff ff 00            	cmp byte ptr [ebp - 0x12d], 0
0x804a7c1:   74 07                           	je 0x804a7ca <func_1+0xf3f>
0x804a7c3:   b8 01 00 00 00                  	mov eax, 1
0x804a7c8:   eb 05                           	jmp 0x804a7cf <func_1+0xf44>
0x804a7ca:   b8 00 00 00 00                  	mov eax, 0
0x804a7cf:   0f be d8                        	movsx ebx, al
0x804a7d2:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x804a7d6:   89 c1                           	mov ecx, eax
0x804a7d8:   d3 e3                           	shl ebx, cl
0x804a7da:   89 d8                           	mov eax, ebx
0x804a7dc:   21 d0                           	and eax, edx
0x804a7de:   85 c0                           	test eax, eax
0x804a7e0:   0f 84 4a 01 00 00               	je 0x804a930 <func_1+0x10a5>
0x804a7e6:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a7e9:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a7ec:   0f be 45 b7                     	movsx eax, byte ptr [ebp - 0x49]
0x804a7f0:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x804a7f6:   0f b6 45 bf                     	movzx eax, byte ptr [ebp - 0x41]
0x804a7fa:   89 85 bc fe ff ff               	mov dword ptr [ebp - 0x144], eax
0x804a800:   0f be 85 61 ff ff ff            	movsx eax, byte ptr [ebp - 0x9f]
0x804a807:   89 85 b8 fe ff ff               	mov dword ptr [ebp - 0x148], eax
0x804a80d:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x804a811:   89 85 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], eax
0x804a817:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804a81b:   89 85 b0 fe ff ff               	mov dword ptr [ebp - 0x150], eax
0x804a821:   0f bf 85 62 ff ff ff            	movsx eax, word ptr [ebp - 0x9e]
0x804a828:   89 85 ac fe ff ff               	mov dword ptr [ebp - 0x154], eax
0x804a82e:   0f be 85 65 ff ff ff            	movsx eax, byte ptr [ebp - 0x9b]
0x804a835:   89 85 a8 fe ff ff               	mov dword ptr [ebp - 0x158], eax
0x804a83b:   0f b7 85 66 ff ff ff            	movzx eax, word ptr [ebp - 0x9a]
0x804a842:   89 85 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], eax
0x804a848:   0f b6 55 d3                     	movzx edx, byte ptr [ebp - 0x2d]
0x804a84c:   89 95 a0 fe ff ff               	mov dword ptr [ebp - 0x160], edx
0x804a852:   0f be 55 db                     	movsx edx, byte ptr [ebp - 0x25]
0x804a856:   0f bf 4d e8                     	movsx ecx, word ptr [ebp - 0x18]
0x804a85a:   89 8d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ecx
0x804a860:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x804a864:   0f b7 5d e6                     	movzx ebx, word ptr [ebp - 0x1a]
0x804a868:   89 9d 98 fe ff ff               	mov dword ptr [ebp - 0x168], ebx
0x804a86e:   0f bf 5d f2                     	movsx ebx, word ptr [ebp - 0xe]
0x804a872:   0f b6 75 e5                     	movzx esi, byte ptr [ebp - 0x1b]
0x804a876:   89 b5 94 fe ff ff               	mov dword ptr [ebp - 0x16c], esi
0x804a87c:   0f be 75 e2                     	movsx esi, byte ptr [ebp - 0x1e]
0x804a880:   0f be 7d e3                     	movsx edi, byte ptr [ebp - 0x1d]
0x804a884:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804a88a:   0f b6 7d e4                     	movzx edi, byte ptr [ebp - 0x1c]
0x804a88e:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x804a895:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804a89b:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a8a1:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a8a4:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a8aa:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a8ad:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a8b0:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a8b6:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a8bc:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a8bf:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a8c5:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a8cb:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a8d1:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a8d7:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a8dd:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a8e0:   52                              	push edx
0x804a8e1:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a8e4:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a8ea:   51                              	push ecx
0x804a8eb:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a8f1:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a8f4:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a8fa:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a900:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a906:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a90c:   53                              	push ebx
0x804a90d:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a913:   56                              	push esi
0x804a914:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a91a:   57                              	push edi
0x804a91b:   50                              	push eax
0x804a91c:   e8 05 ed ff ff                  	call 0x8049626 <set_var>
0x804a921:   83 c4 7c                        	add esp, 0x7c
0x804a924:   0f b6 85 61 ff ff ff            	movzx eax, byte ptr [ebp - 0x9f]
0x804a92b:   e9 d3 03 00 00                  	jmp 0x804ad03 <func_1+0x1478>
0x804a930:   c7 85 c8 fe ff ff 52 e8 93 74   	mov dword ptr [ebp - 0x138], 0x7493e852
0x804a93a:   66 0f be 85 65 ff ff ff         	movsx ax, byte ptr [ebp - 0x9b]
0x804a942:   0f b7 d0                        	movzx edx, ax
0x804a945:   66 0f be 85 28 ff ff ff         	movsx ax, byte ptr [ebp - 0xd8]
0x804a94d:   0f b7 c0                        	movzx eax, ax
0x804a950:   89 c1                           	mov ecx, eax
0x804a952:   d3 e2                           	shl edx, cl
0x804a954:   89 d0                           	mov eax, edx
0x804a956:   08 45 b7                        	or byte ptr [ebp - 0x49], al
0x804a959:   0f b6 95 d3 fe ff ff            	movzx edx, byte ptr [ebp - 0x12d]
0x804a960:   8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x804a966:   0f b7 c0                        	movzx eax, ax
0x804a969:   89 d1                           	mov ecx, edx
0x804a96b:   29 c1                           	sub ecx, eax
0x804a96d:   0f b6 55 e4                     	movzx edx, byte ptr [ebp - 0x1c]
0x804a971:   8b 85 c8 fe ff ff               	mov eax, dword ptr [ebp - 0x138]
0x804a977:   0f b7 c0                        	movzx eax, ax
0x804a97a:   39 c2                           	cmp edx, eax
0x804a97c:   74 10                           	je 0x804a98e <func_1+0x1103>
0x804a97e:   83 bd cc fe ff ff 00            	cmp dword ptr [ebp - 0x134], 0
0x804a985:   74 07                           	je 0x804a98e <func_1+0x1103>
0x804a987:   b8 01 00 00 00                  	mov eax, 1
0x804a98c:   eb 05                           	jmp 0x804a993 <func_1+0x1108>
0x804a98e:   b8 00 00 00 00                  	mov eax, 0
0x804a993:   39 c8                           	cmp eax, ecx
0x804a995:   0f 9c c0                        	setl al
0x804a998:   0f b6 d0                        	movzx edx, al
0x804a99b:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x804a99f:   89 c1                           	mov ecx, eax
0x804a9a1:   d3 e2                           	shl edx, cl
0x804a9a3:   89 d0                           	mov eax, edx
0x804a9a5:   89 c1                           	mov ecx, eax
0x804a9a7:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804a9ad:   89 c2                           	mov edx, eax
0x804a9af:   0f b6 c1                        	movzx eax, cl
0x804a9b2:   f6 f2                           	div dl
0x804a9b4:   0f b6 c4                        	movzx eax, ah
0x804a9b7:   0f b6 c0                        	movzx eax, al
0x804a9ba:   39 85 fc fe ff ff               	cmp dword ptr [ebp - 0x104], eax
0x804a9c0:   0f 95 c0                        	setne al
0x804a9c3:   0f b6 c0                        	movzx eax, al
0x804a9c6:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a9c9:   c7 85 2c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xd4], 1
0x804a9d3:   c6 45 b7 00                     	mov byte ptr [ebp - 0x49], 0
0x804a9d7:   0f be 85 61 ff ff ff            	movsx eax, byte ptr [ebp - 0x9f]
0x804a9de:   39 85 cc fe ff ff               	cmp dword ptr [ebp - 0x134], eax
0x804a9e4:   0f 95 c0                        	setne al
0x804a9e7:   0f b6 c0                        	movzx eax, al
0x804a9ea:   f7 d0                           	not eax
0x804a9ec:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x804a9ef:   72 07                           	jb 0x804a9f8 <func_1+0x116d>
0x804a9f1:   b8 00 00 00 00                  	mov eax, 0
0x804a9f6:   eb 05                           	jmp 0x804a9fd <func_1+0x1172>
0x804a9f8:   b8 ff 00 00 00                  	mov eax, 0xff
0x804a9fd:   0f b7 55 f2                     	movzx edx, word ptr [ebp - 0xe]
0x804aa01:   0f b6 f2                        	movzx esi, dl
0x804aa04:   99                              	cdq 
0x804aa05:   f7 fe                           	idiv esi
0x804aa07:   39 85 fc fe ff ff               	cmp dword ptr [ebp - 0x104], eax
0x804aa0d:   74 0d                           	je 0x804aa1c <func_1+0x1191>
0x804aa0f:   80 7d 8f 00                     	cmp byte ptr [ebp - 0x71], 0
0x804aa13:   74 07                           	je 0x804aa1c <func_1+0x1191>
0x804aa15:   b8 01 00 00 00                  	mov eax, 1
0x804aa1a:   eb 05                           	jmp 0x804aa21 <func_1+0x1196>
0x804aa1c:   b8 00 00 00 00                  	mov eax, 0
0x804aa21:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804aa24:   0f b7 85 40 ff ff ff            	movzx eax, word ptr [ebp - 0xc0]
0x804aa2b:   30 45 b7                        	xor byte ptr [ebp - 0x49], al
0x804aa2e:   0f be 55 b7                     	movsx edx, byte ptr [ebp - 0x49]
0x804aa32:   83 bd 70 ff ff ff 00            	cmp dword ptr [ebp - 0x90], 0
0x804aa39:   0f 94 c0                        	sete al
0x804aa3c:   0f b6 c8                        	movzx ecx, al
0x804aa3f:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804aa45:   66 98                           	cbw 
0x804aa47:   29 c1                           	sub ecx, eax
0x804aa49:   89 c8                           	mov eax, ecx
0x804aa4b:   89 c3                           	mov ebx, eax
0x804aa4d:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x804aa53:   89 c1                           	mov ecx, eax
0x804aa55:   89 d8                           	mov eax, ebx
0x804aa57:   0f af c1                        	imul eax, ecx
0x804aa5a:   20 45 cb                        	and byte ptr [ebp - 0x35], al
0x804aa5d:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x804aa61:   89 c1                           	mov ecx, eax
0x804aa63:   d3 e2                           	shl edx, cl
0x804aa65:   89 d0                           	mov eax, edx
0x804aa67:   85 c0                           	test eax, eax
0x804aa69:   74 0d                           	je 0x804aa78 <func_1+0x11ed>
0x804aa6b:   83 7d 90 00                     	cmp dword ptr [ebp - 0x70], 0
0x804aa6f:   74 07                           	je 0x804aa78 <func_1+0x11ed>
0x804aa71:   b8 01 00 00 00                  	mov eax, 1
0x804aa76:   eb 05                           	jmp 0x804aa7d <func_1+0x11f2>
0x804aa78:   b8 00 00 00 00                  	mov eax, 0
0x804aa7d:   66 0f be d0                     	movsx dx, al
0x804aa81:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804aa87:   66 98                           	cbw 
0x804aa89:   01 d0                           	add eax, edx
0x804aa8b:   66 c1 f8 03                     	sar ax, 3
0x804aa8f:   89 c2                           	mov edx, eax
0x804aa91:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804aa95:   29 c2                           	sub edx, eax
0x804aa97:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804aa9a:   01 d0                           	add eax, edx
0x804aa9c:   89 c2                           	mov edx, eax
0x804aa9e:   8b 85 fc fe ff ff               	mov eax, dword ptr [ebp - 0x104]
0x804aaa4:   21 d0                           	and eax, edx
0x804aaa6:   0f b7 d0                        	movzx edx, ax
0x804aaa9:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804aaad:   0f b7 c0                        	movzx eax, ax
0x804aab0:   89 c1                           	mov ecx, eax
0x804aab2:   d3 fa                           	sar edx, cl
0x804aab4:   89 d0                           	mov eax, edx
0x804aab6:   0f b7 d0                        	movzx edx, ax
0x804aab9:   0f b7 85 2a ff ff ff            	movzx eax, word ptr [ebp - 0xd6]
0x804aac0:   0f b7 c0                        	movzx eax, ax
0x804aac3:   89 c1                           	mov ecx, eax
0x804aac5:   d3 fa                           	sar edx, cl
0x804aac7:   89 d0                           	mov eax, edx
0x804aac9:   39 85 d4 fe ff ff               	cmp dword ptr [ebp - 0x12c], eax
0x804aacf:   0f 97 c0                        	seta al
0x804aad2:   0f b6 c0                        	movzx eax, al
0x804aad5:   8b 95 d4 fe ff ff               	mov edx, dword ptr [ebp - 0x12c]
0x804aadb:   0f b6 fa                        	movzx edi, dl
0x804aade:   99                              	cdq 
0x804aadf:   f7 ff                           	idiv edi
0x804aae1:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x804aae5:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x804aaeb:   88 85 fb fe ff ff               	mov byte ptr [ebp - 0x105], al
0x804aaf1:   83 bd f4 fe ff ff 00            	cmp dword ptr [ebp - 0x10c], 0
0x804aaf8:   74 07                           	je 0x804ab01 <func_1+0x1276>
0x804aafa:   b8 01 00 00 00                  	mov eax, 1
0x804aaff:   eb 05                           	jmp 0x804ab06 <func_1+0x127b>
0x804ab01:   b8 00 00 00 00                  	mov eax, 0
0x804ab06:   89 85 30 ff ff ff               	mov dword ptr [ebp - 0xd0], eax
0x804ab0c:   83 6d ec 09                     	sub dword ptr [ebp - 0x14], 9
0x804ab10:   83 7d ec eb                     	cmp dword ptr [ebp - 0x14], -0x15
0x804ab14:   0f 8d 36 fc ff ff               	jge 0x804a750 <func_1+0xec5>
0x804ab1a:   eb 01                           	jmp 0x804ab1d <func_1+0x1292>
0x804ab1c:   90                              	nop 
0x804ab1d:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804ab21:   0f b7 55 f2                     	movzx edx, word ptr [ebp - 0xe]
0x804ab25:   0f be d2                        	movsx edx, dl
0x804ab28:   c1 e2 03                        	shl edx, 3
0x804ab2b:   39 d0                           	cmp eax, edx
0x804ab2d:   74 07                           	je 0x804ab36 <func_1+0x12ab>
0x804ab2f:   b8 7a 31 01 00                  	mov eax, 0x1317a
0x804ab34:   eb 05                           	jmp 0x804ab3b <func_1+0x12b0>
0x804ab36:   b8 bd 98 00 00                  	mov eax, 0x98bd
0x804ab3b:   0b 45 94                        	or eax, dword ptr [ebp - 0x6c]
0x804ab3e:   23 85 6c ff ff ff               	and eax, dword ptr [ebp - 0x94]
0x804ab44:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x804ab4a:   75 07                           	jne 0x804ab53 <func_1+0x12c8>
0x804ab4c:   b8 10 00 00 00                  	mov eax, 0x10
0x804ab51:   eb 05                           	jmp 0x804ab58 <func_1+0x12cd>
0x804ab53:   b8 00 00 00 00                  	mov eax, 0
0x804ab58:   3b 85 6c ff ff ff               	cmp eax, dword ptr [ebp - 0x94]
0x804ab5e:   77 07                           	ja 0x804ab67 <func_1+0x12dc>
0x804ab60:   b8 10 00 00 00                  	mov eax, 0x10
0x804ab65:   eb 05                           	jmp 0x804ab6c <func_1+0x12e1>
0x804ab67:   b8 00 00 00 00                  	mov eax, 0
0x804ab6c:   99                              	cdq 
0x804ab6d:   f7 bd 1c ff ff ff               	idiv dword ptr [ebp - 0xe4]
0x804ab73:   0f b6 d0                        	movzx edx, al
0x804ab76:   0f b7 85 56 ff ff ff            	movzx eax, word ptr [ebp - 0xaa]
0x804ab7d:   0f b6 c0                        	movzx eax, al
0x804ab80:   89 c1                           	mov ecx, eax
0x804ab82:   d3 e2                           	shl edx, cl
0x804ab84:   89 d0                           	mov eax, edx
0x804ab86:   0f be d0                        	movsx edx, al
0x804ab89:   89 d0                           	mov eax, edx
0x804ab8b:   c1 e2 02                        	shl edx, 2
0x804ab8e:   29 d0                           	sub eax, edx
0x804ab90:   01 c0                           	add eax, eax
0x804ab92:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804ab95:   eb 04                           	jmp 0x804ab9b <func_1+0x1310>
0x804ab97:   90                              	nop 
0x804ab98:   eb 01                           	jmp 0x804ab9b <func_1+0x1310>
0x804ab9a:   90                              	nop 
0x804ab9b:   0f b6 45 e2                     	movzx eax, byte ptr [ebp - 0x1e]
0x804ab9f:   83 c0 01                        	add eax, 1
0x804aba2:   88 45 e2                        	mov byte ptr [ebp - 0x1e], al
0x804aba5:   80 7d e2 19                     	cmp byte ptr [ebp - 0x1e], 0x19
0x804aba9:   0f 85 33 f0 ff ff               	jne 0x8049be2 <func_1+0x357>
0x804abaf:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804abb2:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804abb5:   66 83 45 b2 01                  	add word ptr [ebp - 0x4e], 1
0x804abba:   66 83 7d b2 27                  	cmp word ptr [ebp - 0x4e], 0x27
0x804abbf:   0f 86 b5 ef ff ff               	jbe 0x8049b7a <func_1+0x2ef>
0x804abc5:   0f be 45 b7                     	movsx eax, byte ptr [ebp - 0x49]
0x804abc9:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x804abcf:   0f b6 45 bf                     	movzx eax, byte ptr [ebp - 0x41]
0x804abd3:   89 85 bc fe ff ff               	mov dword ptr [ebp - 0x144], eax
0x804abd9:   0f be 85 61 ff ff ff            	movsx eax, byte ptr [ebp - 0x9f]
0x804abe0:   89 85 b8 fe ff ff               	mov dword ptr [ebp - 0x148], eax
0x804abe6:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x804abea:   89 85 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], eax
0x804abf0:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804abf4:   89 85 b0 fe ff ff               	mov dword ptr [ebp - 0x150], eax
0x804abfa:   0f bf 85 62 ff ff ff            	movsx eax, word ptr [ebp - 0x9e]
0x804ac01:   89 85 ac fe ff ff               	mov dword ptr [ebp - 0x154], eax
0x804ac07:   0f be 85 65 ff ff ff            	movsx eax, byte ptr [ebp - 0x9b]
0x804ac0e:   89 85 a8 fe ff ff               	mov dword ptr [ebp - 0x158], eax
0x804ac14:   0f b7 85 66 ff ff ff            	movzx eax, word ptr [ebp - 0x9a]
0x804ac1b:   89 85 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], eax
0x804ac21:   0f b6 55 d3                     	movzx edx, byte ptr [ebp - 0x2d]
0x804ac25:   89 95 a0 fe ff ff               	mov dword ptr [ebp - 0x160], edx
0x804ac2b:   0f be 55 db                     	movsx edx, byte ptr [ebp - 0x25]
0x804ac2f:   0f bf 4d e8                     	movsx ecx, word ptr [ebp - 0x18]
0x804ac33:   89 8d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ecx
0x804ac39:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x804ac3d:   0f b7 5d e6                     	movzx ebx, word ptr [ebp - 0x1a]
0x804ac41:   89 9d 98 fe ff ff               	mov dword ptr [ebp - 0x168], ebx
0x804ac47:   0f bf 5d f2                     	movsx ebx, word ptr [ebp - 0xe]
0x804ac4b:   0f b6 75 e5                     	movzx esi, byte ptr [ebp - 0x1b]
0x804ac4f:   89 b5 94 fe ff ff               	mov dword ptr [ebp - 0x16c], esi
0x804ac55:   0f be 75 e2                     	movsx esi, byte ptr [ebp - 0x1e]
0x804ac59:   0f be 7d e3                     	movsx edi, byte ptr [ebp - 0x1d]
0x804ac5d:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804ac63:   0f b6 7d e4                     	movzx edi, byte ptr [ebp - 0x1c]
0x804ac67:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x804ac6e:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804ac74:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804ac7a:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804ac7d:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804ac83:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804ac86:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804ac89:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804ac8f:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804ac95:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804ac98:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804ac9e:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804aca4:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804acaa:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804acb0:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804acb6:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804acb9:   52                              	push edx
0x804acba:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804acbd:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804acc3:   51                              	push ecx
0x804acc4:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804acca:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804accd:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804acd3:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804acd9:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804acdf:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804ace5:   53                              	push ebx
0x804ace6:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804acec:   56                              	push esi
0x804aced:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804acf3:   57                              	push edi
0x804acf4:   50                              	push eax
0x804acf5:   e8 2c e9 ff ff                  	call 0x8049626 <set_var>
0x804acfa:   83 c4 7c                        	add esp, 0x7c
0x804acfd:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804ad03:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804ad06:   5b                              	pop ebx
0x804ad07:   5e                              	pop esi
0x804ad08:   5f                              	pop edi
0x804ad09:   5d                              	pop ebp
0x804ad0a:   c3                              	ret 
; function: main at 0x804ad0b -- 0x804b147
0x804ad0b:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804ad0f:   83 e4 f0                        	and esp, 0xfffffff0
0x804ad12:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804ad15:   55                              	push ebp
0x804ad16:   89 e5                           	mov ebp, esp
0x804ad18:   53                              	push ebx
0x804ad19:   51                              	push ecx
0x804ad1a:   83 ec 10                        	sub esp, 0x10
0x804ad1d:   e8 6e d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ad22:   81 c3 de 32 00 00               	add ebx, 0x32de
0x804ad28:   89 c8                           	mov eax, ecx
0x804ad2a:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804ad31:   83 38 02                        	cmp dword ptr [eax], 2
0x804ad34:   75 26                           	jne 0x804ad5c <main+0x51>
0x804ad36:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804ad39:   83 c0 04                        	add eax, 4
0x804ad3c:   8b 00                           	mov eax, dword ptr [eax]
0x804ad3e:   83 ec 08                        	sub esp, 8
0x804ad41:   8d 93 28 d2 ff ff               	lea edx, [ebx - 0x2dd8]
0x804ad47:   52                              	push edx
0x804ad48:   50                              	push eax
0x804ad49:   e8 b2 d5 ff ff                  	call 0x8048300 <strcmp>
0x804ad4e:   83 c4 10                        	add esp, 0x10
0x804ad51:   85 c0                           	test eax, eax
0x804ad53:   75 07                           	jne 0x804ad5c <main+0x51>
0x804ad55:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804ad5c:   e8 f5 d6 ff ff                  	call 0x8048456 <platform_main_begin>
0x804ad61:   e8 05 e7 ff ff                  	call 0x804946b <crc32_gentab>
0x804ad66:   e8 20 eb ff ff                  	call 0x804988b <func_1>
0x804ad6b:   0f b7 83 24 00 00 00            	movzx eax, word ptr [ebx + 0x24]
0x804ad72:   0f b7 c0                        	movzx eax, ax
0x804ad75:   83 ec 04                        	sub esp, 4
0x804ad78:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad7b:   8d 93 2a d2 ff ff               	lea edx, [ebx - 0x2dd6]
0x804ad81:   52                              	push edx
0x804ad82:   50                              	push eax
0x804ad83:   e8 ef e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad88:   83 c4 10                        	add esp, 0x10
0x804ad8b:   0f b6 83 26 00 00 00            	movzx eax, byte ptr [ebx + 0x26]
0x804ad92:   0f b6 c0                        	movzx eax, al
0x804ad95:   83 ec 04                        	sub esp, 4
0x804ad98:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad9b:   8d 93 2e d2 ff ff               	lea edx, [ebx - 0x2dd2]
0x804ada1:   52                              	push edx
0x804ada2:   50                              	push eax
0x804ada3:   e8 cf e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ada8:   83 c4 10                        	add esp, 0x10
0x804adab:   0f b6 83 27 00 00 00            	movzx eax, byte ptr [ebx + 0x27]
0x804adb2:   0f be c0                        	movsx eax, al
0x804adb5:   83 ec 04                        	sub esp, 4
0x804adb8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adbb:   8d 93 33 d2 ff ff               	lea edx, [ebx - 0x2dcd]
0x804adc1:   52                              	push edx
0x804adc2:   50                              	push eax
0x804adc3:   e8 af e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adc8:   83 c4 10                        	add esp, 0x10
0x804adcb:   0f b6 83 28 00 00 00            	movzx eax, byte ptr [ebx + 0x28]
0x804add2:   0f be c0                        	movsx eax, al
0x804add5:   83 ec 04                        	sub esp, 4
0x804add8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804addb:   8d 93 38 d2 ff ff               	lea edx, [ebx - 0x2dc8]
0x804ade1:   52                              	push edx
0x804ade2:   50                              	push eax
0x804ade3:   e8 8f e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ade8:   83 c4 10                        	add esp, 0x10
0x804adeb:   0f b6 83 29 00 00 00            	movzx eax, byte ptr [ebx + 0x29]
0x804adf2:   0f b6 c0                        	movzx eax, al
0x804adf5:   83 ec 04                        	sub esp, 4
0x804adf8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adfb:   8d 93 3d d2 ff ff               	lea edx, [ebx - 0x2dc3]
0x804ae01:   52                              	push edx
0x804ae02:   50                              	push eax
0x804ae03:   e8 6f e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae08:   83 c4 10                        	add esp, 0x10
0x804ae0b:   0f b7 83 2a 00 00 00            	movzx eax, word ptr [ebx + 0x2a]
0x804ae12:   98                              	cwde 
0x804ae13:   83 ec 04                        	sub esp, 4
0x804ae16:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae19:   8d 93 42 d2 ff ff               	lea edx, [ebx - 0x2dbe]
0x804ae1f:   52                              	push edx
0x804ae20:   50                              	push eax
0x804ae21:   e8 51 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae26:   83 c4 10                        	add esp, 0x10
0x804ae29:   0f b7 83 2c 00 00 00            	movzx eax, word ptr [ebx + 0x2c]
0x804ae30:   0f b7 c0                        	movzx eax, ax
0x804ae33:   83 ec 04                        	sub esp, 4
0x804ae36:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae39:   8d 93 47 d2 ff ff               	lea edx, [ebx - 0x2db9]
0x804ae3f:   52                              	push edx
0x804ae40:   50                              	push eax
0x804ae41:   e8 31 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae46:   83 c4 10                        	add esp, 0x10
0x804ae49:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804ae4f:   89 c2                           	mov edx, eax
0x804ae51:   83 ec 04                        	sub esp, 4
0x804ae54:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae57:   8d 83 4c d2 ff ff               	lea eax, [ebx - 0x2db4]
0x804ae5d:   50                              	push eax
0x804ae5e:   52                              	push edx
0x804ae5f:   e8 13 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae64:   83 c4 10                        	add esp, 0x10
0x804ae67:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804ae6d:   83 ec 04                        	sub esp, 4
0x804ae70:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae73:   8d 93 51 d2 ff ff               	lea edx, [ebx - 0x2daf]
0x804ae79:   52                              	push edx
0x804ae7a:   50                              	push eax
0x804ae7b:   e8 f7 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae80:   83 c4 10                        	add esp, 0x10
0x804ae83:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804ae89:   83 ec 04                        	sub esp, 4
0x804ae8c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae8f:   8d 93 56 d2 ff ff               	lea edx, [ebx - 0x2daa]
0x804ae95:   52                              	push edx
0x804ae96:   50                              	push eax
0x804ae97:   e8 db e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae9c:   83 c4 10                        	add esp, 0x10
0x804ae9f:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804aea5:   89 c2                           	mov edx, eax
0x804aea7:   83 ec 04                        	sub esp, 4
0x804aeaa:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aead:   8d 83 5b d2 ff ff               	lea eax, [ebx - 0x2da5]
0x804aeb3:   50                              	push eax
0x804aeb4:   52                              	push edx
0x804aeb5:   e8 bd e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aeba:   83 c4 10                        	add esp, 0x10
0x804aebd:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804aec3:   89 c2                           	mov edx, eax
0x804aec5:   83 ec 04                        	sub esp, 4
0x804aec8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aecb:   8d 83 60 d2 ff ff               	lea eax, [ebx - 0x2da0]
0x804aed1:   50                              	push eax
0x804aed2:   52                              	push edx
0x804aed3:   e8 9f e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aed8:   83 c4 10                        	add esp, 0x10
0x804aedb:   0f b7 83 44 00 00 00            	movzx eax, word ptr [ebx + 0x44]
0x804aee2:   0f b7 c0                        	movzx eax, ax
0x804aee5:   83 ec 04                        	sub esp, 4
0x804aee8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aeeb:   8d 93 65 d2 ff ff               	lea edx, [ebx - 0x2d9b]
0x804aef1:   52                              	push edx
0x804aef2:   50                              	push eax
0x804aef3:   e8 7f e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aef8:   83 c4 10                        	add esp, 0x10
0x804aefb:   0f b7 83 46 00 00 00            	movzx eax, word ptr [ebx + 0x46]
0x804af02:   98                              	cwde 
0x804af03:   83 ec 04                        	sub esp, 4
0x804af06:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af09:   8d 93 6b d2 ff ff               	lea edx, [ebx - 0x2d95]
0x804af0f:   52                              	push edx
0x804af10:   50                              	push eax
0x804af11:   e8 61 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af16:   83 c4 10                        	add esp, 0x10
0x804af19:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804af1f:   83 ec 04                        	sub esp, 4
0x804af22:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af25:   8d 93 71 d2 ff ff               	lea edx, [ebx - 0x2d8f]
0x804af2b:   52                              	push edx
0x804af2c:   50                              	push eax
0x804af2d:   e8 45 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af32:   83 c4 10                        	add esp, 0x10
0x804af35:   0f b6 83 4c 00 00 00            	movzx eax, byte ptr [ebx + 0x4c]
0x804af3c:   0f be c0                        	movsx eax, al
0x804af3f:   83 ec 04                        	sub esp, 4
0x804af42:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af45:   8d 93 77 d2 ff ff               	lea edx, [ebx - 0x2d89]
0x804af4b:   52                              	push edx
0x804af4c:   50                              	push eax
0x804af4d:   e8 25 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af52:   83 c4 10                        	add esp, 0x10
0x804af55:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804af5b:   89 c2                           	mov edx, eax
0x804af5d:   83 ec 04                        	sub esp, 4
0x804af60:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af63:   8d 83 7d d2 ff ff               	lea eax, [ebx - 0x2d83]
0x804af69:   50                              	push eax
0x804af6a:   52                              	push edx
0x804af6b:   e8 07 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af70:   83 c4 10                        	add esp, 0x10
0x804af73:   0f b6 83 54 00 00 00            	movzx eax, byte ptr [ebx + 0x54]
0x804af7a:   0f b6 c0                        	movzx eax, al
0x804af7d:   83 ec 04                        	sub esp, 4
0x804af80:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af83:   8d 93 83 d2 ff ff               	lea edx, [ebx - 0x2d7d]
0x804af89:   52                              	push edx
0x804af8a:   50                              	push eax
0x804af8b:   e8 e7 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af90:   83 c4 10                        	add esp, 0x10
0x804af93:   0f b7 83 56 00 00 00            	movzx eax, word ptr [ebx + 0x56]
0x804af9a:   0f b7 c0                        	movzx eax, ax
0x804af9d:   83 ec 04                        	sub esp, 4
0x804afa0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afa3:   8d 93 89 d2 ff ff               	lea edx, [ebx - 0x2d77]
0x804afa9:   52                              	push edx
0x804afaa:   50                              	push eax
0x804afab:   e8 c7 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afb0:   83 c4 10                        	add esp, 0x10
0x804afb3:   0f b6 83 58 00 00 00            	movzx eax, byte ptr [ebx + 0x58]
0x804afba:   0f be c0                        	movsx eax, al
0x804afbd:   83 ec 04                        	sub esp, 4
0x804afc0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afc3:   8d 93 8f d2 ff ff               	lea edx, [ebx - 0x2d71]
0x804afc9:   52                              	push edx
0x804afca:   50                              	push eax
0x804afcb:   e8 a7 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afd0:   83 c4 10                        	add esp, 0x10
0x804afd3:   0f b7 83 5a 00 00 00            	movzx eax, word ptr [ebx + 0x5a]
0x804afda:   98                              	cwde 
0x804afdb:   83 ec 04                        	sub esp, 4
0x804afde:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afe1:   8d 93 95 d2 ff ff               	lea edx, [ebx - 0x2d6b]
0x804afe7:   52                              	push edx
0x804afe8:   50                              	push eax
0x804afe9:   e8 89 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afee:   83 c4 10                        	add esp, 0x10
0x804aff1:   0f b7 83 5c 00 00 00            	movzx eax, word ptr [ebx + 0x5c]
0x804aff8:   0f b7 c0                        	movzx eax, ax
0x804affb:   83 ec 04                        	sub esp, 4
0x804affe:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b001:   8d 93 9b d2 ff ff               	lea edx, [ebx - 0x2d65]
0x804b007:   52                              	push edx
0x804b008:   50                              	push eax
0x804b009:   e8 69 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b00e:   83 c4 10                        	add esp, 0x10
0x804b011:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804b017:   83 ec 04                        	sub esp, 4
0x804b01a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b01d:   8d 93 a1 d2 ff ff               	lea edx, [ebx - 0x2d5f]
0x804b023:   52                              	push edx
0x804b024:   50                              	push eax
0x804b025:   e8 4d e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b02a:   83 c4 10                        	add esp, 0x10
0x804b02d:   0f b6 83 a4 04 00 00            	movzx eax, byte ptr [ebx + 0x4a4]
0x804b034:   0f be c0                        	movsx eax, al
0x804b037:   83 ec 04                        	sub esp, 4
0x804b03a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b03d:   8d 93 a7 d2 ff ff               	lea edx, [ebx - 0x2d59]
0x804b043:   52                              	push edx
0x804b044:   50                              	push eax
0x804b045:   e8 2d e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b04a:   83 c4 10                        	add esp, 0x10
0x804b04d:   0f b6 83 64 00 00 00            	movzx eax, byte ptr [ebx + 0x64]
0x804b054:   0f be c0                        	movsx eax, al
0x804b057:   83 ec 04                        	sub esp, 4
0x804b05a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b05d:   8d 93 ad d2 ff ff               	lea edx, [ebx - 0x2d53]
0x804b063:   52                              	push edx
0x804b064:   50                              	push eax
0x804b065:   e8 0d e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b06a:   83 c4 10                        	add esp, 0x10
0x804b06d:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804b073:   89 c2                           	mov edx, eax
0x804b075:   83 ec 04                        	sub esp, 4
0x804b078:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b07b:   8d 83 b3 d2 ff ff               	lea eax, [ebx - 0x2d4d]
0x804b081:   50                              	push eax
0x804b082:   52                              	push edx
0x804b083:   e8 ef e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b088:   83 c4 10                        	add esp, 0x10
0x804b08b:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804b091:   89 c2                           	mov edx, eax
0x804b093:   83 ec 04                        	sub esp, 4
0x804b096:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b099:   8d 83 b9 d2 ff ff               	lea eax, [ebx - 0x2d47]
0x804b09f:   50                              	push eax
0x804b0a0:   52                              	push edx
0x804b0a1:   e8 d1 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0a6:   83 c4 10                        	add esp, 0x10
0x804b0a9:   0f b6 83 70 00 00 00            	movzx eax, byte ptr [ebx + 0x70]
0x804b0b0:   0f b6 c0                        	movzx eax, al
0x804b0b3:   83 ec 04                        	sub esp, 4
0x804b0b6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0b9:   8d 93 bf d2 ff ff               	lea edx, [ebx - 0x2d41]
0x804b0bf:   52                              	push edx
0x804b0c0:   50                              	push eax
0x804b0c1:   e8 b1 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0c6:   83 c4 10                        	add esp, 0x10
0x804b0c9:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804b0cf:   83 ec 04                        	sub esp, 4
0x804b0d2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0d5:   8d 93 c5 d2 ff ff               	lea edx, [ebx - 0x2d3b]
0x804b0db:   52                              	push edx
0x804b0dc:   50                              	push eax
0x804b0dd:   e8 95 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0e2:   83 c4 10                        	add esp, 0x10
0x804b0e5:   0f b6 83 78 00 00 00            	movzx eax, byte ptr [ebx + 0x78]
0x804b0ec:   0f be c0                        	movsx eax, al
0x804b0ef:   83 ec 04                        	sub esp, 4
0x804b0f2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0f5:   8d 93 cb d2 ff ff               	lea edx, [ebx - 0x2d35]
0x804b0fb:   52                              	push edx
0x804b0fc:   50                              	push eax
0x804b0fd:   e8 75 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b102:   83 c4 10                        	add esp, 0x10
0x804b105:   8b 83 7c 00 00 00               	mov eax, dword ptr [ebx + 0x7c]
0x804b10b:   83 ec 04                        	sub esp, 4
0x804b10e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b111:   8d 93 d1 d2 ff ff               	lea edx, [ebx - 0x2d2f]
0x804b117:   52                              	push edx
0x804b118:   50                              	push eax
0x804b119:   e8 59 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b11e:   83 c4 10                        	add esp, 0x10
0x804b121:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b127:   f7 d0                           	not eax
0x804b129:   83 ec 08                        	sub esp, 8
0x804b12c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b12f:   50                              	push eax
0x804b130:   e8 31 d3 ff ff                  	call 0x8048466 <platform_main_end>
0x804b135:   83 c4 10                        	add esp, 0x10
0x804b138:   b8 00 00 00 00                  	mov eax, 0
0x804b13d:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b140:   59                              	pop ecx
0x804b141:   5b                              	pop ebx
0x804b142:   5d                              	pop ebp
0x804b143:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b146:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b147 -- 0x804b14b
0x804b147:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b14a:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b14b -- 0x804b14f
0x804b14b:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b14e:   c3                              	ret 
; data inside code section at 0x804b14f -- 0x804b150
0x804b14f:   90                                                 |.               |
; function: __libc_csu_init at 0x804b150 -- 0x804b1ad
0x804b150:   55                              	push ebp
0x804b151:   57                              	push edi
0x804b152:   56                              	push esi
0x804b153:   53                              	push ebx
0x804b154:   e8 37 d2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b159:   81 c3 a7 2e 00 00               	add ebx, 0x2ea7
0x804b15f:   83 ec 0c                        	sub esp, 0xc
0x804b162:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b166:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b16c:   e8 5b d1 ff ff                  	call 0x80482cc <_init>
0x804b171:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b177:   29 c6                           	sub esi, eax
0x804b179:   c1 fe 02                        	sar esi, 2
0x804b17c:   85 f6                           	test esi, esi
0x804b17e:   74 25                           	je 0x804b1a5 <__libc_csu_init+0x55>
0x804b180:   31 ff                           	xor edi, edi
0x804b182:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b188:   83 ec 04                        	sub esp, 4
0x804b18b:   55                              	push ebp
0x804b18c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b190:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b194:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b19b:   83 c7 01                        	add edi, 1
0x804b19e:   83 c4 10                        	add esp, 0x10
0x804b1a1:   39 fe                           	cmp esi, edi
0x804b1a3:   75 e3                           	jne 0x804b188 <__libc_csu_init+0x38>
0x804b1a5:   83 c4 0c                        	add esp, 0xc
0x804b1a8:   5b                              	pop ebx
0x804b1a9:   5e                              	pop esi
0x804b1aa:   5f                              	pop edi
0x804b1ab:   5d                              	pop ebp
0x804b1ac:   c3                              	ret 
; data inside code section at 0x804b1ad -- 0x804b1b0
0x804b1ad:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b1b0 -- 0x804b1b2
0x804b1b0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b1b4 -- 0x804b1c8
0x804b1b4:   53                              	push ebx
0x804b1b5:   83 ec 08                        	sub esp, 8
0x804b1b8:   e8 d3 d1 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b1bd:   81 c3 43 2e 00 00               	add ebx, 0x2e43
0x804b1c3:   83 c4 08                        	add esp, 8
0x804b1c6:   5b                              	pop ebx
0x804b1c7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 cc b1 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b1c8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b1d8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b1e8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b1f8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b208:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b218:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b228:   31 00 67 5f 37 00 67 5f  31 32 00 67 5f 31 33 00   |1.g_7.g_12.g_13.|
0x804b238:   67 5f 31 34 00 67 5f 32  30 00 67 5f 32 37 00 67   |g_14.g_20.g_27.g|
0x804b248:   5f 33 34 00 67 5f 34 36  00 67 5f 37 31 00 67 5f   |_34.g_46.g_71.g_|
0x804b258:   37 32 00 67 5f 37 38 00  67 5f 37 39 00 67 5f 31   |72.g_78.g_79.g_1|
0x804b268:   37 32 00 67 5f 32 37 33  00 67 5f 32 37 34 00 67   |72.g_273.g_274.g|
0x804b278:   5f 33 37 34 00 67 5f 33  37 35 00 67 5f 33 37 38   |_374.g_375.g_378|
0x804b288:   00 67 5f 34 30 34 00 67  5f 34 31 31 00 67 5f 34   |.g_404.g_411.g_4|
0x804b298:   31 32 00 67 5f 34 31 33  00 67 5f 34 36 34 00 67   |12.g_413.g_464.g|
0x804b2a8:   5f 35 30 36 00 67 5f 35  30 39 00 67 5f 35 31 30   |_506.g_509.g_510|
0x804b2b8:   00 67 5f 35 31 31 00 67  5f 35 31 32 00 67 5f 35   |.g_511.g_512.g_5|
0x804b2c8:   31 36 00 67 5f 35 34 31  00 67 5f 35 37 38 00 00   |16.g_541.g_578..|
0x804b2d8:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804b2e8:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804b2f8:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804b308:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804b318:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804b328:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804b338:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804b340:   01 1b 03 3b b8 02 00 00  56 00 00 00 b0 cf ff ff   |...;....V.......|
0x804b350:   e8 02 00 00 f0 cf ff ff  0c 03 00 00 40 d0 ff ff   |............@...|
0x804b360:   d4 02 00 00 16 d1 ff ff  20 03 00 00 26 d1 ff ff   |........ ...&...|
0x804b370:   40 03 00 00 54 d1 ff ff  64 03 00 00 72 d1 ff ff   |@...T...d...r...|
0x804b380:   84 03 00 00 9a d1 ff ff  a4 03 00 00 c4 d1 ff ff   |................|
0x804b390:   c4 03 00 00 ed d1 ff ff  e4 03 00 00 30 d2 ff ff   |............0...|
0x804b3a0:   04 04 00 00 71 d2 ff ff  24 04 00 00 c9 d2 ff ff   |....q...$.......|
0x804b3b0:   48 04 00 00 1b d3 ff ff  6c 04 00 00 58 d3 ff ff   |H.......l...X...|
0x804b3c0:   8c 04 00 00 8f d3 ff ff  ac 04 00 00 ae d3 ff ff   |................|
0x804b3d0:   cc 04 00 00 d8 d3 ff ff  ec 04 00 00 04 d4 ff ff   |................|
0x804b3e0:   0c 05 00 00 2f d4 ff ff  2c 05 00 00 78 d4 ff ff   |..../...,...x...|
0x804b3f0:   4c 05 00 00 bf d4 ff ff  6c 05 00 00 19 d5 ff ff   |L.......l.......|
0x804b400:   90 05 00 00 6d d5 ff ff  b4 05 00 00 ac d5 ff ff   |....m...........|
0x804b410:   d4 05 00 00 e5 d5 ff ff  f4 05 00 00 07 d6 ff ff   |................|
0x804b420:   14 06 00 00 55 d6 ff ff  34 06 00 00 91 d6 ff ff   |....U...4.......|
0x804b430:   54 06 00 00 1a d7 ff ff  74 06 00 00 4c d7 ff ff   |T.......t...L...|
0x804b440:   94 06 00 00 7c d7 ff ff  b4 06 00 00 c1 d7 ff ff   |....|...........|
0x804b450:   d4 06 00 00 00 d8 ff ff  f4 06 00 00 32 d8 ff ff   |............2...|
0x804b460:   14 07 00 00 5e d8 ff ff  34 07 00 00 7c d8 ff ff   |....^...4...|...|
0x804b470:   54 07 00 00 a4 d8 ff ff  74 07 00 00 c9 d8 ff ff   |T.......t.......|
0x804b480:   94 07 00 00 ee d8 ff ff  b4 07 00 00 25 d9 ff ff   |............%...|
0x804b490:   d4 07 00 00 59 d9 ff ff  f4 07 00 00 ab d9 ff ff   |....Y...........|
0x804b4a0:   18 08 00 00 f7 d9 ff ff  3c 08 00 00 2e da ff ff   |........<.......|
0x804b4b0:   5c 08 00 00 5f da ff ff  7c 08 00 00 7e da ff ff   |\..._...|...~...|
0x804b4c0:   9c 08 00 00 a8 da ff ff  bc 08 00 00 d0 da ff ff   |................|
0x804b4d0:   dc 08 00 00 f9 da ff ff  fc 08 00 00 35 db ff ff   |............5...|
0x804b4e0:   1c 09 00 00 6f db ff ff  3c 09 00 00 c2 db ff ff   |....o...<.......|
0x804b4f0:   60 09 00 00 0f dc ff ff  84 09 00 00 47 dc ff ff   |`...........G...|
0x804b500:   a4 09 00 00 79 dc ff ff  c4 09 00 00 8d dc ff ff   |....y...........|
0x804b510:   e4 09 00 00 a4 dc ff ff  04 0a 00 00 b9 dc ff ff   |................|
0x804b520:   24 0a 00 00 cf dc ff ff  44 0a 00 00 f6 dc ff ff   |$.......D.......|
0x804b530:   64 0a 00 00 1b dd ff ff  84 0a 00 00 5a dd ff ff   |d...........Z...|
0x804b540:   a4 0a 00 00 93 dd ff ff  c4 0a 00 00 bf dd ff ff   |................|
0x804b550:   e4 0a 00 00 e5 dd ff ff  04 0b 00 00 27 de ff ff   |............'...|
0x804b560:   24 0b 00 00 69 de ff ff  44 0b 00 00 ab de ff ff   |$...i...D.......|
0x804b570:   64 0b 00 00 20 df ff ff  84 0b 00 00 7d df ff ff   |d... .......}...|
0x804b580:   a4 0b 00 00 da df ff ff  c4 0b 00 00 37 e0 ff ff   |............7...|
0x804b590:   e4 0b 00 00 c7 e0 ff ff  04 0c 00 00 2b e1 ff ff   |............+...|
0x804b5a0:   24 0c 00 00 9b e1 ff ff  44 0c 00 00 e2 e1 ff ff   |$.......D.......|
0x804b5b0:   68 0c 00 00 37 e2 ff ff  88 0c 00 00 7e e2 ff ff   |h...7.......~...|
0x804b5c0:   ac 0c 00 00 e6 e2 ff ff  d0 0c 00 00 4b e5 ff ff   |............K...|
0x804b5d0:   00 0d 00 00 cb f9 ff ff  30 0d 00 00 07 fe ff ff   |........0.......|
0x804b5e0:   68 0d 00 00 0b fe ff ff  7c 0d 00 00 10 fe ff ff   |h.......|.......|
0x804b5f0:   90 0d 00 00 70 fe ff ff  dc 0d 00 00 14            |....p........   |
; section: .eh_frame
0x804b5fc:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b60c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b61c:   64 cd ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |d........... ...|
0x804b62c:   30 00 00 00 c0 cc ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b63c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b64c:   10 00 00 00 54 00 00 00  dc cc ff ff 08 00 00 00   |....T...........|
0x804b65c:   00 00 00 00 1c 00 00 00  68 00 00 00 ee cd ff ff   |........h.......|
0x804b66c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b67c:   04 04 00 00 20 00 00 00  88 00 00 00 de cd ff ff   |.... ...........|
0x804b68c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b69c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b6ac:   e8 cd ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b6bc:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b6cc:   e6 cd ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b6dc:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b6ec:   ee cd ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b6fc:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b70c:   f8 cd ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b71c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b72c:   01 ce ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b73c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b74c:   24 ce ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |$...A....A....B.|
0x804b75c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b76c:   45 ce ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |E...X....A....B.|
0x804b77c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b78c:   90 01 00 00 79 ce ff ff  52 00 00 00 00 41 0e 08   |....y...R....A..|
0x804b79c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b7ac:   1c 00 00 00 b4 01 00 00  a7 ce ff ff 3d 00 00 00   |............=...|
0x804b7bc:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b7cc:   1c 00 00 00 d4 01 00 00  c4 ce ff ff 37 00 00 00   |............7...|
0x804b7dc:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b7ec:   1c 00 00 00 f4 01 00 00  db ce ff ff 1f 00 00 00   |................|
0x804b7fc:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b80c:   1c 00 00 00 14 02 00 00  da ce ff ff 2a 00 00 00   |............*...|
0x804b81c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b82c:   1c 00 00 00 34 02 00 00  e4 ce ff ff 2c 00 00 00   |....4.......,...|
0x804b83c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b84c:   1c 00 00 00 54 02 00 00  f0 ce ff ff 2b 00 00 00   |....T.......+...|
0x804b85c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b86c:   1c 00 00 00 74 02 00 00  fb ce ff ff 49 00 00 00   |....t.......I...|
0x804b87c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b88c:   1c 00 00 00 94 02 00 00  24 cf ff ff 47 00 00 00   |........$...G...|
0x804b89c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b8ac:   20 00 00 00 b4 02 00 00  4b cf ff ff 5a 00 00 00   | .......K...Z...|
0x804b8bc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b8cc:   c5 0c 04 04 20 00 00 00  d8 02 00 00 81 cf ff ff   |.... ...........|
0x804b8dc:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b8ec:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b8fc:   b1 cf ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b90c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b91c:   d0 cf ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b92c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b93c:   e9 cf ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b94c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b95c:   eb cf ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b96c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b97c:   19 d0 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b98c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b99c:   35 d0 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |5........A....B.|
0x804b9ac:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b9bc:   9e d0 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b9cc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b9dc:   b0 d0 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b9ec:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b9fc:   c0 d0 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804ba0c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804ba1c:   e5 d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804ba2c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804ba3c:   04 d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804ba4c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804ba5c:   16 d1 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804ba6c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804ba7c:   22 d1 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |"........A....B.|
0x804ba8c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804ba9c:   20 d1 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   | ...(....A....B.|
0x804baac:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804babc:   28 d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |(...%....A....B.|
0x804bacc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804badc:   2d d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |-...%....A....B.|
0x804baec:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804bafc:   32 d1 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |2...7....A....B.|
0x804bb0c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804bb1c:   49 d1 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |I...4....A....B.|
0x804bb2c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804bb3c:   5d d1 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |]...R....A....B.|
0x804bb4c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804bb5c:   60 05 00 00 8b d1 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804bb6c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804bb7c:   1c 00 00 00 84 05 00 00  b3 d1 ff ff 37 00 00 00   |............7...|
0x804bb8c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bb9c:   1c 00 00 00 a4 05 00 00  ca d1 ff ff 31 00 00 00   |............1...|
0x804bbac:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bbbc:   1c 00 00 00 c4 05 00 00  db d1 ff ff 1f 00 00 00   |................|
0x804bbcc:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bbdc:   1c 00 00 00 e4 05 00 00  da d1 ff ff 2a 00 00 00   |............*...|
0x804bbec:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bbfc:   1c 00 00 00 04 06 00 00  e4 d1 ff ff 28 00 00 00   |............(...|
0x804bc0c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bc1c:   1c 00 00 00 24 06 00 00  ec d1 ff ff 29 00 00 00   |....$.......)...|
0x804bc2c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bc3c:   1c 00 00 00 44 06 00 00  f5 d1 ff ff 3c 00 00 00   |....D.......<...|
0x804bc4c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bc5c:   1c 00 00 00 64 06 00 00  11 d2 ff ff 3a 00 00 00   |....d.......:...|
0x804bc6c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bc7c:   20 00 00 00 84 06 00 00  2b d2 ff ff 53 00 00 00   | .......+...S...|
0x804bc8c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bc9c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 5a d2 ff ff   |.... .......Z...|
0x804bcac:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bcbc:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bccc:   83 d2 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804bcdc:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bcec:   9b d2 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bcfc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bd0c:   ad d2 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bd1c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bd2c:   a1 d2 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bd3c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bd4c:   98 d2 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bd5c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bd6c:   8d d2 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bd7c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bd8c:   83 d2 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804bd9c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bdac:   8a d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bdbc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bdcc:   8f d2 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804bddc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bdec:   ae d2 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bdfc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804be0c:   c7 d2 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804be1c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804be2c:   d3 d2 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804be3c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804be4c:   d9 d2 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804be5c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804be6c:   fb d2 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804be7c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804be8c:   1d d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804be9c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804beac:   3f d3 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |?...u....A....B.|
0x804bebc:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804becc:   94 d3 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bedc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804beec:   d1 d3 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804befc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bf0c:   0e d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bf1c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bf2c:   4b d4 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |K........A....B.|
0x804bf3c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804bf4c:   bb d4 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804bf5c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bf6c:   ff d4 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804bf7c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bf8c:   4f d5 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |O...G....A....B.|
0x804bf9c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bfac:   b0 09 00 00 72 d5 ff ff  55 00 00 00 00 41 0e 08   |....r...U....A..|
0x804bfbc:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bfcc:   d0 09 00 00 a7 d5 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804bfdc:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bfec:   20 00 00 00 f4 09 00 00  ca d5 ff ff 68 00 00 00   | ...........h...|
0x804bffc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804c00c:   0c 04 04 00 2c 00 00 00  18 0a 00 00 0e d6 ff ff   |....,...........|
0x804c01c:   65 02 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |e....A....B..I..|
0x804c02c:   86 04 83 05 03 55 02 c3  41 c6 41 c7 41 c5 0c 04   |.....U..A.A.A...|
0x804c03c:   04 00 00 00 2c 00 00 00  48 0a 00 00 43 d8 ff ff   |....,...H...C...|
0x804c04c:   80 14 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804c05c:   86 04 83 05 03 70 14 c3  41 c6 41 c7 41 c5 0c 04   |.....p..A.A.A...|
0x804c06c:   04 00 00 00 34 00 00 00  78 0a 00 00 93 ec ff ff   |....4...x.......|
0x804c07c:   3c 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |<....D...G...u.D|
0x804c08c:   0f 03 75 78 06 10 03 02  75 7c 03 27 04 c1 0c 01   |..ux....u|.'....|
0x804c09c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804c0ac:   b0 0a 00 00 97 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804c0bc:   10 00 00 00 c4 0a 00 00  87 f0 ff ff 04 00 00 00   |................|
0x804c0cc:   00 00 00 00 48 00 00 00  d8 0a 00 00 78 f0 ff ff   |....H.......x...|
0x804c0dc:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c0ec:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c0fc:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c10c:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c11c:   10 00 00 00 24 0b 00 00  8c f0 ff ff 02 00 00 00   |....$...........|
0x804c12c:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 b4 b1 04 08  19 00 00 00 0c df 04 08   |................|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 1e 2a 01 b0   |.............*..|
0x804e028:   01 ca ff ff 09 00 00 00  d3 ab b6 7b c0 17 0a 93   |...........{....|
0x804e038:   dc e7 b9 25 3d 05 69 dd  43 70 e6 e8 ae e2 fb ff   |...%=.i.Cp......|
0x804e048:   f6 ff ff ff c6 00 00 00  e5 91 6a 8b ff 00 4c c5   |..........j...L.|
0x804e058:   01 00 fb ff 61 4f 00 00  ff ff ff ff a5 00 00 00   |....aO..........|
0x804e068:   ff ff ff ff ff ff ff ff  4a 00 00 00 bb 3f 8f 2e   |........J....?..|
0x804e078:   16 00 00 00 e2 e5 be 3f  00                        |.......?.       |
