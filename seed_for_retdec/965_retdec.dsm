;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 10:21:05
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 90 de ff ff               	lea eax, [ebx - 0x2170]
0x804835c:   50                              	push eax
0x804835d:   8d 83 30 de ff ff               	lea eax, [ebx - 0x21d0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 1b ab 04 08               	mov eax, 0x804ab1b
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 60 d0 04 08                  	mov eax, 0x804d060
0x80483a5:   3d 60 d0 04 08                  	cmp eax, 0x804d060
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 60 d0 04 08                  	push 0x804d060
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 60 d0 04 08                  	mov eax, 0x804d060
0x80483e5:   2d 60 d0 04 08                  	sub eax, 0x804d060
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 60 d0 04 08                  	push 0x804d060
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 60 d0 04 08 00            	cmp byte ptr [0x804d060], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 60 d0 04 08 01            	mov byte ptr [0x804d060], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 bb 29 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 a7 29 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 b0 de ff ff               	lea edx, [eax - 0x2150]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 7a 29 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 5c 29 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 34 29 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 0a 29 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 e1 28 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 9e 28 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 5c 28 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 04 28 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 b3 27 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 76 27 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 3f 27 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 20 27 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 f6 26 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 ca 26 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 9f 26 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 56 26 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 0e 26 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 b4 25 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 61 25 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 22 25 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 ec 24 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 ca 24 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 7c 24 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 40 24 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 b7 23 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 85 23 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 55 23 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 10 23 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 d1 22 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 9f 22 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 70 22 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 52 22 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 2a 22 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 05 22 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 e0 21 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 a9 21 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 74 21 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 22 21 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 d7 20 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 a0 20 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 6f 20 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 50 20 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 26 20 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 fe 1f 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 d5 1f 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 99 1f 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 5e 1f 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 0b 1f 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 bf 1e 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 87 1e 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 58 1e 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 44 1e 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 2d 1e 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 18 1e 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 02 1e 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 db 1d 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 b6 1d 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 77 1d 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 3e 1d 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 12 1d 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 ec 1c 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 84 df ff ff               	fld dword ptr [eax - 0x207c]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 84 df ff ff               	fld dword ptr [eax - 0x207c]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 88 df ff ff               	fld dword ptr [eax - 0x2078]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 aa 1c 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 84 df ff ff               	fld dword ptr [eax - 0x207c]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 84 df ff ff               	fld dword ptr [eax - 0x207c]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 88 df ff ff               	fld dword ptr [eax - 0x2078]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 68 1c 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 8c df ff ff               	fld dword ptr [eax - 0x2074]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 90 df ff ff               	fld dword ptr [eax - 0x2070]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 94 df ff ff               	fld dword ptr [eax - 0x206c]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 26 1c 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 98 df ff ff               	fld dword ptr [eax - 0x2068]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 9c df ff ff               	fld dword ptr [eax - 0x2064]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 a0 df ff ff               	fld dword ptr [eax - 0x2060]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 ae 1b 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 a8 df ff ff               	fld qword ptr [eax - 0x2058]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 a8 df ff ff               	fld qword ptr [eax - 0x2058]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 b0 df ff ff               	fld qword ptr [eax - 0x2050]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 51 1b 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 a8 df ff ff               	fld qword ptr [eax - 0x2058]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 a8 df ff ff               	fld qword ptr [eax - 0x2058]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 b0 df ff ff               	fld qword ptr [eax - 0x2050]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 f4 1a 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 b8 df ff ff               	fld qword ptr [eax - 0x2048]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 c0 df ff ff               	fld qword ptr [eax - 0x2040]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 c8 df ff ff               	fld qword ptr [eax - 0x2038]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 97 1a 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 d0 df ff ff               	fld qword ptr [eax - 0x2030]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 d8 df ff ff               	fld qword ptr [eax - 0x2028]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 e0 df ff ff               	fld qword ptr [eax - 0x2020]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 07 1a 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 e8 df ff ff               	fld dword ptr [eax - 0x2018]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 ec df ff ff               	fld dword ptr [eax - 0x2014]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 a3 19 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 80 00 00 00            	mov dword ptr [eax + edx*4 + 0x80], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 32 19 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 80 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0x80]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 ef 18 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 c0 de ff ff               	lea eax, [ebx - 0x2140]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 e4 de ff ff               	lea eax, [ebx - 0x211c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: packed_printf at 0x8049626 -- 0x8049654
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   53                              	push ebx
0x804962a:   83 ec 04                        	sub esp, 4
0x804962d:   e8 e7 17 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x8049632:   05 ce 39 00 00                  	add eax, 0x39ce
0x8049637:   83 ec 08                        	sub esp, 8
0x804963a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804963d:   8d 90 09 df ff ff               	lea edx, [eax - 0x20f7]
0x8049643:   52                              	push edx
0x8049644:   89 c3                           	mov ebx, eax
0x8049646:   e8 c5 ec ff ff                  	call 0x8048310 <printf>
0x804964b:   83 c4 10                        	add esp, 0x10
0x804964e:   90                              	nop 
0x804964f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049652:   c9                              	leave 
0x8049653:   c3                              	ret 
; function: set_var at 0x8049654 -- 0x80497a4
0x8049654:   55                              	push ebp
0x8049655:   89 e5                           	mov ebp, esp
0x8049657:   57                              	push edi
0x8049658:   56                              	push esi
0x8049659:   53                              	push ebx
0x804965a:   83 ec 3c                        	sub esp, 0x3c
0x804965d:   e8 bb 17 00 00                  	call 0x804ae1d <__x86.get_pc_thunk.dx>
0x8049662:   81 c2 9e 39 00 00               	add edx, 0x399e
0x8049668:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x804966b:   8b 4d 14                        	mov ecx, dword ptr [ebp + 0x14]
0x804966e:   8b 5d 1c                        	mov ebx, dword ptr [ebp + 0x1c]
0x8049671:   8b 75 20                        	mov esi, dword ptr [ebp + 0x20]
0x8049674:   89 75 c8                        	mov dword ptr [ebp - 0x38], esi
0x8049677:   8b 7d 28                        	mov edi, dword ptr [ebp + 0x28]
0x804967a:   89 7d c4                        	mov dword ptr [ebp - 0x3c], edi
0x804967d:   8b 75 3c                        	mov esi, dword ptr [ebp + 0x3c]
0x8049680:   89 75 c0                        	mov dword ptr [ebp - 0x40], esi
0x8049683:   8b 7d 44                        	mov edi, dword ptr [ebp + 0x44]
0x8049686:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x8049689:   8b 75 48                        	mov esi, dword ptr [ebp + 0x48]
0x804968c:   89 75 b8                        	mov dword ptr [ebp - 0x48], esi
0x804968f:   8b 7d 4c                        	mov edi, dword ptr [ebp + 0x4c]
0x8049692:   8b 75 50                        	mov esi, dword ptr [ebp + 0x50]
0x8049695:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x8049699:   89 c8                           	mov eax, ecx
0x804969b:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x804969e:   89 d8                           	mov eax, ebx
0x80496a0:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x80496a4:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80496a8:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496ab:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x80496af:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x80496b2:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x80496b6:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496b9:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x80496bd:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496c1:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x80496c5:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496c9:   89 f8                           	mov eax, edi
0x80496cb:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496ce:   89 f0                           	mov eax, esi
0x80496d0:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496d4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80496d7:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x80496dd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80496e0:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x80496e6:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x80496ea:   66 89 82 2c 00 00 00            	mov word ptr [edx + 0x2c], ax
0x80496f1:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x80496f5:   88 82 2e 00 00 00               	mov byte ptr [edx + 0x2e], al
0x80496fb:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x80496fe:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x8049704:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049708:   66 89 82 34 00 00 00            	mov word ptr [edx + 0x34], ax
0x804970f:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x8049713:   88 82 36 00 00 00               	mov byte ptr [edx + 0x36], al
0x8049719:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x804971c:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x8049722:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049726:   88 82 3c 00 00 00               	mov byte ptr [edx + 0x3c], al
0x804972c:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x804972f:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x8049735:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049738:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x804973e:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x8049741:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x8049747:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x804974a:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x8049750:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x8049754:   88 82 50 00 00 00               	mov byte ptr [edx + 0x50], al
0x804975a:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x804975d:   89 82 84 04 00 00               	mov dword ptr [edx + 0x484], eax
0x8049763:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x8049767:   66 89 82 52 00 00 00            	mov word ptr [edx + 0x52], ax
0x804976e:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x8049772:   66 89 82 54 00 00 00            	mov word ptr [edx + 0x54], ax
0x8049779:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x804977d:   88 82 56 00 00 00               	mov byte ptr [edx + 0x56], al
0x8049783:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x8049787:   66 89 82 58 00 00 00            	mov word ptr [edx + 0x58], ax
0x804978e:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049791:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x8049797:   b8 00 00 00 00                  	mov eax, 0
0x804979c:   83 c4 3c                        	add esp, 0x3c
0x804979f:   5b                              	pop ebx
0x80497a0:   5e                              	pop esi
0x80497a1:   5f                              	pop edi
0x80497a2:   5d                              	pop ebp
0x80497a3:   c3                              	ret 
; function: func_1 at 0x80497a4 -- 0x804ab1b
0x80497a4:   55                              	push ebp
0x80497a5:   89 e5                           	mov ebp, esp
0x80497a7:   57                              	push edi
0x80497a8:   56                              	push esi
0x80497a9:   53                              	push ebx
0x80497aa:   81 ec 60 01 00 00               	sub esp, 0x160
0x80497b0:   e8 64 16 00 00                  	call 0x804ae19 <__x86.get_pc_thunk.ax>
0x80497b5:   05 4b 38 00 00                  	add eax, 0x384b
0x80497ba:   c7 45 f0 02 00 00 00            	mov dword ptr [ebp - 0x10], 2
0x80497c1:   c7 45 ec 3d a4 42 1e            	mov dword ptr [ebp - 0x14], 0x1e42a43d
0x80497c8:   66 c7 45 ea 52 53               	mov word ptr [ebp - 0x16], 0x5352
0x80497ce:   c6 45 e9 67                     	mov byte ptr [ebp - 0x17], 0x67
0x80497d2:   c7 45 e4 47 f7 22 fc            	mov dword ptr [ebp - 0x1c], 0xfc22f747
0x80497d9:   66 c7 45 e2 fc ff               	mov word ptr [ebp - 0x1e], 0xfffc
0x80497df:   c6 45 e1 c2                     	mov byte ptr [ebp - 0x1f], 0xc2
0x80497e3:   c7 45 dc fe ff ff ff            	mov dword ptr [ebp - 0x24], 0xfffffffe
0x80497ea:   c6 45 db 09                     	mov byte ptr [ebp - 0x25], 9
0x80497ee:   c7 45 d4 09 db ad f6            	mov dword ptr [ebp - 0x2c], 0xf6addb09
0x80497f5:   c7 45 d0 4e b4 bb 12            	mov dword ptr [ebp - 0x30], 0x12bbb44e
0x80497fc:   c7 45 cc ff ff ff ff            	mov dword ptr [ebp - 0x34], 0xffffffff
0x8049803:   c7 45 c8 15 1b 92 68            	mov dword ptr [ebp - 0x38], 0x68921b15
0x804980a:   c6 45 c7 c7                     	mov byte ptr [ebp - 0x39], 0xc7
0x804980e:   c6 85 7e ff ff ff 03            	mov byte ptr [ebp - 0x82], 3
0x8049815:   c7 45 c0 00 00 00 00            	mov dword ptr [ebp - 0x40], 0
0x804981c:   66 c7 45 be a0 a2               	mov word ptr [ebp - 0x42], 0xa2a0
0x8049822:   66 c7 85 7c ff ff ff 54 86      	mov word ptr [ebp - 0x84], 0x8654
0x804982b:   c6 45 bd 2c                     	mov byte ptr [ebp - 0x43], 0x2c
0x804982f:   66 c7 45 ba 23 13               	mov word ptr [ebp - 0x46], 0x1323
0x8049835:   c7 45 b4 92 4b 91 92            	mov dword ptr [ebp - 0x4c], 0x92914b92
0x804983c:   c7 45 b0 00 00 00 00            	mov dword ptr [ebp - 0x50], 0
0x8049843:   c6 85 7b ff ff ff 9f            	mov byte ptr [ebp - 0x85], 0x9f
0x804984a:   c7 45 ac ff ff ff ff            	mov dword ptr [ebp - 0x54], 0xffffffff
0x8049851:   c6 45 ab c8                     	mov byte ptr [ebp - 0x55], 0xc8
0x8049855:   c6 45 aa f9                     	mov byte ptr [ebp - 0x56], 0xf9
0x8049859:   c7 45 a4 3f 80 20 a0            	mov dword ptr [ebp - 0x5c], 0xa020803f
0x8049860:   c7 45 a0 c4 92 50 b6            	mov dword ptr [ebp - 0x60], 0xb65092c4
0x8049867:   c7 45 9c 77 1b 2f 31            	mov dword ptr [ebp - 0x64], 0x312f1b77
0x804986e:   c7 85 74 ff ff ff cc ea 70 0e   	mov dword ptr [ebp - 0x8c], 0xe70eacc
0x8049878:   66 c7 45 9a fc ff               	mov word ptr [ebp - 0x66], 0xfffc
0x804987e:   66 c7 85 72 ff ff ff 8b 2b      	mov word ptr [ebp - 0x8e], 0x2b8b
0x8049887:   c6 85 71 ff ff ff fe            	mov byte ptr [ebp - 0x8f], 0xfe
0x804988e:   c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x8049895:   e9 b5 01 00 00                  	jmp 0x8049a4f <func_1+0x2ab>
0x804989a:   c6 45 99 07                     	mov byte ptr [ebp - 0x67], 7
0x804989e:   c7 85 6c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x94], 0
0x80498a8:   83 65 ec 09                     	and dword ptr [ebp - 0x14], 9
0x80498ac:   0f b6 45 99                     	movzx eax, byte ptr [ebp - 0x67]
0x80498b0:   c0 e8 07                        	shr al, 7
0x80498b3:   0f b6 c0                        	movzx eax, al
0x80498b6:   0f af 45 ec                     	imul eax, dword ptr [ebp - 0x14]
0x80498ba:   09 45 b0                        	or dword ptr [ebp - 0x50], eax
0x80498bd:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x80498c1:   0f 85 94 01 00 00               	jne 0x8049a5b <func_1+0x2b7>
0x80498c7:   c6 45 99 00                     	mov byte ptr [ebp - 0x67], 0
0x80498cb:   e9 71 01 00 00                  	jmp 0x8049a41 <func_1+0x29d>
0x80498d0:   c7 85 68 ff ff ff 79 3a e3 46   	mov dword ptr [ebp - 0x98], 0x46e33a79
0x80498da:   c7 85 64 ff ff ff e5 18 67 a5   	mov dword ptr [ebp - 0x9c], 0xa56718e5
0x80498e4:   c7 85 60 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xa0], 1
0x80498ee:   0f b6 95 7b ff ff ff            	movzx edx, byte ptr [ebp - 0x85]
0x80498f5:   0f b6 45 99                     	movzx eax, byte ptr [ebp - 0x67]
0x80498f9:   c1 e0 02                        	shl eax, 2
0x80498fc:   0f b6 c0                        	movzx eax, al
0x80498ff:   89 c1                           	mov ecx, eax
0x8049901:   d3 fa                           	sar edx, cl
0x8049903:   89 d0                           	mov eax, edx
0x8049905:   0b 85 68 ff ff ff               	or eax, dword ptr [ebp - 0x98]
0x804990b:   83 f0 fc                        	xor eax, 0xfffffffc
0x804990e:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x8049914:   66 0f be 45 99                  	movsx ax, byte ptr [ebp - 0x67]
0x8049919:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x804991d:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049921:   33 85 64 ff ff ff               	xor eax, dword ptr [ebp - 0x9c]
0x8049927:   f7 d8                           	neg eax
0x8049929:   09 45 ac                        	or dword ptr [ebp - 0x54], eax
0x804992c:   81 7d f0 88 d3 00 00            	cmp dword ptr [ebp - 0x10], 0xd388
0x8049933:   0f 9f c0                        	setg al
0x8049936:   0f b6 c0                        	movzx eax, al
0x8049939:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x804993f:   c6 45 e9 00                     	mov byte ptr [ebp - 0x17], 0
0x8049943:   0f be 5d 99                     	movsx ebx, byte ptr [ebp - 0x67]
0x8049947:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804994d:   c0 f8 02                        	sar al, 2
0x8049950:   66 98                           	cbw 
0x8049952:   0f b7 c0                        	movzx eax, ax
0x8049955:   83 e8 09                        	sub eax, 9
0x8049958:   99                              	cdq 
0x8049959:   f7 bd 6c ff ff ff               	idiv dword ptr [ebp - 0x94]
0x804995f:   0f bf d0                        	movsx edx, ax
0x8049962:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049965:   98                              	cwde 
0x8049966:   89 c1                           	mov ecx, eax
0x8049968:   d3 fa                           	sar edx, cl
0x804996a:   0f be 45 99                     	movsx eax, byte ptr [ebp - 0x67]
0x804996e:   39 c2                           	cmp edx, eax
0x8049970:   0f 94 c0                        	sete al
0x8049973:   0f b6 c0                        	movzx eax, al
0x8049976:   89 c1                           	mov ecx, eax
0x8049978:   d3 e3                           	shl ebx, cl
0x804997a:   89 d8                           	mov eax, ebx
0x804997c:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804997f:   0f 9d c0                        	setge al
0x8049982:   0f b6 c0                        	movzx eax, al
0x8049985:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049988:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804998b:   ba 00 00 00 00                  	mov edx, 0
0x8049990:   f7 b5 60 ff ff ff               	div dword ptr [ebp - 0xa0]
0x8049996:   89 d0                           	mov eax, edx
0x8049998:   0f b6 c0                        	movzx eax, al
0x804999b:   f6 b5 7b ff ff ff               	div byte ptr [ebp - 0x85]
0x80499a1:   0f b6 c4                        	movzx eax, ah
0x80499a4:   0f b6 d0                        	movzx edx, al
0x80499a7:   0f be 45 ab                     	movsx eax, byte ptr [ebp - 0x55]
0x80499ab:   39 c2                           	cmp edx, eax
0x80499ad:   0f 9f c0                        	setg al
0x80499b0:   0f b6 c0                        	movzx eax, al
0x80499b3:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x80499b7:   66 83 7d ea 00                  	cmp word ptr [ebp - 0x16], 0
0x80499bc:   74 0d                           	je 0x80499cb <func_1+0x227>
0x80499be:   80 7d e9 00                     	cmp byte ptr [ebp - 0x17], 0
0x80499c2:   74 07                           	je 0x80499cb <func_1+0x227>
0x80499c4:   b8 01 00 00 00                  	mov eax, 1
0x80499c9:   eb 05                           	jmp 0x80499d0 <func_1+0x22c>
0x80499cb:   b8 00 00 00 00                  	mov eax, 0
0x80499d0:   3d ff 9e 90 2a                  	cmp eax, 0x2a909eff
0x80499d5:   0f 9e c0                        	setle al
0x80499d8:   0f b6 c0                        	movzx eax, al
0x80499db:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x80499de:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x80499e1:   89 c2                           	mov edx, eax
0x80499e3:   0f b6 45 ab                     	movzx eax, byte ptr [ebp - 0x55]
0x80499e7:   31 d0                           	xor eax, edx
0x80499e9:   83 f0 69                        	xor eax, 0x69
0x80499ec:   88 45 e9                        	mov byte ptr [ebp - 0x17], al
0x80499ef:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x80499f3:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x80499f6:   0f 95 c0                        	setne al
0x80499f9:   f7 d8                           	neg eax
0x80499fb:   66 0f be d0                     	movsx dx, al
0x80499ff:   0f b6 85 7b ff ff ff            	movzx eax, byte ptr [ebp - 0x85]
0x8049a06:   66 98                           	cbw 
0x8049a08:   0f af c2                        	imul eax, edx
0x8049a0b:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x8049a0f:   66 83 7d e2 00                  	cmp word ptr [ebp - 0x1e], 0
0x8049a14:   74 0d                           	je 0x8049a23 <func_1+0x27f>
0x8049a16:   80 7d e9 00                     	cmp byte ptr [ebp - 0x17], 0
0x8049a1a:   74 07                           	je 0x8049a23 <func_1+0x27f>
0x8049a1c:   b8 01 00 00 00                  	mov eax, 1
0x8049a21:   eb 05                           	jmp 0x8049a28 <func_1+0x284>
0x8049a23:   b8 00 00 00 00                  	mov eax, 0
0x8049a28:   39 85 60 ff ff ff               	cmp dword ptr [ebp - 0xa0], eax
0x8049a2e:   0f 96 c0                        	setbe al
0x8049a31:   0f b6 c0                        	movzx eax, al
0x8049a34:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049a37:   0f b6 45 99                     	movzx eax, byte ptr [ebp - 0x67]
0x8049a3b:   83 e8 01                        	sub eax, 1
0x8049a3e:   88 45 99                        	mov byte ptr [ebp - 0x67], al
0x8049a41:   80 7d 99 ef                     	cmp byte ptr [ebp - 0x67], 0xef
0x8049a45:   0f 8c 85 fe ff ff               	jl 0x80498d0 <func_1+0x12c>
0x8049a4b:   83 45 f0 01                     	add dword ptr [ebp - 0x10], 1
0x8049a4f:   83 7d f0 19                     	cmp dword ptr [ebp - 0x10], 0x19
0x8049a53:   0f 8e 41 fe ff ff               	jle 0x804989a <func_1+0xf6>
0x8049a59:   eb 01                           	jmp 0x8049a5c <func_1+0x2b8>
0x8049a5b:   90                              	nop 
0x8049a5c:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049a5f:   23 45 b0                        	and eax, dword ptr [ebp - 0x50]
0x8049a62:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049a65:   c6 45 e9 ea                     	mov byte ptr [ebp - 0x17], 0xea
0x8049a69:   e9 e0 0d 00 00                  	jmp 0x804a84e <func_1+0x10aa>
0x8049a6e:   c7 45 94 09 58 81 5a            	mov dword ptr [ebp - 0x6c], 0x5a815809
0x8049a75:   c7 85 5c ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xa4], 0xfffffff6
0x8049a7f:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x8049a86:   c7 45 8c 07 00 00 00            	mov dword ptr [ebp - 0x74], 7
0x8049a8d:   c7 45 88 ac 03 ec ba            	mov dword ptr [ebp - 0x78], 0xbaec03ac
0x8049a94:   66 c7 85 5a ff ff ff 3a 20      	mov word ptr [ebp - 0xa6], 0x203a
0x8049a9d:   66 c7 85 58 ff ff ff 00 00      	mov word ptr [ebp - 0xa8], 0
0x8049aa6:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x8049aaa:   0f be c0                        	movsx eax, al
0x8049aad:   8b 55 94                        	mov edx, dword ptr [ebp - 0x6c]
0x8049ab0:   0f be ca                        	movsx ecx, dl
0x8049ab3:   99                              	cdq 
0x8049ab4:   f7 f9                           	idiv ecx
0x8049ab6:   89 d0                           	mov eax, edx
0x8049ab8:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049abb:   b8 fe ff ff ff                  	mov eax, 0xfffffffe
0x8049ac0:   2b 45 ec                        	sub eax, dword ptr [ebp - 0x14]
0x8049ac3:   39 45 94                        	cmp dword ptr [ebp - 0x6c], eax
0x8049ac6:   0f 96 c0                        	setbe al
0x8049ac9:   0f b6 c0                        	movzx eax, al
0x8049acc:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049acf:   c7 45 94 00 00 00 00            	mov dword ptr [ebp - 0x6c], 0
0x8049ad6:   e9 99 05 00 00                  	jmp 0x804a074 <func_1+0x8d0>
0x8049adb:   c6 85 57 ff ff ff 02            	mov byte ptr [ebp - 0xa9], 2
0x8049ae2:   c6 85 56 ff ff ff 05            	mov byte ptr [ebp - 0xaa], 5
0x8049ae9:   c7 85 50 ff ff ff f2 71 26 46   	mov dword ptr [ebp - 0xb0], 0x462671f2
0x8049af3:   c7 85 4c ff ff ff 04 00 00 00   	mov dword ptr [ebp - 0xb4], 4
0x8049afd:   80 7d ab 00                     	cmp byte ptr [ebp - 0x55], 0
0x8049b01:   74 22                           	je 0x8049b25 <func_1+0x381>
0x8049b03:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049b06:   0f b7 d0                        	movzx edx, ax
0x8049b09:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049b0c:   0f b7 c0                        	movzx eax, ax
0x8049b0f:   89 c1                           	mov ecx, eax
0x8049b11:   d3 fa                           	sar edx, cl
0x8049b13:   89 d0                           	mov eax, edx
0x8049b15:   85 c0                           	test eax, eax
0x8049b17:   74 06                           	je 0x8049b1f <func_1+0x37b>
0x8049b19:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049b1d:   75 13                           	jne 0x8049b32 <func_1+0x38e>
0x8049b1f:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x8049b23:   75 0d                           	jne 0x8049b32 <func_1+0x38e>
0x8049b25:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x8049b29:   75 07                           	jne 0x8049b32 <func_1+0x38e>
0x8049b2b:   66 83 7d ea 00                  	cmp word ptr [ebp - 0x16], 0
0x8049b30:   74 07                           	je 0x8049b39 <func_1+0x395>
0x8049b32:   b8 01 00 00 00                  	mov eax, 1
0x8049b37:   eb 05                           	jmp 0x8049b3e <func_1+0x39a>
0x8049b39:   b8 00 00 00 00                  	mov eax, 0
0x8049b3e:   3b 45 ac                        	cmp eax, dword ptr [ebp - 0x54]
0x8049b41:   0f 9d c0                        	setge al
0x8049b44:   88 85 57 ff ff ff               	mov byte ptr [ebp - 0xa9], al
0x8049b4a:   c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x8049b51:   e9 c8 00 00 00                  	jmp 0x8049c1e <func_1+0x47a>
0x8049b56:   c7 85 30 ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0xd0], 6
0x8049b60:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049b63:   3b 85 5c ff ff ff               	cmp eax, dword ptr [ebp - 0xa4]
0x8049b69:   0f 97 c0                        	seta al
0x8049b6c:   89 c2                           	mov edx, eax
0x8049b6e:   0f b6 45 e1                     	movzx eax, byte ptr [ebp - 0x1f]
0x8049b72:   31 d0                           	xor eax, edx
0x8049b74:   88 45 e1                        	mov byte ptr [ebp - 0x1f], al
0x8049b77:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x8049b7e:   83 7d ec 08                     	cmp dword ptr [ebp - 0x14], 8
0x8049b82:   0f 86 92 00 00 00               	jbe 0x8049c1a <func_1+0x476>
0x8049b88:   0f bf 55 ba                     	movsx edx, word ptr [ebp - 0x46]
0x8049b8c:   0f b6 5d bd                     	movzx ebx, byte ptr [ebp - 0x43]
0x8049b90:   0f bf bd 7c ff ff ff            	movsx edi, word ptr [ebp - 0x84]
0x8049b97:   0f bf 45 be                     	movsx eax, word ptr [ebp - 0x42]
0x8049b9b:   89 85 a0 fe ff ff               	mov dword ptr [ebp - 0x160], eax
0x8049ba1:   0f b6 75 c7                     	movzx esi, byte ptr [ebp - 0x39]
0x8049ba5:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x8049bab:   0f be 4d db                     	movsx ecx, byte ptr [ebp - 0x25]
0x8049baf:   89 8d 98 fe ff ff               	mov dword ptr [ebp - 0x168], ecx
0x8049bb5:   0f b6 45 e1                     	movzx eax, byte ptr [ebp - 0x1f]
0x8049bb9:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x8049bbf:   0f bf 75 e2                     	movsx esi, word ptr [ebp - 0x1e]
0x8049bc3:   0f b6 4d e9                     	movzx ecx, byte ptr [ebp - 0x17]
0x8049bc7:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049bcb:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049bce:   52                              	push edx
0x8049bcf:   53                              	push ebx
0x8049bd0:   57                              	push edi
0x8049bd1:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049bd7:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049bda:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049be0:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049be3:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049be6:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049be9:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049bec:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x8049bf2:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049bf5:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x8049bfb:   56                              	push esi
0x8049bfc:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049bff:   51                              	push ecx
0x8049c00:   50                              	push eax
0x8049c01:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049c04:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049c07:   e8 48 fa ff ff                  	call 0x8049654 <set_var>
0x8049c0c:   83 c4 50                        	add esp, 0x50
0x8049c0f:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x8049c15:   e9 f9 0e 00 00                  	jmp 0x804ab13 <func_1+0x136f>
0x8049c1a:   83 45 f0 09                     	add dword ptr [ebp - 0x10], 9
0x8049c1e:   83 7d f0 16                     	cmp dword ptr [ebp - 0x10], 0x16
0x8049c22:   0f 8f 2e ff ff ff               	jg 0x8049b56 <func_1+0x3b2>
0x8049c28:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049c2b:   f7 d0                           	not eax
0x8049c2d:   98                              	cwde 
0x8049c2e:   c1 e0 0e                        	shl eax, 0xe
0x8049c31:   85 c0                           	test eax, eax
0x8049c33:   0f 84 3f 01 00 00               	je 0x8049d78 <func_1+0x5d4>
0x8049c39:   66 c7 85 3c ff ff ff a8 d7      	mov word ptr [ebp - 0xc4], 0xd7a8
0x8049c42:   c7 85 38 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xc8], 0
0x8049c4c:   0f bf 45 e2                     	movsx eax, word ptr [ebp - 0x1e]
0x8049c50:   05 a2 46 00 00                  	add eax, 0x46a2
0x8049c55:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049c58:   80 bd 57 ff ff ff 00            	cmp byte ptr [ebp - 0xa9], 0
0x8049c5f:   75 41                           	jne 0x8049ca2 <func_1+0x4fe>
0x8049c61:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049c64:   89 c3                           	mov ebx, eax
0x8049c66:   0f b6 45 e1                     	movzx eax, byte ptr [ebp - 0x1f]
0x8049c6a:   8d 50 01                        	lea edx, [eax + 1]
0x8049c6d:   88 55 e1                        	mov byte ptr [ebp - 0x1f], dl
0x8049c70:   8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x8049c73:   89 d1                           	mov ecx, edx
0x8049c75:   83 e1 01                        	and ecx, 1
0x8049c78:   0f b6 55 e9                     	movzx edx, byte ptr [ebp - 0x17]
0x8049c7c:   39 d1                           	cmp ecx, edx
0x8049c7e:   0f 9f c2                        	setg dl
0x8049c81:   0f b6 d2                        	movzx edx, dl
0x8049c84:   39 55 ac                        	cmp dword ptr [ebp - 0x54], edx
0x8049c87:   0f 94 c2                        	sete dl
0x8049c8a:   0f b6 d2                        	movzx edx, dl
0x8049c8d:   0f af c2                        	imul eax, edx
0x8049c90:   83 e8 05                        	sub eax, 5
0x8049c93:   89 c2                           	mov edx, eax
0x8049c95:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x8049c99:   09 d0                           	or eax, edx
0x8049c9b:   83 c0 04                        	add eax, 4
0x8049c9e:   38 c3                           	cmp bl, al
0x8049ca0:   74 07                           	je 0x8049ca9 <func_1+0x505>
0x8049ca2:   b8 01 00 00 00                  	mov eax, 1
0x8049ca7:   eb 05                           	jmp 0x8049cae <func_1+0x50a>
0x8049ca9:   b8 00 00 00 00                  	mov eax, 0
0x8049cae:   3b 45 f0                        	cmp eax, dword ptr [ebp - 0x10]
0x8049cb1:   74 08                           	je 0x8049cbb <func_1+0x517>
0x8049cb3:   66 83 bd 3c ff ff ff 00         	cmp word ptr [ebp - 0xc4], 0
0x8049cbb:   66 83 7d e2 00                  	cmp word ptr [ebp - 0x1e], 0
0x8049cc0:   75 07                           	jne 0x8049cc9 <func_1+0x525>
0x8049cc2:   66 83 7d e2 00                  	cmp word ptr [ebp - 0x1e], 0
0x8049cc7:   74 07                           	je 0x8049cd0 <func_1+0x52c>
0x8049cc9:   ba 01 00 00 00                  	mov edx, 1
0x8049cce:   eb 05                           	jmp 0x8049cd5 <func_1+0x531>
0x8049cd0:   ba 00 00 00 00                  	mov edx, 0
0x8049cd5:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x8049cd9:   39 c2                           	cmp edx, eax
0x8049cdb:   0f 95 c0                        	setne al
0x8049cde:   0f b6 d0                        	movzx edx, al
0x8049ce1:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x8049ce5:   01 d0                           	add eax, edx
0x8049ce7:   3d 20 5a 00 00                  	cmp eax, 0x5a20
0x8049cec:   80 bd 57 ff ff ff 00            	cmp byte ptr [ebp - 0xa9], 0
0x8049cf3:   75 06                           	jne 0x8049cfb <func_1+0x557>
0x8049cf5:   80 7d e1 00                     	cmp byte ptr [ebp - 0x1f], 0
0x8049cf9:   74 07                           	je 0x8049d02 <func_1+0x55e>
0x8049cfb:   b8 01 00 00 00                  	mov eax, 1
0x8049d00:   eb 05                           	jmp 0x8049d07 <func_1+0x563>
0x8049d02:   b8 00 00 00 00                  	mov eax, 0
0x8049d07:   c0 f8 05                        	sar al, 5
0x8049d0a:   0f be c0                        	movsx eax, al
0x8049d0d:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049d10:   66 c7 45 e2 00 00               	mov word ptr [ebp - 0x1e], 0
0x8049d16:   eb 4a                           	jmp 0x8049d62 <func_1+0x5be>
0x8049d18:   66 c7 85 36 ff ff ff fb ff      	mov word ptr [ebp - 0xca], 0xfffb
0x8049d21:   c7 85 38 ff ff ff f9 ff ff ff   	mov dword ptr [ebp - 0xc8], 0xfffffff9
0x8049d2b:   80 7d e9 00                     	cmp byte ptr [ebp - 0x17], 0
0x8049d2f:   74 05                           	je 0x8049d36 <func_1+0x592>
0x8049d31:   e9 58 fb ff ff                  	jmp 0x804988e <func_1+0xea>
0x8049d36:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049d3a:   0f 95 c2                        	setne dl
0x8049d3d:   81 7d ec 87 00 00 00            	cmp dword ptr [ebp - 0x14], 0x87
0x8049d44:   0f 97 c0                        	seta al
0x8049d47:   21 d0                           	and eax, edx
0x8049d49:   89 c2                           	mov edx, eax
0x8049d4b:   0f b7 85 36 ff ff ff            	movzx eax, word ptr [ebp - 0xca]
0x8049d52:   21 d0                           	and eax, edx
0x8049d54:   88 45 aa                        	mov byte ptr [ebp - 0x56], al
0x8049d57:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x8049d5b:   83 c0 05                        	add eax, 5
0x8049d5e:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x8049d62:   66 83 7d e2 00                  	cmp word ptr [ebp - 0x1e], 0
0x8049d67:   7f af                           	jg 0x8049d18 <func_1+0x574>
0x8049d69:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049d6d:   0f 84 f4 02 00 00               	je 0x804a067 <func_1+0x8c3>
0x8049d73:   e9 09 03 00 00                  	jmp 0x804a081 <func_1+0x8dd>
0x8049d78:   c7 45 84 42 16 6c 73            	mov dword ptr [ebp - 0x7c], 0x736c1642
0x8049d7f:   c7 45 80 af 18 9b 5c            	mov dword ptr [ebp - 0x80], 0x5c9b18af
0x8049d86:   80 bd 56 ff ff ff 00            	cmp byte ptr [ebp - 0xaa], 0
0x8049d8d:   0f 85 ed 02 00 00               	jne 0x804a080 <func_1+0x8dc>
0x8049d93:   66 83 7d ea 00                  	cmp word ptr [ebp - 0x16], 0
0x8049d98:   0f 84 fa 01 00 00               	je 0x8049f98 <func_1+0x7f4>
0x8049d9e:   66 c7 85 48 ff ff ff 00 00      	mov word ptr [ebp - 0xb8], 0
0x8049da7:   c7 85 44 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xbc], 0xffffffff
0x8049db1:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049db4:   98                              	cwde 
0x8049db5:   01 c0                           	add eax, eax
0x8049db7:   85 c0                           	test eax, eax
0x8049db9:   74 25                           	je 0x8049de0 <func_1+0x63c>
0x8049dbb:   c6 85 43 ff ff ff 00            	mov byte ptr [ebp - 0xbd], 0
0x8049dc2:   0f be 45 aa                     	movsx eax, byte ptr [ebp - 0x56]
0x8049dc6:   f7 d8                           	neg eax
0x8049dc8:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049dcb:   80 7d e1 00                     	cmp byte ptr [ebp - 0x1f], 0
0x8049dcf:   0f 85 9a 02 00 00               	jne 0x804a06f <func_1+0x8cb>
0x8049dd5:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049dd8:   30 85 43 ff ff ff               	xor byte ptr [ebp - 0xbd], al
0x8049dde:   eb 4c                           	jmp 0x8049e2c <func_1+0x688>
0x8049de0:   83 45 84 01                     	add dword ptr [ebp - 0x7c], 1
0x8049de4:   83 65 90 01                     	and dword ptr [ebp - 0x70], 1
0x8049de8:   0f be 85 56 ff ff ff            	movsx eax, byte ptr [ebp - 0xaa]
0x8049def:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x8049df2:   0f 9c c0                        	setl al
0x8049df5:   0f b6 d0                        	movzx edx, al
0x8049df8:   0f bf 85 48 ff ff ff            	movsx eax, word ptr [ebp - 0xb8]
0x8049dff:   39 c2                           	cmp edx, eax
0x8049e01:   0f 9f c0                        	setg al
0x8049e04:   0f b6 c0                        	movzx eax, al
0x8049e07:   0f b6 7d e9                     	movzx edi, byte ptr [ebp - 0x17]
0x8049e0b:   99                              	cdq 
0x8049e0c:   f7 ff                           	idiv edi
0x8049e0e:   21 45 dc                        	and dword ptr [ebp - 0x24], eax
0x8049e11:   83 7d dc 53                     	cmp dword ptr [ebp - 0x24], 0x53
0x8049e15:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049e19:   0f 95 c0                        	setne al
0x8049e1c:   0f b6 d0                        	movzx edx, al
0x8049e1f:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049e23:   89 c1                           	mov ecx, eax
0x8049e25:   d3 e2                           	shl edx, cl
0x8049e27:   89 d0                           	mov eax, edx
0x8049e29:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x8049e2c:   83 75 f0 fa                     	xor dword ptr [ebp - 0x10], 0xfffffffa
0x8049e30:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049e33:   89 c2                           	mov edx, eax
0x8049e35:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049e38:   31 d0                           	xor eax, edx
0x8049e3a:   0f be d0                        	movsx edx, al
0x8049e3d:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049e40:   33 45 e4                        	xor eax, dword ptr [ebp - 0x1c]
0x8049e43:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x8049e46:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049e49:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049e4c:   0f 95 c0                        	setne al
0x8049e4f:   0f b6 c0                        	movzx eax, al
0x8049e52:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049e55:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049e58:   0f be c0                        	movsx eax, al
0x8049e5b:   89 c1                           	mov ecx, eax
0x8049e5d:   d3 e2                           	shl edx, cl
0x8049e5f:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x8049e63:   39 c2                           	cmp edx, eax
0x8049e65:   0f 9d c0                        	setge al
0x8049e68:   0f b6 d0                        	movzx edx, al
0x8049e6b:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x8049e6f:   39 c2                           	cmp edx, eax
0x8049e71:   0f 9c c0                        	setl al
0x8049e74:   0f b6 d0                        	movzx edx, al
0x8049e77:   0f be 85 56 ff ff ff            	movsx eax, byte ptr [ebp - 0xaa]
0x8049e7e:   39 c2                           	cmp edx, eax
0x8049e80:   74 0d                           	je 0x8049e8f <func_1+0x6eb>
0x8049e82:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x8049e86:   74 07                           	je 0x8049e8f <func_1+0x6eb>
0x8049e88:   b8 01 00 00 00                  	mov eax, 1
0x8049e8d:   eb 05                           	jmp 0x8049e94 <func_1+0x6f0>
0x8049e8f:   b8 00 00 00 00                  	mov eax, 0
0x8049e94:   0f be c0                        	movsx eax, al
0x8049e97:   ba 03 00 00 00                  	mov edx, 3
0x8049e9c:   29 c2                           	sub edx, eax
0x8049e9e:   0f bf 85 48 ff ff ff            	movsx eax, word ptr [ebp - 0xb8]
0x8049ea5:   29 c2                           	sub edx, eax
0x8049ea7:   89 d0                           	mov eax, edx
0x8049ea9:   0f bf bd 48 ff ff ff            	movsx edi, word ptr [ebp - 0xb8]
0x8049eb0:   99                              	cdq 
0x8049eb1:   f7 ff                           	idiv edi
0x8049eb3:   31 45 a4                        	xor dword ptr [ebp - 0x5c], eax
0x8049eb6:   c7 45 80 fb ff ff ff            	mov dword ptr [ebp - 0x80], 0xfffffffb
0x8049ebd:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049ec0:   0f b6 c0                        	movzx eax, al
0x8049ec3:   ba 01 00 00 00                  	mov edx, 1
0x8049ec8:   89 c1                           	mov ecx, eax
0x8049eca:   d3 e2                           	shl edx, cl
0x8049ecc:   89 d0                           	mov eax, edx
0x8049ece:   21 45 a4                        	and dword ptr [ebp - 0x5c], eax
0x8049ed1:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049ed4:   8b 4d f0                        	mov ecx, dword ptr [ebp - 0x10]
0x8049ed7:   ba 00 00 00 00                  	mov edx, 0
0x8049edc:   f7 f1                           	div ecx
0x8049ede:   89 d0                           	mov eax, edx
0x8049ee0:   89 c2                           	mov edx, eax
0x8049ee2:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x8049ee6:   31 d0                           	xor eax, edx
0x8049ee8:   0f b6 d0                        	movzx edx, al
0x8049eeb:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049eee:   0f b6 c0                        	movzx eax, al
0x8049ef1:   89 c1                           	mov ecx, eax
0x8049ef3:   d3 e2                           	shl edx, cl
0x8049ef5:   0f be 85 57 ff ff ff            	movsx eax, byte ptr [ebp - 0xa9]
0x8049efc:   09 d0                           	or eax, edx
0x8049efe:   3d fe 00 00 00                  	cmp eax, 0xfe
0x8049f03:   76 0f                           	jbe 0x8049f14 <func_1+0x770>
0x8049f05:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049f09:   09 85 44 ff ff ff               	or dword ptr [ebp - 0xbc], eax
0x8049f0f:   e9 c9 00 00 00                  	jmp 0x8049fdd <func_1+0x839>
0x8049f14:   66 c7 85 40 ff ff ff 01 00      	mov word ptr [ebp - 0xc0], 1
0x8049f1d:   0f b6 45 e1                     	movzx eax, byte ptr [ebp - 0x1f]
0x8049f21:   39 85 5c ff ff ff               	cmp dword ptr [ebp - 0xa4], eax
0x8049f27:   0f 93 c0                        	setae al
0x8049f2a:   0f b6 c0                        	movzx eax, al
0x8049f2d:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049f30:   0f b7 85 48 ff ff ff            	movzx eax, word ptr [ebp - 0xb8]
0x8049f37:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x8049f3b:   0f bf 55 e2                     	movsx edx, word ptr [ebp - 0x1e]
0x8049f3f:   81 7d ec 89 00 00 00            	cmp dword ptr [ebp - 0x14], 0x89
0x8049f46:   0f 95 c0                        	setne al
0x8049f49:   0f b6 c0                        	movzx eax, al
0x8049f4c:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049f4f:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049f52:   0f b7 c8                        	movzx ecx, ax
0x8049f55:   66 0f be 85 56 ff ff ff         	movsx ax, byte ptr [ebp - 0xaa]
0x8049f5d:   0f b7 c0                        	movzx eax, ax
0x8049f60:   29 c1                           	sub ecx, eax
0x8049f62:   89 c8                           	mov eax, ecx
0x8049f64:   2d 56 2e 8b 1c                  	sub eax, 0x1c8b2e56
0x8049f69:   39 c2                           	cmp edx, eax
0x8049f6b:   0f 95 c0                        	setne al
0x8049f6e:   0f b6 c0                        	movzx eax, al
0x8049f71:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049f74:   0f bf 95 48 ff ff ff            	movsx edx, word ptr [ebp - 0xb8]
0x8049f7b:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x8049f7f:   66 39 45 ea                     	cmp word ptr [ebp - 0x16], ax
0x8049f83:   0f 93 c0                        	setae al
0x8049f86:   0f b6 c0                        	movzx eax, al
0x8049f89:   f7 d8                           	neg eax
0x8049f8b:   39 c2                           	cmp edx, eax
0x8049f8d:   0f 9d c0                        	setge al
0x8049f90:   0f b6 c0                        	movzx eax, al
0x8049f93:   21 45 f0                        	and dword ptr [ebp - 0x10], eax
0x8049f96:   eb 45                           	jmp 0x8049fdd <func_1+0x839>
0x8049f98:   c6 85 4b ff ff ff 09            	mov byte ptr [ebp - 0xb5], 9
0x8049f9f:   0f be 95 4b ff ff ff            	movsx edx, byte ptr [ebp - 0xb5]
0x8049fa6:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049fa9:   89 85 50 ff ff ff               	mov dword ptr [ebp - 0xb0], eax
0x8049faf:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x8049fb5:   3b 45 dc                        	cmp eax, dword ptr [ebp - 0x24]
0x8049fb8:   0f 9c c0                        	setl al
0x8049fbb:   0f b6 c0                        	movzx eax, al
0x8049fbe:   39 45 80                        	cmp dword ptr [ebp - 0x80], eax
0x8049fc1:   0f 94 c0                        	sete al
0x8049fc4:   0f b6 c0                        	movzx eax, al
0x8049fc7:   39 c2                           	cmp edx, eax
0x8049fc9:   75 04                           	jne 0x8049fcf <func_1+0x82b>
0x8049fcb:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x8049fcf:   b8 00 00 00 00                  	mov eax, 0
0x8049fd4:   21 45 f0                        	and dword ptr [ebp - 0x10], eax
0x8049fd7:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049fda:   88 45 db                        	mov byte ptr [ebp - 0x25], al
0x8049fdd:   c7 45 84 0e 00 00 00            	mov dword ptr [ebp - 0x7c], 0xe
0x8049fe4:   eb 52                           	jmp 0x804a038 <func_1+0x894>
0x8049fe6:   66 c7 85 3e ff ff ff 28 a9      	mov word ptr [ebp - 0xc2], 0xa928
0x8049fef:   c7 85 50 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xb0], 0
0x8049ff9:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049ffd:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804a000:   0f 9e c0                        	setle al
0x804a003:   0f b6 d0                        	movzx edx, al
0x804a006:   0f be 85 56 ff ff ff            	movsx eax, byte ptr [ebp - 0xaa]
0x804a00d:   01 d0                           	add eax, edx
0x804a00f:   83 f8 f7                        	cmp eax, -9
0x804a012:   0f 97 c0                        	seta al
0x804a015:   0f b6 c0                        	movzx eax, al
0x804a018:   99                              	cdq 
0x804a019:   f7 7d 90                        	idiv dword ptr [ebp - 0x70]
0x804a01c:   09 45 80                        	or dword ptr [ebp - 0x80], eax
0x804a01f:   0f b7 85 3e ff ff ff            	movzx eax, word ptr [ebp - 0xc2]
0x804a026:   83 c0 01                        	add eax, 1
0x804a029:   66 89 85 3e ff ff ff            	mov word ptr [ebp - 0xc2], ax
0x804a030:   83 45 d0 01                     	add dword ptr [ebp - 0x30], 1
0x804a034:   83 6d 84 01                     	sub dword ptr [ebp - 0x7c], 1
0x804a038:   83 7d 84 0b                     	cmp dword ptr [ebp - 0x7c], 0xb
0x804a03c:   77 a8                           	ja 0x8049fe6 <func_1+0x842>
0x804a03e:   0f b7 55 ea                     	movzx edx, word ptr [ebp - 0x16]
0x804a042:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a045:   31 45 ec                        	xor dword ptr [ebp - 0x14], eax
0x804a048:   83 7d ec ff                     	cmp dword ptr [ebp - 0x14], -1
0x804a04c:   0f 95 c0                        	setne al
0x804a04f:   0f b6 c0                        	movzx eax, al
0x804a052:   39 c2                           	cmp edx, eax
0x804a054:   0f 9d c0                        	setge al
0x804a057:   0f b6 c0                        	movzx eax, al
0x804a05a:   0f b6 55 db                     	movzx edx, byte ptr [ebp - 0x25]
0x804a05e:   0f b6 fa                        	movzx edi, dl
0x804a061:   99                              	cdq 
0x804a062:   f7 ff                           	idiv edi
0x804a064:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a067:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a06a:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a06d:   eb 01                           	jmp 0x804a070 <func_1+0x8cc>
0x804a06f:   90                              	nop 
0x804a070:   83 45 94 01                     	add dword ptr [ebp - 0x6c], 1
0x804a074:   83 7d 94 32                     	cmp dword ptr [ebp - 0x6c], 0x32
0x804a078:   0f 87 5d fa ff ff               	ja 0x8049adb <func_1+0x337>
0x804a07e:   eb 01                           	jmp 0x804a081 <func_1+0x8dd>
0x804a080:   90                              	nop 
0x804a081:   66 c7 45 e2 01 00               	mov word ptr [ebp - 0x1e], 1
0x804a087:   80 7d e9 00                     	cmp byte ptr [ebp - 0x17], 0
0x804a08b:   0f 84 61 07 00 00               	je 0x804a7f2 <func_1+0x104e>
0x804a091:   c6 85 7f ff ff ff 03            	mov byte ptr [ebp - 0x81], 3
0x804a098:   c7 85 2c ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xd4], 0xfffffffc
0x804a0a2:   c7 85 28 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xd8], 2
0x804a0ac:   c6 85 27 ff ff ff 00            	mov byte ptr [ebp - 0xd9], 0
0x804a0b3:   c7 85 20 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe0], 0
0x804a0bd:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a0c0:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a0c3:   0f 95 c0                        	setne al
0x804a0c6:   0f b6 d0                        	movzx edx, al
0x804a0c9:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a0cc:   98                              	cwde 
0x804a0cd:   01 d0                           	add eax, edx
0x804a0cf:   83 f8 ff                        	cmp eax, -1
0x804a0d2:   0f 93 c0                        	setae al
0x804a0d5:   0f b6 c0                        	movzx eax, al
0x804a0d8:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x804a0dc:   80 7d db 00                     	cmp byte ptr [ebp - 0x25], 0
0x804a0e0:   c7 45 90 f0 00 00 00            	mov dword ptr [ebp - 0x70], 0xf0
0x804a0e7:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a0ea:   31 45 f0                        	xor dword ptr [ebp - 0x10], eax
0x804a0ed:   0f b6 5d e1                     	movzx ebx, byte ptr [ebp - 0x1f]
0x804a0f1:   0f b7 b5 5a ff ff ff            	movzx esi, word ptr [ebp - 0xa6]
0x804a0f8:   8b 4d f0                        	mov ecx, dword ptr [ebp - 0x10]
0x804a0fb:   ba f3 b5 9c 91                  	mov edx, 0x919cb5f3
0x804a100:   89 c8                           	mov eax, ecx
0x804a102:   f7 ea                           	imul edx
0x804a104:   8d 04 0a                        	lea eax, [edx + ecx]
0x804a107:   c1 f8 1b                        	sar eax, 0x1b
0x804a10a:   89 c2                           	mov edx, eax
0x804a10c:   89 c8                           	mov eax, ecx
0x804a10e:   c1 f8 1f                        	sar eax, 0x1f
0x804a111:   29 c2                           	sub edx, eax
0x804a113:   89 d0                           	mov eax, edx
0x804a115:   69 c0 21 94 10 0e               	imul eax, eax, 0xe109421
0x804a11b:   29 c1                           	sub ecx, eax
0x804a11d:   89 c8                           	mov eax, ecx
0x804a11f:   0f b6 d0                        	movzx edx, al
0x804a122:   0f b6 45 e1                     	movzx eax, byte ptr [ebp - 0x1f]
0x804a126:   89 c1                           	mov ecx, eax
0x804a128:   d3 fa                           	sar edx, cl
0x804a12a:   89 d0                           	mov eax, edx
0x804a12c:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804a12f:   0f 97 c0                        	seta al
0x804a132:   0f b6 c0                        	movzx eax, al
0x804a135:   0f be 7d db                     	movsx edi, byte ptr [ebp - 0x25]
0x804a139:   99                              	cdq 
0x804a13a:   f7 ff                           	idiv edi
0x804a13c:   85 c0                           	test eax, eax
0x804a13e:   74 0d                           	je 0x804a14d <func_1+0x9a9>
0x804a140:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x804a144:   74 07                           	je 0x804a14d <func_1+0x9a9>
0x804a146:   b8 01 00 00 00                  	mov eax, 1
0x804a14b:   eb 05                           	jmp 0x804a152 <func_1+0x9ae>
0x804a14d:   b8 00 00 00 00                  	mov eax, 0
0x804a152:   f7 d8                           	neg eax
0x804a154:   89 c2                           	mov edx, eax
0x804a156:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a159:   39 c2                           	cmp edx, eax
0x804a15b:   0f 95 c0                        	setne al
0x804a15e:   0f b6 c0                        	movzx eax, al
0x804a161:   39 c6                           	cmp esi, eax
0x804a163:   0f 9d c0                        	setge al
0x804a166:   0f b6 d0                        	movzx edx, al
0x804a169:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x804a16d:   21 c2                           	and edx, eax
0x804a16f:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a172:   31 d0                           	xor eax, edx
0x804a174:   0f b7 d0                        	movzx edx, ax
0x804a177:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a17a:   0f b7 c0                        	movzx eax, ax
0x804a17d:   89 c1                           	mov ecx, eax
0x804a17f:   d3 fa                           	sar edx, cl
0x804a181:   89 d0                           	mov eax, edx
0x804a183:   f7 d0                           	not eax
0x804a185:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x804a188:   0f 9c c0                        	setl al
0x804a18b:   0f b6 c0                        	movzx eax, al
0x804a18e:   29 c3                           	sub ebx, eax
0x804a190:   89 d8                           	mov eax, ebx
0x804a192:   0f b7 d0                        	movzx edx, ax
0x804a195:   0f b6 45 e1                     	movzx eax, byte ptr [ebp - 0x1f]
0x804a199:   89 c1                           	mov ecx, eax
0x804a19b:   d3 e2                           	shl edx, cl
0x804a19d:   89 d0                           	mov eax, edx
0x804a19f:   85 c0                           	test eax, eax
0x804a1a1:   74 0f                           	je 0x804a1b2 <func_1+0xa0e>
0x804a1a3:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a1a7:   0f 84 ed 01 00 00               	je 0x804a39a <func_1+0xbf6>
0x804a1ad:   e9 a9 06 00 00                  	jmp 0x804a85b <func_1+0x10b7>
0x804a1b2:   c6 85 1f ff ff ff 01            	mov byte ptr [ebp - 0xe1], 1
0x804a1b9:   c7 85 18 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xe8], 1
0x804a1c3:   c7 85 14 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xec], 1
0x804a1cd:   c7 45 dc 00 00 00 00            	mov dword ptr [ebp - 0x24], 0
0x804a1d4:   e9 36 01 00 00                  	jmp 0x804a30f <func_1+0xb6b>
0x804a1d9:   c6 85 0b ff ff ff 29            	mov byte ptr [ebp - 0xf5], 0x29
0x804a1e0:   c7 85 04 ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0xfc], 6
0x804a1ea:   c7 85 00 ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0x100], 0xfffffffa
0x804a1f4:   80 75 db 01                     	xor byte ptr [ebp - 0x25], 1
0x804a1f8:   c7 45 cc 02 00 00 00            	mov dword ptr [ebp - 0x34], 2
0x804a1ff:   66 0f be 85 7f ff ff ff         	movsx ax, byte ptr [ebp - 0x81]
0x804a207:   66 c1 e8 0d                     	shr ax, 0xd
0x804a20b:   66 83 f8 60                     	cmp ax, 0x60
0x804a20f:   77 04                           	ja 0x804a215 <func_1+0xa71>
0x804a211:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x804a215:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a218:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a21b:   c6 45 ab ff                     	mov byte ptr [ebp - 0x55], 0xff
0x804a21f:   eb 58                           	jmp 0x804a279 <func_1+0xad5>
0x804a221:   66 c7 85 fe fe ff ff 9f 94      	mov word ptr [ebp - 0x102], 0x949f
0x804a22a:   80 bd 7f ff ff ff 00            	cmp byte ptr [ebp - 0x81], 0
0x804a231:   75 20                           	jne 0x804a253 <func_1+0xaaf>
0x804a233:   83 6d c8 01                     	sub dword ptr [ebp - 0x38], 1
0x804a237:   0f be bd 7f ff ff ff            	movsx edi, byte ptr [ebp - 0x81]
0x804a23e:   b8 a3 ff ff ff                  	mov eax, 0xffffffa3
0x804a243:   99                              	cdq 
0x804a244:   f7 ff                           	idiv edi
0x804a246:   89 c2                           	mov edx, eax
0x804a248:   0f bf 85 fe fe ff ff            	movsx eax, word ptr [ebp - 0x102]
0x804a24f:   21 d0                           	and eax, edx
0x804a251:   85 c0                           	test eax, eax
0x804a253:   0f be 95 0b ff ff ff            	movsx edx, byte ptr [ebp - 0xf5]
0x804a25a:   0f b6 85 1f ff ff ff            	movzx eax, byte ptr [ebp - 0xe1]
0x804a261:   0f af c2                        	imul eax, edx
0x804a264:   85 c0                           	test eax, eax
0x804a266:   0f 95 c0                        	setne al
0x804a269:   0f b6 c0                        	movzx eax, al
0x804a26c:   09 45 f0                        	or dword ptr [ebp - 0x10], eax
0x804a26f:   0f b6 45 ab                     	movzx eax, byte ptr [ebp - 0x55]
0x804a273:   83 c0 01                        	add eax, 1
0x804a276:   88 45 ab                        	mov byte ptr [ebp - 0x55], al
0x804a279:   80 7d ab 14                     	cmp byte ptr [ebp - 0x55], 0x14
0x804a27d:   7f a2                           	jg 0x804a221 <func_1+0xa7d>
0x804a27f:   80 6d c7 01                     	sub byte ptr [ebp - 0x39], 1
0x804a283:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x804a28a:   0f be 85 7f ff ff ff            	movsx eax, byte ptr [ebp - 0x81]
0x804a291:   09 45 ac                        	or dword ptr [ebp - 0x54], eax
0x804a294:   80 7d e1 00                     	cmp byte ptr [ebp - 0x1f], 0
0x804a298:   0f 94 c0                        	sete al
0x804a29b:   0f b6 d0                        	movzx edx, al
0x804a29e:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a2a1:   0f b7 c0                        	movzx eax, ax
0x804a2a4:   0f af c2                        	imul eax, edx
0x804a2a7:   83 f8 03                        	cmp eax, 3
0x804a2aa:   0f 9f c0                        	setg al
0x804a2ad:   0f b6 c0                        	movzx eax, al
0x804a2b0:   0f b6 95 7e ff ff ff            	movzx edx, byte ptr [ebp - 0x82]
0x804a2b7:   c0 ea 02                        	shr dl, 2
0x804a2ba:   0f b6 d2                        	movzx edx, dl
0x804a2bd:   31 45 88                        	xor dword ptr [ebp - 0x78], eax
0x804a2c0:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a2c3:   0f b6 c0                        	movzx eax, al
0x804a2c6:   89 c1                           	mov ecx, eax
0x804a2c8:   d3 fa                           	sar edx, cl
0x804a2ca:   89 d0                           	mov eax, edx
0x804a2cc:   0f be 8d 7f ff ff ff            	movsx ecx, byte ptr [ebp - 0x81]
0x804a2d3:   ba 00 00 00 00                  	mov edx, 0
0x804a2d8:   f7 f1                           	div ecx
0x804a2da:   89 d0                           	mov eax, edx
0x804a2dc:   0f be c0                        	movsx eax, al
0x804a2df:   ba 01 00 00 00                  	mov edx, 1
0x804a2e4:   89 c1                           	mov ecx, eax
0x804a2e6:   d3 fa                           	sar edx, cl
0x804a2e8:   89 d0                           	mov eax, edx
0x804a2ea:   89 c1                           	mov ecx, eax
0x804a2ec:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a2ef:   89 c2                           	mov edx, eax
0x804a2f1:   0f b6 c1                        	movzx eax, cl
0x804a2f4:   f6 f2                           	div dl
0x804a2f6:   0f b6 c4                        	movzx eax, ah
0x804a2f9:   0f b6 c0                        	movzx eax, al
0x804a2fc:   f6 75 c7                        	div byte ptr [ebp - 0x39]
0x804a2ff:   0f b6 c4                        	movzx eax, ah
0x804a302:   0f b6 c0                        	movzx eax, al
0x804a305:   89 85 18 ff ff ff               	mov dword ptr [ebp - 0xe8], eax
0x804a30b:   83 6d dc 01                     	sub dword ptr [ebp - 0x24], 1
0x804a30f:   83 7d dc f9                     	cmp dword ptr [ebp - 0x24], -7
0x804a313:   0f 8c c0 fe ff ff               	jl 0x804a1d9 <func_1+0xa35>
0x804a319:   80 7d ab 00                     	cmp byte ptr [ebp - 0x55], 0
0x804a31d:   0f 9f c0                        	setg al
0x804a320:   0f b6 d0                        	movzx edx, al
0x804a323:   0f be 9d 7e ff ff ff            	movsx ebx, byte ptr [ebp - 0x82]
0x804a32a:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a32d:   98                              	cwde 
0x804a32e:   89 c1                           	mov ecx, eax
0x804a330:   d3 fb                           	sar ebx, cl
0x804a332:   89 d8                           	mov eax, ebx
0x804a334:   83 f8 07                        	cmp eax, 7
0x804a337:   0f 9f c0                        	setg al
0x804a33a:   0f b6 c0                        	movzx eax, al
0x804a33d:   0f af c2                        	imul eax, edx
0x804a340:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a343:   0f bf 45 e2                     	movsx eax, word ptr [ebp - 0x1e]
0x804a347:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x804a34a:   0f 97 c0                        	seta al
0x804a34d:   0f b6 c0                        	movzx eax, al
0x804a350:   8b 75 a4                        	mov esi, dword ptr [ebp - 0x5c]
0x804a353:   ba 00 00 00 00                  	mov edx, 0
0x804a358:   f7 f6                           	div esi
0x804a35a:   85 c0                           	test eax, eax
0x804a35c:   74 18                           	je 0x804a376 <func_1+0xbd2>
0x804a35e:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x804a364:   0f bf d0                        	movsx edx, ax
0x804a367:   0f bf 45 e2                     	movsx eax, word ptr [ebp - 0x1e]
0x804a36b:   89 c1                           	mov ecx, eax
0x804a36d:   d3 fa                           	sar edx, cl
0x804a36f:   89 d0                           	mov eax, edx
0x804a371:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a374:   eb 24                           	jmp 0x804a39a <func_1+0xbf6>
0x804a376:   c7 85 10 ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xf0], 0xfffffffc
0x804a380:   c7 85 0c ff ff ff a7 ea 3b 32   	mov dword ptr [ebp - 0xf4], 0x323beaa7
0x804a38a:   8b 85 10 ff ff ff               	mov eax, dword ptr [ebp - 0xf0]
0x804a390:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x804a396:   83 45 c0 01                     	add dword ptr [ebp - 0x40], 1
0x804a39a:   80 7d e1 00                     	cmp byte ptr [ebp - 0x1f], 0
0x804a39e:   0f 84 4d 02 00 00               	je 0x804a5f1 <func_1+0xe4d>
0x804a3a4:   c7 85 d0 fe ff ff 8d 8c 00 e9   	mov dword ptr [ebp - 0x130], 0xe9008c8d
0x804a3ae:   c7 85 cc fe ff ff f7 ff ff ff   	mov dword ptr [ebp - 0x134], 0xfffffff7
0x804a3b8:   c6 85 7f ff ff ff 00            	mov byte ptr [ebp - 0x81], 0
0x804a3bf:   e9 e9 01 00 00                  	jmp 0x804a5ad <func_1+0xe09>
0x804a3c4:   c6 85 cb fe ff ff 52            	mov byte ptr [ebp - 0x135], 0x52
0x804a3cb:   c7 85 c4 fe ff ff f6 04 16 74   	mov dword ptr [ebp - 0x13c], 0x741604f6
0x804a3d5:   8b 85 d0 fe ff ff               	mov eax, dword ptr [ebp - 0x130]
0x804a3db:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x804a3df:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a3e2:   83 e8 01                        	sub eax, 1
0x804a3e5:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a3e8:   81 7d e4 ff ff 00 00            	cmp dword ptr [ebp - 0x1c], 0xffff
0x804a3ef:   0f 97 c0                        	seta al
0x804a3f2:   0f b6 d0                        	movzx edx, al
0x804a3f5:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a3f9:   31 d0                           	xor eax, edx
0x804a3fb:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x804a3ff:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a403:   c1 e0 0e                        	shl eax, 0xe
0x804a406:   39 85 74 ff ff ff               	cmp dword ptr [ebp - 0x8c], eax
0x804a40c:   83 7d c0 00                     	cmp dword ptr [ebp - 0x40], 0
0x804a410:   0f 84 e7 00 00 00               	je 0x804a4fd <func_1+0xd59>
0x804a416:   c7 85 bc fe ff ff 50 40 47 61   	mov dword ptr [ebp - 0x144], 0x61474050
0x804a420:   80 bd cb fe ff ff 00            	cmp byte ptr [ebp - 0x135], 0
0x804a427:   0f 85 8f 01 00 00               	jne 0x804a5bc <func_1+0xe18>
0x804a42d:   66 0f be 85 cb fe ff ff         	movsx ax, byte ptr [ebp - 0x135]
0x804a435:   66 31 45 9a                     	xor word ptr [ebp - 0x66], ax
0x804a439:   b8 cf 54 c1 14                  	mov eax, 0x14c154cf
0x804a43e:   21 45 90                        	and dword ptr [ebp - 0x70], eax
0x804a441:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a444:   89 c2                           	mov edx, eax
0x804a446:   8b 85 bc fe ff ff               	mov eax, dword ptr [ebp - 0x144]
0x804a44c:   21 d0                           	and eax, edx
0x804a44e:   88 45 db                        	mov byte ptr [ebp - 0x25], al
0x804a451:   83 bd 2c ff ff ff 00            	cmp dword ptr [ebp - 0xd4], 0
0x804a458:   74 07                           	je 0x804a461 <func_1+0xcbd>
0x804a45a:   b8 01 00 00 00                  	mov eax, 1
0x804a45f:   eb 05                           	jmp 0x804a466 <func_1+0xcc2>
0x804a461:   b8 00 00 00 00                  	mov eax, 0
0x804a466:   0f b6 c0                        	movzx eax, al
0x804a469:   05 9d 00 00 00                  	add eax, 0x9d
0x804a46e:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804a471:   83 6d c8 01                     	sub dword ptr [ebp - 0x38], 1
0x804a475:   0f b6 45 e1                     	movzx eax, byte ptr [ebp - 0x1f]
0x804a479:   8d 50 ff                        	lea edx, [eax - 1]
0x804a47c:   88 55 e1                        	mov byte ptr [ebp - 0x1f], dl
0x804a47f:   0f b6 c0                        	movzx eax, al
0x804a482:   66 21 45 be                     	and word ptr [ebp - 0x42], ax
0x804a486:   0f b7 45 be                     	movzx eax, word ptr [ebp - 0x42]
0x804a48a:   0f b6 d0                        	movzx edx, al
0x804a48d:   0f be 85 7e ff ff ff            	movsx eax, byte ptr [ebp - 0x82]
0x804a494:   39 45 94                        	cmp dword ptr [ebp - 0x6c], eax
0x804a497:   0f 93 c0                        	setae al
0x804a49a:   0f b6 c8                        	movzx ecx, al
0x804a49d:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a4a1:   0f af c1                        	imul eax, ecx
0x804a4a4:   09 45 f0                        	or dword ptr [ebp - 0x10], eax
0x804a4a7:   83 7d f0 ff                     	cmp dword ptr [ebp - 0x10], -1
0x804a4ab:   0f 95 c0                        	setne al
0x804a4ae:   0f b6 c0                        	movzx eax, al
0x804a4b1:   39 c2                           	cmp edx, eax
0x804a4b3:   74 09                           	je 0x804a4be <func_1+0xd1a>
0x804a4b5:   83 bd d0 fe ff ff 00            	cmp dword ptr [ebp - 0x130], 0
0x804a4bc:   75 09                           	jne 0x804a4c7 <func_1+0xd23>
0x804a4be:   83 bd bc fe ff ff 00            	cmp dword ptr [ebp - 0x144], 0
0x804a4c5:   74 07                           	je 0x804a4ce <func_1+0xd2a>
0x804a4c7:   b8 01 00 00 00                  	mov eax, 1
0x804a4cc:   eb 05                           	jmp 0x804a4d3 <func_1+0xd2f>
0x804a4ce:   b8 00 00 00 00                  	mov eax, 0
0x804a4d3:   88 45 bd                        	mov byte ptr [ebp - 0x43], al
0x804a4d6:   0f b6 45 bd                     	movzx eax, byte ptr [ebp - 0x43]
0x804a4da:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x804a4e0:   8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x804a4e6:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804a4e9:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a4ec:   3b 45 cc                        	cmp eax, dword ptr [ebp - 0x34]
0x804a4ef:   0f 9e c0                        	setle al
0x804a4f2:   0f b6 c0                        	movzx eax, al
0x804a4f5:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a4f8:   e9 a0 00 00 00                  	jmp 0x804a59d <func_1+0xdf9>
0x804a4fd:   c7 85 c0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x140], 1
0x804a507:   83 ad c0 fe ff ff 01            	sub dword ptr [ebp - 0x140], 1
0x804a50e:   0f bf 55 ba                     	movsx edx, word ptr [ebp - 0x46]
0x804a512:   0f b6 5d bd                     	movzx ebx, byte ptr [ebp - 0x43]
0x804a516:   0f bf bd 7c ff ff ff            	movsx edi, word ptr [ebp - 0x84]
0x804a51d:   0f bf 45 be                     	movsx eax, word ptr [ebp - 0x42]
0x804a521:   89 85 a0 fe ff ff               	mov dword ptr [ebp - 0x160], eax
0x804a527:   0f b6 75 c7                     	movzx esi, byte ptr [ebp - 0x39]
0x804a52b:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x804a531:   0f be 4d db                     	movsx ecx, byte ptr [ebp - 0x25]
0x804a535:   89 8d 98 fe ff ff               	mov dword ptr [ebp - 0x168], ecx
0x804a53b:   0f b6 45 e1                     	movzx eax, byte ptr [ebp - 0x1f]
0x804a53f:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x804a545:   0f bf 75 e2                     	movsx esi, word ptr [ebp - 0x1e]
0x804a549:   0f b6 4d e9                     	movzx ecx, byte ptr [ebp - 0x17]
0x804a54d:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a551:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a554:   52                              	push edx
0x804a555:   53                              	push ebx
0x804a556:   57                              	push edi
0x804a557:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a55d:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a560:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a566:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a569:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a56c:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a56f:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a572:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a578:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a57b:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a581:   56                              	push esi
0x804a582:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a585:   51                              	push ecx
0x804a586:   50                              	push eax
0x804a587:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a58a:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a58d:   e8 c2 f0 ff ff                  	call 0x8049654 <set_var>
0x804a592:   83 c4 50                        	add esp, 0x50
0x804a595:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a598:   e9 76 05 00 00                  	jmp 0x804ab13 <func_1+0x136f>
0x804a59d:   0f b6 85 7f ff ff ff            	movzx eax, byte ptr [ebp - 0x81]
0x804a5a4:   83 e8 01                        	sub eax, 1
0x804a5a7:   88 85 7f ff ff ff               	mov byte ptr [ebp - 0x81], al
0x804a5ad:   80 bd 7f ff ff ff ea            	cmp byte ptr [ebp - 0x81], 0xea
0x804a5b4:   0f 8c 0a fe ff ff               	jl 0x804a3c4 <func_1+0xc20>
0x804a5ba:   eb 01                           	jmp 0x804a5bd <func_1+0xe19>
0x804a5bc:   90                              	nop 
0x804a5bd:   c6 45 db 00                     	mov byte ptr [ebp - 0x25], 0
0x804a5c1:   0f b6 85 7f ff ff ff            	movzx eax, byte ptr [ebp - 0x81]
0x804a5c8:   0f b6 c0                        	movzx eax, al
0x804a5cb:   83 c0 77                        	add eax, 0x77
0x804a5ce:   39 85 28 ff ff ff               	cmp dword ptr [ebp - 0xd8], eax
0x804a5d4:   0f 9d c0                        	setge al
0x804a5d7:   0f b6 d0                        	movzx edx, al
0x804a5da:   0f be 85 7e ff ff ff            	movsx eax, byte ptr [ebp - 0x82]
0x804a5e1:   39 c2                           	cmp edx, eax
0x804a5e3:   0f 95 c0                        	setne al
0x804a5e6:   0f b6 c0                        	movzx eax, al
0x804a5e9:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a5ec:   e9 07 02 00 00                  	jmp 0x804a7f8 <func_1+0x1054>
0x804a5f1:   c7 85 f8 fe ff ff 5c 4e 67 ab   	mov dword ptr [ebp - 0x108], 0xab674e5c
0x804a5fb:   c7 85 f4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x10c], 0
0x804a605:   c7 85 f0 fe ff ff 0c 20 41 98   	mov dword ptr [ebp - 0x110], 0x9841200c
0x804a60f:   8b 85 f8 fe ff ff               	mov eax, dword ptr [ebp - 0x108]
0x804a615:   0d af b0 e4 d9                  	or eax, 0xd9e4b0af
0x804a61a:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a61d:   66 83 bd 58 ff ff ff 00         	cmp word ptr [ebp - 0xa8], 0
0x804a625:   74 4a                           	je 0x804a671 <func_1+0xecd>
0x804a627:   c7 85 d8 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x128], 1
0x804a631:   66 c7 85 d6 fe ff ff 98 36      	mov word ptr [ebp - 0x12a], 0x3698
0x804a63a:   0f be 85 7e ff ff ff            	movsx eax, byte ptr [ebp - 0x82]
0x804a641:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x804a647:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a64a:   0b 45 8c                        	or eax, dword ptr [ebp - 0x74]
0x804a64d:   39 85 f8 fe ff ff               	cmp dword ptr [ebp - 0x108], eax
0x804a653:   0f 9f c0                        	setg al
0x804a656:   0f b6 d0                        	movzx edx, al
0x804a659:   0f bf 85 7c ff ff ff            	movsx eax, word ptr [ebp - 0x84]
0x804a660:   39 c2                           	cmp edx, eax
0x804a662:   0f b6 45 e1                     	movzx eax, byte ptr [ebp - 0x1f]
0x804a666:   89 85 28 ff ff ff               	mov dword ptr [ebp - 0xd8], eax
0x804a66c:   e9 ca 00 00 00                  	jmp 0x804a73b <func_1+0xf97>
0x804a671:   c7 85 ec fe ff ff e3 48 0e 91   	mov dword ptr [ebp - 0x114], 0x910e48e3
0x804a67b:   c7 85 e8 fe ff ff fa ff ff ff   	mov dword ptr [ebp - 0x118], 0xfffffffa
0x804a685:   c7 85 e4 fe ff ff 7f 23 33 d0   	mov dword ptr [ebp - 0x11c], 0xd033237f
0x804a68f:   c7 85 e0 fe ff ff 08 f9 d0 9a   	mov dword ptr [ebp - 0x120], 0x9ad0f908
0x804a699:   c6 45 db ec                     	mov byte ptr [ebp - 0x25], 0xec
0x804a69d:   eb 4c                           	jmp 0x804a6eb <func_1+0xf47>
0x804a69f:   c7 85 dc fe ff ff 62 fc 2e 8b   	mov dword ptr [ebp - 0x124], 0x8b2efc62
0x804a6a9:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a6ac:   89 85 e8 fe ff ff               	mov dword ptr [ebp - 0x118], eax
0x804a6b2:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x804a6b8:   0b 45 c0                        	or eax, dword ptr [ebp - 0x40]
0x804a6bb:   85 c0                           	test eax, eax
0x804a6bd:   74 07                           	je 0x804a6c6 <func_1+0xf22>
0x804a6bf:   83 bd 74 ff ff ff 00            	cmp dword ptr [ebp - 0x8c], 0
0x804a6c6:   83 bd ec fe ff ff 01            	cmp dword ptr [ebp - 0x114], 1
0x804a6cd:   0f 94 c0                        	sete al
0x804a6d0:   0f b6 c0                        	movzx eax, al
0x804a6d3:   09 45 d4                        	or dword ptr [ebp - 0x2c], eax
0x804a6d6:   80 7d aa 00                     	cmp byte ptr [ebp - 0x56], 0
0x804a6da:   74 05                           	je 0x804a6e1 <func_1+0xf3d>
0x804a6dc:   e9 7b f3 ff ff                  	jmp 0x8049a5c <func_1+0x2b8>
0x804a6e1:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804a6e5:   83 c0 06                        	add eax, 6
0x804a6e8:   88 45 db                        	mov byte ptr [ebp - 0x25], al
0x804a6eb:   80 7d db f8                     	cmp byte ptr [ebp - 0x25], 0xf8
0x804a6ef:   75 ae                           	jne 0x804a69f <func_1+0xefb>
0x804a6f1:   83 ad 20 ff ff ff 01            	sub dword ptr [ebp - 0xe0], 1
0x804a6f8:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a6fe:   89 c3                           	mov ebx, eax
0x804a700:   0f b7 45 be                     	movzx eax, word ptr [ebp - 0x42]
0x804a704:   0f be c0                        	movsx eax, al
0x804a707:   8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x804a70a:   0f be ca                        	movsx ecx, dl
0x804a70d:   99                              	cdq 
0x804a70e:   f7 f9                           	idiv ecx
0x804a710:   89 d0                           	mov eax, edx
0x804a712:   21 d8                           	and eax, ebx
0x804a714:   ba 36 00 00 00                  	mov edx, 0x36
0x804a719:   0f af c2                        	imul eax, edx
0x804a71c:   0f be d0                        	movsx edx, al
0x804a71f:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a722:   0f be c0                        	movsx eax, al
0x804a725:   01 d0                           	add eax, edx
0x804a727:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a72a:   7f 07                           	jg 0x804a733 <func_1+0xf8f>
0x804a72c:   b8 38 2e 00 00                  	mov eax, 0x2e38
0x804a731:   eb 05                           	jmp 0x804a738 <func_1+0xf94>
0x804a733:   b8 00 00 00 00                  	mov eax, 0
0x804a738:   31 45 cc                        	xor dword ptr [ebp - 0x34], eax
0x804a73b:   0f bf 9d 7c ff ff ff            	movsx ebx, word ptr [ebp - 0x84]
0x804a742:   80 7d bd 00                     	cmp byte ptr [ebp - 0x43], 0
0x804a746:   74 3c                           	je 0x804a784 <func_1+0xfe0>
0x804a748:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a74b:   0f be c0                        	movsx eax, al
0x804a74e:   ba 04 00 00 00                  	mov edx, 4
0x804a753:   89 c1                           	mov ecx, eax
0x804a755:   d3 fa                           	sar edx, cl
0x804a757:   89 d0                           	mov eax, edx
0x804a759:   3d aa d3 6a ca                  	cmp eax, 0xca6ad3aa
0x804a75e:   0f 96 c0                        	setbe al
0x804a761:   0f b6 c0                        	movzx eax, al
0x804a764:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804a767:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a76a:   88 45 db                        	mov byte ptr [ebp - 0x25], al
0x804a76d:   66 0f be 45 db                  	movsx ax, byte ptr [ebp - 0x25]
0x804a772:   66 89 45 ba                     	mov word ptr [ebp - 0x46], ax
0x804a776:   66 83 7d ba 00                  	cmp word ptr [ebp - 0x46], 0
0x804a77b:   74 07                           	je 0x804a784 <func_1+0xfe0>
0x804a77d:   b8 01 00 00 00                  	mov eax, 1
0x804a782:   eb 05                           	jmp 0x804a789 <func_1+0xfe5>
0x804a784:   b8 00 00 00 00                  	mov eax, 0
0x804a789:   09 45 ac                        	or dword ptr [ebp - 0x54], eax
0x804a78c:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a78f:   83 f0 1e                        	xor eax, 0x1e
0x804a792:   0f b6 c0                        	movzx eax, al
0x804a795:   6b c0 2e                        	imul eax, eax, 0x2e
0x804a798:   39 45 8c                        	cmp dword ptr [ebp - 0x74], eax
0x804a79b:   7d 07                           	jge 0x804a7a4 <func_1+0x1000>
0x804a79d:   b8 e7 ff ff ff                  	mov eax, 0xffffffe7
0x804a7a2:   eb 05                           	jmp 0x804a7a9 <func_1+0x1005>
0x804a7a4:   b8 e6 ff ff ff                  	mov eax, 0xffffffe6
0x804a7a9:   8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x804a7ac:   0f be ca                        	movsx ecx, dl
0x804a7af:   99                              	cdq 
0x804a7b0:   f7 f9                           	idiv ecx
0x804a7b2:   0f bf 45 e2                     	movsx eax, word ptr [ebp - 0x1e]
0x804a7b6:   39 c2                           	cmp edx, eax
0x804a7b8:   0f 95 c0                        	setne al
0x804a7bb:   0f b6 c0                        	movzx eax, al
0x804a7be:   f6 65 e9                        	mul byte ptr [ebp - 0x17]
0x804a7c1:   0f be d0                        	movsx edx, al
0x804a7c4:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x804a7ca:   0f be c0                        	movsx eax, al
0x804a7cd:   29 c2                           	sub edx, eax
0x804a7cf:   89 d0                           	mov eax, edx
0x804a7d1:   39 85 f8 fe ff ff               	cmp dword ptr [ebp - 0x108], eax
0x804a7d7:   0f 9f c0                        	setg al
0x804a7da:   0f b6 c0                        	movzx eax, al
0x804a7dd:   09 d8                           	or eax, ebx
0x804a7df:   3d 80 00 00 00                  	cmp eax, 0x80
0x804a7e4:   8b 85 f0 fe ff ff               	mov eax, dword ptr [ebp - 0x110]
0x804a7ea:   89 85 2c ff ff ff               	mov dword ptr [ebp - 0xd4], eax
0x804a7f0:   eb 06                           	jmp 0x804a7f8 <func_1+0x1054>
0x804a7f2:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x804a7f6:   75 62                           	jne 0x804a85a <func_1+0x10b6>
0x804a7f8:   0f be 8d 7e ff ff ff            	movsx ecx, byte ptr [ebp - 0x82]
0x804a7ff:   ba 29 f7 de 90                  	mov edx, 0x90def729
0x804a804:   89 c8                           	mov eax, ecx
0x804a806:   f7 ea                           	imul edx
0x804a808:   8d 04 0a                        	lea eax, [edx + ecx]
0x804a80b:   c1 f8 0b                        	sar eax, 0xb
0x804a80e:   89 c2                           	mov edx, eax
0x804a810:   89 c8                           	mov eax, ecx
0x804a812:   c1 f8 1f                        	sar eax, 0x1f
0x804a815:   29 c2                           	sub edx, eax
0x804a817:   89 d0                           	mov eax, edx
0x804a819:   69 c0 23 0e 00 00               	imul eax, eax, 0xe23
0x804a81f:   29 c1                           	sub ecx, eax
0x804a821:   89 c8                           	mov eax, ecx
0x804a823:   0f bf 4d be                     	movsx ecx, word ptr [ebp - 0x42]
0x804a827:   0f b7 55 ea                     	movzx edx, word ptr [ebp - 0x16]
0x804a82b:   39 d1                           	cmp ecx, edx
0x804a82d:   0f 9d c2                        	setge dl
0x804a830:   0f b6 d2                        	movzx edx, dl
0x804a833:   33 55 88                        	xor edx, dword ptr [ebp - 0x78]
0x804a836:   39 55 f0                        	cmp dword ptr [ebp - 0x10], edx
0x804a839:   0f 95 c2                        	setne dl
0x804a83c:   0f b6 d2                        	movzx edx, dl
0x804a83f:   31 d0                           	xor eax, edx
0x804a841:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a844:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x804a848:   83 c0 01                        	add eax, 1
0x804a84b:   88 45 e9                        	mov byte ptr [ebp - 0x17], al
0x804a84e:   80 7d e9 15                     	cmp byte ptr [ebp - 0x17], 0x15
0x804a852:   0f 86 16 f2 ff ff               	jbe 0x8049a6e <func_1+0x2ca>
0x804a858:   eb 01                           	jmp 0x804a85b <func_1+0x10b7>
0x804a85a:   90                              	nop 
0x804a85b:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a861:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a864:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a868:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x804a86b:   0f 9c c0                        	setl al
0x804a86e:   0f b6 c0                        	movzx eax, al
0x804a871:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a874:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804a878:   0f 84 85 00 00 00               	je 0x804a903 <func_1+0x115f>
0x804a87e:   c6 85 a7 fe ff ff ec            	mov byte ptr [ebp - 0x159], 0xec
0x804a885:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a888:   c0 e8 04                        	shr al, 4
0x804a88b:   0f b6 c8                        	movzx ecx, al
0x804a88e:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a891:   0f be c0                        	movsx eax, al
0x804a894:   c1 e0 05                        	shl eax, 5
0x804a897:   89 c6                           	mov esi, eax
0x804a899:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a89c:   0f be c0                        	movsx eax, al
0x804a89f:   8b 55 a0                        	mov edx, dword ptr [ebp - 0x60]
0x804a8a2:   88 95 a7 fe ff ff               	mov byte ptr [ebp - 0x159], dl
0x804a8a8:   0f b6 95 a7 fe ff ff            	movzx edx, byte ptr [ebp - 0x159]
0x804a8af:   0f be da                        	movsx ebx, dl
0x804a8b2:   99                              	cdq 
0x804a8b3:   f7 fb                           	idiv ebx
0x804a8b5:   89 d0                           	mov eax, edx
0x804a8b7:   39 c6                           	cmp esi, eax
0x804a8b9:   75 07                           	jne 0x804a8c2 <func_1+0x111e>
0x804a8bb:   b8 02 00 00 00                  	mov eax, 2
0x804a8c0:   eb 05                           	jmp 0x804a8c7 <func_1+0x1123>
0x804a8c2:   b8 01 00 00 00                  	mov eax, 1
0x804a8c7:   31 c8                           	xor eax, ecx
0x804a8c9:   35 ff 91 00 00                  	xor eax, 0x91ff
0x804a8ce:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a8d1:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a8d4:   66 c1 e8 0b                     	shr ax, 0xb
0x804a8d8:   66 85 c0                        	test ax, ax
0x804a8db:   0f 95 c0                        	setne al
0x804a8de:   0f b6 c0                        	movzx eax, al
0x804a8e1:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a8e4:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x804a8e8:   83 f0 01                        	xor eax, 1
0x804a8eb:   98                              	cwde 
0x804a8ec:   39 45 b0                        	cmp dword ptr [ebp - 0x50], eax
0x804a8ef:   0f 94 c0                        	sete al
0x804a8f2:   0f b6 c0                        	movzx eax, al
0x804a8f5:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a8f8:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a8fb:   31 45 cc                        	xor dword ptr [ebp - 0x34], eax
0x804a8fe:   e9 86 01 00 00                  	jmp 0x804aa89 <func_1+0x12e5>
0x804a903:   c7 85 b8 fe ff ff 8a 3c 94 6c   	mov dword ptr [ebp - 0x148], 0x6c943c8a
0x804a90d:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a910:   33 85 b8 fe ff ff               	xor eax, dword ptr [ebp - 0x148]
0x804a916:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a919:   66 c7 45 9a 03 00               	mov word ptr [ebp - 0x66], 3
0x804a91f:   eb 2d                           	jmp 0x804a94e <func_1+0x11aa>
0x804a921:   66 83 bd 7c ff ff ff 00         	cmp word ptr [ebp - 0x84], 0
0x804a929:   75 09                           	jne 0x804a934 <func_1+0x1190>
0x804a92b:   83 bd b8 fe ff ff 00            	cmp dword ptr [ebp - 0x148], 0
0x804a932:   74 07                           	je 0x804a93b <func_1+0x1197>
0x804a934:   b8 01 00 00 00                  	mov eax, 1
0x804a939:   eb 05                           	jmp 0x804a940 <func_1+0x119c>
0x804a93b:   b8 00 00 00 00                  	mov eax, 0
0x804a940:   09 45 d4                        	or dword ptr [ebp - 0x2c], eax
0x804a943:   0f b7 45 9a                     	movzx eax, word ptr [ebp - 0x66]
0x804a947:   83 e8 03                        	sub eax, 3
0x804a94a:   66 89 45 9a                     	mov word ptr [ebp - 0x66], ax
0x804a94e:   66 83 7d 9a ff                  	cmp word ptr [ebp - 0x66], -1
0x804a953:   7d cc                           	jge 0x804a921 <func_1+0x117d>
0x804a955:   c7 45 b4 00 00 00 00            	mov dword ptr [ebp - 0x4c], 0
0x804a95c:   e9 1e 01 00 00                  	jmp 0x804aa7f <func_1+0x12db>
0x804a961:   c7 85 b4 fe ff ff d5 ca 26 59   	mov dword ptr [ebp - 0x14c], 0x5926cad5
0x804a96b:   c7 85 b0 fe ff ff fd ff ff ff   	mov dword ptr [ebp - 0x150], 0xfffffffd
0x804a975:   8b 85 b4 fe ff ff               	mov eax, dword ptr [ebp - 0x14c]
0x804a97b:   3b 45 f0                        	cmp eax, dword ptr [ebp - 0x10]
0x804a97e:   0f 9f c0                        	setg al
0x804a981:   0f b6 c0                        	movzx eax, al
0x804a984:   39 45 cc                        	cmp dword ptr [ebp - 0x34], eax
0x804a987:   0f 9f c0                        	setg al
0x804a98a:   0f b6 c0                        	movzx eax, al
0x804a98d:   21 45 d4                        	and dword ptr [ebp - 0x2c], eax
0x804a990:   c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0x804a997:   eb 70                           	jmp 0x804aa09 <func_1+0x1265>
0x804a999:   c7 85 a8 fe ff ff 7a 88 34 08   	mov dword ptr [ebp - 0x158], 0x834887a
0x804a9a3:   c7 45 9c 17 00 00 00            	mov dword ptr [ebp - 0x64], 0x17
0x804a9aa:   eb 53                           	jmp 0x804a9ff <func_1+0x125b>
0x804a9ac:   8b 85 b4 fe ff ff               	mov eax, dword ptr [ebp - 0x14c]
0x804a9b2:   89 85 a8 fe ff ff               	mov dword ptr [ebp - 0x158], eax
0x804a9b8:   8b bd a8 fe ff ff               	mov edi, dword ptr [ebp - 0x158]
0x804a9be:   b8 c4 fb f6 df                  	mov eax, 0xdff6fbc4
0x804a9c3:   ba 00 00 00 00                  	mov edx, 0
0x804a9c8:   f7 f7                           	div edi
0x804a9ca:   89 c2                           	mov edx, eax
0x804a9cc:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a9cf:   89 c1                           	mov ecx, eax
0x804a9d1:   89 d0                           	mov eax, edx
0x804a9d3:   ba 00 00 00 00                  	mov edx, 0
0x804a9d8:   66 f7 f1                        	div cx
0x804a9db:   89 d0                           	mov eax, edx
0x804a9dd:   66 39 45 ea                     	cmp word ptr [ebp - 0x16], ax
0x804a9e1:   0f 94 c0                        	sete al
0x804a9e4:   0f b6 c0                        	movzx eax, al
0x804a9e7:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a9ea:   0f b7 55 ea                     	movzx edx, word ptr [ebp - 0x16]
0x804a9ee:   8b 85 b4 fe ff ff               	mov eax, dword ptr [ebp - 0x14c]
0x804a9f4:   29 c2                           	sub edx, eax
0x804a9f6:   89 d0                           	mov eax, edx
0x804a9f8:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a9fb:   83 6d 9c 01                     	sub dword ptr [ebp - 0x64], 1
0x804a9ff:   83 7d 9c 0c                     	cmp dword ptr [ebp - 0x64], 0xc
0x804aa03:   77 a7                           	ja 0x804a9ac <func_1+0x1208>
0x804aa05:   83 45 ac 09                     	add dword ptr [ebp - 0x54], 9
0x804aa09:   83 7d ac 1b                     	cmp dword ptr [ebp - 0x54], 0x1b
0x804aa0d:   74 8a                           	je 0x804a999 <func_1+0x11f5>
0x804aa0f:   c7 45 a0 1d 00 00 00            	mov dword ptr [ebp - 0x60], 0x1d
0x804aa16:   eb 52                           	jmp 0x804aa6a <func_1+0x12c6>
0x804aa18:   c7 85 ac fe ff ff c8 e6 8d e6   	mov dword ptr [ebp - 0x154], 0xe68de6c8
0x804aa22:   8b 85 ac fe ff ff               	mov eax, dword ptr [ebp - 0x154]
0x804aa28:   09 45 cc                        	or dword ptr [ebp - 0x34], eax
0x804aa2b:   0f bf 85 7c ff ff ff            	movsx eax, word ptr [ebp - 0x84]
0x804aa32:   8b 95 ac fe ff ff               	mov edx, dword ptr [ebp - 0x154]
0x804aa38:   0f be d2                        	movsx edx, dl
0x804aa3b:   83 c2 6b                        	add edx, 0x6b
0x804aa3e:   81 fa 93 00 00 00               	cmp edx, 0x93
0x804aa44:   0f 9f c2                        	setg dl
0x804aa47:   0f b6 ca                        	movzx ecx, dl
0x804aa4a:   0f bf 55 be                     	movsx edx, word ptr [ebp - 0x42]
0x804aa4e:   39 d1                           	cmp ecx, edx
0x804aa50:   75 07                           	jne 0x804aa59 <func_1+0x12b5>
0x804aa52:   ba 04 00 00 00                  	mov edx, 4
0x804aa57:   eb 05                           	jmp 0x804aa5e <func_1+0x12ba>
0x804aa59:   ba 00 00 00 00                  	mov edx, 0
0x804aa5e:   21 d0                           	and eax, edx
0x804aa60:   89 85 b0 fe ff ff               	mov dword ptr [ebp - 0x150], eax
0x804aa66:   83 6d a0 01                     	sub dword ptr [ebp - 0x60], 1
0x804aa6a:   83 7d a0 11                     	cmp dword ptr [ebp - 0x60], 0x11
0x804aa6e:   7e a8                           	jle 0x804aa18 <func_1+0x1274>
0x804aa70:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804aa74:   74 05                           	je 0x804aa7b <func_1+0x12d7>
0x804aa76:   e9 ea ef ff ff                  	jmp 0x8049a65 <func_1+0x2c1>
0x804aa7b:   83 45 b4 01                     	add dword ptr [ebp - 0x4c], 1
0x804aa7f:   83 7d b4 04                     	cmp dword ptr [ebp - 0x4c], 4
0x804aa83:   0f 8e d8 fe ff ff               	jle 0x804a961 <func_1+0x11bd>
0x804aa89:   0f bf 55 ba                     	movsx edx, word ptr [ebp - 0x46]
0x804aa8d:   0f b6 5d bd                     	movzx ebx, byte ptr [ebp - 0x43]
0x804aa91:   0f bf bd 7c ff ff ff            	movsx edi, word ptr [ebp - 0x84]
0x804aa98:   0f bf 45 be                     	movsx eax, word ptr [ebp - 0x42]
0x804aa9c:   89 85 a0 fe ff ff               	mov dword ptr [ebp - 0x160], eax
0x804aaa2:   0f b6 75 c7                     	movzx esi, byte ptr [ebp - 0x39]
0x804aaa6:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x804aaac:   0f be 4d db                     	movsx ecx, byte ptr [ebp - 0x25]
0x804aab0:   89 8d 98 fe ff ff               	mov dword ptr [ebp - 0x168], ecx
0x804aab6:   0f b6 45 e1                     	movzx eax, byte ptr [ebp - 0x1f]
0x804aaba:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x804aac0:   0f bf 75 e2                     	movsx esi, word ptr [ebp - 0x1e]
0x804aac4:   0f b6 4d e9                     	movzx ecx, byte ptr [ebp - 0x17]
0x804aac8:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804aacc:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804aacf:   52                              	push edx
0x804aad0:   53                              	push ebx
0x804aad1:   57                              	push edi
0x804aad2:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804aad8:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804aadb:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804aae1:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804aae4:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804aae7:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804aaea:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804aaed:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804aaf3:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804aaf6:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804aafc:   56                              	push esi
0x804aafd:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804ab00:   51                              	push ecx
0x804ab01:   50                              	push eax
0x804ab02:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804ab05:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804ab08:   e8 47 eb ff ff                  	call 0x8049654 <set_var>
0x804ab0d:   83 c4 50                        	add esp, 0x50
0x804ab10:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804ab13:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804ab16:   5b                              	pop ebx
0x804ab17:   5e                              	pop esi
0x804ab18:   5f                              	pop edi
0x804ab19:   5d                              	pop ebp
0x804ab1a:   c3                              	ret 
; function: main at 0x804ab1b -- 0x804ae19
0x804ab1b:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804ab1f:   83 e4 f0                        	and esp, 0xfffffff0
0x804ab22:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804ab25:   55                              	push ebp
0x804ab26:   89 e5                           	mov ebp, esp
0x804ab28:   53                              	push ebx
0x804ab29:   51                              	push ecx
0x804ab2a:   83 ec 10                        	sub esp, 0x10
0x804ab2d:   e8 5e d8 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ab32:   81 c3 ce 24 00 00               	add ebx, 0x24ce
0x804ab38:   89 c8                           	mov eax, ecx
0x804ab3a:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804ab41:   83 38 02                        	cmp dword ptr [eax], 2
0x804ab44:   75 26                           	jne 0x804ab6c <main+0x51>
0x804ab46:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804ab49:   83 c0 04                        	add eax, 4
0x804ab4c:   8b 00                           	mov eax, dword ptr [eax]
0x804ab4e:   83 ec 08                        	sub esp, 8
0x804ab51:   8d 93 0d df ff ff               	lea edx, [ebx - 0x20f3]
0x804ab57:   52                              	push edx
0x804ab58:   50                              	push eax
0x804ab59:   e8 a2 d7 ff ff                  	call 0x8048300 <strcmp>
0x804ab5e:   83 c4 10                        	add esp, 0x10
0x804ab61:   85 c0                           	test eax, eax
0x804ab63:   75 07                           	jne 0x804ab6c <main+0x51>
0x804ab65:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804ab6c:   e8 e5 d8 ff ff                  	call 0x8048456 <platform_main_begin>
0x804ab71:   e8 f5 e8 ff ff                  	call 0x804946b <crc32_gentab>
0x804ab76:   e8 29 ec ff ff                  	call 0x80497a4 <func_1>
0x804ab7b:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804ab81:   89 c2                           	mov edx, eax
0x804ab83:   83 ec 04                        	sub esp, 4
0x804ab86:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab89:   8d 83 0f df ff ff               	lea eax, [ebx - 0x20f1]
0x804ab8f:   50                              	push eax
0x804ab90:   52                              	push edx
0x804ab91:   e8 e1 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab96:   83 c4 10                        	add esp, 0x10
0x804ab99:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804ab9f:   83 ec 04                        	sub esp, 4
0x804aba2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aba5:   8d 93 13 df ff ff               	lea edx, [ebx - 0x20ed]
0x804abab:   52                              	push edx
0x804abac:   50                              	push eax
0x804abad:   e8 c5 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abb2:   83 c4 10                        	add esp, 0x10
0x804abb5:   0f b7 83 2c 00 00 00            	movzx eax, word ptr [ebx + 0x2c]
0x804abbc:   0f b7 c0                        	movzx eax, ax
0x804abbf:   83 ec 04                        	sub esp, 4
0x804abc2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abc5:   8d 93 17 df ff ff               	lea edx, [ebx - 0x20e9]
0x804abcb:   52                              	push edx
0x804abcc:   50                              	push eax
0x804abcd:   e8 a5 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abd2:   83 c4 10                        	add esp, 0x10
0x804abd5:   0f b6 83 2e 00 00 00            	movzx eax, byte ptr [ebx + 0x2e]
0x804abdc:   0f b6 c0                        	movzx eax, al
0x804abdf:   83 ec 04                        	sub esp, 4
0x804abe2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abe5:   8d 93 1c df ff ff               	lea edx, [ebx - 0x20e4]
0x804abeb:   52                              	push edx
0x804abec:   50                              	push eax
0x804abed:   e8 85 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abf2:   83 c4 10                        	add esp, 0x10
0x804abf5:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804abfb:   83 ec 04                        	sub esp, 4
0x804abfe:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac01:   8d 93 21 df ff ff               	lea edx, [ebx - 0x20df]
0x804ac07:   52                              	push edx
0x804ac08:   50                              	push eax
0x804ac09:   e8 69 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac0e:   83 c4 10                        	add esp, 0x10
0x804ac11:   0f b7 83 34 00 00 00            	movzx eax, word ptr [ebx + 0x34]
0x804ac18:   98                              	cwde 
0x804ac19:   83 ec 04                        	sub esp, 4
0x804ac1c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac1f:   8d 93 26 df ff ff               	lea edx, [ebx - 0x20da]
0x804ac25:   52                              	push edx
0x804ac26:   50                              	push eax
0x804ac27:   e8 4b e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac2c:   83 c4 10                        	add esp, 0x10
0x804ac2f:   0f b6 83 36 00 00 00            	movzx eax, byte ptr [ebx + 0x36]
0x804ac36:   0f b6 c0                        	movzx eax, al
0x804ac39:   83 ec 04                        	sub esp, 4
0x804ac3c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac3f:   8d 93 2b df ff ff               	lea edx, [ebx - 0x20d5]
0x804ac45:   52                              	push edx
0x804ac46:   50                              	push eax
0x804ac47:   e8 2b e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac4c:   83 c4 10                        	add esp, 0x10
0x804ac4f:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804ac55:   89 c2                           	mov edx, eax
0x804ac57:   83 ec 04                        	sub esp, 4
0x804ac5a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac5d:   8d 83 30 df ff ff               	lea eax, [ebx - 0x20d0]
0x804ac63:   50                              	push eax
0x804ac64:   52                              	push edx
0x804ac65:   e8 0d e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac6a:   83 c4 10                        	add esp, 0x10
0x804ac6d:   0f b6 83 3c 00 00 00            	movzx eax, byte ptr [ebx + 0x3c]
0x804ac74:   0f be c0                        	movsx eax, al
0x804ac77:   83 ec 04                        	sub esp, 4
0x804ac7a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac7d:   8d 93 36 df ff ff               	lea edx, [ebx - 0x20ca]
0x804ac83:   52                              	push edx
0x804ac84:   50                              	push eax
0x804ac85:   e8 ed e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac8a:   83 c4 10                        	add esp, 0x10
0x804ac8d:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804ac93:   89 c2                           	mov edx, eax
0x804ac95:   83 ec 04                        	sub esp, 4
0x804ac98:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac9b:   8d 83 3c df ff ff               	lea eax, [ebx - 0x20c4]
0x804aca1:   50                              	push eax
0x804aca2:   52                              	push edx
0x804aca3:   e8 cf e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804aca8:   83 c4 10                        	add esp, 0x10
0x804acab:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804acb1:   83 ec 04                        	sub esp, 4
0x804acb4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acb7:   8d 93 42 df ff ff               	lea edx, [ebx - 0x20be]
0x804acbd:   52                              	push edx
0x804acbe:   50                              	push eax
0x804acbf:   e8 b3 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acc4:   83 c4 10                        	add esp, 0x10
0x804acc7:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804accd:   89 c2                           	mov edx, eax
0x804accf:   83 ec 04                        	sub esp, 4
0x804acd2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acd5:   8d 83 48 df ff ff               	lea eax, [ebx - 0x20b8]
0x804acdb:   50                              	push eax
0x804acdc:   52                              	push edx
0x804acdd:   e8 95 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ace2:   83 c4 10                        	add esp, 0x10
0x804ace5:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804aceb:   83 ec 04                        	sub esp, 4
0x804acee:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acf1:   8d 93 4e df ff ff               	lea edx, [ebx - 0x20b2]
0x804acf7:   52                              	push edx
0x804acf8:   50                              	push eax
0x804acf9:   e8 79 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acfe:   83 c4 10                        	add esp, 0x10
0x804ad01:   0f b6 83 50 00 00 00            	movzx eax, byte ptr [ebx + 0x50]
0x804ad08:   0f b6 c0                        	movzx eax, al
0x804ad0b:   83 ec 04                        	sub esp, 4
0x804ad0e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad11:   8d 93 54 df ff ff               	lea edx, [ebx - 0x20ac]
0x804ad17:   52                              	push edx
0x804ad18:   50                              	push eax
0x804ad19:   e8 59 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad1e:   83 c4 10                        	add esp, 0x10
0x804ad21:   b8 03 00 00 00                  	mov eax, 3
0x804ad26:   0f be c0                        	movsx eax, al
0x804ad29:   83 ec 04                        	sub esp, 4
0x804ad2c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad2f:   8d 93 5a df ff ff               	lea edx, [ebx - 0x20a6]
0x804ad35:   52                              	push edx
0x804ad36:   50                              	push eax
0x804ad37:   e8 3b e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad3c:   83 c4 10                        	add esp, 0x10
0x804ad3f:   8b 83 84 04 00 00               	mov eax, dword ptr [ebx + 0x484]
0x804ad45:   83 ec 04                        	sub esp, 4
0x804ad48:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad4b:   8d 93 60 df ff ff               	lea edx, [ebx - 0x20a0]
0x804ad51:   52                              	push edx
0x804ad52:   50                              	push eax
0x804ad53:   e8 1f e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad58:   83 c4 10                        	add esp, 0x10
0x804ad5b:   0f b7 83 52 00 00 00            	movzx eax, word ptr [ebx + 0x52]
0x804ad62:   98                              	cwde 
0x804ad63:   83 ec 04                        	sub esp, 4
0x804ad66:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad69:   8d 93 66 df ff ff               	lea edx, [ebx - 0x209a]
0x804ad6f:   52                              	push edx
0x804ad70:   50                              	push eax
0x804ad71:   e8 01 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad76:   83 c4 10                        	add esp, 0x10
0x804ad79:   0f b7 83 54 00 00 00            	movzx eax, word ptr [ebx + 0x54]
0x804ad80:   98                              	cwde 
0x804ad81:   83 ec 04                        	sub esp, 4
0x804ad84:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad87:   8d 93 6c df ff ff               	lea edx, [ebx - 0x2094]
0x804ad8d:   52                              	push edx
0x804ad8e:   50                              	push eax
0x804ad8f:   e8 e3 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad94:   83 c4 10                        	add esp, 0x10
0x804ad97:   0f b6 83 56 00 00 00            	movzx eax, byte ptr [ebx + 0x56]
0x804ad9e:   0f b6 c0                        	movzx eax, al
0x804ada1:   83 ec 04                        	sub esp, 4
0x804ada4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ada7:   8d 93 72 df ff ff               	lea edx, [ebx - 0x208e]
0x804adad:   52                              	push edx
0x804adae:   50                              	push eax
0x804adaf:   e8 c3 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adb4:   83 c4 10                        	add esp, 0x10
0x804adb7:   0f b7 83 58 00 00 00            	movzx eax, word ptr [ebx + 0x58]
0x804adbe:   98                              	cwde 
0x804adbf:   83 ec 04                        	sub esp, 4
0x804adc2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adc5:   8d 93 78 df ff ff               	lea edx, [ebx - 0x2088]
0x804adcb:   52                              	push edx
0x804adcc:   50                              	push eax
0x804adcd:   e8 a5 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804add2:   83 c4 10                        	add esp, 0x10
0x804add5:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804addb:   89 c2                           	mov edx, eax
0x804addd:   83 ec 04                        	sub esp, 4
0x804ade0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ade3:   8d 83 7e df ff ff               	lea eax, [ebx - 0x2082]
0x804ade9:   50                              	push eax
0x804adea:   52                              	push edx
0x804adeb:   e8 87 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adf0:   83 c4 10                        	add esp, 0x10
0x804adf3:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804adf9:   f7 d0                           	not eax
0x804adfb:   83 ec 08                        	sub esp, 8
0x804adfe:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae01:   50                              	push eax
0x804ae02:   e8 5f d6 ff ff                  	call 0x8048466 <platform_main_end>
0x804ae07:   83 c4 10                        	add esp, 0x10
0x804ae0a:   b8 00 00 00 00                  	mov eax, 0
0x804ae0f:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ae12:   59                              	pop ecx
0x804ae13:   5b                              	pop ebx
0x804ae14:   5d                              	pop ebp
0x804ae15:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ae18:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ae19 -- 0x804ae1d
0x804ae19:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ae1c:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804ae1d -- 0x804ae21
0x804ae1d:   8b 14 24                        	mov edx, dword ptr [esp]
0x804ae20:   c3                              	ret 
; data inside code section at 0x804ae21 -- 0x804ae30
0x804ae21:   66 90 66 90 66 90 66 90  66 90 66 90 66 90 90      |f.f.f.f.f.f.f.. |
; function: __libc_csu_init at 0x804ae30 -- 0x804ae8d
0x804ae30:   55                              	push ebp
0x804ae31:   57                              	push edi
0x804ae32:   56                              	push esi
0x804ae33:   53                              	push ebx
0x804ae34:   e8 57 d5 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ae39:   81 c3 c7 21 00 00               	add ebx, 0x21c7
0x804ae3f:   83 ec 0c                        	sub esp, 0xc
0x804ae42:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ae46:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ae4c:   e8 7b d4 ff ff                  	call 0x80482cc <_init>
0x804ae51:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804ae57:   29 c6                           	sub esi, eax
0x804ae59:   c1 fe 02                        	sar esi, 2
0x804ae5c:   85 f6                           	test esi, esi
0x804ae5e:   74 25                           	je 0x804ae85 <__libc_csu_init+0x55>
0x804ae60:   31 ff                           	xor edi, edi
0x804ae62:   8d b6 00 00 00 00               	lea esi, [esi]
0x804ae68:   83 ec 04                        	sub esp, 4
0x804ae6b:   55                              	push ebp
0x804ae6c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ae70:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ae74:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804ae7b:   83 c7 01                        	add edi, 1
0x804ae7e:   83 c4 10                        	add esp, 0x10
0x804ae81:   39 fe                           	cmp esi, edi
0x804ae83:   75 e3                           	jne 0x804ae68 <__libc_csu_init+0x38>
0x804ae85:   83 c4 0c                        	add esp, 0xc
0x804ae88:   5b                              	pop ebx
0x804ae89:   5e                              	pop esi
0x804ae8a:   5f                              	pop edi
0x804ae8b:   5d                              	pop ebp
0x804ae8c:   c3                              	ret 
; data inside code section at 0x804ae8d -- 0x804ae90
0x804ae8d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804ae90 -- 0x804ae92
0x804ae90:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804ae94 -- 0x804aea8
0x804ae94:   53                              	push ebx
0x804ae95:   83 ec 08                        	sub esp, 8
0x804ae98:   e8 f3 d4 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ae9d:   81 c3 63 21 00 00               	add ebx, 0x2163
0x804aea3:   83 c4 08                        	add esp, 8
0x804aea6:   5b                              	pop ebx
0x804aea7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 ac ae 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804aea8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804aeb8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804aec8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804aed8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804aee8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804aef8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804af08:   03 25 64 0a 00 31 00 67  5f 32 00 67 5f 35 00 67   |.%d..1.g_2.g_5.g|
0x804af18:   5f 32 33 00 67 5f 33 31  00 67 5f 35 31 00 67 5f   |_23.g_31.g_51.g_|
0x804af28:   35 32 00 67 5f 38 30 00  67 5f 31 34 34 00 67 5f   |52.g_80.g_144.g_|
0x804af38:   31 38 38 00 67 5f 32 30  32 00 67 5f 32 30 34 00   |188.g_202.g_204.|
0x804af48:   67 5f 32 36 39 00 67 5f  32 38 33 00 67 5f 32 38   |g_269.g_283.g_28|
0x804af58:   38 00 67 5f 33 30 34 00  67 5f 33 32 36 00 67 5f   |8.g_304.g_326.g_|
0x804af68:   33 36 34 00 67 5f 33 37  39 00 67 5f 33 38 30 00   |364.g_379.g_380.|
0x804af78:   67 5f 34 34 34 00 67 5f  34 35 36 00 00 00 00 3f   |g_444.g_456....?|
0x804af88:   ff ff ff 7e 00 00 80 0d  00 00 80 31 ff ff 7f 3f   |...~.......1...?|
0x804af98:   00 00 00 27 00 00 80 71  ff ff ff 34 00 00 00 00   |...'...q...4....|
0x804afa8:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804afb8:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804afc8:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804afd8:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804afe8:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804aff0:   01 1b 03 3b c0 02 00 00  57 00 00 00 00 d3 ff ff   |...;....W.......|
0x804b000:   f0 02 00 00 40 d3 ff ff  14 03 00 00 90 d3 ff ff   |....@...........|
0x804b010:   dc 02 00 00 66 d4 ff ff  28 03 00 00 76 d4 ff ff   |....f...(...v...|
0x804b020:   48 03 00 00 a4 d4 ff ff  6c 03 00 00 c2 d4 ff ff   |H.......l.......|
0x804b030:   8c 03 00 00 ea d4 ff ff  ac 03 00 00 14 d5 ff ff   |................|
0x804b040:   cc 03 00 00 3d d5 ff ff  ec 03 00 00 80 d5 ff ff   |....=...........|
0x804b050:   0c 04 00 00 c1 d5 ff ff  2c 04 00 00 19 d6 ff ff   |........,.......|
0x804b060:   50 04 00 00 6b d6 ff ff  74 04 00 00 a8 d6 ff ff   |P...k...t.......|
0x804b070:   94 04 00 00 df d6 ff ff  b4 04 00 00 fe d6 ff ff   |................|
0x804b080:   d4 04 00 00 28 d7 ff ff  f4 04 00 00 54 d7 ff ff   |....(.......T...|
0x804b090:   14 05 00 00 7f d7 ff ff  34 05 00 00 c8 d7 ff ff   |........4.......|
0x804b0a0:   54 05 00 00 0f d8 ff ff  74 05 00 00 69 d8 ff ff   |T.......t...i...|
0x804b0b0:   98 05 00 00 bd d8 ff ff  bc 05 00 00 fc d8 ff ff   |................|
0x804b0c0:   dc 05 00 00 35 d9 ff ff  fc 05 00 00 57 d9 ff ff   |....5.......W...|
0x804b0d0:   1c 06 00 00 a5 d9 ff ff  3c 06 00 00 e1 d9 ff ff   |........<.......|
0x804b0e0:   5c 06 00 00 6a da ff ff  7c 06 00 00 9c da ff ff   |\...j...|.......|
0x804b0f0:   9c 06 00 00 cc da ff ff  bc 06 00 00 11 db ff ff   |................|
0x804b100:   dc 06 00 00 50 db ff ff  fc 06 00 00 82 db ff ff   |....P...........|
0x804b110:   1c 07 00 00 ae db ff ff  3c 07 00 00 cc db ff ff   |........<.......|
0x804b120:   5c 07 00 00 f4 db ff ff  7c 07 00 00 19 dc ff ff   |\.......|.......|
0x804b130:   9c 07 00 00 3e dc ff ff  bc 07 00 00 75 dc ff ff   |....>.......u...|
0x804b140:   dc 07 00 00 a9 dc ff ff  fc 07 00 00 fb dc ff ff   |................|
0x804b150:   20 08 00 00 47 dd ff ff  44 08 00 00 7e dd ff ff   | ...G...D...~...|
0x804b160:   64 08 00 00 af dd ff ff  84 08 00 00 ce dd ff ff   |d...............|
0x804b170:   a4 08 00 00 f8 dd ff ff  c4 08 00 00 20 de ff ff   |............ ...|
0x804b180:   e4 08 00 00 49 de ff ff  04 09 00 00 85 de ff ff   |....I...........|
0x804b190:   24 09 00 00 bf de ff ff  44 09 00 00 12 df ff ff   |$.......D.......|
0x804b1a0:   68 09 00 00 5f df ff ff  8c 09 00 00 97 df ff ff   |h..._...........|
0x804b1b0:   ac 09 00 00 c9 df ff ff  cc 09 00 00 dd df ff ff   |................|
0x804b1c0:   ec 09 00 00 f4 df ff ff  0c 0a 00 00 09 e0 ff ff   |................|
0x804b1d0:   2c 0a 00 00 1f e0 ff ff  4c 0a 00 00 46 e0 ff ff   |,.......L...F...|
0x804b1e0:   6c 0a 00 00 6b e0 ff ff  8c 0a 00 00 aa e0 ff ff   |l...k...........|
0x804b1f0:   ac 0a 00 00 e3 e0 ff ff  cc 0a 00 00 0f e1 ff ff   |................|
0x804b200:   ec 0a 00 00 35 e1 ff ff  0c 0b 00 00 77 e1 ff ff   |....5.......w...|
0x804b210:   2c 0b 00 00 b9 e1 ff ff  4c 0b 00 00 fb e1 ff ff   |,.......L.......|
0x804b220:   6c 0b 00 00 70 e2 ff ff  8c 0b 00 00 cd e2 ff ff   |l...p...........|
0x804b230:   ac 0b 00 00 2a e3 ff ff  cc 0b 00 00 87 e3 ff ff   |....*...........|
0x804b240:   ec 0b 00 00 17 e4 ff ff  0c 0c 00 00 7b e4 ff ff   |............{...|
0x804b250:   2c 0c 00 00 eb e4 ff ff  4c 0c 00 00 32 e5 ff ff   |,.......L...2...|
0x804b260:   70 0c 00 00 87 e5 ff ff  90 0c 00 00 ce e5 ff ff   |p...............|
0x804b270:   b4 0c 00 00 36 e6 ff ff  d8 0c 00 00 64 e6 ff ff   |....6.......d...|
0x804b280:   fc 0c 00 00 b4 e7 ff ff  2c 0d 00 00 2b fb ff ff   |........,...+...|
0x804b290:   5c 0d 00 00 29 fe ff ff  94 0d 00 00 2d fe ff ff   |\...).......-...|
0x804b2a0:   a8 0d 00 00 40 fe ff ff  bc 0d 00 00 a0 fe ff ff   |....@...........|
0x804b2b0:   08 0e 00 00 14                                     |.....           |
; section: .eh_frame
0x804b2b4:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b2c4:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b2d4:   ac d0 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b2e4:   30 00 00 00 08 d0 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b2f4:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b304:   10 00 00 00 54 00 00 00  24 d0 ff ff 08 00 00 00   |....T...$.......|
0x804b314:   00 00 00 00 1c 00 00 00  68 00 00 00 36 d1 ff ff   |........h...6...|
0x804b324:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b334:   04 04 00 00 20 00 00 00  88 00 00 00 26 d1 ff ff   |.... .......&...|
0x804b344:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b354:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b364:   30 d1 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |0........A....B.|
0x804b374:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b384:   2e d1 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b394:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b3a4:   36 d1 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |6...*....A....B.|
0x804b3b4:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b3c4:   40 d1 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |@...)....A....B.|
0x804b3d4:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b3e4:   49 d1 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |I...C....A....B.|
0x804b3f4:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b404:   6c d1 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |l...A....A....B.|
0x804b414:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b424:   8d d1 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b434:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b444:   90 01 00 00 c1 d1 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b454:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b464:   1c 00 00 00 b4 01 00 00  ef d1 ff ff 3d 00 00 00   |............=...|
0x804b474:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b484:   1c 00 00 00 d4 01 00 00  0c d2 ff ff 37 00 00 00   |............7...|
0x804b494:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b4a4:   1c 00 00 00 f4 01 00 00  23 d2 ff ff 1f 00 00 00   |........#.......|
0x804b4b4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b4c4:   1c 00 00 00 14 02 00 00  22 d2 ff ff 2a 00 00 00   |........"...*...|
0x804b4d4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b4e4:   1c 00 00 00 34 02 00 00  2c d2 ff ff 2c 00 00 00   |....4...,...,...|
0x804b4f4:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b504:   1c 00 00 00 54 02 00 00  38 d2 ff ff 2b 00 00 00   |....T...8...+...|
0x804b514:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b524:   1c 00 00 00 74 02 00 00  43 d2 ff ff 49 00 00 00   |....t...C...I...|
0x804b534:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b544:   1c 00 00 00 94 02 00 00  6c d2 ff ff 47 00 00 00   |........l...G...|
0x804b554:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b564:   20 00 00 00 b4 02 00 00  93 d2 ff ff 5a 00 00 00   | ...........Z...|
0x804b574:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b584:   c5 0c 04 04 20 00 00 00  d8 02 00 00 c9 d2 ff ff   |.... ...........|
0x804b594:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b5a4:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b5b4:   f9 d2 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b5c4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b5d4:   18 d3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b5e4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b5f4:   31 d3 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |1..."....A....B.|
0x804b604:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b614:   33 d3 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |3...N....A....B.|
0x804b624:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b634:   61 d3 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |a...<....A....B.|
0x804b644:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b654:   7d d3 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |}........A....B.|
0x804b664:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b674:   e6 d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b684:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b694:   f8 d3 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b6a4:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b6b4:   08 d4 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b6c4:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b6d4:   2d d4 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |-...?....A....B.|
0x804b6e4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b6f4:   4c d4 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |L...2....A....B.|
0x804b704:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b714:   5e d4 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |^...,....A....B.|
0x804b724:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b734:   6a d4 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |j........A....B.|
0x804b744:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b754:   68 d4 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |h...(....A....B.|
0x804b764:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b774:   70 d4 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |p...%....A....B.|
0x804b784:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b794:   75 d4 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |u...%....A....B.|
0x804b7a4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b7b4:   7a d4 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |z...7....A....B.|
0x804b7c4:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b7d4:   91 d4 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b7e4:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b7f4:   a5 d4 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b804:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b814:   60 05 00 00 d3 d4 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b824:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b834:   1c 00 00 00 84 05 00 00  fb d4 ff ff 37 00 00 00   |............7...|
0x804b844:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b854:   1c 00 00 00 a4 05 00 00  12 d5 ff ff 31 00 00 00   |............1...|
0x804b864:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b874:   1c 00 00 00 c4 05 00 00  23 d5 ff ff 1f 00 00 00   |........#.......|
0x804b884:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b894:   1c 00 00 00 e4 05 00 00  22 d5 ff ff 2a 00 00 00   |........"...*...|
0x804b8a4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b8b4:   1c 00 00 00 04 06 00 00  2c d5 ff ff 28 00 00 00   |........,...(...|
0x804b8c4:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b8d4:   1c 00 00 00 24 06 00 00  34 d5 ff ff 29 00 00 00   |....$...4...)...|
0x804b8e4:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b8f4:   1c 00 00 00 44 06 00 00  3d d5 ff ff 3c 00 00 00   |....D...=...<...|
0x804b904:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b914:   1c 00 00 00 64 06 00 00  59 d5 ff ff 3a 00 00 00   |....d...Y...:...|
0x804b924:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b934:   20 00 00 00 84 06 00 00  73 d5 ff ff 53 00 00 00   | .......s...S...|
0x804b944:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b954:   c5 0c 04 04 20 00 00 00  a8 06 00 00 a2 d5 ff ff   |.... ...........|
0x804b964:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b974:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b984:   cb d5 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b994:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b9a4:   e3 d5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b9b4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b9c4:   f5 d5 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b9d4:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b9e4:   e9 d5 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b9f4:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804ba04:   e0 d5 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804ba14:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804ba24:   d5 d5 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804ba34:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804ba44:   cb d5 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804ba54:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804ba64:   d2 d5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ba74:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804ba84:   d7 d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804ba94:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804baa4:   f6 d5 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bab4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bac4:   0f d6 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bad4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bae4:   1b d6 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804baf4:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bb04:   21 d6 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |!...B....A....B.|
0x804bb14:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bb24:   43 d6 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |C...B....A....B.|
0x804bb34:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bb44:   65 d6 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |e...B....A....B.|
0x804bb54:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bb64:   87 d6 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804bb74:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bb84:   dc d6 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bb94:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bba4:   19 d7 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bbb4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bbc4:   56 d7 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |V...]....A....B.|
0x804bbd4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bbe4:   93 d7 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bbf4:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804bc04:   03 d8 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804bc14:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bc24:   47 d8 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |G...p....A....B.|
0x804bc34:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bc44:   97 d8 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804bc54:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bc64:   b0 09 00 00 ba d8 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804bc74:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bc84:   d0 09 00 00 ef d8 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804bc94:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bca4:   20 00 00 00 f4 09 00 00  12 d9 ff ff 68 00 00 00   | ...........h...|
0x804bcb4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bcc4:   0c 04 04 00 20 00 00 00  18 0a 00 00 56 d9 ff ff   |.... .......V...|
0x804bcd4:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804bce4:   66 c5 c3 0c 04 04 00 00  2c 00 00 00 3c 0a 00 00   |f.......,...<...|
0x804bcf4:   60 d9 ff ff 50 01 00 00  00 41 0e 08 85 02 42 0d   |`...P....A....B.|
0x804bd04:   05 46 87 03 86 04 83 05  03 43 01 c3 41 c6 41 c7   |.F.......C..A.A.|
0x804bd14:   41 c5 0c 04 04 00 00 00  2c 00 00 00 6c 0a 00 00   |A.......,...l...|
0x804bd24:   80 da ff ff 77 13 00 00  00 41 0e 08 85 02 42 0d   |....w....A....B.|
0x804bd34:   05 49 87 03 86 04 83 05  03 67 13 c3 41 c6 41 c7   |.I.......g..A.A.|
0x804bd44:   41 c5 0c 04 04 00 00 00  34 00 00 00 9c 0a 00 00   |A.......4.......|
0x804bd54:   c7 ed ff ff fe 02 00 00  00 44 0c 01 00 47 10 05   |.........D...G..|
0x804bd64:   02 75 00 44 0f 03 75 78  06 10 03 02 75 7c 03 e9   |.u.D..ux....u|..|
0x804bd74:   02 c1 0c 01 00 41 c3 41  c5 43 0c 04 04 00 00 00   |.....A.A.C......|
0x804bd84:   10 00 00 00 d4 0a 00 00  8d f0 ff ff 04 00 00 00   |................|
0x804bd94:   00 00 00 00 10 00 00 00  e8 0a 00 00 7d f0 ff ff   |............}...|
0x804bda4:   04 00 00 00 00 00 00 00  48 00 00 00 fc 0a 00 00   |........H.......|
0x804bdb4:   7c f0 ff ff 5d 00 00 00  00 41 0e 08 85 02 41 0e   ||...]....A....A.|
0x804bdc4:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 4e 0e 20   |...A....A....N. |
0x804bdd4:   69 0e 24 41 0e 28 44 0e  2c 44 0e 30 4d 0e 20 47   |i.$A.(D.,D.0M. G|
0x804bde4:   0e 14 41 c3 0e 10 41 c6  0e 0c 41 c7 0e 08 41 c5   |..A...A...A...A.|
0x804bdf4:   0e 04 00 00 10 00 00 00  48 0b 00 00 90 f0 ff ff   |........H.......|
0x804be04:   02 00 00 00 00 00 00 00  00 00 00 00 ??            |............?   |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 94 ae 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff 02 00 00 00   |................|
0x804d028:   3d a4 42 1e 52 53 67 00  47 f7 22 fc fc ff c2 00   |=.B.RSg.G.".....|
0x804d038:   fe ff ff ff 09 00 00 00  09 db ad f6 4e b4 bb 12   |............N...|
0x804d048:   ff ff ff ff 15 1b 92 68  c7 00 a0 a2 54 86 2c 00   |.......h....T.,.|
0x804d058:   23 13 00 00 92 4b 91 92  00                        |#....K...       |
