;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:18:27
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 40 d1 ff ff               	lea eax, [ebx - 0x2ec0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 e0 d0 ff ff               	lea eax, [ebx - 0x2f20]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 de aa 04 08               	mov eax, 0x804aade
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 9c e0 04 08                  	mov eax, 0x804e09c
0x80483a5:   3d 9c e0 04 08                  	cmp eax, 0x804e09c
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 9c e0 04 08                  	push 0x804e09c
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 9c e0 04 08                  	mov eax, 0x804e09c
0x80483e5:   2d 9c e0 04 08                  	sub eax, 0x804e09c
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 9c e0 04 08                  	push 0x804e09c
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d a0 e0 04 08 00            	cmp byte ptr [0x804e0a0], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 a0 e0 04 08 01            	mov byte ptr [0x804e0a0], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 70 2c 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 5c 2c 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 60 d1 ff ff               	lea edx, [eax - 0x2ea0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 2f 2c 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 11 2c 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 e9 2b 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 bf 2b 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 96 2b 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 53 2b 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 11 2b 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 b9 2a 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 68 2a 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 2b 2a 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 f4 29 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 d5 29 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 ab 29 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 7f 29 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 54 29 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 0b 29 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 c3 28 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 69 28 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 16 28 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 d7 27 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 a1 27 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 7f 27 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 31 27 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 f5 26 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 6c 26 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 3a 26 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 0a 26 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 c5 25 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 86 25 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 54 25 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 25 25 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 07 25 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 df 24 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 ba 24 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 95 24 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 5e 24 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 29 24 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 d7 23 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 8c 23 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 55 23 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 24 23 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 05 23 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 db 22 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 b3 22 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 8a 22 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 4e 22 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 13 22 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 c0 21 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 74 21 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 3c 21 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 0d 21 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 f9 20 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 e2 20 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 cd 20 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 b7 20 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 90 20 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 6b 20 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 2c 20 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 f3 1f 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 c7 1f 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 a1 1f 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 c4 d2 ff ff               	fld dword ptr [eax - 0x2d3c]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 c4 d2 ff ff               	fld dword ptr [eax - 0x2d3c]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 c8 d2 ff ff               	fld dword ptr [eax - 0x2d38]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 5f 1f 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 c4 d2 ff ff               	fld dword ptr [eax - 0x2d3c]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 c4 d2 ff ff               	fld dword ptr [eax - 0x2d3c]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 c8 d2 ff ff               	fld dword ptr [eax - 0x2d38]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 1d 1f 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 cc d2 ff ff               	fld dword ptr [eax - 0x2d34]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 d0 d2 ff ff               	fld dword ptr [eax - 0x2d30]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 d4 d2 ff ff               	fld dword ptr [eax - 0x2d2c]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 db 1e 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 d8 d2 ff ff               	fld dword ptr [eax - 0x2d28]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 dc d2 ff ff               	fld dword ptr [eax - 0x2d24]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 e0 d2 ff ff               	fld dword ptr [eax - 0x2d20]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 63 1e 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 e8 d2 ff ff               	fld qword ptr [eax - 0x2d18]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 e8 d2 ff ff               	fld qword ptr [eax - 0x2d18]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 f0 d2 ff ff               	fld qword ptr [eax - 0x2d10]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 06 1e 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 e8 d2 ff ff               	fld qword ptr [eax - 0x2d18]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 e8 d2 ff ff               	fld qword ptr [eax - 0x2d18]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 f0 d2 ff ff               	fld qword ptr [eax - 0x2d10]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 a9 1d 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 f8 d2 ff ff               	fld qword ptr [eax - 0x2d08]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 00 d3 ff ff               	fld qword ptr [eax - 0x2d00]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 08 d3 ff ff               	fld qword ptr [eax - 0x2cf8]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 4c 1d 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 10 d3 ff ff               	fld qword ptr [eax - 0x2cf0]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 18 d3 ff ff               	fld qword ptr [eax - 0x2ce8]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 20 d3 ff ff               	fld qword ptr [eax - 0x2ce0]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 bc 1c 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 28 d3 ff ff               	fld dword ptr [eax - 0x2cd8]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 2c d3 ff ff               	fld dword ptr [eax - 0x2cd4]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 58 1c 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 c0 00 00 00            	mov dword ptr [eax + edx*4 + 0xc0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 e7 1b 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 c0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xc0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 a4 1b 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 70 d1 ff ff               	lea eax, [ebx - 0x2e90]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 94 d1 ff ff               	lea eax, [ebx - 0x2e6c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80499cd
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   81 ec b0 00 00 00               	sub esp, 0xb0
0x8049632:   e8 9b 1a 00 00                  	call 0x804b0d2 <__x86.get_pc_thunk.dx>
0x8049637:   81 c2 c9 49 00 00               	add edx, 0x49c9
0x804963d:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x8049640:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049643:   8b 4d 24                        	mov ecx, dword ptr [ebp + 0x24]
0x8049646:   8b 5d 30                        	mov ebx, dword ptr [ebp + 0x30]
0x8049649:   8b 75 34                        	mov esi, dword ptr [ebp + 0x34]
0x804964c:   8b 7d 38                        	mov edi, dword ptr [ebp + 0x38]
0x804964f:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x8049652:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049655:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x8049658:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804965b:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x804965e:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049661:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049664:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x8049667:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x804966a:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x8049670:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x8049673:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x8049679:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x804967c:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x8049682:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x8049685:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x804968b:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x804968e:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x8049694:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x8049697:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x804969d:   8b 85 80 00 00 00               	mov eax, dword ptr [ebp + 0x80]
0x80496a3:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x80496a9:   8b 85 84 00 00 00               	mov eax, dword ptr [ebp + 0x84]
0x80496af:   89 85 60 ff ff ff               	mov dword ptr [ebp - 0xa0], eax
0x80496b5:   8b 85 88 00 00 00               	mov eax, dword ptr [ebp + 0x88]
0x80496bb:   89 85 5c ff ff ff               	mov dword ptr [ebp - 0xa4], eax
0x80496c1:   8b 85 90 00 00 00               	mov eax, dword ptr [ebp + 0x90]
0x80496c7:   89 85 58 ff ff ff               	mov dword ptr [ebp - 0xa8], eax
0x80496cd:   8b 85 98 00 00 00               	mov eax, dword ptr [ebp + 0x98]
0x80496d3:   89 85 54 ff ff ff               	mov dword ptr [ebp - 0xac], eax
0x80496d9:   8b 85 b0 00 00 00               	mov eax, dword ptr [ebp + 0xb0]
0x80496df:   89 85 50 ff ff ff               	mov dword ptr [ebp - 0xb0], eax
0x80496e5:   8b 85 b4 00 00 00               	mov eax, dword ptr [ebp + 0xb4]
0x80496eb:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x80496f1:   8b 85 b8 00 00 00               	mov eax, dword ptr [ebp + 0xb8]
0x80496f7:   89 85 48 ff ff ff               	mov dword ptr [ebp - 0xb8], eax
0x80496fd:   8b 85 bc 00 00 00               	mov eax, dword ptr [ebp + 0xbc]
0x8049703:   89 85 44 ff ff ff               	mov dword ptr [ebp - 0xbc], eax
0x8049709:   0f b6 45 90                     	movzx eax, byte ptr [ebp - 0x70]
0x804970d:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x8049710:   89 c8                           	mov eax, ecx
0x8049712:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x8049715:   89 d8                           	mov eax, ebx
0x8049717:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x804971a:   89 f0                           	mov eax, esi
0x804971c:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x804971f:   89 f8                           	mov eax, edi
0x8049721:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x8049724:   0f b7 45 8c                     	movzx eax, word ptr [ebp - 0x74]
0x8049728:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x804972c:   0f b7 45 88                     	movzx eax, word ptr [ebp - 0x78]
0x8049730:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x8049734:   0f b7 45 84                     	movzx eax, word ptr [ebp - 0x7c]
0x8049738:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x804973c:   0f b7 45 80                     	movzx eax, word ptr [ebp - 0x80]
0x8049740:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x8049744:   0f b7 85 7c ff ff ff            	movzx eax, word ptr [ebp - 0x84]
0x804974b:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x804974f:   0f b7 85 78 ff ff ff            	movzx eax, word ptr [ebp - 0x88]
0x8049756:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x804975a:   0f b6 85 74 ff ff ff            	movzx eax, byte ptr [ebp - 0x8c]
0x8049761:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x8049764:   0f b7 85 70 ff ff ff            	movzx eax, word ptr [ebp - 0x90]
0x804976b:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x804976f:   0f b7 85 6c ff ff ff            	movzx eax, word ptr [ebp - 0x94]
0x8049776:   66 89 45 bc                     	mov word ptr [ebp - 0x44], ax
0x804977a:   0f b6 85 68 ff ff ff            	movzx eax, byte ptr [ebp - 0x98]
0x8049781:   88 45 b8                        	mov byte ptr [ebp - 0x48], al
0x8049784:   0f b7 85 64 ff ff ff            	movzx eax, word ptr [ebp - 0x9c]
0x804978b:   66 89 45 b4                     	mov word ptr [ebp - 0x4c], ax
0x804978f:   0f b6 85 60 ff ff ff            	movzx eax, byte ptr [ebp - 0xa0]
0x8049796:   88 45 b0                        	mov byte ptr [ebp - 0x50], al
0x8049799:   0f b7 85 5c ff ff ff            	movzx eax, word ptr [ebp - 0xa4]
0x80497a0:   66 89 45 ac                     	mov word ptr [ebp - 0x54], ax
0x80497a4:   0f b7 85 58 ff ff ff            	movzx eax, word ptr [ebp - 0xa8]
0x80497ab:   66 89 45 a8                     	mov word ptr [ebp - 0x58], ax
0x80497af:   0f b6 85 54 ff ff ff            	movzx eax, byte ptr [ebp - 0xac]
0x80497b6:   88 45 a4                        	mov byte ptr [ebp - 0x5c], al
0x80497b9:   0f b7 85 50 ff ff ff            	movzx eax, word ptr [ebp - 0xb0]
0x80497c0:   66 89 45 a0                     	mov word ptr [ebp - 0x60], ax
0x80497c4:   0f b7 85 4c ff ff ff            	movzx eax, word ptr [ebp - 0xb4]
0x80497cb:   66 89 45 9c                     	mov word ptr [ebp - 0x64], ax
0x80497cf:   0f b6 85 48 ff ff ff            	movzx eax, byte ptr [ebp - 0xb8]
0x80497d6:   88 45 98                        	mov byte ptr [ebp - 0x68], al
0x80497d9:   0f b7 85 44 ff ff ff            	movzx eax, word ptr [ebp - 0xbc]
0x80497e0:   66 89 45 94                     	mov word ptr [ebp - 0x6c], ax
0x80497e4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80497e7:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x80497ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80497f0:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x80497f6:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x80497f9:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x80497ff:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x8049802:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x8049808:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x804980b:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x8049811:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x8049814:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x804981a:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x804981e:   88 82 3c 00 00 00               	mov byte ptr [edx + 0x3c], al
0x8049824:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x8049828:   88 82 3d 00 00 00               	mov byte ptr [edx + 0x3d], al
0x804982e:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x8049831:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x8049837:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x804983a:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x8049840:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x8049844:   88 82 48 00 00 00               	mov byte ptr [edx + 0x48], al
0x804984a:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x804984e:   88 82 49 00 00 00               	mov byte ptr [edx + 0x49], al
0x8049854:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049858:   88 82 4a 00 00 00               	mov byte ptr [edx + 0x4a], al
0x804985e:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049862:   66 89 82 4c 00 00 00            	mov word ptr [edx + 0x4c], ax
0x8049869:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x804986d:   66 89 82 4e 00 00 00            	mov word ptr [edx + 0x4e], ax
0x8049874:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049877:   89 82 c4 04 00 00               	mov dword ptr [edx + 0x4c4], eax
0x804987d:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049880:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x8049886:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x804988a:   66 89 82 c8 04 00 00            	mov word ptr [edx + 0x4c8], ax
0x8049891:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x8049895:   66 89 82 54 00 00 00            	mov word ptr [edx + 0x54], ax
0x804989c:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x80498a0:   66 89 82 56 00 00 00            	mov word ptr [edx + 0x56], ax
0x80498a7:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x80498aa:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x80498b0:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x80498b3:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x80498b9:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x80498bd:   66 89 82 60 00 00 00            	mov word ptr [edx + 0x60], ax
0x80498c4:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x80498c8:   88 82 62 00 00 00               	mov byte ptr [edx + 0x62], al
0x80498ce:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x80498d1:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x80498d7:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x80498db:   66 89 82 ca 04 00 00            	mov word ptr [edx + 0x4ca], ax
0x80498e2:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x80498e5:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x80498eb:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x80498ef:   66 89 82 6c 00 00 00            	mov word ptr [edx + 0x6c], ax
0x80498f6:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x80498f9:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x80498ff:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x8049903:   88 82 74 00 00 00               	mov byte ptr [edx + 0x74], al
0x8049909:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x804990d:   66 89 82 76 00 00 00            	mov word ptr [edx + 0x76], ax
0x8049914:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x8049918:   88 82 78 00 00 00               	mov byte ptr [edx + 0x78], al
0x804991e:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x8049922:   66 89 82 7a 00 00 00            	mov word ptr [edx + 0x7a], ax
0x8049929:   8b 85 8c 00 00 00               	mov eax, dword ptr [ebp + 0x8c]
0x804992f:   89 82 7c 00 00 00               	mov dword ptr [edx + 0x7c], eax
0x8049935:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x8049939:   66 89 82 80 00 00 00            	mov word ptr [edx + 0x80], ax
0x8049940:   8b 85 94 00 00 00               	mov eax, dword ptr [ebp + 0x94]
0x8049946:   89 82 cc 04 00 00               	mov dword ptr [edx + 0x4cc], eax
0x804994c:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x8049950:   88 82 82 00 00 00               	mov byte ptr [edx + 0x82], al
0x8049956:   8b 85 9c 00 00 00               	mov eax, dword ptr [ebp + 0x9c]
0x804995c:   89 82 84 00 00 00               	mov dword ptr [edx + 0x84], eax
0x8049962:   8b 85 a0 00 00 00               	mov eax, dword ptr [ebp + 0xa0]
0x8049968:   89 82 88 00 00 00               	mov dword ptr [edx + 0x88], eax
0x804996e:   8b 85 a4 00 00 00               	mov eax, dword ptr [ebp + 0xa4]
0x8049974:   89 82 8c 00 00 00               	mov dword ptr [edx + 0x8c], eax
0x804997a:   8b 85 a8 00 00 00               	mov eax, dword ptr [ebp + 0xa8]
0x8049980:   89 82 d0 04 00 00               	mov dword ptr [edx + 0x4d0], eax
0x8049986:   8b 85 ac 00 00 00               	mov eax, dword ptr [ebp + 0xac]
0x804998c:   89 82 90 00 00 00               	mov dword ptr [edx + 0x90], eax
0x8049992:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x8049996:   66 89 82 94 00 00 00            	mov word ptr [edx + 0x94], ax
0x804999d:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x80499a1:   66 89 82 96 00 00 00            	mov word ptr [edx + 0x96], ax
0x80499a8:   0f b6 45 98                     	movzx eax, byte ptr [ebp - 0x68]
0x80499ac:   88 82 98 00 00 00               	mov byte ptr [edx + 0x98], al
0x80499b2:   0f b7 45 94                     	movzx eax, word ptr [ebp - 0x6c]
0x80499b6:   66 89 82 9a 00 00 00            	mov word ptr [edx + 0x9a], ax
0x80499bd:   b8 00 00 00 00                  	mov eax, 0
0x80499c2:   81 c4 b0 00 00 00               	add esp, 0xb0
0x80499c8:   5b                              	pop ebx
0x80499c9:   5e                              	pop esi
0x80499ca:   5f                              	pop edi
0x80499cb:   5d                              	pop ebp
0x80499cc:   c3                              	ret 
; function: func_1 at 0x80499cd -- 0x804aade
0x80499cd:   55                              	push ebp
0x80499ce:   89 e5                           	mov ebp, esp
0x80499d0:   57                              	push edi
0x80499d1:   56                              	push esi
0x80499d2:   53                              	push ebx
0x80499d3:   81 ec 98 01 00 00               	sub esp, 0x198
0x80499d9:   e8 f0 16 00 00                  	call 0x804b0ce <__x86.get_pc_thunk.ax>
0x80499de:   05 22 46 00 00                  	add eax, 0x4622
0x80499e3:   c7 85 dc fe ff ff 92 1d be 29   	mov dword ptr [ebp - 0x124], 0x29be1d92
0x80499ed:   c7 45 f0 fc ff ff ff            	mov dword ptr [ebp - 0x10], 0xfffffffc
0x80499f4:   c7 45 ec 9d a9 bd 64            	mov dword ptr [ebp - 0x14], 0x64bda99d
0x80499fb:   c7 45 e8 1f 79 bd f3            	mov dword ptr [ebp - 0x18], 0xf3bd791f
0x8049a02:   c7 45 e4 08 00 00 00            	mov dword ptr [ebp - 0x1c], 8
0x8049a09:   c7 45 e0 10 0a 0c 5e            	mov dword ptr [ebp - 0x20], 0x5e0c0a10
0x8049a10:   c6 45 df f0                     	mov byte ptr [ebp - 0x21], 0xf0
0x8049a14:   c6 45 de 28                     	mov byte ptr [ebp - 0x22], 0x28
0x8049a18:   c7 45 d8 0f de fa 50            	mov dword ptr [ebp - 0x28], 0x50fade0f
0x8049a1f:   c7 45 d4 e1 c2 fc bc            	mov dword ptr [ebp - 0x2c], 0xbcfcc2e1
0x8049a26:   c6 85 7f ff ff ff a8            	mov byte ptr [ebp - 0x81], 0xa8
0x8049a2d:   c6 85 7e ff ff ff 04            	mov byte ptr [ebp - 0x82], 4
0x8049a34:   c6 85 7d ff ff ff da            	mov byte ptr [ebp - 0x83], 0xda
0x8049a3b:   66 c7 85 7a ff ff ff c0 c8      	mov word ptr [ebp - 0x86], 0xc8c0
0x8049a44:   66 c7 85 da fe ff ff ff ff      	mov word ptr [ebp - 0x126], 0xffff
0x8049a4d:   c7 85 54 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xac], 0
0x8049a57:   c7 85 50 ff ff ff 48 16 ee e6   	mov dword ptr [ebp - 0xb0], 0xe6ee1648
0x8049a61:   66 c7 85 4e ff ff ff 00 00      	mov word ptr [ebp - 0xb2], 0
0x8049a6a:   66 c7 85 4c ff ff ff 36 12      	mov word ptr [ebp - 0xb4], 0x1236
0x8049a73:   66 c7 85 4a ff ff ff f6 ff      	mov word ptr [ebp - 0xb6], 0xfff6
0x8049a7c:   c7 85 44 ff ff ff d0 77 30 c0   	mov dword ptr [ebp - 0xbc], 0xc03077d0
0x8049a86:   c7 85 40 ff ff ff 0a 79 6b 1c   	mov dword ptr [ebp - 0xc0], 0x1c6b790a
0x8049a90:   66 c7 85 3e ff ff ff 69 00      	mov word ptr [ebp - 0xc2], 0x69
0x8049a99:   c6 85 3d ff ff ff ff            	mov byte ptr [ebp - 0xc3], 0xff
0x8049aa0:   c7 85 38 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xc8], 1
0x8049aaa:   66 c7 85 36 ff ff ff 00 00      	mov word ptr [ebp - 0xca], 0
0x8049ab3:   c7 85 30 ff ff ff 04 00 00 00   	mov dword ptr [ebp - 0xd0], 4
0x8049abd:   66 c7 85 2e ff ff ff 04 00      	mov word ptr [ebp - 0xd2], 4
0x8049ac6:   c7 85 28 ff ff ff e6 b1 dd 49   	mov dword ptr [ebp - 0xd8], 0x49ddb1e6
0x8049ad0:   c6 85 27 ff ff ff f7            	mov byte ptr [ebp - 0xd9], 0xf7
0x8049ad7:   66 c7 85 24 ff ff ff 01 00      	mov word ptr [ebp - 0xdc], 1
0x8049ae0:   c6 85 23 ff ff ff c9            	mov byte ptr [ebp - 0xdd], 0xc9
0x8049ae7:   66 c7 85 20 ff ff ff 85 31      	mov word ptr [ebp - 0xe0], 0x3185
0x8049af0:   c7 85 1c ff ff ff 08 e0 76 64   	mov dword ptr [ebp - 0xe4], 0x6476e008
0x8049afa:   66 c7 85 1a ff ff ff 01 00      	mov word ptr [ebp - 0xe6], 1
0x8049b03:   c7 85 14 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xec], 0
0x8049b0d:   c6 85 13 ff ff ff fc            	mov byte ptr [ebp - 0xed], 0xfc
0x8049b14:   c7 85 0c ff ff ff c7 56 ad 83   	mov dword ptr [ebp - 0xf4], 0x83ad56c7
0x8049b1e:   c7 85 08 ff ff ff a4 79 00 a6   	mov dword ptr [ebp - 0xf8], 0xa60079a4
0x8049b28:   c7 85 04 ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xfc], 0xfffffff6
0x8049b32:   c7 85 00 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x100], 0
0x8049b3c:   c7 85 74 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x8c], 0xffffffff
0x8049b46:   66 c7 45 86 05 bb               	mov word ptr [ebp - 0x7a], 0xbb05
0x8049b4c:   66 c7 45 84 fc ff               	mov word ptr [ebp - 0x7c], 0xfffc
0x8049b52:   c6 45 ba 9b                     	mov byte ptr [ebp - 0x46], 0x9b
0x8049b56:   66 c7 45 b8 5c 56               	mov word ptr [ebp - 0x48], 0x565c
0x8049b5c:   c7 45 b4 8a c2 f9 61            	mov dword ptr [ebp - 0x4c], 0x61f9c28a
0x8049b63:   66 c7 45 b2 fc ff               	mov word ptr [ebp - 0x4e], 0xfffc
0x8049b69:   c7 45 ac ff ff ff ff            	mov dword ptr [ebp - 0x54], 0xffffffff
0x8049b70:   c7 45 a8 f6 ff ff ff            	mov dword ptr [ebp - 0x58], 0xfffffff6
0x8049b77:   c7 45 a4 b5 22 4b 04            	mov dword ptr [ebp - 0x5c], 0x44b22b5
0x8049b7e:   c6 45 a3 00                     	mov byte ptr [ebp - 0x5d], 0
0x8049b82:   c7 45 9c 00 00 00 00            	mov dword ptr [ebp - 0x64], 0
0x8049b89:   c6 45 9b 01                     	mov byte ptr [ebp - 0x65], 1
0x8049b8d:   66 c7 45 98 fa ff               	mov word ptr [ebp - 0x68], 0xfffa
0x8049b93:   c6 45 97 01                     	mov byte ptr [ebp - 0x69], 1
0x8049b97:   c6 45 c3 01                     	mov byte ptr [ebp - 0x3d], 1
0x8049b9b:   c6 45 c2 0a                     	mov byte ptr [ebp - 0x3e], 0xa
0x8049b9f:   c6 45 c1 ff                     	mov byte ptr [ebp - 0x3f], 0xff
0x8049ba3:   c7 45 bc 22 d3 0e e8            	mov dword ptr [ebp - 0x44], 0xe80ed322
0x8049baa:   c6 45 bb fd                     	mov byte ptr [ebp - 0x45], 0xfd
0x8049bae:   66 c7 85 c4 fe ff ff b1 ad      	mov word ptr [ebp - 0x13c], 0xadb1
0x8049bb7:   c7 85 c0 fe ff ff 07 00 00 00   	mov dword ptr [ebp - 0x140], 7
0x8049bc1:   c7 85 bc fe ff ff c7 c4 d2 d4   	mov dword ptr [ebp - 0x144], 0xd4d2c4c7
0x8049bcb:   c7 85 b8 fe ff ff 8c d2 e5 0f   	mov dword ptr [ebp - 0x148], 0xfe5d28c
0x8049bd5:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049bd8:   21 85 dc fe ff ff               	and dword ptr [ebp - 0x124], eax
0x8049bde:   83 bd dc fe ff ff 00            	cmp dword ptr [ebp - 0x124], 0
0x8049be5:   0f 84 ce 00 00 00               	je 0x8049cb9 <func_1+0x2ec>
0x8049beb:   c7 85 68 ff ff ff 34 dc 9c c5   	mov dword ptr [ebp - 0x98], 0xc59cdc34
0x8049bf5:   66 c7 85 d8 fe ff ff 01 00      	mov word ptr [ebp - 0x128], 1
0x8049bfe:   83 bd dc fe ff ff 00            	cmp dword ptr [ebp - 0x124], 0
0x8049c05:   74 45                           	je 0x8049c4c <func_1+0x27f>
0x8049c07:   c7 85 5c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa4], 0
0x8049c11:   c7 85 68 ff ff ff f7 ff ff ff   	mov dword ptr [ebp - 0x98], 0xfffffff7
0x8049c1b:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x8049c21:   0f b7 d0                        	movzx edx, ax
0x8049c24:   89 d0                           	mov eax, edx
0x8049c26:   c1 e0 03                        	shl eax, 3
0x8049c29:   01 d0                           	add eax, edx
0x8049c2b:   83 f8 ff                        	cmp eax, -1
0x8049c2e:   0f 94 c0                        	sete al
0x8049c31:   0f b6 c0                        	movzx eax, al
0x8049c34:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049c37:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049c3a:   33 85 dc fe ff ff               	xor eax, dword ptr [ebp - 0x124]
0x8049c40:   89 c2                           	mov edx, eax
0x8049c42:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049c45:   09 d0                           	or eax, edx
0x8049c47:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049c4a:   eb 64                           	jmp 0x8049cb0 <func_1+0x2e3>
0x8049c4c:   c7 85 60 ff ff ff 10 4e 03 f9   	mov dword ptr [ebp - 0xa0], 0xf9034e10
0x8049c56:   8b 85 dc fe ff ff               	mov eax, dword ptr [ebp - 0x124]
0x8049c5c:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049c5f:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x8049c63:   c1 f8 07                        	sar eax, 7
0x8049c66:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049c69:   8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x8049c6c:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x8049c72:   31 d0                           	xor eax, edx
0x8049c74:   89 85 60 ff ff ff               	mov dword ptr [ebp - 0xa0], eax
0x8049c7a:   b8 00 00 00 00                  	mov eax, 0
0x8049c7f:   21 45 e8                        	and dword ptr [ebp - 0x18], eax
0x8049c82:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x8049c89:   0f 9f c0                        	setg al
0x8049c8c:   0f b6 c0                        	movzx eax, al
0x8049c8f:   39 85 dc fe ff ff               	cmp dword ptr [ebp - 0x124], eax
0x8049c95:   0f 97 c0                        	seta al
0x8049c98:   0f b6 d0                        	movzx edx, al
0x8049c9b:   8b 85 dc fe ff ff               	mov eax, dword ptr [ebp - 0x124]
0x8049ca1:   0f b7 c0                        	movzx eax, ax
0x8049ca4:   29 c2                           	sub edx, eax
0x8049ca6:   89 d0                           	mov eax, edx
0x8049ca8:   25 ef 7f 00 00                  	and eax, 0x7fef
0x8049cad:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049cb0:   83 45 e0 01                     	add dword ptr [ebp - 0x20], 1
0x8049cb4:   e9 18 0c 00 00                  	jmp 0x804a8d1 <func_1+0xf04>
0x8049cb9:   c7 45 80 48 7a ae 6f            	mov dword ptr [ebp - 0x80], 0x6fae7a48
0x8049cc0:   c7 45 90 c9 17 ce 65            	mov dword ptr [ebp - 0x70], 0x65ce17c9
0x8049cc7:   c7 45 88 5a 3d 25 ec            	mov dword ptr [ebp - 0x78], 0xec253d5a
0x8049cce:   66 c7 85 b6 fe ff ff 07 00      	mov word ptr [ebp - 0x14a], 7
0x8049cd7:   c7 85 ec fe ff ff 00 03 06 72   	mov dword ptr [ebp - 0x114], 0x72060300
0x8049ce1:   c7 85 c8 fe ff ff cd b8 41 e0   	mov dword ptr [ebp - 0x138], 0xe041b8cd
0x8049ceb:   c7 45 8c 3b 0d fa 35            	mov dword ptr [ebp - 0x74], 0x35fa0d3b
0x8049cf2:   c7 85 e8 fe ff ff c8 11 50 5c   	mov dword ptr [ebp - 0x118], 0x5c5011c8
0x8049cfc:   c7 85 e4 fe ff ff 80 c4 da 5e   	mov dword ptr [ebp - 0x11c], 0x5edac480
0x8049d06:   c6 85 e3 fe ff ff 12            	mov byte ptr [ebp - 0x11d], 0x12
0x8049d0d:   66 c7 45 d2 ff ff               	mov word ptr [ebp - 0x2e], 0xffff
0x8049d13:   66 c7 85 f4 fe ff ff 50 65      	mov word ptr [ebp - 0x10c], 0x6550
0x8049d1c:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049d20:   74 76                           	je 0x8049d98 <func_1+0x3cb>
0x8049d22:   c7 85 6c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x94], 1
0x8049d2c:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049d2f:   31 45 ec                        	xor dword ptr [ebp - 0x14], eax
0x8049d32:   c7 45 80 ff ff ff ff            	mov dword ptr [ebp - 0x80], 0xffffffff
0x8049d39:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049d3c:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049d3f:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049d42:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x8049d45:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049d48:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049d4b:   81 7d a8 ff 00 00 00            	cmp dword ptr [ebp - 0x58], 0xff
0x8049d52:   0f 94 c0                        	sete al
0x8049d55:   0f b6 d0                        	movzx edx, al
0x8049d58:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049d5b:   01 d0                           	add eax, edx
0x8049d5d:   21 45 88                        	and dword ptr [ebp - 0x78], eax
0x8049d60:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049d63:   0f bf d0                        	movsx edx, ax
0x8049d66:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049d6c:   98                              	cwde 
0x8049d6d:   89 c1                           	mov ecx, eax
0x8049d6f:   d3 fa                           	sar edx, cl
0x8049d71:   89 d0                           	mov eax, edx
0x8049d73:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x8049d76:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049d7c:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049d7f:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x8049d83:   74 07                           	je 0x8049d8c <func_1+0x3bf>
0x8049d85:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x8049d8c:   c7 45 a8 01 00 00 00            	mov dword ptr [ebp - 0x58], 1
0x8049d93:   e9 1d 04 00 00                  	jmp 0x804a1b5 <func_1+0x7e8>
0x8049d98:   66 c7 85 f2 fe ff ff f6 ff      	mov word ptr [ebp - 0x10e], 0xfff6
0x8049da1:   c7 45 cc 18 f8 9c 77            	mov dword ptr [ebp - 0x34], 0x779cf818
0x8049da8:   c7 85 fc fe ff ff e3 01 cc d2   	mov dword ptr [ebp - 0x104], 0xd2cc01e3
0x8049db2:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049db5:   f7 d8                           	neg eax
0x8049db7:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049dba:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049dbd:   0f b7 c0                        	movzx eax, ax
0x8049dc0:   2d f8 ff 00 00                  	sub eax, 0xfff8
0x8049dc5:   89 85 ec fe ff ff               	mov dword ptr [ebp - 0x114], eax
0x8049dcb:   8b 85 ec fe ff ff               	mov eax, dword ptr [ebp - 0x114]
0x8049dd1:   88 45 de                        	mov byte ptr [ebp - 0x22], al
0x8049dd4:   66 c7 85 f8 fe ff ff 8d e8      	mov word ptr [ebp - 0x108], 0xe88d
0x8049ddd:   0f b6 45 de                     	movzx eax, byte ptr [ebp - 0x22]
0x8049de1:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x8049de4:   0f b6 55 df                     	movzx edx, byte ptr [ebp - 0x21]
0x8049de8:   0f bf 85 f8 fe ff ff            	movsx eax, word ptr [ebp - 0x108]
0x8049def:   39 c2                           	cmp edx, eax
0x8049df1:   0f 9e c0                        	setle al
0x8049df4:   0f b6 c0                        	movzx eax, al
0x8049df7:   8b 75 f0                        	mov esi, dword ptr [ebp - 0x10]
0x8049dfa:   99                              	cdq 
0x8049dfb:   f7 fe                           	idiv esi
0x8049dfd:   0f b7 c0                        	movzx eax, ax
0x8049e00:   ba 36 ad 00 00                  	mov edx, 0xad36
0x8049e05:   89 c1                           	mov ecx, eax
0x8049e07:   d3 e2                           	shl edx, cl
0x8049e09:   89 d0                           	mov eax, edx
0x8049e0b:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049e0e:   0f 93 c0                        	setae al
0x8049e11:   0f b6 c0                        	movzx eax, al
0x8049e14:   39 85 c8 fe ff ff               	cmp dword ptr [ebp - 0x138], eax
0x8049e1a:   7f 08                           	jg 0x8049e24 <func_1+0x457>
0x8049e1c:   66 83 bd f8 fe ff ff 00         	cmp word ptr [ebp - 0x108], 0
0x8049e24:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049e27:   0f be c8                        	movsx ecx, al
0x8049e2a:   b8 08 00 00 00                  	mov eax, 8
0x8049e2f:   99                              	cdq 
0x8049e30:   f7 f9                           	idiv ecx
0x8049e32:   89 d0                           	mov eax, edx
0x8049e34:   85 c0                           	test eax, eax
0x8049e36:   74 1b                           	je 0x8049e53 <func_1+0x486>
0x8049e38:   8b 85 fc fe ff ff               	mov eax, dword ptr [ebp - 0x104]
0x8049e3e:   23 45 e4                        	and eax, dword ptr [ebp - 0x1c]
0x8049e41:   89 85 fc fe ff ff               	mov dword ptr [ebp - 0x104], eax
0x8049e47:   c7 45 cc 00 00 00 00            	mov dword ptr [ebp - 0x34], 0
0x8049e4e:   e9 d5 02 00 00                  	jmp 0x804a128 <func_1+0x75b>
0x8049e53:   c6 85 f7 fe ff ff c5            	mov byte ptr [ebp - 0x109], 0xc5
0x8049e5a:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049e5d:   0f b7 c0                        	movzx eax, ax
0x8049e60:   2d fb ff 00 00                  	sub eax, 0xfffb
0x8049e65:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049e68:   0f b7 85 f2 fe ff ff            	movzx eax, word ptr [ebp - 0x10e]
0x8049e6f:   f7 d8                           	neg eax
0x8049e71:   0f b7 d0                        	movzx edx, ax
0x8049e74:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x8049e78:   89 c1                           	mov ecx, eax
0x8049e7a:   d3 fa                           	sar edx, cl
0x8049e7c:   0f be 85 f7 fe ff ff            	movsx eax, byte ptr [ebp - 0x109]
0x8049e83:   39 c2                           	cmp edx, eax
0x8049e85:   0f 94 c0                        	sete al
0x8049e88:   0f b6 c0                        	movzx eax, al
0x8049e8b:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049e8e:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049e91:   89 c2                           	mov edx, eax
0x8049e93:   8b 85 fc fe ff ff               	mov eax, dword ptr [ebp - 0x104]
0x8049e99:   01 d0                           	add eax, edx
0x8049e9b:   0f bf c8                        	movsx ecx, ax
0x8049e9e:   ba 71 29 05 8c                  	mov edx, 0x8c052971
0x8049ea3:   89 c8                           	mov eax, ecx
0x8049ea5:   f7 ea                           	imul edx
0x8049ea7:   8d 04 0a                        	lea eax, [edx + ecx]
0x8049eaa:   c1 f8 0e                        	sar eax, 0xe
0x8049ead:   89 c2                           	mov edx, eax
0x8049eaf:   89 c8                           	mov eax, ecx
0x8049eb1:   c1 f8 1f                        	sar eax, 0x1f
0x8049eb4:   29 c2                           	sub edx, eax
0x8049eb6:   89 d0                           	mov eax, edx
0x8049eb8:   69 c0 03 75 00 00               	imul eax, eax, 0x7503
0x8049ebe:   29 c1                           	sub ecx, eax
0x8049ec0:   89 c8                           	mov eax, ecx
0x8049ec2:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049ec5:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049ec8:   0f b7 c0                        	movzx eax, ax
0x8049ecb:   0f b6 7d df                     	movzx edi, byte ptr [ebp - 0x21]
0x8049ecf:   99                              	cdq 
0x8049ed0:   f7 ff                           	idiv edi
0x8049ed2:   89 c1                           	mov ecx, eax
0x8049ed4:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049ed7:   89 c2                           	mov edx, eax
0x8049ed9:   0f b6 c1                        	movzx eax, cl
0x8049edc:   f6 f2                           	div dl
0x8049ede:   0f b6 c4                        	movzx eax, ah
0x8049ee1:   0f b6 c0                        	movzx eax, al
0x8049ee4:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049ee7:   0f 94 c0                        	sete al
0x8049eea:   0f b6 c0                        	movzx eax, al
0x8049eed:   09 45 88                        	or dword ptr [ebp - 0x78], eax
0x8049ef0:   83 7d 88 00                     	cmp dword ptr [ebp - 0x78], 0
0x8049ef4:   0f b6 45 de                     	movzx eax, byte ptr [ebp - 0x22]
0x8049ef8:   0f be c0                        	movsx eax, al
0x8049efb:   09 45 a8                        	or dword ptr [ebp - 0x58], eax
0x8049efe:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049f01:   09 45 a4                        	or dword ptr [ebp - 0x5c], eax
0x8049f04:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x8049f08:   89 85 a0 fe ff ff               	mov dword ptr [ebp - 0x160], eax
0x8049f0e:   0f b6 45 ba                     	movzx eax, byte ptr [ebp - 0x46]
0x8049f12:   89 85 9c fe ff ff               	mov dword ptr [ebp - 0x164], eax
0x8049f18:   0f bf 45 84                     	movsx eax, word ptr [ebp - 0x7c]
0x8049f1c:   89 85 98 fe ff ff               	mov dword ptr [ebp - 0x168], eax
0x8049f22:   0f bf 45 86                     	movsx eax, word ptr [ebp - 0x7a]
0x8049f26:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x8049f2c:   0f be 85 13 ff ff ff            	movsx eax, byte ptr [ebp - 0xed]
0x8049f33:   89 85 90 fe ff ff               	mov dword ptr [ebp - 0x170], eax
0x8049f39:   0f b7 85 1a ff ff ff            	movzx eax, word ptr [ebp - 0xe6]
0x8049f40:   89 85 8c fe ff ff               	mov dword ptr [ebp - 0x174], eax
0x8049f46:   0f bf 85 20 ff ff ff            	movsx eax, word ptr [ebp - 0xe0]
0x8049f4d:   89 85 88 fe ff ff               	mov dword ptr [ebp - 0x178], eax
0x8049f53:   0f be 85 23 ff ff ff            	movsx eax, byte ptr [ebp - 0xdd]
0x8049f5a:   89 85 84 fe ff ff               	mov dword ptr [ebp - 0x17c], eax
0x8049f60:   0f bf 95 24 ff ff ff            	movsx edx, word ptr [ebp - 0xdc]
0x8049f67:   89 95 80 fe ff ff               	mov dword ptr [ebp - 0x180], edx
0x8049f6d:   0f b6 95 27 ff ff ff            	movzx edx, byte ptr [ebp - 0xd9]
0x8049f74:   89 95 7c fe ff ff               	mov dword ptr [ebp - 0x184], edx
0x8049f7a:   0f b7 8d 2e ff ff ff            	movzx ecx, word ptr [ebp - 0xd2]
0x8049f81:   89 8d 78 fe ff ff               	mov dword ptr [ebp - 0x188], ecx
0x8049f87:   0f bf 8d 36 ff ff ff            	movsx ecx, word ptr [ebp - 0xca]
0x8049f8e:   89 8d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ecx
0x8049f94:   0f be 9d 3d ff ff ff            	movsx ebx, byte ptr [ebp - 0xc3]
0x8049f9b:   89 9d 70 fe ff ff               	mov dword ptr [ebp - 0x190], ebx
0x8049fa1:   0f bf 9d 3e ff ff ff            	movsx ebx, word ptr [ebp - 0xc2]
0x8049fa8:   0f b7 b5 4a ff ff ff            	movzx esi, word ptr [ebp - 0xb6]
0x8049faf:   89 b5 6c fe ff ff               	mov dword ptr [ebp - 0x194], esi
0x8049fb5:   0f b7 b5 4c ff ff ff            	movzx esi, word ptr [ebp - 0xb4]
0x8049fbc:   0f bf bd 4e ff ff ff            	movsx edi, word ptr [ebp - 0xb2]
0x8049fc3:   89 bd 68 fe ff ff               	mov dword ptr [ebp - 0x198], edi
0x8049fc9:   0f b7 bd da fe ff ff            	movzx edi, word ptr [ebp - 0x126]
0x8049fd0:   0f bf 85 7a ff ff ff            	movsx eax, word ptr [ebp - 0x86]
0x8049fd7:   89 85 64 fe ff ff               	mov dword ptr [ebp - 0x19c], eax
0x8049fdd:   0f b6 85 7d ff ff ff            	movzx eax, byte ptr [ebp - 0x83]
0x8049fe4:   0f b6 95 7e ff ff ff            	movzx edx, byte ptr [ebp - 0x82]
0x8049feb:   89 95 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], edx
0x8049ff1:   0f b6 95 7f ff ff ff            	movzx edx, byte ptr [ebp - 0x81]
0x8049ff8:   0f be 4d de                     	movsx ecx, byte ptr [ebp - 0x22]
0x8049ffc:   89 8d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ecx
0x804a002:   0f b6 4d df                     	movzx ecx, byte ptr [ebp - 0x21]
0x804a006:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a00c:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a012:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a018:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a01e:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a024:   ff b5 00 ff ff ff               	push dword ptr [ebp - 0x100]
0x804a02a:   ff b5 04 ff ff ff               	push dword ptr [ebp - 0xfc]
0x804a030:   ff b5 08 ff ff ff               	push dword ptr [ebp - 0xf8]
0x804a036:   ff b5 0c ff ff ff               	push dword ptr [ebp - 0xf4]
0x804a03c:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a042:   ff b5 14 ff ff ff               	push dword ptr [ebp - 0xec]
0x804a048:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a04e:   ff b5 1c ff ff ff               	push dword ptr [ebp - 0xe4]
0x804a054:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a05a:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a060:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a066:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a06c:   ff b5 28 ff ff ff               	push dword ptr [ebp - 0xd8]
0x804a072:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a078:   ff b5 30 ff ff ff               	push dword ptr [ebp - 0xd0]
0x804a07e:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a084:   ff b5 38 ff ff ff               	push dword ptr [ebp - 0xc8]
0x804a08a:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a090:   53                              	push ebx
0x804a091:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x804a097:   ff b5 44 ff ff ff               	push dword ptr [ebp - 0xbc]
0x804a09d:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a0a3:   56                              	push esi
0x804a0a4:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a0aa:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a0b0:   ff b5 54 ff ff ff               	push dword ptr [ebp - 0xac]
0x804a0b6:   57                              	push edi
0x804a0b7:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804a0bd:   50                              	push eax
0x804a0be:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a0c4:   52                              	push edx
0x804a0c5:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a0c8:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a0cb:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a0d1:   51                              	push ecx
0x804a0d2:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a0d5:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a0d8:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a0db:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a0de:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a0e1:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a0e7:   e8 3a f5 ff ff                  	call 0x8049626 <set_var>
0x804a0ec:   81 c4 b8 00 00 00               	add esp, 0xb8
0x804a0f2:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a0f5:   e9 dc 09 00 00                  	jmp 0x804aad6 <func_1+0x1109>
0x804a0fa:   c7 85 70 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x90], 0
0x804a104:   c6 85 7f ff ff ff 0a            	mov byte ptr [ebp - 0x81], 0xa
0x804a10b:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a10e:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a111:   83 bd 70 ff ff ff 00            	cmp dword ptr [ebp - 0x90], 0
0x804a118:   75 09                           	jne 0x804a123 <func_1+0x756>
0x804a11a:   80 b5 7e ff ff ff 01            	xor byte ptr [ebp - 0x82], 1
0x804a121:   eb 01                           	jmp 0x804a124 <func_1+0x757>
0x804a123:   90                              	nop 
0x804a124:   83 45 cc 01                     	add dword ptr [ebp - 0x34], 1
0x804a128:   83 7d cc 0f                     	cmp dword ptr [ebp - 0x34], 0xf
0x804a12c:   7e cc                           	jle 0x804a0fa <func_1+0x72d>
0x804a12e:   0f b6 85 7f ff ff ff            	movzx eax, byte ptr [ebp - 0x81]
0x804a135:   31 45 e4                        	xor dword ptr [ebp - 0x1c], eax
0x804a138:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a13c:   ba 2b 50 00 00                  	mov edx, 0x502b
0x804a141:   89 c1                           	mov ecx, eax
0x804a143:   d3 fa                           	sar edx, cl
0x804a145:   89 d0                           	mov eax, edx
0x804a147:   89 c2                           	mov edx, eax
0x804a149:   0f b6 85 7d ff ff ff            	movzx eax, byte ptr [ebp - 0x83]
0x804a150:   09 d0                           	or eax, edx
0x804a152:   88 85 7d ff ff ff               	mov byte ptr [ebp - 0x83], al
0x804a158:   b8 00 00 00 00                  	mov eax, 0
0x804a15d:   21 45 d8                        	and dword ptr [ebp - 0x28], eax
0x804a160:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a163:   66 89 85 7a ff ff ff            	mov word ptr [ebp - 0x86], ax
0x804a16a:   c6 45 df e6                     	mov byte ptr [ebp - 0x21], 0xe6
0x804a16e:   eb 3e                           	jmp 0x804a1ae <func_1+0x7e1>
0x804a170:   66 c7 85 fa fe ff ff 04 00      	mov word ptr [ebp - 0x106], 4
0x804a179:   c7 85 58 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0xa8], 0xfffffffe
0x804a183:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a186:   89 85 58 ff ff ff               	mov dword ptr [ebp - 0xa8], eax
0x804a18c:   81 bd dc fe ff ff 67 0e 52 73   	cmp dword ptr [ebp - 0x124], 0x73520e67
0x804a196:   77 04                           	ja 0x804a19c <func_1+0x7cf>
0x804a198:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a19c:   b8 01 00 00 00                  	mov eax, 1
0x804a1a1:   21 45 a8                        	and dword ptr [ebp - 0x58], eax
0x804a1a4:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x804a1a8:   83 c0 01                        	add eax, 1
0x804a1ab:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x804a1ae:   80 7d df 0b                     	cmp byte ptr [ebp - 0x21], 0xb
0x804a1b2:   76 bc                           	jbe 0x804a170 <func_1+0x7a3>
0x804a1b4:   90                              	nop 
0x804a1b5:   0f b6 85 7f ff ff ff            	movzx eax, byte ptr [ebp - 0x81]
0x804a1bc:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a1bf:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x804a1c3:   74 10                           	je 0x804a1d5 <func_1+0x808>
0x804a1c5:   83 bd c8 fe ff ff 00            	cmp dword ptr [ebp - 0x138], 0
0x804a1cc:   74 07                           	je 0x804a1d5 <func_1+0x808>
0x804a1ce:   ba 01 00 00 00                  	mov edx, 1
0x804a1d3:   eb 05                           	jmp 0x804a1da <func_1+0x80d>
0x804a1d5:   ba 00 00 00 00                  	mov edx, 0
0x804a1da:   0f be 45 a3                     	movsx eax, byte ptr [ebp - 0x5d]
0x804a1de:   21 d0                           	and eax, edx
0x804a1e0:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804a1e3:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a1e7:   74 07                           	je 0x804a1f0 <func_1+0x823>
0x804a1e9:   83 bd c8 fe ff ff 00            	cmp dword ptr [ebp - 0x138], 0
0x804a1f0:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x804a1f7:   0f b6 95 7d ff ff ff            	movzx edx, byte ptr [ebp - 0x83]
0x804a1fe:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a201:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a204:   0f b6 85 7f ff ff ff            	movzx eax, byte ptr [ebp - 0x81]
0x804a20b:   0b 45 8c                        	or eax, dword ptr [ebp - 0x74]
0x804a20e:   39 c2                           	cmp edx, eax
0x804a210:   7e 07                           	jle 0x804a219 <func_1+0x84c>
0x804a212:   b8 01 00 00 00                  	mov eax, 1
0x804a217:   eb 05                           	jmp 0x804a21e <func_1+0x851>
0x804a219:   b8 00 00 00 00                  	mov eax, 0
0x804a21e:   3b 45 90                        	cmp eax, dword ptr [ebp - 0x70]
0x804a221:   0f b6 85 7f ff ff ff            	movzx eax, byte ptr [ebp - 0x81]
0x804a228:   66 98                           	cbw 
0x804a22a:   ba 78 00 00 00                  	mov edx, 0x78
0x804a22f:   29 c2                           	sub edx, eax
0x804a231:   89 d0                           	mov eax, edx
0x804a233:   98                              	cwde 
0x804a234:   c1 f8 06                        	sar eax, 6
0x804a237:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a23a:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a23d:   0f bf d0                        	movsx edx, ax
0x804a240:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a243:   98                              	cwde 
0x804a244:   89 c1                           	mov ecx, eax
0x804a246:   d3 fa                           	sar edx, cl
0x804a248:   89 d0                           	mov eax, edx
0x804a24a:   3d 1b 3c 00 00                  	cmp eax, 0x3c1b
0x804a24f:   74 0d                           	je 0x804a25e <func_1+0x891>
0x804a251:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a255:   74 07                           	je 0x804a25e <func_1+0x891>
0x804a257:   b8 01 00 00 00                  	mov eax, 1
0x804a25c:   eb 05                           	jmp 0x804a263 <func_1+0x896>
0x804a25e:   b8 00 00 00 00                  	mov eax, 0
0x804a263:   66 89 85 da fe ff ff            	mov word ptr [ebp - 0x126], ax
0x804a26a:   0f b7 85 da fe ff ff            	movzx eax, word ptr [ebp - 0x126]
0x804a271:   89 85 54 ff ff ff               	mov dword ptr [ebp - 0xac], eax
0x804a277:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a27d:   66 c1 e8 0a                     	shr ax, 0xa
0x804a281:   66 83 f8 01                     	cmp ax, 1
0x804a285:   74 11                           	je 0x804a298 <func_1+0x8cb>
0x804a287:   66 83 bd 7a ff ff ff 00         	cmp word ptr [ebp - 0x86], 0
0x804a28f:   74 07                           	je 0x804a298 <func_1+0x8cb>
0x804a291:   b8 01 00 00 00                  	mov eax, 1
0x804a296:   eb 05                           	jmp 0x804a29d <func_1+0x8d0>
0x804a298:   b8 00 00 00 00                  	mov eax, 0
0x804a29d:   08 45 de                        	or byte ptr [ebp - 0x22], al
0x804a2a0:   0f b6 55 df                     	movzx edx, byte ptr [ebp - 0x21]
0x804a2a4:   0f be 45 a3                     	movsx eax, byte ptr [ebp - 0x5d]
0x804a2a8:   39 c2                           	cmp edx, eax
0x804a2aa:   0f 95 c0                        	setne al
0x804a2ad:   0f b6 c0                        	movzx eax, al
0x804a2b0:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a2b3:   81 7d f0 55 79 c5 03            	cmp dword ptr [ebp - 0x10], 0x3c57955
0x804a2ba:   77 07                           	ja 0x804a2c3 <func_1+0x8f6>
0x804a2bc:   ba 02 00 00 00                  	mov edx, 2
0x804a2c1:   eb 05                           	jmp 0x804a2c8 <func_1+0x8fb>
0x804a2c3:   ba 01 00 00 00                  	mov edx, 1
0x804a2c8:   0f bf 85 7a ff ff ff            	movsx eax, word ptr [ebp - 0x86]
0x804a2cf:   39 c2                           	cmp edx, eax
0x804a2d1:   0f 8c be 02 00 00               	jl 0x804a595 <func_1+0xbc8>
0x804a2d7:   c6 85 cf fe ff ff 00            	mov byte ptr [ebp - 0x131], 0
0x804a2de:   8b 85 e4 fe ff ff               	mov eax, dword ptr [ebp - 0x11c]
0x804a2e4:   89 85 dc fe ff ff               	mov dword ptr [ebp - 0x124], eax
0x804a2ea:   80 bd cf fe ff ff 00            	cmp byte ptr [ebp - 0x131], 0
0x804a2f1:   0f 95 c0                        	setne al
0x804a2f4:   0f b6 c0                        	movzx eax, al
0x804a2f7:   0f b6 c0                        	movzx eax, al
0x804a2fa:   f6 b5 cf fe ff ff               	div byte ptr [ebp - 0x131]
0x804a300:   83 c8 56                        	or eax, 0x56
0x804a303:   0f b6 c0                        	movzx eax, al
0x804a306:   0b 45 a8                        	or eax, dword ptr [ebp - 0x58]
0x804a309:   83 f8 fb                        	cmp eax, -5
0x804a30c:   7d 10                           	jge 0x804a31e <func_1+0x951>
0x804a30e:   80 bd cf fe ff ff 00            	cmp byte ptr [ebp - 0x131], 0
0x804a315:   74 07                           	je 0x804a31e <func_1+0x951>
0x804a317:   b8 01 00 00 00                  	mov eax, 1
0x804a31c:   eb 05                           	jmp 0x804a323 <func_1+0x956>
0x804a31e:   b8 00 00 00 00                  	mov eax, 0
0x804a323:   3b 45 a8                        	cmp eax, dword ptr [ebp - 0x58]
0x804a326:   c7 85 54 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xac], 2
0x804a330:   0f b6 85 cf fe ff ff            	movzx eax, byte ptr [ebp - 0x131]
0x804a337:   39 85 e4 fe ff ff               	cmp dword ptr [ebp - 0x11c], eax
0x804a33d:   0f 96 c0                        	setbe al
0x804a340:   0f b6 c0                        	movzx eax, al
0x804a343:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a346:   0f 92 c0                        	setb al
0x804a349:   0f b6 c0                        	movzx eax, al
0x804a34c:   66 89 85 da fe ff ff            	mov word ptr [ebp - 0x126], ax
0x804a353:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a356:   66 98                           	cbw 
0x804a358:   89 c2                           	mov edx, eax
0x804a35a:   c1 e0 04                        	shl eax, 4
0x804a35d:   29 c2                           	sub edx, eax
0x804a35f:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x804a363:   29 c2                           	sub edx, eax
0x804a365:   89 d0                           	mov eax, edx
0x804a367:   0f b6 c0                        	movzx eax, al
0x804a36a:   0f b6 8d cf fe ff ff            	movzx ecx, byte ptr [ebp - 0x131]
0x804a371:   99                              	cdq 
0x804a372:   f7 f9                           	idiv ecx
0x804a374:   0f be 45 a3                     	movsx eax, byte ptr [ebp - 0x5d]
0x804a378:   39 c2                           	cmp edx, eax
0x804a37a:   0f 9d c0                        	setge al
0x804a37d:   0f b6 d0                        	movzx edx, al
0x804a380:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a383:   98                              	cwde 
0x804a384:   89 c1                           	mov ecx, eax
0x804a386:   d3 fa                           	sar edx, cl
0x804a388:   89 d0                           	mov eax, edx
0x804a38a:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a38d:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a390:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a393:   0f 92 c0                        	setb al
0x804a396:   0f b6 c0                        	movzx eax, al
0x804a399:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a39c:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x804a3a0:   89 85 a0 fe ff ff               	mov dword ptr [ebp - 0x160], eax
0x804a3a6:   0f b6 45 ba                     	movzx eax, byte ptr [ebp - 0x46]
0x804a3aa:   89 85 9c fe ff ff               	mov dword ptr [ebp - 0x164], eax
0x804a3b0:   0f bf 45 84                     	movsx eax, word ptr [ebp - 0x7c]
0x804a3b4:   89 85 98 fe ff ff               	mov dword ptr [ebp - 0x168], eax
0x804a3ba:   0f bf 45 86                     	movsx eax, word ptr [ebp - 0x7a]
0x804a3be:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x804a3c4:   0f be 85 13 ff ff ff            	movsx eax, byte ptr [ebp - 0xed]
0x804a3cb:   89 85 90 fe ff ff               	mov dword ptr [ebp - 0x170], eax
0x804a3d1:   0f b7 85 1a ff ff ff            	movzx eax, word ptr [ebp - 0xe6]
0x804a3d8:   89 85 8c fe ff ff               	mov dword ptr [ebp - 0x174], eax
0x804a3de:   0f bf 85 20 ff ff ff            	movsx eax, word ptr [ebp - 0xe0]
0x804a3e5:   89 85 88 fe ff ff               	mov dword ptr [ebp - 0x178], eax
0x804a3eb:   0f be 85 23 ff ff ff            	movsx eax, byte ptr [ebp - 0xdd]
0x804a3f2:   89 85 84 fe ff ff               	mov dword ptr [ebp - 0x17c], eax
0x804a3f8:   0f bf 95 24 ff ff ff            	movsx edx, word ptr [ebp - 0xdc]
0x804a3ff:   89 95 80 fe ff ff               	mov dword ptr [ebp - 0x180], edx
0x804a405:   0f b6 95 27 ff ff ff            	movzx edx, byte ptr [ebp - 0xd9]
0x804a40c:   89 95 7c fe ff ff               	mov dword ptr [ebp - 0x184], edx
0x804a412:   0f b7 8d 2e ff ff ff            	movzx ecx, word ptr [ebp - 0xd2]
0x804a419:   89 8d 78 fe ff ff               	mov dword ptr [ebp - 0x188], ecx
0x804a41f:   0f bf 8d 36 ff ff ff            	movsx ecx, word ptr [ebp - 0xca]
0x804a426:   89 8d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ecx
0x804a42c:   0f be 9d 3d ff ff ff            	movsx ebx, byte ptr [ebp - 0xc3]
0x804a433:   89 9d 70 fe ff ff               	mov dword ptr [ebp - 0x190], ebx
0x804a439:   0f bf 9d 3e ff ff ff            	movsx ebx, word ptr [ebp - 0xc2]
0x804a440:   0f b7 b5 4a ff ff ff            	movzx esi, word ptr [ebp - 0xb6]
0x804a447:   89 b5 6c fe ff ff               	mov dword ptr [ebp - 0x194], esi
0x804a44d:   0f b7 b5 4c ff ff ff            	movzx esi, word ptr [ebp - 0xb4]
0x804a454:   0f bf bd 4e ff ff ff            	movsx edi, word ptr [ebp - 0xb2]
0x804a45b:   89 bd 68 fe ff ff               	mov dword ptr [ebp - 0x198], edi
0x804a461:   0f b7 bd da fe ff ff            	movzx edi, word ptr [ebp - 0x126]
0x804a468:   0f bf 85 7a ff ff ff            	movsx eax, word ptr [ebp - 0x86]
0x804a46f:   89 85 64 fe ff ff               	mov dword ptr [ebp - 0x19c], eax
0x804a475:   0f b6 85 7d ff ff ff            	movzx eax, byte ptr [ebp - 0x83]
0x804a47c:   0f b6 95 7e ff ff ff            	movzx edx, byte ptr [ebp - 0x82]
0x804a483:   89 95 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], edx
0x804a489:   0f b6 95 7f ff ff ff            	movzx edx, byte ptr [ebp - 0x81]
0x804a490:   0f be 4d de                     	movsx ecx, byte ptr [ebp - 0x22]
0x804a494:   89 8d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ecx
0x804a49a:   0f b6 4d df                     	movzx ecx, byte ptr [ebp - 0x21]
0x804a49e:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a4a4:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a4aa:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a4b0:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a4b6:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a4bc:   ff b5 00 ff ff ff               	push dword ptr [ebp - 0x100]
0x804a4c2:   ff b5 04 ff ff ff               	push dword ptr [ebp - 0xfc]
0x804a4c8:   ff b5 08 ff ff ff               	push dword ptr [ebp - 0xf8]
0x804a4ce:   ff b5 0c ff ff ff               	push dword ptr [ebp - 0xf4]
0x804a4d4:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a4da:   ff b5 14 ff ff ff               	push dword ptr [ebp - 0xec]
0x804a4e0:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a4e6:   ff b5 1c ff ff ff               	push dword ptr [ebp - 0xe4]
0x804a4ec:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a4f2:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a4f8:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a4fe:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a504:   ff b5 28 ff ff ff               	push dword ptr [ebp - 0xd8]
0x804a50a:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a510:   ff b5 30 ff ff ff               	push dword ptr [ebp - 0xd0]
0x804a516:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a51c:   ff b5 38 ff ff ff               	push dword ptr [ebp - 0xc8]
0x804a522:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a528:   53                              	push ebx
0x804a529:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x804a52f:   ff b5 44 ff ff ff               	push dword ptr [ebp - 0xbc]
0x804a535:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a53b:   56                              	push esi
0x804a53c:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a542:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a548:   ff b5 54 ff ff ff               	push dword ptr [ebp - 0xac]
0x804a54e:   57                              	push edi
0x804a54f:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804a555:   50                              	push eax
0x804a556:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a55c:   52                              	push edx
0x804a55d:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a560:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a563:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a569:   51                              	push ecx
0x804a56a:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a56d:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a570:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a573:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a576:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a579:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a57f:   e8 a2 f0 ff ff                  	call 0x8049626 <set_var>
0x804a584:   81 c4 b8 00 00 00               	add esp, 0xb8
0x804a58a:   8b 85 c8 fe ff ff               	mov eax, dword ptr [ebp - 0x138]
0x804a590:   e9 41 05 00 00                  	jmp 0x804aad6 <func_1+0x1109>
0x804a595:   c7 85 b0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x150], 0
0x804a59f:   66 c7 85 ae fe ff ff 01 00      	mov word ptr [ebp - 0x152], 1
0x804a5a8:   c7 85 d0 fe ff ff fa 2f ec ef   	mov dword ptr [ebp - 0x130], 0xefec2ffa
0x804a5b2:   c7 45 d8 00 00 00 00            	mov dword ptr [ebp - 0x28], 0
0x804a5b9:   e9 06 03 00 00                  	jmp 0x804a8c4 <func_1+0xef7>
0x804a5be:   c7 45 c8 00 00 00 00            	mov dword ptr [ebp - 0x38], 0
0x804a5c5:   c7 45 c4 01 00 00 00            	mov dword ptr [ebp - 0x3c], 1
0x804a5cc:   0f b6 9d 7f ff ff ff            	movzx ebx, byte ptr [ebp - 0x81]
0x804a5d3:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a5d6:   8d 50 01                        	lea edx, [eax + 1]
0x804a5d9:   89 55 e0                        	mov dword ptr [ebp - 0x20], edx
0x804a5dc:   85 c0                           	test eax, eax
0x804a5de:   74 64                           	je 0x804a644 <func_1+0xc77>
0x804a5e0:   8b 85 ec fe ff ff               	mov eax, dword ptr [ebp - 0x114]
0x804a5e6:   88 85 7e ff ff ff               	mov byte ptr [ebp - 0x82], al
0x804a5ec:   0f b6 95 7e ff ff ff            	movzx edx, byte ptr [ebp - 0x82]
0x804a5f3:   0f be 45 de                     	movsx eax, byte ptr [ebp - 0x22]
0x804a5f7:   39 c2                           	cmp edx, eax
0x804a5f9:   0f 9e c0                        	setle al
0x804a5fc:   0f b6 d0                        	movzx edx, al
0x804a5ff:   0f be 45 de                     	movsx eax, byte ptr [ebp - 0x22]
0x804a603:   21 d0                           	and eax, edx
0x804a605:   85 c0                           	test eax, eax
0x804a607:   74 10                           	je 0x804a619 <func_1+0xc4c>
0x804a609:   83 bd b0 fe ff ff 00            	cmp dword ptr [ebp - 0x150], 0
0x804a610:   74 07                           	je 0x804a619 <func_1+0xc4c>
0x804a612:   b8 01 00 00 00                  	mov eax, 1
0x804a617:   eb 05                           	jmp 0x804a61e <func_1+0xc51>
0x804a619:   b8 00 00 00 00                  	mov eax, 0
0x804a61e:   88 45 de                        	mov byte ptr [ebp - 0x22], al
0x804a621:   0f be 55 de                     	movsx edx, byte ptr [ebp - 0x22]
0x804a625:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a62b:   0f be c0                        	movsx eax, al
0x804a62e:   89 c1                           	mov ecx, eax
0x804a630:   d3 fa                           	sar edx, cl
0x804a632:   89 d0                           	mov eax, edx
0x804a634:   31 45 c8                        	xor dword ptr [ebp - 0x38], eax
0x804a637:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a63a:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a63d:   b8 01 00 00 00                  	mov eax, 1
0x804a642:   eb 05                           	jmp 0x804a649 <func_1+0xc7c>
0x804a644:   b8 00 00 00 00                  	mov eax, 0
0x804a649:   39 d8                           	cmp eax, ebx
0x804a64b:   75 04                           	jne 0x804a651 <func_1+0xc84>
0x804a64d:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x804a651:   0f b6 85 7d ff ff ff            	movzx eax, byte ptr [ebp - 0x83]
0x804a658:   8b 55 88                        	mov edx, dword ptr [ebp - 0x78]
0x804a65b:   01 d0                           	add eax, edx
0x804a65d:   0f b7 d0                        	movzx edx, ax
0x804a660:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a663:   0f b7 c0                        	movzx eax, ax
0x804a666:   89 c1                           	mov ecx, eax
0x804a668:   d3 e2                           	shl edx, cl
0x804a66a:   89 d0                           	mov eax, edx
0x804a66c:   88 85 7f ff ff ff               	mov byte ptr [ebp - 0x81], al
0x804a672:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804a676:   74 07                           	je 0x804a67f <func_1+0xcb2>
0x804a678:   b8 01 00 00 00                  	mov eax, 1
0x804a67d:   eb 05                           	jmp 0x804a684 <func_1+0xcb7>
0x804a67f:   b8 00 00 00 00                  	mov eax, 0
0x804a684:   89 c2                           	mov edx, eax
0x804a686:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a68a:   21 d0                           	and eax, edx
0x804a68c:   66 89 45 d2                     	mov word ptr [ebp - 0x2e], ax
0x804a690:   66 83 bd 7a ff ff ff 00         	cmp word ptr [ebp - 0x86], 0
0x804a698:   0f 85 32 02 00 00               	jne 0x804a8d0 <func_1+0xf03>
0x804a69e:   c6 85 7f ff ff ff f0            	mov byte ptr [ebp - 0x81], 0xf0
0x804a6a5:   e9 09 02 00 00                  	jmp 0x804a8b3 <func_1+0xee6>
0x804a6aa:   c6 85 c7 fe ff ff ff            	mov byte ptr [ebp - 0x139], 0xff
0x804a6b1:   c6 85 c6 fe ff ff ff            	mov byte ptr [ebp - 0x13a], 0xff
0x804a6b8:   c7 85 e4 fe ff ff 0a 00 00 00   	mov dword ptr [ebp - 0x11c], 0xa
0x804a6c2:   eb 1e                           	jmp 0x804a6e2 <func_1+0xd15>
0x804a6c4:   80 bd e3 fe ff ff 00            	cmp byte ptr [ebp - 0x11d], 0
0x804a6cb:   74 05                           	je 0x804a6d2 <func_1+0xd05>
0x804a6cd:   e9 e3 fa ff ff                  	jmp 0x804a1b5 <func_1+0x7e8>
0x804a6d2:   83 bd ec fe ff ff 00            	cmp dword ptr [ebp - 0x114], 0
0x804a6d9:   75 12                           	jne 0x804a6ed <func_1+0xd20>
0x804a6db:   83 85 e4 fe ff ff 01            	add dword ptr [ebp - 0x11c], 1
0x804a6e2:   83 bd e4 fe ff ff 10            	cmp dword ptr [ebp - 0x11c], 0x10
0x804a6e9:   74 d9                           	je 0x804a6c4 <func_1+0xcf7>
0x804a6eb:   eb 01                           	jmp 0x804a6ee <func_1+0xd21>
0x804a6ed:   90                              	nop 
0x804a6ee:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a6f1:   0f be c0                        	movsx eax, al
0x804a6f4:   bb 00 00 00 00                  	mov ebx, 0
0x804a6f9:   99                              	cdq 
0x804a6fa:   f7 fb                           	idiv ebx
0x804a6fc:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a6ff:   0f 93 c0                        	setae al
0x804a702:   0f b6 d0                        	movzx edx, al
0x804a705:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x804a709:   39 c2                           	cmp edx, eax
0x804a70b:   0f 9e c0                        	setle al
0x804a70e:   0f b6 c0                        	movzx eax, al
0x804a711:   89 85 54 ff ff ff               	mov dword ptr [ebp - 0xac], eax
0x804a717:   80 bd c7 fe ff ff 00            	cmp byte ptr [ebp - 0x139], 0
0x804a71e:   75 06                           	jne 0x804a726 <func_1+0xd59>
0x804a720:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x804a724:   74 07                           	je 0x804a72d <func_1+0xd60>
0x804a726:   b8 01 00 00 00                  	mov eax, 1
0x804a72b:   eb 05                           	jmp 0x804a732 <func_1+0xd65>
0x804a72d:   b8 00 00 00 00                  	mov eax, 0
0x804a732:   ba d6 ff ff ff                  	mov edx, 0xffffffd6
0x804a737:   29 c2                           	sub edx, eax
0x804a739:   89 d0                           	mov eax, edx
0x804a73b:   88 45 de                        	mov byte ptr [ebp - 0x22], al
0x804a73e:   66 83 ad da fe ff ff 01         	sub word ptr [ebp - 0x126], 1
0x804a746:   8b 85 b0 fe ff ff               	mov eax, dword ptr [ebp - 0x150]
0x804a74c:   89 c2                           	mov edx, eax
0x804a74e:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a751:   09 d0                           	or eax, edx
0x804a753:   89 c1                           	mov ecx, eax
0x804a755:   8b 85 b0 fe ff ff               	mov eax, dword ptr [ebp - 0x150]
0x804a75b:   89 c2                           	mov edx, eax
0x804a75d:   89 c8                           	mov eax, ecx
0x804a75f:   0f af c2                        	imul eax, edx
0x804a762:   0f be d0                        	movsx edx, al
0x804a765:   0f b6 85 7e ff ff ff            	movzx eax, byte ptr [ebp - 0x82]
0x804a76c:   0f be c0                        	movsx eax, al
0x804a76f:   89 d1                           	mov ecx, edx
0x804a771:   29 c1                           	sub ecx, eax
0x804a773:   ba ad 36 47 56                  	mov edx, 0x564736ad
0x804a778:   89 c8                           	mov eax, ecx
0x804a77a:   f7 ea                           	imul edx
0x804a77c:   89 d0                           	mov eax, edx
0x804a77e:   c1 f8 1d                        	sar eax, 0x1d
0x804a781:   c1 f9 1f                        	sar ecx, 0x1f
0x804a784:   89 ca                           	mov edx, ecx
0x804a786:   29 c2                           	sub edx, eax
0x804a788:   89 d0                           	mov eax, edx
0x804a78a:   89 c2                           	mov edx, eax
0x804a78c:   8b 85 b0 fe ff ff               	mov eax, dword ptr [ebp - 0x150]
0x804a792:   29 c2                           	sub edx, eax
0x804a794:   0f b6 85 e3 fe ff ff            	movzx eax, byte ptr [ebp - 0x11d]
0x804a79b:   39 c2                           	cmp edx, eax
0x804a79d:   0f 94 c0                        	sete al
0x804a7a0:   0f b6 c0                        	movzx eax, al
0x804a7a3:   89 85 50 ff ff ff               	mov dword ptr [ebp - 0xb0], eax
0x804a7a9:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x804a7b0:   75 07                           	jne 0x804a7b9 <func_1+0xdec>
0x804a7b2:   83 bd b0 fe ff ff 00            	cmp dword ptr [ebp - 0x150], 0
0x804a7b9:   66 c7 85 d6 fe ff ff f3 8b      	mov word ptr [ebp - 0x12a], 0x8bf3
0x804a7c2:   0f bf 95 d6 fe ff ff            	movsx edx, word ptr [ebp - 0x12a]
0x804a7c9:   8b 85 b0 fe ff ff               	mov eax, dword ptr [ebp - 0x150]
0x804a7cf:   66 39 85 ae fe ff ff            	cmp word ptr [ebp - 0x152], ax
0x804a7d6:   0f 92 c0                        	setb al
0x804a7d9:   0f b6 c0                        	movzx eax, al
0x804a7dc:   f7 d8                           	neg eax
0x804a7de:   89 c1                           	mov ecx, eax
0x804a7e0:   8b 85 b0 fe ff ff               	mov eax, dword ptr [ebp - 0x150]
0x804a7e6:   31 c1                           	xor ecx, eax
0x804a7e8:   0f b7 85 f4 fe ff ff            	movzx eax, word ptr [ebp - 0x10c]
0x804a7ef:   39 c1                           	cmp ecx, eax
0x804a7f1:   0f 96 c0                        	setbe al
0x804a7f4:   0f b6 c0                        	movzx eax, al
0x804a7f7:   09 d0                           	or eax, edx
0x804a7f9:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a7ff:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x804a803:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804a806:   80 bd c6 fe ff ff 00            	cmp byte ptr [ebp - 0x13a], 0
0x804a80d:   74 35                           	je 0x804a844 <func_1+0xe77>
0x804a80f:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a812:   98                              	cwde 
0x804a813:   8b 55 a4                        	mov edx, dword ptr [ebp - 0x5c]
0x804a816:   0f bf ca                        	movsx ecx, dx
0x804a819:   99                              	cdq 
0x804a81a:   f7 f9                           	idiv ecx
0x804a81c:   0f be 85 c6 fe ff ff            	movsx eax, byte ptr [ebp - 0x13a]
0x804a823:   31 c2                           	xor edx, eax
0x804a825:   0f bf 85 d6 fe ff ff            	movsx eax, word ptr [ebp - 0x12a]
0x804a82c:   39 c2                           	cmp edx, eax
0x804a82e:   0f 9f c0                        	setg al
0x804a831:   0f b6 c0                        	movzx eax, al
0x804a834:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a837:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x804a83b:   74 07                           	je 0x804a844 <func_1+0xe77>
0x804a83d:   b8 01 00 00 00                  	mov eax, 1
0x804a842:   eb 05                           	jmp 0x804a849 <func_1+0xe7c>
0x804a844:   b8 00 00 00 00                  	mov eax, 0
0x804a849:   3b 85 54 ff ff ff               	cmp eax, dword ptr [ebp - 0xac]
0x804a84f:   0f 95 c0                        	setne al
0x804a852:   0f b6 d0                        	movzx edx, al
0x804a855:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a85b:   98                              	cwde 
0x804a85c:   29 c2                           	sub edx, eax
0x804a85e:   89 d0                           	mov eax, edx
0x804a860:   83 f8 fc                        	cmp eax, -4
0x804a863:   0f 94 c0                        	sete al
0x804a866:   0f b6 c0                        	movzx eax, al
0x804a869:   0b 45 e4                        	or eax, dword ptr [ebp - 0x1c]
0x804a86c:   89 c2                           	mov edx, eax
0x804a86e:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a871:   39 c2                           	cmp edx, eax
0x804a873:   0f be 55 de                     	movsx edx, byte ptr [ebp - 0x22]
0x804a877:   0f b6 85 7f ff ff ff            	movzx eax, byte ptr [ebp - 0x81]
0x804a87e:   39 c2                           	cmp edx, eax
0x804a880:   0f 9e c0                        	setle al
0x804a883:   0f b6 c0                        	movzx eax, al
0x804a886:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a889:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a88c:   0b 45 f0                        	or eax, dword ptr [ebp - 0x10]
0x804a88f:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804a892:   c7 85 54 ff ff ff f7 ff ff ff   	mov dword ptr [ebp - 0xac], 0xfffffff7
0x804a89c:   83 bd 54 ff ff ff 00            	cmp dword ptr [ebp - 0xac], 0
0x804a8a3:   0f b6 85 7f ff ff ff            	movzx eax, byte ptr [ebp - 0x81]
0x804a8aa:   83 c0 01                        	add eax, 1
0x804a8ad:   88 85 7f ff ff ff               	mov byte ptr [ebp - 0x81], al
0x804a8b3:   80 bd 7f ff ff ff 34            	cmp byte ptr [ebp - 0x81], 0x34
0x804a8ba:   0f 86 ea fd ff ff               	jbe 0x804a6aa <func_1+0xcdd>
0x804a8c0:   83 45 d8 04                     	add dword ptr [ebp - 0x28], 4
0x804a8c4:   83 7d d8 04                     	cmp dword ptr [ebp - 0x28], 4
0x804a8c8:   0f 84 f0 fc ff ff               	je 0x804a5be <func_1+0xbf1>
0x804a8ce:   eb 01                           	jmp 0x804a8d1 <func_1+0xf04>
0x804a8d0:   90                              	nop 
0x804a8d1:   c7 85 64 ff ff ff cd f3 a4 24   	mov dword ptr [ebp - 0x9c], 0x24a4f3cd
0x804a8db:   83 85 64 ff ff ff 01            	add dword ptr [ebp - 0x9c], 1
0x804a8e2:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x804a8e6:   89 85 a0 fe ff ff               	mov dword ptr [ebp - 0x160], eax
0x804a8ec:   0f b6 45 ba                     	movzx eax, byte ptr [ebp - 0x46]
0x804a8f0:   89 85 9c fe ff ff               	mov dword ptr [ebp - 0x164], eax
0x804a8f6:   0f bf 45 84                     	movsx eax, word ptr [ebp - 0x7c]
0x804a8fa:   89 85 98 fe ff ff               	mov dword ptr [ebp - 0x168], eax
0x804a900:   0f bf 45 86                     	movsx eax, word ptr [ebp - 0x7a]
0x804a904:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x804a90a:   0f be 85 13 ff ff ff            	movsx eax, byte ptr [ebp - 0xed]
0x804a911:   89 85 90 fe ff ff               	mov dword ptr [ebp - 0x170], eax
0x804a917:   0f b7 85 1a ff ff ff            	movzx eax, word ptr [ebp - 0xe6]
0x804a91e:   89 85 8c fe ff ff               	mov dword ptr [ebp - 0x174], eax
0x804a924:   0f bf 85 20 ff ff ff            	movsx eax, word ptr [ebp - 0xe0]
0x804a92b:   89 85 88 fe ff ff               	mov dword ptr [ebp - 0x178], eax
0x804a931:   0f be 85 23 ff ff ff            	movsx eax, byte ptr [ebp - 0xdd]
0x804a938:   89 85 84 fe ff ff               	mov dword ptr [ebp - 0x17c], eax
0x804a93e:   0f bf 95 24 ff ff ff            	movsx edx, word ptr [ebp - 0xdc]
0x804a945:   89 95 80 fe ff ff               	mov dword ptr [ebp - 0x180], edx
0x804a94b:   0f b6 95 27 ff ff ff            	movzx edx, byte ptr [ebp - 0xd9]
0x804a952:   89 95 7c fe ff ff               	mov dword ptr [ebp - 0x184], edx
0x804a958:   0f b7 8d 2e ff ff ff            	movzx ecx, word ptr [ebp - 0xd2]
0x804a95f:   89 8d 78 fe ff ff               	mov dword ptr [ebp - 0x188], ecx
0x804a965:   0f bf 8d 36 ff ff ff            	movsx ecx, word ptr [ebp - 0xca]
0x804a96c:   89 8d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ecx
0x804a972:   0f be 9d 3d ff ff ff            	movsx ebx, byte ptr [ebp - 0xc3]
0x804a979:   89 9d 70 fe ff ff               	mov dword ptr [ebp - 0x190], ebx
0x804a97f:   0f bf 9d 3e ff ff ff            	movsx ebx, word ptr [ebp - 0xc2]
0x804a986:   0f b7 b5 4a ff ff ff            	movzx esi, word ptr [ebp - 0xb6]
0x804a98d:   89 b5 6c fe ff ff               	mov dword ptr [ebp - 0x194], esi
0x804a993:   0f b7 b5 4c ff ff ff            	movzx esi, word ptr [ebp - 0xb4]
0x804a99a:   0f bf bd 4e ff ff ff            	movsx edi, word ptr [ebp - 0xb2]
0x804a9a1:   89 bd 68 fe ff ff               	mov dword ptr [ebp - 0x198], edi
0x804a9a7:   0f b7 bd da fe ff ff            	movzx edi, word ptr [ebp - 0x126]
0x804a9ae:   0f bf 85 7a ff ff ff            	movsx eax, word ptr [ebp - 0x86]
0x804a9b5:   89 85 64 fe ff ff               	mov dword ptr [ebp - 0x19c], eax
0x804a9bb:   0f b6 85 7d ff ff ff            	movzx eax, byte ptr [ebp - 0x83]
0x804a9c2:   0f b6 95 7e ff ff ff            	movzx edx, byte ptr [ebp - 0x82]
0x804a9c9:   89 95 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], edx
0x804a9cf:   0f b6 95 7f ff ff ff            	movzx edx, byte ptr [ebp - 0x81]
0x804a9d6:   0f be 4d de                     	movsx ecx, byte ptr [ebp - 0x22]
0x804a9da:   89 8d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ecx
0x804a9e0:   0f b6 4d df                     	movzx ecx, byte ptr [ebp - 0x21]
0x804a9e4:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a9ea:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a9f0:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a9f6:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a9fc:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804aa02:   ff b5 00 ff ff ff               	push dword ptr [ebp - 0x100]
0x804aa08:   ff b5 04 ff ff ff               	push dword ptr [ebp - 0xfc]
0x804aa0e:   ff b5 08 ff ff ff               	push dword ptr [ebp - 0xf8]
0x804aa14:   ff b5 0c ff ff ff               	push dword ptr [ebp - 0xf4]
0x804aa1a:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804aa20:   ff b5 14 ff ff ff               	push dword ptr [ebp - 0xec]
0x804aa26:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804aa2c:   ff b5 1c ff ff ff               	push dword ptr [ebp - 0xe4]
0x804aa32:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804aa38:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804aa3e:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804aa44:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804aa4a:   ff b5 28 ff ff ff               	push dword ptr [ebp - 0xd8]
0x804aa50:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804aa56:   ff b5 30 ff ff ff               	push dword ptr [ebp - 0xd0]
0x804aa5c:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804aa62:   ff b5 38 ff ff ff               	push dword ptr [ebp - 0xc8]
0x804aa68:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804aa6e:   53                              	push ebx
0x804aa6f:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x804aa75:   ff b5 44 ff ff ff               	push dword ptr [ebp - 0xbc]
0x804aa7b:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804aa81:   56                              	push esi
0x804aa82:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804aa88:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804aa8e:   ff b5 54 ff ff ff               	push dword ptr [ebp - 0xac]
0x804aa94:   57                              	push edi
0x804aa95:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804aa9b:   50                              	push eax
0x804aa9c:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804aaa2:   52                              	push edx
0x804aaa3:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804aaa6:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804aaa9:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804aaaf:   51                              	push ecx
0x804aab0:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804aab3:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804aab6:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804aab9:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804aabc:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804aabf:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804aac5:   e8 5c eb ff ff                  	call 0x8049626 <set_var>
0x804aaca:   81 c4 b8 00 00 00               	add esp, 0xb8
0x804aad0:   8b 85 b8 fe ff ff               	mov eax, dword ptr [ebp - 0x148]
0x804aad6:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804aad9:   5b                              	pop ebx
0x804aada:   5e                              	pop esi
0x804aadb:   5f                              	pop edi
0x804aadc:   5d                              	pop ebp
0x804aadd:   c3                              	ret 
; function: main at 0x804aade -- 0x804b0ce
0x804aade:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804aae2:   83 e4 f0                        	and esp, 0xfffffff0
0x804aae5:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804aae8:   55                              	push ebp
0x804aae9:   89 e5                           	mov ebp, esp
0x804aaeb:   53                              	push ebx
0x804aaec:   51                              	push ecx
0x804aaed:   83 ec 10                        	sub esp, 0x10
0x804aaf0:   e8 9b d8 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aaf5:   81 c3 0b 35 00 00               	add ebx, 0x350b
0x804aafb:   89 c8                           	mov eax, ecx
0x804aafd:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804ab04:   83 38 02                        	cmp dword ptr [eax], 2
0x804ab07:   75 26                           	jne 0x804ab2f <main+0x51>
0x804ab09:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804ab0c:   83 c0 04                        	add eax, 4
0x804ab0f:   8b 00                           	mov eax, dword ptr [eax]
0x804ab11:   83 ec 08                        	sub esp, 8
0x804ab14:   8d 93 b8 d1 ff ff               	lea edx, [ebx - 0x2e48]
0x804ab1a:   52                              	push edx
0x804ab1b:   50                              	push eax
0x804ab1c:   e8 df d7 ff ff                  	call 0x8048300 <strcmp>
0x804ab21:   83 c4 10                        	add esp, 0x10
0x804ab24:   85 c0                           	test eax, eax
0x804ab26:   75 07                           	jne 0x804ab2f <main+0x51>
0x804ab28:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804ab2f:   e8 22 d9 ff ff                  	call 0x8048456 <platform_main_begin>
0x804ab34:   e8 32 e9 ff ff                  	call 0x804946b <crc32_gentab>
0x804ab39:   e8 8f ee ff ff                  	call 0x80499cd <func_1>
0x804ab3e:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804ab44:   83 ec 04                        	sub esp, 4
0x804ab47:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab4a:   8d 93 ba d1 ff ff               	lea edx, [ebx - 0x2e46]
0x804ab50:   52                              	push edx
0x804ab51:   50                              	push eax
0x804ab52:   e8 20 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab57:   83 c4 10                        	add esp, 0x10
0x804ab5a:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804ab60:   83 ec 04                        	sub esp, 4
0x804ab63:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab66:   8d 93 be d1 ff ff               	lea edx, [ebx - 0x2e42]
0x804ab6c:   52                              	push edx
0x804ab6d:   50                              	push eax
0x804ab6e:   e8 04 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab73:   83 c4 10                        	add esp, 0x10
0x804ab76:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804ab7c:   83 ec 04                        	sub esp, 4
0x804ab7f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab82:   8d 93 c3 d1 ff ff               	lea edx, [ebx - 0x2e3d]
0x804ab88:   52                              	push edx
0x804ab89:   50                              	push eax
0x804ab8a:   e8 e8 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab8f:   83 c4 10                        	add esp, 0x10
0x804ab92:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804ab98:   83 ec 04                        	sub esp, 4
0x804ab9b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab9e:   8d 93 c8 d1 ff ff               	lea edx, [ebx - 0x2e38]
0x804aba4:   52                              	push edx
0x804aba5:   50                              	push eax
0x804aba6:   e8 cc e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abab:   83 c4 10                        	add esp, 0x10
0x804abae:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804abb4:   83 ec 04                        	sub esp, 4
0x804abb7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abba:   8d 93 cd d1 ff ff               	lea edx, [ebx - 0x2e33]
0x804abc0:   52                              	push edx
0x804abc1:   50                              	push eax
0x804abc2:   e8 b0 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abc7:   83 c4 10                        	add esp, 0x10
0x804abca:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804abd0:   83 ec 04                        	sub esp, 4
0x804abd3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abd6:   8d 93 d2 d1 ff ff               	lea edx, [ebx - 0x2e2e]
0x804abdc:   52                              	push edx
0x804abdd:   50                              	push eax
0x804abde:   e8 94 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abe3:   83 c4 10                        	add esp, 0x10
0x804abe6:   0f b6 83 3c 00 00 00            	movzx eax, byte ptr [ebx + 0x3c]
0x804abed:   0f b6 c0                        	movzx eax, al
0x804abf0:   83 ec 04                        	sub esp, 4
0x804abf3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abf6:   8d 93 d7 d1 ff ff               	lea edx, [ebx - 0x2e29]
0x804abfc:   52                              	push edx
0x804abfd:   50                              	push eax
0x804abfe:   e8 74 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac03:   83 c4 10                        	add esp, 0x10
0x804ac06:   0f b6 83 3d 00 00 00            	movzx eax, byte ptr [ebx + 0x3d]
0x804ac0d:   0f be c0                        	movsx eax, al
0x804ac10:   83 ec 04                        	sub esp, 4
0x804ac13:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac16:   8d 93 dc d1 ff ff               	lea edx, [ebx - 0x2e24]
0x804ac1c:   52                              	push edx
0x804ac1d:   50                              	push eax
0x804ac1e:   e8 54 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac23:   83 c4 10                        	add esp, 0x10
0x804ac26:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804ac2c:   89 c2                           	mov edx, eax
0x804ac2e:   83 ec 04                        	sub esp, 4
0x804ac31:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac34:   8d 83 e1 d1 ff ff               	lea eax, [ebx - 0x2e1f]
0x804ac3a:   50                              	push eax
0x804ac3b:   52                              	push edx
0x804ac3c:   e8 36 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac41:   83 c4 10                        	add esp, 0x10
0x804ac44:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804ac4a:   83 ec 04                        	sub esp, 4
0x804ac4d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac50:   8d 93 e6 d1 ff ff               	lea edx, [ebx - 0x2e1a]
0x804ac56:   52                              	push edx
0x804ac57:   50                              	push eax
0x804ac58:   e8 1a e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac5d:   83 c4 10                        	add esp, 0x10
0x804ac60:   0f b6 83 48 00 00 00            	movzx eax, byte ptr [ebx + 0x48]
0x804ac67:   0f b6 c0                        	movzx eax, al
0x804ac6a:   83 ec 04                        	sub esp, 4
0x804ac6d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac70:   8d 93 ec d1 ff ff               	lea edx, [ebx - 0x2e14]
0x804ac76:   52                              	push edx
0x804ac77:   50                              	push eax
0x804ac78:   e8 fa e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac7d:   83 c4 10                        	add esp, 0x10
0x804ac80:   0f b6 83 49 00 00 00            	movzx eax, byte ptr [ebx + 0x49]
0x804ac87:   0f b6 c0                        	movzx eax, al
0x804ac8a:   83 ec 04                        	sub esp, 4
0x804ac8d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac90:   8d 93 f2 d1 ff ff               	lea edx, [ebx - 0x2e0e]
0x804ac96:   52                              	push edx
0x804ac97:   50                              	push eax
0x804ac98:   e8 da e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac9d:   83 c4 10                        	add esp, 0x10
0x804aca0:   0f b6 83 4a 00 00 00            	movzx eax, byte ptr [ebx + 0x4a]
0x804aca7:   0f b6 c0                        	movzx eax, al
0x804acaa:   83 ec 04                        	sub esp, 4
0x804acad:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acb0:   8d 93 f8 d1 ff ff               	lea edx, [ebx - 0x2e08]
0x804acb6:   52                              	push edx
0x804acb7:   50                              	push eax
0x804acb8:   e8 ba e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acbd:   83 c4 10                        	add esp, 0x10
0x804acc0:   0f b7 83 4c 00 00 00            	movzx eax, word ptr [ebx + 0x4c]
0x804acc7:   98                              	cwde 
0x804acc8:   83 ec 04                        	sub esp, 4
0x804accb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acce:   8d 93 fe d1 ff ff               	lea edx, [ebx - 0x2e02]
0x804acd4:   52                              	push edx
0x804acd5:   50                              	push eax
0x804acd6:   e8 9c e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acdb:   83 c4 10                        	add esp, 0x10
0x804acde:   0f b7 83 4e 00 00 00            	movzx eax, word ptr [ebx + 0x4e]
0x804ace5:   0f b7 c0                        	movzx eax, ax
0x804ace8:   83 ec 04                        	sub esp, 4
0x804aceb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acee:   8d 93 04 d2 ff ff               	lea edx, [ebx - 0x2dfc]
0x804acf4:   52                              	push edx
0x804acf5:   50                              	push eax
0x804acf6:   e8 7c e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acfb:   83 c4 10                        	add esp, 0x10
0x804acfe:   8b 83 c4 04 00 00               	mov eax, dword ptr [ebx + 0x4c4]
0x804ad04:   89 c2                           	mov edx, eax
0x804ad06:   83 ec 04                        	sub esp, 4
0x804ad09:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad0c:   8d 83 0a d2 ff ff               	lea eax, [ebx - 0x2df6]
0x804ad12:   50                              	push eax
0x804ad13:   52                              	push edx
0x804ad14:   e8 5e e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad19:   83 c4 10                        	add esp, 0x10
0x804ad1c:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804ad22:   83 ec 04                        	sub esp, 4
0x804ad25:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad28:   8d 93 10 d2 ff ff               	lea edx, [ebx - 0x2df0]
0x804ad2e:   52                              	push edx
0x804ad2f:   50                              	push eax
0x804ad30:   e8 42 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad35:   83 c4 10                        	add esp, 0x10
0x804ad38:   0f b7 83 c8 04 00 00            	movzx eax, word ptr [ebx + 0x4c8]
0x804ad3f:   98                              	cwde 
0x804ad40:   83 ec 04                        	sub esp, 4
0x804ad43:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad46:   8d 93 16 d2 ff ff               	lea edx, [ebx - 0x2dea]
0x804ad4c:   52                              	push edx
0x804ad4d:   50                              	push eax
0x804ad4e:   e8 24 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad53:   83 c4 10                        	add esp, 0x10
0x804ad56:   0f b7 83 54 00 00 00            	movzx eax, word ptr [ebx + 0x54]
0x804ad5d:   0f b7 c0                        	movzx eax, ax
0x804ad60:   83 ec 04                        	sub esp, 4
0x804ad63:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad66:   8d 93 1c d2 ff ff               	lea edx, [ebx - 0x2de4]
0x804ad6c:   52                              	push edx
0x804ad6d:   50                              	push eax
0x804ad6e:   e8 04 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad73:   83 c4 10                        	add esp, 0x10
0x804ad76:   0f b7 83 56 00 00 00            	movzx eax, word ptr [ebx + 0x56]
0x804ad7d:   0f b7 c0                        	movzx eax, ax
0x804ad80:   83 ec 04                        	sub esp, 4
0x804ad83:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad86:   8d 93 22 d2 ff ff               	lea edx, [ebx - 0x2dde]
0x804ad8c:   52                              	push edx
0x804ad8d:   50                              	push eax
0x804ad8e:   e8 e4 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad93:   83 c4 10                        	add esp, 0x10
0x804ad96:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804ad9c:   89 c2                           	mov edx, eax
0x804ad9e:   83 ec 04                        	sub esp, 4
0x804ada1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ada4:   8d 83 28 d2 ff ff               	lea eax, [ebx - 0x2dd8]
0x804adaa:   50                              	push eax
0x804adab:   52                              	push edx
0x804adac:   e8 c6 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adb1:   83 c4 10                        	add esp, 0x10
0x804adb4:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804adba:   83 ec 04                        	sub esp, 4
0x804adbd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adc0:   8d 93 2e d2 ff ff               	lea edx, [ebx - 0x2dd2]
0x804adc6:   52                              	push edx
0x804adc7:   50                              	push eax
0x804adc8:   e8 aa e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adcd:   83 c4 10                        	add esp, 0x10
0x804add0:   0f b7 83 60 00 00 00            	movzx eax, word ptr [ebx + 0x60]
0x804add7:   98                              	cwde 
0x804add8:   83 ec 04                        	sub esp, 4
0x804addb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adde:   8d 93 34 d2 ff ff               	lea edx, [ebx - 0x2dcc]
0x804ade4:   52                              	push edx
0x804ade5:   50                              	push eax
0x804ade6:   e8 8c e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adeb:   83 c4 10                        	add esp, 0x10
0x804adee:   0f b6 83 62 00 00 00            	movzx eax, byte ptr [ebx + 0x62]
0x804adf5:   0f be c0                        	movsx eax, al
0x804adf8:   83 ec 04                        	sub esp, 4
0x804adfb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adfe:   8d 93 3a d2 ff ff               	lea edx, [ebx - 0x2dc6]
0x804ae04:   52                              	push edx
0x804ae05:   50                              	push eax
0x804ae06:   e8 6c e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae0b:   83 c4 10                        	add esp, 0x10
0x804ae0e:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804ae14:   83 ec 04                        	sub esp, 4
0x804ae17:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae1a:   8d 93 40 d2 ff ff               	lea edx, [ebx - 0x2dc0]
0x804ae20:   52                              	push edx
0x804ae21:   50                              	push eax
0x804ae22:   e8 50 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae27:   83 c4 10                        	add esp, 0x10
0x804ae2a:   0f b7 83 ca 04 00 00            	movzx eax, word ptr [ebx + 0x4ca]
0x804ae31:   98                              	cwde 
0x804ae32:   83 ec 04                        	sub esp, 4
0x804ae35:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae38:   8d 93 46 d2 ff ff               	lea edx, [ebx - 0x2dba]
0x804ae3e:   52                              	push edx
0x804ae3f:   50                              	push eax
0x804ae40:   e8 32 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae45:   83 c4 10                        	add esp, 0x10
0x804ae48:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804ae4e:   89 c2                           	mov edx, eax
0x804ae50:   83 ec 04                        	sub esp, 4
0x804ae53:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae56:   8d 83 4c d2 ff ff               	lea eax, [ebx - 0x2db4]
0x804ae5c:   50                              	push eax
0x804ae5d:   52                              	push edx
0x804ae5e:   e8 14 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae63:   83 c4 10                        	add esp, 0x10
0x804ae66:   0f b7 83 6c 00 00 00            	movzx eax, word ptr [ebx + 0x6c]
0x804ae6d:   0f b7 c0                        	movzx eax, ax
0x804ae70:   83 ec 04                        	sub esp, 4
0x804ae73:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae76:   8d 93 52 d2 ff ff               	lea edx, [ebx - 0x2dae]
0x804ae7c:   52                              	push edx
0x804ae7d:   50                              	push eax
0x804ae7e:   e8 f4 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae83:   83 c4 10                        	add esp, 0x10
0x804ae86:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804ae8c:   83 ec 04                        	sub esp, 4
0x804ae8f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae92:   8d 93 58 d2 ff ff               	lea edx, [ebx - 0x2da8]
0x804ae98:   52                              	push edx
0x804ae99:   50                              	push eax
0x804ae9a:   e8 d8 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae9f:   83 c4 10                        	add esp, 0x10
0x804aea2:   0f b6 83 74 00 00 00            	movzx eax, byte ptr [ebx + 0x74]
0x804aea9:   0f b6 c0                        	movzx eax, al
0x804aeac:   83 ec 04                        	sub esp, 4
0x804aeaf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aeb2:   8d 93 5e d2 ff ff               	lea edx, [ebx - 0x2da2]
0x804aeb8:   52                              	push edx
0x804aeb9:   50                              	push eax
0x804aeba:   e8 b8 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aebf:   83 c4 10                        	add esp, 0x10
0x804aec2:   0f b7 83 76 00 00 00            	movzx eax, word ptr [ebx + 0x76]
0x804aec9:   98                              	cwde 
0x804aeca:   83 ec 04                        	sub esp, 4
0x804aecd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aed0:   8d 93 64 d2 ff ff               	lea edx, [ebx - 0x2d9c]
0x804aed6:   52                              	push edx
0x804aed7:   50                              	push eax
0x804aed8:   e8 9a e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aedd:   83 c4 10                        	add esp, 0x10
0x804aee0:   0f b6 83 78 00 00 00            	movzx eax, byte ptr [ebx + 0x78]
0x804aee7:   0f be c0                        	movsx eax, al
0x804aeea:   83 ec 04                        	sub esp, 4
0x804aeed:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aef0:   8d 93 6a d2 ff ff               	lea edx, [ebx - 0x2d96]
0x804aef6:   52                              	push edx
0x804aef7:   50                              	push eax
0x804aef8:   e8 7a e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aefd:   83 c4 10                        	add esp, 0x10
0x804af00:   0f b7 83 7a 00 00 00            	movzx eax, word ptr [ebx + 0x7a]
0x804af07:   98                              	cwde 
0x804af08:   83 ec 04                        	sub esp, 4
0x804af0b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af0e:   8d 93 70 d2 ff ff               	lea edx, [ebx - 0x2d90]
0x804af14:   52                              	push edx
0x804af15:   50                              	push eax
0x804af16:   e8 5c e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af1b:   83 c4 10                        	add esp, 0x10
0x804af1e:   8b 83 7c 00 00 00               	mov eax, dword ptr [ebx + 0x7c]
0x804af24:   89 c2                           	mov edx, eax
0x804af26:   83 ec 04                        	sub esp, 4
0x804af29:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af2c:   8d 83 76 d2 ff ff               	lea eax, [ebx - 0x2d8a]
0x804af32:   50                              	push eax
0x804af33:   52                              	push edx
0x804af34:   e8 3e e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af39:   83 c4 10                        	add esp, 0x10
0x804af3c:   0f b7 83 80 00 00 00            	movzx eax, word ptr [ebx + 0x80]
0x804af43:   0f b7 c0                        	movzx eax, ax
0x804af46:   83 ec 04                        	sub esp, 4
0x804af49:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af4c:   8d 93 7c d2 ff ff               	lea edx, [ebx - 0x2d84]
0x804af52:   52                              	push edx
0x804af53:   50                              	push eax
0x804af54:   e8 1e e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af59:   83 c4 10                        	add esp, 0x10
0x804af5c:   8b 83 cc 04 00 00               	mov eax, dword ptr [ebx + 0x4cc]
0x804af62:   89 c2                           	mov edx, eax
0x804af64:   83 ec 04                        	sub esp, 4
0x804af67:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af6a:   8d 83 82 d2 ff ff               	lea eax, [ebx - 0x2d7e]
0x804af70:   50                              	push eax
0x804af71:   52                              	push edx
0x804af72:   e8 00 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af77:   83 c4 10                        	add esp, 0x10
0x804af7a:   0f b6 83 82 00 00 00            	movzx eax, byte ptr [ebx + 0x82]
0x804af81:   0f be c0                        	movsx eax, al
0x804af84:   83 ec 04                        	sub esp, 4
0x804af87:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af8a:   8d 93 88 d2 ff ff               	lea edx, [ebx - 0x2d78]
0x804af90:   52                              	push edx
0x804af91:   50                              	push eax
0x804af92:   e8 e0 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af97:   83 c4 10                        	add esp, 0x10
0x804af9a:   8b 83 84 00 00 00               	mov eax, dword ptr [ebx + 0x84]
0x804afa0:   83 ec 04                        	sub esp, 4
0x804afa3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afa6:   8d 93 8e d2 ff ff               	lea edx, [ebx - 0x2d72]
0x804afac:   52                              	push edx
0x804afad:   50                              	push eax
0x804afae:   e8 c4 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afb3:   83 c4 10                        	add esp, 0x10
0x804afb6:   8b 83 88 00 00 00               	mov eax, dword ptr [ebx + 0x88]
0x804afbc:   83 ec 04                        	sub esp, 4
0x804afbf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afc2:   8d 93 94 d2 ff ff               	lea edx, [ebx - 0x2d6c]
0x804afc8:   52                              	push edx
0x804afc9:   50                              	push eax
0x804afca:   e8 a8 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afcf:   83 c4 10                        	add esp, 0x10
0x804afd2:   8b 83 8c 00 00 00               	mov eax, dword ptr [ebx + 0x8c]
0x804afd8:   89 c2                           	mov edx, eax
0x804afda:   83 ec 04                        	sub esp, 4
0x804afdd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afe0:   8d 83 9a d2 ff ff               	lea eax, [ebx - 0x2d66]
0x804afe6:   50                              	push eax
0x804afe7:   52                              	push edx
0x804afe8:   e8 8a e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afed:   83 c4 10                        	add esp, 0x10
0x804aff0:   8b 83 d0 04 00 00               	mov eax, dword ptr [ebx + 0x4d0]
0x804aff6:   89 c2                           	mov edx, eax
0x804aff8:   83 ec 04                        	sub esp, 4
0x804affb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804affe:   8d 83 a0 d2 ff ff               	lea eax, [ebx - 0x2d60]
0x804b004:   50                              	push eax
0x804b005:   52                              	push edx
0x804b006:   e8 6c e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b00b:   83 c4 10                        	add esp, 0x10
0x804b00e:   8b 83 90 00 00 00               	mov eax, dword ptr [ebx + 0x90]
0x804b014:   89 c2                           	mov edx, eax
0x804b016:   83 ec 04                        	sub esp, 4
0x804b019:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b01c:   8d 83 a6 d2 ff ff               	lea eax, [ebx - 0x2d5a]
0x804b022:   50                              	push eax
0x804b023:   52                              	push edx
0x804b024:   e8 4e e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b029:   83 c4 10                        	add esp, 0x10
0x804b02c:   0f b7 83 94 00 00 00            	movzx eax, word ptr [ebx + 0x94]
0x804b033:   98                              	cwde 
0x804b034:   83 ec 04                        	sub esp, 4
0x804b037:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b03a:   8d 93 ac d2 ff ff               	lea edx, [ebx - 0x2d54]
0x804b040:   52                              	push edx
0x804b041:   50                              	push eax
0x804b042:   e8 30 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b047:   83 c4 10                        	add esp, 0x10
0x804b04a:   0f b7 83 96 00 00 00            	movzx eax, word ptr [ebx + 0x96]
0x804b051:   98                              	cwde 
0x804b052:   83 ec 04                        	sub esp, 4
0x804b055:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b058:   8d 93 b2 d2 ff ff               	lea edx, [ebx - 0x2d4e]
0x804b05e:   52                              	push edx
0x804b05f:   50                              	push eax
0x804b060:   e8 12 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b065:   83 c4 10                        	add esp, 0x10
0x804b068:   0f b6 83 98 00 00 00            	movzx eax, byte ptr [ebx + 0x98]
0x804b06f:   0f b6 c0                        	movzx eax, al
0x804b072:   83 ec 04                        	sub esp, 4
0x804b075:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b078:   8d 93 b8 d2 ff ff               	lea edx, [ebx - 0x2d48]
0x804b07e:   52                              	push edx
0x804b07f:   50                              	push eax
0x804b080:   e8 f2 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b085:   83 c4 10                        	add esp, 0x10
0x804b088:   0f b7 83 9a 00 00 00            	movzx eax, word ptr [ebx + 0x9a]
0x804b08f:   0f b7 c0                        	movzx eax, ax
0x804b092:   83 ec 04                        	sub esp, 4
0x804b095:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b098:   8d 93 be d2 ff ff               	lea edx, [ebx - 0x2d42]
0x804b09e:   52                              	push edx
0x804b09f:   50                              	push eax
0x804b0a0:   e8 d2 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0a5:   83 c4 10                        	add esp, 0x10
0x804b0a8:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b0ae:   f7 d0                           	not eax
0x804b0b0:   83 ec 08                        	sub esp, 8
0x804b0b3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0b6:   50                              	push eax
0x804b0b7:   e8 aa d3 ff ff                  	call 0x8048466 <platform_main_end>
0x804b0bc:   83 c4 10                        	add esp, 0x10
0x804b0bf:   b8 00 00 00 00                  	mov eax, 0
0x804b0c4:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b0c7:   59                              	pop ecx
0x804b0c8:   5b                              	pop ebx
0x804b0c9:   5d                              	pop ebp
0x804b0ca:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b0cd:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b0ce -- 0x804b0d2
0x804b0ce:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b0d1:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b0d2 -- 0x804b0d6
0x804b0d2:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b0d5:   c3                              	ret 
; data inside code section at 0x804b0d6 -- 0x804b0e0
0x804b0d6:   66 90 66 90 66 90 66 90  66 90                     |f.f.f.f.f.      |
; function: __libc_csu_init at 0x804b0e0 -- 0x804b13d
0x804b0e0:   55                              	push ebp
0x804b0e1:   57                              	push edi
0x804b0e2:   56                              	push esi
0x804b0e3:   53                              	push ebx
0x804b0e4:   e8 a7 d2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b0e9:   81 c3 17 2f 00 00               	add ebx, 0x2f17
0x804b0ef:   83 ec 0c                        	sub esp, 0xc
0x804b0f2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b0f6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b0fc:   e8 cb d1 ff ff                  	call 0x80482cc <_init>
0x804b101:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b107:   29 c6                           	sub esi, eax
0x804b109:   c1 fe 02                        	sar esi, 2
0x804b10c:   85 f6                           	test esi, esi
0x804b10e:   74 25                           	je 0x804b135 <__libc_csu_init+0x55>
0x804b110:   31 ff                           	xor edi, edi
0x804b112:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b118:   83 ec 04                        	sub esp, 4
0x804b11b:   55                              	push ebp
0x804b11c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b120:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b124:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b12b:   83 c7 01                        	add edi, 1
0x804b12e:   83 c4 10                        	add esp, 0x10
0x804b131:   39 fe                           	cmp esi, edi
0x804b133:   75 e3                           	jne 0x804b118 <__libc_csu_init+0x38>
0x804b135:   83 c4 0c                        	add esp, 0xc
0x804b138:   5b                              	pop ebx
0x804b139:   5e                              	pop esi
0x804b13a:   5f                              	pop edi
0x804b13b:   5d                              	pop ebp
0x804b13c:   c3                              	ret 
; data inside code section at 0x804b13d -- 0x804b140
0x804b13d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b140 -- 0x804b142
0x804b140:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b144 -- 0x804b158
0x804b144:   53                              	push ebx
0x804b145:   83 ec 08                        	sub esp, 8
0x804b148:   e8 43 d2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b14d:   81 c3 b3 2e 00 00               	add ebx, 0x2eb3
0x804b153:   83 c4 08                        	add esp, 8
0x804b156:   5b                              	pop ebx
0x804b157:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 5c b1 04 08  04 00 00 00 11 00 10 00   |....\...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b158:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b168:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b178:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b188:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b198:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b1a8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b1b8:   31 00 67 5f 33 00 67 5f  31 32 00 67 5f 32 34 00   |1.g_3.g_12.g_24.|
0x804b1c8:   67 5f 32 36 00 67 5f 32  38 00 67 5f 32 39 00 67   |g_26.g_28.g_29.g|
0x804b1d8:   5f 34 34 00 67 5f 35 33  00 67 5f 36 36 00 67 5f   |_44.g_53.g_66.g_|
0x804b1e8:   31 30 35 00 67 5f 31 30  39 00 67 5f 31 31 39 00   |105.g_109.g_119.|
0x804b1f8:   67 5f 31 33 34 00 67 5f  31 33 35 00 67 5f 31 37   |g_134.g_135.g_17|
0x804b208:   31 00 67 5f 31 37 32 00  67 5f 32 36 31 00 67 5f   |1.g_172.g_261.g_|
0x804b218:   33 33 38 00 67 5f 33 36  32 00 67 5f 33 36 38 00   |338.g_362.g_368.|
0x804b228:   67 5f 33 38 36 00 67 5f  33 39 36 00 67 5f 34 36   |g_386.g_396.g_46|
0x804b238:   31 00 67 5f 34 36 32 00  67 5f 34 36 33 00 67 5f   |1.g_462.g_463.g_|
0x804b248:   34 39 34 00 67 5f 34 39  35 00 67 5f 34 39 36 00   |494.g_495.g_496.|
0x804b258:   67 5f 35 39 36 00 67 5f  36 32 31 00 67 5f 36 39   |g_596.g_621.g_69|
0x804b268:   34 00 67 5f 36 39 35 00  67 5f 36 39 36 00 67 5f   |4.g_695.g_696.g_|
0x804b278:   36 39 37 00 67 5f 36 39  38 00 67 5f 37 37 36 00   |697.g_698.g_776.|
0x804b288:   67 5f 37 37 37 00 67 5f  37 37 39 00 67 5f 37 39   |g_777.g_779.g_79|
0x804b298:   31 00 67 5f 38 34 33 00  67 5f 38 34 34 00 67 5f   |1.g_843.g_844.g_|
0x804b2a8:   38 34 36 00 67 5f 38 34  37 00 67 5f 38 34 38 00   |846.g_847.g_848.|
0x804b2b8:   67 5f 38 34 39 00 67 5f  39 31 32 00 00 00 00 3f   |g_849.g_912....?|
0x804b2c8:   ff ff ff 7e 00 00 80 0d  00 00 80 31 ff ff 7f 3f   |...~.......1...?|
0x804b2d8:   00 00 00 27 00 00 80 71  ff ff ff 34 00 00 00 00   |...'...q...4....|
0x804b2e8:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804b2f8:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804b308:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804b318:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804b328:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804b330:   01 1b 03 3b b8 02 00 00  56 00 00 00 c0 cf ff ff   |...;....V.......|
0x804b340:   e8 02 00 00 00 d0 ff ff  0c 03 00 00 50 d0 ff ff   |............P...|
0x804b350:   d4 02 00 00 26 d1 ff ff  20 03 00 00 36 d1 ff ff   |....&... ...6...|
0x804b360:   40 03 00 00 64 d1 ff ff  64 03 00 00 82 d1 ff ff   |@...d...d.......|
0x804b370:   84 03 00 00 aa d1 ff ff  a4 03 00 00 d4 d1 ff ff   |................|
0x804b380:   c4 03 00 00 fd d1 ff ff  e4 03 00 00 40 d2 ff ff   |............@...|
0x804b390:   04 04 00 00 81 d2 ff ff  24 04 00 00 d9 d2 ff ff   |........$.......|
0x804b3a0:   48 04 00 00 2b d3 ff ff  6c 04 00 00 68 d3 ff ff   |H...+...l...h...|
0x804b3b0:   8c 04 00 00 9f d3 ff ff  ac 04 00 00 be d3 ff ff   |................|
0x804b3c0:   cc 04 00 00 e8 d3 ff ff  ec 04 00 00 14 d4 ff ff   |................|
0x804b3d0:   0c 05 00 00 3f d4 ff ff  2c 05 00 00 88 d4 ff ff   |....?...,.......|
0x804b3e0:   4c 05 00 00 cf d4 ff ff  6c 05 00 00 29 d5 ff ff   |L.......l...)...|
0x804b3f0:   90 05 00 00 7d d5 ff ff  b4 05 00 00 bc d5 ff ff   |....}...........|
0x804b400:   d4 05 00 00 f5 d5 ff ff  f4 05 00 00 17 d6 ff ff   |................|
0x804b410:   14 06 00 00 65 d6 ff ff  34 06 00 00 a1 d6 ff ff   |....e...4.......|
0x804b420:   54 06 00 00 2a d7 ff ff  74 06 00 00 5c d7 ff ff   |T...*...t...\...|
0x804b430:   94 06 00 00 8c d7 ff ff  b4 06 00 00 d1 d7 ff ff   |................|
0x804b440:   d4 06 00 00 10 d8 ff ff  f4 06 00 00 42 d8 ff ff   |............B...|
0x804b450:   14 07 00 00 6e d8 ff ff  34 07 00 00 8c d8 ff ff   |....n...4.......|
0x804b460:   54 07 00 00 b4 d8 ff ff  74 07 00 00 d9 d8 ff ff   |T.......t.......|
0x804b470:   94 07 00 00 fe d8 ff ff  b4 07 00 00 35 d9 ff ff   |............5...|
0x804b480:   d4 07 00 00 69 d9 ff ff  f4 07 00 00 bb d9 ff ff   |....i...........|
0x804b490:   18 08 00 00 07 da ff ff  3c 08 00 00 3e da ff ff   |........<...>...|
0x804b4a0:   5c 08 00 00 6f da ff ff  7c 08 00 00 8e da ff ff   |\...o...|.......|
0x804b4b0:   9c 08 00 00 b8 da ff ff  bc 08 00 00 e0 da ff ff   |................|
0x804b4c0:   dc 08 00 00 09 db ff ff  fc 08 00 00 45 db ff ff   |............E...|
0x804b4d0:   1c 09 00 00 7f db ff ff  3c 09 00 00 d2 db ff ff   |........<.......|
0x804b4e0:   60 09 00 00 1f dc ff ff  84 09 00 00 57 dc ff ff   |`...........W...|
0x804b4f0:   a4 09 00 00 89 dc ff ff  c4 09 00 00 9d dc ff ff   |................|
0x804b500:   e4 09 00 00 b4 dc ff ff  04 0a 00 00 c9 dc ff ff   |................|
0x804b510:   24 0a 00 00 df dc ff ff  44 0a 00 00 06 dd ff ff   |$.......D.......|
0x804b520:   64 0a 00 00 2b dd ff ff  84 0a 00 00 6a dd ff ff   |d...+.......j...|
0x804b530:   a4 0a 00 00 a3 dd ff ff  c4 0a 00 00 cf dd ff ff   |................|
0x804b540:   e4 0a 00 00 f5 dd ff ff  04 0b 00 00 37 de ff ff   |............7...|
0x804b550:   24 0b 00 00 79 de ff ff  44 0b 00 00 bb de ff ff   |$...y...D.......|
0x804b560:   64 0b 00 00 30 df ff ff  84 0b 00 00 8d df ff ff   |d...0...........|
0x804b570:   a4 0b 00 00 ea df ff ff  c4 0b 00 00 47 e0 ff ff   |............G...|
0x804b580:   e4 0b 00 00 d7 e0 ff ff  04 0c 00 00 3b e1 ff ff   |............;...|
0x804b590:   24 0c 00 00 ab e1 ff ff  44 0c 00 00 f2 e1 ff ff   |$.......D.......|
0x804b5a0:   68 0c 00 00 47 e2 ff ff  88 0c 00 00 8e e2 ff ff   |h...G...........|
0x804b5b0:   ac 0c 00 00 f6 e2 ff ff  d0 0c 00 00 9d e6 ff ff   |................|
0x804b5c0:   00 0d 00 00 ae f7 ff ff  30 0d 00 00 9e fd ff ff   |........0.......|
0x804b5d0:   68 0d 00 00 a2 fd ff ff  7c 0d 00 00 b0 fd ff ff   |h.......|.......|
0x804b5e0:   90 0d 00 00 10 fe ff ff  dc 0d 00 00 14            |.............   |
; section: .eh_frame
0x804b5ec:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b5fc:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b60c:   74 cd ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |t........... ...|
0x804b61c:   30 00 00 00 d0 cc ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b62c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b63c:   10 00 00 00 54 00 00 00  ec cc ff ff 08 00 00 00   |....T...........|
0x804b64c:   00 00 00 00 1c 00 00 00  68 00 00 00 fe cd ff ff   |........h.......|
0x804b65c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b66c:   04 04 00 00 20 00 00 00  88 00 00 00 ee cd ff ff   |.... ...........|
0x804b67c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b68c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b69c:   f8 cd ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b6ac:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b6bc:   f6 cd ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b6cc:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b6dc:   fe cd ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b6ec:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b6fc:   08 ce ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b70c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b71c:   11 ce ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b72c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b73c:   34 ce ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |4...A....A....B.|
0x804b74c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b75c:   55 ce ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |U...X....A....B.|
0x804b76c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b77c:   90 01 00 00 89 ce ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b78c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b79c:   1c 00 00 00 b4 01 00 00  b7 ce ff ff 3d 00 00 00   |............=...|
0x804b7ac:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b7bc:   1c 00 00 00 d4 01 00 00  d4 ce ff ff 37 00 00 00   |............7...|
0x804b7cc:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b7dc:   1c 00 00 00 f4 01 00 00  eb ce ff ff 1f 00 00 00   |................|
0x804b7ec:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b7fc:   1c 00 00 00 14 02 00 00  ea ce ff ff 2a 00 00 00   |............*...|
0x804b80c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b81c:   1c 00 00 00 34 02 00 00  f4 ce ff ff 2c 00 00 00   |....4.......,...|
0x804b82c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b83c:   1c 00 00 00 54 02 00 00  00 cf ff ff 2b 00 00 00   |....T.......+...|
0x804b84c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b85c:   1c 00 00 00 74 02 00 00  0b cf ff ff 49 00 00 00   |....t.......I...|
0x804b86c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b87c:   1c 00 00 00 94 02 00 00  34 cf ff ff 47 00 00 00   |........4...G...|
0x804b88c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b89c:   20 00 00 00 b4 02 00 00  5b cf ff ff 5a 00 00 00   | .......[...Z...|
0x804b8ac:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b8bc:   c5 0c 04 04 20 00 00 00  d8 02 00 00 91 cf ff ff   |.... ...........|
0x804b8cc:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b8dc:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b8ec:   c1 cf ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b8fc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b90c:   e0 cf ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b91c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b92c:   f9 cf ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b93c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b94c:   fb cf ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b95c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b96c:   29 d0 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |)...<....A....B.|
0x804b97c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b98c:   45 d0 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |E........A....B.|
0x804b99c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b9ac:   ae d0 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b9bc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b9cc:   c0 d0 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b9dc:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b9ec:   d0 d0 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b9fc:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804ba0c:   f5 d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804ba1c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804ba2c:   14 d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804ba3c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804ba4c:   26 d1 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |&...,....A....B.|
0x804ba5c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804ba6c:   32 d1 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |2........A....B.|
0x804ba7c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804ba8c:   30 d1 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |0...(....A....B.|
0x804ba9c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804baac:   38 d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |8...%....A....B.|
0x804babc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804bacc:   3d d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |=...%....A....B.|
0x804badc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804baec:   42 d1 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |B...7....A....B.|
0x804bafc:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804bb0c:   59 d1 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |Y...4....A....B.|
0x804bb1c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804bb2c:   6d d1 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |m...R....A....B.|
0x804bb3c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804bb4c:   60 05 00 00 9b d1 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804bb5c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804bb6c:   1c 00 00 00 84 05 00 00  c3 d1 ff ff 37 00 00 00   |............7...|
0x804bb7c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bb8c:   1c 00 00 00 a4 05 00 00  da d1 ff ff 31 00 00 00   |............1...|
0x804bb9c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bbac:   1c 00 00 00 c4 05 00 00  eb d1 ff ff 1f 00 00 00   |................|
0x804bbbc:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bbcc:   1c 00 00 00 e4 05 00 00  ea d1 ff ff 2a 00 00 00   |............*...|
0x804bbdc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bbec:   1c 00 00 00 04 06 00 00  f4 d1 ff ff 28 00 00 00   |............(...|
0x804bbfc:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bc0c:   1c 00 00 00 24 06 00 00  fc d1 ff ff 29 00 00 00   |....$.......)...|
0x804bc1c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bc2c:   1c 00 00 00 44 06 00 00  05 d2 ff ff 3c 00 00 00   |....D.......<...|
0x804bc3c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bc4c:   1c 00 00 00 64 06 00 00  21 d2 ff ff 3a 00 00 00   |....d...!...:...|
0x804bc5c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bc6c:   20 00 00 00 84 06 00 00  3b d2 ff ff 53 00 00 00   | .......;...S...|
0x804bc7c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bc8c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 6a d2 ff ff   |.... .......j...|
0x804bc9c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bcac:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bcbc:   93 d2 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804bccc:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bcdc:   ab d2 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bcec:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bcfc:   bd d2 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bd0c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bd1c:   b1 d2 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bd2c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bd3c:   a8 d2 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bd4c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bd5c:   9d d2 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bd6c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bd7c:   93 d2 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804bd8c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bd9c:   9a d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bdac:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bdbc:   9f d2 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804bdcc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bddc:   be d2 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bdec:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bdfc:   d7 d2 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804be0c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804be1c:   e3 d2 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804be2c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804be3c:   e9 d2 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804be4c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804be5c:   0b d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804be6c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804be7c:   2d d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |-...B....A....B.|
0x804be8c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804be9c:   4f d3 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |O...u....A....B.|
0x804beac:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bebc:   a4 d3 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804becc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bedc:   e1 d3 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804beec:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804befc:   1e d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bf0c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bf1c:   5b d4 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |[........A....B.|
0x804bf2c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804bf3c:   cb d4 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804bf4c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bf5c:   0f d5 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804bf6c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bf7c:   5f d5 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |_...G....A....B.|
0x804bf8c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bf9c:   b0 09 00 00 82 d5 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804bfac:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bfbc:   d0 09 00 00 b7 d5 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804bfcc:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bfdc:   20 00 00 00 f4 09 00 00  da d5 ff ff 68 00 00 00   | ...........h...|
0x804bfec:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bffc:   0c 04 04 00 2c 00 00 00  18 0a 00 00 1e d6 ff ff   |....,...........|
0x804c00c:   a7 03 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804c01c:   86 04 83 05 03 97 03 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804c02c:   04 00 00 00 2c 00 00 00  48 0a 00 00 95 d9 ff ff   |....,...H.......|
0x804c03c:   11 11 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804c04c:   86 04 83 05 03 01 11 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804c05c:   04 00 00 00 34 00 00 00  78 0a 00 00 76 ea ff ff   |....4...x...v...|
0x804c06c:   f0 05 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804c07c:   0f 03 75 78 06 10 03 02  75 7c 03 db 05 c1 0c 01   |..ux....u|......|
0x804c08c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804c09c:   b0 0a 00 00 2e f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804c0ac:   10 00 00 00 c4 0a 00 00  1e f0 ff ff 04 00 00 00   |................|
0x804c0bc:   00 00 00 00 48 00 00 00  d8 0a 00 00 18 f0 ff ff   |....H...........|
0x804c0cc:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c0dc:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c0ec:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c0fc:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c10c:   10 00 00 00 24 0b 00 00  2c f0 ff ff 02 00 00 00   |....$...,.......|
0x804c11c:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 44 b1 04 08  19 00 00 00 0c df 04 08   |....D...........|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 92 1d be 29   |...............)|
0x804e028:   fc ff ff ff 9d a9 bd 64  1f 79 bd f3 08 00 00 00   |.......d.y......|
0x804e038:   10 0a 0c 5e f0 28 00 00  0f de fa 50 e1 c2 fc bc   |...^.(.....P....|
0x804e048:   a8 04 da 00 c0 c8 ff ff  48 16 ee e6 36 12 f6 ff   |........H...6...|
0x804e058:   d0 77 30 c0 0a 79 6b 1c  69 00 ff 00 01 00 00 00   |.w0..yk.i.......|
0x804e068:   04 00 00 00 04 00 00 00  e6 b1 dd 49 f7 00 01 00   |...........I....|
0x804e078:   c9 00 85 31 08 e0 76 64  01 00 fc 00 c7 56 ad 83   |...1..vd.....V..|
0x804e088:   a4 79 00 a6 f6 ff ff ff  ff ff ff ff 05 bb fc ff   |.y..............|
0x804e098:   9b 00 5c 56 ??                                     |..\V?           |
