;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:00:46
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 10 d1 ff ff               	lea eax, [ebx - 0x2ef0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 b0 d0 ff ff               	lea eax, [ebx - 0x2f50]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 14 ad 04 08               	mov eax, 0x804ad14
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 80 e0 04 08                  	mov eax, 0x804e080
0x80483a5:   3d 80 e0 04 08                  	cmp eax, 0x804e080
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 80 e0 04 08                  	push 0x804e080
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 80 e0 04 08                  	mov eax, 0x804e080
0x80483e5:   2d 80 e0 04 08                  	sub eax, 0x804e080
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 80 e0 04 08                  	push 0x804e080
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 e0 04 08 00            	cmp byte ptr [0x804e080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 e0 04 08 01            	mov byte ptr [0x804e080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 4a 2c 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 36 2c 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 30 d1 ff ff               	lea edx, [eax - 0x2ed0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 09 2c 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 eb 2b 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 c3 2b 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 99 2b 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 70 2b 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 2d 2b 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 eb 2a 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 93 2a 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 42 2a 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 05 2a 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 ce 29 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 af 29 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 85 29 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 59 29 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 2e 29 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 e5 28 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 9d 28 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 43 28 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 f0 27 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 b1 27 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 7b 27 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 59 27 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 0b 27 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 cf 26 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 46 26 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 14 26 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 e4 25 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 9f 25 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 60 25 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 2e 25 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 ff 24 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 e1 24 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 b9 24 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 94 24 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 6f 24 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 38 24 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 03 24 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 b1 23 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 66 23 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 2f 23 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 fe 22 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 df 22 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 b5 22 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 8d 22 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 64 22 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 28 22 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 ed 21 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 9a 21 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 4e 21 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 16 21 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 e7 20 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 d3 20 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 bc 20 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 a7 20 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 91 20 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 6a 20 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 45 20 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 06 20 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 cd 1f 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 a1 1f 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 7b 1f 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 1c d2 ff ff               	fld dword ptr [eax - 0x2de4]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 1c d2 ff ff               	fld dword ptr [eax - 0x2de4]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 20 d2 ff ff               	fld dword ptr [eax - 0x2de0]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 39 1f 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 1c d2 ff ff               	fld dword ptr [eax - 0x2de4]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 1c d2 ff ff               	fld dword ptr [eax - 0x2de4]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 20 d2 ff ff               	fld dword ptr [eax - 0x2de0]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 f7 1e 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 24 d2 ff ff               	fld dword ptr [eax - 0x2ddc]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 28 d2 ff ff               	fld dword ptr [eax - 0x2dd8]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 2c d2 ff ff               	fld dword ptr [eax - 0x2dd4]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 b5 1e 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 30 d2 ff ff               	fld dword ptr [eax - 0x2dd0]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 34 d2 ff ff               	fld dword ptr [eax - 0x2dcc]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 38 d2 ff ff               	fld dword ptr [eax - 0x2dc8]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 3d 1e 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 40 d2 ff ff               	fld qword ptr [eax - 0x2dc0]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 40 d2 ff ff               	fld qword ptr [eax - 0x2dc0]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 48 d2 ff ff               	fld qword ptr [eax - 0x2db8]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 e0 1d 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 40 d2 ff ff               	fld qword ptr [eax - 0x2dc0]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 40 d2 ff ff               	fld qword ptr [eax - 0x2dc0]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 48 d2 ff ff               	fld qword ptr [eax - 0x2db8]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 83 1d 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 50 d2 ff ff               	fld qword ptr [eax - 0x2db0]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 58 d2 ff ff               	fld qword ptr [eax - 0x2da8]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 60 d2 ff ff               	fld qword ptr [eax - 0x2da0]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 26 1d 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 68 d2 ff ff               	fld qword ptr [eax - 0x2d98]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 70 d2 ff ff               	fld qword ptr [eax - 0x2d90]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 78 d2 ff ff               	fld qword ptr [eax - 0x2d88]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 96 1c 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 80 d2 ff ff               	fld dword ptr [eax - 0x2d80]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 84 d2 ff ff               	fld dword ptr [eax - 0x2d7c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 32 1c 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 c1 1b 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 7e 1b 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 40 d1 ff ff               	lea eax, [ebx - 0x2ec0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 64 d1 ff ff               	lea eax, [ebx - 0x2e9c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80497bc
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 44                        	sub esp, 0x44
0x804962f:   e8 78 1a 00 00                  	call 0x804b0ac <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 49 00 00               	add edx, 0x49cc
0x804963a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804963d:   8b 4d 0c                        	mov ecx, dword ptr [ebp + 0xc]
0x8049640:   8b 5d 14                        	mov ebx, dword ptr [ebp + 0x14]
0x8049643:   8b 7d 18                        	mov edi, dword ptr [ebp + 0x18]
0x8049646:   8b 75 1c                        	mov esi, dword ptr [ebp + 0x1c]
0x8049649:   89 75 c4                        	mov dword ptr [ebp - 0x3c], esi
0x804964c:   8b 75 24                        	mov esi, dword ptr [ebp + 0x24]
0x804964f:   89 75 c0                        	mov dword ptr [ebp - 0x40], esi
0x8049652:   8b 75 2c                        	mov esi, dword ptr [ebp + 0x2c]
0x8049655:   89 75 bc                        	mov dword ptr [ebp - 0x44], esi
0x8049658:   8b 75 3c                        	mov esi, dword ptr [ebp + 0x3c]
0x804965b:   89 75 b8                        	mov dword ptr [ebp - 0x48], esi
0x804965e:   8b 75 44                        	mov esi, dword ptr [ebp + 0x44]
0x8049661:   89 75 b4                        	mov dword ptr [ebp - 0x4c], esi
0x8049664:   8b 75 4c                        	mov esi, dword ptr [ebp + 0x4c]
0x8049667:   89 75 b0                        	mov dword ptr [ebp - 0x50], esi
0x804966a:   8b 75 6c                        	mov esi, dword ptr [ebp + 0x6c]
0x804966d:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x8049670:   89 c8                           	mov eax, ecx
0x8049672:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x8049676:   89 d8                           	mov eax, ebx
0x8049678:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x804967c:   89 f8                           	mov eax, edi
0x804967e:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x8049681:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x8049685:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x8049689:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x804968d:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x8049690:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x8049694:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x8049698:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x804969c:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496a0:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x80496a4:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496a7:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x80496ab:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496ae:   89 f0                           	mov eax, esi
0x80496b0:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x80496b4:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x80496b8:   88 82 24 00 00 00               	mov byte ptr [edx + 0x24], al
0x80496be:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x80496c2:   66 89 82 26 00 00 00            	mov word ptr [edx + 0x26], ax
0x80496c9:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x80496cc:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x80496d2:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x80496d6:   66 89 82 2c 00 00 00            	mov word ptr [edx + 0x2c], ax
0x80496dd:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x80496e1:   88 82 2e 00 00 00               	mov byte ptr [edx + 0x2e], al
0x80496e7:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x80496eb:   66 89 82 30 00 00 00            	mov word ptr [edx + 0x30], ax
0x80496f2:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x80496f5:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x80496fb:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x80496ff:   88 82 38 00 00 00               	mov byte ptr [edx + 0x38], al
0x8049705:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x8049708:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x804970e:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x8049712:   66 89 82 40 00 00 00            	mov word ptr [edx + 0x40], ax
0x8049719:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x804971c:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x8049722:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x8049725:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x804972b:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x804972e:   89 82 a4 04 00 00               	mov dword ptr [edx + 0x4a4], eax
0x8049734:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x8049738:   66 89 82 4c 00 00 00            	mov word ptr [edx + 0x4c], ax
0x804973f:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x8049742:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x8049748:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x804974c:   88 82 54 00 00 00               	mov byte ptr [edx + 0x54], al
0x8049752:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049755:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x804975b:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x804975f:   88 82 5c 00 00 00               	mov byte ptr [edx + 0x5c], al
0x8049765:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049768:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x804976e:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049771:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x8049777:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x804977a:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x8049780:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x8049783:   89 82 6c 00 00 00               	mov dword ptr [edx + 0x6c], eax
0x8049789:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x804978c:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x8049792:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x8049795:   89 82 74 00 00 00               	mov dword ptr [edx + 0x74], eax
0x804979b:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x804979e:   89 82 78 00 00 00               	mov dword ptr [edx + 0x78], eax
0x80497a4:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x80497a8:   66 89 82 7c 00 00 00            	mov word ptr [edx + 0x7c], ax
0x80497af:   b8 00 00 00 00                  	mov eax, 0
0x80497b4:   83 c4 44                        	add esp, 0x44
0x80497b7:   5b                              	pop ebx
0x80497b8:   5e                              	pop esi
0x80497b9:   5f                              	pop edi
0x80497ba:   5d                              	pop ebp
0x80497bb:   c3                              	ret 
; function: func_1 at 0x80497bc -- 0x804ad14
0x80497bc:   55                              	push ebp
0x80497bd:   89 e5                           	mov ebp, esp
0x80497bf:   57                              	push edi
0x80497c0:   56                              	push esi
0x80497c1:   53                              	push ebx
0x80497c2:   81 ec 64 01 00 00               	sub esp, 0x164
0x80497c8:   e8 db 18 00 00                  	call 0x804b0a8 <__x86.get_pc_thunk.ax>
0x80497cd:   05 33 48 00 00                  	add eax, 0x4833
0x80497d2:   c6 45 f3 6d                     	mov byte ptr [ebp - 0xd], 0x6d
0x80497d6:   66 c7 45 f0 36 18               	mov word ptr [ebp - 0x10], 0x1836
0x80497dc:   c7 45 ec a8 2d fc 61            	mov dword ptr [ebp - 0x14], 0x61fc2da8
0x80497e3:   66 c7 45 ea bc a7               	mov word ptr [ebp - 0x16], 0xa7bc
0x80497e9:   c6 45 e9 fd                     	mov byte ptr [ebp - 0x17], 0xfd
0x80497ed:   66 c7 45 e6 92 be               	mov word ptr [ebp - 0x1a], 0xbe92
0x80497f3:   c7 45 e0 38 52 04 a4            	mov dword ptr [ebp - 0x20], 0xa4045238
0x80497fa:   c6 45 8f 01                     	mov byte ptr [ebp - 0x71], 1
0x80497fe:   c7 45 dc ae 61 23 ae            	mov dword ptr [ebp - 0x24], 0xae2361ae
0x8049805:   66 c7 45 da bb 22               	mov word ptr [ebp - 0x26], 0x22bb
0x804980b:   c7 45 d4 af 0d 0d 8e            	mov dword ptr [ebp - 0x2c], 0x8e0d0daf
0x8049812:   c7 45 88 d6 0e 4c e6            	mov dword ptr [ebp - 0x78], 0xe64c0ed6
0x8049819:   c7 45 d0 00 00 00 00            	mov dword ptr [ebp - 0x30], 0
0x8049820:   66 c7 45 ce 09 00               	mov word ptr [ebp - 0x32], 9
0x8049826:   c7 45 c8 59 54 8a c5            	mov dword ptr [ebp - 0x38], 0xc58a5459
0x804982d:   c6 45 c7 ff                     	mov byte ptr [ebp - 0x39], 0xff
0x8049831:   c7 45 84 91 01 77 eb            	mov dword ptr [ebp - 0x7c], 0xeb770191
0x8049838:   c6 45 c6 03                     	mov byte ptr [ebp - 0x3a], 3
0x804983c:   c7 45 c0 06 00 00 00            	mov dword ptr [ebp - 0x40], 6
0x8049843:   c7 45 bc e1 6f 8c 5a            	mov dword ptr [ebp - 0x44], 0x5a8c6fe1
0x804984a:   c7 45 b8 ff ff ff ff            	mov dword ptr [ebp - 0x48], 0xffffffff
0x8049851:   c7 45 b4 01 00 00 00            	mov dword ptr [ebp - 0x4c], 1
0x8049858:   c7 45 80 ff ff ff ff            	mov dword ptr [ebp - 0x80], 0xffffffff
0x804985f:   c7 85 7c ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0x84], 0xfffffffa
0x8049869:   c7 45 b0 fc ff ff ff            	mov dword ptr [ebp - 0x50], 0xfffffffc
0x8049870:   66 c7 85 7a ff ff ff ff ec      	mov word ptr [ebp - 0x86], 0xecff
0x8049879:   c6 85 79 ff ff ff f8            	mov byte ptr [ebp - 0x87], 0xf8
0x8049880:   c7 45 ac 07 00 00 00            	mov dword ptr [ebp - 0x54], 7
0x8049887:   c7 45 a8 89 b1 37 a1            	mov dword ptr [ebp - 0x58], 0xa137b189
0x804988e:   66 c7 85 76 ff ff ff ff ff      	mov word ptr [ebp - 0x8a], 0xffff
0x8049897:   66 c7 85 74 ff ff ff 00 00      	mov word ptr [ebp - 0x8c], 0
0x80498a0:   c7 85 70 ff ff ff b2 a1 ab 1a   	mov dword ptr [ebp - 0x90], 0x1aaba1b2
0x80498aa:   66 83 6d ea 01                  	sub word ptr [ebp - 0x16], 1
0x80498af:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x80498b3:   66 c7 45 e6 01 00               	mov word ptr [ebp - 0x1a], 1
0x80498b9:   0f be 55 f3                     	movsx edx, byte ptr [ebp - 0xd]
0x80498bd:   20 45 e9                        	and byte ptr [ebp - 0x17], al
0x80498c0:   0f be 5d e9                     	movsx ebx, byte ptr [ebp - 0x17]
0x80498c4:   66 0f be 45 f3                  	movsx ax, byte ptr [ebp - 0xd]
0x80498c9:   83 c0 01                        	add eax, 1
0x80498cc:   0f bf f0                        	movsx esi, ax
0x80498cf:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x80498d3:   89 c1                           	mov ecx, eax
0x80498d5:   d3 fe                           	sar esi, cl
0x80498d7:   89 f0                           	mov eax, esi
0x80498d9:   21 d8                           	and eax, ebx
0x80498db:   39 45 a8                        	cmp dword ptr [ebp - 0x58], eax
0x80498de:   0f 95 c0                        	setne al
0x80498e1:   0f b6 c0                        	movzx eax, al
0x80498e4:   39 c2                           	cmp edx, eax
0x80498e6:   66 83 6d f0 01                  	sub word ptr [ebp - 0x10], 1
0x80498eb:   0f b7 5d f0                     	movzx ebx, word ptr [ebp - 0x10]
0x80498ef:   66 0f be 45 f3                  	movsx ax, byte ptr [ebp - 0xd]
0x80498f4:   66 0b 45 e6                     	or ax, word ptr [ebp - 0x1a]
0x80498f8:   0f bf d0                        	movsx edx, ax
0x80498fb:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x80498ff:   89 c1                           	mov ecx, eax
0x8049901:   d3 e2                           	shl edx, cl
0x8049903:   89 d0                           	mov eax, edx
0x8049905:   0f be 4d f3                     	movsx ecx, byte ptr [ebp - 0xd]
0x8049909:   99                              	cdq 
0x804990a:   f7 f9                           	idiv ecx
0x804990c:   89 d0                           	mov eax, edx
0x804990e:   83 f8 66                        	cmp eax, 0x66
0x8049911:   0f 95 c0                        	setne al
0x8049914:   0f b6 d0                        	movzx edx, al
0x8049917:   0f be 85 79 ff ff ff            	movsx eax, byte ptr [ebp - 0x87]
0x804991e:   89 c1                           	mov ecx, eax
0x8049920:   d3 fa                           	sar edx, cl
0x8049922:   89 d0                           	mov eax, edx
0x8049924:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049927:   0f 95 c0                        	setne al
0x804992a:   0f b6 c0                        	movzx eax, al
0x804992d:   39 c3                           	cmp ebx, eax
0x804992f:   0f 8c b7 0b 00 00               	jl 0x804a4ec <func_1+0xd30>
0x8049935:   c6 85 1b ff ff ff 05            	mov byte ptr [ebp - 0xe5], 5
0x804993c:   c6 85 1a ff ff ff 04            	mov byte ptr [ebp - 0xe6], 4
0x8049943:   c7 45 a4 c5 53 3e f0            	mov dword ptr [ebp - 0x5c], 0xf03e53c5
0x804994a:   c7 85 14 ff ff ff b2 08 3f d2   	mov dword ptr [ebp - 0xec], 0xd23f08b2
0x8049954:   c7 85 10 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xf0], 0
0x804995e:   66 c7 85 0e ff ff ff 1b 6d      	mov word ptr [ebp - 0xf2], 0x6d1b
0x8049967:   66 c7 85 0c ff ff ff 00 00      	mov word ptr [ebp - 0xf4], 0
0x8049970:   c6 85 0b ff ff ff ff            	mov byte ptr [ebp - 0xf5], 0xff
0x8049977:   66 c7 45 f0 e3 ff               	mov word ptr [ebp - 0x10], 0xffe3
0x804997d:   eb 5d                           	jmp 0x80499dc <func_1+0x220>
0x804997f:   66 c7 85 a8 fe ff ff 00 00      	mov word ptr [ebp - 0x158], 0
0x8049988:   c7 85 a4 fe ff ff 5a 05 ae 6b   	mov dword ptr [ebp - 0x15c], 0x6bae055a
0x8049992:   0f b6 95 1b ff ff ff            	movzx edx, byte ptr [ebp - 0xe5]
0x8049999:   0f b7 85 a8 fe ff ff            	movzx eax, word ptr [ebp - 0x158]
0x80499a0:   09 85 a4 fe ff ff               	or dword ptr [ebp - 0x15c], eax
0x80499a6:   0f b6 85 1b ff ff ff            	movzx eax, byte ptr [ebp - 0xe5]
0x80499ad:   22 45 f3                        	and al, byte ptr [ebp - 0xd]
0x80499b0:   c0 e8 03                        	shr al, 3
0x80499b3:   0f b6 c0                        	movzx eax, al
0x80499b6:   0b 85 a4 fe ff ff               	or eax, dword ptr [ebp - 0x15c]
0x80499bc:   85 c0                           	test eax, eax
0x80499be:   0f 95 c0                        	setne al
0x80499c1:   0f b6 c0                        	movzx eax, al
0x80499c4:   39 c2                           	cmp edx, eax
0x80499c6:   74 07                           	je 0x80499cf <func_1+0x213>
0x80499c8:   b8 01 00 00 00                  	mov eax, 1
0x80499cd:   eb 05                           	jmp 0x80499d4 <func_1+0x218>
0x80499cf:   b8 00 00 00 00                  	mov eax, 0
0x80499d4:   09 45 ec                        	or dword ptr [ebp - 0x14], eax
0x80499d7:   66 83 45 f0 01                  	add word ptr [ebp - 0x10], 1
0x80499dc:   66 83 7d f0 2f                  	cmp word ptr [ebp - 0x10], 0x2f
0x80499e1:   77 9c                           	ja 0x804997f <func_1+0x1c3>
0x80499e3:   c7 45 a8 00 00 00 00            	mov dword ptr [ebp - 0x58], 0
0x80499ea:   e9 ae 03 00 00                  	jmp 0x8049d9d <func_1+0x5e1>
0x80499ef:   c7 85 d0 fe ff ff 17 ab f5 b9   	mov dword ptr [ebp - 0x130], 0xb9f5ab17
0x80499f9:   c7 45 a0 6a 0c dd fd            	mov dword ptr [ebp - 0x60], 0xfddd0c6a
0x8049a00:   c7 85 cc fe ff ff 26 01 c2 cf   	mov dword ptr [ebp - 0x134], 0xcfc20126
0x8049a0a:   66 c7 85 ca fe ff ff ff ff      	mov word ptr [ebp - 0x136], 0xffff
0x8049a13:   0f be 95 79 ff ff ff            	movsx edx, byte ptr [ebp - 0x87]
0x8049a1a:   0f b6 85 1b ff ff ff            	movzx eax, byte ptr [ebp - 0xe5]
0x8049a21:   21 d0                           	and eax, edx
0x8049a23:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049a26:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049a2a:   74 09                           	je 0x8049a35 <func_1+0x279>
0x8049a2c:   83 45 e0 01                     	add dword ptr [ebp - 0x20], 1
0x8049a30:   e9 60 03 00 00                  	jmp 0x8049d95 <func_1+0x5d9>
0x8049a35:   c7 85 c4 fe ff ff 91 0b a1 76   	mov dword ptr [ebp - 0x13c], 0x76a10b91
0x8049a3f:   c7 85 c0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x140], 0
0x8049a49:   c6 45 e9 17                     	mov byte ptr [ebp - 0x17], 0x17
0x8049a4d:   e9 a5 00 00 00                  	jmp 0x8049af7 <func_1+0x33b>
0x8049a52:   66 c7 45 ea f9 ff               	mov word ptr [ebp - 0x16], 0xfff9
0x8049a58:   eb 72                           	jmp 0x8049acc <func_1+0x310>
0x8049a5a:   66 c7 85 aa fe ff ff f7 ff      	mov word ptr [ebp - 0x156], 0xfff7
0x8049a63:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049a67:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049a6a:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x8049a71:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049a74:   89 c2                           	mov edx, eax
0x8049a76:   0f b7 85 aa fe ff ff            	movzx eax, word ptr [ebp - 0x156]
0x8049a7d:   21 d0                           	and eax, edx
0x8049a7f:   66 89 85 aa fe ff ff            	mov word ptr [ebp - 0x156], ax
0x8049a86:   0f bf 85 aa fe ff ff            	movsx eax, word ptr [ebp - 0x156]
0x8049a8d:   05 a7 24 87 02                  	add eax, 0x28724a7
0x8049a92:   3d 4e 49 0e 05                  	cmp eax, 0x50e494e
0x8049a97:   76 0d                           	jbe 0x8049aa6 <func_1+0x2ea>
0x8049a99:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049a9d:   74 07                           	je 0x8049aa6 <func_1+0x2ea>
0x8049a9f:   b8 01 00 00 00                  	mov eax, 1
0x8049aa4:   eb 05                           	jmp 0x8049aab <func_1+0x2ef>
0x8049aa6:   b8 00 00 00 00                  	mov eax, 0
0x8049aab:   35 ed ec ff ff                  	xor eax, 0xffffeced
0x8049ab0:   89 c2                           	mov edx, eax
0x8049ab2:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049ab6:   29 c2                           	sub edx, eax
0x8049ab8:   89 d0                           	mov eax, edx
0x8049aba:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x8049ac0:   80 bd 1b ff ff ff 00            	cmp byte ptr [ebp - 0xe5], 0
0x8049ac7:   66 83 45 ea 03                  	add word ptr [ebp - 0x16], 3
0x8049acc:   66 83 7d ea 31                  	cmp word ptr [ebp - 0x16], 0x31
0x8049ad1:   77 87                           	ja 0x8049a5a <func_1+0x29e>
0x8049ad3:   c6 45 f3 00                     	mov byte ptr [ebp - 0xd], 0
0x8049ad7:   eb 0e                           	jmp 0x8049ae7 <func_1+0x32b>
0x8049ad9:   83 45 dc 01                     	add dword ptr [ebp - 0x24], 1
0x8049add:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049ae1:   83 c0 01                        	add eax, 1
0x8049ae4:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x8049ae7:   80 7d f3 1b                     	cmp byte ptr [ebp - 0xd], 0x1b
0x8049aeb:   74 ec                           	je 0x8049ad9 <func_1+0x31d>
0x8049aed:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x8049af1:   83 c0 07                        	add eax, 7
0x8049af4:   88 45 e9                        	mov byte ptr [ebp - 0x17], al
0x8049af7:   80 7d e9 1c                     	cmp byte ptr [ebp - 0x17], 0x1c
0x8049afb:   0f 8f 51 ff ff ff               	jg 0x8049a52 <func_1+0x296>
0x8049b01:   80 7d e9 00                     	cmp byte ptr [ebp - 0x17], 0
0x8049b05:   0f 85 1f 01 00 00               	jne 0x8049c2a <func_1+0x46e>
0x8049b0b:   80 bd 1a ff ff ff 00            	cmp byte ptr [ebp - 0xe6], 0
0x8049b12:   0f 85 12 01 00 00               	jne 0x8049c2a <func_1+0x46e>
0x8049b18:   66 c7 85 be fe ff ff 1a 0c      	mov word ptr [ebp - 0x142], 0xc1a
0x8049b21:   c7 85 b8 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x148], 1
0x8049b2b:   c7 85 b4 fe ff ff f3 8b 98 89   	mov dword ptr [ebp - 0x14c], 0x89988bf3
0x8049b35:   66 83 45 f0 01                  	add word ptr [ebp - 0x10], 1
0x8049b3a:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x8049b3e:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x8049b44:   8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x8049b4a:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x8049b4e:   66 83 7d e6 00                  	cmp word ptr [ebp - 0x1a], 0
0x8049b53:   74 05                           	je 0x8049b5a <func_1+0x39e>
0x8049b55:   66 83 7d e6 00                  	cmp word ptr [ebp - 0x1a], 0
0x8049b5a:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049b5d:   0f b6 d0                        	movzx edx, al
0x8049b60:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049b63:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x8049b66:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049b6a:   0f b6 c0                        	movzx eax, al
0x8049b6d:   89 c1                           	mov ecx, eax
0x8049b6f:   d3 fa                           	sar edx, cl
0x8049b71:   0f b7 85 be fe ff ff            	movzx eax, word ptr [ebp - 0x142]
0x8049b78:   39 c2                           	cmp edx, eax
0x8049b7a:   0f be 85 1a ff ff ff            	movsx eax, byte ptr [ebp - 0xe6]
0x8049b81:   89 85 b8 fe ff ff               	mov dword ptr [ebp - 0x148], eax
0x8049b87:   c7 45 ec fa ff ff ff            	mov dword ptr [ebp - 0x14], 0xfffffffa
0x8049b8e:   80 bd 1b ff ff ff 00            	cmp byte ptr [ebp - 0xe5], 0
0x8049b95:   75 07                           	jne 0x8049b9e <func_1+0x3e2>
0x8049b97:   66 83 7d f0 00                  	cmp word ptr [ebp - 0x10], 0
0x8049b9c:   74 07                           	je 0x8049ba5 <func_1+0x3e9>
0x8049b9e:   ba 01 00 00 00                  	mov edx, 1
0x8049ba3:   eb 05                           	jmp 0x8049baa <func_1+0x3ee>
0x8049ba5:   ba 00 00 00 00                  	mov edx, 0
0x8049baa:   66 83 7d f0 00                  	cmp word ptr [ebp - 0x10], 0
0x8049baf:   74 0e                           	je 0x8049bbf <func_1+0x403>
0x8049bb1:   66 83 7d ea 00                  	cmp word ptr [ebp - 0x16], 0
0x8049bb6:   74 07                           	je 0x8049bbf <func_1+0x403>
0x8049bb8:   b8 01 00 00 00                  	mov eax, 1
0x8049bbd:   eb 05                           	jmp 0x8049bc4 <func_1+0x408>
0x8049bbf:   b8 00 00 00 00                  	mov eax, 0
0x8049bc4:   39 c2                           	cmp edx, eax
0x8049bc6:   0f 9e c0                        	setle al
0x8049bc9:   0f b6 c0                        	movzx eax, al
0x8049bcc:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049bcf:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049bd2:   33 45 e0                        	xor eax, dword ptr [ebp - 0x20]
0x8049bd5:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049bd8:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049bdb:   0f b6 c0                        	movzx eax, al
0x8049bde:   8d 50 ff                        	lea edx, [eax - 1]
0x8049be1:   0f b6 85 1b ff ff ff            	movzx eax, byte ptr [ebp - 0xe5]
0x8049be8:   39 c2                           	cmp edx, eax
0x8049bea:   0f 94 c0                        	sete al
0x8049bed:   0f b6 d0                        	movzx edx, al
0x8049bf0:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x8049bf4:   09 d0                           	or eax, edx
0x8049bf6:   31 45 ec                        	xor dword ptr [ebp - 0x14], eax
0x8049bf9:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049bfc:   23 85 cc fe ff ff               	and eax, dword ptr [ebp - 0x134]
0x8049c02:   3d 4a db 00 00                  	cmp eax, 0xdb4a
0x8049c07:   0f 9f c0                        	setg al
0x8049c0a:   0f b6 c0                        	movzx eax, al
0x8049c0d:   39 85 d0 fe ff ff               	cmp dword ptr [ebp - 0x130], eax
0x8049c13:   0f 97 c0                        	seta al
0x8049c16:   0f b6 c0                        	movzx eax, al
0x8049c19:   66 89 45 da                     	mov word ptr [ebp - 0x26], ax
0x8049c1d:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x8049c21:   98                              	cwde 
0x8049c22:   09 85 b4 fe ff ff               	or dword ptr [ebp - 0x14c], eax
0x8049c28:   eb 31                           	jmp 0x8049c5b <func_1+0x49f>
0x8049c2a:   66 c7 85 b2 fe ff ff 00 00      	mov word ptr [ebp - 0x14e], 0
0x8049c33:   66 83 bd b2 fe ff ff 00         	cmp word ptr [ebp - 0x14e], 0
0x8049c3b:   0f 94 c0                        	sete al
0x8049c3e:   0f b6 c0                        	movzx eax, al
0x8049c41:   39 85 c4 fe ff ff               	cmp dword ptr [ebp - 0x13c], eax
0x8049c47:   75 07                           	jne 0x8049c50 <func_1+0x494>
0x8049c49:   b8 fb ff 00 00                  	mov eax, 0xfffb
0x8049c4e:   eb 05                           	jmp 0x8049c55 <func_1+0x499>
0x8049c50:   b8 fa ff 00 00                  	mov eax, 0xfffa
0x8049c55:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x8049c5b:   66 c7 45 ea 18 00               	mov word ptr [ebp - 0x16], 0x18
0x8049c61:   e9 24 01 00 00                  	jmp 0x8049d8a <func_1+0x5ce>
0x8049c66:   c7 85 ac fe ff ff 3a f0 f4 dd   	mov dword ptr [ebp - 0x154], 0xddf4f03a
0x8049c70:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x8049c77:   83 7d a0 e5                     	cmp dword ptr [ebp - 0x60], -0x1b
0x8049c7b:   0f 8c c2 00 00 00               	jl 0x8049d43 <func_1+0x587>
0x8049c81:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049c84:   66 c1 e8 0b                     	shr ax, 0xb
0x8049c88:   0f b7 c0                        	movzx eax, ax
0x8049c8b:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x8049c91:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x8049c98:   0f b6 55 c6                     	movzx edx, byte ptr [ebp - 0x3a]
0x8049c9c:   0f be 4d c7                     	movsx ecx, byte ptr [ebp - 0x39]
0x8049ca0:   0f bf 75 ce                     	movsx esi, word ptr [ebp - 0x32]
0x8049ca4:   0f bf 7d da                     	movsx edi, word ptr [ebp - 0x26]
0x8049ca8:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x8049cae:   0f be 5d 8f                     	movsx ebx, byte ptr [ebp - 0x71]
0x8049cb2:   89 9d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ebx
0x8049cb8:   0f bf 7d e6                     	movsx edi, word ptr [ebp - 0x1a]
0x8049cbc:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x8049cc2:   0f be 5d e9                     	movsx ebx, byte ptr [ebp - 0x17]
0x8049cc6:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x8049ccc:   0f b7 7d ea                     	movzx edi, word ptr [ebp - 0x16]
0x8049cd0:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x8049cd6:   0f b7 7d f0                     	movzx edi, word ptr [ebp - 0x10]
0x8049cda:   0f be 5d f3                     	movsx ebx, byte ptr [ebp - 0xd]
0x8049cde:   50                              	push eax
0x8049cdf:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049ce2:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049ce8:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049ceb:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049cee:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049cf1:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049cf4:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049cf7:   52                              	push edx
0x8049cf8:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049cfb:   51                              	push ecx
0x8049cfc:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049cff:   56                              	push esi
0x8049d00:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049d03:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049d06:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049d09:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049d0f:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049d12:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049d18:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049d1b:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x8049d21:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x8049d27:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x8049d2d:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049d30:   57                              	push edi
0x8049d31:   53                              	push ebx
0x8049d32:   e8 ef f8 ff ff                  	call 0x8049626 <set_var>
0x8049d37:   83 c4 68                        	add esp, 0x68
0x8049d3a:   0f bf 45 da                     	movsx eax, word ptr [ebp - 0x26]
0x8049d3e:   e9 c9 0f 00 00                  	jmp 0x804ad0c <func_1+0x1550>
0x8049d43:   8b 85 ac fe ff ff               	mov eax, dword ptr [ebp - 0x154]
0x8049d49:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x8049d4d:   66 83 45 f0 01                  	add word ptr [ebp - 0x10], 1
0x8049d52:   66 83 7d f0 00                  	cmp word ptr [ebp - 0x10], 0
0x8049d57:   75 07                           	jne 0x8049d60 <func_1+0x5a4>
0x8049d59:   83 bd d0 fe ff ff 00            	cmp dword ptr [ebp - 0x130], 0
0x8049d60:   b8 01 00 00 00                  	mov eax, 1
0x8049d65:   31 45 d4                        	xor dword ptr [ebp - 0x2c], eax
0x8049d68:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x8049d6f:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049d73:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x8049d76:   0f 94 c0                        	sete al
0x8049d79:   0f b6 c0                        	movzx eax, al
0x8049d7c:   21 45 ec                        	and dword ptr [ebp - 0x14], eax
0x8049d7f:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049d83:   83 c0 01                        	add eax, 1
0x8049d86:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x8049d8a:   66 83 7d ea 2b                  	cmp word ptr [ebp - 0x16], 0x2b
0x8049d8f:   0f 86 d1 fe ff ff               	jbe 0x8049c66 <func_1+0x4aa>
0x8049d95:   83 6d d0 01                     	sub dword ptr [ebp - 0x30], 1
0x8049d99:   83 45 a8 01                     	add dword ptr [ebp - 0x58], 1
0x8049d9d:   83 7d a8 05                     	cmp dword ptr [ebp - 0x58], 5
0x8049da1:   0f 85 48 fc ff ff               	jne 0x80499ef <func_1+0x233>
0x8049da7:   0f be 45 8f                     	movsx eax, byte ptr [ebp - 0x71]
0x8049dab:   09 45 ec                        	or dword ptr [ebp - 0x14], eax
0x8049dae:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049db1:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x8049db4:   0f 95 c0                        	setne al
0x8049db7:   0f b6 d0                        	movzx edx, al
0x8049dba:   c7 45 a4 c2 00 00 00            	mov dword ptr [ebp - 0x5c], 0xc2
0x8049dc1:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049dc4:   0f be c0                        	movsx eax, al
0x8049dc7:   0f af c2                        	imul eax, edx
0x8049dca:   39 45 a8                        	cmp dword ptr [ebp - 0x58], eax
0x8049dcd:   0f 9d c0                        	setge al
0x8049dd0:   0f b6 c0                        	movzx eax, al
0x8049dd3:   8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x8049dd6:   0f b7 f2                        	movzx esi, dx
0x8049dd9:   99                              	cdq 
0x8049dda:   f7 fe                           	idiv esi
0x8049ddc:   89 c2                           	mov edx, eax
0x8049dde:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049de2:   39 c2                           	cmp edx, eax
0x8049de4:   0f 9c c0                        	setl al
0x8049de7:   0f b6 d0                        	movzx edx, al
0x8049dea:   0f be 85 1a ff ff ff            	movsx eax, byte ptr [ebp - 0xe6]
0x8049df1:   09 d0                           	or eax, edx
0x8049df3:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049df6:   0f 9e c0                        	setle al
0x8049df9:   0f b6 d0                        	movzx edx, al
0x8049dfc:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049e00:   21 d0                           	and eax, edx
0x8049e02:   0c ff                           	or al, 0xff
0x8049e04:   21 45 ac                        	and dword ptr [ebp - 0x54], eax
0x8049e07:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x8049e0b:   75 09                           	jne 0x8049e16 <func_1+0x65a>
0x8049e0d:   80 bd 1a ff ff ff 00            	cmp byte ptr [ebp - 0xe6], 0
0x8049e14:   74 07                           	je 0x8049e1d <func_1+0x661>
0x8049e16:   b8 01 00 00 00                  	mov eax, 1
0x8049e1b:   eb 05                           	jmp 0x8049e22 <func_1+0x666>
0x8049e1d:   b8 00 00 00 00                  	mov eax, 0
0x8049e22:   66 31 45 ce                     	xor word ptr [ebp - 0x32], ax
0x8049e26:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x8049e2a:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049e2e:   c7 45 ac aa a3 00 00            	mov dword ptr [ebp - 0x54], 0xa3aa
0x8049e35:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x8049e38:   0f 95 c0                        	setne al
0x8049e3b:   0f b6 c0                        	movzx eax, al
0x8049e3e:   8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x8049e41:   0f b7 da                        	movzx ebx, dx
0x8049e44:   99                              	cdq 
0x8049e45:   f7 fb                           	idiv ebx
0x8049e47:   89 55 c8                        	mov dword ptr [ebp - 0x38], edx
0x8049e4a:   89 c8                           	mov eax, ecx
0x8049e4c:   0b 45 c8                        	or eax, dword ptr [ebp - 0x38]
0x8049e4f:   85 c0                           	test eax, eax
0x8049e51:   75 06                           	jne 0x8049e59 <func_1+0x69d>
0x8049e53:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x8049e57:   74 07                           	je 0x8049e60 <func_1+0x6a4>
0x8049e59:   ba 01 00 00 00                  	mov edx, 1
0x8049e5e:   eb 05                           	jmp 0x8049e65 <func_1+0x6a9>
0x8049e60:   ba 00 00 00 00                  	mov edx, 0
0x8049e65:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x8049e69:   39 c2                           	cmp edx, eax
0x8049e6b:   0f 8f 31 05 00 00               	jg 0x804a3a2 <func_1+0xbe6>
0x8049e71:   c6 85 ff fe ff ff 3d            	mov byte ptr [ebp - 0x101], 0x3d
0x8049e78:   c7 45 9c b2 5f 4e 55            	mov dword ptr [ebp - 0x64], 0x554e5fb2
0x8049e7f:   c7 45 98 72 dc 34 c1            	mov dword ptr [ebp - 0x68], 0xc134dc72
0x8049e86:   66 c7 85 fc fe ff ff 09 00      	mov word ptr [ebp - 0x104], 9
0x8049e8f:   c7 85 f8 fe ff ff e2 56 b8 e2   	mov dword ptr [ebp - 0x108], 0xe2b856e2
0x8049e99:   c6 85 f7 fe ff ff 46            	mov byte ptr [ebp - 0x109], 0x46
0x8049ea0:   66 c7 85 f4 fe ff ff 01 70      	mov word ptr [ebp - 0x10c], 0x7001
0x8049ea9:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049eac:   0f b6 d0                        	movzx edx, al
0x8049eaf:   0f b6 85 ff fe ff ff            	movzx eax, byte ptr [ebp - 0x101]
0x8049eb6:   0f b6 c0                        	movzx eax, al
0x8049eb9:   01 d0                           	add eax, edx
0x8049ebb:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x8049ebf:   66 83 7d f0 00                  	cmp word ptr [ebp - 0x10], 0
0x8049ec4:   75 04                           	jne 0x8049eca <func_1+0x70e>
0x8049ec6:   80 7d 8f 00                     	cmp byte ptr [ebp - 0x71], 0
0x8049eca:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049ecd:   23 45 e0                        	and eax, dword ptr [ebp - 0x20]
0x8049ed0:   83 f8 01                        	cmp eax, 1
0x8049ed3:   0f 96 c0                        	setbe al
0x8049ed6:   0f b6 c0                        	movzx eax, al
0x8049ed9:   0f b7 55 ea                     	movzx edx, word ptr [ebp - 0x16]
0x8049edd:   0f b6 f2                        	movzx esi, dl
0x8049ee0:   99                              	cdq 
0x8049ee1:   f7 fe                           	idiv esi
0x8049ee3:   89 c2                           	mov edx, eax
0x8049ee5:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049ee8:   0f b6 c0                        	movzx eax, al
0x8049eeb:   09 55 9c                        	or dword ptr [ebp - 0x64], edx
0x8049eee:   8b 55 9c                        	mov edx, dword ptr [ebp - 0x64]
0x8049ef1:   0f b6 ca                        	movzx ecx, dl
0x8049ef4:   99                              	cdq 
0x8049ef5:   f7 f9                           	idiv ecx
0x8049ef7:   89 d0                           	mov eax, edx
0x8049ef9:   33 45 ac                        	xor eax, dword ptr [ebp - 0x54]
0x8049efc:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049eff:   0f bf 45 da                     	movsx eax, word ptr [ebp - 0x26]
0x8049f03:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x8049f06:   0f 94 c0                        	sete al
0x8049f09:   0f b6 c0                        	movzx eax, al
0x8049f0c:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049f0f:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049f12:   31 45 98                        	xor dword ptr [ebp - 0x68], eax
0x8049f15:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049f18:   21 85 14 ff ff ff               	and dword ptr [ebp - 0xec], eax
0x8049f1e:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049f21:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049f24:   66 0f be 45 8f                  	movsx ax, byte ptr [ebp - 0x71]
0x8049f29:   0f b7 d8                        	movzx ebx, ax
0x8049f2c:   0f bf 4d ce                     	movsx ecx, word ptr [ebp - 0x32]
0x8049f30:   0f be 75 e9                     	movsx esi, byte ptr [ebp - 0x17]
0x8049f34:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049f37:   89 c7                           	mov edi, eax
0x8049f39:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x8049f3e:   ba 00 00 00 00                  	mov edx, 0
0x8049f43:   66 f7 f7                        	div di
0x8049f46:   66 3d 9f a2                     	cmp ax, 0xa29f
0x8049f4a:   0f 94 c0                        	sete al
0x8049f4d:   0f b6 c0                        	movzx eax, al
0x8049f50:   39 c6                           	cmp esi, eax
0x8049f52:   0f 9f c0                        	setg al
0x8049f55:   89 c2                           	mov edx, eax
0x8049f57:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049f5b:   29 c2                           	sub edx, eax
0x8049f5d:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x8049f61:   88 85 a0 fe ff ff               	mov byte ptr [ebp - 0x160], al
0x8049f67:   0f b6 c2                        	movzx eax, dl
0x8049f6a:   f6 b5 a0 fe ff ff               	div byte ptr [ebp - 0x160]
0x8049f70:   0f b6 c0                        	movzx eax, al
0x8049f73:   39 c1                           	cmp ecx, eax
0x8049f75:   0f 95 c0                        	setne al
0x8049f78:   88 45 e9                        	mov byte ptr [ebp - 0x17], al
0x8049f7b:   80 7d e9 00                     	cmp byte ptr [ebp - 0x17], 0
0x8049f7f:   75 09                           	jne 0x8049f8a <func_1+0x7ce>
0x8049f81:   80 bd ff fe ff ff 00            	cmp byte ptr [ebp - 0x101], 0
0x8049f88:   74 07                           	je 0x8049f91 <func_1+0x7d5>
0x8049f8a:   b8 01 00 00 00                  	mov eax, 1
0x8049f8f:   eb 05                           	jmp 0x8049f96 <func_1+0x7da>
0x8049f91:   b8 00 00 00 00                  	mov eax, 0
0x8049f96:   0f b7 c0                        	movzx eax, ax
0x8049f99:   89 c1                           	mov ecx, eax
0x8049f9b:   d3 fb                           	sar ebx, cl
0x8049f9d:   89 d8                           	mov eax, ebx
0x8049f9f:   0f be c0                        	movsx eax, al
0x8049fa2:   6b d0 d2                        	imul edx, eax, -0x2e
0x8049fa5:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049fa9:   09 d0                           	or eax, edx
0x8049fab:   85 c0                           	test eax, eax
0x8049fad:   0f 84 18 02 00 00               	je 0x804a1cb <func_1+0xa0f>
0x8049fb3:   c6 85 e3 fe ff ff 58            	mov byte ptr [ebp - 0x11d], 0x58
0x8049fba:   c7 85 dc fe ff ff e9 e3 1d 2d   	mov dword ptr [ebp - 0x124], 0x2d1de3e9
0x8049fc4:   c6 85 db fe ff ff 00            	mov byte ptr [ebp - 0x125], 0
0x8049fcb:   c7 85 d4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x12c], 0
0x8049fd5:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x8049fd9:   31 45 ec                        	xor dword ptr [ebp - 0x14], eax
0x8049fdc:   80 bd e3 fe ff ff 00            	cmp byte ptr [ebp - 0x11d], 0
0x8049fe3:   0f 95 c0                        	setne al
0x8049fe6:   0f b6 d8                        	movzx ebx, al
0x8049fe9:   66 83 bd fc fe ff ff 01         	cmp word ptr [ebp - 0x104], 1
0x8049ff1:   0f 94 c0                        	sete al
0x8049ff4:   0f b6 c0                        	movzx eax, al
0x8049ff7:   66 89 45 da                     	mov word ptr [ebp - 0x26], ax
0x8049ffb:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x8049fff:   8b 55 a8                        	mov edx, dword ptr [ebp - 0x58]
0x804a002:   29 d0                           	sub eax, edx
0x804a004:   89 c1                           	mov ecx, eax
0x804a006:   66 0f be 85 79 ff ff ff         	movsx ax, byte ptr [ebp - 0x87]
0x804a00e:   89 c2                           	mov edx, eax
0x804a010:   89 c8                           	mov eax, ecx
0x804a012:   0f af c2                        	imul eax, edx
0x804a015:   0f be c0                        	movsx eax, al
0x804a018:   6b c0 6c                        	imul eax, eax, 0x6c
0x804a01b:   3d f1 05 00 00                  	cmp eax, 0x5f1
0x804a020:   0f 9e c0                        	setle al
0x804a023:   0f b6 d0                        	movzx edx, al
0x804a026:   0f b6 85 e3 fe ff ff            	movzx eax, byte ptr [ebp - 0x11d]
0x804a02d:   39 c2                           	cmp edx, eax
0x804a02f:   0f 9c c0                        	setl al
0x804a032:   0f b6 d0                        	movzx edx, al
0x804a035:   0f b7 85 0e ff ff ff            	movzx eax, word ptr [ebp - 0xf2]
0x804a03c:   0f b7 c0                        	movzx eax, ax
0x804a03f:   01 d0                           	add eax, edx
0x804a041:   ba 00 00 00 00                  	mov edx, 0
0x804a046:   f7 75 d4                        	div dword ptr [ebp - 0x2c]
0x804a049:   0f be d0                        	movsx edx, al
0x804a04c:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804a050:   0f be c0                        	movsx eax, al
0x804a053:   89 c1                           	mov ecx, eax
0x804a055:   d3 e2                           	shl edx, cl
0x804a057:   89 d0                           	mov eax, edx
0x804a059:   85 c0                           	test eax, eax
0x804a05b:   74 11                           	je 0x804a06e <func_1+0x8b2>
0x804a05d:   66 83 bd fc fe ff ff 00         	cmp word ptr [ebp - 0x104], 0
0x804a065:   74 07                           	je 0x804a06e <func_1+0x8b2>
0x804a067:   b8 01 00 00 00                  	mov eax, 1
0x804a06c:   eb 05                           	jmp 0x804a073 <func_1+0x8b7>
0x804a06e:   b8 00 00 00 00                  	mov eax, 0
0x804a073:   39 d8                           	cmp eax, ebx
0x804a075:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a078:   3b 45 ac                        	cmp eax, dword ptr [ebp - 0x54]
0x804a07b:   0f 9d c0                        	setge al
0x804a07e:   0f b6 c0                        	movzx eax, al
0x804a081:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a084:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a087:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a08a:   c7 45 9c 00 00 00 00            	mov dword ptr [ebp - 0x64], 0
0x804a091:   eb 21                           	jmp 0x804a0b4 <func_1+0x8f8>
0x804a093:   0f be 45 c7                     	movsx eax, byte ptr [ebp - 0x39]
0x804a097:   09 45 c8                        	or dword ptr [ebp - 0x38], eax
0x804a09a:   66 0f be 45 c7                  	movsx ax, byte ptr [ebp - 0x39]
0x804a09f:   0f b7 c0                        	movzx eax, ax
0x804a0a2:   ba 03 00 00 00                  	mov edx, 3
0x804a0a7:   89 c1                           	mov ecx, eax
0x804a0a9:   d3 fa                           	sar edx, cl
0x804a0ab:   89 d0                           	mov eax, edx
0x804a0ad:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a0b0:   83 45 9c 01                     	add dword ptr [ebp - 0x64], 1
0x804a0b4:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a0b8:   7e d9                           	jle 0x804a093 <func_1+0x8d7>
0x804a0ba:   0f b6 5d c6                     	movzx ebx, byte ptr [ebp - 0x3a]
0x804a0be:   8d 43 01                        	lea eax, [ebx + 1]
0x804a0c1:   88 45 c6                        	mov byte ptr [ebp - 0x3a], al
0x804a0c4:   0f bf 85 fc fe ff ff            	movsx eax, word ptr [ebp - 0x104]
0x804a0cb:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a0ce:   0f 92 c0                        	setb al
0x804a0d1:   0f b6 d0                        	movzx edx, al
0x804a0d4:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a0d8:   0f be c0                        	movsx eax, al
0x804a0db:   89 c1                           	mov ecx, eax
0x804a0dd:   d3 e2                           	shl edx, cl
0x804a0df:   89 d0                           	mov eax, edx
0x804a0e1:   66 98                           	cbw 
0x804a0e3:   83 c0 0c                        	add eax, 0xc
0x804a0e6:   98                              	cwde 
0x804a0e7:   0f be b5 ff fe ff ff            	movsx esi, byte ptr [ebp - 0x101]
0x804a0ee:   99                              	cdq 
0x804a0ef:   f7 fe                           	idiv esi
0x804a0f1:   3d de e4 e0 06                  	cmp eax, 0x6e0e4de
0x804a0f6:   0f 95 c0                        	setne al
0x804a0f9:   0f b6 c0                        	movzx eax, al
0x804a0fc:   66 0b 85 0c ff ff ff            	or ax, word ptr [ebp - 0xf4]
0x804a103:   89 c2                           	mov edx, eax
0x804a105:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a108:   29 c2                           	sub edx, eax
0x804a10a:   89 d0                           	mov eax, edx
0x804a10c:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x804a110:   c7 85 dc fe ff ff 15 4e 06 6e   	mov dword ptr [ebp - 0x124], 0x6e064e15
0x804a11a:   8b 85 dc fe ff ff               	mov eax, dword ptr [ebp - 0x124]
0x804a120:   f7 d0                           	not eax
0x804a122:   89 c2                           	mov edx, eax
0x804a124:   0f b6 c3                        	movzx eax, bl
0x804a127:   f6 f2                           	div dl
0x804a129:   0f b6 d0                        	movzx edx, al
0x804a12c:   0f be 45 c7                     	movsx eax, byte ptr [ebp - 0x39]
0x804a130:   31 c2                           	xor edx, eax
0x804a132:   0f bf 45 da                     	movsx eax, word ptr [ebp - 0x26]
0x804a136:   39 c2                           	cmp edx, eax
0x804a138:   0f 9e c0                        	setle al
0x804a13b:   0f b6 d0                        	movzx edx, al
0x804a13e:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x804a142:   01 d0                           	add eax, edx
0x804a144:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a147:   0f be 45 c7                     	movsx eax, byte ptr [ebp - 0x39]
0x804a14b:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a14e:   0f 93 c0                        	setae al
0x804a151:   0f b6 c0                        	movzx eax, al
0x804a154:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a157:   0f b6 85 db fe ff ff            	movzx eax, byte ptr [ebp - 0x125]
0x804a15e:   83 e0 09                        	and eax, 9
0x804a161:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a164:   0f 97 c0                        	seta al
0x804a167:   0f b6 c0                        	movzx eax, al
0x804a16a:   0f be 75 f3                     	movsx esi, byte ptr [ebp - 0xd]
0x804a16e:   99                              	cdq 
0x804a16f:   f7 fe                           	idiv esi
0x804a171:   21 45 c0                        	and dword ptr [ebp - 0x40], eax
0x804a174:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a177:   0f b6 d0                        	movzx edx, al
0x804a17a:   0f b6 85 db fe ff ff            	movzx eax, byte ptr [ebp - 0x125]
0x804a181:   0f af d0                        	imul edx, eax
0x804a184:   0f be 85 79 ff ff ff            	movsx eax, byte ptr [ebp - 0x87]
0x804a18b:   39 c2                           	cmp edx, eax
0x804a18d:   0f 95 c0                        	setne al
0x804a190:   0f b6 c0                        	movzx eax, al
0x804a193:   0f be 75 e9                     	movsx esi, byte ptr [ebp - 0x17]
0x804a197:   99                              	cdq 
0x804a198:   f7 fe                           	idiv esi
0x804a19a:   89 c2                           	mov edx, eax
0x804a19c:   0f be 45 c7                     	movsx eax, byte ptr [ebp - 0x39]
0x804a1a0:   39 c2                           	cmp edx, eax
0x804a1a2:   0f 9c c0                        	setl al
0x804a1a5:   0f b6 d0                        	movzx edx, al
0x804a1a8:   0f bf 85 0c ff ff ff            	movsx eax, word ptr [ebp - 0xf4]
0x804a1af:   39 c2                           	cmp edx, eax
0x804a1b1:   0f 94 c0                        	sete al
0x804a1b4:   0f b6 c0                        	movzx eax, al
0x804a1b7:   21 85 d4 fe ff ff               	and dword ptr [ebp - 0x12c], eax
0x804a1bd:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804a1c3:   09 45 98                        	or dword ptr [ebp - 0x68], eax
0x804a1c6:   e9 26 0a 00 00                  	jmp 0x804abf1 <func_1+0x1435>
0x804a1cb:   c7 85 f0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x110], 0
0x804a1d5:   c7 85 ec fe ff ff f7 ff ff ff   	mov dword ptr [ebp - 0x114], 0xfffffff7
0x804a1df:   0f bf 55 da                     	movsx edx, word ptr [ebp - 0x26]
0x804a1e3:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a1e6:   0f b7 d8                        	movzx ebx, ax
0x804a1e9:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804a1ed:   0f b7 c0                        	movzx eax, ax
0x804a1f0:   89 c1                           	mov ecx, eax
0x804a1f2:   d3 fb                           	sar ebx, cl
0x804a1f4:   89 d8                           	mov eax, ebx
0x804a1f6:   83 f8 07                        	cmp eax, 7
0x804a1f9:   0f 9e c0                        	setle al
0x804a1fc:   0f b6 c0                        	movzx eax, al
0x804a1ff:   39 c2                           	cmp edx, eax
0x804a201:   0f 95 c0                        	setne al
0x804a204:   0f b6 d0                        	movzx edx, al
0x804a207:   0f bf 45 da                     	movsx eax, word ptr [ebp - 0x26]
0x804a20b:   29 c2                           	sub edx, eax
0x804a20d:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804a211:   39 c2                           	cmp edx, eax
0x804a213:   0f 9e c0                        	setle al
0x804a216:   0f b6 c0                        	movzx eax, al
0x804a219:   8b 55 a8                        	mov edx, dword ptr [ebp - 0x58]
0x804a21c:   0f be f2                        	movsx esi, dl
0x804a21f:   99                              	cdq 
0x804a220:   f7 fe                           	idiv esi
0x804a222:   85 c0                           	test eax, eax
0x804a224:   74 10                           	je 0x804a236 <func_1+0xa7a>
0x804a226:   83 bd f0 fe ff ff 00            	cmp dword ptr [ebp - 0x110], 0
0x804a22d:   74 07                           	je 0x804a236 <func_1+0xa7a>
0x804a22f:   b8 01 00 00 00                  	mov eax, 1
0x804a234:   eb 05                           	jmp 0x804a23b <func_1+0xa7f>
0x804a236:   b8 00 00 00 00                  	mov eax, 0
0x804a23b:   23 45 9c                        	and eax, dword ptr [ebp - 0x64]
0x804a23e:   85 c0                           	test eax, eax
0x804a240:   78 07                           	js 0x804a249 <func_1+0xa8d>
0x804a242:   b8 b1 ff ff ff                  	mov eax, 0xffffffb1
0x804a247:   eb 05                           	jmp 0x804a24e <func_1+0xa92>
0x804a249:   b8 b0 ff ff ff                  	mov eax, 0xffffffb0
0x804a24e:   09 45 ac                        	or dword ptr [ebp - 0x54], eax
0x804a251:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a254:   09 45 98                        	or dword ptr [ebp - 0x68], eax
0x804a257:   66 83 6d ea 01                  	sub word ptr [ebp - 0x16], 1
0x804a25c:   b8 01 00 00 00                  	mov eax, 1
0x804a261:   09 45 c8                        	or dword ptr [ebp - 0x38], eax
0x804a264:   0f be 8d 0b ff ff ff            	movsx ecx, byte ptr [ebp - 0xf5]
0x804a26b:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804a26f:   83 bd f0 fe ff ff 00            	cmp dword ptr [ebp - 0x110], 0
0x804a276:   74 3e                           	je 0x804a2b6 <func_1+0xafa>
0x804a278:   8b 95 ec fe ff ff               	mov edx, dword ptr [ebp - 0x114]
0x804a27e:   0b 95 f0 fe ff ff               	or edx, dword ptr [ebp - 0x110]
0x804a284:   89 95 ec fe ff ff               	mov dword ptr [ebp - 0x114], edx
0x804a28a:   8b 95 ec fe ff ff               	mov edx, dword ptr [ebp - 0x114]
0x804a290:   3b 95 10 ff ff ff               	cmp edx, dword ptr [ebp - 0xf0]
0x804a296:   7d 0d                           	jge 0x804a2a5 <func_1+0xae9>
0x804a298:   80 7d c7 00                     	cmp byte ptr [ebp - 0x39], 0
0x804a29c:   74 07                           	je 0x804a2a5 <func_1+0xae9>
0x804a29e:   ba 01 00 00 00                  	mov edx, 1
0x804a2a3:   eb 05                           	jmp 0x804a2aa <func_1+0xaee>
0x804a2a5:   ba 00 00 00 00                  	mov edx, 0
0x804a2aa:   3b 55 ac                        	cmp edx, dword ptr [ebp - 0x54]
0x804a2ad:   74 07                           	je 0x804a2b6 <func_1+0xafa>
0x804a2af:   ba 01 00 00 00                  	mov edx, 1
0x804a2b4:   eb 05                           	jmp 0x804a2bb <func_1+0xaff>
0x804a2b6:   ba 00 00 00 00                  	mov edx, 0
0x804a2bb:   89 55 98                        	mov dword ptr [ebp - 0x68], edx
0x804a2be:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x804a2c1:   0f 9d c0                        	setge al
0x804a2c4:   0f b6 c0                        	movzx eax, al
0x804a2c7:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x804a2ca:   0f 9c c0                        	setl al
0x804a2cd:   0f b6 c0                        	movzx eax, al
0x804a2d0:   39 c1                           	cmp ecx, eax
0x804a2d2:   0f 9e c0                        	setle al
0x804a2d5:   0f b6 c0                        	movzx eax, al
0x804a2d8:   09 45 c8                        	or dword ptr [ebp - 0x38], eax
0x804a2db:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x804a2df:   0f 84 b4 00 00 00               	je 0x804a399 <func_1+0xbdd>
0x804a2e5:   c7 85 e8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x118], 0
0x804a2ef:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a2f2:   66 05 f0 3d                     	add ax, 0x3df0
0x804a2f6:   66 3d e0 7b                     	cmp ax, 0x7be0
0x804a2fa:   76 46                           	jbe 0x804a342 <func_1+0xb86>
0x804a2fc:   c7 85 e4 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x11c], 0xffffffff
0x804a306:   8b 85 e4 fe ff ff               	mov eax, dword ptr [ebp - 0x11c]
0x804a30c:   89 c2                           	mov edx, eax
0x804a30e:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804a312:   09 d0                           	or eax, edx
0x804a314:   66 89 45 da                     	mov word ptr [ebp - 0x26], ax
0x804a318:   66 83 7d da 00                  	cmp word ptr [ebp - 0x26], 0
0x804a31d:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a320:   88 45 c7                        	mov byte ptr [ebp - 0x39], al
0x804a323:   83 7d d4 01                     	cmp dword ptr [ebp - 0x2c], 1
0x804a327:   0f 96 c0                        	setbe al
0x804a32a:   0f b6 c0                        	movzx eax, al
0x804a32d:   09 45 c8                        	or dword ptr [ebp - 0x38], eax
0x804a330:   c7 45 c8 73 bf ac ac            	mov dword ptr [ebp - 0x38], 0xacacbf73
0x804a337:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a33a:   89 85 ec fe ff ff               	mov dword ptr [ebp - 0x114], eax
0x804a340:   eb 20                           	jmp 0x804a362 <func_1+0xba6>
0x804a342:   0f b6 4d c6                     	movzx ecx, byte ptr [ebp - 0x3a]
0x804a346:   b8 01 00 00 00                  	mov eax, 1
0x804a34b:   99                              	cdq 
0x804a34c:   f7 7d ec                        	idiv dword ptr [ebp - 0x14]
0x804a34f:   89 d0                           	mov eax, edx
0x804a351:   0f b6 c0                        	movzx eax, al
0x804a354:   01 c8                           	add eax, ecx
0x804a356:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x804a359:   0f 92 c0                        	setb al
0x804a35c:   0f b6 c0                        	movzx eax, al
0x804a35f:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a362:   c6 45 e9 f2                     	mov byte ptr [ebp - 0x17], 0xf2
0x804a366:   eb 22                           	jmp 0x804a38a <func_1+0xbce>
0x804a368:   83 bd e8 fe ff ff 00            	cmp dword ptr [ebp - 0x118], 0
0x804a36f:   0f 94 c0                        	sete al
0x804a372:   0f b6 c0                        	movzx eax, al
0x804a375:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a378:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a37b:   f7 d0                           	not eax
0x804a37d:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a380:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x804a384:   83 c0 01                        	add eax, 1
0x804a387:   88 45 e9                        	mov byte ptr [ebp - 0x17], al
0x804a38a:   80 7d e9 f4                     	cmp byte ptr [ebp - 0x17], 0xf4
0x804a38e:   74 d8                           	je 0x804a368 <func_1+0xbac>
0x804a390:   83 6d b8 01                     	sub dword ptr [ebp - 0x48], 1
0x804a394:   e9 58 08 00 00                  	jmp 0x804abf1 <func_1+0x1435>
0x804a399:   83 45 b4 01                     	add dword ptr [ebp - 0x4c], 1
0x804a39d:   e9 4f 08 00 00                  	jmp 0x804abf1 <func_1+0x1435>
0x804a3a2:   c7 85 04 ff ff ff fd ff ff ff   	mov dword ptr [ebp - 0xfc], 0xfffffffd
0x804a3ac:   c7 85 00 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0x100], 9
0x804a3b6:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x804a3bc:   0f bf c8                        	movsx ecx, ax
0x804a3bf:   0f be b5 1a ff ff ff            	movsx esi, byte ptr [ebp - 0xe6]
0x804a3c6:   b8 01 00 00 00                  	mov eax, 1
0x804a3cb:   ba 00 00 00 00                  	mov edx, 0
0x804a3d0:   f7 f6                           	div esi
0x804a3d2:   89 c2                           	mov edx, eax
0x804a3d4:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a3d7:   31 c2                           	xor edx, eax
0x804a3d9:   0f be 85 0b ff ff ff            	movsx eax, byte ptr [ebp - 0xf5]
0x804a3e0:   39 c2                           	cmp edx, eax
0x804a3e2:   0f 95 c0                        	setne al
0x804a3e5:   0f b6 c0                        	movzx eax, al
0x804a3e8:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a3eb:   8b 55 bc                        	mov edx, dword ptr [ebp - 0x44]
0x804a3ee:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a3f1:   01 d0                           	add eax, edx
0x804a3f3:   39 85 04 ff ff ff               	cmp dword ptr [ebp - 0xfc], eax
0x804a3f9:   0f 94 c0                        	sete al
0x804a3fc:   0f b6 c0                        	movzx eax, al
0x804a3ff:   01 c8                           	add eax, ecx
0x804a401:   3d 8f 00 00 00                  	cmp eax, 0x8f
0x804a406:   0f bf 85 0c ff ff ff            	movsx eax, word ptr [ebp - 0xf4]
0x804a40d:   83 e0 01                        	and eax, 1
0x804a410:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a413:   0f 92 c0                        	setb al
0x804a416:   0f b6 c0                        	movzx eax, al
0x804a419:   09 85 00 ff ff ff               	or dword ptr [ebp - 0x100], eax
0x804a41f:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x804a425:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a428:   81 7d b4 bc 00 00 00            	cmp dword ptr [ebp - 0x4c], 0xbc
0x804a42f:   0f 95 c0                        	setne al
0x804a432:   0f b6 c0                        	movzx eax, al
0x804a435:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a438:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x804a43f:   0f b6 55 c6                     	movzx edx, byte ptr [ebp - 0x3a]
0x804a443:   0f be 4d c7                     	movsx ecx, byte ptr [ebp - 0x39]
0x804a447:   0f bf 75 ce                     	movsx esi, word ptr [ebp - 0x32]
0x804a44b:   0f bf 7d da                     	movsx edi, word ptr [ebp - 0x26]
0x804a44f:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x804a455:   0f be 5d 8f                     	movsx ebx, byte ptr [ebp - 0x71]
0x804a459:   89 9d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ebx
0x804a45f:   0f bf 7d e6                     	movsx edi, word ptr [ebp - 0x1a]
0x804a463:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x804a469:   0f be 5d e9                     	movsx ebx, byte ptr [ebp - 0x17]
0x804a46d:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x804a473:   0f b7 7d ea                     	movzx edi, word ptr [ebp - 0x16]
0x804a477:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804a47d:   0f b7 7d f0                     	movzx edi, word ptr [ebp - 0x10]
0x804a481:   0f be 5d f3                     	movsx ebx, byte ptr [ebp - 0xd]
0x804a485:   50                              	push eax
0x804a486:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a489:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a48f:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a492:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a495:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a498:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a49b:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a49e:   52                              	push edx
0x804a49f:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a4a2:   51                              	push ecx
0x804a4a3:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a4a6:   56                              	push esi
0x804a4a7:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a4aa:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a4ad:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a4b0:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a4b6:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a4b9:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a4bf:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a4c2:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a4c8:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a4ce:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a4d4:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a4d7:   57                              	push edi
0x804a4d8:   53                              	push ebx
0x804a4d9:   e8 48 f1 ff ff                  	call 0x8049626 <set_var>
0x804a4de:   83 c4 68                        	add esp, 0x68
0x804a4e1:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x804a4e7:   e9 20 08 00 00                  	jmp 0x804ad0c <func_1+0x1550>
0x804a4ec:   66 c7 85 6e ff ff ff 00 00      	mov word ptr [ebp - 0x92], 0
0x804a4f5:   c6 85 6d ff ff ff 83            	mov byte ptr [ebp - 0x93], 0x83
0x804a4fc:   c7 85 68 ff ff ff 20 b7 91 52   	mov dword ptr [ebp - 0x98], 0x5291b720
0x804a506:   c7 45 94 f9 ff ff ff            	mov dword ptr [ebp - 0x6c], 0xfffffff9
0x804a50d:   c7 85 64 ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0x9c], 8
0x804a517:   c6 45 f3 00                     	mov byte ptr [ebp - 0xd], 0
0x804a51b:   80 7d f3 e5                     	cmp byte ptr [ebp - 0xd], 0xe5
0x804a51f:   0f 8d 21 01 00 00               	jge 0x804a646 <func_1+0xe8a>
0x804a525:   c6 85 23 ff ff ff 68            	mov byte ptr [ebp - 0xdd], 0x68
0x804a52c:   c7 85 1c ff ff ff 7c 3f e3 e9   	mov dword ptr [ebp - 0xe4], 0xe9e33f7c
0x804a536:   0f b7 85 6e ff ff ff            	movzx eax, word ptr [ebp - 0x92]
0x804a53d:   83 e8 07                        	sub eax, 7
0x804a540:   f7 d0                           	not eax
0x804a542:   88 85 23 ff ff ff               	mov byte ptr [ebp - 0xdd], al
0x804a548:   0f b6 85 23 ff ff ff            	movzx eax, byte ptr [ebp - 0xdd]
0x804a54f:   83 f0 03                        	xor eax, 3
0x804a552:   66 98                           	cbw 
0x804a554:   66 25 86 a7                     	and ax, 0xa786
0x804a558:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x804a55c:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a560:   88 85 6d ff ff ff               	mov byte ptr [ebp - 0x93], al
0x804a566:   66 83 bd 6e ff ff ff 01         	cmp word ptr [ebp - 0x92], 1
0x804a56e:   74 0d                           	je 0x804a57d <func_1+0xdc1>
0x804a570:   83 7d 80 00                     	cmp dword ptr [ebp - 0x80], 0
0x804a574:   74 07                           	je 0x804a57d <func_1+0xdc1>
0x804a576:   b8 01 00 00 00                  	mov eax, 1
0x804a57b:   eb 05                           	jmp 0x804a582 <func_1+0xdc6>
0x804a57d:   b8 00 00 00 00                  	mov eax, 0
0x804a582:   0f be c0                        	movsx eax, al
0x804a585:   8b 95 1c ff ff ff               	mov edx, dword ptr [ebp - 0xe4]
0x804a58b:   0f be f2                        	movsx esi, dl
0x804a58e:   99                              	cdq 
0x804a58f:   f7 fe                           	idiv esi
0x804a591:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a594:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x804a59b:   0f b6 55 c6                     	movzx edx, byte ptr [ebp - 0x3a]
0x804a59f:   0f be 4d c7                     	movsx ecx, byte ptr [ebp - 0x39]
0x804a5a3:   0f bf 75 ce                     	movsx esi, word ptr [ebp - 0x32]
0x804a5a7:   0f bf 7d da                     	movsx edi, word ptr [ebp - 0x26]
0x804a5ab:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x804a5b1:   0f be 5d 8f                     	movsx ebx, byte ptr [ebp - 0x71]
0x804a5b5:   89 9d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ebx
0x804a5bb:   0f bf 7d e6                     	movsx edi, word ptr [ebp - 0x1a]
0x804a5bf:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x804a5c5:   0f be 5d e9                     	movsx ebx, byte ptr [ebp - 0x17]
0x804a5c9:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x804a5cf:   0f b7 7d ea                     	movzx edi, word ptr [ebp - 0x16]
0x804a5d3:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804a5d9:   0f b7 7d f0                     	movzx edi, word ptr [ebp - 0x10]
0x804a5dd:   0f be 5d f3                     	movsx ebx, byte ptr [ebp - 0xd]
0x804a5e1:   50                              	push eax
0x804a5e2:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a5e5:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a5eb:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a5ee:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a5f1:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a5f4:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a5f7:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a5fa:   52                              	push edx
0x804a5fb:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a5fe:   51                              	push ecx
0x804a5ff:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a602:   56                              	push esi
0x804a603:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a606:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a609:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a60c:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a612:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a615:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a61b:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a61e:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a624:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a62a:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a630:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a633:   57                              	push edi
0x804a634:   53                              	push ebx
0x804a635:   e8 ec ef ff ff                  	call 0x8049626 <set_var>
0x804a63a:   83 c4 68                        	add esp, 0x68
0x804a63d:   0f be 45 c7                     	movsx eax, byte ptr [ebp - 0x39]
0x804a641:   e9 c6 06 00 00                  	jmp 0x804ad0c <func_1+0x1550>
0x804a646:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a649:   0f b6 95 79 ff ff ff            	movzx edx, byte ptr [ebp - 0x87]
0x804a650:   0f b6 c0                        	movzx eax, al
0x804a653:   f6 f2                           	div dl
0x804a655:   0f b6 c4                        	movzx eax, ah
0x804a658:   84 c0                           	test al, al
0x804a65a:   0f 95 c0                        	setne al
0x804a65d:   0f b6 c0                        	movzx eax, al
0x804a660:   f7 d8                           	neg eax
0x804a662:   21 45 a8                        	and dword ptr [ebp - 0x58], eax
0x804a665:   0f b6 95 6d ff ff ff            	movzx edx, byte ptr [ebp - 0x93]
0x804a66c:   0f b6 85 6d ff ff ff            	movzx eax, byte ptr [ebp - 0x93]
0x804a673:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x804a676:   0f 9e c0                        	setle al
0x804a679:   0f b6 c0                        	movzx eax, al
0x804a67c:   39 c2                           	cmp edx, eax
0x804a67e:   75 09                           	jne 0x804a689 <func_1+0xecd>
0x804a680:   80 bd 6d ff ff ff 00            	cmp byte ptr [ebp - 0x93], 0
0x804a687:   74 07                           	je 0x804a690 <func_1+0xed4>
0x804a689:   b8 01 00 00 00                  	mov eax, 1
0x804a68e:   eb 05                           	jmp 0x804a695 <func_1+0xed9>
0x804a690:   b8 00 00 00 00                  	mov eax, 0
0x804a695:   f7 d8                           	neg eax
0x804a697:   0f b7 b5 76 ff ff ff            	movzx esi, word ptr [ebp - 0x8a]
0x804a69e:   ba 00 00 00 00                  	mov edx, 0
0x804a6a3:   f7 f6                           	div esi
0x804a6a5:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a6a8:   0f b6 85 6d ff ff ff            	movzx eax, byte ptr [ebp - 0x93]
0x804a6af:   39 85 7c ff ff ff               	cmp dword ptr [ebp - 0x84], eax
0x804a6b5:   0f 84 90 01 00 00               	je 0x804a84b <func_1+0x108f>
0x804a6bb:   c6 85 2e ff ff ff f7            	mov byte ptr [ebp - 0xd2], 0xf7
0x804a6c2:   c7 85 28 ff ff ff 0e 00 2a dd   	mov dword ptr [ebp - 0xd8], 0xdd2a000e
0x804a6cc:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a6cf:   0f bf d0                        	movsx edx, ax
0x804a6d2:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a6d5:   98                              	cwde 
0x804a6d6:   29 c2                           	sub edx, eax
0x804a6d8:   89 d0                           	mov eax, edx
0x804a6da:   33 85 7c ff ff ff               	xor eax, dword ptr [ebp - 0x84]
0x804a6e0:   89 c2                           	mov edx, eax
0x804a6e2:   0f b6 85 6d ff ff ff            	movzx eax, byte ptr [ebp - 0x93]
0x804a6e9:   39 c2                           	cmp edx, eax
0x804a6eb:   0f 94 c0                        	sete al
0x804a6ee:   88 85 2e ff ff ff               	mov byte ptr [ebp - 0xd2], al
0x804a6f4:   0f b6 8d 2e ff ff ff            	movzx ecx, byte ptr [ebp - 0xd2]
0x804a6fb:   80 f9 fa                        	cmp cl, 0xfa
0x804a6fe:   0f 93 c2                        	setae dl
0x804a701:   89 d0                           	mov eax, edx
0x804a703:   c1 e2 02                        	shl edx, 2
0x804a706:   29 d0                           	sub eax, edx
0x804a708:   01 c0                           	add eax, eax
0x804a70a:   29 c1                           	sub ecx, eax
0x804a70c:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x804a710:   3d 30 0f da fc                  	cmp eax, 0xfcda0f30
0x804a715:   0f 93 c2                        	setae dl
0x804a718:   0f b6 d2                        	movzx edx, dl
0x804a71b:   89 55 e0                        	mov dword ptr [ebp - 0x20], edx
0x804a71e:   8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x804a721:   69 d2 30 0f da fc               	imul edx, edx, 0xfcda0f30
0x804a727:   29 d0                           	sub eax, edx
0x804a729:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a72c:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x804a732:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a735:   81 7d d4 31 f6 00 00            	cmp dword ptr [ebp - 0x2c], 0xf631
0x804a73c:   0f 94 c0                        	sete al
0x804a73f:   0f b6 d0                        	movzx edx, al
0x804a742:   83 7d b4 00                     	cmp dword ptr [ebp - 0x4c], 0
0x804a746:   0f 95 c0                        	setne al
0x804a749:   0f b6 c0                        	movzx eax, al
0x804a74c:   0f b7 d8                        	movzx ebx, ax
0x804a74f:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a753:   89 c1                           	mov ecx, eax
0x804a755:   d3 e3                           	shl ebx, cl
0x804a757:   89 d8                           	mov eax, ebx
0x804a759:   89 c1                           	mov ecx, eax
0x804a75b:   89 c8                           	mov eax, ecx
0x804a75d:   c1 e0 03                        	shl eax, 3
0x804a760:   01 c8                           	add eax, ecx
0x804a762:   f7 d8                           	neg eax
0x804a764:   0f be c0                        	movsx eax, al
0x804a767:   01 d0                           	add eax, edx
0x804a769:   85 c0                           	test eax, eax
0x804a76b:   75 09                           	jne 0x804a776 <func_1+0xfba>
0x804a76d:   80 bd 6d ff ff ff 00            	cmp byte ptr [ebp - 0x93], 0
0x804a774:   74 07                           	je 0x804a77d <func_1+0xfc1>
0x804a776:   b8 01 00 00 00                  	mov eax, 1
0x804a77b:   eb 05                           	jmp 0x804a782 <func_1+0xfc6>
0x804a77d:   b8 00 00 00 00                  	mov eax, 0
0x804a782:   0f b6 d0                        	movzx edx, al
0x804a785:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x804a78b:   0f b6 c0                        	movzx eax, al
0x804a78e:   89 c1                           	mov ecx, eax
0x804a790:   d3 e2                           	shl edx, cl
0x804a792:   89 d0                           	mov eax, edx
0x804a794:   85 c0                           	test eax, eax
0x804a796:   74 1c                           	je 0x804a7b4 <func_1+0xff8>
0x804a798:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a79b:   89 85 28 ff ff ff               	mov dword ptr [ebp - 0xd8], eax
0x804a7a1:   0f b6 85 6d ff ff ff            	movzx eax, byte ptr [ebp - 0x93]
0x804a7a8:   66 89 85 74 ff ff ff            	mov word ptr [ebp - 0x8c], ax
0x804a7af:   e9 3d 04 00 00                  	jmp 0x804abf1 <func_1+0x1435>
0x804a7b4:   c7 85 24 ff ff ff b1 a8 60 d4   	mov dword ptr [ebp - 0xdc], 0xd460a8b1
0x804a7be:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a7c2:   83 e8 01                        	sub eax, 1
0x804a7c5:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x804a7c9:   80 bd 2e ff ff ff 00            	cmp byte ptr [ebp - 0xd2], 0
0x804a7d0:   0f 95 c0                        	setne al
0x804a7d3:   0f b6 d0                        	movzx edx, al
0x804a7d6:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a7d9:   0f b6 c0                        	movzx eax, al
0x804a7dc:   89 c1                           	mov ecx, eax
0x804a7de:   d3 fa                           	sar edx, cl
0x804a7e0:   89 d0                           	mov eax, edx
0x804a7e2:   39 85 24 ff ff ff               	cmp dword ptr [ebp - 0xdc], eax
0x804a7e8:   0f 94 c0                        	sete al
0x804a7eb:   0f b6 d0                        	movzx edx, al
0x804a7ee:   0f b7 85 6e ff ff ff            	movzx eax, word ptr [ebp - 0x92]
0x804a7f5:   39 c2                           	cmp edx, eax
0x804a7f7:   0f 9f c0                        	setg al
0x804a7fa:   0f b6 c0                        	movzx eax, al
0x804a7fd:   8b 95 28 ff ff ff               	mov edx, dword ptr [ebp - 0xd8]
0x804a803:   0f be f2                        	movsx esi, dl
0x804a806:   99                              	cdq 
0x804a807:   f7 fe                           	idiv esi
0x804a809:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x804a80c:   73 0d                           	jae 0x804a81b <func_1+0x105f>
0x804a80e:   83 7d c0 00                     	cmp dword ptr [ebp - 0x40], 0
0x804a812:   74 07                           	je 0x804a81b <func_1+0x105f>
0x804a814:   b8 01 00 00 00                  	mov eax, 1
0x804a819:   eb 05                           	jmp 0x804a820 <func_1+0x1064>
0x804a81b:   b8 00 00 00 00                  	mov eax, 0
0x804a820:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x804a824:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804a828:   98                              	cwde 
0x804a829:   ba 78 20 00 00                  	mov edx, 0x2078
0x804a82e:   89 c1                           	mov ecx, eax
0x804a830:   d3 e2                           	shl edx, cl
0x804a832:   89 d0                           	mov eax, edx
0x804a834:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a837:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a83a:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a83d:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a843:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a846:   e9 a6 03 00 00                  	jmp 0x804abf1 <func_1+0x1435>
0x804a84b:   c7 85 60 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xa0], 9
0x804a855:   c7 85 5c ff ff ff 04 00 00 00   	mov dword ptr [ebp - 0xa4], 4
0x804a85f:   c7 45 90 cc be 81 96            	mov dword ptr [ebp - 0x70], 0x9681becc
0x804a866:   c7 85 58 ff ff ff b4 73 7f 12   	mov dword ptr [ebp - 0xa8], 0x127f73b4
0x804a870:   c7 85 54 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xac], 1
0x804a87a:   c7 85 50 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xb0], 1
0x804a884:   c7 85 4c ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0xb4], 6
0x804a88e:   c7 85 48 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xb8], 0xffffffff
0x804a898:   c7 45 c8 00 00 00 00            	mov dword ptr [ebp - 0x38], 0
0x804a89f:   0f be 95 79 ff ff ff            	movsx edx, byte ptr [ebp - 0x87]
0x804a8a6:   0f b6 85 6d ff ff ff            	movzx eax, byte ptr [ebp - 0x93]
0x804a8ad:   89 c1                           	mov ecx, eax
0x804a8af:   d3 fa                           	sar edx, cl
0x804a8b1:   89 d0                           	mov eax, edx
0x804a8b3:   0b 45 c8                        	or eax, dword ptr [ebp - 0x38]
0x804a8b6:   33 85 5c ff ff ff               	xor eax, dword ptr [ebp - 0xa4]
0x804a8bc:   89 c2                           	mov edx, eax
0x804a8be:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a8c1:   31 d0                           	xor eax, edx
0x804a8c3:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a8c6:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a8c9:   0f bf d0                        	movsx edx, ax
0x804a8cc:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a8cf:   98                              	cwde 
0x804a8d0:   0f af c2                        	imul eax, edx
0x804a8d3:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x804a8d9:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a8df:   33 85 5c ff ff ff               	xor eax, dword ptr [ebp - 0xa4]
0x804a8e5:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a8e8:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a8eb:   83 c0 06                        	add eax, 6
0x804a8ee:   0f be c0                        	movsx eax, al
0x804a8f1:   83 c0 3e                        	add eax, 0x3e
0x804a8f4:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804a8f7:   c7 45 c8 f0 ff ff ff            	mov dword ptr [ebp - 0x38], 0xfffffff0
0x804a8fe:   e9 dd 02 00 00                  	jmp 0x804abe0 <func_1+0x1424>
0x804a903:   c6 85 47 ff ff ff 90            	mov byte ptr [ebp - 0xb9], 0x90
0x804a90a:   c7 85 40 ff ff ff 2e 18 22 0b   	mov dword ptr [ebp - 0xc0], 0xb22182e
0x804a914:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a917:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804a91a:   83 bd 5c ff ff ff fa            	cmp dword ptr [ebp - 0xa4], -6
0x804a921:   74 6e                           	je 0x804a991 <func_1+0x11d5>
0x804a923:   c7 85 30 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xd0], 1
0x804a92d:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x804a934:   eb 4c                           	jmp 0x804a982 <func_1+0x11c6>
0x804a936:   c6 85 2f ff ff ff 01            	mov byte ptr [ebp - 0xd1], 1
0x804a93d:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x804a944:   74 05                           	je 0x804a94b <func_1+0x118f>
0x804a946:   e9 54 ff ff ff                  	jmp 0x804a89f <func_1+0x10e3>
0x804a94b:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x804a951:   0f b6 c0                        	movzx eax, al
0x804a954:   ba 1d 00 00 00                  	mov edx, 0x1d
0x804a959:   89 c1                           	mov ecx, eax
0x804a95b:   d3 e2                           	shl edx, cl
0x804a95d:   89 d0                           	mov eax, edx
0x804a95f:   0b 45 80                        	or eax, dword ptr [ebp - 0x80]
0x804a962:   89 c2                           	mov edx, eax
0x804a964:   66 83 bd 76 ff ff ff 12         	cmp word ptr [ebp - 0x8a], 0x12
0x804a96c:   0f 96 c0                        	setbe al
0x804a96f:   0f b6 c0                        	movzx eax, al
0x804a972:   31 d0                           	xor eax, edx
0x804a974:   31 45 ec                        	xor dword ptr [ebp - 0x14], eax
0x804a977:   c7 45 bc 00 00 00 00            	mov dword ptr [ebp - 0x44], 0
0x804a97e:   83 45 90 05                     	add dword ptr [ebp - 0x70], 5
0x804a982:   83 7d 90 13                     	cmp dword ptr [ebp - 0x70], 0x13
0x804a986:   7f ae                           	jg 0x804a936 <func_1+0x117a>
0x804a988:   83 45 b0 01                     	add dword ptr [ebp - 0x50], 1
0x804a98c:   e9 45 02 00 00                  	jmp 0x804abd6 <func_1+0x141a>
0x804a991:   66 c7 85 3e ff ff ff c8 df      	mov word ptr [ebp - 0xc2], 0xdfc8
0x804a99a:   c7 85 38 ff ff ff 52 b9 6f a9   	mov dword ptr [ebp - 0xc8], 0xa96fb952
0x804a9a4:   80 bd 47 ff ff ff 00            	cmp byte ptr [ebp - 0xb9], 0
0x804a9ab:   0f 95 c0                        	setne al
0x804a9ae:   0f b6 c0                        	movzx eax, al
0x804a9b1:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x804a9b4:   0f 94 c0                        	sete al
0x804a9b7:   0f b6 c0                        	movzx eax, al
0x804a9ba:   39 45 80                        	cmp dword ptr [ebp - 0x80], eax
0x804a9bd:   0f 9d c0                        	setge al
0x804a9c0:   0f b6 c0                        	movzx eax, al
0x804a9c3:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a9c6:   80 6d c6 01                     	sub byte ptr [ebp - 0x3a], 1
0x804a9ca:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x804a9ce:   75 3a                           	jne 0x804aa0a <func_1+0x124e>
0x804a9d0:   66 83 bd 3e ff ff ff 00         	cmp word ptr [ebp - 0xc2], 0
0x804a9d8:   74 10                           	je 0x804a9ea <func_1+0x122e>
0x804a9da:   83 bd 5c ff ff ff 00            	cmp dword ptr [ebp - 0xa4], 0
0x804a9e1:   74 07                           	je 0x804a9ea <func_1+0x122e>
0x804a9e3:   b8 01 00 00 00                  	mov eax, 1
0x804a9e8:   eb 05                           	jmp 0x804a9ef <func_1+0x1233>
0x804a9ea:   b8 00 00 00 00                  	mov eax, 0
0x804a9ef:   83 f8 7b                        	cmp eax, 0x7b
0x804a9f2:   0f 9e c0                        	setle al
0x804a9f5:   20 45 f3                        	and byte ptr [ebp - 0xd], al
0x804a9f8:   0f be 55 f3                     	movsx edx, byte ptr [ebp - 0xd]
0x804a9fc:   0f be 45 c7                     	movsx eax, byte ptr [ebp - 0x39]
0x804aa00:   89 c1                           	mov ecx, eax
0x804aa02:   d3 fa                           	sar edx, cl
0x804aa04:   89 d0                           	mov eax, edx
0x804aa06:   85 c0                           	test eax, eax
0x804aa08:   74 07                           	je 0x804aa11 <func_1+0x1255>
0x804aa0a:   b8 01 00 00 00                  	mov eax, 1
0x804aa0f:   eb 05                           	jmp 0x804aa16 <func_1+0x125a>
0x804aa11:   b8 00 00 00 00                  	mov eax, 0
0x804aa16:   23 85 70 ff ff ff               	and eax, dword ptr [ebp - 0x90]
0x804aa1c:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804aa1f:   c7 45 bc 48 e9 ee a3            	mov dword ptr [ebp - 0x44], 0xa3eee948
0x804aa26:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x804aa2d:   f7 d0                           	not eax
0x804aa2f:   89 c2                           	mov edx, eax
0x804aa31:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x804aa35:   39 c2                           	cmp edx, eax
0x804aa37:   0f 9f c0                        	setg al
0x804aa3a:   0f b6 c0                        	movzx eax, al
0x804aa3d:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804aa40:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x804aa44:   75 06                           	jne 0x804aa4c <func_1+0x1290>
0x804aa46:   80 7d c7 00                     	cmp byte ptr [ebp - 0x39], 0
0x804aa4a:   74 07                           	je 0x804aa53 <func_1+0x1297>
0x804aa4c:   b8 01 00 00 00                  	mov eax, 1
0x804aa51:   eb 05                           	jmp 0x804aa58 <func_1+0x129c>
0x804aa53:   b8 00 00 00 00                  	mov eax, 0
0x804aa58:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x804aa5e:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x804aa64:   39 85 60 ff ff ff               	cmp dword ptr [ebp - 0xa0], eax
0x804aa6a:   0f 85 b5 00 00 00               	jne 0x804ab25 <func_1+0x1369>
0x804aa70:   66 c7 85 36 ff ff ff 02 00      	mov word ptr [ebp - 0xca], 2
0x804aa79:   c7 45 bc 79 ac 69 52            	mov dword ptr [ebp - 0x44], 0x5269ac79
0x804aa80:   66 83 bd 6e ff ff ff 00         	cmp word ptr [ebp - 0x92], 0
0x804aa88:   74 05                           	je 0x804aa8f <func_1+0x12d3>
0x804aa8a:   e9 09 fe ff ff                  	jmp 0x804a898 <func_1+0x10dc>
0x804aa8f:   66 c7 45 f0 d5 4f               	mov word ptr [ebp - 0x10], 0x4fd5
0x804aa95:   81 7d c8 7c 84 ff ff            	cmp dword ptr [ebp - 0x38], 0xffff847c
0x804aa9c:   0f 95 c0                        	setne al
0x804aa9f:   0f b6 d0                        	movzx edx, al
0x804aaa2:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804aaa5:   98                              	cwde 
0x804aaa6:   89 c1                           	mov ecx, eax
0x804aaa8:   d3 fa                           	sar edx, cl
0x804aaaa:   89 d0                           	mov eax, edx
0x804aaac:   85 c0                           	test eax, eax
0x804aaae:   75 07                           	jne 0x804aab7 <func_1+0x12fb>
0x804aab0:   80 bd 6d ff ff ff 00            	cmp byte ptr [ebp - 0x93], 0
0x804aab7:   c7 45 94 00 00 00 00            	mov dword ptr [ebp - 0x6c], 0
0x804aabe:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804aac1:   3b 45 80                        	cmp eax, dword ptr [ebp - 0x80]
0x804aac4:   0f 9e c0                        	setle al
0x804aac7:   0f b6 d0                        	movzx edx, al
0x804aaca:   0f bf 85 3e ff ff ff            	movsx eax, word ptr [ebp - 0xc2]
0x804aad1:   39 c2                           	cmp edx, eax
0x804aad3:   0f 9e c0                        	setle al
0x804aad6:   0f b6 c0                        	movzx eax, al
0x804aad9:   66 89 45 ce                     	mov word ptr [ebp - 0x32], ax
0x804aadd:   c7 85 40 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xc0], 1
0x804aae7:   c7 85 50 ff ff ff 14 af 13 60   	mov dword ptr [ebp - 0xb0], 0x6013af14
0x804aaf1:   0f bf 55 da                     	movsx edx, word ptr [ebp - 0x26]
0x804aaf5:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804aaf8:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x804aafe:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804ab04:   98                              	cwde 
0x804ab05:   0f af d0                        	imul edx, eax
0x804ab08:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x804ab0f:   0f 94 c0                        	sete al
0x804ab12:   0f b6 c0                        	movzx eax, al
0x804ab15:   39 c2                           	cmp edx, eax
0x804ab17:   0f 9d c0                        	setge al
0x804ab1a:   0f b6 c0                        	movzx eax, al
0x804ab1d:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804ab20:   e9 b1 00 00 00                  	jmp 0x804abd6 <func_1+0x141a>
0x804ab25:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x804ab2c:   0f b6 55 c6                     	movzx edx, byte ptr [ebp - 0x3a]
0x804ab30:   0f be 4d c7                     	movsx ecx, byte ptr [ebp - 0x39]
0x804ab34:   0f bf 75 ce                     	movsx esi, word ptr [ebp - 0x32]
0x804ab38:   0f bf 7d da                     	movsx edi, word ptr [ebp - 0x26]
0x804ab3c:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x804ab42:   0f be 5d 8f                     	movsx ebx, byte ptr [ebp - 0x71]
0x804ab46:   89 9d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ebx
0x804ab4c:   0f bf 7d e6                     	movsx edi, word ptr [ebp - 0x1a]
0x804ab50:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x804ab56:   0f be 5d e9                     	movsx ebx, byte ptr [ebp - 0x17]
0x804ab5a:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x804ab60:   0f b7 7d ea                     	movzx edi, word ptr [ebp - 0x16]
0x804ab64:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804ab6a:   0f b7 7d f0                     	movzx edi, word ptr [ebp - 0x10]
0x804ab6e:   0f be 5d f3                     	movsx ebx, byte ptr [ebp - 0xd]
0x804ab72:   50                              	push eax
0x804ab73:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804ab76:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804ab7c:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804ab7f:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804ab82:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804ab85:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804ab88:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804ab8b:   52                              	push edx
0x804ab8c:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804ab8f:   51                              	push ecx
0x804ab90:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804ab93:   56                              	push esi
0x804ab94:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804ab97:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804ab9a:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804ab9d:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804aba3:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804aba6:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804abac:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804abaf:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804abb5:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804abbb:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804abc1:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804abc4:   57                              	push edi
0x804abc5:   53                              	push ebx
0x804abc6:   e8 5b ea ff ff                  	call 0x8049626 <set_var>
0x804abcb:   83 c4 68                        	add esp, 0x68
0x804abce:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804abd1:   e9 36 01 00 00                  	jmp 0x804ad0c <func_1+0x1550>
0x804abd6:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804abd9:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804abdc:   83 6d c8 01                     	sub dword ptr [ebp - 0x38], 1
0x804abe0:   83 7d c8 ed                     	cmp dword ptr [ebp - 0x38], -0x13
0x804abe4:   0f 84 19 fd ff ff               	je 0x804a903 <func_1+0x1147>
0x804abea:   83 85 48 ff ff ff 01            	add dword ptr [ebp - 0xb8], 1
0x804abf1:   0f b7 5d ea                     	movzx ebx, word ptr [ebp - 0x16]
0x804abf5:   0f be 45 c7                     	movsx eax, byte ptr [ebp - 0x39]
0x804abf9:   39 45 b4                        	cmp dword ptr [ebp - 0x4c], eax
0x804abfc:   0f 97 c0                        	seta al
0x804abff:   0f b6 c0                        	movzx eax, al
0x804ac02:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x804ac06:   be 0c d0 78 d3                  	mov esi, 0xd378d00c
0x804ac0b:   0f b6 45 c6                     	movzx eax, byte ptr [ebp - 0x3a]
0x804ac0f:   c1 e0 03                        	shl eax, 3
0x804ac12:   0f b7 d0                        	movzx edx, ax
0x804ac15:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804ac19:   0f b7 c0                        	movzx eax, ax
0x804ac1c:   89 c1                           	mov ecx, eax
0x804ac1e:   d3 fa                           	sar edx, cl
0x804ac20:   89 d0                           	mov eax, edx
0x804ac22:   89 c2                           	mov edx, eax
0x804ac24:   89 f0                           	mov eax, esi
0x804ac26:   66 09 45 f0                     	or word ptr [ebp - 0x10], ax
0x804ac2a:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804ac2e:   29 c2                           	sub edx, eax
0x804ac30:   89 d0                           	mov eax, edx
0x804ac32:   0f b6 c0                        	movzx eax, al
0x804ac35:   f7 d8                           	neg eax
0x804ac37:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x804ac3a:   0f 9c c0                        	setl al
0x804ac3d:   0f b6 c0                        	movzx eax, al
0x804ac40:   99                              	cdq 
0x804ac41:   f7 7d a8                        	idiv dword ptr [ebp - 0x58]
0x804ac44:   89 d0                           	mov eax, edx
0x804ac46:   88 45 c7                        	mov byte ptr [ebp - 0x39], al
0x804ac49:   0f be 45 c7                     	movsx eax, byte ptr [ebp - 0x39]
0x804ac4d:   39 c3                           	cmp ebx, eax
0x804ac4f:   0f 9d c0                        	setge al
0x804ac52:   0f b6 c0                        	movzx eax, al
0x804ac55:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804ac58:   b8 01 00 00 00                  	mov eax, 1
0x804ac5d:   09 45 c8                        	or dword ptr [ebp - 0x38], eax
0x804ac60:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x804ac67:   0f b6 55 c6                     	movzx edx, byte ptr [ebp - 0x3a]
0x804ac6b:   0f be 4d c7                     	movsx ecx, byte ptr [ebp - 0x39]
0x804ac6f:   0f bf 75 ce                     	movsx esi, word ptr [ebp - 0x32]
0x804ac73:   0f bf 7d da                     	movsx edi, word ptr [ebp - 0x26]
0x804ac77:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x804ac7d:   0f be 5d 8f                     	movsx ebx, byte ptr [ebp - 0x71]
0x804ac81:   89 9d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ebx
0x804ac87:   0f bf 7d e6                     	movsx edi, word ptr [ebp - 0x1a]
0x804ac8b:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x804ac91:   0f be 5d e9                     	movsx ebx, byte ptr [ebp - 0x17]
0x804ac95:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x804ac9b:   0f b7 7d ea                     	movzx edi, word ptr [ebp - 0x16]
0x804ac9f:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804aca5:   0f b7 7d f0                     	movzx edi, word ptr [ebp - 0x10]
0x804aca9:   0f be 5d f3                     	movsx ebx, byte ptr [ebp - 0xd]
0x804acad:   50                              	push eax
0x804acae:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804acb1:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804acb7:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804acba:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804acbd:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804acc0:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804acc3:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804acc6:   52                              	push edx
0x804acc7:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804acca:   51                              	push ecx
0x804accb:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804acce:   56                              	push esi
0x804accf:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804acd2:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804acd5:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804acd8:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804acde:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804ace1:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804ace7:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804acea:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804acf0:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804acf6:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804acfc:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804acff:   57                              	push edi
0x804ad00:   53                              	push ebx
0x804ad01:   e8 20 e9 ff ff                  	call 0x8049626 <set_var>
0x804ad06:   83 c4 68                        	add esp, 0x68
0x804ad09:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804ad0c:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804ad0f:   5b                              	pop ebx
0x804ad10:   5e                              	pop esi
0x804ad11:   5f                              	pop edi
0x804ad12:   5d                              	pop ebp
0x804ad13:   c3                              	ret 
; function: main at 0x804ad14 -- 0x804b0a8
0x804ad14:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804ad18:   83 e4 f0                        	and esp, 0xfffffff0
0x804ad1b:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804ad1e:   55                              	push ebp
0x804ad1f:   89 e5                           	mov ebp, esp
0x804ad21:   53                              	push ebx
0x804ad22:   51                              	push ecx
0x804ad23:   83 ec 10                        	sub esp, 0x10
0x804ad26:   e8 65 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ad2b:   81 c3 d5 32 00 00               	add ebx, 0x32d5
0x804ad31:   89 c8                           	mov eax, ecx
0x804ad33:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804ad3a:   83 38 02                        	cmp dword ptr [eax], 2
0x804ad3d:   75 26                           	jne 0x804ad65 <main+0x51>
0x804ad3f:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804ad42:   83 c0 04                        	add eax, 4
0x804ad45:   8b 00                           	mov eax, dword ptr [eax]
0x804ad47:   83 ec 08                        	sub esp, 8
0x804ad4a:   8d 93 88 d1 ff ff               	lea edx, [ebx - 0x2e78]
0x804ad50:   52                              	push edx
0x804ad51:   50                              	push eax
0x804ad52:   e8 a9 d5 ff ff                  	call 0x8048300 <strcmp>
0x804ad57:   83 c4 10                        	add esp, 0x10
0x804ad5a:   85 c0                           	test eax, eax
0x804ad5c:   75 07                           	jne 0x804ad65 <main+0x51>
0x804ad5e:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804ad65:   e8 ec d6 ff ff                  	call 0x8048456 <platform_main_begin>
0x804ad6a:   e8 fc e6 ff ff                  	call 0x804946b <crc32_gentab>
0x804ad6f:   e8 48 ea ff ff                  	call 0x80497bc <func_1>
0x804ad74:   0f b6 83 24 00 00 00            	movzx eax, byte ptr [ebx + 0x24]
0x804ad7b:   0f be c0                        	movsx eax, al
0x804ad7e:   83 ec 04                        	sub esp, 4
0x804ad81:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad84:   8d 93 8a d1 ff ff               	lea edx, [ebx - 0x2e76]
0x804ad8a:   52                              	push edx
0x804ad8b:   50                              	push eax
0x804ad8c:   e8 e6 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad91:   83 c4 10                        	add esp, 0x10
0x804ad94:   0f b7 83 26 00 00 00            	movzx eax, word ptr [ebx + 0x26]
0x804ad9b:   0f b7 c0                        	movzx eax, ax
0x804ad9e:   83 ec 04                        	sub esp, 4
0x804ada1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ada4:   8d 93 8e d1 ff ff               	lea edx, [ebx - 0x2e72]
0x804adaa:   52                              	push edx
0x804adab:   50                              	push eax
0x804adac:   e8 c6 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adb1:   83 c4 10                        	add esp, 0x10
0x804adb4:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804adba:   89 c2                           	mov edx, eax
0x804adbc:   83 ec 04                        	sub esp, 4
0x804adbf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adc2:   8d 83 92 d1 ff ff               	lea eax, [ebx - 0x2e6e]
0x804adc8:   50                              	push eax
0x804adc9:   52                              	push edx
0x804adca:   e8 a8 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adcf:   83 c4 10                        	add esp, 0x10
0x804add2:   0f b7 83 2c 00 00 00            	movzx eax, word ptr [ebx + 0x2c]
0x804add9:   0f b7 c0                        	movzx eax, ax
0x804addc:   83 ec 04                        	sub esp, 4
0x804addf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ade2:   8d 93 97 d1 ff ff               	lea edx, [ebx - 0x2e69]
0x804ade8:   52                              	push edx
0x804ade9:   50                              	push eax
0x804adea:   e8 88 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adef:   83 c4 10                        	add esp, 0x10
0x804adf2:   0f b6 83 2e 00 00 00            	movzx eax, byte ptr [ebx + 0x2e]
0x804adf9:   0f be c0                        	movsx eax, al
0x804adfc:   83 ec 04                        	sub esp, 4
0x804adff:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae02:   8d 93 9c d1 ff ff               	lea edx, [ebx - 0x2e64]
0x804ae08:   52                              	push edx
0x804ae09:   50                              	push eax
0x804ae0a:   e8 68 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae0f:   83 c4 10                        	add esp, 0x10
0x804ae12:   0f b7 83 30 00 00 00            	movzx eax, word ptr [ebx + 0x30]
0x804ae19:   98                              	cwde 
0x804ae1a:   83 ec 04                        	sub esp, 4
0x804ae1d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae20:   8d 93 a1 d1 ff ff               	lea edx, [ebx - 0x2e5f]
0x804ae26:   52                              	push edx
0x804ae27:   50                              	push eax
0x804ae28:   e8 4a e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae2d:   83 c4 10                        	add esp, 0x10
0x804ae30:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804ae36:   83 ec 04                        	sub esp, 4
0x804ae39:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae3c:   8d 93 a6 d1 ff ff               	lea edx, [ebx - 0x2e5a]
0x804ae42:   52                              	push edx
0x804ae43:   50                              	push eax
0x804ae44:   e8 2e e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae49:   83 c4 10                        	add esp, 0x10
0x804ae4c:   0f b6 83 38 00 00 00            	movzx eax, byte ptr [ebx + 0x38]
0x804ae53:   0f be c0                        	movsx eax, al
0x804ae56:   83 ec 04                        	sub esp, 4
0x804ae59:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae5c:   8d 93 ab d1 ff ff               	lea edx, [ebx - 0x2e55]
0x804ae62:   52                              	push edx
0x804ae63:   50                              	push eax
0x804ae64:   e8 0e e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae69:   83 c4 10                        	add esp, 0x10
0x804ae6c:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804ae72:   83 ec 04                        	sub esp, 4
0x804ae75:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae78:   8d 93 b0 d1 ff ff               	lea edx, [ebx - 0x2e50]
0x804ae7e:   52                              	push edx
0x804ae7f:   50                              	push eax
0x804ae80:   e8 f2 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae85:   83 c4 10                        	add esp, 0x10
0x804ae88:   0f b7 83 40 00 00 00            	movzx eax, word ptr [ebx + 0x40]
0x804ae8f:   98                              	cwde 
0x804ae90:   83 ec 04                        	sub esp, 4
0x804ae93:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae96:   8d 93 b5 d1 ff ff               	lea edx, [ebx - 0x2e4b]
0x804ae9c:   52                              	push edx
0x804ae9d:   50                              	push eax
0x804ae9e:   e8 d4 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aea3:   83 c4 10                        	add esp, 0x10
0x804aea6:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804aeac:   83 ec 04                        	sub esp, 4
0x804aeaf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aeb2:   8d 93 ba d1 ff ff               	lea edx, [ebx - 0x2e46]
0x804aeb8:   52                              	push edx
0x804aeb9:   50                              	push eax
0x804aeba:   e8 b8 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aebf:   83 c4 10                        	add esp, 0x10
0x804aec2:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804aec8:   89 c2                           	mov edx, eax
0x804aeca:   83 ec 04                        	sub esp, 4
0x804aecd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aed0:   8d 83 c0 d1 ff ff               	lea eax, [ebx - 0x2e40]
0x804aed6:   50                              	push eax
0x804aed7:   52                              	push edx
0x804aed8:   e8 9a e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aedd:   83 c4 10                        	add esp, 0x10
0x804aee0:   8b 83 a4 04 00 00               	mov eax, dword ptr [ebx + 0x4a4]
0x804aee6:   83 ec 04                        	sub esp, 4
0x804aee9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aeec:   8d 93 c6 d1 ff ff               	lea edx, [ebx - 0x2e3a]
0x804aef2:   52                              	push edx
0x804aef3:   50                              	push eax
0x804aef4:   e8 7e e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aef9:   83 c4 10                        	add esp, 0x10
0x804aefc:   0f b7 83 4c 00 00 00            	movzx eax, word ptr [ebx + 0x4c]
0x804af03:   98                              	cwde 
0x804af04:   83 ec 04                        	sub esp, 4
0x804af07:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af0a:   8d 93 cc d1 ff ff               	lea edx, [ebx - 0x2e34]
0x804af10:   52                              	push edx
0x804af11:   50                              	push eax
0x804af12:   e8 60 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af17:   83 c4 10                        	add esp, 0x10
0x804af1a:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804af20:   89 c2                           	mov edx, eax
0x804af22:   83 ec 04                        	sub esp, 4
0x804af25:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af28:   8d 83 d2 d1 ff ff               	lea eax, [ebx - 0x2e2e]
0x804af2e:   50                              	push eax
0x804af2f:   52                              	push edx
0x804af30:   e8 42 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af35:   83 c4 10                        	add esp, 0x10
0x804af38:   0f b6 83 54 00 00 00            	movzx eax, byte ptr [ebx + 0x54]
0x804af3f:   0f be c0                        	movsx eax, al
0x804af42:   83 ec 04                        	sub esp, 4
0x804af45:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af48:   8d 93 d8 d1 ff ff               	lea edx, [ebx - 0x2e28]
0x804af4e:   52                              	push edx
0x804af4f:   50                              	push eax
0x804af50:   e8 22 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af55:   83 c4 10                        	add esp, 0x10
0x804af58:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804af5e:   89 c2                           	mov edx, eax
0x804af60:   83 ec 04                        	sub esp, 4
0x804af63:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af66:   8d 83 de d1 ff ff               	lea eax, [ebx - 0x2e22]
0x804af6c:   50                              	push eax
0x804af6d:   52                              	push edx
0x804af6e:   e8 04 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af73:   83 c4 10                        	add esp, 0x10
0x804af76:   0f b6 83 5c 00 00 00            	movzx eax, byte ptr [ebx + 0x5c]
0x804af7d:   0f b6 c0                        	movzx eax, al
0x804af80:   83 ec 04                        	sub esp, 4
0x804af83:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af86:   8d 93 e4 d1 ff ff               	lea edx, [ebx - 0x2e1c]
0x804af8c:   52                              	push edx
0x804af8d:   50                              	push eax
0x804af8e:   e8 e4 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af93:   83 c4 10                        	add esp, 0x10
0x804af96:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804af9c:   89 c2                           	mov edx, eax
0x804af9e:   83 ec 04                        	sub esp, 4
0x804afa1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afa4:   8d 83 ea d1 ff ff               	lea eax, [ebx - 0x2e16]
0x804afaa:   50                              	push eax
0x804afab:   52                              	push edx
0x804afac:   e8 c6 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afb1:   83 c4 10                        	add esp, 0x10
0x804afb4:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804afba:   89 c2                           	mov edx, eax
0x804afbc:   83 ec 04                        	sub esp, 4
0x804afbf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afc2:   8d 83 f0 d1 ff ff               	lea eax, [ebx - 0x2e10]
0x804afc8:   50                              	push eax
0x804afc9:   52                              	push edx
0x804afca:   e8 a8 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afcf:   83 c4 10                        	add esp, 0x10
0x804afd2:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804afd8:   83 ec 04                        	sub esp, 4
0x804afdb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afde:   8d 93 f6 d1 ff ff               	lea edx, [ebx - 0x2e0a]
0x804afe4:   52                              	push edx
0x804afe5:   50                              	push eax
0x804afe6:   e8 8c e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afeb:   83 c4 10                        	add esp, 0x10
0x804afee:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804aff4:   83 ec 04                        	sub esp, 4
0x804aff7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804affa:   8d 93 fc d1 ff ff               	lea edx, [ebx - 0x2e04]
0x804b000:   52                              	push edx
0x804b001:   50                              	push eax
0x804b002:   e8 70 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b007:   83 c4 10                        	add esp, 0x10
0x804b00a:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804b010:   89 c2                           	mov edx, eax
0x804b012:   83 ec 04                        	sub esp, 4
0x804b015:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b018:   8d 83 02 d2 ff ff               	lea eax, [ebx - 0x2dfe]
0x804b01e:   50                              	push eax
0x804b01f:   52                              	push edx
0x804b020:   e8 52 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b025:   83 c4 10                        	add esp, 0x10
0x804b028:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804b02e:   89 c2                           	mov edx, eax
0x804b030:   83 ec 04                        	sub esp, 4
0x804b033:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b036:   8d 83 08 d2 ff ff               	lea eax, [ebx - 0x2df8]
0x804b03c:   50                              	push eax
0x804b03d:   52                              	push edx
0x804b03e:   e8 34 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b043:   83 c4 10                        	add esp, 0x10
0x804b046:   8b 83 78 00 00 00               	mov eax, dword ptr [ebx + 0x78]
0x804b04c:   83 ec 04                        	sub esp, 4
0x804b04f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b052:   8d 93 0e d2 ff ff               	lea edx, [ebx - 0x2df2]
0x804b058:   52                              	push edx
0x804b059:   50                              	push eax
0x804b05a:   e8 18 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b05f:   83 c4 10                        	add esp, 0x10
0x804b062:   0f b7 83 7c 00 00 00            	movzx eax, word ptr [ebx + 0x7c]
0x804b069:   0f b7 c0                        	movzx eax, ax
0x804b06c:   83 ec 04                        	sub esp, 4
0x804b06f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b072:   8d 93 14 d2 ff ff               	lea edx, [ebx - 0x2dec]
0x804b078:   52                              	push edx
0x804b079:   50                              	push eax
0x804b07a:   e8 f8 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b07f:   83 c4 10                        	add esp, 0x10
0x804b082:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b088:   f7 d0                           	not eax
0x804b08a:   83 ec 08                        	sub esp, 8
0x804b08d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b090:   50                              	push eax
0x804b091:   e8 d0 d3 ff ff                  	call 0x8048466 <platform_main_end>
0x804b096:   83 c4 10                        	add esp, 0x10
0x804b099:   b8 00 00 00 00                  	mov eax, 0
0x804b09e:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b0a1:   59                              	pop ecx
0x804b0a2:   5b                              	pop ebx
0x804b0a3:   5d                              	pop ebp
0x804b0a4:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b0a7:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b0a8 -- 0x804b0ac
0x804b0a8:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b0ab:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b0ac -- 0x804b0b0
0x804b0ac:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b0af:   c3                              	ret 
; function: __libc_csu_init at 0x804b0b0 -- 0x804b10d
0x804b0b0:   55                              	push ebp
0x804b0b1:   57                              	push edi
0x804b0b2:   56                              	push esi
0x804b0b3:   53                              	push ebx
0x804b0b4:   e8 d7 d2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b0b9:   81 c3 47 2f 00 00               	add ebx, 0x2f47
0x804b0bf:   83 ec 0c                        	sub esp, 0xc
0x804b0c2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b0c6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b0cc:   e8 fb d1 ff ff                  	call 0x80482cc <_init>
0x804b0d1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b0d7:   29 c6                           	sub esi, eax
0x804b0d9:   c1 fe 02                        	sar esi, 2
0x804b0dc:   85 f6                           	test esi, esi
0x804b0de:   74 25                           	je 0x804b105 <__libc_csu_init+0x55>
0x804b0e0:   31 ff                           	xor edi, edi
0x804b0e2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b0e8:   83 ec 04                        	sub esp, 4
0x804b0eb:   55                              	push ebp
0x804b0ec:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b0f0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b0f4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b0fb:   83 c7 01                        	add edi, 1
0x804b0fe:   83 c4 10                        	add esp, 0x10
0x804b101:   39 fe                           	cmp esi, edi
0x804b103:   75 e3                           	jne 0x804b0e8 <__libc_csu_init+0x38>
0x804b105:   83 c4 0c                        	add esp, 0xc
0x804b108:   5b                              	pop ebx
0x804b109:   5e                              	pop esi
0x804b10a:   5f                              	pop edi
0x804b10b:   5d                              	pop ebp
0x804b10c:   c3                              	ret 
; data inside code section at 0x804b10d -- 0x804b110
0x804b10d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b110 -- 0x804b112
0x804b110:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b114 -- 0x804b128
0x804b114:   53                              	push ebx
0x804b115:   83 ec 08                        	sub esp, 8
0x804b118:   e8 73 d2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b11d:   81 c3 e3 2e 00 00               	add ebx, 0x2ee3
0x804b123:   83 c4 08                        	add esp, 8
0x804b126:   5b                              	pop ebx
0x804b127:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 2c b1 04 08  04 00 00 00 11 00 10 00   |....,...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b128:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b138:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b148:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b158:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b168:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b178:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b188:   31 00 67 5f 33 00 67 5f  36 00 67 5f 31 35 00 67   |1.g_3.g_6.g_15.g|
0x804b198:   5f 31 36 00 67 5f 31 39  00 67 5f 32 34 00 67 5f   |_16.g_19.g_24.g_|
0x804b1a8:   34 34 00 67 5f 36 33 00  67 5f 36 34 00 67 5f 39   |44.g_63.g_64.g_9|
0x804b1b8:   38 00 67 5f 31 31 34 00  67 5f 31 31 35 00 67 5f   |8.g_114.g_115.g_|
0x804b1c8:   31 31 36 00 67 5f 31 32  37 00 67 5f 31 33 30 00   |116.g_127.g_130.|
0x804b1d8:   67 5f 31 37 35 00 67 5f  31 39 31 00 67 5f 31 39   |g_175.g_191.g_19|
0x804b1e8:   32 00 67 5f 32 31 31 00  67 5f 32 36 36 00 67 5f   |2.g_211.g_266.g_|
0x804b1f8:   32 36 37 00 67 5f 32 37  31 00 67 5f 33 30 30 00   |267.g_271.g_300.|
0x804b208:   67 5f 33 31 31 00 67 5f  33 39 30 00 67 5f 34 31   |g_311.g_390.g_41|
0x804b218:   34 00 00 00 00 00 00 3f  ff ff ff 7e 00 00 80 0d   |4......?...~....|
0x804b228:   00 00 80 31 ff ff 7f 3f  00 00 00 27 00 00 80 71   |...1...?...'...q|
0x804b238:   ff ff ff 34 00 00 00 00  00 00 00 00 00 00 e0 3f   |...4...........?|
0x804b248:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804b258:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804b268:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804b278:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804b288:   01                                                 |.               |
; section: .eh_frame_hdr
0x804b288:   01 1b 03 3b b8 02 00 00  56 00 00 00 68 d0 ff ff   |...;....V...h...|
0x804b298:   e8 02 00 00 a8 d0 ff ff  0c 03 00 00 f8 d0 ff ff   |................|
0x804b2a8:   d4 02 00 00 ce d1 ff ff  20 03 00 00 de d1 ff ff   |........ .......|
0x804b2b8:   40 03 00 00 0c d2 ff ff  64 03 00 00 2a d2 ff ff   |@.......d...*...|
0x804b2c8:   84 03 00 00 52 d2 ff ff  a4 03 00 00 7c d2 ff ff   |....R.......|...|
0x804b2d8:   c4 03 00 00 a5 d2 ff ff  e4 03 00 00 e8 d2 ff ff   |................|
0x804b2e8:   04 04 00 00 29 d3 ff ff  24 04 00 00 81 d3 ff ff   |....)...$.......|
0x804b2f8:   48 04 00 00 d3 d3 ff ff  6c 04 00 00 10 d4 ff ff   |H.......l.......|
0x804b308:   8c 04 00 00 47 d4 ff ff  ac 04 00 00 66 d4 ff ff   |....G.......f...|
0x804b318:   cc 04 00 00 90 d4 ff ff  ec 04 00 00 bc d4 ff ff   |................|
0x804b328:   0c 05 00 00 e7 d4 ff ff  2c 05 00 00 30 d5 ff ff   |........,...0...|
0x804b338:   4c 05 00 00 77 d5 ff ff  6c 05 00 00 d1 d5 ff ff   |L...w...l.......|
0x804b348:   90 05 00 00 25 d6 ff ff  b4 05 00 00 64 d6 ff ff   |....%.......d...|
0x804b358:   d4 05 00 00 9d d6 ff ff  f4 05 00 00 bf d6 ff ff   |................|
0x804b368:   14 06 00 00 0d d7 ff ff  34 06 00 00 49 d7 ff ff   |........4...I...|
0x804b378:   54 06 00 00 d2 d7 ff ff  74 06 00 00 04 d8 ff ff   |T.......t.......|
0x804b388:   94 06 00 00 34 d8 ff ff  b4 06 00 00 79 d8 ff ff   |....4.......y...|
0x804b398:   d4 06 00 00 b8 d8 ff ff  f4 06 00 00 ea d8 ff ff   |................|
0x804b3a8:   14 07 00 00 16 d9 ff ff  34 07 00 00 34 d9 ff ff   |........4...4...|
0x804b3b8:   54 07 00 00 5c d9 ff ff  74 07 00 00 81 d9 ff ff   |T...\...t.......|
0x804b3c8:   94 07 00 00 a6 d9 ff ff  b4 07 00 00 dd d9 ff ff   |................|
0x804b3d8:   d4 07 00 00 11 da ff ff  f4 07 00 00 63 da ff ff   |............c...|
0x804b3e8:   18 08 00 00 af da ff ff  3c 08 00 00 e6 da ff ff   |........<.......|
0x804b3f8:   5c 08 00 00 17 db ff ff  7c 08 00 00 36 db ff ff   |\.......|...6...|
0x804b408:   9c 08 00 00 60 db ff ff  bc 08 00 00 88 db ff ff   |....`...........|
0x804b418:   dc 08 00 00 b1 db ff ff  fc 08 00 00 ed db ff ff   |................|
0x804b428:   1c 09 00 00 27 dc ff ff  3c 09 00 00 7a dc ff ff   |....'...<...z...|
0x804b438:   60 09 00 00 c7 dc ff ff  84 09 00 00 ff dc ff ff   |`...............|
0x804b448:   a4 09 00 00 31 dd ff ff  c4 09 00 00 45 dd ff ff   |....1.......E...|
0x804b458:   e4 09 00 00 5c dd ff ff  04 0a 00 00 71 dd ff ff   |....\.......q...|
0x804b468:   24 0a 00 00 87 dd ff ff  44 0a 00 00 ae dd ff ff   |$.......D.......|
0x804b478:   64 0a 00 00 d3 dd ff ff  84 0a 00 00 12 de ff ff   |d...............|
0x804b488:   a4 0a 00 00 4b de ff ff  c4 0a 00 00 77 de ff ff   |....K.......w...|
0x804b498:   e4 0a 00 00 9d de ff ff  04 0b 00 00 df de ff ff   |................|
0x804b4a8:   24 0b 00 00 21 df ff ff  44 0b 00 00 63 df ff ff   |$...!...D...c...|
0x804b4b8:   64 0b 00 00 d8 df ff ff  84 0b 00 00 35 e0 ff ff   |d...........5...|
0x804b4c8:   a4 0b 00 00 92 e0 ff ff  c4 0b 00 00 ef e0 ff ff   |................|
0x804b4d8:   e4 0b 00 00 7f e1 ff ff  04 0c 00 00 e3 e1 ff ff   |................|
0x804b4e8:   24 0c 00 00 53 e2 ff ff  44 0c 00 00 9a e2 ff ff   |$...S...D.......|
0x804b4f8:   68 0c 00 00 ef e2 ff ff  88 0c 00 00 36 e3 ff ff   |h...........6...|
0x804b508:   ac 0c 00 00 9e e3 ff ff  d0 0c 00 00 34 e5 ff ff   |............4...|
0x804b518:   00 0d 00 00 8c fa ff ff  30 0d 00 00 20 fe ff ff   |........0... ...|
0x804b528:   68 0d 00 00 24 fe ff ff  7c 0d 00 00 28 fe ff ff   |h...$...|...(...|
0x804b538:   90 0d 00 00 88 fe ff ff  dc 0d 00 00 14            |.............   |
; section: .eh_frame
0x804b544:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b554:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b564:   1c ce ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b574:   30 00 00 00 78 cd ff ff  40 00 00 00 00 0e 08 46   |0...x...@......F|
0x804b584:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b594:   10 00 00 00 54 00 00 00  94 cd ff ff 08 00 00 00   |....T...........|
0x804b5a4:   00 00 00 00 1c 00 00 00  68 00 00 00 a6 ce ff ff   |........h.......|
0x804b5b4:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b5c4:   04 04 00 00 20 00 00 00  88 00 00 00 96 ce ff ff   |.... ...........|
0x804b5d4:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b5e4:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b5f4:   a0 ce ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b604:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b614:   9e ce ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b624:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b634:   a6 ce ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b644:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b654:   b0 ce ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b664:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b674:   b9 ce ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b684:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b694:   dc ce ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b6a4:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b6b4:   fd ce ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b6c4:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b6d4:   90 01 00 00 31 cf ff ff  52 00 00 00 00 41 0e 08   |....1...R....A..|
0x804b6e4:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b6f4:   1c 00 00 00 b4 01 00 00  5f cf ff ff 3d 00 00 00   |........_...=...|
0x804b704:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b714:   1c 00 00 00 d4 01 00 00  7c cf ff ff 37 00 00 00   |........|...7...|
0x804b724:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b734:   1c 00 00 00 f4 01 00 00  93 cf ff ff 1f 00 00 00   |................|
0x804b744:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b754:   1c 00 00 00 14 02 00 00  92 cf ff ff 2a 00 00 00   |............*...|
0x804b764:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b774:   1c 00 00 00 34 02 00 00  9c cf ff ff 2c 00 00 00   |....4.......,...|
0x804b784:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b794:   1c 00 00 00 54 02 00 00  a8 cf ff ff 2b 00 00 00   |....T.......+...|
0x804b7a4:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b7b4:   1c 00 00 00 74 02 00 00  b3 cf ff ff 49 00 00 00   |....t.......I...|
0x804b7c4:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b7d4:   1c 00 00 00 94 02 00 00  dc cf ff ff 47 00 00 00   |............G...|
0x804b7e4:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b7f4:   20 00 00 00 b4 02 00 00  03 d0 ff ff 5a 00 00 00   | ...........Z...|
0x804b804:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b814:   c5 0c 04 04 20 00 00 00  d8 02 00 00 39 d0 ff ff   |.... .......9...|
0x804b824:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b834:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b844:   69 d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |i...?....A....B.|
0x804b854:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b864:   88 d0 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b874:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b884:   a1 d0 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b894:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b8a4:   a3 d0 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b8b4:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b8c4:   d1 d0 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b8d4:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b8e4:   ed d0 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b8f4:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b904:   56 d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |V...2....A....B.|
0x804b914:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b924:   68 d1 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |h...0....A....B.|
0x804b934:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b944:   78 d1 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |x...E....A....B.|
0x804b954:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b964:   9d d1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b974:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b984:   bc d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b994:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b9a4:   ce d1 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b9b4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b9c4:   da d1 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b9d4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b9e4:   d8 d1 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b9f4:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804ba04:   e0 d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ba14:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804ba24:   e5 d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ba34:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804ba44:   ea d1 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804ba54:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804ba64:   01 d2 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804ba74:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804ba84:   15 d2 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804ba94:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804baa4:   60 05 00 00 43 d2 ff ff  4c 00 00 00 00 41 0e 08   |`...C...L....A..|
0x804bab4:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804bac4:   1c 00 00 00 84 05 00 00  6b d2 ff ff 37 00 00 00   |........k...7...|
0x804bad4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bae4:   1c 00 00 00 a4 05 00 00  82 d2 ff ff 31 00 00 00   |............1...|
0x804baf4:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bb04:   1c 00 00 00 c4 05 00 00  93 d2 ff ff 1f 00 00 00   |................|
0x804bb14:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bb24:   1c 00 00 00 e4 05 00 00  92 d2 ff ff 2a 00 00 00   |............*...|
0x804bb34:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bb44:   1c 00 00 00 04 06 00 00  9c d2 ff ff 28 00 00 00   |............(...|
0x804bb54:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bb64:   1c 00 00 00 24 06 00 00  a4 d2 ff ff 29 00 00 00   |....$.......)...|
0x804bb74:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bb84:   1c 00 00 00 44 06 00 00  ad d2 ff ff 3c 00 00 00   |....D.......<...|
0x804bb94:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bba4:   1c 00 00 00 64 06 00 00  c9 d2 ff ff 3a 00 00 00   |....d.......:...|
0x804bbb4:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bbc4:   20 00 00 00 84 06 00 00  e3 d2 ff ff 53 00 00 00   | ...........S...|
0x804bbd4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bbe4:   c5 0c 04 04 20 00 00 00  a8 06 00 00 12 d3 ff ff   |.... ...........|
0x804bbf4:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bc04:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bc14:   3b d3 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |;...8....A....B.|
0x804bc24:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bc34:   53 d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |S...2....A....B.|
0x804bc44:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bc54:   65 d3 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |e........A....B.|
0x804bc64:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bc74:   59 d3 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |Y........A....B.|
0x804bc84:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bc94:   50 d3 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |P........A....B.|
0x804bca4:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bcb4:   45 d3 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |E........A....B.|
0x804bcc4:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bcd4:   3b d3 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |;...'....A....B.|
0x804bce4:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bcf4:   42 d3 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |B...%....A....B.|
0x804bd04:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bd14:   47 d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |G...?....A....B.|
0x804bd24:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bd34:   66 d3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |f...9....A....B.|
0x804bd44:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bd54:   7f d3 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bd64:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bd74:   8b d3 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804bd84:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bd94:   91 d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bda4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bdb4:   b3 d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bdc4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bdd4:   d5 d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bde4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bdf4:   f7 d3 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804be04:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804be14:   4c d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |L...]....A....B.|
0x804be24:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804be34:   89 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804be44:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804be54:   c6 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804be64:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804be74:   03 d5 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804be84:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804be94:   73 d5 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |s...d....A....B.|
0x804bea4:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804beb4:   b7 d5 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804bec4:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bed4:   07 d6 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804bee4:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bef4:   b0 09 00 00 2a d6 ff ff  55 00 00 00 00 41 0e 08   |....*...U....A..|
0x804bf04:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bf14:   d0 09 00 00 5f d6 ff ff  47 00 00 00 00 41 0e 08   |...._...G....A..|
0x804bf24:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bf34:   20 00 00 00 f4 09 00 00  82 d6 ff ff 68 00 00 00   | ...........h...|
0x804bf44:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bf54:   0c 04 04 00 2c 00 00 00  18 0a 00 00 c6 d6 ff ff   |....,...........|
0x804bf64:   96 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804bf74:   86 04 83 05 03 89 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bf84:   04 00 00 00 2c 00 00 00  48 0a 00 00 2c d8 ff ff   |....,...H...,...|
0x804bf94:   58 15 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |X....A....B..I..|
0x804bfa4:   86 04 83 05 03 48 15 c3  41 c6 41 c7 41 c5 0c 04   |.....H..A.A.A...|
0x804bfb4:   04 00 00 00 34 00 00 00  78 0a 00 00 54 ed ff ff   |....4...x...T...|
0x804bfc4:   94 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804bfd4:   0f 03 75 78 06 10 03 02  75 7c 03 7f 03 c1 0c 01   |..ux....u|......|
0x804bfe4:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bff4:   b0 0a 00 00 b0 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804c004:   10 00 00 00 c4 0a 00 00  a0 f0 ff ff 04 00 00 00   |................|
0x804c014:   00 00 00 00 48 00 00 00  d8 0a 00 00 90 f0 ff ff   |....H...........|
0x804c024:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c034:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c044:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c054:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c064:   10 00 00 00 24 0b 00 00  a4 f0 ff ff 02 00 00 00   |....$...........|
0x804c074:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 14 b1 04 08  19 00 00 00 0c df 04 08   |................|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 6d 00 36 18   |............m.6.|
0x804e028:   a8 2d fc 61 bc a7 fd 00  92 be 00 00 38 52 04 a4   |.-.a........8R..|
0x804e038:   01 00 00 00 ae 61 23 ae  bb 22 00 00 af 0d 0d 8e   |.....a#.."......|
0x804e048:   d6 0e 4c e6 09 00 00 00  59 54 8a c5 ff 00 00 00   |..L.....YT......|
0x804e058:   91 01 77 eb 03 00 00 00  06 00 00 00 e1 6f 8c 5a   |..w..........o.Z|
0x804e068:   ff ff ff ff 01 00 00 00  ff ff ff ff fa ff ff ff   |................|
0x804e078:   fc ff ff ff ff ec ??                               |......?         |
