;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 10:00:45
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 d0 de ff ff               	lea eax, [ebx - 0x2130]
0x804835c:   50                              	push eax
0x804835d:   8d 83 70 de ff ff               	lea eax, [ebx - 0x2190]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 59 aa 04 08               	mov eax, 0x804aa59
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 80 d0 04 08                  	mov eax, 0x804d080
0x80483a5:   3d 80 d0 04 08                  	cmp eax, 0x804d080
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 80 d0 04 08                  	push 0x804d080
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 80 d0 04 08                  	mov eax, 0x804d080
0x80483e5:   2d 80 d0 04 08                  	sub eax, 0x804d080
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 80 d0 04 08                  	push 0x804d080
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 09 2a 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 f5 29 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 f0 de ff ff               	lea edx, [eax - 0x2110]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 c8 29 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 aa 29 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 82 29 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 58 29 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 2f 29 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 ec 28 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 aa 28 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 52 28 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 01 28 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 c4 27 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 8d 27 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 6e 27 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 44 27 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 18 27 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 ed 26 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 a4 26 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 5c 26 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 02 26 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 af 25 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 70 25 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 3a 25 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 18 25 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 ca 24 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 8e 24 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 05 24 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 d3 23 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 a3 23 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 5e 23 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 1f 23 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 ed 22 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 be 22 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 a0 22 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 78 22 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 53 22 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 2e 22 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 f7 21 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 c2 21 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 70 21 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 25 21 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 ee 20 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 bd 20 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 9e 20 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 74 20 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 4c 20 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 23 20 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 e7 1f 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 ac 1f 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 59 1f 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 0d 1f 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 d5 1e 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 a6 1e 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 92 1e 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 7b 1e 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 66 1e 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 50 1e 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 29 1e 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 04 1e 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 c5 1d 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 8c 1d 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 60 1d 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 3a 1d 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 f8 df ff ff               	fld dword ptr [eax - 0x2008]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 f8 df ff ff               	fld dword ptr [eax - 0x2008]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 fc df ff ff               	fld dword ptr [eax - 0x2004]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 f8 1c 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 f8 df ff ff               	fld dword ptr [eax - 0x2008]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 f8 df ff ff               	fld dword ptr [eax - 0x2008]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 fc df ff ff               	fld dword ptr [eax - 0x2004]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 b6 1c 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 00 e0 ff ff               	fld dword ptr [eax - 0x2000]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 04 e0 ff ff               	fld dword ptr [eax - 0x1ffc]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 08 e0 ff ff               	fld dword ptr [eax - 0x1ff8]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 74 1c 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 0c e0 ff ff               	fld dword ptr [eax - 0x1ff4]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 10 e0 ff ff               	fld dword ptr [eax - 0x1ff0]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 14 e0 ff ff               	fld dword ptr [eax - 0x1fec]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 fc 1b 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 18 e0 ff ff               	fld qword ptr [eax - 0x1fe8]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 18 e0 ff ff               	fld qword ptr [eax - 0x1fe8]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 20 e0 ff ff               	fld qword ptr [eax - 0x1fe0]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 9f 1b 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 18 e0 ff ff               	fld qword ptr [eax - 0x1fe8]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 18 e0 ff ff               	fld qword ptr [eax - 0x1fe8]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 20 e0 ff ff               	fld qword ptr [eax - 0x1fe0]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 42 1b 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 28 e0 ff ff               	fld qword ptr [eax - 0x1fd8]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 30 e0 ff ff               	fld qword ptr [eax - 0x1fd0]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 38 e0 ff ff               	fld qword ptr [eax - 0x1fc8]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 e5 1a 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 40 e0 ff ff               	fld qword ptr [eax - 0x1fc0]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 48 e0 ff ff               	fld qword ptr [eax - 0x1fb8]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 50 e0 ff ff               	fld qword ptr [eax - 0x1fb0]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 55 1a 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 58 e0 ff ff               	fld dword ptr [eax - 0x1fa8]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 5c e0 ff ff               	fld dword ptr [eax - 0x1fa4]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 f1 19 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 80 19 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 3d 19 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 00 df ff ff               	lea eax, [ebx - 0x2100]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 24 df ff ff               	lea eax, [ebx - 0x20dc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: packed_printf at 0x8049626 -- 0x8049654
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   53                              	push ebx
0x804962a:   83 ec 04                        	sub esp, 4
0x804962d:   e8 35 18 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8049632:   05 ce 39 00 00                  	add eax, 0x39ce
0x8049637:   83 ec 08                        	sub esp, 8
0x804963a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804963d:   8d 90 48 df ff ff               	lea edx, [eax - 0x20b8]
0x8049643:   52                              	push edx
0x8049644:   89 c3                           	mov ebx, eax
0x8049646:   e8 c5 ec ff ff                  	call 0x8048310 <printf>
0x804964b:   83 c4 10                        	add esp, 0x10
0x804964e:   90                              	nop 
0x804964f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049652:   c9                              	leave 
0x8049653:   c3                              	ret 
; function: set_var at 0x8049654 -- 0x8049843
0x8049654:   55                              	push ebp
0x8049655:   89 e5                           	mov ebp, esp
0x8049657:   57                              	push edi
0x8049658:   56                              	push esi
0x8049659:   53                              	push ebx
0x804965a:   83 ec 60                        	sub esp, 0x60
0x804965d:   e8 09 18 00 00                  	call 0x804ae6b <__x86.get_pc_thunk.dx>
0x8049662:   81 c2 9e 39 00 00               	add edx, 0x399e
0x8049668:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804966b:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804966e:   8b 4d 10                        	mov ecx, dword ptr [ebp + 0x10]
0x8049671:   8b 5d 18                        	mov ebx, dword ptr [ebp + 0x18]
0x8049674:   8b 75 20                        	mov esi, dword ptr [ebp + 0x20]
0x8049677:   8b 7d 24                        	mov edi, dword ptr [ebp + 0x24]
0x804967a:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x804967d:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049680:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x8049683:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049686:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x8049689:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804968c:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x804968f:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049692:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049695:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049698:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x804969b:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804969e:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x80496a1:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x80496a4:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x80496a7:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x80496aa:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x80496ad:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x80496b0:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x80496b4:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x80496b8:   89 c8                           	mov eax, ecx
0x80496ba:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x80496be:   89 d8                           	mov eax, ebx
0x80496c0:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x80496c4:   89 f0                           	mov eax, esi
0x80496c6:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496c9:   89 f8                           	mov eax, edi
0x80496cb:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x80496cf:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x80496d3:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496d7:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x80496db:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x80496de:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x80496e2:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496e5:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496e9:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496ed:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x80496f1:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496f4:   0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x80496f8:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496fb:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x80496ff:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x8049703:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x8049707:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x804970b:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x804970f:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x8049712:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x8049716:   66 89 82 24 00 00 00            	mov word ptr [edx + 0x24], ax
0x804971d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049720:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x8049726:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x804972a:   66 89 82 a4 04 00 00            	mov word ptr [edx + 0x4a4], ax
0x8049731:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x8049734:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x804973a:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x804973e:   66 89 82 30 00 00 00            	mov word ptr [edx + 0x30], ax
0x8049745:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x8049748:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x804974e:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x8049752:   88 82 38 00 00 00               	mov byte ptr [edx + 0x38], al
0x8049758:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x804975c:   66 89 82 3a 00 00 00            	mov word ptr [edx + 0x3a], ax
0x8049763:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x8049766:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x804976c:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049770:   66 89 82 40 00 00 00            	mov word ptr [edx + 0x40], ax
0x8049777:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x804977a:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x8049780:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x8049783:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x8049789:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x804978c:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x8049792:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x8049796:   88 82 50 00 00 00               	mov byte ptr [edx + 0x50], al
0x804979c:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x80497a0:   88 82 51 00 00 00               	mov byte ptr [edx + 0x51], al
0x80497a6:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x80497a9:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x80497af:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x80497b2:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x80497b8:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x80497bc:   66 89 82 5c 00 00 00            	mov word ptr [edx + 0x5c], ax
0x80497c3:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x80497c6:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x80497cc:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x80497d0:   88 82 64 00 00 00               	mov byte ptr [edx + 0x64], al
0x80497d6:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x80497d9:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x80497df:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x80497e2:   89 82 6c 00 00 00               	mov dword ptr [edx + 0x6c], eax
0x80497e8:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497ec:   88 82 70 00 00 00               	mov byte ptr [edx + 0x70], al
0x80497f2:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x80497f5:   89 82 a8 04 00 00               	mov dword ptr [edx + 0x4a8], eax
0x80497fb:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80497ff:   66 89 82 ac 04 00 00            	mov word ptr [edx + 0x4ac], ax
0x8049806:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804980a:   66 89 82 72 00 00 00            	mov word ptr [edx + 0x72], ax
0x8049811:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x8049815:   88 82 74 00 00 00               	mov byte ptr [edx + 0x74], al
0x804981b:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x804981e:   89 82 78 00 00 00               	mov dword ptr [edx + 0x78], eax
0x8049824:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x8049827:   89 82 b0 04 00 00               	mov dword ptr [edx + 0x4b0], eax
0x804982d:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x8049830:   89 82 7c 00 00 00               	mov dword ptr [edx + 0x7c], eax
0x8049836:   b8 00 00 00 00                  	mov eax, 0
0x804983b:   83 c4 60                        	add esp, 0x60
0x804983e:   5b                              	pop ebx
0x804983f:   5e                              	pop esi
0x8049840:   5f                              	pop edi
0x8049841:   5d                              	pop ebp
0x8049842:   c3                              	ret 
; function: func_1 at 0x8049843 -- 0x804aa59
0x8049843:   55                              	push ebp
0x8049844:   89 e5                           	mov ebp, esp
0x8049846:   57                              	push edi
0x8049847:   56                              	push esi
0x8049848:   53                              	push ebx
0x8049849:   81 ec 60 01 00 00               	sub esp, 0x160
0x804984f:   e8 13 16 00 00                  	call 0x804ae67 <__x86.get_pc_thunk.ax>
0x8049854:   05 ac 37 00 00                  	add eax, 0x37ac
0x8049859:   66 c7 85 72 ff ff ff fe ff      	mov word ptr [ebp - 0x8e], 0xfffe
0x8049862:   c7 85 6c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x94], 1
0x804986c:   66 c7 45 f2 00 00               	mov word ptr [ebp - 0xe], 0
0x8049872:   c7 45 ec 01 00 00 00            	mov dword ptr [ebp - 0x14], 1
0x8049879:   66 c7 45 ea ff ff               	mov word ptr [ebp - 0x16], 0xffff
0x804987f:   c7 85 68 ff ff ff 5c c3 fb 7b   	mov dword ptr [ebp - 0x98], 0x7bfbc35c
0x8049889:   c6 45 e9 4b                     	mov byte ptr [ebp - 0x17], 0x4b
0x804988d:   66 c7 45 e6 b6 a1               	mov word ptr [ebp - 0x1a], 0xa1b6
0x8049893:   c7 45 e0 03 00 00 00            	mov dword ptr [ebp - 0x20], 3
0x804989a:   66 c7 45 de ff ff               	mov word ptr [ebp - 0x22], 0xffff
0x80498a0:   c7 45 d8 06 00 00 00            	mov dword ptr [ebp - 0x28], 6
0x80498a7:   c7 45 d4 f9 ff ff ff            	mov dword ptr [ebp - 0x2c], 0xfffffff9
0x80498ae:   c7 85 64 ff ff ff 07 00 00 00   	mov dword ptr [ebp - 0x9c], 7
0x80498b8:   c6 45 d3 db                     	mov byte ptr [ebp - 0x2d], 0xdb
0x80498bc:   c6 45 d2 08                     	mov byte ptr [ebp - 0x2e], 8
0x80498c0:   c7 85 60 ff ff ff 59 ec 82 9f   	mov dword ptr [ebp - 0xa0], 0x9f82ec59
0x80498ca:   c7 85 5c ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0xa4], 0xfffffffa
0x80498d4:   66 c7 85 5a ff ff ff fa ff      	mov word ptr [ebp - 0xa6], 0xfffa
0x80498dd:   c7 45 cc fd ff ff ff            	mov dword ptr [ebp - 0x34], 0xfffffffd
0x80498e4:   c6 85 59 ff ff ff 37            	mov byte ptr [ebp - 0xa7], 0x37
0x80498eb:   c7 45 c8 d4 c4 c8 b6            	mov dword ptr [ebp - 0x38], 0xb6c8c4d4
0x80498f2:   c7 45 c4 25 47 21 7c            	mov dword ptr [ebp - 0x3c], 0x7c214725
0x80498f9:   c6 45 c3 ff                     	mov byte ptr [ebp - 0x3d], 0xff
0x80498fd:   c7 45 bc 00 00 00 00            	mov dword ptr [ebp - 0x44], 0
0x8049904:   66 c7 45 ba 00 00               	mov word ptr [ebp - 0x46], 0
0x804990a:   66 c7 45 b8 ff ff               	mov word ptr [ebp - 0x48], 0xffff
0x8049910:   c6 45 b7 41                     	mov byte ptr [ebp - 0x49], 0x41
0x8049914:   c7 85 54 ff ff ff e0 f1 37 51   	mov dword ptr [ebp - 0xac], 0x5137f1e0
0x804991e:   c7 45 b0 00 00 00 00            	mov dword ptr [ebp - 0x50], 0
0x8049925:   c7 45 ac 01 00 00 00            	mov dword ptr [ebp - 0x54], 1
0x804992c:   c7 45 a8 fa ff ff ff            	mov dword ptr [ebp - 0x58], 0xfffffffa
0x8049933:   c7 45 a4 67 10 3b b1            	mov dword ptr [ebp - 0x5c], 0xb13b1067
0x804993a:   c7 85 50 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0xb0], 0xfffffffe
0x8049944:   c7 85 4c ff ff ff 03 00 00 00   	mov dword ptr [ebp - 0xb4], 3
0x804994e:   66 c7 85 4a ff ff ff ff ff      	mov word ptr [ebp - 0xb6], 0xffff
0x8049957:   c7 85 44 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xbc], 0
0x8049961:   c7 85 40 ff ff ff 5c fd 2e 81   	mov dword ptr [ebp - 0xc0], 0x812efd5c
0x804996b:   c7 85 3c ff ff ff 83 1d 1c b8   	mov dword ptr [ebp - 0xc4], 0xb81c1d83
0x8049975:   c7 85 38 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xc8], 0xffffffff
0x804997f:   c6 85 37 ff ff ff 27            	mov byte ptr [ebp - 0xc9], 0x27
0x8049986:   c6 85 36 ff ff ff 4b            	mov byte ptr [ebp - 0xca], 0x4b
0x804998d:   0f b7 85 72 ff ff ff            	movzx eax, word ptr [ebp - 0x8e]
0x8049994:   8b 5d a8                        	mov ebx, dword ptr [ebp - 0x58]
0x8049997:   99                              	cdq 
0x8049998:   f7 fb                           	idiv ebx
0x804999a:   0f b6 c0                        	movzx eax, al
0x804999d:   0f b7 8d 72 ff ff ff            	movzx ecx, word ptr [ebp - 0x8e]
0x80499a4:   99                              	cdq 
0x80499a5:   f7 f9                           	idiv ecx
0x80499a7:   89 d0                           	mov eax, edx
0x80499a9:   89 c2                           	mov edx, eax
0x80499ab:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x80499ae:   01 d0                           	add eax, edx
0x80499b0:   21 85 6c ff ff ff               	and dword ptr [ebp - 0x94], eax
0x80499b6:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x80499bc:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x80499c0:   c7 45 a8 fc ff ff ff            	mov dword ptr [ebp - 0x58], 0xfffffffc
0x80499c7:   e9 89 00 00 00                  	jmp 0x8049a55 <func_1+0x212>
0x80499cc:   c7 85 bc fe ff ff 07 00 00 00   	mov dword ptr [ebp - 0x144], 7
0x80499d6:   c7 85 b8 fe ff ff fa ff ff ff   	mov dword ptr [ebp - 0x148], 0xfffffffa
0x80499e0:   c6 85 b7 fe ff ff 1c            	mov byte ptr [ebp - 0x149], 0x1c
0x80499e7:   83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x80499eb:   0f b7 85 72 ff ff ff            	movzx eax, word ptr [ebp - 0x8e]
0x80499f2:   89 85 bc fe ff ff               	mov dword ptr [ebp - 0x144], eax
0x80499f8:   83 bd b8 fe ff ff 04            	cmp dword ptr [ebp - 0x148], 4
0x80499ff:   0f 94 c0                        	sete al
0x8049a02:   0f b6 c0                        	movzx eax, al
0x8049a05:   39 85 b8 fe ff ff               	cmp dword ptr [ebp - 0x148], eax
0x8049a0b:   0f 9e c0                        	setle al
0x8049a0e:   0f b6 c0                        	movzx eax, al
0x8049a11:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049a14:   0f 94 c0                        	sete al
0x8049a17:   0f b6 c0                        	movzx eax, al
0x8049a1a:   39 85 b8 fe ff ff               	cmp dword ptr [ebp - 0x148], eax
0x8049a20:   0f 95 c0                        	setne al
0x8049a23:   0f b6 c0                        	movzx eax, al
0x8049a26:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x8049a2a:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049a2e:   0f bf d0                        	movsx edx, ax
0x8049a31:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049a35:   98                              	cwde 
0x8049a36:   01 d0                           	add eax, edx
0x8049a38:   33 85 bc fe ff ff               	xor eax, dword ptr [ebp - 0x144]
0x8049a3e:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x8049a44:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049a4a:   98                              	cwde 
0x8049a4b:   c1 e0 06                        	shl eax, 6
0x8049a4e:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049a51:   83 45 a8 08                     	add dword ptr [ebp - 0x58], 8
0x8049a55:   83 7d a8 39                     	cmp dword ptr [ebp - 0x58], 0x39
0x8049a59:   0f 86 6d ff ff ff               	jbe 0x80499cc <func_1+0x189>
0x8049a5f:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x8049a65:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x8049a6b:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049a71:   0f b7 c0                        	movzx eax, ax
0x8049a74:   d1 f8                           	sar eax, 1
0x8049a76:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049a79:   0f 83 33 0a 00 00               	jae 0x804a4b2 <func_1+0xc6f>
0x8049a7f:   c7 45 a0 ff ff ff ff            	mov dword ptr [ebp - 0x60], 0xffffffff
0x8049a86:   c7 45 9c fd ff ff ff            	mov dword ptr [ebp - 0x64], 0xfffffffd
0x8049a8d:   c7 45 98 76 82 31 f4            	mov dword ptr [ebp - 0x68], 0xf4318276
0x8049a94:   c7 45 94 ff ff ff ff            	mov dword ptr [ebp - 0x6c], 0xffffffff
0x8049a9b:   c7 45 90 7c 50 3c 3b            	mov dword ptr [ebp - 0x70], 0x3b3c507c
0x8049aa2:   c7 85 18 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xe8], 0xffffffff
0x8049aac:   c7 85 14 ff ff ff 2b 1e 67 00   	mov dword ptr [ebp - 0xec], 0x671e2b
0x8049ab6:   c6 85 13 ff ff ff 4f            	mov byte ptr [ebp - 0xed], 0x4f
0x8049abd:   66 c7 45 8e fc ff               	mov word ptr [ebp - 0x72], 0xfffc
0x8049ac3:   c6 85 12 ff ff ff 01            	mov byte ptr [ebp - 0xee], 1
0x8049aca:   c7 85 0c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xf4], 1
0x8049ad4:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049ad8:   39 45 a0                        	cmp dword ptr [ebp - 0x60], eax
0x8049adb:   0f 87 2b 03 00 00               	ja 0x8049e0c <func_1+0x5c9>
0x8049ae1:   c7 85 fc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x104], 0
0x8049aeb:   c6 85 fb fe ff ff fe            	mov byte ptr [ebp - 0x105], 0xfe
0x8049af2:   c7 85 f4 fe ff ff f9 ff ff ff   	mov dword ptr [ebp - 0x10c], 0xfffffff9
0x8049afc:   c7 85 f0 fe ff ff c5 6b 98 9b   	mov dword ptr [ebp - 0x110], 0x9b986bc5
0x8049b06:   0f b7 4d f2                     	movzx ecx, word ptr [ebp - 0xe]
0x8049b0a:   c6 45 e9 04                     	mov byte ptr [ebp - 0x17], 4
0x8049b0e:   81 bd 50 ff ff ff 62 ff ff ff   	cmp dword ptr [ebp - 0xb0], 0xffffff62
0x8049b18:   0f 97 c0                        	seta al
0x8049b1b:   0f b6 c0                        	movzx eax, al
0x8049b1e:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049b21:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049b24:   25 dc 00 00 00                  	and eax, 0xdc
0x8049b29:   8b 5d a8                        	mov ebx, dword ptr [ebp - 0x58]
0x8049b2c:   99                              	cdq 
0x8049b2d:   f7 fb                           	idiv ebx
0x8049b2f:   89 d0                           	mov eax, edx
0x8049b31:   39 c1                           	cmp ecx, eax
0x8049b33:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049b36:   0f b7 d8                        	movzx ebx, ax
0x8049b39:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x8049b3f:   66 0d 4e a2                     	or ax, 0xa24e
0x8049b43:   0f bf d0                        	movsx edx, ax
0x8049b46:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049b4a:   98                              	cwde 
0x8049b4b:   0f af d0                        	imul edx, eax
0x8049b4e:   0f b7 85 72 ff ff ff            	movzx eax, word ptr [ebp - 0x8e]
0x8049b55:   09 d0                           	or eax, edx
0x8049b57:   ba 00 00 00 00                  	mov edx, 0
0x8049b5c:   f7 75 a0                        	div dword ptr [ebp - 0x60]
0x8049b5f:   98                              	cwde 
0x8049b60:   8b 55 a8                        	mov edx, dword ptr [ebp - 0x58]
0x8049b63:   0f bf ca                        	movsx ecx, dx
0x8049b66:   99                              	cdq 
0x8049b67:   f7 f9                           	idiv ecx
0x8049b69:   89 d0                           	mov eax, edx
0x8049b6b:   0f b7 c0                        	movzx eax, ax
0x8049b6e:   89 c1                           	mov ecx, eax
0x8049b70:   d3 e3                           	shl ebx, cl
0x8049b72:   89 d8                           	mov eax, ebx
0x8049b74:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049b77:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x8049b7b:   0f b7 95 72 ff ff ff            	movzx edx, word ptr [ebp - 0x8e]
0x8049b82:   8b 4d a0                        	mov ecx, dword ptr [ebp - 0x60]
0x8049b85:   29 d1                           	sub ecx, edx
0x8049b87:   89 ca                           	mov edx, ecx
0x8049b89:   39 d0                           	cmp eax, edx
0x8049b8b:   0f 96 c0                        	setbe al
0x8049b8e:   0f b6 c0                        	movzx eax, al
0x8049b91:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x8049b95:   66 83 7d ea 00                  	cmp word ptr [ebp - 0x16], 0
0x8049b9a:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x8049b9e:   8b 85 fc fe ff ff               	mov eax, dword ptr [ebp - 0x104]
0x8049ba4:   ba 00 00 00 00                  	mov edx, 0
0x8049ba9:   f7 f1                           	div ecx
0x8049bab:   89 d0                           	mov eax, edx
0x8049bad:   66 31 45 f2                     	xor word ptr [ebp - 0xe], ax
0x8049bb1:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049bb5:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x8049bb9:   66 83 7d ea 00                  	cmp word ptr [ebp - 0x16], 0
0x8049bbe:   0f 95 c0                        	setne al
0x8049bc1:   0f b6 c0                        	movzx eax, al
0x8049bc4:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x8049bca:   c6 85 ef fe ff ff f7            	mov byte ptr [ebp - 0x111], 0xf7
0x8049bd1:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049bd5:   0f bf c8                        	movsx ecx, ax
0x8049bd8:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x8049bdf:   75 26                           	jne 0x8049c07 <func_1+0x3c4>
0x8049be1:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049be4:   0f b6 d0                        	movzx edx, al
0x8049be7:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049bea:   c1 e0 05                        	shl eax, 5
0x8049bed:   0f b6 c0                        	movzx eax, al
0x8049bf0:   01 d0                           	add eax, edx
0x8049bf2:   09 45 a4                        	or dword ptr [ebp - 0x5c], eax
0x8049bf5:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049bf8:   39 85 fc fe ff ff               	cmp dword ptr [ebp - 0x104], eax
0x8049bfe:   83 bd fc fe ff ff 00            	cmp dword ptr [ebp - 0x104], 0
0x8049c05:   74 07                           	je 0x8049c0e <func_1+0x3cb>
0x8049c07:   b8 01 00 00 00                  	mov eax, 1
0x8049c0c:   eb 05                           	jmp 0x8049c13 <func_1+0x3d0>
0x8049c0e:   b8 00 00 00 00                  	mov eax, 0
0x8049c13:   8b 5d a8                        	mov ebx, dword ptr [ebp - 0x58]
0x8049c16:   99                              	cdq 
0x8049c17:   f7 fb                           	idiv ebx
0x8049c19:   89 d0                           	mov eax, edx
0x8049c1b:   0f bf d8                        	movsx ebx, ax
0x8049c1e:   89 c8                           	mov eax, ecx
0x8049c20:   99                              	cdq 
0x8049c21:   f7 fb                           	idiv ebx
0x8049c23:   89 c2                           	mov edx, eax
0x8049c25:   0f b6 85 fb fe ff ff            	movzx eax, byte ptr [ebp - 0x105]
0x8049c2c:   09 d0                           	or eax, edx
0x8049c2e:   88 85 fb fe ff ff               	mov byte ptr [ebp - 0x105], al
0x8049c34:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x8049c3b:   0f 95 c0                        	setne al
0x8049c3e:   0f b6 d0                        	movzx edx, al
0x8049c41:   0f be 85 ef fe ff ff            	movsx eax, byte ptr [ebp - 0x111]
0x8049c48:   39 c2                           	cmp edx, eax
0x8049c4a:   0f 95 c0                        	setne al
0x8049c4d:   0f b6 c0                        	movzx eax, al
0x8049c50:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049c53:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x8049c59:   89 c2                           	mov edx, eax
0x8049c5b:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049c5e:   21 d0                           	and eax, edx
0x8049c60:   66 89 45 de                     	mov word ptr [ebp - 0x22], ax
0x8049c64:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049c67:   3c ed                           	cmp al, 0xed
0x8049c69:   74 1a                           	je 0x8049c85 <func_1+0x442>
0x8049c6b:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x8049c6f:   23 85 6c ff ff ff               	and eax, dword ptr [ebp - 0x94]
0x8049c75:   3d ea 74 00 00                  	cmp eax, 0x74ea
0x8049c7a:   0f 97 c0                        	seta al
0x8049c7d:   0f b6 c0                        	movzx eax, al
0x8049c80:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049c83:   eb 60                           	jmp 0x8049ce5 <func_1+0x4a2>
0x8049c85:   66 c7 45 e6 e4 ff               	mov word ptr [ebp - 0x1a], 0xffe4
0x8049c8b:   eb 4a                           	jmp 0x8049cd7 <func_1+0x494>
0x8049c8d:   c7 45 88 f9 ff ff ff            	mov dword ptr [ebp - 0x78], 0xfffffff9
0x8049c94:   c7 45 9c 00 00 00 00            	mov dword ptr [ebp - 0x64], 0
0x8049c9b:   eb 29                           	jmp 0x8049cc6 <func_1+0x483>
0x8049c9d:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049ca0:   35 ba 6f 19 b7                  	xor eax, 0xb7196fba
0x8049ca5:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049ca8:   83 45 88 01                     	add dword ptr [ebp - 0x78], 1
0x8049cac:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049caf:   0b 45 88                        	or eax, dword ptr [ebp - 0x78]
0x8049cb2:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049cb5:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x8049cb9:   0f 94 c0                        	sete al
0x8049cbc:   0f b6 c0                        	movzx eax, al
0x8049cbf:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049cc2:   83 45 9c 06                     	add dword ptr [ebp - 0x64], 6
0x8049cc6:   83 7d 9c 18                     	cmp dword ptr [ebp - 0x64], 0x18
0x8049cca:   74 d1                           	je 0x8049c9d <func_1+0x45a>
0x8049ccc:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049cd0:   83 c0 01                        	add eax, 1
0x8049cd3:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x8049cd7:   66 83 7d e6 1a                  	cmp word ptr [ebp - 0x1a], 0x1a
0x8049cdc:   74 af                           	je 0x8049c8d <func_1+0x44a>
0x8049cde:   c7 45 d8 00 00 00 00            	mov dword ptr [ebp - 0x28], 0
0x8049ce5:   c7 45 98 e9 ff ff ff            	mov dword ptr [ebp - 0x68], 0xffffffe9
0x8049cec:   83 7d 98 e8                     	cmp dword ptr [ebp - 0x68], -0x18
0x8049cf0:   0f 8c 3c 02 00 00               	jl 0x8049f32 <func_1+0x6ef>
0x8049cf6:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049cfa:   09 45 a4                        	or dword ptr [ebp - 0x5c], eax
0x8049cfd:   80 4d e9 09                     	or byte ptr [ebp - 0x17], 9
0x8049d01:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049d04:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x8049d0a:   0f 97 c0                        	seta al
0x8049d0d:   0f b6 c0                        	movzx eax, al
0x8049d10:   21 45 d8                        	and dword ptr [ebp - 0x28], eax
0x8049d13:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x8049d17:   0f bf 55 b8                     	movsx edx, word ptr [ebp - 0x48]
0x8049d1b:   0f b7 4d ba                     	movzx ecx, word ptr [ebp - 0x46]
0x8049d1f:   0f b6 5d c3                     	movzx ebx, byte ptr [ebp - 0x3d]
0x8049d23:   0f be b5 59 ff ff ff            	movsx esi, byte ptr [ebp - 0xa7]
0x8049d2a:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x8049d30:   0f bf bd 5a ff ff ff            	movsx edi, word ptr [ebp - 0xa6]
0x8049d37:   89 bd ac fe ff ff               	mov dword ptr [ebp - 0x154], edi
0x8049d3d:   0f be 75 d2                     	movsx esi, byte ptr [ebp - 0x2e]
0x8049d41:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x8049d47:   0f be 7d d3                     	movsx edi, byte ptr [ebp - 0x2d]
0x8049d4b:   89 bd a4 fe ff ff               	mov dword ptr [ebp - 0x15c], edi
0x8049d51:   0f b7 75 de                     	movzx esi, word ptr [ebp - 0x22]
0x8049d55:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x8049d5b:   0f b7 7d e6                     	movzx edi, word ptr [ebp - 0x1a]
0x8049d5f:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x8049d65:   0f b6 75 e9                     	movzx esi, byte ptr [ebp - 0x17]
0x8049d69:   89 b5 98 fe ff ff               	mov dword ptr [ebp - 0x168], esi
0x8049d6f:   0f b7 7d ea                     	movzx edi, word ptr [ebp - 0x16]
0x8049d73:   89 bd 94 fe ff ff               	mov dword ptr [ebp - 0x16c], edi
0x8049d79:   0f b7 7d f2                     	movzx edi, word ptr [ebp - 0xe]
0x8049d7d:   0f b7 b5 72 ff ff ff            	movzx esi, word ptr [ebp - 0x8e]
0x8049d84:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x8049d87:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049d8a:   ff b5 54 ff ff ff               	push dword ptr [ebp - 0xac]
0x8049d90:   50                              	push eax
0x8049d91:   52                              	push edx
0x8049d92:   51                              	push ecx
0x8049d93:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049d96:   53                              	push ebx
0x8049d97:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049d9a:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049d9d:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x8049da3:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049da6:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x8049dac:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x8049db2:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x8049db8:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x8049dbe:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x8049dc4:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x8049dca:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049dcd:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049dd0:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049dd6:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049dd9:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049ddf:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x8049de5:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x8049deb:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x8049df1:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049df4:   57                              	push edi
0x8049df5:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049dfb:   56                              	push esi
0x8049dfc:   e8 53 f8 ff ff                  	call 0x8049654 <set_var>
0x8049e01:   83 c4 78                        	add esp, 0x78
0x8049e04:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049e07:   e9 45 0c 00 00                  	jmp 0x804aa51 <func_1+0x120e>
0x8049e0c:   c7 45 84 e8 5d d7 01            	mov dword ptr [ebp - 0x7c], 0x1d75de8
0x8049e13:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x8049e19:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049e1c:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x8049e23:   e9 fd 00 00 00                  	jmp 0x8049f25 <func_1+0x6e2>
0x8049e28:   c7 85 08 ff ff ff 69 87 47 7c   	mov dword ptr [ebp - 0xf8], 0x7c478769
0x8049e32:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x8049e37:   0f 85 f4 00 00 00               	jne 0x8049f31 <func_1+0x6ee>
0x8049e3d:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x8049e44:   e9 ce 00 00 00                  	jmp 0x8049f17 <func_1+0x6d4>
0x8049e49:   c7 85 04 ff ff ff 2b a6 13 d8   	mov dword ptr [ebp - 0xfc], 0xd813a62b
0x8049e53:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049e57:   75 6c                           	jne 0x8049ec5 <func_1+0x682>
0x8049e59:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049e5d:   8d 50 ff                        	lea edx, [eax - 1]
0x8049e60:   66 89 55 e6                     	mov word ptr [ebp - 0x1a], dx
0x8049e64:   89 c2                           	mov edx, eax
0x8049e66:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049e69:   f7 d0                           	not eax
0x8049e6b:   31 d0                           	xor eax, edx
0x8049e6d:   0f be d0                        	movsx edx, al
0x8049e70:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049e74:   0f be c0                        	movsx eax, al
0x8049e77:   89 c1                           	mov ecx, eax
0x8049e79:   d3 fa                           	sar edx, cl
0x8049e7b:   89 d0                           	mov eax, edx
0x8049e7d:   85 c0                           	test eax, eax
0x8049e7f:   74 07                           	je 0x8049e88 <func_1+0x645>
0x8049e81:   83 bd 08 ff ff ff 00            	cmp dword ptr [ebp - 0xf8], 0
0x8049e88:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049e8e:   0f b6 c8                        	movzx ecx, al
0x8049e91:   ba 93 24 49 92                  	mov edx, 0x92492493
0x8049e96:   89 c8                           	mov eax, ecx
0x8049e98:   f7 ea                           	imul edx
0x8049e9a:   8d 04 0a                        	lea eax, [edx + ecx]
0x8049e9d:   c1 f8 02                        	sar eax, 2
0x8049ea0:   89 c2                           	mov edx, eax
0x8049ea2:   89 c8                           	mov eax, ecx
0x8049ea4:   c1 f8 1f                        	sar eax, 0x1f
0x8049ea7:   29 c2                           	sub edx, eax
0x8049ea9:   89 d0                           	mov eax, edx
0x8049eab:   89 c2                           	mov edx, eax
0x8049ead:   c1 e2 03                        	shl edx, 3
0x8049eb0:   29 c2                           	sub edx, eax
0x8049eb2:   89 c8                           	mov eax, ecx
0x8049eb4:   29 d0                           	sub eax, edx
0x8049eb6:   39 85 04 ff ff ff               	cmp dword ptr [ebp - 0xfc], eax
0x8049ebc:   83 bd 04 ff ff ff 01            	cmp dword ptr [ebp - 0xfc], 1
0x8049ec3:   7f 07                           	jg 0x8049ecc <func_1+0x689>
0x8049ec5:   b8 01 00 00 00                  	mov eax, 1
0x8049eca:   eb 05                           	jmp 0x8049ed1 <func_1+0x68e>
0x8049ecc:   b8 00 00 00 00                  	mov eax, 0
0x8049ed1:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049ed4:   66 83 bd 72 ff ff ff 00         	cmp word ptr [ebp - 0x8e], 0
0x8049edc:   75 31                           	jne 0x8049f0f <func_1+0x6cc>
0x8049ede:   83 bd 08 ff ff ff 00            	cmp dword ptr [ebp - 0xf8], 0
0x8049ee5:   74 22                           	je 0x8049f09 <func_1+0x6c6>
0x8049ee7:   c7 85 00 ff ff ff d3 22 8c 83   	mov dword ptr [ebp - 0x100], 0x838c22d3
0x8049ef1:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049ef4:   89 85 00 ff ff ff               	mov dword ptr [ebp - 0x100], eax
0x8049efa:   83 bd 00 ff ff ff 00            	cmp dword ptr [ebp - 0x100], 0
0x8049f01:   75 0f                           	jne 0x8049f12 <func_1+0x6cf>
0x8049f03:   83 45 84 01                     	add dword ptr [ebp - 0x7c], 1
0x8049f07:   eb 0a                           	jmp 0x8049f13 <func_1+0x6d0>
0x8049f09:   83 6d 90 01                     	sub dword ptr [ebp - 0x70], 1
0x8049f0d:   eb 04                           	jmp 0x8049f13 <func_1+0x6d0>
0x8049f0f:   90                              	nop 
0x8049f10:   eb 01                           	jmp 0x8049f13 <func_1+0x6d0>
0x8049f12:   90                              	nop 
0x8049f13:   83 6d e0 07                     	sub dword ptr [ebp - 0x20], 7
0x8049f17:   83 7d e0 e5                     	cmp dword ptr [ebp - 0x20], -0x1b
0x8049f1b:   0f 8d 28 ff ff ff               	jge 0x8049e49 <func_1+0x606>
0x8049f21:   83 45 a4 04                     	add dword ptr [ebp - 0x5c], 4
0x8049f25:   83 7d a4 17                     	cmp dword ptr [ebp - 0x5c], 0x17
0x8049f29:   0f 8f f9 fe ff ff               	jg 0x8049e28 <func_1+0x5e5>
0x8049f2f:   eb 01                           	jmp 0x8049f32 <func_1+0x6ef>
0x8049f31:   90                              	nop 
0x8049f32:   0f b7 5d ea                     	movzx ebx, word ptr [ebp - 0x16]
0x8049f36:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x8049f3c:   ba 00 00 00 00                  	mov edx, 0
0x8049f41:   f7 f3                           	div ebx
0x8049f43:   66 0f af 85 4a ff ff ff         	imul ax, word ptr [ebp - 0xb6]
0x8049f4b:   0f b7 d0                        	movzx edx, ax
0x8049f4e:   66 83 bd 4a ff ff ff 00         	cmp word ptr [ebp - 0xb6], 0
0x8049f56:   75 07                           	jne 0x8049f5f <func_1+0x71c>
0x8049f58:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x8049f5d:   74 07                           	je 0x8049f66 <func_1+0x723>
0x8049f5f:   b8 01 00 00 00                  	mov eax, 1
0x8049f64:   eb 05                           	jmp 0x8049f6b <func_1+0x728>
0x8049f66:   b8 00 00 00 00                  	mov eax, 0
0x8049f6b:   0f b7 c0                        	movzx eax, ax
0x8049f6e:   01 d0                           	add eax, edx
0x8049f70:   85 c0                           	test eax, eax
0x8049f72:   0f 94 c0                        	sete al
0x8049f75:   0f b6 c0                        	movzx eax, al
0x8049f78:   09 45 a4                        	or dword ptr [ebp - 0x5c], eax
0x8049f7b:   83 7d 94 ff                     	cmp dword ptr [ebp - 0x6c], -1
0x8049f7f:   0f 84 70 01 00 00               	je 0x804a0f5 <func_1+0x8b2>
0x8049f85:   c7 85 c0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x140], 0
0x8049f8f:   c7 45 e0 ec ff ff ff            	mov dword ptr [ebp - 0x20], 0xffffffec
0x8049f96:   eb 54                           	jmp 0x8049fec <func_1+0x7a9>
0x8049f98:   66 c7 45 f2 00 00               	mov word ptr [ebp - 0xe], 0
0x8049f9e:   eb 41                           	jmp 0x8049fe1 <func_1+0x79e>
0x8049fa0:   0f be 45 d2                     	movsx eax, byte ptr [ebp - 0x2e]
0x8049fa4:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049fa7:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049faa:   66 98                           	cbw 
0x8049fac:   ba 29 00 00 00                  	mov edx, 0x29
0x8049fb1:   29 c2                           	sub edx, eax
0x8049fb3:   89 d0                           	mov eax, edx
0x8049fb5:   89 c1                           	mov ecx, eax
0x8049fb7:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049fbb:   8d 50 ff                        	lea edx, [eax - 1]
0x8049fbe:   0f b7 85 72 ff ff ff            	movzx eax, word ptr [ebp - 0x8e]
0x8049fc5:   39 c2                           	cmp edx, eax
0x8049fc7:   0f 92 c0                        	setb al
0x8049fca:   0f b6 c0                        	movzx eax, al
0x8049fcd:   31 c8                           	xor eax, ecx
0x8049fcf:   0f bf d0                        	movsx edx, ax
0x8049fd2:   0f be 45 d2                     	movsx eax, byte ptr [ebp - 0x2e]
0x8049fd6:   0f af c2                        	imul eax, edx
0x8049fd9:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049fdc:   66 83 45 f2 01                  	add word ptr [ebp - 0xe], 1
0x8049fe1:   66 83 7d f2 11                  	cmp word ptr [ebp - 0xe], 0x11
0x8049fe6:   76 b8                           	jbe 0x8049fa0 <func_1+0x75d>
0x8049fe8:   83 6d e0 01                     	sub dword ptr [ebp - 0x20], 1
0x8049fec:   83 7d e0 e9                     	cmp dword ptr [ebp - 0x20], -0x17
0x8049ff0:   75 a6                           	jne 0x8049f98 <func_1+0x755>
0x8049ff2:   8b 85 c0 fe ff ff               	mov eax, dword ptr [ebp - 0x140]
0x8049ff8:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049ffb:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x8049fff:   0f bf 55 b8                     	movsx edx, word ptr [ebp - 0x48]
0x804a003:   0f b7 4d ba                     	movzx ecx, word ptr [ebp - 0x46]
0x804a007:   0f b6 5d c3                     	movzx ebx, byte ptr [ebp - 0x3d]
0x804a00b:   0f be b5 59 ff ff ff            	movsx esi, byte ptr [ebp - 0xa7]
0x804a012:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x804a018:   0f bf bd 5a ff ff ff            	movsx edi, word ptr [ebp - 0xa6]
0x804a01f:   89 bd ac fe ff ff               	mov dword ptr [ebp - 0x154], edi
0x804a025:   0f be 75 d2                     	movsx esi, byte ptr [ebp - 0x2e]
0x804a029:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x804a02f:   0f be 7d d3                     	movsx edi, byte ptr [ebp - 0x2d]
0x804a033:   89 bd a4 fe ff ff               	mov dword ptr [ebp - 0x15c], edi
0x804a039:   0f b7 75 de                     	movzx esi, word ptr [ebp - 0x22]
0x804a03d:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a043:   0f b7 7d e6                     	movzx edi, word ptr [ebp - 0x1a]
0x804a047:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x804a04d:   0f b6 75 e9                     	movzx esi, byte ptr [ebp - 0x17]
0x804a051:   89 b5 98 fe ff ff               	mov dword ptr [ebp - 0x168], esi
0x804a057:   0f b7 7d ea                     	movzx edi, word ptr [ebp - 0x16]
0x804a05b:   89 bd 94 fe ff ff               	mov dword ptr [ebp - 0x16c], edi
0x804a061:   0f b7 7d f2                     	movzx edi, word ptr [ebp - 0xe]
0x804a065:   0f b7 b5 72 ff ff ff            	movzx esi, word ptr [ebp - 0x8e]
0x804a06c:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a06f:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a072:   ff b5 54 ff ff ff               	push dword ptr [ebp - 0xac]
0x804a078:   50                              	push eax
0x804a079:   52                              	push edx
0x804a07a:   51                              	push ecx
0x804a07b:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a07e:   53                              	push ebx
0x804a07f:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a082:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a085:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a08b:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a08e:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a094:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804a09a:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a0a0:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a0a6:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a0ac:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a0b2:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a0b5:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a0b8:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a0be:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a0c1:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a0c7:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a0cd:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a0d3:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a0d9:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a0dc:   57                              	push edi
0x804a0dd:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a0e3:   56                              	push esi
0x804a0e4:   e8 6b f5 ff ff                  	call 0x8049654 <set_var>
0x804a0e9:   83 c4 78                        	add esp, 0x78
0x804a0ec:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a0f0:   e9 5c 09 00 00                  	jmp 0x804aa51 <func_1+0x120e>
0x804a0f5:   c7 85 e8 fe ff ff f9 ff ff ff   	mov dword ptr [ebp - 0x118], 0xfffffff9
0x804a0ff:   83 bd 14 ff ff ff 01            	cmp dword ptr [ebp - 0xec], 1
0x804a106:   0f 95 c0                        	setne al
0x804a109:   0f b6 c0                        	movzx eax, al
0x804a10c:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a10f:   66 c7 45 ea 00 00               	mov word ptr [ebp - 0x16], 0
0x804a115:   e9 88 03 00 00                  	jmp 0x804a4a2 <func_1+0xc5f>
0x804a11a:   66 c7 45 82 00 00               	mov word ptr [ebp - 0x7e], 0
0x804a120:   c7 85 e4 fe ff ff 87 1b f2 75   	mov dword ptr [ebp - 0x11c], 0x75f21b87
0x804a12a:   83 bd 18 ff ff ff 00            	cmp dword ptr [ebp - 0xe8], 0
0x804a131:   74 05                           	je 0x804a138 <func_1+0x8f5>
0x804a133:   e9 88 f8 ff ff                  	jmp 0x80499c0 <func_1+0x17d>
0x804a138:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a13b:   88 45 d3                        	mov byte ptr [ebp - 0x2d], al
0x804a13e:   0f be 55 d3                     	movsx edx, byte ptr [ebp - 0x2d]
0x804a142:   0f bf 45 82                     	movsx eax, word ptr [ebp - 0x7e]
0x804a146:   39 45 a8                        	cmp dword ptr [ebp - 0x58], eax
0x804a149:   72 0a                           	jb 0x804a155 <func_1+0x912>
0x804a14b:   66 83 bd 72 ff ff ff 00         	cmp word ptr [ebp - 0x8e], 0
0x804a153:   74 07                           	je 0x804a15c <func_1+0x919>
0x804a155:   b8 01 00 00 00                  	mov eax, 1
0x804a15a:   eb 05                           	jmp 0x804a161 <func_1+0x91e>
0x804a15c:   b8 00 00 00 00                  	mov eax, 0
0x804a161:   39 d0                           	cmp eax, edx
0x804a163:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a167:   98                              	cwde 
0x804a168:   83 c0 01                        	add eax, 1
0x804a16b:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a16e:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a174:   83 c8 55                        	or eax, 0x55
0x804a177:   88 85 13 ff ff ff               	mov byte ptr [ebp - 0xed], al
0x804a17d:   0f b6 85 13 ff ff ff            	movzx eax, byte ptr [ebp - 0xed]
0x804a184:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x804a187:   b8 00 00 00 00                  	mov eax, 0
0x804a18c:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a18f:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x804a193:   74 57                           	je 0x804a1ec <func_1+0x9a9>
0x804a195:   c7 45 9c 15 00 00 00            	mov dword ptr [ebp - 0x64], 0x15
0x804a19c:   eb 43                           	jmp 0x804a1e1 <func_1+0x99e>
0x804a19e:   c6 45 d2 00                     	mov byte ptr [ebp - 0x2e], 0
0x804a1a2:   eb 30                           	jmp 0x804a1d4 <func_1+0x991>
0x804a1a4:   c6 85 d3 fe ff ff 03            	mov byte ptr [ebp - 0x12d], 3
0x804a1ab:   83 bd 5c ff ff ff 00            	cmp dword ptr [ebp - 0xa4], 0
0x804a1b2:   75 28                           	jne 0x804a1dc <func_1+0x999>
0x804a1b4:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a1ba:   88 85 d3 fe ff ff               	mov byte ptr [ebp - 0x12d], al
0x804a1c0:   0f be 85 d3 fe ff ff            	movsx eax, byte ptr [ebp - 0x12d]
0x804a1c7:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a1ca:   0f b6 45 d2                     	movzx eax, byte ptr [ebp - 0x2e]
0x804a1ce:   83 c0 06                        	add eax, 6
0x804a1d1:   88 45 d2                        	mov byte ptr [ebp - 0x2e], al
0x804a1d4:   80 7d d2 1a                     	cmp byte ptr [ebp - 0x2e], 0x1a
0x804a1d8:   7f ca                           	jg 0x804a1a4 <func_1+0x961>
0x804a1da:   eb 01                           	jmp 0x804a1dd <func_1+0x99a>
0x804a1dc:   90                              	nop 
0x804a1dd:   83 6d 9c 07                     	sub dword ptr [ebp - 0x64], 7
0x804a1e1:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a1e5:   79 b7                           	jns 0x804a19e <func_1+0x95b>
0x804a1e7:   e9 8b 01 00 00                  	jmp 0x804a377 <func_1+0xb34>
0x804a1ec:   c7 85 e0 fe ff ff 03 00 00 00   	mov dword ptr [ebp - 0x120], 3
0x804a1f6:   c7 85 7c ff ff ff 58 4e ad 93   	mov dword ptr [ebp - 0x84], 0x93ad4e58
0x804a200:   c7 45 a0 ef ff ff ff            	mov dword ptr [ebp - 0x60], 0xffffffef
0x804a207:   e9 38 01 00 00                  	jmp 0x804a344 <func_1+0xb01>
0x804a20c:   c7 85 dc fe ff ff ac ee f3 b5   	mov dword ptr [ebp - 0x124], 0xb5f3eeac
0x804a216:   0f be 45 d3                     	movsx eax, byte ptr [ebp - 0x2d]
0x804a21a:   89 85 dc fe ff ff               	mov dword ptr [ebp - 0x124], eax
0x804a220:   66 83 65 8e f7                  	and word ptr [ebp - 0x72], 0xfff7
0x804a225:   0f bf 55 82                     	movsx edx, word ptr [ebp - 0x7e]
0x804a229:   0f b6 85 12 ff ff ff            	movzx eax, byte ptr [ebp - 0xee]
0x804a230:   39 c2                           	cmp edx, eax
0x804a232:   0f 94 c0                        	sete al
0x804a235:   0f b6 d0                        	movzx edx, al
0x804a238:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a23c:   21 c2                           	and edx, eax
0x804a23e:   0f b6 85 12 ff ff ff            	movzx eax, byte ptr [ebp - 0xee]
0x804a245:   39 c2                           	cmp edx, eax
0x804a247:   0f b7 45 82                     	movzx eax, word ptr [ebp - 0x7e]
0x804a24b:   0f be d0                        	movsx edx, al
0x804a24e:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a251:   0f be d8                        	movsx ebx, al
0x804a254:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a25a:   0f be c0                        	movsx eax, al
0x804a25d:   89 c1                           	mov ecx, eax
0x804a25f:   d3 fb                           	sar ebx, cl
0x804a261:   89 d8                           	mov eax, ebx
0x804a263:   0f be c0                        	movsx eax, al
0x804a266:   0f af c2                        	imul eax, edx
0x804a269:   85 c0                           	test eax, eax
0x804a26b:   74 41                           	je 0x804a2ae <func_1+0xa6b>
0x804a26d:   83 6d cc 01                     	sub dword ptr [ebp - 0x34], 1
0x804a271:   66 83 bd 5a ff ff ff 00         	cmp word ptr [ebp - 0xa6], 0
0x804a279:   0f 85 d1 00 00 00               	jne 0x804a350 <func_1+0xb0d>
0x804a27f:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x804a285:   0f b6 d0                        	movzx edx, al
0x804a288:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a28b:   0f b6 c0                        	movzx eax, al
0x804a28e:   01 d0                           	add eax, edx
0x804a290:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804a296:   83 bd e0 fe ff ff 00            	cmp dword ptr [ebp - 0x120], 0
0x804a29d:   0f 94 c0                        	sete al
0x804a2a0:   0f b6 d0                        	movzx edx, al
0x804a2a3:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x804a2a7:   21 d0                           	and eax, edx
0x804a2a9:   09 45 d8                        	or dword ptr [ebp - 0x28], eax
0x804a2ac:   eb 44                           	jmp 0x804a2f2 <func_1+0xaaf>
0x804a2ae:   c7 85 d8 fe ff ff 05 00 00 00   	mov dword ptr [ebp - 0x128], 5
0x804a2b8:   c7 85 d4 fe ff ff 07 ad e0 c5   	mov dword ptr [ebp - 0x12c], 0xc5e0ad07
0x804a2c2:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a2c5:   89 85 e4 fe ff ff               	mov dword ptr [ebp - 0x11c], eax
0x804a2cb:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x804a2cf:   83 c0 01                        	add eax, 1
0x804a2d2:   88 45 e9                        	mov byte ptr [ebp - 0x17], al
0x804a2d5:   c7 85 0c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xf4], 1
0x804a2df:   0f be 85 59 ff ff ff            	movsx eax, byte ptr [ebp - 0xa7]
0x804a2e6:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a2e9:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a2ec:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x804a2f2:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a2f8:   0f be d0                        	movsx edx, al
0x804a2fb:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a2fe:   0f be c0                        	movsx eax, al
0x804a301:   01 d0                           	add eax, edx
0x804a303:   85 c0                           	test eax, eax
0x804a305:   75 09                           	jne 0x804a310 <func_1+0xacd>
0x804a307:   83 bd 7c ff ff ff 00            	cmp dword ptr [ebp - 0x84], 0
0x804a30e:   74 07                           	je 0x804a317 <func_1+0xad4>
0x804a310:   b8 01 00 00 00                  	mov eax, 1
0x804a315:   eb 05                           	jmp 0x804a31c <func_1+0xad9>
0x804a317:   b8 00 00 00 00                  	mov eax, 0
0x804a31c:   83 c8 05                        	or eax, 5
0x804a31f:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x804a323:   8b 85 dc fe ff ff               	mov eax, dword ptr [ebp - 0x124]
0x804a329:   89 c2                           	mov edx, eax
0x804a32b:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a32f:   01 d0                           	add eax, edx
0x804a331:   0f b7 c0                        	movzx eax, ax
0x804a334:   69 c0 a5 79 00 00               	imul eax, eax, 0x79a5
0x804a33a:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804a340:   83 45 a0 01                     	add dword ptr [ebp - 0x60], 1
0x804a344:   83 7d a0 0b                     	cmp dword ptr [ebp - 0x60], 0xb
0x804a348:   0f 86 be fe ff ff               	jbe 0x804a20c <func_1+0x9c9>
0x804a34e:   eb 01                           	jmp 0x804a351 <func_1+0xb0e>
0x804a350:   90                              	nop 
0x804a351:   c7 45 a4 05 00 00 00            	mov dword ptr [ebp - 0x5c], 5
0x804a358:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a35b:   89 85 e4 fe ff ff               	mov dword ptr [ebp - 0x11c], eax
0x804a361:   83 bd 50 ff ff ff ff            	cmp dword ptr [ebp - 0xb0], -1
0x804a368:   0f 94 c0                        	sete al
0x804a36b:   0f b6 c0                        	movzx eax, al
0x804a36e:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a371:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a374:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a377:   83 45 c4 01                     	add dword ptr [ebp - 0x3c], 1
0x804a37b:   66 c7 45 82 e2 ff               	mov word ptr [ebp - 0x7e], 0xffe2
0x804a381:   e9 06 01 00 00                  	jmp 0x804a48c <func_1+0xc49>
0x804a386:   66 c7 85 d0 fe ff ff 07 ec      	mov word ptr [ebp - 0x130], 0xec07
0x804a38f:   c7 85 cc fe ff ff fc ff ff ff   	mov dword ptr [ebp - 0x134], 0xfffffffc
0x804a399:   c7 85 c8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x138], 0
0x804a3a3:   c7 85 cc fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x134], 0xffffffff
0x804a3ad:   0f bf 45 82                     	movsx eax, word ptr [ebp - 0x7e]
0x804a3b1:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a3b4:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a3b7:   89 c2                           	mov edx, eax
0x804a3b9:   0f b7 85 d0 fe ff ff            	movzx eax, word ptr [ebp - 0x130]
0x804a3c0:   09 d0                           	or eax, edx
0x804a3c2:   0f be c0                        	movsx eax, al
0x804a3c5:   c1 e0 05                        	shl eax, 5
0x804a3c8:   0f be d0                        	movsx edx, al
0x804a3cb:   0f b7 45 82                     	movzx eax, word ptr [ebp - 0x7e]
0x804a3cf:   83 e8 01                        	sub eax, 1
0x804a3d2:   0f be c0                        	movsx eax, al
0x804a3d5:   0f af c2                        	imul eax, edx
0x804a3d8:   83 f8 01                        	cmp eax, 1
0x804a3db:   0f b7 85 72 ff ff ff            	movzx eax, word ptr [ebp - 0x8e]
0x804a3e2:   0f be d0                        	movsx edx, al
0x804a3e5:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a3e8:   0f be c0                        	movsx eax, al
0x804a3eb:   89 c1                           	mov ecx, eax
0x804a3ed:   d3 e2                           	shl edx, cl
0x804a3ef:   89 d0                           	mov eax, edx
0x804a3f1:   89 c2                           	mov edx, eax
0x804a3f3:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x804a3f7:   29 c2                           	sub edx, eax
0x804a3f9:   89 d0                           	mov eax, edx
0x804a3fb:   0f b6 c0                        	movzx eax, al
0x804a3fe:   2d ad 00 00 00                  	sub eax, 0xad
0x804a403:   39 45 94                        	cmp dword ptr [ebp - 0x6c], eax
0x804a406:   0f 9e c0                        	setle al
0x804a409:   0f b6 c0                        	movzx eax, al
0x804a40c:   8b 8d 60 ff ff ff               	mov ecx, dword ptr [ebp - 0xa0]
0x804a412:   ba 00 00 00 00                  	mov edx, 0
0x804a417:   f7 f1                           	div ecx
0x804a419:   89 d0                           	mov eax, edx
0x804a41b:   85 c0                           	test eax, eax
0x804a41d:   74 06                           	je 0x804a425 <func_1+0xbe2>
0x804a41f:   80 45 c3 01                     	add byte ptr [ebp - 0x3d], 1
0x804a423:   eb 13                           	jmp 0x804a438 <func_1+0xbf5>
0x804a425:   66 c7 85 c6 fe ff ff 3b 83      	mov word ptr [ebp - 0x13a], 0x833b
0x804a42e:   0f b7 85 c6 fe ff ff            	movzx eax, word ptr [ebp - 0x13a]
0x804a435:   09 45 d8                        	or dword ptr [ebp - 0x28], eax
0x804a438:   66 81 bd d0 fe ff ff d3 00      	cmp word ptr [ebp - 0x130], 0xd3
0x804a441:   0f 96 c0                        	setbe al
0x804a444:   0f b6 c0                        	movzx eax, al
0x804a447:   66 89 45 de                     	mov word ptr [ebp - 0x22], ax
0x804a44b:   c7 45 d8 00 00 00 00            	mov dword ptr [ebp - 0x28], 0
0x804a452:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a455:   31 85 c8 fe ff ff               	xor dword ptr [ebp - 0x138], eax
0x804a45b:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a45e:   89 c2                           	mov edx, eax
0x804a460:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x804a466:   01 d0                           	add eax, edx
0x804a468:   83 c0 35                        	add eax, 0x35
0x804a46b:   0f be d0                        	movsx edx, al
0x804a46e:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a471:   0f be c0                        	movsx eax, al
0x804a474:   0f af c2                        	imul eax, edx
0x804a477:   89 85 c8 fe ff ff               	mov dword ptr [ebp - 0x138], eax
0x804a47d:   83 45 bc 01                     	add dword ptr [ebp - 0x44], 1
0x804a481:   0f b7 45 82                     	movzx eax, word ptr [ebp - 0x7e]
0x804a485:   83 c0 06                        	add eax, 6
0x804a488:   66 89 45 82                     	mov word ptr [ebp - 0x7e], ax
0x804a48c:   66 83 7d 82 00                  	cmp word ptr [ebp - 0x7e], 0
0x804a491:   0f 8e ef fe ff ff               	jle 0x804a386 <func_1+0xb43>
0x804a497:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a49b:   83 c0 01                        	add eax, 1
0x804a49e:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x804a4a2:   66 83 7d ea 2c                  	cmp word ptr [ebp - 0x16], 0x2c
0x804a4a7:   0f 86 6d fc ff ff               	jbe 0x804a11a <func_1+0x8d7>
0x804a4ad:   e9 aa 04 00 00                  	jmp 0x804a95c <func_1+0x1119>
0x804a4b2:   66 c7 85 34 ff ff ff ff ff      	mov word ptr [ebp - 0xcc], 0xffff
0x804a4bb:   c7 85 78 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x88], 0xffffffff
0x804a4c5:   c7 85 74 ff ff ff f8 ff ff ff   	mov dword ptr [ebp - 0x8c], 0xfffffff8
0x804a4cf:   c6 85 33 ff ff ff 98            	mov byte ptr [ebp - 0xcd], 0x98
0x804a4d6:   66 c7 85 30 ff ff ff f1 9b      	mov word ptr [ebp - 0xd0], 0x9bf1
0x804a4df:   66 83 bd 34 ff ff ff 00         	cmp word ptr [ebp - 0xcc], 0
0x804a4e7:   0f 94 c0                        	sete al
0x804a4ea:   0f b6 c0                        	movzx eax, al
0x804a4ed:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804a4f3:   0f b7 45 ba                     	movzx eax, word ptr [ebp - 0x46]
0x804a4f7:   83 c0 01                        	add eax, 1
0x804a4fa:   66 89 45 ba                     	mov word ptr [ebp - 0x46], ax
0x804a4fe:   83 7d a4 01                     	cmp dword ptr [ebp - 0x5c], 1
0x804a502:   0f 9e c0                        	setle al
0x804a505:   0f b6 c0                        	movzx eax, al
0x804a508:   21 85 38 ff ff ff               	and dword ptr [ebp - 0xc8], eax
0x804a50e:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a514:   0f bf d0                        	movsx edx, ax
0x804a517:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a51d:   98                              	cwde 
0x804a51e:   89 c1                           	mov ecx, eax
0x804a520:   d3 fa                           	sar edx, cl
0x804a522:   89 d0                           	mov eax, edx
0x804a524:   66 3d 9d 99                     	cmp ax, 0x999d
0x804a528:   0f 93 c0                        	setae al
0x804a52b:   0f b6 c0                        	movzx eax, al
0x804a52e:   0f b7 c0                        	movzx eax, ax
0x804a531:   39 85 74 ff ff ff               	cmp dword ptr [ebp - 0x8c], eax
0x804a537:   80 bd 33 ff ff ff 00            	cmp byte ptr [ebp - 0xcd], 0
0x804a53e:   0f 84 9a 01 00 00               	je 0x804a6de <func_1+0xe9b>
0x804a544:   c6 85 25 ff ff ff bc            	mov byte ptr [ebp - 0xdb], 0xbc
0x804a54b:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x804a552:   0f 85 92 00 00 00               	jne 0x804a5ea <func_1+0xda7>
0x804a558:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a55b:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804a561:   66 83 bd 72 ff ff ff 00         	cmp word ptr [ebp - 0x8e], 0
0x804a569:   74 0e                           	je 0x804a579 <func_1+0xd36>
0x804a56b:   66 83 7d ba 00                  	cmp word ptr [ebp - 0x46], 0
0x804a570:   74 07                           	je 0x804a579 <func_1+0xd36>
0x804a572:   ba 01 00 00 00                  	mov edx, 1
0x804a577:   eb 05                           	jmp 0x804a57e <func_1+0xd3b>
0x804a579:   ba 00 00 00 00                  	mov edx, 0
0x804a57e:   0f b6 85 33 ff ff ff            	movzx eax, byte ptr [ebp - 0xcd]
0x804a585:   39 c2                           	cmp edx, eax
0x804a587:   0f 94 c0                        	sete al
0x804a58a:   0f b6 d0                        	movzx edx, al
0x804a58d:   0f b7 45 ba                     	movzx eax, word ptr [ebp - 0x46]
0x804a591:   09 d0                           	or eax, edx
0x804a593:   85 c0                           	test eax, eax
0x804a595:   74 10                           	je 0x804a5a7 <func_1+0xd64>
0x804a597:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x804a59e:   74 07                           	je 0x804a5a7 <func_1+0xd64>
0x804a5a0:   b8 01 00 00 00                  	mov eax, 1
0x804a5a5:   eb 05                           	jmp 0x804a5ac <func_1+0xd69>
0x804a5a7:   b8 00 00 00 00                  	mov eax, 0
0x804a5ac:   33 45 e0                        	xor eax, dword ptr [ebp - 0x20]
0x804a5af:   39 85 78 ff ff ff               	cmp dword ptr [ebp - 0x88], eax
0x804a5b5:   0f 9e c0                        	setle al
0x804a5b8:   0f b6 d0                        	movzx edx, al
0x804a5bb:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x804a5bf:   66 98                           	cbw 
0x804a5c1:   29 c2                           	sub edx, eax
0x804a5c3:   89 d0                           	mov eax, edx
0x804a5c5:   66 3d 78 bd                     	cmp ax, 0xbd78
0x804a5c9:   0f 93 c0                        	setae al
0x804a5cc:   0f b6 c0                        	movzx eax, al
0x804a5cf:   0f b7 c0                        	movzx eax, ax
0x804a5d2:   39 85 74 ff ff ff               	cmp dword ptr [ebp - 0x8c], eax
0x804a5d8:   0f 9e c0                        	setle al
0x804a5db:   0f b6 c0                        	movzx eax, al
0x804a5de:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x804a5e1:   0f 9f c0                        	setg al
0x804a5e4:   0f b6 c0                        	movzx eax, al
0x804a5e7:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a5ea:   b8 01 00 00 00                  	mov eax, 1
0x804a5ef:   3d fe ff 00 00                  	cmp eax, 0xfffe
0x804a5f4:   0f 96 c0                        	setbe al
0x804a5f7:   0f b6 c0                        	movzx eax, al
0x804a5fa:   21 85 3c ff ff ff               	and dword ptr [ebp - 0xc4], eax
0x804a600:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x804a604:   23 85 78 ff ff ff               	and eax, dword ptr [ebp - 0x88]
0x804a60a:   09 45 d8                        	or dword ptr [ebp - 0x28], eax
0x804a60d:   c7 45 bc 02 00 00 00            	mov dword ptr [ebp - 0x44], 2
0x804a614:   e9 b2 00 00 00                  	jmp 0x804a6cb <func_1+0xe88>
0x804a619:   c7 85 20 ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xe0], 0xfffffff6
0x804a623:   c7 85 1c ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0xe4], 8
0x804a62d:   0f b6 85 37 ff ff ff            	movzx eax, byte ptr [ebp - 0xc9]
0x804a634:   39 85 78 ff ff ff               	cmp dword ptr [ebp - 0x88], eax
0x804a63a:   0f 9f c0                        	setg al
0x804a63d:   0f b6 d0                        	movzx edx, al
0x804a640:   0f b6 85 25 ff ff ff            	movzx eax, byte ptr [ebp - 0xdb]
0x804a647:   31 c2                           	xor edx, eax
0x804a649:   0f b6 85 33 ff ff ff            	movzx eax, byte ptr [ebp - 0xcd]
0x804a650:   39 c2                           	cmp edx, eax
0x804a652:   7e 07                           	jle 0x804a65b <func_1+0xe18>
0x804a654:   b8 02 00 00 00                  	mov eax, 2
0x804a659:   eb 05                           	jmp 0x804a660 <func_1+0xe1d>
0x804a65b:   b8 03 00 00 00                  	mov eax, 3
0x804a660:   3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x804a663:   0f 9c c0                        	setl al
0x804a666:   0f b6 c0                        	movzx eax, al
0x804a669:   23 85 74 ff ff ff               	and eax, dword ptr [ebp - 0x8c]
0x804a66f:   3d a9 fd 00 00                  	cmp eax, 0xfda9
0x804a674:   0f 9e c0                        	setle al
0x804a677:   0f b6 c0                        	movzx eax, al
0x804a67a:   66 89 45 b8                     	mov word ptr [ebp - 0x48], ax
0x804a67e:   0f bf 45 b8                     	movsx eax, word ptr [ebp - 0x48]
0x804a682:   89 85 20 ff ff ff               	mov dword ptr [ebp - 0xe0], eax
0x804a688:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x804a68e:   31 45 d8                        	xor dword ptr [ebp - 0x28], eax
0x804a691:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x804a695:   74 13                           	je 0x804a6aa <func_1+0xe67>
0x804a697:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x804a69b:   39 85 1c ff ff ff               	cmp dword ptr [ebp - 0xe4], eax
0x804a6a1:   74 07                           	je 0x804a6aa <func_1+0xe67>
0x804a6a3:   b8 01 00 00 00                  	mov eax, 1
0x804a6a8:   eb 05                           	jmp 0x804a6af <func_1+0xe6c>
0x804a6aa:   b8 00 00 00 00                  	mov eax, 0
0x804a6af:   21 85 74 ff ff ff               	and dword ptr [ebp - 0x8c], eax
0x804a6b5:   83 bd 64 ff ff ff 00            	cmp dword ptr [ebp - 0x9c], 0
0x804a6bc:   75 08                           	jne 0x804a6c6 <func_1+0xe83>
0x804a6be:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a6c1:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a6c4:   eb 01                           	jmp 0x804a6c7 <func_1+0xe84>
0x804a6c6:   90                              	nop 
0x804a6c7:   83 45 bc 01                     	add dword ptr [ebp - 0x44], 1
0x804a6cb:   83 7d bc 33                     	cmp dword ptr [ebp - 0x44], 0x33
0x804a6cf:   0f 84 44 ff ff ff               	je 0x804a619 <func_1+0xdd6>
0x804a6d5:   80 45 b7 01                     	add byte ptr [ebp - 0x49], 1
0x804a6d9:   e9 56 02 00 00                  	jmp 0x804a934 <func_1+0x10f1>
0x804a6de:   66 c7 85 2e ff ff ff 05 00      	mov word ptr [ebp - 0xd2], 5
0x804a6e7:   c7 85 28 ff ff ff f9 ff ff ff   	mov dword ptr [ebp - 0xd8], 0xfffffff9
0x804a6f1:   c7 45 d8 5e e6 b3 85            	mov dword ptr [ebp - 0x28], 0x85b3e65e
0x804a6f8:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a6fb:   88 45 e9                        	mov byte ptr [ebp - 0x17], al
0x804a6fe:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a702:   f7 d8                           	neg eax
0x804a704:   3d 50 01 00 00                  	cmp eax, 0x150
0x804a709:   0f 9f c0                        	setg al
0x804a70c:   88 45 b7                        	mov byte ptr [ebp - 0x49], al
0x804a70f:   83 bd 44 ff ff ff 00            	cmp dword ptr [ebp - 0xbc], 0
0x804a716:   0f be 85 59 ff ff ff            	movsx eax, byte ptr [ebp - 0xa7]
0x804a71d:   39 45 a8                        	cmp dword ptr [ebp - 0x58], eax
0x804a720:   73 07                           	jae 0x804a729 <func_1+0xee6>
0x804a722:   ba 01 00 00 00                  	mov edx, 1
0x804a727:   eb 05                           	jmp 0x804a72e <func_1+0xeeb>
0x804a729:   ba 00 00 00 00                  	mov edx, 0
0x804a72e:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x804a732:   39 c2                           	cmp edx, eax
0x804a734:   b8 00 00 00 00                  	mov eax, 0
0x804a739:   31 85 74 ff ff ff               	xor dword ptr [ebp - 0x8c], eax
0x804a73f:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a745:   30 85 36 ff ff ff               	xor byte ptr [ebp - 0xca], al
0x804a74b:   c7 45 d8 09 00 00 00            	mov dword ptr [ebp - 0x28], 9
0x804a752:   66 c7 85 2e ff ff ff 09 00      	mov word ptr [ebp - 0xd2], 9
0x804a75b:   83 bd 28 ff ff ff 00            	cmp dword ptr [ebp - 0xd8], 0
0x804a762:   0f 84 fc 00 00 00               	je 0x804a864 <func_1+0x1021>
0x804a768:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a76c:   0f bf 55 b8                     	movsx edx, word ptr [ebp - 0x48]
0x804a770:   0f b7 4d ba                     	movzx ecx, word ptr [ebp - 0x46]
0x804a774:   0f b6 5d c3                     	movzx ebx, byte ptr [ebp - 0x3d]
0x804a778:   0f be b5 59 ff ff ff            	movsx esi, byte ptr [ebp - 0xa7]
0x804a77f:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x804a785:   0f bf bd 5a ff ff ff            	movsx edi, word ptr [ebp - 0xa6]
0x804a78c:   89 bd ac fe ff ff               	mov dword ptr [ebp - 0x154], edi
0x804a792:   0f be 75 d2                     	movsx esi, byte ptr [ebp - 0x2e]
0x804a796:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x804a79c:   0f be 7d d3                     	movsx edi, byte ptr [ebp - 0x2d]
0x804a7a0:   89 bd a4 fe ff ff               	mov dword ptr [ebp - 0x15c], edi
0x804a7a6:   0f b7 75 de                     	movzx esi, word ptr [ebp - 0x22]
0x804a7aa:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a7b0:   0f b7 7d e6                     	movzx edi, word ptr [ebp - 0x1a]
0x804a7b4:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x804a7ba:   0f b6 75 e9                     	movzx esi, byte ptr [ebp - 0x17]
0x804a7be:   89 b5 98 fe ff ff               	mov dword ptr [ebp - 0x168], esi
0x804a7c4:   0f b7 7d ea                     	movzx edi, word ptr [ebp - 0x16]
0x804a7c8:   89 bd 94 fe ff ff               	mov dword ptr [ebp - 0x16c], edi
0x804a7ce:   0f b7 7d f2                     	movzx edi, word ptr [ebp - 0xe]
0x804a7d2:   0f b7 b5 72 ff ff ff            	movzx esi, word ptr [ebp - 0x8e]
0x804a7d9:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a7dc:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a7df:   ff b5 54 ff ff ff               	push dword ptr [ebp - 0xac]
0x804a7e5:   50                              	push eax
0x804a7e6:   52                              	push edx
0x804a7e7:   51                              	push ecx
0x804a7e8:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a7eb:   53                              	push ebx
0x804a7ec:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a7ef:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a7f2:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a7f8:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a7fb:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a801:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804a807:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a80d:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a813:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a819:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a81f:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a822:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a825:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a82b:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a82e:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a834:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a83a:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a840:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a846:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a849:   57                              	push edi
0x804a84a:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a850:   56                              	push esi
0x804a851:   e8 fe ed ff ff                  	call 0x8049654 <set_var>
0x804a856:   83 c4 78                        	add esp, 0x78
0x804a859:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a85f:   e9 ed 01 00 00                  	jmp 0x804aa51 <func_1+0x120e>
0x804a864:   66 c7 85 26 ff ff ff fb ff      	mov word ptr [ebp - 0xda], 0xfffb
0x804a86d:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a870:   83 c8 06                        	or eax, 6
0x804a873:   0f b6 d0                        	movzx edx, al
0x804a876:   89 d0                           	mov eax, edx
0x804a878:   01 c0                           	add eax, eax
0x804a87a:   01 d0                           	add eax, edx
0x804a87c:   c1 e0 05                        	shl eax, 5
0x804a87f:   0f bf 85 26 ff ff ff            	movsx eax, word ptr [ebp - 0xda]
0x804a886:   3d f7 ff 00 00                  	cmp eax, 0xfff7
0x804a88b:   0f 97 c0                        	seta al
0x804a88e:   0f b6 c0                        	movzx eax, al
0x804a891:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a894:   81 8d 78 ff ff ff ac 3e 78 39   	or dword ptr [ebp - 0x88], 0x39783eac
0x804a89e:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x804a8a5:   89 c1                           	mov ecx, eax
0x804a8a7:   0f b7 85 4a ff ff ff            	movzx eax, word ptr [ebp - 0xb6]
0x804a8ae:   89 c2                           	mov edx, eax
0x804a8b0:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a8b6:   29 c2                           	sub edx, eax
0x804a8b8:   89 d0                           	mov eax, edx
0x804a8ba:   0f be c0                        	movsx eax, al
0x804a8bd:   0f b7 95 34 ff ff ff            	movzx edx, word ptr [ebp - 0xcc]
0x804a8c4:   0f be da                        	movsx ebx, dl
0x804a8c7:   99                              	cdq 
0x804a8c8:   f7 fb                           	idiv ebx
0x804a8ca:   f7 d0                           	not eax
0x804a8cc:   89 c2                           	mov edx, eax
0x804a8ce:   89 c8                           	mov eax, ecx
0x804a8d0:   0f af c2                        	imul eax, edx
0x804a8d3:   88 45 e9                        	mov byte ptr [ebp - 0x17], al
0x804a8d6:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x804a8da:   c1 e0 04                        	shl eax, 4
0x804a8dd:   89 c2                           	mov edx, eax
0x804a8df:   66 83 fa ff                     	cmp dx, -1
0x804a8e3:   0f 93 c0                        	setae al
0x804a8e6:   0f b6 c0                        	movzx eax, al
0x804a8e9:   f7 d8                           	neg eax
0x804a8eb:   29 c2                           	sub edx, eax
0x804a8ed:   89 d0                           	mov eax, edx
0x804a8ef:   0f b7 c0                        	movzx eax, ax
0x804a8f2:   09 45 d8                        	or dword ptr [ebp - 0x28], eax
0x804a8f5:   0f bf 85 26 ff ff ff            	movsx eax, word ptr [ebp - 0xda]
0x804a8fc:   23 85 78 ff ff ff               	and eax, dword ptr [ebp - 0x88]
0x804a902:   89 c2                           	mov edx, eax
0x804a904:   0f b7 85 30 ff ff ff            	movzx eax, word ptr [ebp - 0xd0]
0x804a90b:   39 c2                           	cmp edx, eax
0x804a90d:   0f 9f c0                        	setg al
0x804a910:   0f b6 c0                        	movzx eax, al
0x804a913:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a916:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a919:   89 c2                           	mov edx, eax
0x804a91b:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a91f:   31 d0                           	xor eax, edx
0x804a921:   0f b7 d0                        	movzx edx, ax
0x804a924:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x804a92b:   0f b7 c0                        	movzx eax, ax
0x804a92e:   0f af c2                        	imul eax, edx
0x804a931:   31 45 ac                        	xor dword ptr [ebp - 0x54], eax
0x804a934:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a937:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804a93d:   c7 45 a8 18 00 00 00            	mov dword ptr [ebp - 0x58], 0x18
0x804a944:   eb 0d                           	jmp 0x804a953 <func_1+0x1110>
0x804a946:   83 bd 78 ff ff ff 00            	cmp dword ptr [ebp - 0x88], 0
0x804a94d:   75 0c                           	jne 0x804a95b <func_1+0x1118>
0x804a94f:   83 45 a8 08                     	add dword ptr [ebp - 0x58], 8
0x804a953:   83 7d a8 3a                     	cmp dword ptr [ebp - 0x58], 0x3a
0x804a957:   76 ed                           	jbe 0x804a946 <func_1+0x1103>
0x804a959:   eb 01                           	jmp 0x804a95c <func_1+0x1119>
0x804a95b:   90                              	nop 
0x804a95c:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a960:   0f bf 55 b8                     	movsx edx, word ptr [ebp - 0x48]
0x804a964:   0f b7 4d ba                     	movzx ecx, word ptr [ebp - 0x46]
0x804a968:   0f b6 5d c3                     	movzx ebx, byte ptr [ebp - 0x3d]
0x804a96c:   0f be b5 59 ff ff ff            	movsx esi, byte ptr [ebp - 0xa7]
0x804a973:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x804a979:   0f bf bd 5a ff ff ff            	movsx edi, word ptr [ebp - 0xa6]
0x804a980:   89 bd ac fe ff ff               	mov dword ptr [ebp - 0x154], edi
0x804a986:   0f be 75 d2                     	movsx esi, byte ptr [ebp - 0x2e]
0x804a98a:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x804a990:   0f be 7d d3                     	movsx edi, byte ptr [ebp - 0x2d]
0x804a994:   89 bd a4 fe ff ff               	mov dword ptr [ebp - 0x15c], edi
0x804a99a:   0f b7 75 de                     	movzx esi, word ptr [ebp - 0x22]
0x804a99e:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a9a4:   0f b7 7d e6                     	movzx edi, word ptr [ebp - 0x1a]
0x804a9a8:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x804a9ae:   0f b6 75 e9                     	movzx esi, byte ptr [ebp - 0x17]
0x804a9b2:   89 b5 98 fe ff ff               	mov dword ptr [ebp - 0x168], esi
0x804a9b8:   0f b7 7d ea                     	movzx edi, word ptr [ebp - 0x16]
0x804a9bc:   89 bd 94 fe ff ff               	mov dword ptr [ebp - 0x16c], edi
0x804a9c2:   0f b7 7d f2                     	movzx edi, word ptr [ebp - 0xe]
0x804a9c6:   0f b7 b5 72 ff ff ff            	movzx esi, word ptr [ebp - 0x8e]
0x804a9cd:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a9d0:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a9d3:   ff b5 54 ff ff ff               	push dword ptr [ebp - 0xac]
0x804a9d9:   50                              	push eax
0x804a9da:   52                              	push edx
0x804a9db:   51                              	push ecx
0x804a9dc:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a9df:   53                              	push ebx
0x804a9e0:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a9e3:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a9e6:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a9ec:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a9ef:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a9f5:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804a9fb:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804aa01:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804aa07:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804aa0d:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804aa13:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804aa16:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804aa19:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804aa1f:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804aa22:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804aa28:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804aa2e:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804aa34:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804aa3a:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804aa3d:   57                              	push edi
0x804aa3e:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804aa44:   56                              	push esi
0x804aa45:   e8 0a ec ff ff                  	call 0x8049654 <set_var>
0x804aa4a:   83 c4 78                        	add esp, 0x78
0x804aa4d:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x804aa51:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804aa54:   5b                              	pop ebx
0x804aa55:   5e                              	pop esi
0x804aa56:   5f                              	pop edi
0x804aa57:   5d                              	pop ebp
0x804aa58:   c3                              	ret 
; function: main at 0x804aa59 -- 0x804ae67
0x804aa59:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804aa5d:   83 e4 f0                        	and esp, 0xfffffff0
0x804aa60:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804aa63:   55                              	push ebp
0x804aa64:   89 e5                           	mov ebp, esp
0x804aa66:   53                              	push ebx
0x804aa67:   51                              	push ecx
0x804aa68:   83 ec 10                        	sub esp, 0x10
0x804aa6b:   e8 20 d9 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aa70:   81 c3 90 25 00 00               	add ebx, 0x2590
0x804aa76:   89 c8                           	mov eax, ecx
0x804aa78:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804aa7f:   83 38 02                        	cmp dword ptr [eax], 2
0x804aa82:   75 26                           	jne 0x804aaaa <main+0x51>
0x804aa84:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804aa87:   83 c0 04                        	add eax, 4
0x804aa8a:   8b 00                           	mov eax, dword ptr [eax]
0x804aa8c:   83 ec 08                        	sub esp, 8
0x804aa8f:   8d 93 4c df ff ff               	lea edx, [ebx - 0x20b4]
0x804aa95:   52                              	push edx
0x804aa96:   50                              	push eax
0x804aa97:   e8 64 d8 ff ff                  	call 0x8048300 <strcmp>
0x804aa9c:   83 c4 10                        	add esp, 0x10
0x804aa9f:   85 c0                           	test eax, eax
0x804aaa1:   75 07                           	jne 0x804aaaa <main+0x51>
0x804aaa3:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804aaaa:   e8 a7 d9 ff ff                  	call 0x8048456 <platform_main_begin>
0x804aaaf:   e8 b7 e9 ff ff                  	call 0x804946b <crc32_gentab>
0x804aab4:   e8 8a ed ff ff                  	call 0x8049843 <func_1>
0x804aab9:   0f b7 83 24 00 00 00            	movzx eax, word ptr [ebx + 0x24]
0x804aac0:   0f b7 c0                        	movzx eax, ax
0x804aac3:   83 ec 04                        	sub esp, 4
0x804aac6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aac9:   8d 93 4e df ff ff               	lea edx, [ebx - 0x20b2]
0x804aacf:   52                              	push edx
0x804aad0:   50                              	push eax
0x804aad1:   e8 a1 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aad6:   83 c4 10                        	add esp, 0x10
0x804aad9:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804aadf:   83 ec 04                        	sub esp, 4
0x804aae2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aae5:   8d 93 53 df ff ff               	lea edx, [ebx - 0x20ad]
0x804aaeb:   52                              	push edx
0x804aaec:   50                              	push eax
0x804aaed:   e8 85 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaf2:   83 c4 10                        	add esp, 0x10
0x804aaf5:   0f b7 83 a4 04 00 00            	movzx eax, word ptr [ebx + 0x4a4]
0x804aafc:   0f b7 c0                        	movzx eax, ax
0x804aaff:   83 ec 04                        	sub esp, 4
0x804ab02:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab05:   8d 93 58 df ff ff               	lea edx, [ebx - 0x20a8]
0x804ab0b:   52                              	push edx
0x804ab0c:   50                              	push eax
0x804ab0d:   e8 65 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab12:   83 c4 10                        	add esp, 0x10
0x804ab15:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804ab1b:   83 ec 04                        	sub esp, 4
0x804ab1e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab21:   8d 93 5d df ff ff               	lea edx, [ebx - 0x20a3]
0x804ab27:   52                              	push edx
0x804ab28:   50                              	push eax
0x804ab29:   e8 49 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab2e:   83 c4 10                        	add esp, 0x10
0x804ab31:   0f b7 83 30 00 00 00            	movzx eax, word ptr [ebx + 0x30]
0x804ab38:   0f b7 c0                        	movzx eax, ax
0x804ab3b:   83 ec 04                        	sub esp, 4
0x804ab3e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab41:   8d 93 62 df ff ff               	lea edx, [ebx - 0x209e]
0x804ab47:   52                              	push edx
0x804ab48:   50                              	push eax
0x804ab49:   e8 29 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab4e:   83 c4 10                        	add esp, 0x10
0x804ab51:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804ab57:   89 c2                           	mov edx, eax
0x804ab59:   83 ec 04                        	sub esp, 4
0x804ab5c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab5f:   8d 83 67 df ff ff               	lea eax, [ebx - 0x2099]
0x804ab65:   50                              	push eax
0x804ab66:   52                              	push edx
0x804ab67:   e8 0b ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab6c:   83 c4 10                        	add esp, 0x10
0x804ab6f:   0f b6 83 38 00 00 00            	movzx eax, byte ptr [ebx + 0x38]
0x804ab76:   0f b6 c0                        	movzx eax, al
0x804ab79:   83 ec 04                        	sub esp, 4
0x804ab7c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab7f:   8d 93 6c df ff ff               	lea edx, [ebx - 0x2094]
0x804ab85:   52                              	push edx
0x804ab86:   50                              	push eax
0x804ab87:   e8 eb e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab8c:   83 c4 10                        	add esp, 0x10
0x804ab8f:   0f b7 83 3a 00 00 00            	movzx eax, word ptr [ebx + 0x3a]
0x804ab96:   0f b7 c0                        	movzx eax, ax
0x804ab99:   83 ec 04                        	sub esp, 4
0x804ab9c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab9f:   8d 93 71 df ff ff               	lea edx, [ebx - 0x208f]
0x804aba5:   52                              	push edx
0x804aba6:   50                              	push eax
0x804aba7:   e8 cb e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abac:   83 c4 10                        	add esp, 0x10
0x804abaf:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804abb5:   89 c2                           	mov edx, eax
0x804abb7:   83 ec 04                        	sub esp, 4
0x804abba:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abbd:   8d 83 76 df ff ff               	lea eax, [ebx - 0x208a]
0x804abc3:   50                              	push eax
0x804abc4:   52                              	push edx
0x804abc5:   e8 ad e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abca:   83 c4 10                        	add esp, 0x10
0x804abcd:   0f b7 83 40 00 00 00            	movzx eax, word ptr [ebx + 0x40]
0x804abd4:   0f b7 c0                        	movzx eax, ax
0x804abd7:   83 ec 04                        	sub esp, 4
0x804abda:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abdd:   8d 93 7b df ff ff               	lea edx, [ebx - 0x2085]
0x804abe3:   52                              	push edx
0x804abe4:   50                              	push eax
0x804abe5:   e8 8d e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abea:   83 c4 10                        	add esp, 0x10
0x804abed:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804abf3:   89 c2                           	mov edx, eax
0x804abf5:   83 ec 04                        	sub esp, 4
0x804abf8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abfb:   8d 83 80 df ff ff               	lea eax, [ebx - 0x2080]
0x804ac01:   50                              	push eax
0x804ac02:   52                              	push edx
0x804ac03:   e8 6f e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac08:   83 c4 10                        	add esp, 0x10
0x804ac0b:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804ac11:   83 ec 04                        	sub esp, 4
0x804ac14:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac17:   8d 93 85 df ff ff               	lea edx, [ebx - 0x207b]
0x804ac1d:   52                              	push edx
0x804ac1e:   50                              	push eax
0x804ac1f:   e8 53 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac24:   83 c4 10                        	add esp, 0x10
0x804ac27:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804ac2d:   83 ec 04                        	sub esp, 4
0x804ac30:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac33:   8d 93 8a df ff ff               	lea edx, [ebx - 0x2076]
0x804ac39:   52                              	push edx
0x804ac3a:   50                              	push eax
0x804ac3b:   e8 37 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac40:   83 c4 10                        	add esp, 0x10
0x804ac43:   0f b6 83 50 00 00 00            	movzx eax, byte ptr [ebx + 0x50]
0x804ac4a:   0f be c0                        	movsx eax, al
0x804ac4d:   83 ec 04                        	sub esp, 4
0x804ac50:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac53:   8d 93 8f df ff ff               	lea edx, [ebx - 0x2071]
0x804ac59:   52                              	push edx
0x804ac5a:   50                              	push eax
0x804ac5b:   e8 17 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac60:   83 c4 10                        	add esp, 0x10
0x804ac63:   0f b6 83 51 00 00 00            	movzx eax, byte ptr [ebx + 0x51]
0x804ac6a:   0f be c0                        	movsx eax, al
0x804ac6d:   83 ec 04                        	sub esp, 4
0x804ac70:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac73:   8d 93 95 df ff ff               	lea edx, [ebx - 0x206b]
0x804ac79:   52                              	push edx
0x804ac7a:   50                              	push eax
0x804ac7b:   e8 f7 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac80:   83 c4 10                        	add esp, 0x10
0x804ac83:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804ac89:   89 c2                           	mov edx, eax
0x804ac8b:   83 ec 04                        	sub esp, 4
0x804ac8e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac91:   8d 83 9b df ff ff               	lea eax, [ebx - 0x2065]
0x804ac97:   50                              	push eax
0x804ac98:   52                              	push edx
0x804ac99:   e8 d9 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac9e:   83 c4 10                        	add esp, 0x10
0x804aca1:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804aca7:   83 ec 04                        	sub esp, 4
0x804acaa:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acad:   8d 93 a1 df ff ff               	lea edx, [ebx - 0x205f]
0x804acb3:   52                              	push edx
0x804acb4:   50                              	push eax
0x804acb5:   e8 bd e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acba:   83 c4 10                        	add esp, 0x10
0x804acbd:   0f b7 83 5c 00 00 00            	movzx eax, word ptr [ebx + 0x5c]
0x804acc4:   98                              	cwde 
0x804acc5:   83 ec 04                        	sub esp, 4
0x804acc8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804accb:   8d 93 a7 df ff ff               	lea edx, [ebx - 0x2059]
0x804acd1:   52                              	push edx
0x804acd2:   50                              	push eax
0x804acd3:   e8 9f e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acd8:   83 c4 10                        	add esp, 0x10
0x804acdb:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804ace1:   83 ec 04                        	sub esp, 4
0x804ace4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ace7:   8d 93 ad df ff ff               	lea edx, [ebx - 0x2053]
0x804aced:   52                              	push edx
0x804acee:   50                              	push eax
0x804acef:   e8 83 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acf4:   83 c4 10                        	add esp, 0x10
0x804acf7:   0f b6 83 64 00 00 00            	movzx eax, byte ptr [ebx + 0x64]
0x804acfe:   0f be c0                        	movsx eax, al
0x804ad01:   83 ec 04                        	sub esp, 4
0x804ad04:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad07:   8d 93 b3 df ff ff               	lea edx, [ebx - 0x204d]
0x804ad0d:   52                              	push edx
0x804ad0e:   50                              	push eax
0x804ad0f:   e8 63 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad14:   83 c4 10                        	add esp, 0x10
0x804ad17:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804ad1d:   89 c2                           	mov edx, eax
0x804ad1f:   83 ec 04                        	sub esp, 4
0x804ad22:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad25:   8d 83 b9 df ff ff               	lea eax, [ebx - 0x2047]
0x804ad2b:   50                              	push eax
0x804ad2c:   52                              	push edx
0x804ad2d:   e8 45 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad32:   83 c4 10                        	add esp, 0x10
0x804ad35:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804ad3b:   83 ec 04                        	sub esp, 4
0x804ad3e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad41:   8d 93 bf df ff ff               	lea edx, [ebx - 0x2041]
0x804ad47:   52                              	push edx
0x804ad48:   50                              	push eax
0x804ad49:   e8 29 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad4e:   83 c4 10                        	add esp, 0x10
0x804ad51:   0f b6 83 70 00 00 00            	movzx eax, byte ptr [ebx + 0x70]
0x804ad58:   0f b6 c0                        	movzx eax, al
0x804ad5b:   83 ec 04                        	sub esp, 4
0x804ad5e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad61:   8d 93 c5 df ff ff               	lea edx, [ebx - 0x203b]
0x804ad67:   52                              	push edx
0x804ad68:   50                              	push eax
0x804ad69:   e8 09 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad6e:   83 c4 10                        	add esp, 0x10
0x804ad71:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804ad77:   83 ec 04                        	sub esp, 4
0x804ad7a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad7d:   8d 93 cb df ff ff               	lea edx, [ebx - 0x2035]
0x804ad83:   52                              	push edx
0x804ad84:   50                              	push eax
0x804ad85:   e8 ed e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad8a:   83 c4 10                        	add esp, 0x10
0x804ad8d:   0f b7 83 ac 04 00 00            	movzx eax, word ptr [ebx + 0x4ac]
0x804ad94:   0f b7 c0                        	movzx eax, ax
0x804ad97:   83 ec 04                        	sub esp, 4
0x804ad9a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad9d:   8d 93 d1 df ff ff               	lea edx, [ebx - 0x202f]
0x804ada3:   52                              	push edx
0x804ada4:   50                              	push eax
0x804ada5:   e8 cd e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adaa:   83 c4 10                        	add esp, 0x10
0x804adad:   0f b7 83 72 00 00 00            	movzx eax, word ptr [ebx + 0x72]
0x804adb4:   98                              	cwde 
0x804adb5:   83 ec 04                        	sub esp, 4
0x804adb8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adbb:   8d 93 d7 df ff ff               	lea edx, [ebx - 0x2029]
0x804adc1:   52                              	push edx
0x804adc2:   50                              	push eax
0x804adc3:   e8 af e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adc8:   83 c4 10                        	add esp, 0x10
0x804adcb:   0f b6 83 74 00 00 00            	movzx eax, byte ptr [ebx + 0x74]
0x804add2:   0f b6 c0                        	movzx eax, al
0x804add5:   83 ec 04                        	sub esp, 4
0x804add8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804addb:   8d 93 dd df ff ff               	lea edx, [ebx - 0x2023]
0x804ade1:   52                              	push edx
0x804ade2:   50                              	push eax
0x804ade3:   e8 8f e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ade8:   83 c4 10                        	add esp, 0x10
0x804adeb:   8b 83 78 00 00 00               	mov eax, dword ptr [ebx + 0x78]
0x804adf1:   83 ec 04                        	sub esp, 4
0x804adf4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adf7:   8d 93 e3 df ff ff               	lea edx, [ebx - 0x201d]
0x804adfd:   52                              	push edx
0x804adfe:   50                              	push eax
0x804adff:   e8 73 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae04:   83 c4 10                        	add esp, 0x10
0x804ae07:   8b 83 b0 04 00 00               	mov eax, dword ptr [ebx + 0x4b0]
0x804ae0d:   83 ec 04                        	sub esp, 4
0x804ae10:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae13:   8d 93 e9 df ff ff               	lea edx, [ebx - 0x2017]
0x804ae19:   52                              	push edx
0x804ae1a:   50                              	push eax
0x804ae1b:   e8 57 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae20:   83 c4 10                        	add esp, 0x10
0x804ae23:   8b 83 7c 00 00 00               	mov eax, dword ptr [ebx + 0x7c]
0x804ae29:   89 c2                           	mov edx, eax
0x804ae2b:   83 ec 04                        	sub esp, 4
0x804ae2e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae31:   8d 83 ef df ff ff               	lea eax, [ebx - 0x2011]
0x804ae37:   50                              	push eax
0x804ae38:   52                              	push edx
0x804ae39:   e8 39 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae3e:   83 c4 10                        	add esp, 0x10
0x804ae41:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ae47:   f7 d0                           	not eax
0x804ae49:   83 ec 08                        	sub esp, 8
0x804ae4c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae4f:   50                              	push eax
0x804ae50:   e8 11 d6 ff ff                  	call 0x8048466 <platform_main_end>
0x804ae55:   83 c4 10                        	add esp, 0x10
0x804ae58:   b8 00 00 00 00                  	mov eax, 0
0x804ae5d:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ae60:   59                              	pop ecx
0x804ae61:   5b                              	pop ebx
0x804ae62:   5d                              	pop ebp
0x804ae63:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ae66:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ae67 -- 0x804ae6b
0x804ae67:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ae6a:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804ae6b -- 0x804ae6f
0x804ae6b:   8b 14 24                        	mov edx, dword ptr [esp]
0x804ae6e:   c3                              	ret 
; data inside code section at 0x804ae6f -- 0x804ae70
0x804ae6f:   90                                                 |.               |
; function: __libc_csu_init at 0x804ae70 -- 0x804aecd
0x804ae70:   55                              	push ebp
0x804ae71:   57                              	push edi
0x804ae72:   56                              	push esi
0x804ae73:   53                              	push ebx
0x804ae74:   e8 17 d5 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ae79:   81 c3 87 21 00 00               	add ebx, 0x2187
0x804ae7f:   83 ec 0c                        	sub esp, 0xc
0x804ae82:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ae86:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ae8c:   e8 3b d4 ff ff                  	call 0x80482cc <_init>
0x804ae91:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804ae97:   29 c6                           	sub esi, eax
0x804ae99:   c1 fe 02                        	sar esi, 2
0x804ae9c:   85 f6                           	test esi, esi
0x804ae9e:   74 25                           	je 0x804aec5 <__libc_csu_init+0x55>
0x804aea0:   31 ff                           	xor edi, edi
0x804aea2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804aea8:   83 ec 04                        	sub esp, 4
0x804aeab:   55                              	push ebp
0x804aeac:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804aeb0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804aeb4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804aebb:   83 c7 01                        	add edi, 1
0x804aebe:   83 c4 10                        	add esp, 0x10
0x804aec1:   39 fe                           	cmp esi, edi
0x804aec3:   75 e3                           	jne 0x804aea8 <__libc_csu_init+0x38>
0x804aec5:   83 c4 0c                        	add esp, 0xc
0x804aec8:   5b                              	pop ebx
0x804aec9:   5e                              	pop esi
0x804aeca:   5f                              	pop edi
0x804aecb:   5d                              	pop ebp
0x804aecc:   c3                              	ret 
; data inside code section at 0x804aecd -- 0x804aed0
0x804aecd:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804aed0 -- 0x804aed2
0x804aed0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804aed4 -- 0x804aee8
0x804aed4:   53                              	push ebx
0x804aed5:   83 ec 08                        	sub esp, 8
0x804aed8:   e8 b3 d4 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aedd:   81 c3 23 21 00 00               	add ebx, 0x2123
0x804aee3:   83 c4 08                        	add esp, 8
0x804aee6:   5b                              	pop ebx
0x804aee7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 ec ae 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804aee8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804aef8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804af08:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804af18:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804af28:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804af38:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804af48:   25 64 0a 00 31 00 67 5f  31 31 00 67 5f 31 34 00   |%d..1.g_11.g_14.|
0x804af58:   67 5f 31 35 00 67 5f 31  38 00 67 5f 33 31 00 67   |g_15.g_18.g_31.g|
0x804af68:   5f 33 35 00 67 5f 35 35  00 67 5f 36 33 00 67 5f   |_35.g_55.g_63.g_|
0x804af78:   37 36 00 67 5f 38 32 00  67 5f 38 37 00 67 5f 38   |76.g_82.g_87.g_8|
0x804af88:   38 00 67 5f 39 39 00 67  5f 31 34 33 00 67 5f 31   |8.g_99.g_143.g_1|
0x804af98:   34 34 00 67 5f 31 34 35  00 67 5f 31 38 34 00 67   |44.g_145.g_184.g|
0x804afa8:   5f 32 32 38 00 67 5f 32  33 30 00 67 5f 32 35 36   |_228.g_230.g_256|
0x804afb8:   00 67 5f 32 37 35 00 67  5f 32 37 36 00 67 5f 33   |.g_275.g_276.g_3|
0x804afc8:   30 30 00 67 5f 33 33 36  00 67 5f 33 35 31 00 67   |00.g_336.g_351.g|
0x804afd8:   5f 33 37 32 00 67 5f 33  37 35 00 67 5f 33 39 35   |_372.g_375.g_395|
0x804afe8:   00 67 5f 34 31 36 00 67  5f 34 31 37 00 00 00 00   |.g_416.g_417....|
0x804aff8:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804b008:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804b018:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804b028:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804b038:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804b048:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804b058:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804b060:   01 1b 03 3b c0 02 00 00  57 00 00 00 90 d2 ff ff   |...;....W.......|
0x804b070:   f0 02 00 00 d0 d2 ff ff  14 03 00 00 20 d3 ff ff   |............ ...|
0x804b080:   dc 02 00 00 f6 d3 ff ff  28 03 00 00 06 d4 ff ff   |........(.......|
0x804b090:   48 03 00 00 34 d4 ff ff  6c 03 00 00 52 d4 ff ff   |H...4...l...R...|
0x804b0a0:   8c 03 00 00 7a d4 ff ff  ac 03 00 00 a4 d4 ff ff   |....z...........|
0x804b0b0:   cc 03 00 00 cd d4 ff ff  ec 03 00 00 10 d5 ff ff   |................|
0x804b0c0:   0c 04 00 00 51 d5 ff ff  2c 04 00 00 a9 d5 ff ff   |....Q...,.......|
0x804b0d0:   50 04 00 00 fb d5 ff ff  74 04 00 00 38 d6 ff ff   |P.......t...8...|
0x804b0e0:   94 04 00 00 6f d6 ff ff  b4 04 00 00 8e d6 ff ff   |....o...........|
0x804b0f0:   d4 04 00 00 b8 d6 ff ff  f4 04 00 00 e4 d6 ff ff   |................|
0x804b100:   14 05 00 00 0f d7 ff ff  34 05 00 00 58 d7 ff ff   |........4...X...|
0x804b110:   54 05 00 00 9f d7 ff ff  74 05 00 00 f9 d7 ff ff   |T.......t.......|
0x804b120:   98 05 00 00 4d d8 ff ff  bc 05 00 00 8c d8 ff ff   |....M...........|
0x804b130:   dc 05 00 00 c5 d8 ff ff  fc 05 00 00 e7 d8 ff ff   |................|
0x804b140:   1c 06 00 00 35 d9 ff ff  3c 06 00 00 71 d9 ff ff   |....5...<...q...|
0x804b150:   5c 06 00 00 fa d9 ff ff  7c 06 00 00 2c da ff ff   |\.......|...,...|
0x804b160:   9c 06 00 00 5c da ff ff  bc 06 00 00 a1 da ff ff   |....\...........|
0x804b170:   dc 06 00 00 e0 da ff ff  fc 06 00 00 12 db ff ff   |................|
0x804b180:   1c 07 00 00 3e db ff ff  3c 07 00 00 5c db ff ff   |....>...<...\...|
0x804b190:   5c 07 00 00 84 db ff ff  7c 07 00 00 a9 db ff ff   |\.......|.......|
0x804b1a0:   9c 07 00 00 ce db ff ff  bc 07 00 00 05 dc ff ff   |................|
0x804b1b0:   dc 07 00 00 39 dc ff ff  fc 07 00 00 8b dc ff ff   |....9...........|
0x804b1c0:   20 08 00 00 d7 dc ff ff  44 08 00 00 0e dd ff ff   | .......D.......|
0x804b1d0:   64 08 00 00 3f dd ff ff  84 08 00 00 5e dd ff ff   |d...?.......^...|
0x804b1e0:   a4 08 00 00 88 dd ff ff  c4 08 00 00 b0 dd ff ff   |................|
0x804b1f0:   e4 08 00 00 d9 dd ff ff  04 09 00 00 15 de ff ff   |................|
0x804b200:   24 09 00 00 4f de ff ff  44 09 00 00 a2 de ff ff   |$...O...D.......|
0x804b210:   68 09 00 00 ef de ff ff  8c 09 00 00 27 df ff ff   |h...........'...|
0x804b220:   ac 09 00 00 59 df ff ff  cc 09 00 00 6d df ff ff   |....Y.......m...|
0x804b230:   ec 09 00 00 84 df ff ff  0c 0a 00 00 99 df ff ff   |................|
0x804b240:   2c 0a 00 00 af df ff ff  4c 0a 00 00 d6 df ff ff   |,.......L.......|
0x804b250:   6c 0a 00 00 fb df ff ff  8c 0a 00 00 3a e0 ff ff   |l...........:...|
0x804b260:   ac 0a 00 00 73 e0 ff ff  cc 0a 00 00 9f e0 ff ff   |....s...........|
0x804b270:   ec 0a 00 00 c5 e0 ff ff  0c 0b 00 00 07 e1 ff ff   |................|
0x804b280:   2c 0b 00 00 49 e1 ff ff  4c 0b 00 00 8b e1 ff ff   |,...I...L.......|
0x804b290:   6c 0b 00 00 00 e2 ff ff  8c 0b 00 00 5d e2 ff ff   |l...........]...|
0x804b2a0:   ac 0b 00 00 ba e2 ff ff  cc 0b 00 00 17 e3 ff ff   |................|
0x804b2b0:   ec 0b 00 00 a7 e3 ff ff  0c 0c 00 00 0b e4 ff ff   |................|
0x804b2c0:   2c 0c 00 00 7b e4 ff ff  4c 0c 00 00 c2 e4 ff ff   |,...{...L.......|
0x804b2d0:   70 0c 00 00 17 e5 ff ff  90 0c 00 00 5e e5 ff ff   |p...........^...|
0x804b2e0:   b4 0c 00 00 c6 e5 ff ff  d8 0c 00 00 f4 e5 ff ff   |................|
0x804b2f0:   fc 0c 00 00 e3 e7 ff ff  2c 0d 00 00 f9 f9 ff ff   |........,.......|
0x804b300:   5c 0d 00 00 07 fe ff ff  94 0d 00 00 0b fe ff ff   |\...............|
0x804b310:   a8 0d 00 00 10 fe ff ff  bc 0d 00 00 70 fe ff ff   |............p...|
0x804b320:   08 0e 00 00 14                                     |.....           |
; section: .eh_frame
0x804b324:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b334:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b344:   3c d0 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |<........... ...|
0x804b354:   30 00 00 00 98 cf ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b364:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b374:   10 00 00 00 54 00 00 00  b4 cf ff ff 08 00 00 00   |....T...........|
0x804b384:   00 00 00 00 1c 00 00 00  68 00 00 00 c6 d0 ff ff   |........h.......|
0x804b394:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b3a4:   04 04 00 00 20 00 00 00  88 00 00 00 b6 d0 ff ff   |.... ...........|
0x804b3b4:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b3c4:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b3d4:   c0 d0 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b3e4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b3f4:   be d0 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b404:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b414:   c6 d0 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b424:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b434:   d0 d0 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b444:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b454:   d9 d0 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b464:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b474:   fc d0 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b484:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b494:   1d d1 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b4a4:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b4b4:   90 01 00 00 51 d1 ff ff  52 00 00 00 00 41 0e 08   |....Q...R....A..|
0x804b4c4:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b4d4:   1c 00 00 00 b4 01 00 00  7f d1 ff ff 3d 00 00 00   |............=...|
0x804b4e4:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b4f4:   1c 00 00 00 d4 01 00 00  9c d1 ff ff 37 00 00 00   |............7...|
0x804b504:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b514:   1c 00 00 00 f4 01 00 00  b3 d1 ff ff 1f 00 00 00   |................|
0x804b524:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b534:   1c 00 00 00 14 02 00 00  b2 d1 ff ff 2a 00 00 00   |............*...|
0x804b544:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b554:   1c 00 00 00 34 02 00 00  bc d1 ff ff 2c 00 00 00   |....4.......,...|
0x804b564:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b574:   1c 00 00 00 54 02 00 00  c8 d1 ff ff 2b 00 00 00   |....T.......+...|
0x804b584:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b594:   1c 00 00 00 74 02 00 00  d3 d1 ff ff 49 00 00 00   |....t.......I...|
0x804b5a4:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b5b4:   1c 00 00 00 94 02 00 00  fc d1 ff ff 47 00 00 00   |............G...|
0x804b5c4:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b5d4:   20 00 00 00 b4 02 00 00  23 d2 ff ff 5a 00 00 00   | .......#...Z...|
0x804b5e4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b5f4:   c5 0c 04 04 20 00 00 00  d8 02 00 00 59 d2 ff ff   |.... .......Y...|
0x804b604:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b614:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b624:   89 d2 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b634:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b644:   a8 d2 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b654:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b664:   c1 d2 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b674:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b684:   c3 d2 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b694:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b6a4:   f1 d2 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b6b4:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b6c4:   0d d3 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b6d4:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b6e4:   76 d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |v...2....A....B.|
0x804b6f4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b704:   88 d3 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b714:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b724:   98 d3 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b734:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b744:   bd d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b754:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b764:   dc d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b774:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b784:   ee d3 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b794:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b7a4:   fa d3 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b7b4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b7c4:   f8 d3 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b7d4:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b7e4:   00 d4 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b7f4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b804:   05 d4 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b814:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b824:   0a d4 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b834:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b844:   21 d4 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |!...4....A....B.|
0x804b854:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b864:   35 d4 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |5...R....A....B.|
0x804b874:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b884:   60 05 00 00 63 d4 ff ff  4c 00 00 00 00 41 0e 08   |`...c...L....A..|
0x804b894:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b8a4:   1c 00 00 00 84 05 00 00  8b d4 ff ff 37 00 00 00   |............7...|
0x804b8b4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b8c4:   1c 00 00 00 a4 05 00 00  a2 d4 ff ff 31 00 00 00   |............1...|
0x804b8d4:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b8e4:   1c 00 00 00 c4 05 00 00  b3 d4 ff ff 1f 00 00 00   |................|
0x804b8f4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b904:   1c 00 00 00 e4 05 00 00  b2 d4 ff ff 2a 00 00 00   |............*...|
0x804b914:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b924:   1c 00 00 00 04 06 00 00  bc d4 ff ff 28 00 00 00   |............(...|
0x804b934:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b944:   1c 00 00 00 24 06 00 00  c4 d4 ff ff 29 00 00 00   |....$.......)...|
0x804b954:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b964:   1c 00 00 00 44 06 00 00  cd d4 ff ff 3c 00 00 00   |....D.......<...|
0x804b974:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b984:   1c 00 00 00 64 06 00 00  e9 d4 ff ff 3a 00 00 00   |....d.......:...|
0x804b994:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b9a4:   20 00 00 00 84 06 00 00  03 d5 ff ff 53 00 00 00   | ...........S...|
0x804b9b4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b9c4:   c5 0c 04 04 20 00 00 00  a8 06 00 00 32 d5 ff ff   |.... .......2...|
0x804b9d4:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b9e4:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b9f4:   5b d5 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |[...8....A....B.|
0x804ba04:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804ba14:   73 d5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |s...2....A....B.|
0x804ba24:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804ba34:   85 d5 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804ba44:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804ba54:   79 d5 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |y........A....B.|
0x804ba64:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804ba74:   70 d5 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |p........A....B.|
0x804ba84:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804ba94:   65 d5 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |e........A....B.|
0x804baa4:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bab4:   5b d5 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |[...'....A....B.|
0x804bac4:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bad4:   62 d5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |b...%....A....B.|
0x804bae4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804baf4:   67 d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |g...?....A....B.|
0x804bb04:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bb14:   86 d5 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bb24:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bb34:   9f d5 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bb44:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bb54:   ab d5 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804bb64:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bb74:   b1 d5 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bb84:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bb94:   d3 d5 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bba4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bbb4:   f5 d5 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bbc4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bbd4:   17 d6 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804bbe4:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bbf4:   6c d6 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |l...]....A....B.|
0x804bc04:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bc14:   a9 d6 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bc24:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bc34:   e6 d6 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bc44:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bc54:   23 d7 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |#........A....B.|
0x804bc64:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804bc74:   93 d7 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804bc84:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bc94:   d7 d7 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804bca4:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bcb4:   27 d8 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |'...G....A....B.|
0x804bcc4:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bcd4:   b0 09 00 00 4a d8 ff ff  55 00 00 00 00 41 0e 08   |....J...U....A..|
0x804bce4:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bcf4:   d0 09 00 00 7f d8 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804bd04:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bd14:   20 00 00 00 f4 09 00 00  a2 d8 ff ff 68 00 00 00   | ...........h...|
0x804bd24:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bd34:   0c 04 04 00 20 00 00 00  18 0a 00 00 e6 d8 ff ff   |.... ...........|
0x804bd44:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804bd54:   66 c5 c3 0c 04 04 00 00  2c 00 00 00 3c 0a 00 00   |f.......,...<...|
0x804bd64:   f0 d8 ff ff ef 01 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bd74:   05 46 87 03 86 04 83 05  03 e2 01 c3 41 c6 41 c7   |.F..........A.A.|
0x804bd84:   41 c5 0c 04 04 00 00 00  2c 00 00 00 6c 0a 00 00   |A.......,...l...|
0x804bd94:   af da ff ff 16 12 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bda4:   05 49 87 03 86 04 83 05  03 06 12 c3 41 c6 41 c7   |.I..........A.A.|
0x804bdb4:   41 c5 0c 04 04 00 00 00  34 00 00 00 9c 0a 00 00   |A.......4.......|
0x804bdc4:   95 ec ff ff 0e 04 00 00  00 44 0c 01 00 47 10 05   |.........D...G..|
0x804bdd4:   02 75 00 44 0f 03 75 78  06 10 03 02 75 7c 03 f9   |.u.D..ux....u|..|
0x804bde4:   03 c1 0c 01 00 41 c3 41  c5 43 0c 04 04 00 00 00   |.....A.A.C......|
0x804bdf4:   10 00 00 00 d4 0a 00 00  6b f0 ff ff 04 00 00 00   |........k.......|
0x804be04:   00 00 00 00 10 00 00 00  e8 0a 00 00 5b f0 ff ff   |............[...|
0x804be14:   04 00 00 00 00 00 00 00  48 00 00 00 fc 0a 00 00   |........H.......|
0x804be24:   4c f0 ff ff 5d 00 00 00  00 41 0e 08 85 02 41 0e   |L...]....A....A.|
0x804be34:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 4e 0e 20   |...A....A....N. |
0x804be44:   69 0e 24 41 0e 28 44 0e  2c 44 0e 30 4d 0e 20 47   |i.$A.(D.,D.0M. G|
0x804be54:   0e 14 41 c3 0e 10 41 c6  0e 0c 41 c7 0e 08 41 c5   |..A...A...A...A.|
0x804be64:   0e 04 00 00 10 00 00 00  48 0b 00 00 60 f0 ff ff   |........H...`...|
0x804be74:   02 00 00 00 00 00 00 00  00 00 00 00 ??            |............?   |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 d4 ae 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff fe ff 00 00   |................|
0x804d028:   01 00 00 00 01 00 00 00  ff ff 00 00 5c c3 fb 7b   |............\..{|
0x804d038:   4b 00 b6 a1 03 00 00 00  ff ff 00 00 06 00 00 00   |K...............|
0x804d048:   f9 ff ff ff 07 00 00 00  db 08 00 00 59 ec 82 9f   |............Y...|
0x804d058:   fa ff ff ff fa ff 00 00  fd ff ff ff 37 00 00 00   |............7...|
0x804d068:   d4 c4 c8 b6 25 47 21 7c  ff 00 ff ff 41 00 00 00   |....%G!|....A...|
0x804d078:   e0 f1 37 51 01 00 00 00  00                        |..7Q.....       |
