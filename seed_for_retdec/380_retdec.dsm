;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:18:16
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 70 d9 ff ff               	lea eax, [ebx - 0x2690]
0x804835c:   50                              	push eax
0x804835d:   8d 83 10 d9 ff ff               	lea eax, [ebx - 0x26f0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 26 a6 04 08               	mov eax, 0x804a626
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 70 d0 04 08                  	mov eax, 0x804d070
0x80483a5:   3d 70 d0 04 08                  	cmp eax, 0x804d070
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 70 d0 04 08                  	push 0x804d070
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 70 d0 04 08                  	mov eax, 0x804d070
0x80483e5:   2d 70 d0 04 08                  	sub eax, 0x804d070
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 70 d0 04 08                  	push 0x804d070
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 a4 24 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 90 24 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 90 d9 ff ff               	lea edx, [eax - 0x2670]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 63 24 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 45 24 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 1d 24 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 f3 23 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 ca 23 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 87 23 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 45 23 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 ed 22 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 9c 22 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 5f 22 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 28 22 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 09 22 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 df 21 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 b3 21 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 88 21 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 3f 21 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 f7 20 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 9d 20 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 4a 20 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 0b 20 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 d5 1f 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 b3 1f 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 65 1f 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 29 1f 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 a0 1e 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 6e 1e 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 3e 1e 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 f9 1d 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 ba 1d 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 88 1d 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 59 1d 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 3b 1d 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 13 1d 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 ee 1c 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 c9 1c 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 92 1c 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 5d 1c 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 0b 1c 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 c0 1b 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 89 1b 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 58 1b 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 39 1b 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 0f 1b 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 e7 1a 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 be 1a 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 82 1a 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 47 1a 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 f4 19 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 a8 19 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 70 19 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 41 19 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 2d 19 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 16 19 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 01 19 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 eb 18 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 c4 18 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 9f 18 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 60 18 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 27 18 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 fb 17 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 d5 17 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 58 da ff ff               	fld dword ptr [eax - 0x25a8]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 58 da ff ff               	fld dword ptr [eax - 0x25a8]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 5c da ff ff               	fld dword ptr [eax - 0x25a4]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 93 17 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 58 da ff ff               	fld dword ptr [eax - 0x25a8]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 58 da ff ff               	fld dword ptr [eax - 0x25a8]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 5c da ff ff               	fld dword ptr [eax - 0x25a4]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 51 17 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 60 da ff ff               	fld dword ptr [eax - 0x25a0]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 64 da ff ff               	fld dword ptr [eax - 0x259c]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 68 da ff ff               	fld dword ptr [eax - 0x2598]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 0f 17 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 6c da ff ff               	fld dword ptr [eax - 0x2594]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 70 da ff ff               	fld dword ptr [eax - 0x2590]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 74 da ff ff               	fld dword ptr [eax - 0x258c]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 97 16 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 78 da ff ff               	fld qword ptr [eax - 0x2588]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 78 da ff ff               	fld qword ptr [eax - 0x2588]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 80 da ff ff               	fld qword ptr [eax - 0x2580]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 3a 16 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 78 da ff ff               	fld qword ptr [eax - 0x2588]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 78 da ff ff               	fld qword ptr [eax - 0x2588]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 80 da ff ff               	fld qword ptr [eax - 0x2580]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 dd 15 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 88 da ff ff               	fld qword ptr [eax - 0x2578]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 90 da ff ff               	fld qword ptr [eax - 0x2570]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 98 da ff ff               	fld qword ptr [eax - 0x2568]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 80 15 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 a0 da ff ff               	fld qword ptr [eax - 0x2560]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 a8 da ff ff               	fld qword ptr [eax - 0x2558]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 b0 da ff ff               	fld qword ptr [eax - 0x2550]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 f0 14 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 b8 da ff ff               	fld dword ptr [eax - 0x2548]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 bc da ff ff               	fld dword ptr [eax - 0x2544]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 8c 14 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 1b 14 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 d8 13 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 a0 d9 ff ff               	lea eax, [ebx - 0x2660]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 c4 d9 ff ff               	lea eax, [ebx - 0x263c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804973d
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 1c                        	sub esp, 0x1c
0x804962f:   e8 ce 12 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x8049634:   05 cc 39 00 00                  	add eax, 0x39cc
0x8049639:   8b 55 20                        	mov edx, dword ptr [ebp + 0x20]
0x804963c:   8b 4d 28                        	mov ecx, dword ptr [ebp + 0x28]
0x804963f:   89 4d d8                        	mov dword ptr [ebp - 0x28], ecx
0x8049642:   8b 7d 34                        	mov edi, dword ptr [ebp + 0x34]
0x8049645:   8b 75 38                        	mov esi, dword ptr [ebp + 0x38]
0x8049648:   8b 5d 4c                        	mov ebx, dword ptr [ebp + 0x4c]
0x804964b:   8b 4d 54                        	mov ecx, dword ptr [ebp + 0x54]
0x804964e:   66 89 55 f0                     	mov word ptr [ebp - 0x10], dx
0x8049652:   0f b6 55 d8                     	movzx edx, byte ptr [ebp - 0x28]
0x8049656:   88 55 ec                        	mov byte ptr [ebp - 0x14], dl
0x8049659:   89 fa                           	mov edx, edi
0x804965b:   66 89 55 e8                     	mov word ptr [ebp - 0x18], dx
0x804965f:   89 f2                           	mov edx, esi
0x8049661:   66 89 55 e4                     	mov word ptr [ebp - 0x1c], dx
0x8049665:   89 da                           	mov edx, ebx
0x8049667:   66 89 55 e0                     	mov word ptr [ebp - 0x20], dx
0x804966b:   89 ca                           	mov edx, ecx
0x804966d:   66 89 55 dc                     	mov word ptr [ebp - 0x24], dx
0x8049671:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049674:   89 90 24 00 00 00               	mov dword ptr [eax + 0x24], edx
0x804967a:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x804967d:   89 90 28 00 00 00               	mov dword ptr [eax + 0x28], edx
0x8049683:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049686:   89 90 2c 00 00 00               	mov dword ptr [eax + 0x2c], edx
0x804968c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804968f:   89 90 30 00 00 00               	mov dword ptr [eax + 0x30], edx
0x8049695:   8b 55 18                        	mov edx, dword ptr [ebp + 0x18]
0x8049698:   89 90 34 00 00 00               	mov dword ptr [eax + 0x34], edx
0x804969e:   8b 55 1c                        	mov edx, dword ptr [ebp + 0x1c]
0x80496a1:   89 90 38 00 00 00               	mov dword ptr [eax + 0x38], edx
0x80496a7:   0f b7 55 f0                     	movzx edx, word ptr [ebp - 0x10]
0x80496ab:   66 89 90 3c 00 00 00            	mov word ptr [eax + 0x3c], dx
0x80496b2:   8b 55 24                        	mov edx, dword ptr [ebp + 0x24]
0x80496b5:   89 90 40 00 00 00               	mov dword ptr [eax + 0x40], edx
0x80496bb:   0f b6 55 ec                     	movzx edx, byte ptr [ebp - 0x14]
0x80496bf:   88 90 44 00 00 00               	mov byte ptr [eax + 0x44], dl
0x80496c5:   8b 55 2c                        	mov edx, dword ptr [ebp + 0x2c]
0x80496c8:   89 90 48 00 00 00               	mov dword ptr [eax + 0x48], edx
0x80496ce:   8b 55 30                        	mov edx, dword ptr [ebp + 0x30]
0x80496d1:   89 90 4c 00 00 00               	mov dword ptr [eax + 0x4c], edx
0x80496d7:   0f b7 55 e8                     	movzx edx, word ptr [ebp - 0x18]
0x80496db:   66 89 90 50 00 00 00            	mov word ptr [eax + 0x50], dx
0x80496e2:   0f b7 55 e4                     	movzx edx, word ptr [ebp - 0x1c]
0x80496e6:   66 89 90 52 00 00 00            	mov word ptr [eax + 0x52], dx
0x80496ed:   8b 55 3c                        	mov edx, dword ptr [ebp + 0x3c]
0x80496f0:   89 90 54 00 00 00               	mov dword ptr [eax + 0x54], edx
0x80496f6:   8b 55 40                        	mov edx, dword ptr [ebp + 0x40]
0x80496f9:   89 90 58 00 00 00               	mov dword ptr [eax + 0x58], edx
0x80496ff:   8b 55 44                        	mov edx, dword ptr [ebp + 0x44]
0x8049702:   89 90 5c 00 00 00               	mov dword ptr [eax + 0x5c], edx
0x8049708:   8b 55 48                        	mov edx, dword ptr [ebp + 0x48]
0x804970b:   89 90 60 00 00 00               	mov dword ptr [eax + 0x60], edx
0x8049711:   0f b7 55 e0                     	movzx edx, word ptr [ebp - 0x20]
0x8049715:   66 89 90 64 00 00 00            	mov word ptr [eax + 0x64], dx
0x804971c:   8b 55 50                        	mov edx, dword ptr [ebp + 0x50]
0x804971f:   89 90 68 00 00 00               	mov dword ptr [eax + 0x68], edx
0x8049725:   0f b7 55 dc                     	movzx edx, word ptr [ebp - 0x24]
0x8049729:   66 89 90 6c 00 00 00            	mov word ptr [eax + 0x6c], dx
0x8049730:   b8 00 00 00 00                  	mov eax, 0
0x8049735:   83 c4 1c                        	add esp, 0x1c
0x8049738:   5b                              	pop ebx
0x8049739:   5e                              	pop esi
0x804973a:   5f                              	pop edi
0x804973b:   5d                              	pop ebp
0x804973c:   c3                              	ret 
; function: func_1 at 0x804973d -- 0x804a626
0x804973d:   55                              	push ebp
0x804973e:   89 e5                           	mov ebp, esp
0x8049740:   57                              	push edi
0x8049741:   56                              	push esi
0x8049742:   53                              	push ebx
0x8049743:   81 ec 30 01 00 00               	sub esp, 0x130
0x8049749:   e8 b4 11 00 00                  	call 0x804a902 <__x86.get_pc_thunk.ax>
0x804974e:   05 b2 38 00 00                  	add eax, 0x38b2
0x8049753:   c7 45 f0 c1 28 19 a6            	mov dword ptr [ebp - 0x10], 0xa61928c1
0x804975a:   c7 45 ec ff ff ff ff            	mov dword ptr [ebp - 0x14], 0xffffffff
0x8049761:   c7 45 e8 fc ff ff ff            	mov dword ptr [ebp - 0x18], 0xfffffffc
0x8049768:   c7 45 e4 01 00 00 00            	mov dword ptr [ebp - 0x1c], 1
0x804976f:   c7 45 e0 f9 ff ff ff            	mov dword ptr [ebp - 0x20], 0xfffffff9
0x8049776:   c7 45 c8 8e 80 9e 65            	mov dword ptr [ebp - 0x38], 0x659e808e
0x804977d:   66 c7 45 c6 ad 48               	mov word ptr [ebp - 0x3a], 0x48ad
0x8049783:   c7 45 c0 03 00 00 00            	mov dword ptr [ebp - 0x40], 3
0x804978a:   c6 45 bf 02                     	mov byte ptr [ebp - 0x41], 2
0x804978e:   c7 45 b8 03 00 00 00            	mov dword ptr [ebp - 0x48], 3
0x8049795:   c7 45 b4 f5 7b 64 09            	mov dword ptr [ebp - 0x4c], 0x9647bf5
0x804979c:   66 c7 45 b2 ff ff               	mov word ptr [ebp - 0x4e], 0xffff
0x80497a2:   66 c7 85 6a ff ff ff f6 ff      	mov word ptr [ebp - 0x96], 0xfff6
0x80497ab:   c7 85 60 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xa0], 0xffffffff
0x80497b5:   c7 85 64 ff ff ff 66 75 ab ef   	mov dword ptr [ebp - 0x9c], 0xefab7566
0x80497bf:   c7 45 ac 98 96 b5 ac            	mov dword ptr [ebp - 0x54], 0xacb59698
0x80497c6:   c7 45 a8 08 00 00 00            	mov dword ptr [ebp - 0x58], 8
0x80497cd:   66 c7 85 5e ff ff ff 7e c5      	mov word ptr [ebp - 0xa2], 0xc57e
0x80497d6:   c7 85 58 ff ff ff fc f7 22 d2   	mov dword ptr [ebp - 0xa8], 0xd222f7fc
0x80497e0:   66 c7 85 56 ff ff ff 57 a0      	mov word ptr [ebp - 0xaa], 0xa057
0x80497e9:   66 c7 85 54 ff ff ff 04 00      	mov word ptr [ebp - 0xac], 4
0x80497f2:   c7 85 6c ff ff ff 92 6a 56 e0   	mov dword ptr [ebp - 0x94], 0xe0566a92
0x80497fc:   c6 45 a7 d5                     	mov byte ptr [ebp - 0x59], 0xd5
0x8049800:   c7 45 a0 d3 e3 f9 70            	mov dword ptr [ebp - 0x60], 0x70f9e3d3
0x8049807:   c7 45 9c 00 00 00 00            	mov dword ptr [ebp - 0x64], 0
0x804980e:   c7 45 98 39 df 60 a2            	mov dword ptr [ebp - 0x68], 0xa260df39
0x8049815:   c6 45 97 0f                     	mov byte ptr [ebp - 0x69], 0xf
0x8049819:   c7 45 90 d0 53 62 c2            	mov dword ptr [ebp - 0x70], 0xc26253d0
0x8049820:   c7 45 8c ff ff ff ff            	mov dword ptr [ebp - 0x74], 0xffffffff
0x8049827:   c7 45 88 a5 96 da 29            	mov dword ptr [ebp - 0x78], 0x29da96a5
0x804982e:   c7 45 84 06 00 00 00            	mov dword ptr [ebp - 0x7c], 6
0x8049835:   c7 45 80 a7 48 37 b9            	mov dword ptr [ebp - 0x80], 0xb93748a7
0x804983c:   c7 85 7c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x84], 0
0x8049846:   c7 85 78 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0x88], 2
0x8049850:   c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x8049857:   eb 35                           	jmp 0x804988e <func_1+0x151>
0x8049859:   c7 85 d4 fe ff ff f6 ae 2b f8   	mov dword ptr [ebp - 0x12c], 0xf82baef6
0x8049863:   0f bf 85 54 ff ff ff            	movsx eax, word ptr [ebp - 0xac]
0x804986a:   0f bf 8d 54 ff ff ff            	movsx ecx, word ptr [ebp - 0xac]
0x8049871:   8b 95 d4 fe ff ff               	mov edx, dword ptr [ebp - 0x12c]
0x8049877:   0f bf d2                        	movsx edx, dx
0x804987a:   01 ca                           	add edx, ecx
0x804987c:   80 ca ff                        	or dl, 0xff
0x804987f:   39 d0                           	cmp eax, edx
0x8049881:   0f 95 c0                        	setne al
0x8049884:   0f b6 c0                        	movzx eax, al
0x8049887:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804988a:   83 45 f0 09                     	add dword ptr [ebp - 0x10], 9
0x804988e:   83 7d f0 03                     	cmp dword ptr [ebp - 0x10], 3
0x8049892:   7f c5                           	jg 0x8049859 <func_1+0x11c>
0x8049894:   0f be 45 a7                     	movsx eax, byte ptr [ebp - 0x59]
0x8049898:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804989b:   b8 01 00 00 00                  	mov eax, 1
0x80498a0:   31 45 a0                        	xor dword ptr [ebp - 0x60], eax
0x80498a3:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x80498a6:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x80498a9:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x80498ac:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x80498af:   66 83 bd 54 ff ff ff 00         	cmp word ptr [ebp - 0xac], 0
0x80498b7:   74 07                           	je 0x80498c0 <func_1+0x183>
0x80498b9:   b8 01 00 00 00                  	mov eax, 1
0x80498be:   eb 05                           	jmp 0x80498c5 <func_1+0x188>
0x80498c0:   b8 00 00 00 00                  	mov eax, 0
0x80498c5:   83 f8 ff                        	cmp eax, -1
0x80498c8:   74 04                           	je 0x80498ce <func_1+0x191>
0x80498ca:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x80498ce:   0f b6 45 97                     	movzx eax, byte ptr [ebp - 0x69]
0x80498d2:   0f be c0                        	movsx eax, al
0x80498d5:   21 45 e8                        	and dword ptr [ebp - 0x18], eax
0x80498d8:   c6 45 df eb                     	mov byte ptr [ebp - 0x21], 0xeb
0x80498dc:   c7 45 d8 00 00 00 00            	mov dword ptr [ebp - 0x28], 0
0x80498e3:   c7 45 d4 12 4f 8b f4            	mov dword ptr [ebp - 0x2c], 0xf48b4f12
0x80498ea:   c7 45 d0 00 00 00 00            	mov dword ptr [ebp - 0x30], 0
0x80498f1:   c7 85 74 ff ff ff f8 40 bf a8   	mov dword ptr [ebp - 0x8c], 0xa8bf40f8
0x80498fb:   c6 85 4b ff ff ff 01            	mov byte ptr [ebp - 0xb5], 1
0x8049902:   c6 85 4a ff ff ff ff            	mov byte ptr [ebp - 0xb6], 0xff
0x8049909:   66 c7 85 48 ff ff ff ca d8      	mov word ptr [ebp - 0xb8], 0xd8ca
0x8049912:   c7 85 44 ff ff ff 45 13 bc 70   	mov dword ptr [ebp - 0xbc], 0x70bc1345
0x804991c:   66 c7 85 72 ff ff ff 71 a8      	mov word ptr [ebp - 0x8e], 0xa871
0x8049925:   c7 85 6c ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0x94], 2
0x804992f:   e9 6c 0c 00 00                  	jmp 0x804a5a0 <func_1+0xe63>
0x8049934:   c6 85 43 ff ff ff 01            	mov byte ptr [ebp - 0xbd], 1
0x804993b:   c7 45 cc a0 bc e4 ab            	mov dword ptr [ebp - 0x34], 0xabe4bca0
0x8049942:   c7 85 3c ff ff ff d7 fd 0a fe   	mov dword ptr [ebp - 0xc4], 0xfe0afdd7
0x804994c:   c6 85 3b ff ff ff 01            	mov byte ptr [ebp - 0xc5], 1
0x8049953:   c7 85 34 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xcc], 0xffffffff
0x804995d:   c7 85 30 ff ff ff d4 5c b5 dc   	mov dword ptr [ebp - 0xd0], 0xdcb55cd4
0x8049967:   c6 85 2f ff ff ff d2            	mov byte ptr [ebp - 0xd1], 0xd2
0x804996e:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x8049975:   0f 84 89 00 00 00               	je 0x8049a04 <func_1+0x2c7>
0x804997b:   66 c7 85 22 ff ff ff e0 38      	mov word ptr [ebp - 0xde], 0x38e0
0x8049984:   83 6d e4 01                     	sub dword ptr [ebp - 0x1c], 1
0x8049988:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804998b:   f7 d0                           	not eax
0x804998d:   23 45 e4                        	and eax, dword ptr [ebp - 0x1c]
0x8049990:   83 f8 ff                        	cmp eax, -1
0x8049993:   74 20                           	je 0x80499b5 <func_1+0x278>
0x8049995:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049998:   3d e3 49 b2 c7                  	cmp eax, 0xc7b249e3
0x804999d:   0f 96 c0                        	setbe al
0x80499a0:   0f b6 d0                        	movzx edx, al
0x80499a3:   0f bf 85 22 ff ff ff            	movsx eax, word ptr [ebp - 0xde]
0x80499aa:   39 c2                           	cmp edx, eax
0x80499ac:   75 07                           	jne 0x80499b5 <func_1+0x278>
0x80499ae:   b8 01 00 00 00                  	mov eax, 1
0x80499b3:   eb 05                           	jmp 0x80499ba <func_1+0x27d>
0x80499b5:   b8 00 00 00 00                  	mov eax, 0
0x80499ba:   0d 76 b4 00 00                  	or eax, 0xb476
0x80499bf:   89 c2                           	mov edx, eax
0x80499c1:   0f b6 85 43 ff ff ff            	movzx eax, byte ptr [ebp - 0xbd]
0x80499c8:   39 c2                           	cmp edx, eax
0x80499ca:   0f 94 c0                        	sete al
0x80499cd:   0f b6 c0                        	movzx eax, al
0x80499d0:   23 45 ec                        	and eax, dword ptr [ebp - 0x14]
0x80499d3:   89 c2                           	mov edx, eax
0x80499d5:   0f be 45 df                     	movsx eax, byte ptr [ebp - 0x21]
0x80499d9:   39 c2                           	cmp edx, eax
0x80499db:   0f 9c c0                        	setl al
0x80499de:   0f b6 c0                        	movzx eax, al
0x80499e1:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x80499e4:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x80499e7:   0f be d0                        	movsx edx, al
0x80499ea:   0f be 45 df                     	movsx eax, byte ptr [ebp - 0x21]
0x80499ee:   0f af c2                        	imul eax, edx
0x80499f1:   3d c2 c6 00 00                  	cmp eax, 0xc6c2
0x80499f6:   0f 94 c0                        	sete al
0x80499f9:   0f b6 c0                        	movzx eax, al
0x80499fc:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x80499ff:   e9 4c 01 00 00                  	jmp 0x8049b50 <func_1+0x413>
0x8049a04:   66 c7 85 2c ff ff ff 01 00      	mov word ptr [ebp - 0xd4], 1
0x8049a0d:   c7 85 28 ff ff ff 1b 8a 4c 53   	mov dword ptr [ebp - 0xd8], 0x534c8a1b
0x8049a17:   c7 45 d8 00 00 00 00            	mov dword ptr [ebp - 0x28], 0
0x8049a1e:   e9 23 01 00 00                  	jmp 0x8049b46 <func_1+0x409>
0x8049a23:   c7 85 24 ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0xdc], 0xfffffffa
0x8049a2d:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x8049a34:   0f b7 95 2c ff ff ff            	movzx edx, word ptr [ebp - 0xd4]
0x8049a3b:   0f b7 85 2c ff ff ff            	movzx eax, word ptr [ebp - 0xd4]
0x8049a42:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049a45:   83 7d e4 01                     	cmp dword ptr [ebp - 0x1c], 1
0x8049a49:   0f 97 c0                        	seta al
0x8049a4c:   0f b6 c0                        	movzx eax, al
0x8049a4f:   0b 45 e4                        	or eax, dword ptr [ebp - 0x1c]
0x8049a52:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049a55:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049a58:   0d 1d ee da a9                  	or eax, 0xa9daee1d
0x8049a5d:   89 85 28 ff ff ff               	mov dword ptr [ebp - 0xd8], eax
0x8049a63:   b8 00 00 00 00                  	mov eax, 0
0x8049a68:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049a6b:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049a6f:   74 07                           	je 0x8049a78 <func_1+0x33b>
0x8049a71:   b8 01 00 00 00                  	mov eax, 1
0x8049a76:   eb 05                           	jmp 0x8049a7d <func_1+0x340>
0x8049a78:   b8 00 00 00 00                  	mov eax, 0
0x8049a7d:   3d 17 41 a7 e7                  	cmp eax, 0xe7a74117
0x8049a82:   0f 97 c0                        	seta al
0x8049a85:   0f b6 c0                        	movzx eax, al
0x8049a88:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049a8b:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049a8e:   21 45 d0                        	and dword ptr [ebp - 0x30], eax
0x8049a91:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x8049a95:   74 05                           	je 0x8049a9c <func_1+0x35f>
0x8049a97:   66 83 7d c6 00                  	cmp word ptr [ebp - 0x3a], 0
0x8049a9c:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049a9f:   89 c1                           	mov ecx, eax
0x8049aa1:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049aa4:   29 c1                           	sub ecx, eax
0x8049aa6:   89 c8                           	mov eax, ecx
0x8049aa8:   0f bf c8                        	movsx ecx, ax
0x8049aab:   0f bf 45 c6                     	movsx eax, word ptr [ebp - 0x3a]
0x8049aaf:   0f af c1                        	imul eax, ecx
0x8049ab2:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049ab5:   74 07                           	je 0x8049abe <func_1+0x381>
0x8049ab7:   b8 01 00 00 00                  	mov eax, 1
0x8049abc:   eb 05                           	jmp 0x8049ac3 <func_1+0x386>
0x8049abe:   b8 00 00 00 00                  	mov eax, 0
0x8049ac3:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049ac6:   83 7d e4 02                     	cmp dword ptr [ebp - 0x1c], 2
0x8049aca:   0f 96 c0                        	setbe al
0x8049acd:   0f b6 c0                        	movzx eax, al
0x8049ad0:   09 45 c0                        	or dword ptr [ebp - 0x40], eax
0x8049ad3:   83 7d c0 00                     	cmp dword ptr [ebp - 0x40], 0
0x8049ad7:   74 0e                           	je 0x8049ae7 <func_1+0x3aa>
0x8049ad9:   66 83 7d c6 00                  	cmp word ptr [ebp - 0x3a], 0
0x8049ade:   74 07                           	je 0x8049ae7 <func_1+0x3aa>
0x8049ae0:   b8 01 00 00 00                  	mov eax, 1
0x8049ae5:   eb 05                           	jmp 0x8049aec <func_1+0x3af>
0x8049ae7:   b8 00 00 00 00                  	mov eax, 0
0x8049aec:   3b 45 e8                        	cmp eax, dword ptr [ebp - 0x18]
0x8049aef:   0f 94 c0                        	sete al
0x8049af2:   0f b6 c0                        	movzx eax, al
0x8049af5:   39 c2                           	cmp edx, eax
0x8049af7:   0f 9e c0                        	setle al
0x8049afa:   0f b6 c0                        	movzx eax, al
0x8049afd:   89 85 3c ff ff ff               	mov dword ptr [ebp - 0xc4], eax
0x8049b03:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x8049b09:   09 85 74 ff ff ff               	or dword ptr [ebp - 0x8c], eax
0x8049b0f:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049b13:   74 05                           	je 0x8049b1a <func_1+0x3dd>
0x8049b15:   e9 36 fd ff ff                  	jmp 0x8049850 <func_1+0x113>
0x8049b1a:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049b1d:   89 c2                           	mov edx, eax
0x8049b1f:   0f b6 45 bf                     	movzx eax, byte ptr [ebp - 0x41]
0x8049b23:   21 d0                           	and eax, edx
0x8049b25:   88 45 bf                        	mov byte ptr [ebp - 0x41], al
0x8049b28:   0f b6 45 bf                     	movzx eax, byte ptr [ebp - 0x41]
0x8049b2c:   0b 85 24 ff ff ff               	or eax, dword ptr [ebp - 0xdc]
0x8049b32:   89 c2                           	mov edx, eax
0x8049b34:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049b37:   21 d0                           	and eax, edx
0x8049b39:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049b3c:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049b3f:   21 45 ec                        	and dword ptr [ebp - 0x14], eax
0x8049b42:   83 6d d8 06                     	sub dword ptr [ebp - 0x28], 6
0x8049b46:   83 7d d8 ef                     	cmp dword ptr [ebp - 0x28], -0x11
0x8049b4a:   0f 84 d3 fe ff ff               	je 0x8049a23 <func_1+0x2e6>
0x8049b50:   c7 45 d8 07 00 00 00            	mov dword ptr [ebp - 0x28], 7
0x8049b57:   83 7d d8 fe                     	cmp dword ptr [ebp - 0x28], -2
0x8049b5b:   75 7e                           	jne 0x8049bdb <func_1+0x49e>
0x8049b5d:   80 bd 43 ff ff ff 00            	cmp byte ptr [ebp - 0xbd], 0
0x8049b64:   75 71                           	jne 0x8049bd7 <func_1+0x49a>
0x8049b66:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x8049b6a:   75 6e                           	jne 0x8049bda <func_1+0x49d>
0x8049b6c:   0f b7 bd 56 ff ff ff            	movzx edi, word ptr [ebp - 0xaa]
0x8049b73:   0f b7 b5 5e ff ff ff            	movzx esi, word ptr [ebp - 0xa2]
0x8049b7a:   0f b7 9d 6a ff ff ff            	movzx ebx, word ptr [ebp - 0x96]
0x8049b81:   0f bf 4d b2                     	movsx ecx, word ptr [ebp - 0x4e]
0x8049b85:   0f b6 55 bf                     	movzx edx, byte ptr [ebp - 0x41]
0x8049b89:   0f bf 45 c6                     	movsx eax, word ptr [ebp - 0x3a]
0x8049b8d:   57                              	push edi
0x8049b8e:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x8049b94:   56                              	push esi
0x8049b95:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x8049b98:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x8049b9b:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x8049ba1:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x8049ba7:   53                              	push ebx
0x8049ba8:   51                              	push ecx
0x8049ba9:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049bac:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049baf:   52                              	push edx
0x8049bb0:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049bb3:   50                              	push eax
0x8049bb4:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049bb7:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049bba:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049bbd:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049bc0:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049bc3:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049bc6:   e8 5b fa ff ff                  	call 0x8049626 <set_var>
0x8049bcb:   83 c4 50                        	add esp, 0x50
0x8049bce:   0f b6 45 bf                     	movzx eax, byte ptr [ebp - 0x41]
0x8049bd2:   e9 47 0a 00 00                  	jmp 0x804a61e <func_1+0xee1>
0x8049bd7:   90                              	nop 
0x8049bd8:   eb 01                           	jmp 0x8049bdb <func_1+0x49e>
0x8049bda:   90                              	nop 
0x8049bdb:   0f b6 55 bf                     	movzx edx, byte ptr [ebp - 0x41]
0x8049bdf:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049be2:   0f be c0                        	movsx eax, al
0x8049be5:   6b c0 23                        	imul eax, eax, 0x23
0x8049be8:   f7 d0                           	not eax
0x8049bea:   0b 45 cc                        	or eax, dword ptr [ebp - 0x34]
0x8049bed:   09 45 e4                        	or dword ptr [ebp - 0x1c], eax
0x8049bf0:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049bf3:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049bf6:   0f 95 c0                        	setne al
0x8049bf9:   0f b6 c0                        	movzx eax, al
0x8049bfc:   39 c2                           	cmp edx, eax
0x8049bfe:   0f 9d c0                        	setge al
0x8049c01:   0f b6 c0                        	movzx eax, al
0x8049c04:   89 85 3c ff ff ff               	mov dword ptr [ebp - 0xc4], eax
0x8049c0a:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x8049c0e:   0f 84 8f 00 00 00               	je 0x8049ca3 <func_1+0x566>
0x8049c14:   c7 85 dc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x124], 0
0x8049c1e:   c7 85 d8 fe ff ff 8c 71 2c cd   	mov dword ptr [ebp - 0x128], 0xcd2c718c
0x8049c28:   c6 45 df 00                     	mov byte ptr [ebp - 0x21], 0
0x8049c2c:   eb 6a                           	jmp 0x8049c98 <func_1+0x55b>
0x8049c2e:   0f b6 45 bf                     	movzx eax, byte ptr [ebp - 0x41]
0x8049c32:   ba 18 00 00 00                  	mov edx, 0x18
0x8049c37:   89 c1                           	mov ecx, eax
0x8049c39:   d3 e2                           	shl edx, cl
0x8049c3b:   89 d0                           	mov eax, edx
0x8049c3d:   0f b7 d8                        	movzx ebx, ax
0x8049c40:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x8049c43:   89 c1                           	mov ecx, eax
0x8049c45:   0f bf c1                        	movsx eax, cx
0x8049c48:   69 c0 55 55 00 00               	imul eax, eax, 0x5555
0x8049c4e:   c1 e8 10                        	shr eax, 0x10
0x8049c51:   89 c2                           	mov edx, eax
0x8049c53:   66 c1 fa 0d                     	sar dx, 0xd
0x8049c57:   89 c8                           	mov eax, ecx
0x8049c59:   66 c1 f8 0f                     	sar ax, 0xf
0x8049c5d:   29 c2                           	sub edx, eax
0x8049c5f:   89 d0                           	mov eax, edx
0x8049c61:   01 c0                           	add eax, eax
0x8049c63:   01 d0                           	add eax, edx
0x8049c65:   c1 e0 0d                        	shl eax, 0xd
0x8049c68:   01 d0                           	add eax, edx
0x8049c6a:   29 c1                           	sub ecx, eax
0x8049c6c:   89 ca                           	mov edx, ecx
0x8049c6e:   0f bf c2                        	movsx eax, dx
0x8049c71:   39 85 dc fe ff ff               	cmp dword ptr [ebp - 0x124], eax
0x8049c77:   0f 94 c0                        	sete al
0x8049c7a:   0f b6 c0                        	movzx eax, al
0x8049c7d:   0f af c3                        	imul eax, ebx
0x8049c80:   21 45 b8                        	and dword ptr [ebp - 0x48], eax
0x8049c83:   b8 00 00 00 00                  	mov eax, 0
0x8049c88:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x8049c8e:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x8049c92:   83 e8 03                        	sub eax, 3
0x8049c95:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x8049c98:   80 7d df fe                     	cmp byte ptr [ebp - 0x21], 0xfe
0x8049c9c:   7d 90                           	jge 0x8049c2e <func_1+0x4f1>
0x8049c9e:   e9 dd 08 00 00                  	jmp 0x804a580 <func_1+0xe43>
0x8049ca3:   c7 85 50 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xb0], 0
0x8049cad:   c7 85 4c ff ff ff 9d a3 bc d9   	mov dword ptr [ebp - 0xb4], 0xd9bca39d
0x8049cb7:   66 c7 85 20 ff ff ff fc ff      	mov word ptr [ebp - 0xe0], 0xfffc
0x8049cc0:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049cc3:   0f b7 d0                        	movzx edx, ax
0x8049cc6:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049cc9:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049ccc:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049ccf:   83 f0 03                        	xor eax, 3
0x8049cd2:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049cd5:   0f 93 c0                        	setae al
0x8049cd8:   0f b6 c0                        	movzx eax, al
0x8049cdb:   0f af c2                        	imul eax, edx
0x8049cde:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x8049ce1:   75 06                           	jne 0x8049ce9 <func_1+0x5ac>
0x8049ce3:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x8049ce7:   74 07                           	je 0x8049cf0 <func_1+0x5b3>
0x8049ce9:   b8 01 00 00 00                  	mov eax, 1
0x8049cee:   eb 05                           	jmp 0x8049cf5 <func_1+0x5b8>
0x8049cf0:   b8 00 00 00 00                  	mov eax, 0
0x8049cf5:   66 98                           	cbw 
0x8049cf7:   83 c0 07                        	add eax, 7
0x8049cfa:   89 c2                           	mov edx, eax
0x8049cfc:   0f bf c2                        	movsx eax, dx
0x8049cff:   69 c0 f5 44 00 00               	imul eax, eax, 0x44f5
0x8049d05:   c1 e8 10                        	shr eax, 0x10
0x8049d08:   89 c1                           	mov ecx, eax
0x8049d0a:   66 c1 f9 0d                     	sar cx, 0xd
0x8049d0e:   89 d0                           	mov eax, edx
0x8049d10:   66 c1 f8 0f                     	sar ax, 0xf
0x8049d14:   29 c1                           	sub ecx, eax
0x8049d16:   89 c8                           	mov eax, ecx
0x8049d18:   66 69 c0 cd 76                  	imul ax, ax, 0x76cd
0x8049d1d:   29 c2                           	sub edx, eax
0x8049d1f:   89 d0                           	mov eax, edx
0x8049d21:   98                              	cwde 
0x8049d22:   0b 45 a0                        	or eax, dword ptr [ebp - 0x60]
0x8049d25:   85 c0                           	test eax, eax
0x8049d27:   0f 84 ad 01 00 00               	je 0x8049eda <func_1+0x79d>
0x8049d2d:   c7 85 10 ff ff ff 25 d9 47 93   	mov dword ptr [ebp - 0xf0], 0x9347d925
0x8049d37:   c7 85 0c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xf4], 0
0x8049d41:   c7 85 08 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xf8], 1
0x8049d4b:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x8049d52:   e9 6a 01 00 00                  	jmp 0x8049ec1 <func_1+0x784>
0x8049d57:   c7 85 04 ff ff ff f8 a0 9a 24   	mov dword ptr [ebp - 0xfc], 0x249aa0f8
0x8049d61:   c7 85 00 ff ff ff c0 12 34 a9   	mov dword ptr [ebp - 0x100], 0xa93412c0
0x8049d6b:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049d6e:   0f be c0                        	movsx eax, al
0x8049d71:   8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x8049d74:   0f be f2                        	movsx esi, dl
0x8049d77:   99                              	cdq 
0x8049d78:   f7 fe                           	idiv esi
0x8049d7a:   89 85 50 ff ff ff               	mov dword ptr [ebp - 0xb0], eax
0x8049d80:   c6 85 4b ff ff ff ff            	mov byte ptr [ebp - 0xb5], 0xff
0x8049d87:   c7 45 b4 ff 00 00 00            	mov dword ptr [ebp - 0x4c], 0xff
0x8049d8e:   8b 4d e8                        	mov ecx, dword ptr [ebp - 0x18]
0x8049d91:   ba 67 66 66 66                  	mov edx, 0x66666667
0x8049d96:   89 c8                           	mov eax, ecx
0x8049d98:   f7 ea                           	imul edx
0x8049d9a:   d1 fa                           	sar edx, 1
0x8049d9c:   89 c8                           	mov eax, ecx
0x8049d9e:   c1 f8 1f                        	sar eax, 0x1f
0x8049da1:   29 c2                           	sub edx, eax
0x8049da3:   89 d0                           	mov eax, edx
0x8049da5:   c1 e0 02                        	shl eax, 2
0x8049da8:   01 d0                           	add eax, edx
0x8049daa:   29 c1                           	sub ecx, eax
0x8049dac:   89 ca                           	mov edx, ecx
0x8049dae:   89 d0                           	mov eax, edx
0x8049db0:   0f b6 c8                        	movzx ecx, al
0x8049db3:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x8049db9:   8d 50 ff                        	lea edx, [eax - 1]
0x8049dbc:   89 95 04 ff ff ff               	mov dword ptr [ebp - 0xfc], edx
0x8049dc2:   0f b7 d8                        	movzx ebx, ax
0x8049dc5:   66 c7 85 6a ff ff ff e3 00      	mov word ptr [ebp - 0x96], 0xe3
0x8049dce:   c7 85 10 ff ff ff e3 00 00 00   	mov dword ptr [ebp - 0xf0], 0xe3
0x8049dd8:   8b 85 10 ff ff ff               	mov eax, dword ptr [ebp - 0xf0]
0x8049dde:   34 f3                           	xor al, 0xf3
0x8049de0:   3d ff 00 00 00                  	cmp eax, 0xff
0x8049de5:   0f 97 c0                        	seta al
0x8049de8:   0f b6 c0                        	movzx eax, al
0x8049deb:   89 85 00 ff ff ff               	mov dword ptr [ebp - 0x100], eax
0x8049df1:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x8049df7:   c1 e0 05                        	shl eax, 5
0x8049dfa:   89 c2                           	mov edx, eax
0x8049dfc:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049dff:   01 d0                           	add eax, edx
0x8049e01:   0f be c0                        	movsx eax, al
0x8049e04:   8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x8049e07:   0f be fa                        	movsx edi, dl
0x8049e0a:   99                              	cdq 
0x8049e0b:   f7 ff                           	idiv edi
0x8049e0d:   89 c2                           	mov edx, eax
0x8049e0f:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049e12:   21 d0                           	and eax, edx
0x8049e14:   0f b6 d0                        	movzx edx, al
0x8049e17:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x8049e1d:   0f b6 c0                        	movzx eax, al
0x8049e20:   29 c2                           	sub edx, eax
0x8049e22:   89 d0                           	mov eax, edx
0x8049e24:   39 85 0c ff ff ff               	cmp dword ptr [ebp - 0xf4], eax
0x8049e2a:   75 07                           	jne 0x8049e33 <func_1+0x6f6>
0x8049e2c:   66 83 7d b2 00                  	cmp word ptr [ebp - 0x4e], 0
0x8049e31:   74 07                           	je 0x8049e3a <func_1+0x6fd>
0x8049e33:   b8 01 00 00 00                  	mov eax, 1
0x8049e38:   eb 05                           	jmp 0x8049e3f <func_1+0x702>
0x8049e3a:   b8 00 00 00 00                  	mov eax, 0
0x8049e3f:   0f b7 c0                        	movzx eax, ax
0x8049e42:   01 d8                           	add eax, ebx
0x8049e44:   3d 6a 91 06 75                  	cmp eax, 0x7506916a
0x8049e49:   0f 94 c0                        	sete al
0x8049e4c:   0f b6 c0                        	movzx eax, al
0x8049e4f:   0b 45 c8                        	or eax, dword ptr [ebp - 0x38]
0x8049e52:   85 c0                           	test eax, eax
0x8049e54:   74 0d                           	je 0x8049e63 <func_1+0x726>
0x8049e56:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x8049e5a:   74 07                           	je 0x8049e63 <func_1+0x726>
0x8049e5c:   b8 01 00 00 00                  	mov eax, 1
0x8049e61:   eb 05                           	jmp 0x8049e68 <func_1+0x72b>
0x8049e63:   b8 00 00 00 00                  	mov eax, 0
0x8049e68:   c0 e8 02                        	shr al, 2
0x8049e6b:   0f b6 c0                        	movzx eax, al
0x8049e6e:   29 c1                           	sub ecx, eax
0x8049e70:   89 c8                           	mov eax, ecx
0x8049e72:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049e75:   c7 85 4c ff ff ff 44 65 14 ef   	mov dword ptr [ebp - 0xb4], 0xef146544
0x8049e7f:   0f b6 95 43 ff ff ff            	movzx edx, byte ptr [ebp - 0xbd]
0x8049e86:   0f b6 45 bf                     	movzx eax, byte ptr [ebp - 0x41]
0x8049e8a:   89 c1                           	mov ecx, eax
0x8049e8c:   d3 fa                           	sar edx, cl
0x8049e8e:   89 d0                           	mov eax, edx
0x8049e90:   85 c0                           	test eax, eax
0x8049e92:   74 04                           	je 0x8049e98 <func_1+0x75b>
0x8049e94:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x8049e98:   c7 45 9c c0 0a 00 00            	mov dword ptr [ebp - 0x64], 0xac0
0x8049e9f:   b8 01 00 00 00                  	mov eax, 1
0x8049ea4:   33 45 e0                        	xor eax, dword ptr [ebp - 0x20]
0x8049ea7:   89 85 08 ff ff ff               	mov dword ptr [ebp - 0xf8], eax
0x8049ead:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049eb0:   8b 95 08 ff ff ff               	mov edx, dword ptr [ebp - 0xf8]
0x8049eb6:   29 c2                           	sub edx, eax
0x8049eb8:   89 d0                           	mov eax, edx
0x8049eba:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049ebd:   83 6d ec 01                     	sub dword ptr [ebp - 0x14], 1
0x8049ec1:   83 7d ec f6                     	cmp dword ptr [ebp - 0x14], -0xa
0x8049ec5:   0f 84 8c fe ff ff               	je 0x8049d57 <func_1+0x61a>
0x8049ecb:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049ecf:   0f 84 5f 01 00 00               	je 0x804a034 <func_1+0x8f7>
0x8049ed5:   e9 dc 06 00 00                  	jmp 0x804a5b6 <func_1+0xe79>
0x8049eda:   c7 85 1c ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xe4], 9
0x8049ee4:   c7 85 18 ff ff ff bf a5 ed 72   	mov dword ptr [ebp - 0xe8], 0x72eda5bf
0x8049eee:   c6 85 17 ff ff ff ff            	mov byte ptr [ebp - 0xe9], 0xff
0x8049ef5:   0f b6 85 43 ff ff ff            	movzx eax, byte ptr [ebp - 0xbd]
0x8049efc:   89 85 3c ff ff ff               	mov dword ptr [ebp - 0xc4], eax
0x8049f02:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x8049f08:   0f b6 d0                        	movzx edx, al
0x8049f0b:   0f b6 85 43 ff ff ff            	movzx eax, byte ptr [ebp - 0xbd]
0x8049f12:   0f af c2                        	imul eax, edx
0x8049f15:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049f18:   0f 9f c0                        	setg al
0x8049f1b:   0f b6 c0                        	movzx eax, al
0x8049f1e:   33 45 d0                        	xor eax, dword ptr [ebp - 0x30]
0x8049f21:   8b 75 c0                        	mov esi, dword ptr [ebp - 0x40]
0x8049f24:   ba 00 00 00 00                  	mov edx, 0
0x8049f29:   f7 f6                           	div esi
0x8049f2b:   89 c2                           	mov edx, eax
0x8049f2d:   0f b6 85 3b ff ff ff            	movzx eax, byte ptr [ebp - 0xc5]
0x8049f34:   39 c2                           	cmp edx, eax
0x8049f36:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049f39:   0f b6 d0                        	movzx edx, al
0x8049f3c:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x8049f40:   0f b6 c0                        	movzx eax, al
0x8049f43:   89 c1                           	mov ecx, eax
0x8049f45:   d3 e2                           	shl edx, cl
0x8049f47:   89 d1                           	mov ecx, edx
0x8049f49:   8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x8049f4c:   81 fa 64 88 d3 85               	cmp edx, 0x85d38864
0x8049f52:   0f 93 c0                        	setae al
0x8049f55:   0f b6 c0                        	movzx eax, al
0x8049f58:   69 c0 64 88 d3 85               	imul eax, eax, 0x85d38864
0x8049f5e:   29 c2                           	sub edx, eax
0x8049f60:   89 d0                           	mov eax, edx
0x8049f62:   09 4d d8                        	or dword ptr [ebp - 0x28], ecx
0x8049f65:   81 7d d8 b1 b8 00 00            	cmp dword ptr [ebp - 0x28], 0xb8b1
0x8049f6c:   0f 9e c2                        	setle dl
0x8049f6f:   0f b6 d2                        	movzx edx, dl
0x8049f72:   39 d0                           	cmp eax, edx
0x8049f74:   8b 85 1c ff ff ff               	mov eax, dword ptr [ebp - 0xe4]
0x8049f7a:   23 45 b8                        	and eax, dword ptr [ebp - 0x48]
0x8049f7d:   89 c2                           	mov edx, eax
0x8049f7f:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x8049f85:   39 c2                           	cmp edx, eax
0x8049f87:   0f 93 c0                        	setae al
0x8049f8a:   0f b6 c0                        	movzx eax, al
0x8049f8d:   09 45 c8                        	or dword ptr [ebp - 0x38], eax
0x8049f90:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049f93:   89 85 18 ff ff ff               	mov dword ptr [ebp - 0xe8], eax
0x8049f99:   81 7d e0 3f 2d 00 00            	cmp dword ptr [ebp - 0x20], 0x2d3f
0x8049fa0:   0f 9f c0                        	setg al
0x8049fa3:   0f b6 c0                        	movzx eax, al
0x8049fa6:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049fa9:   0f 95 c0                        	setne al
0x8049fac:   89 c2                           	mov edx, eax
0x8049fae:   0f b6 45 bf                     	movzx eax, byte ptr [ebp - 0x41]
0x8049fb2:   31 d0                           	xor eax, edx
0x8049fb4:   88 45 bf                        	mov byte ptr [ebp - 0x41], al
0x8049fb7:   0f b6 55 bf                     	movzx edx, byte ptr [ebp - 0x41]
0x8049fbb:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049fbe:   0f b6 c0                        	movzx eax, al
0x8049fc1:   89 c1                           	mov ecx, eax
0x8049fc3:   d3 fa                           	sar edx, cl
0x8049fc5:   89 d0                           	mov eax, edx
0x8049fc7:   89 85 18 ff ff ff               	mov dword ptr [ebp - 0xe8], eax
0x8049fcd:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049fd0:   89 c3                           	mov ebx, eax
0x8049fd2:   8b 85 1c ff ff ff               	mov eax, dword ptr [ebp - 0xe4]
0x8049fd8:   0f b6 c8                        	movzx ecx, al
0x8049fdb:   ba 59 2b 60 ad                  	mov edx, 0xad602b59
0x8049fe0:   89 c8                           	mov eax, ecx
0x8049fe2:   f7 ea                           	imul edx
0x8049fe4:   8d 04 0a                        	lea eax, [edx + ecx]
0x8049fe7:   c1 f8 07                        	sar eax, 7
0x8049fea:   89 c2                           	mov edx, eax
0x8049fec:   89 c8                           	mov eax, ecx
0x8049fee:   c1 f8 1f                        	sar eax, 0x1f
0x8049ff1:   29 c2                           	sub edx, eax
0x8049ff3:   89 d0                           	mov eax, edx
0x8049ff5:   69 c0 bd 00 00 00               	imul eax, eax, 0xbd
0x8049ffb:   29 c1                           	sub ecx, eax
0x8049ffd:   89 c8                           	mov eax, ecx
0x8049fff:   21 d8                           	and eax, ebx
0x804a001:   f7 d0                           	not eax
0x804a003:   89 c2                           	mov edx, eax
0x804a005:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a00b:   29 c2                           	sub edx, eax
0x804a00d:   89 d0                           	mov eax, edx
0x804a00f:   0f be d0                        	movsx edx, al
0x804a012:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a015:   0f be c0                        	movsx eax, al
0x804a018:   89 c1                           	mov ecx, eax
0x804a01a:   d3 e2                           	shl edx, cl
0x804a01c:   89 d0                           	mov eax, edx
0x804a01e:   85 c0                           	test eax, eax
0x804a020:   c7 45 98 f7 ff ff ff            	mov dword ptr [ebp - 0x68], 0xfffffff7
0x804a027:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x804a02e:   0f 85 61 05 00 00               	jne 0x804a595 <func_1+0xe58>
0x804a034:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a03a:   0f b7 c0                        	movzx eax, ax
0x804a03d:   c1 e0 02                        	shl eax, 2
0x804a040:   85 c0                           	test eax, eax
0x804a042:   75 06                           	jne 0x804a04a <func_1+0x90d>
0x804a044:   80 7d 97 00                     	cmp byte ptr [ebp - 0x69], 0
0x804a048:   74 16                           	je 0x804a060 <func_1+0x923>
0x804a04a:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a04d:   f7 d0                           	not eax
0x804a04f:   89 c2                           	mov edx, eax
0x804a051:   0f bf 45 b2                     	movsx eax, word ptr [ebp - 0x4e]
0x804a055:   39 c2                           	cmp edx, eax
0x804a057:   74 07                           	je 0x804a060 <func_1+0x923>
0x804a059:   b8 01 00 00 00                  	mov eax, 1
0x804a05e:   eb 05                           	jmp 0x804a065 <func_1+0x928>
0x804a060:   b8 00 00 00 00                  	mov eax, 0
0x804a065:   3b 85 4c ff ff ff               	cmp eax, dword ptr [ebp - 0xb4]
0x804a06b:   0f 84 fc 00 00 00               	je 0x804a16d <func_1+0xa30>
0x804a071:   c7 85 ec fe ff ff 82 34 f4 b4   	mov dword ptr [ebp - 0x114], 0xb4f43482
0x804a07b:   c6 85 eb fe ff ff 48            	mov byte ptr [ebp - 0x115], 0x48
0x804a082:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a086:   74 6b                           	je 0x804a0f3 <func_1+0x9b6>
0x804a088:   8b 85 ec fe ff ff               	mov eax, dword ptr [ebp - 0x114]
0x804a08e:   8d 50 ff                        	lea edx, [eax - 1]
0x804a091:   89 95 ec fe ff ff               	mov dword ptr [ebp - 0x114], edx
0x804a097:   8b 55 c0                        	mov edx, dword ptr [ebp - 0x40]
0x804a09a:   31 d0                           	xor eax, edx
0x804a09c:   3d 56 66 76 c3                  	cmp eax, 0xc3766656
0x804a0a1:   0f 96 c0                        	setbe al
0x804a0a4:   0f b6 c0                        	movzx eax, al
0x804a0a7:   0f b7 55 c6                     	movzx edx, word ptr [ebp - 0x3a]
0x804a0ab:   c0 fa 03                        	sar dl, 3
0x804a0ae:   0f be fa                        	movsx edi, dl
0x804a0b1:   99                              	cdq 
0x804a0b2:   f7 ff                           	idiv edi
0x804a0b4:   89 c1                           	mov ecx, eax
0x804a0b6:   0f bf 45 b2                     	movsx eax, word ptr [ebp - 0x4e]
0x804a0ba:   23 45 ec                        	and eax, dword ptr [ebp - 0x14]
0x804a0bd:   89 c2                           	mov edx, eax
0x804a0bf:   0f bf 45 c6                     	movsx eax, word ptr [ebp - 0x3a]
0x804a0c3:   39 c2                           	cmp edx, eax
0x804a0c5:   0f 9c c0                        	setl al
0x804a0c8:   0f b6 c0                        	movzx eax, al
0x804a0cb:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a0ce:   39 4d ec                        	cmp dword ptr [ebp - 0x14], ecx
0x804a0d1:   0f 94 c0                        	sete al
0x804a0d4:   0f b6 d0                        	movzx edx, al
0x804a0d7:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a0dd:   98                              	cwde 
0x804a0de:   29 c2                           	sub edx, eax
0x804a0e0:   89 d0                           	mov eax, edx
0x804a0e2:   09 45 f0                        	or dword ptr [ebp - 0x10], eax
0x804a0e5:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a0eb:   21 45 d0                        	and dword ptr [ebp - 0x30], eax
0x804a0ee:   e9 a7 02 00 00                  	jmp 0x804a39a <func_1+0xc5d>
0x804a0f3:   c6 85 ea fe ff ff ef            	mov byte ptr [ebp - 0x116], 0xef
0x804a0fa:   0f be 85 4a ff ff ff            	movsx eax, byte ptr [ebp - 0xb6]
0x804a101:   66 83 7d b2 00                  	cmp word ptr [ebp - 0x4e], 0
0x804a106:   74 26                           	je 0x804a12e <func_1+0x9f1>
0x804a108:   8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x804a10b:   83 ca 04                        	or edx, 4
0x804a10e:   89 d1                           	mov ecx, edx
0x804a110:   8b 95 50 ff ff ff               	mov edx, dword ptr [ebp - 0xb0]
0x804a116:   01 ca                           	add edx, ecx
0x804a118:   88 95 ea fe ff ff               	mov byte ptr [ebp - 0x116], dl
0x804a11e:   80 bd ea fe ff ff 00            	cmp byte ptr [ebp - 0x116], 0
0x804a125:   74 07                           	je 0x804a12e <func_1+0x9f1>
0x804a127:   ba 01 00 00 00                  	mov edx, 1
0x804a12c:   eb 05                           	jmp 0x804a133 <func_1+0x9f6>
0x804a12e:   ba 00 00 00 00                  	mov edx, 0
0x804a133:   39 c2                           	cmp edx, eax
0x804a135:   0f 9d c0                        	setge al
0x804a138:   0f b6 c0                        	movzx eax, al
0x804a13b:   66 89 45 c6                     	mov word ptr [ebp - 0x3a], ax
0x804a13f:   66 83 7d c6 02                  	cmp word ptr [ebp - 0x3a], 2
0x804a144:   74 05                           	je 0x804a14b <func_1+0xa0e>
0x804a146:   66 83 7d c6 00                  	cmp word ptr [ebp - 0x3a], 0
0x804a14b:   80 bd eb fe ff ff 00            	cmp byte ptr [ebp - 0x115], 0
0x804a152:   0f 94 c0                        	sete al
0x804a155:   0f b6 c0                        	movzx eax, al
0x804a158:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a15b:   0f be 85 eb fe ff ff            	movsx eax, byte ptr [ebp - 0x115]
0x804a162:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804a168:   e9 2d 02 00 00                  	jmp 0x804a39a <func_1+0xc5d>
0x804a16d:   66 c7 85 fe fe ff ff 38 b5      	mov word ptr [ebp - 0x102], 0xb538
0x804a176:   c7 85 f8 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x108], 1
0x804a180:   c7 85 f4 fe ff ff 08 00 00 00   	mov dword ptr [ebp - 0x10c], 8
0x804a18a:   b8 01 00 00 00                  	mov eax, 1
0x804a18f:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a192:   81 65 9c f0 91 00 00            	and dword ptr [ebp - 0x64], 0x91f0
0x804a199:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a19d:   74 07                           	je 0x804a1a6 <func_1+0xa69>
0x804a19f:   80 bd 3b ff ff ff 00            	cmp byte ptr [ebp - 0xc5], 0
0x804a1a6:   81 7d cc ff 00 00 00            	cmp dword ptr [ebp - 0x34], 0xff
0x804a1ad:   0f 95 c0                        	setne al
0x804a1b0:   0f b6 d0                        	movzx edx, al
0x804a1b3:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a1b6:   0f b6 c0                        	movzx eax, al
0x804a1b9:   01 d0                           	add eax, edx
0x804a1bb:   0c a4                           	or al, 0xa4
0x804a1bd:   66 89 85 6a ff ff ff            	mov word ptr [ebp - 0x96], ax
0x804a1c4:   66 81 bd 6a ff ff ff d2 bc      	cmp word ptr [ebp - 0x96], 0xbcd2
0x804a1cd:   80 7d bf 00                     	cmp byte ptr [ebp - 0x41], 0
0x804a1d1:   0f 85 d8 03 00 00               	jne 0x804a5af <func_1+0xe72>
0x804a1d7:   66 c7 85 fe fe ff ff 5d 27      	mov word ptr [ebp - 0x102], 0x275d
0x804a1e0:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a1e3:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a1e6:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x804a1ea:   0f 85 c2 03 00 00               	jne 0x804a5b2 <func_1+0xe75>
0x804a1f0:   0f b6 85 43 ff ff ff            	movzx eax, byte ptr [ebp - 0xbd]
0x804a1f7:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a1fa:   83 bd 64 ff ff ff 00            	cmp dword ptr [ebp - 0x9c], 0
0x804a201:   0f 95 c0                        	setne al
0x804a204:   0f b6 c0                        	movzx eax, al
0x804a207:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x804a20a:   0f 95 c0                        	setne al
0x804a20d:   0f b6 d0                        	movzx edx, al
0x804a210:   0f b7 85 20 ff ff ff            	movzx eax, word ptr [ebp - 0xe0]
0x804a217:   39 c2                           	cmp edx, eax
0x804a219:   0f 94 c0                        	sete al
0x804a21c:   0f b6 c0                        	movzx eax, al
0x804a21f:   89 c2                           	mov edx, eax
0x804a221:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a224:   98                              	cwde 
0x804a225:   89 c1                           	mov ecx, eax
0x804a227:   d3 fa                           	sar edx, cl
0x804a229:   89 d0                           	mov eax, edx
0x804a22b:   89 c2                           	mov edx, eax
0x804a22d:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a230:   29 c2                           	sub edx, eax
0x804a232:   89 d0                           	mov eax, edx
0x804a234:   0f b6 d0                        	movzx edx, al
0x804a237:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a23a:   0f b6 c0                        	movzx eax, al
0x804a23d:   01 d0                           	add eax, edx
0x804a23f:   85 c0                           	test eax, eax
0x804a241:   0f 84 18 01 00 00               	je 0x804a35f <func_1+0xc22>
0x804a247:   c7 85 f0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x110], 1
0x804a251:   66 83 ad 6a ff ff ff 01         	sub word ptr [ebp - 0x96], 1
0x804a259:   8b 85 f8 fe ff ff               	mov eax, dword ptr [ebp - 0x108]
0x804a25f:   89 c1                           	mov ecx, eax
0x804a261:   0f b7 85 6a ff ff ff            	movzx eax, word ptr [ebp - 0x96]
0x804a268:   ba 00 00 00 00                  	mov edx, 0
0x804a26d:   66 f7 f1                        	div cx
0x804a270:   89 d0                           	mov eax, edx
0x804a272:   0f b7 c8                        	movzx ecx, ax
0x804a275:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a27b:   0f be d8                        	movsx ebx, al
0x804a27e:   b8 01 00 00 00                  	mov eax, 1
0x804a283:   99                              	cdq 
0x804a284:   f7 fb                           	idiv ebx
0x804a286:   89 d0                           	mov eax, edx
0x804a288:   0f bf d0                        	movsx edx, ax
0x804a28b:   8b 85 f8 fe ff ff               	mov eax, dword ptr [ebp - 0x108]
0x804a291:   98                              	cwde 
0x804a292:   0f af c2                        	imul eax, edx
0x804a295:   39 c1                           	cmp ecx, eax
0x804a297:   0f 9f c0                        	setg al
0x804a29a:   0f b6 c0                        	movzx eax, al
0x804a29d:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x804a2a3:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a2a6:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a2a9:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a2ac:   89 c1                           	mov ecx, eax
0x804a2ae:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a2b2:   89 c2                           	mov edx, eax
0x804a2b4:   89 c8                           	mov eax, ecx
0x804a2b6:   0f af c2                        	imul eax, edx
0x804a2b9:   0f be d0                        	movsx edx, al
0x804a2bc:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x804a2c0:   0f be c0                        	movsx eax, al
0x804a2c3:   0f af c2                        	imul eax, edx
0x804a2c6:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a2c9:   c7 45 d0 01 00 00 00            	mov dword ptr [ebp - 0x30], 1
0x804a2d0:   83 7d b4 00                     	cmp dword ptr [ebp - 0x4c], 0
0x804a2d4:   75 25                           	jne 0x804a2fb <func_1+0xbbe>
0x804a2d6:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a2dc:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a2df:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a2e2:   0f b6 d0                        	movzx edx, al
0x804a2e5:   0f bf 45 c6                     	movsx eax, word ptr [ebp - 0x3a]
0x804a2e9:   39 c2                           	cmp edx, eax
0x804a2eb:   0f 95 c0                        	setne al
0x804a2ee:   0f b6 d0                        	movzx edx, al
0x804a2f1:   0f bf 45 b2                     	movsx eax, word ptr [ebp - 0x4e]
0x804a2f5:   01 d0                           	add eax, edx
0x804a2f7:   85 c0                           	test eax, eax
0x804a2f9:   74 07                           	je 0x804a302 <func_1+0xbc5>
0x804a2fb:   b8 01 00 00 00                  	mov eax, 1
0x804a300:   eb 05                           	jmp 0x804a307 <func_1+0xbca>
0x804a302:   b8 00 00 00 00                  	mov eax, 0
0x804a307:   89 85 44 ff ff ff               	mov dword ptr [ebp - 0xbc], eax
0x804a30d:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a310:   88 45 bf                        	mov byte ptr [ebp - 0x41], al
0x804a313:   0f b6 55 bf                     	movzx edx, byte ptr [ebp - 0x41]
0x804a317:   66 83 bd 6a ff ff ff 00         	cmp word ptr [ebp - 0x96], 0
0x804a31f:   0f 95 c0                        	setne al
0x804a322:   0f b6 c0                        	movzx eax, al
0x804a325:   31 d0                           	xor eax, edx
0x804a327:   3d 21 e7 00 00                  	cmp eax, 0xe721
0x804a32c:   0f 95 c0                        	setne al
0x804a32f:   0f b6 c0                        	movzx eax, al
0x804a332:   0f b7 95 20 ff ff ff            	movzx edx, word ptr [ebp - 0xe0]
0x804a339:   0f be ca                        	movsx ecx, dl
0x804a33c:   99                              	cdq 
0x804a33d:   f7 f9                           	idiv ecx
0x804a33f:   89 95 f4 fe ff ff               	mov dword ptr [ebp - 0x10c], edx
0x804a345:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x804a34c:   0f b7 85 72 ff ff ff            	movzx eax, word ptr [ebp - 0x8e]
0x804a353:   83 c0 01                        	add eax, 1
0x804a356:   66 89 85 72 ff ff ff            	mov word ptr [ebp - 0x8e], ax
0x804a35d:   eb 31                           	jmp 0x804a390 <func_1+0xc53>
0x804a35f:   0f b7 85 72 ff ff ff            	movzx eax, word ptr [ebp - 0x8e]
0x804a366:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a369:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a36c:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a36f:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a372:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x804a378:   c7 45 c0 09 00 00 00            	mov dword ptr [ebp - 0x40], 9
0x804a37f:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a385:   0d b4 33 38 f0                  	or eax, 0xf03833b4
0x804a38a:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x804a390:   83 7d 90 00                     	cmp dword ptr [ebp - 0x70], 0
0x804a394:   0f 85 1b 02 00 00               	jne 0x804a5b5 <func_1+0xe78>
0x804a39a:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a39d:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a3a0:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a3a3:   83 f8 01                        	cmp eax, 1
0x804a3a6:   0f 96 c0                        	setbe al
0x804a3a9:   0f b6 c0                        	movzx eax, al
0x804a3ac:   0f b6 4d bf                     	movzx ecx, byte ptr [ebp - 0x41]
0x804a3b0:   0f b7 95 6a ff ff ff            	movzx edx, word ptr [ebp - 0x96]
0x804a3b7:   21 ca                           	and edx, ecx
0x804a3b9:   39 d0                           	cmp eax, edx
0x804a3bb:   75 07                           	jne 0x804a3c4 <func_1+0xc87>
0x804a3bd:   ba 5b 00 00 00                  	mov edx, 0x5b
0x804a3c2:   eb 05                           	jmp 0x804a3c9 <func_1+0xc8c>
0x804a3c4:   ba 5a 00 00 00                  	mov edx, 0x5a
0x804a3c9:   0f b7 85 20 ff ff ff            	movzx eax, word ptr [ebp - 0xe0]
0x804a3d0:   39 c2                           	cmp edx, eax
0x804a3d2:   0f 86 15 01 00 00               	jbe 0x804a4ed <func_1+0xdb0>
0x804a3d8:   c7 85 e4 fe ff ff fa ff ff ff   	mov dword ptr [ebp - 0x11c], 0xfffffffa
0x804a3e2:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a3e6:   f7 d8                           	neg eax
0x804a3e8:   0f b6 d0                        	movzx edx, al
0x804a3eb:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a3ee:   0f be c8                        	movsx ecx, al
0x804a3f1:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x804a3f5:   0f be c0                        	movsx eax, al
0x804a3f8:   29 c1                           	sub ecx, eax
0x804a3fa:   89 c8                           	mov eax, ecx
0x804a3fc:   83 f8 07                        	cmp eax, 7
0x804a3ff:   0f 9f c0                        	setg al
0x804a402:   0f b6 c0                        	movzx eax, al
0x804a405:   29 c2                           	sub edx, eax
0x804a407:   89 d0                           	mov eax, edx
0x804a409:   0f bf d0                        	movsx edx, ax
0x804a40c:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a40f:   98                              	cwde 
0x804a410:   89 c1                           	mov ecx, eax
0x804a412:   d3 e2                           	shl edx, cl
0x804a414:   89 d0                           	mov eax, edx
0x804a416:   0f bf d0                        	movsx edx, ax
0x804a419:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a41c:   98                              	cwde 
0x804a41d:   0f af c2                        	imul eax, edx
0x804a420:   85 c0                           	test eax, eax
0x804a422:   0f 94 c0                        	sete al
0x804a425:   0f b6 d0                        	movzx edx, al
0x804a428:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x804a42e:   98                              	cwde 
0x804a42f:   89 c1                           	mov ecx, eax
0x804a431:   d3 fa                           	sar edx, cl
0x804a433:   89 d0                           	mov eax, edx
0x804a435:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a438:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a43b:   88 85 2f ff ff ff               	mov byte ptr [ebp - 0xd1], al
0x804a441:   80 7d 97 00                     	cmp byte ptr [ebp - 0x69], 0
0x804a445:   74 05                           	je 0x804a44c <func_1+0xd0f>
0x804a447:   e9 04 f4 ff ff                  	jmp 0x8049850 <func_1+0x113>
0x804a44c:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a450:   0f 85 42 01 00 00               	jne 0x804a598 <func_1+0xe5b>
0x804a456:   c6 85 4b ff ff ff 00            	mov byte ptr [ebp - 0xb5], 0
0x804a45d:   80 bd 4b ff ff ff 16            	cmp byte ptr [ebp - 0xb5], 0x16
0x804a464:   0f 84 15 01 00 00               	je 0x804a57f <func_1+0xe42>
0x804a46a:   c7 85 e0 fe ff ff 11 bb b9 62   	mov dword ptr [ebp - 0x120], 0x62b9bb11
0x804a474:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a477:   0b 85 60 ff ff ff               	or eax, dword ptr [ebp - 0xa0]
0x804a47d:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a480:   0f b7 bd 56 ff ff ff            	movzx edi, word ptr [ebp - 0xaa]
0x804a487:   0f b7 b5 5e ff ff ff            	movzx esi, word ptr [ebp - 0xa2]
0x804a48e:   0f b7 9d 6a ff ff ff            	movzx ebx, word ptr [ebp - 0x96]
0x804a495:   0f bf 4d b2                     	movsx ecx, word ptr [ebp - 0x4e]
0x804a499:   0f b6 55 bf                     	movzx edx, byte ptr [ebp - 0x41]
0x804a49d:   0f bf 45 c6                     	movsx eax, word ptr [ebp - 0x3a]
0x804a4a1:   57                              	push edi
0x804a4a2:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804a4a8:   56                              	push esi
0x804a4a9:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a4ac:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a4af:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a4b5:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a4bb:   53                              	push ebx
0x804a4bc:   51                              	push ecx
0x804a4bd:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a4c0:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a4c3:   52                              	push edx
0x804a4c4:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a4c7:   50                              	push eax
0x804a4c8:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a4cb:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a4ce:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a4d1:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a4d4:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a4d7:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a4da:   e8 47 f1 ff ff                  	call 0x8049626 <set_var>
0x804a4df:   83 c4 50                        	add esp, 0x50
0x804a4e2:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a4e8:   e9 31 01 00 00                  	jmp 0x804a61e <func_1+0xee1>
0x804a4ed:   c6 85 e9 fe ff ff e0            	mov byte ptr [ebp - 0x117], 0xe0
0x804a4f4:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a4f7:   89 c2                           	mov edx, eax
0x804a4f9:   0f b6 85 e9 fe ff ff            	movzx eax, byte ptr [ebp - 0x117]
0x804a500:   21 d0                           	and eax, edx
0x804a502:   88 85 e9 fe ff ff               	mov byte ptr [ebp - 0x117], al
0x804a508:   0f b6 85 e9 fe ff ff            	movzx eax, byte ptr [ebp - 0x117]
0x804a50f:   0f b6 c0                        	movzx eax, al
0x804a512:   31 85 64 ff ff ff               	xor dword ptr [ebp - 0x9c], eax
0x804a518:   66 83 bd 6a ff ff ff 00         	cmp word ptr [ebp - 0x96], 0
0x804a520:   0f 94 c0                        	sete al
0x804a523:   0f b6 d0                        	movzx edx, al
0x804a526:   0f b6 45 bf                     	movzx eax, byte ptr [ebp - 0x41]
0x804a52a:   39 c2                           	cmp edx, eax
0x804a52c:   0f 94 c0                        	sete al
0x804a52f:   0f b6 c0                        	movzx eax, al
0x804a532:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a535:   66 83 bd 6a ff ff ff 00         	cmp word ptr [ebp - 0x96], 0
0x804a53d:   75 09                           	jne 0x804a548 <func_1+0xe0b>
0x804a53f:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x804a546:   74 07                           	je 0x804a54f <func_1+0xe12>
0x804a548:   b8 01 00 00 00                  	mov eax, 1
0x804a54d:   eb 05                           	jmp 0x804a554 <func_1+0xe17>
0x804a54f:   b8 00 00 00 00                  	mov eax, 0
0x804a554:   98                              	cwde 
0x804a555:   8b 95 50 ff ff ff               	mov edx, dword ptr [ebp - 0xb0]
0x804a55b:   0f bf ca                        	movsx ecx, dx
0x804a55e:   99                              	cdq 
0x804a55f:   f7 f9                           	idiv ecx
0x804a561:   0f b7 85 20 ff ff ff            	movzx eax, word ptr [ebp - 0xe0]
0x804a568:   39 c2                           	cmp edx, eax
0x804a56a:   0f 9e c0                        	setle al
0x804a56d:   0f b6 c0                        	movzx eax, al
0x804a570:   0b 45 ac                        	or eax, dword ptr [ebp - 0x54]
0x804a573:   89 c2                           	mov edx, eax
0x804a575:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a578:   31 d0                           	xor eax, edx
0x804a57a:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a57d:   eb 01                           	jmp 0x804a580 <func_1+0xe43>
0x804a57f:   90                              	nop 
0x804a580:   0f be 45 a7                     	movsx eax, byte ptr [ebp - 0x59]
0x804a584:   8b 55 c8                        	mov edx, dword ptr [ebp - 0x38]
0x804a587:   0f bf f2                        	movsx esi, dx
0x804a58a:   99                              	cdq 
0x804a58b:   f7 fe                           	idiv esi
0x804a58d:   89 85 3c ff ff ff               	mov dword ptr [ebp - 0xc4], eax
0x804a593:   eb 04                           	jmp 0x804a599 <func_1+0xe5c>
0x804a595:   90                              	nop 
0x804a596:   eb 01                           	jmp 0x804a599 <func_1+0xe5c>
0x804a598:   90                              	nop 
0x804a599:   83 ad 6c ff ff ff 01            	sub dword ptr [ebp - 0x94], 1
0x804a5a0:   83 bd 6c ff ff ff fe            	cmp dword ptr [ebp - 0x94], -2
0x804a5a7:   0f 8d 87 f3 ff ff               	jge 0x8049934 <func_1+0x1f7>
0x804a5ad:   eb 07                           	jmp 0x804a5b6 <func_1+0xe79>
0x804a5af:   90                              	nop 
0x804a5b0:   eb 04                           	jmp 0x804a5b6 <func_1+0xe79>
0x804a5b2:   90                              	nop 
0x804a5b3:   eb 01                           	jmp 0x804a5b6 <func_1+0xe79>
0x804a5b5:   90                              	nop 
0x804a5b6:   0f b7 bd 56 ff ff ff            	movzx edi, word ptr [ebp - 0xaa]
0x804a5bd:   0f b7 b5 5e ff ff ff            	movzx esi, word ptr [ebp - 0xa2]
0x804a5c4:   0f b7 9d 6a ff ff ff            	movzx ebx, word ptr [ebp - 0x96]
0x804a5cb:   0f bf 4d b2                     	movsx ecx, word ptr [ebp - 0x4e]
0x804a5cf:   0f b6 55 bf                     	movzx edx, byte ptr [ebp - 0x41]
0x804a5d3:   0f bf 45 c6                     	movsx eax, word ptr [ebp - 0x3a]
0x804a5d7:   57                              	push edi
0x804a5d8:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804a5de:   56                              	push esi
0x804a5df:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a5e2:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a5e5:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a5eb:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a5f1:   53                              	push ebx
0x804a5f2:   51                              	push ecx
0x804a5f3:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a5f6:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a5f9:   52                              	push edx
0x804a5fa:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a5fd:   50                              	push eax
0x804a5fe:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a601:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a604:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a607:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a60a:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a60d:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a610:   e8 11 f0 ff ff                  	call 0x8049626 <set_var>
0x804a615:   83 c4 50                        	add esp, 0x50
0x804a618:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a61e:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a621:   5b                              	pop ebx
0x804a622:   5e                              	pop esi
0x804a623:   5f                              	pop edi
0x804a624:   5d                              	pop ebp
0x804a625:   c3                              	ret 
; function: main at 0x804a626 -- 0x804a902
0x804a626:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a62a:   83 e4 f0                        	and esp, 0xfffffff0
0x804a62d:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a630:   55                              	push ebp
0x804a631:   89 e5                           	mov ebp, esp
0x804a633:   53                              	push ebx
0x804a634:   51                              	push ecx
0x804a635:   83 ec 10                        	sub esp, 0x10
0x804a638:   e8 53 dd ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a63d:   81 c3 c3 29 00 00               	add ebx, 0x29c3
0x804a643:   89 c8                           	mov eax, ecx
0x804a645:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a64c:   83 38 02                        	cmp dword ptr [eax], 2
0x804a64f:   75 26                           	jne 0x804a677 <main+0x51>
0x804a651:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a654:   83 c0 04                        	add eax, 4
0x804a657:   8b 00                           	mov eax, dword ptr [eax]
0x804a659:   83 ec 08                        	sub esp, 8
0x804a65c:   8d 93 e8 d9 ff ff               	lea edx, [ebx - 0x2618]
0x804a662:   52                              	push edx
0x804a663:   50                              	push eax
0x804a664:   e8 97 dc ff ff                  	call 0x8048300 <strcmp>
0x804a669:   83 c4 10                        	add esp, 0x10
0x804a66c:   85 c0                           	test eax, eax
0x804a66e:   75 07                           	jne 0x804a677 <main+0x51>
0x804a670:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a677:   e8 da dd ff ff                  	call 0x8048456 <platform_main_begin>
0x804a67c:   e8 ea ed ff ff                  	call 0x804946b <crc32_gentab>
0x804a681:   e8 b7 f0 ff ff                  	call 0x804973d <func_1>
0x804a686:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804a68c:   89 c2                           	mov edx, eax
0x804a68e:   83 ec 04                        	sub esp, 4
0x804a691:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a694:   8d 83 ea d9 ff ff               	lea eax, [ebx - 0x2616]
0x804a69a:   50                              	push eax
0x804a69b:   52                              	push edx
0x804a69c:   e8 d6 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6a1:   83 c4 10                        	add esp, 0x10
0x804a6a4:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a6aa:   89 c2                           	mov edx, eax
0x804a6ac:   83 ec 04                        	sub esp, 4
0x804a6af:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6b2:   8d 83 ee d9 ff ff               	lea eax, [ebx - 0x2612]
0x804a6b8:   50                              	push eax
0x804a6b9:   52                              	push edx
0x804a6ba:   e8 b8 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6bf:   83 c4 10                        	add esp, 0x10
0x804a6c2:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a6c8:   89 c2                           	mov edx, eax
0x804a6ca:   83 ec 04                        	sub esp, 4
0x804a6cd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6d0:   8d 83 f3 d9 ff ff               	lea eax, [ebx - 0x260d]
0x804a6d6:   50                              	push eax
0x804a6d7:   52                              	push edx
0x804a6d8:   e8 9a ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6dd:   83 c4 10                        	add esp, 0x10
0x804a6e0:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804a6e6:   83 ec 04                        	sub esp, 4
0x804a6e9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6ec:   8d 93 f8 d9 ff ff               	lea edx, [ebx - 0x2608]
0x804a6f2:   52                              	push edx
0x804a6f3:   50                              	push eax
0x804a6f4:   e8 7e ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6f9:   83 c4 10                        	add esp, 0x10
0x804a6fc:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a702:   89 c2                           	mov edx, eax
0x804a704:   83 ec 04                        	sub esp, 4
0x804a707:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a70a:   8d 83 fd d9 ff ff               	lea eax, [ebx - 0x2603]
0x804a710:   50                              	push eax
0x804a711:   52                              	push edx
0x804a712:   e8 60 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a717:   83 c4 10                        	add esp, 0x10
0x804a71a:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804a720:   89 c2                           	mov edx, eax
0x804a722:   83 ec 04                        	sub esp, 4
0x804a725:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a728:   8d 83 02 da ff ff               	lea eax, [ebx - 0x25fe]
0x804a72e:   50                              	push eax
0x804a72f:   52                              	push edx
0x804a730:   e8 42 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a735:   83 c4 10                        	add esp, 0x10
0x804a738:   0f b7 83 3c 00 00 00            	movzx eax, word ptr [ebx + 0x3c]
0x804a73f:   98                              	cwde 
0x804a740:   83 ec 04                        	sub esp, 4
0x804a743:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a746:   8d 93 07 da ff ff               	lea edx, [ebx - 0x25f9]
0x804a74c:   52                              	push edx
0x804a74d:   50                              	push eax
0x804a74e:   e8 24 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a753:   83 c4 10                        	add esp, 0x10
0x804a756:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804a75c:   89 c2                           	mov edx, eax
0x804a75e:   83 ec 04                        	sub esp, 4
0x804a761:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a764:   8d 83 0c da ff ff               	lea eax, [ebx - 0x25f4]
0x804a76a:   50                              	push eax
0x804a76b:   52                              	push edx
0x804a76c:   e8 06 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a771:   83 c4 10                        	add esp, 0x10
0x804a774:   0f b6 83 44 00 00 00            	movzx eax, byte ptr [ebx + 0x44]
0x804a77b:   0f b6 c0                        	movzx eax, al
0x804a77e:   83 ec 04                        	sub esp, 4
0x804a781:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a784:   8d 93 11 da ff ff               	lea edx, [ebx - 0x25ef]
0x804a78a:   52                              	push edx
0x804a78b:   50                              	push eax
0x804a78c:   e8 e6 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a791:   83 c4 10                        	add esp, 0x10
0x804a794:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804a79a:   83 ec 04                        	sub esp, 4
0x804a79d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7a0:   8d 93 16 da ff ff               	lea edx, [ebx - 0x25ea]
0x804a7a6:   52                              	push edx
0x804a7a7:   50                              	push eax
0x804a7a8:   e8 ca ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7ad:   83 c4 10                        	add esp, 0x10
0x804a7b0:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804a7b6:   89 c2                           	mov edx, eax
0x804a7b8:   83 ec 04                        	sub esp, 4
0x804a7bb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7be:   8d 83 1b da ff ff               	lea eax, [ebx - 0x25e5]
0x804a7c4:   50                              	push eax
0x804a7c5:   52                              	push edx
0x804a7c6:   e8 ac ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7cb:   83 c4 10                        	add esp, 0x10
0x804a7ce:   0f b7 83 50 00 00 00            	movzx eax, word ptr [ebx + 0x50]
0x804a7d5:   98                              	cwde 
0x804a7d6:   83 ec 04                        	sub esp, 4
0x804a7d9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7dc:   8d 93 21 da ff ff               	lea edx, [ebx - 0x25df]
0x804a7e2:   52                              	push edx
0x804a7e3:   50                              	push eax
0x804a7e4:   e8 8e ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7e9:   83 c4 10                        	add esp, 0x10
0x804a7ec:   0f b7 83 52 00 00 00            	movzx eax, word ptr [ebx + 0x52]
0x804a7f3:   0f b7 c0                        	movzx eax, ax
0x804a7f6:   83 ec 04                        	sub esp, 4
0x804a7f9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7fc:   8d 93 27 da ff ff               	lea edx, [ebx - 0x25d9]
0x804a802:   52                              	push edx
0x804a803:   50                              	push eax
0x804a804:   e8 6e ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a809:   83 c4 10                        	add esp, 0x10
0x804a80c:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804a812:   89 c2                           	mov edx, eax
0x804a814:   83 ec 04                        	sub esp, 4
0x804a817:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a81a:   8d 83 2d da ff ff               	lea eax, [ebx - 0x25d3]
0x804a820:   50                              	push eax
0x804a821:   52                              	push edx
0x804a822:   e8 50 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a827:   83 c4 10                        	add esp, 0x10
0x804a82a:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804a830:   89 c2                           	mov edx, eax
0x804a832:   83 ec 04                        	sub esp, 4
0x804a835:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a838:   8d 83 33 da ff ff               	lea eax, [ebx - 0x25cd]
0x804a83e:   50                              	push eax
0x804a83f:   52                              	push edx
0x804a840:   e8 32 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a845:   83 c4 10                        	add esp, 0x10
0x804a848:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804a84e:   83 ec 04                        	sub esp, 4
0x804a851:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a854:   8d 93 39 da ff ff               	lea edx, [ebx - 0x25c7]
0x804a85a:   52                              	push edx
0x804a85b:   50                              	push eax
0x804a85c:   e8 16 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a861:   83 c4 10                        	add esp, 0x10
0x804a864:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804a86a:   83 ec 04                        	sub esp, 4
0x804a86d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a870:   8d 93 3f da ff ff               	lea edx, [ebx - 0x25c1]
0x804a876:   52                              	push edx
0x804a877:   50                              	push eax
0x804a878:   e8 fa ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a87d:   83 c4 10                        	add esp, 0x10
0x804a880:   0f b7 83 64 00 00 00            	movzx eax, word ptr [ebx + 0x64]
0x804a887:   0f b7 c0                        	movzx eax, ax
0x804a88a:   83 ec 04                        	sub esp, 4
0x804a88d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a890:   8d 93 45 da ff ff               	lea edx, [ebx - 0x25bb]
0x804a896:   52                              	push edx
0x804a897:   50                              	push eax
0x804a898:   e8 da ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a89d:   83 c4 10                        	add esp, 0x10
0x804a8a0:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804a8a6:   83 ec 04                        	sub esp, 4
0x804a8a9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8ac:   8d 93 4b da ff ff               	lea edx, [ebx - 0x25b5]
0x804a8b2:   52                              	push edx
0x804a8b3:   50                              	push eax
0x804a8b4:   e8 be ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8b9:   83 c4 10                        	add esp, 0x10
0x804a8bc:   0f b7 83 6c 00 00 00            	movzx eax, word ptr [ebx + 0x6c]
0x804a8c3:   0f b7 c0                        	movzx eax, ax
0x804a8c6:   83 ec 04                        	sub esp, 4
0x804a8c9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8cc:   8d 93 51 da ff ff               	lea edx, [ebx - 0x25af]
0x804a8d2:   52                              	push edx
0x804a8d3:   50                              	push eax
0x804a8d4:   e8 9e ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8d9:   83 c4 10                        	add esp, 0x10
0x804a8dc:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804a8e2:   f7 d0                           	not eax
0x804a8e4:   83 ec 08                        	sub esp, 8
0x804a8e7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8ea:   50                              	push eax
0x804a8eb:   e8 76 db ff ff                  	call 0x8048466 <platform_main_end>
0x804a8f0:   83 c4 10                        	add esp, 0x10
0x804a8f3:   b8 00 00 00 00                  	mov eax, 0
0x804a8f8:   8d 65 f8                        	lea esp, [ebp - 8]
0x804a8fb:   59                              	pop ecx
0x804a8fc:   5b                              	pop ebx
0x804a8fd:   5d                              	pop ebp
0x804a8fe:   8d 61 fc                        	lea esp, [ecx - 4]
0x804a901:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804a902 -- 0x804a906
0x804a902:   8b 04 24                        	mov eax, dword ptr [esp]
0x804a905:   c3                              	ret 
; data inside code section at 0x804a906 -- 0x804a910
0x804a906:   66 90 66 90 66 90 66 90  66 90                     |f.f.f.f.f.      |
; function: __libc_csu_init at 0x804a910 -- 0x804a96d
0x804a910:   55                              	push ebp
0x804a911:   57                              	push edi
0x804a912:   56                              	push esi
0x804a913:   53                              	push ebx
0x804a914:   e8 77 da ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a919:   81 c3 e7 26 00 00               	add ebx, 0x26e7
0x804a91f:   83 ec 0c                        	sub esp, 0xc
0x804a922:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804a926:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804a92c:   e8 9b d9 ff ff                  	call 0x80482cc <_init>
0x804a931:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804a937:   29 c6                           	sub esi, eax
0x804a939:   c1 fe 02                        	sar esi, 2
0x804a93c:   85 f6                           	test esi, esi
0x804a93e:   74 25                           	je 0x804a965 <__libc_csu_init+0x55>
0x804a940:   31 ff                           	xor edi, edi
0x804a942:   8d b6 00 00 00 00               	lea esi, [esi]
0x804a948:   83 ec 04                        	sub esp, 4
0x804a94b:   55                              	push ebp
0x804a94c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a950:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a954:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804a95b:   83 c7 01                        	add edi, 1
0x804a95e:   83 c4 10                        	add esp, 0x10
0x804a961:   39 fe                           	cmp esi, edi
0x804a963:   75 e3                           	jne 0x804a948 <__libc_csu_init+0x38>
0x804a965:   83 c4 0c                        	add esp, 0xc
0x804a968:   5b                              	pop ebx
0x804a969:   5e                              	pop esi
0x804a96a:   5f                              	pop edi
0x804a96b:   5d                              	pop ebp
0x804a96c:   c3                              	ret 
; data inside code section at 0x804a96d -- 0x804a970
0x804a96d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804a970 -- 0x804a972
0x804a970:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804a974 -- 0x804a988
0x804a974:   53                              	push ebx
0x804a975:   83 ec 08                        	sub esp, 8
0x804a978:   e8 13 da ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a97d:   81 c3 83 26 00 00               	add ebx, 0x2683
0x804a983:   83 c4 08                        	add esp, 8
0x804a986:   5b                              	pop ebx
0x804a987:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 8c a9 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804a988:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804a998:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804a9a8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804a9b8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804a9c8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804a9d8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804a9e8:   31 00 67 5f 32 00 67 5f  31 33 00 67 5f 32 38 00   |1.g_2.g_13.g_28.|
0x804a9f8:   67 5f 33 34 00 67 5f 34  33 00 67 5f 36 37 00 67   |g_34.g_43.g_67.g|
0x804aa08:   5f 37 30 00 67 5f 37 31  00 67 5f 37 36 00 67 5f   |_70.g_71.g_76.g_|
0x804aa18:   39 39 00 67 5f 31 32 30  00 67 5f 31 32 35 00 67   |99.g_120.g_125.g|
0x804aa28:   5f 31 33 37 00 67 5f 31  39 38 00 67 5f 32 33 30   |_137.g_198.g_230|
0x804aa38:   00 67 5f 32 33 31 00 67  5f 32 37 38 00 67 5f 34   |.g_231.g_278.g_4|
0x804aa48:   32 31 00 67 5f 34 33 32  00 67 5f 34 38 34 00 00   |21.g_432.g_484..|
0x804aa58:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804aa68:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804aa78:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804aa88:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804aa98:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804aaa8:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804aab8:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804aac0:   01 1b 03 3b b0 02 00 00  55 00 00 00 30 d8 ff ff   |...;....U...0...|
0x804aad0:   e0 02 00 00 70 d8 ff ff  04 03 00 00 c0 d8 ff ff   |....p...........|
0x804aae0:   cc 02 00 00 96 d9 ff ff  18 03 00 00 a6 d9 ff ff   |................|
0x804aaf0:   38 03 00 00 d4 d9 ff ff  5c 03 00 00 f2 d9 ff ff   |8.......\.......|
0x804ab00:   7c 03 00 00 1a da ff ff  9c 03 00 00 44 da ff ff   ||...........D...|
0x804ab10:   bc 03 00 00 6d da ff ff  dc 03 00 00 b0 da ff ff   |....m...........|
0x804ab20:   fc 03 00 00 f1 da ff ff  1c 04 00 00 49 db ff ff   |............I...|
0x804ab30:   40 04 00 00 9b db ff ff  64 04 00 00 d8 db ff ff   |@.......d.......|
0x804ab40:   84 04 00 00 0f dc ff ff  a4 04 00 00 2e dc ff ff   |................|
0x804ab50:   c4 04 00 00 58 dc ff ff  e4 04 00 00 84 dc ff ff   |....X...........|
0x804ab60:   04 05 00 00 af dc ff ff  24 05 00 00 f8 dc ff ff   |........$.......|
0x804ab70:   44 05 00 00 3f dd ff ff  64 05 00 00 99 dd ff ff   |D...?...d.......|
0x804ab80:   88 05 00 00 ed dd ff ff  ac 05 00 00 2c de ff ff   |............,...|
0x804ab90:   cc 05 00 00 65 de ff ff  ec 05 00 00 87 de ff ff   |....e...........|
0x804aba0:   0c 06 00 00 d5 de ff ff  2c 06 00 00 11 df ff ff   |........,.......|
0x804abb0:   4c 06 00 00 9a df ff ff  6c 06 00 00 cc df ff ff   |L.......l.......|
0x804abc0:   8c 06 00 00 fc df ff ff  ac 06 00 00 41 e0 ff ff   |............A...|
0x804abd0:   cc 06 00 00 80 e0 ff ff  ec 06 00 00 b2 e0 ff ff   |................|
0x804abe0:   0c 07 00 00 de e0 ff ff  2c 07 00 00 fc e0 ff ff   |........,.......|
0x804abf0:   4c 07 00 00 24 e1 ff ff  6c 07 00 00 49 e1 ff ff   |L...$...l...I...|
0x804ac00:   8c 07 00 00 6e e1 ff ff  ac 07 00 00 a5 e1 ff ff   |....n...........|
0x804ac10:   cc 07 00 00 d9 e1 ff ff  ec 07 00 00 2b e2 ff ff   |............+...|
0x804ac20:   10 08 00 00 77 e2 ff ff  34 08 00 00 ae e2 ff ff   |....w...4.......|
0x804ac30:   54 08 00 00 df e2 ff ff  74 08 00 00 fe e2 ff ff   |T.......t.......|
0x804ac40:   94 08 00 00 28 e3 ff ff  b4 08 00 00 50 e3 ff ff   |....(.......P...|
0x804ac50:   d4 08 00 00 79 e3 ff ff  f4 08 00 00 b5 e3 ff ff   |....y...........|
0x804ac60:   14 09 00 00 ef e3 ff ff  34 09 00 00 42 e4 ff ff   |........4...B...|
0x804ac70:   58 09 00 00 8f e4 ff ff  7c 09 00 00 c7 e4 ff ff   |X.......|.......|
0x804ac80:   9c 09 00 00 f9 e4 ff ff  bc 09 00 00 0d e5 ff ff   |................|
0x804ac90:   dc 09 00 00 24 e5 ff ff  fc 09 00 00 39 e5 ff ff   |....$.......9...|
0x804aca0:   1c 0a 00 00 4f e5 ff ff  3c 0a 00 00 76 e5 ff ff   |....O...<...v...|
0x804acb0:   5c 0a 00 00 9b e5 ff ff  7c 0a 00 00 da e5 ff ff   |\.......|.......|
0x804acc0:   9c 0a 00 00 13 e6 ff ff  bc 0a 00 00 3f e6 ff ff   |............?...|
0x804acd0:   dc 0a 00 00 65 e6 ff ff  fc 0a 00 00 a7 e6 ff ff   |....e...........|
0x804ace0:   1c 0b 00 00 e9 e6 ff ff  3c 0b 00 00 2b e7 ff ff   |........<...+...|
0x804acf0:   5c 0b 00 00 a0 e7 ff ff  7c 0b 00 00 fd e7 ff ff   |\.......|.......|
0x804ad00:   9c 0b 00 00 5a e8 ff ff  bc 0b 00 00 b7 e8 ff ff   |....Z...........|
0x804ad10:   dc 0b 00 00 47 e9 ff ff  fc 0b 00 00 ab e9 ff ff   |....G...........|
0x804ad20:   1c 0c 00 00 1b ea ff ff  3c 0c 00 00 62 ea ff ff   |........<...b...|
0x804ad30:   60 0c 00 00 b7 ea ff ff  80 0c 00 00 fe ea ff ff   |`...............|
0x804ad40:   a4 0c 00 00 66 eb ff ff  c8 0c 00 00 7d ec ff ff   |....f.......}...|
0x804ad50:   f8 0c 00 00 66 fb ff ff  28 0d 00 00 42 fe ff ff   |....f...(...B...|
0x804ad60:   60 0d 00 00 50 fe ff ff  74 0d 00 00 b0 fe ff ff   |`...P...t.......|
0x804ad70:   c0 0d 00 00 14                                     |.....           |
; section: .eh_frame
0x804ad74:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804ad84:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804ad94:   ec d5 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804ada4:   30 00 00 00 48 d5 ff ff  40 00 00 00 00 0e 08 46   |0...H...@......F|
0x804adb4:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804adc4:   10 00 00 00 54 00 00 00  64 d5 ff ff 08 00 00 00   |....T...d.......|
0x804add4:   00 00 00 00 1c 00 00 00  68 00 00 00 76 d6 ff ff   |........h...v...|
0x804ade4:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804adf4:   04 04 00 00 20 00 00 00  88 00 00 00 66 d6 ff ff   |.... .......f...|
0x804ae04:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804ae14:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804ae24:   70 d6 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |p........A....B.|
0x804ae34:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804ae44:   6e d6 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |n...(....A....B.|
0x804ae54:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804ae64:   76 d6 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |v...*....A....B.|
0x804ae74:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804ae84:   80 d6 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804ae94:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804aea4:   89 d6 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804aeb4:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804aec4:   ac d6 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804aed4:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804aee4:   cd d6 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804aef4:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804af04:   90 01 00 00 01 d7 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804af14:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804af24:   1c 00 00 00 b4 01 00 00  2f d7 ff ff 3d 00 00 00   |......../...=...|
0x804af34:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804af44:   1c 00 00 00 d4 01 00 00  4c d7 ff ff 37 00 00 00   |........L...7...|
0x804af54:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804af64:   1c 00 00 00 f4 01 00 00  63 d7 ff ff 1f 00 00 00   |........c.......|
0x804af74:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804af84:   1c 00 00 00 14 02 00 00  62 d7 ff ff 2a 00 00 00   |........b...*...|
0x804af94:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804afa4:   1c 00 00 00 34 02 00 00  6c d7 ff ff 2c 00 00 00   |....4...l...,...|
0x804afb4:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804afc4:   1c 00 00 00 54 02 00 00  78 d7 ff ff 2b 00 00 00   |....T...x...+...|
0x804afd4:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804afe4:   1c 00 00 00 74 02 00 00  83 d7 ff ff 49 00 00 00   |....t.......I...|
0x804aff4:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b004:   1c 00 00 00 94 02 00 00  ac d7 ff ff 47 00 00 00   |............G...|
0x804b014:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b024:   20 00 00 00 b4 02 00 00  d3 d7 ff ff 5a 00 00 00   | ...........Z...|
0x804b034:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b044:   c5 0c 04 04 20 00 00 00  d8 02 00 00 09 d8 ff ff   |.... ...........|
0x804b054:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b064:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b074:   39 d8 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |9...?....A....B.|
0x804b084:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b094:   58 d8 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |X...9....A....B.|
0x804b0a4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b0b4:   71 d8 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |q..."....A....B.|
0x804b0c4:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b0d4:   73 d8 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |s...N....A....B.|
0x804b0e4:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b0f4:   a1 d8 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b104:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b114:   bd d8 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b124:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b134:   26 d9 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |&...2....A....B.|
0x804b144:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b154:   38 d9 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |8...0....A....B.|
0x804b164:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b174:   48 d9 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |H...E....A....B.|
0x804b184:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b194:   6d d9 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |m...?....A....B.|
0x804b1a4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b1b4:   8c d9 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b1c4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b1d4:   9e d9 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b1e4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b1f4:   aa d9 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b204:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b214:   a8 d9 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b224:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b234:   b0 d9 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b244:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b254:   b5 d9 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b264:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b274:   ba d9 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b284:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b294:   d1 d9 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b2a4:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b2b4:   e5 d9 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b2c4:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b2d4:   60 05 00 00 13 da ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b2e4:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b2f4:   1c 00 00 00 84 05 00 00  3b da ff ff 37 00 00 00   |........;...7...|
0x804b304:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b314:   1c 00 00 00 a4 05 00 00  52 da ff ff 31 00 00 00   |........R...1...|
0x804b324:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b334:   1c 00 00 00 c4 05 00 00  63 da ff ff 1f 00 00 00   |........c.......|
0x804b344:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b354:   1c 00 00 00 e4 05 00 00  62 da ff ff 2a 00 00 00   |........b...*...|
0x804b364:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b374:   1c 00 00 00 04 06 00 00  6c da ff ff 28 00 00 00   |........l...(...|
0x804b384:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b394:   1c 00 00 00 24 06 00 00  74 da ff ff 29 00 00 00   |....$...t...)...|
0x804b3a4:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b3b4:   1c 00 00 00 44 06 00 00  7d da ff ff 3c 00 00 00   |....D...}...<...|
0x804b3c4:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b3d4:   1c 00 00 00 64 06 00 00  99 da ff ff 3a 00 00 00   |....d.......:...|
0x804b3e4:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b3f4:   20 00 00 00 84 06 00 00  b3 da ff ff 53 00 00 00   | ...........S...|
0x804b404:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b414:   c5 0c 04 04 20 00 00 00  a8 06 00 00 e2 da ff ff   |.... ...........|
0x804b424:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b434:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b444:   0b db ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b454:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b464:   23 db ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |#...2....A....B.|
0x804b474:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b484:   35 db ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |5........A....B.|
0x804b494:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b4a4:   29 db ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |)........A....B.|
0x804b4b4:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b4c4:   20 db ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   | ........A....B.|
0x804b4d4:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b4e4:   15 db ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b4f4:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b504:   0b db ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b514:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b524:   12 db ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b534:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b544:   17 db ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b554:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b564:   36 db ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |6...9....A....B.|
0x804b574:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b584:   4f db ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |O...,....A....B.|
0x804b594:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b5a4:   5b db ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |[...&....A....B.|
0x804b5b4:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b5c4:   61 db ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |a...B....A....B.|
0x804b5d4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b5e4:   83 db ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b5f4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b604:   a5 db ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b614:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b624:   c7 db ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804b634:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b644:   1c dc ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b654:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b664:   59 dc ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |Y...]....A....B.|
0x804b674:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b684:   96 dc ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b694:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b6a4:   d3 dc ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b6b4:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b6c4:   43 dd ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |C...d....A....B.|
0x804b6d4:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b6e4:   87 dd ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804b6f4:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b704:   d7 dd ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b714:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b724:   b0 09 00 00 fa dd ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804b734:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b744:   d0 09 00 00 2f de ff ff  47 00 00 00 00 41 0e 08   |..../...G....A..|
0x804b754:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b764:   20 00 00 00 f4 09 00 00  52 de ff ff 68 00 00 00   | .......R...h...|
0x804b774:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b784:   0c 04 04 00 2c 00 00 00  18 0a 00 00 96 de ff ff   |....,...........|
0x804b794:   17 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804b7a4:   86 04 83 05 03 0a 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804b7b4:   04 00 00 00 2c 00 00 00  48 0a 00 00 7d df ff ff   |....,...H...}...|
0x804b7c4:   e9 0e 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804b7d4:   86 04 83 05 03 d9 0e c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804b7e4:   04 00 00 00 34 00 00 00  78 0a 00 00 36 ee ff ff   |....4...x...6...|
0x804b7f4:   dc 02 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804b804:   0f 03 75 78 06 10 03 02  75 7c 03 c7 02 c1 0c 01   |..ux....u|......|
0x804b814:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804b824:   b0 0a 00 00 da f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804b834:   48 00 00 00 c4 0a 00 00  d4 f0 ff ff 5d 00 00 00   |H...........]...|
0x804b844:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x804b854:   41 0e 14 83 05 4e 0e 20  69 0e 24 41 0e 28 44 0e   |A....N. i.$A.(D.|
0x804b864:   2c 44 0e 30 4d 0e 20 47  0e 14 41 c3 0e 10 41 c6   |,D.0M. G..A...A.|
0x804b874:   0e 0c 41 c7 0e 08 41 c5  0e 04 00 00 10 00 00 00   |..A...A.........|
0x804b884:   10 0b 00 00 e8 f0 ff ff  02 00 00 00 00 00 00 00   |................|
0x804b894:   00 00 00 00 ??                                     |....?           |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 74 a9 04 08  19 00 00 00 0c cf 04 08   |....t...........|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff c1 28 19 a6   |.............(..|
0x804d028:   ff ff ff ff fc ff ff ff  01 00 00 00 f9 ff ff ff   |................|
0x804d038:   8e 80 9e 65 ad 48 00 00  03 00 00 00 02 00 00 00   |...e.H..........|
0x804d048:   03 00 00 00 f5 7b 64 09  ff ff f6 ff ff ff ff ff   |.....{d.........|
0x804d058:   66 75 ab ef 98 96 b5 ac  08 00 00 00 7e c5 00 00   |fu..........~...|
0x804d068:   fc f7 22 d2 57 a0 ??                               |..".W.?         |
