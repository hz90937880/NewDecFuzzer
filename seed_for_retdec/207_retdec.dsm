;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 17:00:29
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 60 d1 ff ff               	lea eax, [ebx - 0x2ea0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 00 d1 ff ff               	lea eax, [ebx - 0x2f00]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 21 ad 04 08               	mov eax, 0x804ad21
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 74 e0 04 08                  	mov eax, 0x804e074
0x80483a5:   3d 74 e0 04 08                  	cmp eax, 0x804e074
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 74 e0 04 08                  	push 0x804e074
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 74 e0 04 08                  	mov eax, 0x804e074
0x80483e5:   2d 74 e0 04 08                  	sub eax, 0x804e074
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 74 e0 04 08                  	push 0x804e074
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 e0 04 08 00            	cmp byte ptr [0x804e080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 e0 04 08 01            	mov byte ptr [0x804e080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 93 2c 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 7f 2c 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 80 d1 ff ff               	lea edx, [eax - 0x2e80]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 52 2c 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 34 2c 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 0c 2c 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 e2 2b 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 b9 2b 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 76 2b 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 34 2b 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 dc 2a 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 8b 2a 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 4e 2a 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 17 2a 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 f8 29 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 ce 29 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 a2 29 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 77 29 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 2e 29 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 e6 28 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 8c 28 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 39 28 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 fa 27 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 c4 27 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 a2 27 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 54 27 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 18 27 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 8f 26 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 5d 26 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 2d 26 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 e8 25 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 a9 25 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 77 25 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 48 25 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 2a 25 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 02 25 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 dd 24 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 b8 24 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 81 24 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 4c 24 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 fa 23 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 af 23 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 78 23 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 47 23 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 28 23 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 fe 22 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 d6 22 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 ad 22 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 71 22 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 36 22 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 e3 21 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 97 21 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 5f 21 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 30 21 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 1c 21 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 05 21 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 f0 20 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 da 20 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 b3 20 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 8e 20 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 4f 20 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 16 20 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 ea 1f 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 c4 1f 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 74 d2 ff ff               	fld dword ptr [eax - 0x2d8c]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 74 d2 ff ff               	fld dword ptr [eax - 0x2d8c]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 78 d2 ff ff               	fld dword ptr [eax - 0x2d88]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 82 1f 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 74 d2 ff ff               	fld dword ptr [eax - 0x2d8c]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 74 d2 ff ff               	fld dword ptr [eax - 0x2d8c]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 78 d2 ff ff               	fld dword ptr [eax - 0x2d88]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 40 1f 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 7c d2 ff ff               	fld dword ptr [eax - 0x2d84]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 80 d2 ff ff               	fld dword ptr [eax - 0x2d80]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 84 d2 ff ff               	fld dword ptr [eax - 0x2d7c]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 fe 1e 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 88 d2 ff ff               	fld dword ptr [eax - 0x2d78]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 8c d2 ff ff               	fld dword ptr [eax - 0x2d74]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 90 d2 ff ff               	fld dword ptr [eax - 0x2d70]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 86 1e 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 98 d2 ff ff               	fld qword ptr [eax - 0x2d68]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 98 d2 ff ff               	fld qword ptr [eax - 0x2d68]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 a0 d2 ff ff               	fld qword ptr [eax - 0x2d60]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 29 1e 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 98 d2 ff ff               	fld qword ptr [eax - 0x2d68]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 98 d2 ff ff               	fld qword ptr [eax - 0x2d68]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 a0 d2 ff ff               	fld qword ptr [eax - 0x2d60]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 cc 1d 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 a8 d2 ff ff               	fld qword ptr [eax - 0x2d58]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 b0 d2 ff ff               	fld qword ptr [eax - 0x2d50]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 b8 d2 ff ff               	fld qword ptr [eax - 0x2d48]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 6f 1d 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 c0 d2 ff ff               	fld qword ptr [eax - 0x2d40]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 c8 d2 ff ff               	fld qword ptr [eax - 0x2d38]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 d0 d2 ff ff               	fld qword ptr [eax - 0x2d30]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 df 1c 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 d8 d2 ff ff               	fld dword ptr [eax - 0x2d28]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 dc d2 ff ff               	fld dword ptr [eax - 0x2d24]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 7b 1c 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 0a 1c 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 c7 1b 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 90 d1 ff ff               	lea eax, [ebx - 0x2e70]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 b4 d1 ff ff               	lea eax, [ebx - 0x2e4c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80497de
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 4c                        	sub esp, 0x4c
0x804962f:   e8 c1 1a 00 00                  	call 0x804b0f5 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 49 00 00               	add edx, 0x49cc
0x804963a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804963d:   8b 4d 0c                        	mov ecx, dword ptr [ebp + 0xc]
0x8049640:   8b 5d 10                        	mov ebx, dword ptr [ebp + 0x10]
0x8049643:   8b 75 1c                        	mov esi, dword ptr [ebp + 0x1c]
0x8049646:   8b 7d 24                        	mov edi, dword ptr [ebp + 0x24]
0x8049649:   89 7d c0                        	mov dword ptr [ebp - 0x40], edi
0x804964c:   8b 7d 28                        	mov edi, dword ptr [ebp + 0x28]
0x804964f:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x8049652:   8b 7d 48                        	mov edi, dword ptr [ebp + 0x48]
0x8049655:   89 7d b8                        	mov dword ptr [ebp - 0x48], edi
0x8049658:   8b 7d 58                        	mov edi, dword ptr [ebp + 0x58]
0x804965b:   89 7d b4                        	mov dword ptr [ebp - 0x4c], edi
0x804965e:   8b 7d 64                        	mov edi, dword ptr [ebp + 0x64]
0x8049661:   89 7d b0                        	mov dword ptr [ebp - 0x50], edi
0x8049664:   8b 7d 6c                        	mov edi, dword ptr [ebp + 0x6c]
0x8049667:   89 7d ac                        	mov dword ptr [ebp - 0x54], edi
0x804966a:   8b 7d 70                        	mov edi, dword ptr [ebp + 0x70]
0x804966d:   89 7d a8                        	mov dword ptr [ebp - 0x58], edi
0x8049670:   8b 7d 74                        	mov edi, dword ptr [ebp + 0x74]
0x8049673:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x8049676:   89 c8                           	mov eax, ecx
0x8049678:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x804967b:   89 d8                           	mov eax, ebx
0x804967d:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x8049681:   89 f0                           	mov eax, esi
0x8049683:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x8049687:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804968b:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x804968f:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x8049693:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x8049697:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x804969b:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x804969f:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x80496a3:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496a6:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x80496aa:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496ae:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x80496b2:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496b5:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80496b9:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496bc:   89 f8                           	mov eax, edi
0x80496be:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496c2:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x80496c6:   88 82 24 00 00 00               	mov byte ptr [edx + 0x24], al
0x80496cc:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x80496d0:   88 82 25 00 00 00               	mov byte ptr [edx + 0x25], al
0x80496d6:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x80496da:   66 89 82 26 00 00 00            	mov word ptr [edx + 0x26], ax
0x80496e1:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x80496e4:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x80496ea:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x80496ed:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x80496f3:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x80496f7:   66 89 82 30 00 00 00            	mov word ptr [edx + 0x30], ax
0x80496fe:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x8049701:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x8049707:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x804970b:   66 89 82 38 00 00 00            	mov word ptr [edx + 0x38], ax
0x8049712:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049716:   66 89 82 3a 00 00 00            	mov word ptr [edx + 0x3a], ax
0x804971d:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x8049720:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x8049726:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049729:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x804972f:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x8049732:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x8049738:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x804973b:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x8049741:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x8049744:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x804974a:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x804974d:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x8049753:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049756:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x804975c:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x8049760:   66 89 82 a4 04 00 00            	mov word ptr [edx + 0x4a4], ax
0x8049767:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x804976a:   89 82 a8 04 00 00               	mov dword ptr [edx + 0x4a8], eax
0x8049770:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049773:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x8049779:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x804977c:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x8049782:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x8049786:   88 82 60 00 00 00               	mov byte ptr [edx + 0x60], al
0x804978c:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x804978f:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x8049795:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x8049798:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x804979e:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x80497a2:   66 89 82 ac 04 00 00            	mov word ptr [edx + 0x4ac], ax
0x80497a9:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x80497ac:   89 82 6c 00 00 00               	mov dword ptr [edx + 0x6c], eax
0x80497b2:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x80497b6:   88 82 70 00 00 00               	mov byte ptr [edx + 0x70], al
0x80497bc:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497c0:   88 82 71 00 00 00               	mov byte ptr [edx + 0x71], al
0x80497c6:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80497ca:   66 89 82 72 00 00 00            	mov word ptr [edx + 0x72], ax
0x80497d1:   b8 00 00 00 00                  	mov eax, 0
0x80497d6:   83 c4 4c                        	add esp, 0x4c
0x80497d9:   5b                              	pop ebx
0x80497da:   5e                              	pop esi
0x80497db:   5f                              	pop edi
0x80497dc:   5d                              	pop ebp
0x80497dd:   c3                              	ret 
; function: func_1 at 0x80497de -- 0x804ad21
0x80497de:   55                              	push ebp
0x80497df:   89 e5                           	mov ebp, esp
0x80497e1:   57                              	push edi
0x80497e2:   56                              	push esi
0x80497e3:   53                              	push ebx
0x80497e4:   81 ec 68 01 00 00               	sub esp, 0x168
0x80497ea:   e8 02 19 00 00                  	call 0x804b0f1 <__x86.get_pc_thunk.ax>
0x80497ef:   05 11 48 00 00                  	add eax, 0x4811
0x80497f4:   c6 45 f3 fd                     	mov byte ptr [ebp - 0xd], 0xfd
0x80497f8:   c6 45 f2 50                     	mov byte ptr [ebp - 0xe], 0x50
0x80497fc:   66 c7 45 f0 49 ae               	mov word ptr [ebp - 0x10], 0xae49
0x8049802:   c7 45 ec e6 9a dd a7            	mov dword ptr [ebp - 0x14], 0xa7dd9ae6
0x8049809:   c7 45 e8 51 8c 9f e1            	mov dword ptr [ebp - 0x18], 0xe19f8c51
0x8049810:   66 c7 45 e6 29 93               	mov word ptr [ebp - 0x1a], 0x9329
0x8049816:   c7 45 e0 b4 14 2d c9            	mov dword ptr [ebp - 0x20], 0xc92d14b4
0x804981d:   66 c7 85 72 ff ff ff a4 0b      	mov word ptr [ebp - 0x8e], 0xba4
0x8049826:   66 c7 85 70 ff ff ff f8 ff      	mov word ptr [ebp - 0x90], 0xfff8
0x804982f:   c7 45 dc c6 ba 46 00            	mov dword ptr [ebp - 0x24], 0x46bac6
0x8049836:   c7 45 d8 08 00 00 00            	mov dword ptr [ebp - 0x28], 8
0x804983d:   c7 45 d4 05 00 00 00            	mov dword ptr [ebp - 0x2c], 5
0x8049844:   c7 85 6c ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0x94], 0xfffffffb
0x804984e:   c7 45 d0 fe ff ff ff            	mov dword ptr [ebp - 0x30], 0xfffffffe
0x8049855:   c7 45 cc ff ff ff ff            	mov dword ptr [ebp - 0x34], 0xffffffff
0x804985c:   c7 45 c8 06 3f b0 b9            	mov dword ptr [ebp - 0x38], 0xb9b03f06
0x8049863:   66 c7 45 c6 00 00               	mov word ptr [ebp - 0x3a], 0
0x8049869:   c7 85 68 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x98], 0
0x8049873:   c7 45 c0 fe ff ff ff            	mov dword ptr [ebp - 0x40], 0xfffffffe
0x804987a:   c7 45 bc 37 49 79 c2            	mov dword ptr [ebp - 0x44], 0xc2794937
0x8049881:   c6 45 bb ff                     	mov byte ptr [ebp - 0x45], 0xff
0x8049885:   c7 85 64 ff ff ff 3a 1e fb 57   	mov dword ptr [ebp - 0x9c], 0x57fb1e3a
0x804988f:   c7 45 b4 ff ff ff ff            	mov dword ptr [ebp - 0x4c], 0xffffffff
0x8049896:   66 c7 85 62 ff ff ff 00 00      	mov word ptr [ebp - 0x9e], 0
0x804989f:   c7 85 5c ff ff ff d4 b1 f6 ee   	mov dword ptr [ebp - 0xa4], 0xeef6b1d4
0x80498a9:   c6 45 b3 a5                     	mov byte ptr [ebp - 0x4d], 0xa5
0x80498ad:   c6 85 5b ff ff ff 7a            	mov byte ptr [ebp - 0xa5], 0x7a
0x80498b4:   66 c7 45 b0 01 00               	mov word ptr [ebp - 0x50], 1
0x80498ba:   66 c7 85 58 ff ff ff 03 00      	mov word ptr [ebp - 0xa8], 3
0x80498c3:   c7 45 ac 2b 18 44 d4            	mov dword ptr [ebp - 0x54], 0xd444182b
0x80498ca:   c7 45 a8 00 00 00 00            	mov dword ptr [ebp - 0x58], 0
0x80498d1:   c7 45 a4 01 00 00 00            	mov dword ptr [ebp - 0x5c], 1
0x80498d8:   66 c7 45 a2 aa 2c               	mov word ptr [ebp - 0x5e], 0x2caa
0x80498de:   66 c7 85 56 ff ff ff 01 00      	mov word ptr [ebp - 0xaa], 1
0x80498e7:   66 c7 85 54 ff ff ff d0 48      	mov word ptr [ebp - 0xac], 0x48d0
0x80498f0:   c6 85 53 ff ff ff f6            	mov byte ptr [ebp - 0xad], 0xf6
0x80498f7:   c7 85 4c ff ff ff 78 ab ec 39   	mov dword ptr [ebp - 0xb4], 0x39ecab78
0x8049901:   c6 85 4b ff ff ff d3            	mov byte ptr [ebp - 0xb5], 0xd3
0x8049908:   c7 85 44 ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xbc], 0xfffffff6
0x8049912:   0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x8049916:   83 c0 01                        	add eax, 1
0x8049919:   88 45 f2                        	mov byte ptr [ebp - 0xe], al
0x804991c:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x8049920:   75 06                           	jne 0x8049928 <func_1+0x14a>
0x8049922:   80 7d f3 01                     	cmp byte ptr [ebp - 0xd], 1
0x8049926:   7e 07                           	jle 0x804992f <func_1+0x151>
0x8049928:   b8 01 00 00 00                  	mov eax, 1
0x804992d:   eb 05                           	jmp 0x8049934 <func_1+0x156>
0x804992f:   b8 00 00 00 00                  	mov eax, 0
0x8049934:   0f b6 d0                        	movzx edx, al
0x8049937:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804993b:   0f b6 c0                        	movzx eax, al
0x804993e:   89 c1                           	mov ecx, eax
0x8049940:   d3 e2                           	shl edx, cl
0x8049942:   89 d0                           	mov eax, edx
0x8049944:   66 c1 e8 09                     	shr ax, 9
0x8049948:   f7 d8                           	neg eax
0x804994a:   89 c2                           	mov edx, eax
0x804994c:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x8049950:   21 d0                           	and eax, edx
0x8049952:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x8049956:   0f b6 55 f2                     	movzx edx, byte ptr [ebp - 0xe]
0x804995a:   66 0f be 45 f3                  	movsx ax, byte ptr [ebp - 0xd]
0x804995f:   66 39 45 f0                     	cmp word ptr [ebp - 0x10], ax
0x8049963:   0f 9c c0                        	setl al
0x8049966:   0f b6 c8                        	movzx ecx, al
0x8049969:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x804996d:   0f af c1                        	imul eax, ecx
0x8049970:   39 c2                           	cmp edx, eax
0x8049972:   0f 8e 47 11 00 00               	jle 0x804aabf <func_1+0x12e1>
0x8049978:   c7 45 9c fc ff ff ff            	mov dword ptr [ebp - 0x64], 0xfffffffc
0x804997f:   c7 45 98 ff ff ff ff            	mov dword ptr [ebp - 0x68], 0xffffffff
0x8049986:   66 c7 85 2e ff ff ff 7c 13      	mov word ptr [ebp - 0xd2], 0x137c
0x804998f:   c7 45 94 01 00 00 00            	mov dword ptr [ebp - 0x6c], 1
0x8049996:   66 c7 85 2c ff ff ff 01 00      	mov word ptr [ebp - 0xd4], 1
0x804999f:   c7 85 28 ff ff ff 47 28 9e a6   	mov dword ptr [ebp - 0xd8], 0xa69e2847
0x80499a9:   c7 45 90 78 5d 2e 99            	mov dword ptr [ebp - 0x70], 0x992e5d78
0x80499b0:   c7 45 8c 9e 69 e1 6e            	mov dword ptr [ebp - 0x74], 0x6ee1699e
0x80499b7:   66 c7 45 8a 00 00               	mov word ptr [ebp - 0x76], 0
0x80499bd:   83 45 9c 01                     	add dword ptr [ebp - 0x64], 1
0x80499c1:   c7 45 9c 00 00 00 00            	mov dword ptr [ebp - 0x64], 0
0x80499c8:   e9 c0 02 00 00                  	jmp 0x8049c8d <func_1+0x4af>
0x80499cd:   c7 45 84 00 00 00 00            	mov dword ptr [ebp - 0x7c], 0
0x80499d4:   c6 85 cb fe ff ff 07            	mov byte ptr [ebp - 0x135], 7
0x80499db:   c6 85 ca fe ff ff 01            	mov byte ptr [ebp - 0x136], 1
0x80499e2:   c7 85 c4 fe ff ff f9 ff ff ff   	mov dword ptr [ebp - 0x13c], 0xfffffff9
0x80499ec:   0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x80499f0:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x80499f3:   c7 45 ec fe ff ff ff            	mov dword ptr [ebp - 0x14], 0xfffffffe
0x80499fa:   c7 45 84 00 00 00 00            	mov dword ptr [ebp - 0x7c], 0
0x8049a01:   e9 79 02 00 00                  	jmp 0x8049c7f <func_1+0x4a1>
0x8049a06:   c7 85 c0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x140], 0
0x8049a10:   c7 85 bc fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x144], 0xffffffff
0x8049a1a:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x8049a21:   83 7d ec 13                     	cmp dword ptr [ebp - 0x14], 0x13
0x8049a25:   0f 85 d7 00 00 00               	jne 0x8049b02 <func_1+0x324>
0x8049a2b:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x8049a2f:   0f be 95 5b ff ff ff            	movsx edx, byte ptr [ebp - 0xa5]
0x8049a36:   0f b6 4d b3                     	movzx ecx, byte ptr [ebp - 0x4d]
0x8049a3a:   0f b7 9d 62 ff ff ff            	movzx ebx, word ptr [ebp - 0x9e]
0x8049a41:   0f b6 75 bb                     	movzx esi, byte ptr [ebp - 0x45]
0x8049a45:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x8049a4b:   0f b7 7d c6                     	movzx edi, word ptr [ebp - 0x3a]
0x8049a4f:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x8049a55:   0f bf b5 70 ff ff ff            	movsx esi, word ptr [ebp - 0x90]
0x8049a5c:   89 b5 98 fe ff ff               	mov dword ptr [ebp - 0x168], esi
0x8049a62:   0f bf bd 72 ff ff ff            	movsx edi, word ptr [ebp - 0x8e]
0x8049a69:   89 bd 94 fe ff ff               	mov dword ptr [ebp - 0x16c], edi
0x8049a6f:   0f bf 75 e6                     	movsx esi, word ptr [ebp - 0x1a]
0x8049a73:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x8049a79:   0f bf 7d f0                     	movsx edi, word ptr [ebp - 0x10]
0x8049a7d:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x8049a83:   0f b6 7d f2                     	movzx edi, byte ptr [ebp - 0xe]
0x8049a87:   0f be 75 f3                     	movsx esi, byte ptr [ebp - 0xd]
0x8049a8b:   50                              	push eax
0x8049a8c:   52                              	push edx
0x8049a8d:   51                              	push ecx
0x8049a8e:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x8049a94:   53                              	push ebx
0x8049a95:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049a98:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x8049a9e:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049aa4:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049aa7:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049aaa:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x8049ab0:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049ab6:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049ab9:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049abc:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049abf:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049ac5:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049ac8:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049acb:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049ace:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x8049ad4:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x8049ada:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049add:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x8049ae3:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049ae6:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049ae9:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x8049aef:   57                              	push edi
0x8049af0:   56                              	push esi
0x8049af1:   e8 30 fb ff ff                  	call 0x8049626 <set_var>
0x8049af6:   83 c4 70                        	add esp, 0x70
0x8049af9:   0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x8049afd:   e9 17 12 00 00                  	jmp 0x804ad19 <func_1+0x153b>
0x8049b02:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049b06:   74 7b                           	je 0x8049b83 <func_1+0x3a5>
0x8049b08:   c7 85 b4 fe ff ff 05 88 8d a2   	mov dword ptr [ebp - 0x14c], 0xa28d8805
0x8049b12:   c7 85 b0 fe ff ff 31 c3 48 12   	mov dword ptr [ebp - 0x150], 0x1248c331
0x8049b1c:   c7 85 ac fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x154], 0
0x8049b26:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049b2a:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049b2d:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049b30:   89 c2                           	mov edx, eax
0x8049b32:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049b36:   31 d0                           	xor eax, edx
0x8049b38:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x8049b3c:   c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x8049b43:   eb 22                           	jmp 0x8049b67 <func_1+0x389>
0x8049b45:   66 c7 85 aa fe ff ff 01 00      	mov word ptr [ebp - 0x156], 1
0x8049b4e:   0f b7 85 aa fe ff ff            	movzx eax, word ptr [ebp - 0x156]
0x8049b55:   83 e8 01                        	sub eax, 1
0x8049b58:   66 89 85 aa fe ff ff            	mov word ptr [ebp - 0x156], ax
0x8049b5f:   83 45 dc 01                     	add dword ptr [ebp - 0x24], 1
0x8049b63:   83 45 e8 02                     	add dword ptr [ebp - 0x18], 2
0x8049b67:   83 7d e8 2e                     	cmp dword ptr [ebp - 0x18], 0x2e
0x8049b6b:   76 d8                           	jbe 0x8049b45 <func_1+0x367>
0x8049b6d:   83 45 cc 01                     	add dword ptr [ebp - 0x34], 1
0x8049b71:   83 bd ac fe ff ff 00            	cmp dword ptr [ebp - 0x154], 0
0x8049b78:   0f 84 f2 00 00 00               	je 0x8049c70 <func_1+0x492>
0x8049b7e:   e9 06 01 00 00                  	jmp 0x8049c89 <func_1+0x4ab>
0x8049b83:   c7 85 b8 fe ff ff c0 73 c5 1a   	mov dword ptr [ebp - 0x148], 0x1ac573c0
0x8049b8d:   8b 85 b8 fe ff ff               	mov eax, dword ptr [ebp - 0x148]
0x8049b93:   66 89 85 2e ff ff ff            	mov word ptr [ebp - 0xd2], ax
0x8049b9a:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x8049b9e:   0f be 95 5b ff ff ff            	movsx edx, byte ptr [ebp - 0xa5]
0x8049ba5:   0f b6 4d b3                     	movzx ecx, byte ptr [ebp - 0x4d]
0x8049ba9:   0f b7 9d 62 ff ff ff            	movzx ebx, word ptr [ebp - 0x9e]
0x8049bb0:   0f b6 75 bb                     	movzx esi, byte ptr [ebp - 0x45]
0x8049bb4:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x8049bba:   0f b7 7d c6                     	movzx edi, word ptr [ebp - 0x3a]
0x8049bbe:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x8049bc4:   0f bf b5 70 ff ff ff            	movsx esi, word ptr [ebp - 0x90]
0x8049bcb:   89 b5 98 fe ff ff               	mov dword ptr [ebp - 0x168], esi
0x8049bd1:   0f bf bd 72 ff ff ff            	movsx edi, word ptr [ebp - 0x8e]
0x8049bd8:   89 bd 94 fe ff ff               	mov dword ptr [ebp - 0x16c], edi
0x8049bde:   0f bf 75 e6                     	movsx esi, word ptr [ebp - 0x1a]
0x8049be2:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x8049be8:   0f bf 7d f0                     	movsx edi, word ptr [ebp - 0x10]
0x8049bec:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x8049bf2:   0f b6 7d f2                     	movzx edi, byte ptr [ebp - 0xe]
0x8049bf6:   0f be 75 f3                     	movsx esi, byte ptr [ebp - 0xd]
0x8049bfa:   50                              	push eax
0x8049bfb:   52                              	push edx
0x8049bfc:   51                              	push ecx
0x8049bfd:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x8049c03:   53                              	push ebx
0x8049c04:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049c07:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x8049c0d:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049c13:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049c16:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049c19:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x8049c1f:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049c25:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049c28:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049c2b:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049c2e:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049c34:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049c37:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049c3a:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049c3d:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x8049c43:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x8049c49:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049c4c:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x8049c52:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049c55:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049c58:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x8049c5e:   57                              	push edi
0x8049c5f:   56                              	push esi
0x8049c60:   e8 c1 f9 ff ff                  	call 0x8049626 <set_var>
0x8049c65:   83 c4 70                        	add esp, 0x70
0x8049c68:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049c6b:   e9 a9 10 00 00                  	jmp 0x804ad19 <func_1+0x153b>
0x8049c70:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x8049c74:   74 05                           	je 0x8049c7b <func_1+0x49d>
0x8049c76:   e9 97 fc ff ff                  	jmp 0x8049912 <func_1+0x134>
0x8049c7b:   83 6d 84 01                     	sub dword ptr [ebp - 0x7c], 1
0x8049c7f:   83 7d 84 e6                     	cmp dword ptr [ebp - 0x7c], -0x1a
0x8049c83:   0f 84 7d fd ff ff               	je 0x8049a06 <func_1+0x228>
0x8049c89:   83 45 9c 01                     	add dword ptr [ebp - 0x64], 1
0x8049c8d:   83 7d 9c 37                     	cmp dword ptr [ebp - 0x64], 0x37
0x8049c91:   0f 86 36 fd ff ff               	jbe 0x80499cd <func_1+0x1ef>
0x8049c97:   c7 45 e0 0f 00 00 00            	mov dword ptr [ebp - 0x20], 0xf
0x8049c9e:   e9 e2 0d 00 00                  	jmp 0x804aa85 <func_1+0x12a7>
0x8049ca3:   66 c7 85 26 ff ff ff ae af      	mov word ptr [ebp - 0xda], 0xafae
0x8049cac:   c7 45 80 00 00 00 00            	mov dword ptr [ebp - 0x80], 0
0x8049cb3:   c7 85 7c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x84], 0xffffffff
0x8049cbd:   c7 85 20 ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0xe0], 6
0x8049cc7:   c7 45 98 e2 ff ff ff            	mov dword ptr [ebp - 0x68], 0xffffffe2
0x8049cce:   e9 8c 01 00 00                  	jmp 0x8049e5f <func_1+0x681>
0x8049cd3:   c6 85 d7 fe ff ff 01            	mov byte ptr [ebp - 0x129], 1
0x8049cda:   c7 85 d0 fe ff ff fe ff ff ff   	mov dword ptr [ebp - 0x130], 0xfffffffe
0x8049ce4:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049ce7:   89 c2                           	mov edx, eax
0x8049ce9:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049ced:   31 d0                           	xor eax, edx
0x8049cef:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x8049cf2:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x8049cf9:   89 c2                           	mov edx, eax
0x8049cfb:   b8 03 00 00 00                  	mov eax, 3
0x8049d00:   0f b6 c0                        	movzx eax, al
0x8049d03:   f6 f2                           	div dl
0x8049d05:   0f b6 c4                        	movzx eax, ah
0x8049d08:   0f b6 c0                        	movzx eax, al
0x8049d0b:   8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x8049d0e:   0f b7 da                        	movzx ebx, dx
0x8049d11:   99                              	cdq 
0x8049d12:   f7 fb                           	idiv ebx
0x8049d14:   89 c2                           	mov edx, eax
0x8049d16:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049d19:   29 c2                           	sub edx, eax
0x8049d1b:   89 d0                           	mov eax, edx
0x8049d1d:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x8049d20:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x8049d27:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049d2a:   0f bf d0                        	movsx edx, ax
0x8049d2d:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x8049d34:   98                              	cwde 
0x8049d35:   89 c1                           	mov ecx, eax
0x8049d37:   d3 e2                           	shl edx, cl
0x8049d39:   89 d0                           	mov eax, edx
0x8049d3b:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049d3e:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049d41:   0f b7 c0                        	movzx eax, ax
0x8049d44:   69 c0 fe ff 00 00               	imul eax, eax, 0xfffe
0x8049d4a:   88 85 d7 fe ff ff               	mov byte ptr [ebp - 0x129], al
0x8049d50:   8b 85 d0 fe ff ff               	mov eax, dword ptr [ebp - 0x130]
0x8049d56:   0f b6 c0                        	movzx eax, al
0x8049d59:   6b c0 26                        	imul eax, eax, 0x26
0x8049d5c:   09 45 ac                        	or dword ptr [ebp - 0x54], eax
0x8049d5f:   83 65 a4 fd                     	and dword ptr [ebp - 0x5c], 0xfffffffd
0x8049d63:   c7 45 dc 01 00 00 00            	mov dword ptr [ebp - 0x24], 1
0x8049d6a:   83 7d dc 1f                     	cmp dword ptr [ebp - 0x24], 0x1f
0x8049d6e:   0f 85 e7 00 00 00               	jne 0x8049e5b <func_1+0x67d>
0x8049d74:   c7 85 cc fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x134], 1
0x8049d7e:   83 85 cc fe ff ff 01            	add dword ptr [ebp - 0x134], 1
0x8049d85:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x8049d89:   0f be 95 5b ff ff ff            	movsx edx, byte ptr [ebp - 0xa5]
0x8049d90:   0f b6 4d b3                     	movzx ecx, byte ptr [ebp - 0x4d]
0x8049d94:   0f b7 9d 62 ff ff ff            	movzx ebx, word ptr [ebp - 0x9e]
0x8049d9b:   0f b6 75 bb                     	movzx esi, byte ptr [ebp - 0x45]
0x8049d9f:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x8049da5:   0f b7 7d c6                     	movzx edi, word ptr [ebp - 0x3a]
0x8049da9:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x8049daf:   0f bf b5 70 ff ff ff            	movsx esi, word ptr [ebp - 0x90]
0x8049db6:   89 b5 98 fe ff ff               	mov dword ptr [ebp - 0x168], esi
0x8049dbc:   0f bf bd 72 ff ff ff            	movsx edi, word ptr [ebp - 0x8e]
0x8049dc3:   89 bd 94 fe ff ff               	mov dword ptr [ebp - 0x16c], edi
0x8049dc9:   0f bf 75 e6                     	movsx esi, word ptr [ebp - 0x1a]
0x8049dcd:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x8049dd3:   0f bf 7d f0                     	movsx edi, word ptr [ebp - 0x10]
0x8049dd7:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x8049ddd:   0f b6 7d f2                     	movzx edi, byte ptr [ebp - 0xe]
0x8049de1:   0f be 75 f3                     	movsx esi, byte ptr [ebp - 0xd]
0x8049de5:   50                              	push eax
0x8049de6:   52                              	push edx
0x8049de7:   51                              	push ecx
0x8049de8:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x8049dee:   53                              	push ebx
0x8049def:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049df2:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x8049df8:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049dfe:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049e01:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049e04:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x8049e0a:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049e10:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049e13:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049e16:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049e19:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049e1f:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049e22:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049e25:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049e28:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x8049e2e:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x8049e34:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049e37:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x8049e3d:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049e40:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049e43:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x8049e49:   57                              	push edi
0x8049e4a:   56                              	push esi
0x8049e4b:   e8 d6 f7 ff ff                  	call 0x8049626 <set_var>
0x8049e50:   83 c4 70                        	add esp, 0x70
0x8049e53:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049e56:   e9 be 0e 00 00                  	jmp 0x804ad19 <func_1+0x153b>
0x8049e5b:   83 45 98 01                     	add dword ptr [ebp - 0x68], 1
0x8049e5f:   83 7d 98 e7                     	cmp dword ptr [ebp - 0x68], -0x19
0x8049e63:   0f 84 6a fe ff ff               	je 0x8049cd3 <func_1+0x4f5>
0x8049e69:   66 83 bd 2c ff ff ff 00         	cmp word ptr [ebp - 0xd4], 0
0x8049e71:   75 28                           	jne 0x8049e9b <func_1+0x6bd>
0x8049e73:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x8049e7a:   23 45 80                        	and eax, dword ptr [ebp - 0x80]
0x8049e7d:   09 45 a8                        	or dword ptr [ebp - 0x58], eax
0x8049e80:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049e83:   0f b7 d0                        	movzx edx, ax
0x8049e86:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049e8a:   0f b7 c0                        	movzx eax, ax
0x8049e8d:   29 c2                           	sub edx, eax
0x8049e8f:   89 d0                           	mov eax, edx
0x8049e91:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049e94:   b8 00 00 00 00                  	mov eax, 0
0x8049e99:   eb 05                           	jmp 0x8049ea0 <func_1+0x6c2>
0x8049e9b:   b8 01 00 00 00                  	mov eax, 1
0x8049ea0:   98                              	cwde 
0x8049ea1:   0f bf 9d 70 ff ff ff            	movsx ebx, word ptr [ebp - 0x90]
0x8049ea8:   99                              	cdq 
0x8049ea9:   f7 fb                           	idiv ebx
0x8049eab:   85 c0                           	test eax, eax
0x8049ead:   0f 84 ae 06 00 00               	je 0x804a561 <func_1+0xd83>
0x8049eb3:   c7 85 18 ff ff ff ef fc 02 65   	mov dword ptr [ebp - 0xe8], 0x6502fcef
0x8049ebd:   c6 85 17 ff ff ff 01            	mov byte ptr [ebp - 0xe9], 1
0x8049ec4:   c7 85 10 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xf0], 0xffffffff
0x8049ece:   c6 85 0f ff ff ff 99            	mov byte ptr [ebp - 0xf1], 0x99
0x8049ed5:   0f bf 85 2e ff ff ff            	movsx eax, word ptr [ebp - 0xd2]
0x8049edc:   39 45 a8                        	cmp dword ptr [ebp - 0x58], eax
0x8049edf:   0f 9e c0                        	setle al
0x8049ee2:   0f b6 c0                        	movzx eax, al
0x8049ee5:   66 89 45 c6                     	mov word ptr [ebp - 0x3a], ax
0x8049ee9:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x8049eed:   c0 e8 03                        	shr al, 3
0x8049ef0:   0f b6 c0                        	movzx eax, al
0x8049ef3:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x8049ef9:   b9 0d 00 00 00                  	mov ecx, 0xd
0x8049efe:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x8049f04:   0f b7 c0                        	movzx eax, ax
0x8049f07:   c1 e0 0c                        	shl eax, 0xc
0x8049f0a:   89 c3                           	mov ebx, eax
0x8049f0c:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x8049f12:   0f bf d0                        	movsx edx, ax
0x8049f15:   09 4d ac                        	or dword ptr [ebp - 0x54], ecx
0x8049f18:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049f1b:   33 85 18 ff ff ff               	xor eax, dword ptr [ebp - 0xe8]
0x8049f21:   89 c1                           	mov ecx, eax
0x8049f23:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049f26:   39 c1                           	cmp ecx, eax
0x8049f28:   0f 93 c0                        	setae al
0x8049f2b:   f7 d0                           	not eax
0x8049f2d:   89 c1                           	mov ecx, eax
0x8049f2f:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049f32:   21 c8                           	and eax, ecx
0x8049f34:   66 0f be c8                     	movsx cx, al
0x8049f38:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x8049f3c:   66 98                           	cbw 
0x8049f3e:   0f af c1                        	imul eax, ecx
0x8049f41:   98                              	cwde 
0x8049f42:   29 c2                           	sub edx, eax
0x8049f44:   89 d0                           	mov eax, edx
0x8049f46:   39 c3                           	cmp ebx, eax
0x8049f48:   75 0b                           	jne 0x8049f55 <func_1+0x777>
0x8049f4a:   66 83 7d a2 00                  	cmp word ptr [ebp - 0x5e], 0
0x8049f4f:   0f 84 b9 03 00 00               	je 0x804a30e <func_1+0xb30>
0x8049f55:   66 c7 85 0c ff ff ff 2c 6b      	mov word ptr [ebp - 0xf4], 0x6b2c
0x8049f5e:   c7 85 08 ff ff ff c3 99 50 e7   	mov dword ptr [ebp - 0xf8], 0xe75099c3
0x8049f68:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x8049f6c:   0f 84 93 00 00 00               	je 0x804a005 <func_1+0x827>
0x8049f72:   c6 85 07 ff ff ff ff            	mov byte ptr [ebp - 0xf9], 0xff
0x8049f79:   c7 85 00 ff ff ff 17 ac 13 6b   	mov dword ptr [ebp - 0x100], 0x6b13ac17
0x8049f83:   80 bd 07 ff ff ff 00            	cmp byte ptr [ebp - 0xf9], 0
0x8049f8a:   0f 85 01 0b 00 00               	jne 0x804aa91 <func_1+0x12b3>
0x8049f90:   66 c7 45 c6 06 00               	mov word ptr [ebp - 0x3a], 6
0x8049f96:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x8049f9c:   35 d8 db 28 33                  	xor eax, 0x3328dbd8
0x8049fa1:   83 f8 01                        	cmp eax, 1
0x8049fa4:   0f 96 c0                        	setbe al
0x8049fa7:   0f b6 c0                        	movzx eax, al
0x8049faa:   23 45 98                        	and eax, dword ptr [ebp - 0x68]
0x8049fad:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x8049fb0:   0f 9e c0                        	setle al
0x8049fb3:   0f b6 c0                        	movzx eax, al
0x8049fb6:   89 85 00 ff ff ff               	mov dword ptr [ebp - 0x100], eax
0x8049fbc:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x8049fc2:   66 89 85 0c ff ff ff            	mov word ptr [ebp - 0xf4], ax
0x8049fc9:   0f b7 85 0c ff ff ff            	movzx eax, word ptr [ebp - 0xf4]
0x8049fd0:   39 85 08 ff ff ff               	cmp dword ptr [ebp - 0xf8], eax
0x8049fd6:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x8049fdd:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x8049fe0:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049fe3:   c0 f8 05                        	sar al, 5
0x8049fe6:   0f be c0                        	movsx eax, al
0x8049fe9:   09 45 d4                        	or dword ptr [ebp - 0x2c], eax
0x8049fec:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049fef:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x8049ff2:   66 83 bd 2e ff ff ff 00         	cmp word ptr [ebp - 0xd2], 0
0x8049ffa:   0f 84 dc 00 00 00               	je 0x804a0dc <func_1+0x8fe>
0x804a000:   e9 90 0a 00 00                  	jmp 0x804aa95 <func_1+0x12b7>
0x804a005:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x804a009:   0f be 95 5b ff ff ff            	movsx edx, byte ptr [ebp - 0xa5]
0x804a010:   0f b6 4d b3                     	movzx ecx, byte ptr [ebp - 0x4d]
0x804a014:   0f b7 9d 62 ff ff ff            	movzx ebx, word ptr [ebp - 0x9e]
0x804a01b:   0f b6 75 bb                     	movzx esi, byte ptr [ebp - 0x45]
0x804a01f:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a025:   0f b7 7d c6                     	movzx edi, word ptr [ebp - 0x3a]
0x804a029:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x804a02f:   0f bf b5 70 ff ff ff            	movsx esi, word ptr [ebp - 0x90]
0x804a036:   89 b5 98 fe ff ff               	mov dword ptr [ebp - 0x168], esi
0x804a03c:   0f bf bd 72 ff ff ff            	movsx edi, word ptr [ebp - 0x8e]
0x804a043:   89 bd 94 fe ff ff               	mov dword ptr [ebp - 0x16c], edi
0x804a049:   0f bf 75 e6                     	movsx esi, word ptr [ebp - 0x1a]
0x804a04d:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x804a053:   0f bf 7d f0                     	movsx edi, word ptr [ebp - 0x10]
0x804a057:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x804a05d:   0f b6 7d f2                     	movzx edi, byte ptr [ebp - 0xe]
0x804a061:   0f be 75 f3                     	movsx esi, byte ptr [ebp - 0xd]
0x804a065:   50                              	push eax
0x804a066:   52                              	push edx
0x804a067:   51                              	push ecx
0x804a068:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804a06e:   53                              	push ebx
0x804a06f:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a072:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a078:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a07e:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a081:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a084:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a08a:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a090:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a093:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a096:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a099:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a09f:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a0a2:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a0a5:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a0a8:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a0ae:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a0b4:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a0b7:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a0bd:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a0c0:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a0c3:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a0c9:   57                              	push edi
0x804a0ca:   56                              	push esi
0x804a0cb:   e8 56 f5 ff ff                  	call 0x8049626 <set_var>
0x804a0d0:   83 c4 70                        	add esp, 0x70
0x804a0d3:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a0d7:   e9 3d 0c 00 00                  	jmp 0x804ad19 <func_1+0x153b>
0x804a0dc:   c7 45 d4 ec 64 98 75            	mov dword ptr [ebp - 0x2c], 0x759864ec
0x804a0e3:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x804a0e9:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804a0ec:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a0ef:   0f b7 d0                        	movzx edx, ax
0x804a0f2:   0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x804a0f6:   c1 e0 06                        	shl eax, 6
0x804a0f9:   66 21 45 e6                     	and word ptr [ebp - 0x1a], ax
0x804a0fd:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x804a101:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x804a104:   0f 94 c0                        	sete al
0x804a107:   0f b6 c0                        	movzx eax, al
0x804a10a:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a10d:   0f 93 c0                        	setae al
0x804a110:   0f b6 c0                        	movzx eax, al
0x804a113:   89 c3                           	mov ebx, eax
0x804a115:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a118:   89 c1                           	mov ecx, eax
0x804a11a:   89 d8                           	mov eax, ebx
0x804a11c:   0f af c1                        	imul eax, ecx
0x804a11f:   0f b7 8d 0c ff ff ff            	movzx ecx, word ptr [ebp - 0xf4]
0x804a126:   01 c8                           	add eax, ecx
0x804a128:   0f be c0                        	movsx eax, al
0x804a12b:   b9 07 00 00 00                  	mov ecx, 7
0x804a130:   29 c1                           	sub ecx, eax
0x804a132:   0f b7 85 0c ff ff ff            	movzx eax, word ptr [ebp - 0xf4]
0x804a139:   39 c1                           	cmp ecx, eax
0x804a13b:   0f 9d c0                        	setge al
0x804a13e:   0f b6 c0                        	movzx eax, al
0x804a141:   89 c1                           	mov ecx, eax
0x804a143:   d3 e2                           	shl edx, cl
0x804a145:   89 d0                           	mov eax, edx
0x804a147:   85 c0                           	test eax, eax
0x804a149:   0f 84 27 01 00 00               	je 0x804a276 <func_1+0xa98>
0x804a14f:   66 c7 85 fa fe ff ff ba e7      	mov word ptr [ebp - 0x106], 0xe7ba
0x804a158:   c7 85 f4 fe ff ff 6d 9d 15 10   	mov dword ptr [ebp - 0x10c], 0x10159d6d
0x804a162:   0f bf 85 70 ff ff ff            	movsx eax, word ptr [ebp - 0x90]
0x804a169:   0f b7 55 f0                     	movzx edx, word ptr [ebp - 0x10]
0x804a16d:   89 d1                           	mov ecx, edx
0x804a16f:   8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x804a172:   09 ca                           	or edx, ecx
0x804a174:   83 e2 c1                        	and edx, 0xffffffc1
0x804a177:   88 55 f3                        	mov byte ptr [ebp - 0xd], dl
0x804a17a:   0f b6 55 f3                     	movzx edx, byte ptr [ebp - 0xd]
0x804a17e:   c0 fa 07                        	sar dl, 7
0x804a181:   0f be d2                        	movsx edx, dl
0x804a184:   80 ca ff                        	or dl, 0xff
0x804a187:   21 d0                           	and eax, edx
0x804a189:   89 c2                           	mov edx, eax
0x804a18b:   0f bf 85 fa fe ff ff            	movsx eax, word ptr [ebp - 0x106]
0x804a192:   01 c2                           	add edx, eax
0x804a194:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a197:   39 c2                           	cmp edx, eax
0x804a199:   0f 92 c0                        	setb al
0x804a19c:   0f b6 c0                        	movzx eax, al
0x804a19f:   39 85 68 ff ff ff               	cmp dword ptr [ebp - 0x98], eax
0x804a1a5:   0f 94 c0                        	sete al
0x804a1a8:   0f b6 d0                        	movzx edx, al
0x804a1ab:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a1ae:   0f b6 c0                        	movzx eax, al
0x804a1b1:   39 c2                           	cmp edx, eax
0x804a1b3:   75 04                           	jne 0x804a1b9 <func_1+0x9db>
0x804a1b5:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x804a1b9:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x804a1bf:   0f b7 c0                        	movzx eax, ax
0x804a1c2:   c1 f8 05                        	sar eax, 5
0x804a1c5:   83 f8 f6                        	cmp eax, -0xa
0x804a1c8:   0f 96 c0                        	setbe al
0x804a1cb:   0f b6 d0                        	movzx edx, al
0x804a1ce:   0f bf 85 70 ff ff ff            	movsx eax, word ptr [ebp - 0x90]
0x804a1d5:   39 c2                           	cmp edx, eax
0x804a1d7:   0f 94 c0                        	sete al
0x804a1da:   0f b6 c0                        	movzx eax, al
0x804a1dd:   21 85 f4 fe ff ff               	and dword ptr [ebp - 0x10c], eax
0x804a1e3:   80 45 bb 01                     	add byte ptr [ebp - 0x45], 1
0x804a1e7:   83 bd 64 ff ff ff 00            	cmp dword ptr [ebp - 0x9c], 0
0x804a1ee:   0f 85 a0 08 00 00               	jne 0x804aa94 <func_1+0x12b6>
0x804a1f4:   0f bf 85 58 ff ff ff            	movsx eax, word ptr [ebp - 0xa8]
0x804a1fb:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a1fe:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a201:   0f b6 c0                        	movzx eax, al
0x804a204:   66 69 c0 d7 00                  	imul ax, ax, 0xd7
0x804a209:   89 c1                           	mov ecx, eax
0x804a20b:   0f b7 85 56 ff ff ff            	movzx eax, word ptr [ebp - 0xaa]
0x804a212:   83 e0 c0                        	and eax, 0xffffffc0
0x804a215:   98                              	cwde 
0x804a216:   0d 4d 38 42 66                  	or eax, 0x6642384d
0x804a21b:   89 c2                           	mov edx, eax
0x804a21d:   0f b6 85 17 ff ff ff            	movzx eax, byte ptr [ebp - 0xe9]
0x804a224:   39 c2                           	cmp edx, eax
0x804a226:   0f 9e c0                        	setle al
0x804a229:   0f b6 d0                        	movzx edx, al
0x804a22c:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a22f:   0f b6 c0                        	movzx eax, al
0x804a232:   01 d0                           	add eax, edx
0x804a234:   09 c8                           	or eax, ecx
0x804a236:   89 c2                           	mov edx, eax
0x804a238:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x804a23e:   21 d0                           	and eax, edx
0x804a240:   f7 d8                           	neg eax
0x804a242:   0f b7 d0                        	movzx edx, ax
0x804a245:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a249:   0f b7 c0                        	movzx eax, ax
0x804a24c:   29 c2                           	sub edx, eax
0x804a24e:   89 d0                           	mov eax, edx
0x804a250:   83 f8 0e                        	cmp eax, 0xe
0x804a253:   0f 9e c0                        	setle al
0x804a256:   0f b6 d0                        	movzx edx, al
0x804a259:   0f b7 85 58 ff ff ff            	movzx eax, word ptr [ebp - 0xa8]
0x804a260:   0f b6 c0                        	movzx eax, al
0x804a263:   01 d0                           	add eax, edx
0x804a265:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x804a268:   0f 9f c0                        	setg al
0x804a26b:   0f b6 c0                        	movzx eax, al
0x804a26e:   31 45 d4                        	xor dword ptr [ebp - 0x2c], eax
0x804a271:   e9 9f 00 00 00                  	jmp 0x804a315 <func_1+0xb37>
0x804a276:   c7 85 fc fe ff ff 28 fc b2 6b   	mov dword ptr [ebp - 0x104], 0x6bb2fc28
0x804a280:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a283:   0f b6 c0                        	movzx eax, al
0x804a286:   66 23 45 e6                     	and ax, word ptr [ebp - 0x1a]
0x804a28a:   0f b7 d0                        	movzx edx, ax
0x804a28d:   0f b7 85 70 ff ff ff            	movzx eax, word ptr [ebp - 0x90]
0x804a294:   0f b7 c0                        	movzx eax, ax
0x804a297:   0f af c2                        	imul eax, edx
0x804a29a:   0b 45 e8                        	or eax, dword ptr [ebp - 0x18]
0x804a29d:   85 c0                           	test eax, eax
0x804a29f:   75 09                           	jne 0x804a2aa <func_1+0xacc>
0x804a2a1:   83 bd 28 ff ff ff 00            	cmp dword ptr [ebp - 0xd8], 0
0x804a2a8:   74 04                           	je 0x804a2ae <func_1+0xad0>
0x804a2aa:   80 7d bb 00                     	cmp byte ptr [ebp - 0x45], 0
0x804a2ae:   83 4d b4 1f                     	or dword ptr [ebp - 0x4c], 0x1f
0x804a2b2:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a2b5:   0f b6 c0                        	movzx eax, al
0x804a2b8:   83 c0 01                        	add eax, 1
0x804a2bb:   3d 1f f7 9d c2                  	cmp eax, 0xc29df71f
0x804a2c0:   0f 96 c0                        	setbe al
0x804a2c3:   0f b6 c0                        	movzx eax, al
0x804a2c6:   89 85 08 ff ff ff               	mov dword ptr [ebp - 0xf8], eax
0x804a2cc:   8b 85 08 ff ff ff               	mov eax, dword ptr [ebp - 0xf8]
0x804a2d2:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a2d5:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a2d8:   3d 86 f4 30 88                  	cmp eax, 0x8830f486
0x804a2dd:   0f 97 c0                        	seta al
0x804a2e0:   0f b6 c0                        	movzx eax, al
0x804a2e3:   ba 37 00 00 00                  	mov edx, 0x37
0x804a2e8:   0f af c2                        	imul eax, edx
0x804a2eb:   0f be c0                        	movsx eax, al
0x804a2ee:   8b 95 fc fe ff ff               	mov edx, dword ptr [ebp - 0x104]
0x804a2f4:   0f be da                        	movsx ebx, dl
0x804a2f7:   99                              	cdq 
0x804a2f8:   f7 fb                           	idiv ebx
0x804a2fa:   f7 d0                           	not eax
0x804a2fc:   25 47 59 00 00                  	and eax, 0x5947
0x804a301:   85 c0                           	test eax, eax
0x804a303:   0f 94 c0                        	sete al
0x804a306:   0f b6 c0                        	movzx eax, al
0x804a309:   31 45 d4                        	xor dword ptr [ebp - 0x2c], eax
0x804a30c:   eb 07                           	jmp 0x804a315 <func_1+0xb37>
0x804a30e:   c7 45 c0 10 96 f9 ed            	mov dword ptr [ebp - 0x40], 0xedf99610
0x804a315:   80 7d f2 00                     	cmp byte ptr [ebp - 0xe], 0
0x804a319:   0f 84 8a 01 00 00               	je 0x804a4a9 <func_1+0xccb>
0x804a31f:   c7 85 f0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x110], 1
0x804a329:   8b 85 10 ff ff ff               	mov eax, dword ptr [ebp - 0xf0]
0x804a32f:   0d f4 db d2 dc                  	or eax, 0xdcd2dbf4
0x804a334:   89 85 10 ff ff ff               	mov dword ptr [ebp - 0xf0], eax
0x804a33a:   8b 85 10 ff ff ff               	mov eax, dword ptr [ebp - 0xf0]
0x804a340:   f7 d8                           	neg eax
0x804a342:   83 f8 1a                        	cmp eax, 0x1a
0x804a345:   0f 95 c0                        	setne al
0x804a348:   0f b6 c0                        	movzx eax, al
0x804a34b:   f7 d0                           	not eax
0x804a34d:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a350:   8b 55 98                        	mov edx, dword ptr [ebp - 0x68]
0x804a353:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a356:   01 d0                           	add eax, edx
0x804a358:   85 c0                           	test eax, eax
0x804a35a:   74 0d                           	je 0x804a369 <func_1+0xb8b>
0x804a35c:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x804a360:   74 07                           	je 0x804a369 <func_1+0xb8b>
0x804a362:   b8 01 00 00 00                  	mov eax, 1
0x804a367:   eb 05                           	jmp 0x804a36e <func_1+0xb90>
0x804a369:   b8 00 00 00 00                  	mov eax, 0
0x804a36e:   98                              	cwde 
0x804a36f:   69 c0 79 46 00 00               	imul eax, eax, 0x4679
0x804a375:   25 f6 00 00 00                  	and eax, 0xf6
0x804a37a:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804a37d:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a380:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x804a383:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x804a387:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a38a:   b8 9a 06 37 58                  	mov eax, 0x5837069a
0x804a38f:   21 45 90                        	and dword ptr [ebp - 0x70], eax
0x804a392:   0f b7 85 70 ff ff ff            	movzx eax, word ptr [ebp - 0x90]
0x804a399:   83 c8 01                        	or eax, 1
0x804a39c:   98                              	cwde 
0x804a39d:   f7 d8                           	neg eax
0x804a39f:   89 c2                           	mov edx, eax
0x804a3a1:   0f bf 85 54 ff ff ff            	movsx eax, word ptr [ebp - 0xac]
0x804a3a8:   39 c2                           	cmp edx, eax
0x804a3aa:   0f 9f c0                        	setg al
0x804a3ad:   0f b6 c0                        	movzx eax, al
0x804a3b0:   f7 d8                           	neg eax
0x804a3b2:   89 85 10 ff ff ff               	mov dword ptr [ebp - 0xf0], eax
0x804a3b8:   83 bd 10 ff ff ff 00            	cmp dword ptr [ebp - 0xf0], 0
0x804a3bf:   75 06                           	jne 0x804a3c7 <func_1+0xbe9>
0x804a3c1:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a3c5:   74 07                           	je 0x804a3ce <func_1+0xbf0>
0x804a3c7:   b8 01 00 00 00                  	mov eax, 1
0x804a3cc:   eb 05                           	jmp 0x804a3d3 <func_1+0xbf5>
0x804a3ce:   b8 00 00 00 00                  	mov eax, 0
0x804a3d3:   05 0a 18 13 17                  	add eax, 0x1713180a
0x804a3d8:   23 45 e8                        	and eax, dword ptr [ebp - 0x18]
0x804a3db:   89 c2                           	mov edx, eax
0x804a3dd:   0f b7 85 2c ff ff ff            	movzx eax, word ptr [ebp - 0xd4]
0x804a3e4:   31 d0                           	xor eax, edx
0x804a3e6:   25 b0 36 8f 85                  	and eax, 0x858f36b0
0x804a3eb:   89 c2                           	mov edx, eax
0x804a3ed:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a3f0:   09 d0                           	or eax, edx
0x804a3f2:   85 c0                           	test eax, eax
0x804a3f4:   74 75                           	je 0x804a46b <func_1+0xc8d>
0x804a3f6:   c6 85 ee fe ff ff 2b            	mov byte ptr [ebp - 0x112], 0x2b
0x804a3fd:   c7 85 e8 fe ff ff ba 33 5a 60   	mov dword ptr [ebp - 0x118], 0x605a33ba
0x804a407:   c7 85 e4 fe ff ff fb ff ff ff   	mov dword ptr [ebp - 0x11c], 0xfffffffb
0x804a411:   0f be 85 ee fe ff ff            	movsx eax, byte ptr [ebp - 0x112]
0x804a418:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x804a41e:   0f be 95 ee fe ff ff            	movsx edx, byte ptr [ebp - 0x112]
0x804a425:   80 45 b3 01                     	add byte ptr [ebp - 0x4d], 1
0x804a429:   0f b6 45 b3                     	movzx eax, byte ptr [ebp - 0x4d]
0x804a42d:   39 c2                           	cmp edx, eax
0x804a42f:   0f 95 c0                        	setne al
0x804a432:   0f b6 d0                        	movzx edx, al
0x804a435:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a438:   89 c1                           	mov ecx, eax
0x804a43a:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a43d:   66 89 45 c6                     	mov word ptr [ebp - 0x3a], ax
0x804a441:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x804a445:   66 39 c1                        	cmp cx, ax
0x804a448:   0f 94 c0                        	sete al
0x804a44b:   0f b6 c0                        	movzx eax, al
0x804a44e:   39 c2                           	cmp edx, eax
0x804a450:   0f 9f c0                        	setg al
0x804a453:   0f b6 c0                        	movzx eax, al
0x804a456:   89 85 e4 fe ff ff               	mov dword ptr [ebp - 0x11c], eax
0x804a45c:   66 83 bd 62 ff ff ff 00         	cmp word ptr [ebp - 0x9e], 0
0x804a464:   74 38                           	je 0x804a49e <func_1+0xcc0>
0x804a466:   e9 a7 f4 ff ff                  	jmp 0x8049912 <func_1+0x134>
0x804a46b:   c6 85 ef fe ff ff f9            	mov byte ptr [ebp - 0x111], 0xf9
0x804a472:   0f b7 85 2c ff ff ff            	movzx eax, word ptr [ebp - 0xd4]
0x804a479:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a47c:   0f b6 85 17 ff ff ff            	movzx eax, byte ptr [ebp - 0xe9]
0x804a483:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a486:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a489:   09 45 bc                        	or dword ptr [ebp - 0x44], eax
0x804a48c:   0f b6 85 ef fe ff ff            	movzx eax, byte ptr [ebp - 0x111]
0x804a493:   f7 d8                           	neg eax
0x804a495:   83 f0 01                        	xor eax, 1
0x804a498:   88 85 0f ff ff ff               	mov byte ptr [ebp - 0xf1], al
0x804a49e:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a4a1:   89 85 10 ff ff ff               	mov dword ptr [ebp - 0xf0], eax
0x804a4a7:   eb 47                           	jmp 0x804a4f0 <func_1+0xd12>
0x804a4a9:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a4ac:   88 45 b3                        	mov byte ptr [ebp - 0x4d], al
0x804a4af:   0f b6 4d b3                     	movzx ecx, byte ptr [ebp - 0x4d]
0x804a4b3:   0f b6 45 bb                     	movzx eax, byte ptr [ebp - 0x45]
0x804a4b7:   8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x804a4ba:   0f b6 d2                        	movzx edx, dl
0x804a4bd:   66 69 d2 ae 00                  	imul dx, dx, 0xae
0x804a4c2:   0f b7 da                        	movzx ebx, dx
0x804a4c5:   99                              	cdq 
0x804a4c6:   f7 fb                           	idiv ebx
0x804a4c8:   89 d0                           	mov eax, edx
0x804a4ca:   98                              	cwde 
0x804a4cb:   f7 d8                           	neg eax
0x804a4cd:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a4d0:   0f 93 c0                        	setae al
0x804a4d3:   0f b6 c0                        	movzx eax, al
0x804a4d6:   23 45 b4                        	and eax, dword ptr [ebp - 0x4c]
0x804a4d9:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a4dc:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a4df:   f7 d8                           	neg eax
0x804a4e1:   0f b6 c0                        	movzx eax, al
0x804a4e4:   0f af c1                        	imul eax, ecx
0x804a4e7:   33 85 18 ff ff ff               	xor eax, dword ptr [ebp - 0xe8]
0x804a4ed:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804a4f0:   c7 45 94 ec ff ff ff            	mov dword ptr [ebp - 0x6c], 0xffffffec
0x804a4f7:   eb 5d                           	jmp 0x804a556 <func_1+0xd78>
0x804a4f9:   c6 85 e3 fe ff ff ff            	mov byte ptr [ebp - 0x11d], 0xff
0x804a500:   0f b6 85 e3 fe ff ff            	movzx eax, byte ptr [ebp - 0x11d]
0x804a507:   31 45 dc                        	xor dword ptr [ebp - 0x24], eax
0x804a50a:   0f b6 45 bb                     	movzx eax, byte ptr [ebp - 0x45]
0x804a50e:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a511:   0f 95 c0                        	setne al
0x804a514:   0f b6 c0                        	movzx eax, al
0x804a517:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x804a51a:   0f 94 c0                        	sete al
0x804a51d:   0f b6 c0                        	movzx eax, al
0x804a520:   66 83 bd 58 ff ff ff 00         	cmp word ptr [ebp - 0xa8], 0
0x804a528:   0f 95 c2                        	setne dl
0x804a52b:   0f b6 d2                        	movzx edx, dl
0x804a52e:   08 45 f3                        	or byte ptr [ebp - 0xd], al
0x804a531:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x804a535:   39 c2                           	cmp edx, eax
0x804a537:   0f 94 c0                        	sete al
0x804a53a:   0f b6 d0                        	movzx edx, al
0x804a53d:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x804a543:   01 d0                           	add eax, edx
0x804a545:   21 45 8c                        	and dword ptr [ebp - 0x74], eax
0x804a548:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x804a54f:   31 45 d0                        	xor dword ptr [ebp - 0x30], eax
0x804a552:   83 45 94 01                     	add dword ptr [ebp - 0x6c], 1
0x804a556:   83 7d 94 02                     	cmp dword ptr [ebp - 0x6c], 2
0x804a55a:   76 9d                           	jbe 0x804a4f9 <func_1+0xd1b>
0x804a55c:   e9 36 01 00 00                  	jmp 0x804a697 <func_1+0xeb9>
0x804a561:   66 c7 85 1e ff ff ff f1 91      	mov word ptr [ebp - 0xe2], 0x91f1
0x804a56a:   66 c7 45 8a 01 00               	mov word ptr [ebp - 0x76], 1
0x804a570:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x804a577:   0f 9f c0                        	setg al
0x804a57a:   0f b6 c0                        	movzx eax, al
0x804a57d:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a580:   0f 95 c0                        	setne al
0x804a583:   0f b6 c0                        	movzx eax, al
0x804a586:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804a589:   83 7d 80 00                     	cmp dword ptr [ebp - 0x80], 0
0x804a58d:   74 0d                           	je 0x804a59c <func_1+0xdbe>
0x804a58f:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a593:   74 07                           	je 0x804a59c <func_1+0xdbe>
0x804a595:   ba 01 00 00 00                  	mov edx, 1
0x804a59a:   eb 05                           	jmp 0x804a5a1 <func_1+0xdc3>
0x804a59c:   ba 00 00 00 00                  	mov edx, 0
0x804a5a1:   0f b7 85 2c ff ff ff            	movzx eax, word ptr [ebp - 0xd4]
0x804a5a8:   21 d0                           	and eax, edx
0x804a5aa:   f7 d8                           	neg eax
0x804a5ac:   0f b7 9d 26 ff ff ff            	movzx ebx, word ptr [ebp - 0xda]
0x804a5b3:   ba 00 00 00 00                  	mov edx, 0
0x804a5b8:   f7 f3                           	div ebx
0x804a5ba:   0f b6 d0                        	movzx edx, al
0x804a5bd:   89 d0                           	mov eax, edx
0x804a5bf:   01 c0                           	add eax, eax
0x804a5c1:   01 d0                           	add eax, edx
0x804a5c3:   98                              	cwde 
0x804a5c4:   8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x804a5c7:   0f bf da                        	movsx ebx, dx
0x804a5ca:   99                              	cdq 
0x804a5cb:   f7 fb                           	idiv ebx
0x804a5cd:   0f b7 c0                        	movzx eax, ax
0x804a5d0:   69 c0 e9 58 00 00               	imul eax, eax, 0x58e9
0x804a5d6:   85 c0                           	test eax, eax
0x804a5d8:   75 09                           	jne 0x804a5e3 <func_1+0xe05>
0x804a5da:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x804a5e1:   74 07                           	je 0x804a5ea <func_1+0xe0c>
0x804a5e3:   b8 01 00 00 00                  	mov eax, 1
0x804a5e8:   eb 05                           	jmp 0x804a5ef <func_1+0xe11>
0x804a5ea:   b8 00 00 00 00                  	mov eax, 0
0x804a5ef:   21 45 d0                        	and dword ptr [ebp - 0x30], eax
0x804a5f2:   0f bf 8d 1e ff ff ff            	movsx ecx, word ptr [ebp - 0xe2]
0x804a5f9:   0f b6 45 b3                     	movzx eax, byte ptr [ebp - 0x4d]
0x804a5fd:   8d 50 01                        	lea edx, [eax + 1]
0x804a600:   88 55 b3                        	mov byte ptr [ebp - 0x4d], dl
0x804a603:   0f b6 c0                        	movzx eax, al
0x804a606:   39 c1                           	cmp ecx, eax
0x804a608:   7f 23                           	jg 0x804a62d <func_1+0xe4f>
0x804a60a:   0f bf 85 72 ff ff ff            	movsx eax, word ptr [ebp - 0x8e]
0x804a611:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x804a614:   0f 9e c0                        	setle al
0x804a617:   0f b6 c0                        	movzx eax, al
0x804a61a:   23 45 d4                        	and eax, dword ptr [ebp - 0x2c]
0x804a61d:   83 f8 03                        	cmp eax, 3
0x804a620:   c7 45 d8 ff ff ff ff            	mov dword ptr [ebp - 0x28], 0xffffffff
0x804a627:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a62a:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804a62d:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x804a634:   74 0e                           	je 0x804a644 <func_1+0xe66>
0x804a636:   83 bd 28 ff ff ff 00            	cmp dword ptr [ebp - 0xd8], 0
0x804a63d:   74 58                           	je 0x804a697 <func_1+0xeb9>
0x804a63f:   e9 51 04 00 00                  	jmp 0x804aa95 <func_1+0x12b7>
0x804a644:   0f bf 85 56 ff ff ff            	movsx eax, word ptr [ebp - 0xaa]
0x804a64b:   25 c4 a7 d6 d8                  	and eax, 0xd8d6a7c4
0x804a650:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a653:   66 83 bd 26 ff ff ff 00         	cmp word ptr [ebp - 0xda], 0
0x804a65b:   0f 95 c0                        	setne al
0x804a65e:   0f b6 d0                        	movzx edx, al
0x804a661:   0f b6 45 b3                     	movzx eax, byte ptr [ebp - 0x4d]
0x804a665:   39 c2                           	cmp edx, eax
0x804a667:   0f 9d c0                        	setge al
0x804a66a:   0f b6 c0                        	movzx eax, al
0x804a66d:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x804a670:   0f 94 c0                        	sete al
0x804a673:   0f b6 c0                        	movzx eax, al
0x804a676:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a679:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a67c:   3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x804a67f:   0f 94 c0                        	sete al
0x804a682:   0f b6 d0                        	movzx edx, al
0x804a685:   0f bf 45 f0                     	movsx eax, word ptr [ebp - 0x10]
0x804a689:   31 d0                           	xor eax, edx
0x804a68b:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a68e:   0f 94 c0                        	sete al
0x804a691:   0f b6 c0                        	movzx eax, al
0x804a694:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a697:   c7 45 98 07 00 00 00            	mov dword ptr [ebp - 0x68], 7
0x804a69e:   83 7d 98 19                     	cmp dword ptr [ebp - 0x68], 0x19
0x804a6a2:   0f 84 d9 03 00 00               	je 0x804aa81 <func_1+0x12a3>
0x804a6a8:   c7 85 dc fe ff ff aa dd 57 9e   	mov dword ptr [ebp - 0x124], 0x9e57ddaa
0x804a6b2:   c7 85 78 ff ff ff 89 99 26 9d   	mov dword ptr [ebp - 0x88], 0x9d269989
0x804a6bc:   66 83 bd 56 ff ff ff 00         	cmp word ptr [ebp - 0xaa], 0
0x804a6c4:   0f 84 bc 01 00 00               	je 0x804a886 <func_1+0x10a8>
0x804a6ca:   c7 85 74 ff ff ff 89 6e e3 8b   	mov dword ptr [ebp - 0x8c], 0x8be36e89
0x804a6d4:   83 ad 74 ff ff ff 01            	sub dword ptr [ebp - 0x8c], 1
0x804a6db:   c7 85 74 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x8c], 0
0x804a6e5:   e9 7f 01 00 00                  	jmp 0x804a869 <func_1+0x108b>
0x804a6ea:   66 c7 85 d8 fe ff ff ff ff      	mov word ptr [ebp - 0x128], 0xffff
0x804a6f3:   8b 85 dc fe ff ff               	mov eax, dword ptr [ebp - 0x124]
0x804a6f9:   0f b6 c0                        	movzx eax, al
0x804a6fc:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a6ff:   83 ad 7c ff ff ff 01            	sub dword ptr [ebp - 0x84], 1
0x804a706:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a709:   89 c3                           	mov ebx, eax
0x804a70b:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a711:   83 e0 01                        	and eax, 1
0x804a714:   83 e8 01                        	sub eax, 1
0x804a717:   32 85 53 ff ff ff               	xor al, byte ptr [ebp - 0xad]
0x804a71d:   0f b6 c0                        	movzx eax, al
0x804a720:   c1 e0 05                        	shl eax, 5
0x804a723:   83 c8 a9                        	or eax, 0xffffffa9
0x804a726:   89 c2                           	mov edx, eax
0x804a728:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x804a72c:   01 d0                           	add eax, edx
0x804a72e:   89 c1                           	mov ecx, eax
0x804a730:   66 0f be d1                     	movsx dx, cl
0x804a734:   89 d0                           	mov eax, edx
0x804a736:   c1 e0 03                        	shl eax, 3
0x804a739:   29 d0                           	sub eax, edx
0x804a73b:   c1 e0 03                        	shl eax, 3
0x804a73e:   01 d0                           	add eax, edx
0x804a740:   66 c1 e8 08                     	shr ax, 8
0x804a744:   89 c2                           	mov edx, eax
0x804a746:   c0 fa 04                        	sar dl, 4
0x804a749:   89 c8                           	mov eax, ecx
0x804a74b:   c0 f8 07                        	sar al, 7
0x804a74e:   29 c2                           	sub edx, eax
0x804a750:   89 d0                           	mov eax, edx
0x804a752:   c1 e0 03                        	shl eax, 3
0x804a755:   01 d0                           	add eax, edx
0x804a757:   c1 e0 03                        	shl eax, 3
0x804a75a:   29 c1                           	sub ecx, eax
0x804a75c:   89 ca                           	mov edx, ecx
0x804a75e:   89 d0                           	mov eax, edx
0x804a760:   09 c3                           	or ebx, eax
0x804a762:   89 d9                           	mov ecx, ebx
0x804a764:   0f b7 85 54 ff ff ff            	movzx eax, word ptr [ebp - 0xac]
0x804a76b:   89 c2                           	mov edx, eax
0x804a76d:   0f b6 c1                        	movzx eax, cl
0x804a770:   f6 f2                           	div dl
0x804a772:   0f b6 c4                        	movzx eax, ah
0x804a775:   84 c0                           	test al, al
0x804a777:   74 0d                           	je 0x804a786 <func_1+0xfa8>
0x804a779:   83 7d 80 00                     	cmp dword ptr [ebp - 0x80], 0
0x804a77d:   74 07                           	je 0x804a786 <func_1+0xfa8>
0x804a77f:   b8 01 00 00 00                  	mov eax, 1
0x804a784:   eb 05                           	jmp 0x804a78b <func_1+0xfad>
0x804a786:   b8 00 00 00 00                  	mov eax, 0
0x804a78b:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804a791:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a794:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a797:   0f 96 c0                        	setbe al
0x804a79a:   0f b6 c0                        	movzx eax, al
0x804a79d:   31 45 80                        	xor dword ptr [ebp - 0x80], eax
0x804a7a0:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x804a7a4:   74 0d                           	je 0x804a7b3 <func_1+0xfd5>
0x804a7a6:   83 7d 80 00                     	cmp dword ptr [ebp - 0x80], 0
0x804a7aa:   74 07                           	je 0x804a7b3 <func_1+0xfd5>
0x804a7ac:   b8 01 00 00 00                  	mov eax, 1
0x804a7b1:   eb 05                           	jmp 0x804a7b8 <func_1+0xfda>
0x804a7b3:   b8 00 00 00 00                  	mov eax, 0
0x804a7b8:   66 c1 f8 0d                     	sar ax, 0xd
0x804a7bc:   83 f0 8b                        	xor eax, 0xffffff8b
0x804a7bf:   89 c1                           	mov ecx, eax
0x804a7c1:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a7c4:   89 c2                           	mov edx, eax
0x804a7c6:   89 c8                           	mov eax, ecx
0x804a7c8:   0f af c2                        	imul eax, edx
0x804a7cb:   0f b6 c0                        	movzx eax, al
0x804a7ce:   c1 e0 04                        	shl eax, 4
0x804a7d1:   39 85 7c ff ff ff               	cmp dword ptr [ebp - 0x84], eax
0x804a7d7:   0f 96 c0                        	setbe al
0x804a7da:   0f b6 c0                        	movzx eax, al
0x804a7dd:   66 69 c0 a4 e2                  	imul ax, ax, 0xe2a4
0x804a7e2:   0f bf d0                        	movsx edx, ax
0x804a7e5:   0f bf 85 58 ff ff ff            	movsx eax, word ptr [ebp - 0xa8]
0x804a7ec:   01 d0                           	add eax, edx
0x804a7ee:   83 c0 01                        	add eax, 1
0x804a7f1:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a7f4:   0f 95 c0                        	setne al
0x804a7f7:   0f b6 c0                        	movzx eax, al
0x804a7fa:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a7fd:   0f bf 85 56 ff ff ff            	movsx eax, word ptr [ebp - 0xaa]
0x804a804:   ba 00 00 00 00                  	mov edx, 0
0x804a809:   f7 b5 68 ff ff ff               	div dword ptr [ebp - 0x98]
0x804a80f:   89 d0                           	mov eax, edx
0x804a811:   85 c0                           	test eax, eax
0x804a813:   74 07                           	je 0x804a81c <func_1+0x103e>
0x804a815:   b8 01 00 00 00                  	mov eax, 1
0x804a81a:   eb 05                           	jmp 0x804a821 <func_1+0x1043>
0x804a81c:   b8 00 00 00 00                  	mov eax, 0
0x804a821:   66 98                           	cbw 
0x804a823:   83 e8 02                        	sub eax, 2
0x804a826:   0f b7 d0                        	movzx edx, ax
0x804a829:   0f bf 45 f0                     	movsx eax, word ptr [ebp - 0x10]
0x804a82d:   39 c2                           	cmp edx, eax
0x804a82f:   0f 95 c0                        	setne al
0x804a832:   0f b6 d0                        	movzx edx, al
0x804a835:   0f bf 45 f0                     	movsx eax, word ptr [ebp - 0x10]
0x804a839:   89 c1                           	mov ecx, eax
0x804a83b:   d3 e2                           	shl edx, cl
0x804a83d:   89 d0                           	mov eax, edx
0x804a83f:   98                              	cwde 
0x804a840:   0f bf 4d e6                     	movsx ecx, word ptr [ebp - 0x1a]
0x804a844:   99                              	cdq 
0x804a845:   f7 f9                           	idiv ecx
0x804a847:   89 d0                           	mov eax, edx
0x804a849:   0f be c0                        	movsx eax, al
0x804a84c:   83 e8 3b                        	sub eax, 0x3b
0x804a84f:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804a852:   83 7d e8 01                     	cmp dword ptr [ebp - 0x18], 1
0x804a856:   0f 95 c0                        	setne al
0x804a859:   0f b6 c0                        	movzx eax, al
0x804a85c:   89 85 20 ff ff ff               	mov dword ptr [ebp - 0xe0], eax
0x804a862:   83 85 74 ff ff ff 01            	add dword ptr [ebp - 0x8c], 1
0x804a869:   83 bd 74 ff ff ff 30            	cmp dword ptr [ebp - 0x8c], 0x30
0x804a870:   0f 84 74 fe ff ff               	je 0x804a6ea <func_1+0xf0c>
0x804a876:   66 83 7d 8a 00                  	cmp word ptr [ebp - 0x76], 0
0x804a87b:   0f 84 27 01 00 00               	je 0x804a9a8 <func_1+0x11ca>
0x804a881:   e9 fb 01 00 00                  	jmp 0x804aa81 <func_1+0x12a3>
0x804a886:   c6 85 db fe ff ff f9            	mov byte ptr [ebp - 0x125], 0xf9
0x804a88d:   66 83 7d c6 00                  	cmp word ptr [ebp - 0x3a], 0
0x804a892:   75 06                           	jne 0x804a89a <func_1+0x10bc>
0x804a894:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x804a898:   74 07                           	je 0x804a8a1 <func_1+0x10c3>
0x804a89a:   b8 01 00 00 00                  	mov eax, 1
0x804a89f:   eb 05                           	jmp 0x804a8a6 <func_1+0x10c8>
0x804a8a1:   b8 00 00 00 00                  	mov eax, 0
0x804a8a6:   08 85 db fe ff ff               	or byte ptr [ebp - 0x125], al
0x804a8ac:   66 83 7d c6 00                  	cmp word ptr [ebp - 0x3a], 0
0x804a8b1:   0f 94 c0                        	sete al
0x804a8b4:   0f b6 d0                        	movzx edx, al
0x804a8b7:   0f b7 85 70 ff ff ff            	movzx eax, word ptr [ebp - 0x90]
0x804a8be:   0f b7 c0                        	movzx eax, ax
0x804a8c1:   89 c1                           	mov ecx, eax
0x804a8c3:   d3 e2                           	shl edx, cl
0x804a8c5:   89 d0                           	mov eax, edx
0x804a8c7:   85 c0                           	test eax, eax
0x804a8c9:   0f 95 c0                        	setne al
0x804a8cc:   0f b6 c0                        	movzx eax, al
0x804a8cf:   31 45 80                        	xor dword ptr [ebp - 0x80], eax
0x804a8d2:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x804a8d6:   0f be 95 5b ff ff ff            	movsx edx, byte ptr [ebp - 0xa5]
0x804a8dd:   0f b6 4d b3                     	movzx ecx, byte ptr [ebp - 0x4d]
0x804a8e1:   0f b7 9d 62 ff ff ff            	movzx ebx, word ptr [ebp - 0x9e]
0x804a8e8:   0f b6 75 bb                     	movzx esi, byte ptr [ebp - 0x45]
0x804a8ec:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a8f2:   0f b7 7d c6                     	movzx edi, word ptr [ebp - 0x3a]
0x804a8f6:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x804a8fc:   0f bf b5 70 ff ff ff            	movsx esi, word ptr [ebp - 0x90]
0x804a903:   89 b5 98 fe ff ff               	mov dword ptr [ebp - 0x168], esi
0x804a909:   0f bf bd 72 ff ff ff            	movsx edi, word ptr [ebp - 0x8e]
0x804a910:   89 bd 94 fe ff ff               	mov dword ptr [ebp - 0x16c], edi
0x804a916:   0f bf 75 e6                     	movsx esi, word ptr [ebp - 0x1a]
0x804a91a:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x804a920:   0f bf 7d f0                     	movsx edi, word ptr [ebp - 0x10]
0x804a924:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x804a92a:   0f b6 7d f2                     	movzx edi, byte ptr [ebp - 0xe]
0x804a92e:   0f be 75 f3                     	movsx esi, byte ptr [ebp - 0xd]
0x804a932:   50                              	push eax
0x804a933:   52                              	push edx
0x804a934:   51                              	push ecx
0x804a935:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804a93b:   53                              	push ebx
0x804a93c:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a93f:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a945:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a94b:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a94e:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a951:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a957:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a95d:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a960:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a963:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a966:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a96c:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a96f:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a972:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a975:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a97b:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a981:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a984:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a98a:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a98d:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a990:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a996:   57                              	push edi
0x804a997:   56                              	push esi
0x804a998:   e8 89 ec ff ff                  	call 0x8049626 <set_var>
0x804a99d:   83 c4 70                        	add esp, 0x70
0x804a9a0:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a9a3:   e9 71 03 00 00                  	jmp 0x804ad19 <func_1+0x153b>
0x804a9a8:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x804a9ac:   0f be 95 5b ff ff ff            	movsx edx, byte ptr [ebp - 0xa5]
0x804a9b3:   0f b6 4d b3                     	movzx ecx, byte ptr [ebp - 0x4d]
0x804a9b7:   0f b7 9d 62 ff ff ff            	movzx ebx, word ptr [ebp - 0x9e]
0x804a9be:   0f b6 75 bb                     	movzx esi, byte ptr [ebp - 0x45]
0x804a9c2:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a9c8:   0f b7 7d c6                     	movzx edi, word ptr [ebp - 0x3a]
0x804a9cc:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x804a9d2:   0f bf b5 70 ff ff ff            	movsx esi, word ptr [ebp - 0x90]
0x804a9d9:   89 b5 98 fe ff ff               	mov dword ptr [ebp - 0x168], esi
0x804a9df:   0f bf bd 72 ff ff ff            	movsx edi, word ptr [ebp - 0x8e]
0x804a9e6:   89 bd 94 fe ff ff               	mov dword ptr [ebp - 0x16c], edi
0x804a9ec:   0f bf 75 e6                     	movsx esi, word ptr [ebp - 0x1a]
0x804a9f0:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x804a9f6:   0f bf 7d f0                     	movsx edi, word ptr [ebp - 0x10]
0x804a9fa:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x804aa00:   0f b6 7d f2                     	movzx edi, byte ptr [ebp - 0xe]
0x804aa04:   0f be 75 f3                     	movsx esi, byte ptr [ebp - 0xd]
0x804aa08:   50                              	push eax
0x804aa09:   52                              	push edx
0x804aa0a:   51                              	push ecx
0x804aa0b:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804aa11:   53                              	push ebx
0x804aa12:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804aa15:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804aa1b:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804aa21:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804aa24:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804aa27:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804aa2d:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804aa33:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804aa36:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804aa39:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804aa3c:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804aa42:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804aa45:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804aa48:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804aa4b:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804aa51:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804aa57:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804aa5a:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804aa60:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804aa63:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804aa66:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804aa6c:   57                              	push edi
0x804aa6d:   56                              	push esi
0x804aa6e:   e8 b3 eb ff ff                  	call 0x8049626 <set_var>
0x804aa73:   83 c4 70                        	add esp, 0x70
0x804aa76:   8b 85 dc fe ff ff               	mov eax, dword ptr [ebp - 0x124]
0x804aa7c:   e9 98 02 00 00                  	jmp 0x804ad19 <func_1+0x153b>
0x804aa81:   83 6d e0 08                     	sub dword ptr [ebp - 0x20], 8
0x804aa85:   83 7d e0 fe                     	cmp dword ptr [ebp - 0x20], -2
0x804aa89:   0f 8c 14 f2 ff ff               	jl 0x8049ca3 <func_1+0x4c5>
0x804aa8f:   eb 04                           	jmp 0x804aa95 <func_1+0x12b7>
0x804aa91:   90                              	nop 
0x804aa92:   eb 01                           	jmp 0x804aa95 <func_1+0x12b7>
0x804aa94:   90                              	nop 
0x804aa95:   66 c7 45 a2 00 00               	mov word ptr [ebp - 0x5e], 0
0x804aa9b:   eb 16                           	jmp 0x804aab3 <func_1+0x12d5>
0x804aa9d:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x804aaa1:   74 05                           	je 0x804aaa8 <func_1+0x12ca>
0x804aaa3:   e9 6a ee ff ff                  	jmp 0x8049912 <func_1+0x134>
0x804aaa8:   0f b7 45 a2                     	movzx eax, word ptr [ebp - 0x5e]
0x804aaac:   83 c0 01                        	add eax, 1
0x804aaaf:   66 89 45 a2                     	mov word ptr [ebp - 0x5e], ax
0x804aab3:   66 83 7d a2 1d                  	cmp word ptr [ebp - 0x5e], 0x1d
0x804aab8:   7f e3                           	jg 0x804aa9d <func_1+0x12bf>
0x804aaba:   e9 82 01 00 00                  	jmp 0x804ac41 <func_1+0x1463>
0x804aabf:   c6 85 43 ff ff ff 5a            	mov byte ptr [ebp - 0xbd], 0x5a
0x804aac6:   c7 85 3c ff ff ff 80 58 79 34   	mov dword ptr [ebp - 0xc4], 0x34795880
0x804aad0:   c7 85 38 ff ff ff fd c8 13 c9   	mov dword ptr [ebp - 0xc8], 0xc913c8fd
0x804aada:   c7 85 34 ff ff ff 92 e5 33 fe   	mov dword ptr [ebp - 0xcc], 0xfe33e592
0x804aae4:   c6 85 33 ff ff ff ff            	mov byte ptr [ebp - 0xcd], 0xff
0x804aaeb:   66 c7 45 f0 fa ff               	mov word ptr [ebp - 0x10], 0xfffa
0x804aaf1:   e9 1f 01 00 00                  	jmp 0x804ac15 <func_1+0x1437>
0x804aaf6:   c6 85 32 ff ff ff ff            	mov byte ptr [ebp - 0xce], 0xff
0x804aafd:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804ab00:   88 85 32 ff ff ff               	mov byte ptr [ebp - 0xce], al
0x804ab06:   c6 85 53 ff ff ff 00            	mov byte ptr [ebp - 0xad], 0
0x804ab0d:   80 bd 53 ff ff ff 12            	cmp byte ptr [ebp - 0xad], 0x12
0x804ab14:   0f 8f e3 00 00 00               	jg 0x804abfd <func_1+0x141f>
0x804ab1a:   66 c7 85 30 ff ff ff f7 ff      	mov word ptr [ebp - 0xd0], 0xfff7
0x804ab23:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x804ab27:   0f be 95 5b ff ff ff            	movsx edx, byte ptr [ebp - 0xa5]
0x804ab2e:   0f b6 4d b3                     	movzx ecx, byte ptr [ebp - 0x4d]
0x804ab32:   0f b7 9d 62 ff ff ff            	movzx ebx, word ptr [ebp - 0x9e]
0x804ab39:   0f b6 75 bb                     	movzx esi, byte ptr [ebp - 0x45]
0x804ab3d:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804ab43:   0f b7 7d c6                     	movzx edi, word ptr [ebp - 0x3a]
0x804ab47:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x804ab4d:   0f bf b5 70 ff ff ff            	movsx esi, word ptr [ebp - 0x90]
0x804ab54:   89 b5 98 fe ff ff               	mov dword ptr [ebp - 0x168], esi
0x804ab5a:   0f bf bd 72 ff ff ff            	movsx edi, word ptr [ebp - 0x8e]
0x804ab61:   89 bd 94 fe ff ff               	mov dword ptr [ebp - 0x16c], edi
0x804ab67:   0f bf 75 e6                     	movsx esi, word ptr [ebp - 0x1a]
0x804ab6b:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x804ab71:   0f bf 7d f0                     	movsx edi, word ptr [ebp - 0x10]
0x804ab75:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x804ab7b:   0f b6 7d f2                     	movzx edi, byte ptr [ebp - 0xe]
0x804ab7f:   0f be 75 f3                     	movsx esi, byte ptr [ebp - 0xd]
0x804ab83:   50                              	push eax
0x804ab84:   52                              	push edx
0x804ab85:   51                              	push ecx
0x804ab86:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804ab8c:   53                              	push ebx
0x804ab8d:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804ab90:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804ab96:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804ab9c:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804ab9f:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804aba2:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804aba8:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804abae:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804abb1:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804abb4:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804abb7:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804abbd:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804abc0:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804abc3:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804abc6:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804abcc:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804abd2:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804abd5:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804abdb:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804abde:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804abe1:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804abe7:   57                              	push edi
0x804abe8:   56                              	push esi
0x804abe9:   e8 38 ea ff ff                  	call 0x8049626 <set_var>
0x804abee:   83 c4 70                        	add esp, 0x70
0x804abf1:   0f b7 85 30 ff ff ff            	movzx eax, word ptr [ebp - 0xd0]
0x804abf8:   e9 1c 01 00 00                  	jmp 0x804ad19 <func_1+0x153b>
0x804abfd:   0f b6 85 32 ff ff ff            	movzx eax, byte ptr [ebp - 0xce]
0x804ac04:   88 85 43 ff ff ff               	mov byte ptr [ebp - 0xbd], al
0x804ac0a:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804ac0e:   83 c0 09                        	add eax, 9
0x804ac11:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x804ac15:   66 83 7d f0 0e                  	cmp word ptr [ebp - 0x10], 0xe
0x804ac1a:   0f 84 d6 fe ff ff               	je 0x804aaf6 <func_1+0x1318>
0x804ac20:   66 83 6d b0 01                  	sub word ptr [ebp - 0x50], 1
0x804ac25:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804ac2b:   89 85 3c ff ff ff               	mov dword ptr [ebp - 0xc4], eax
0x804ac31:   0f b6 85 4b ff ff ff            	movzx eax, byte ptr [ebp - 0xb5]
0x804ac38:   83 c0 01                        	add eax, 1
0x804ac3b:   88 85 4b ff ff ff               	mov byte ptr [ebp - 0xb5], al
0x804ac41:   83 ad 44 ff ff ff 01            	sub dword ptr [ebp - 0xbc], 1
0x804ac48:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x804ac4c:   0f be 95 5b ff ff ff            	movsx edx, byte ptr [ebp - 0xa5]
0x804ac53:   0f b6 4d b3                     	movzx ecx, byte ptr [ebp - 0x4d]
0x804ac57:   0f b7 9d 62 ff ff ff            	movzx ebx, word ptr [ebp - 0x9e]
0x804ac5e:   0f b6 75 bb                     	movzx esi, byte ptr [ebp - 0x45]
0x804ac62:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804ac68:   0f b7 7d c6                     	movzx edi, word ptr [ebp - 0x3a]
0x804ac6c:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x804ac72:   0f bf b5 70 ff ff ff            	movsx esi, word ptr [ebp - 0x90]
0x804ac79:   89 b5 98 fe ff ff               	mov dword ptr [ebp - 0x168], esi
0x804ac7f:   0f bf bd 72 ff ff ff            	movsx edi, word ptr [ebp - 0x8e]
0x804ac86:   89 bd 94 fe ff ff               	mov dword ptr [ebp - 0x16c], edi
0x804ac8c:   0f bf 75 e6                     	movsx esi, word ptr [ebp - 0x1a]
0x804ac90:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x804ac96:   0f bf 7d f0                     	movsx edi, word ptr [ebp - 0x10]
0x804ac9a:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x804aca0:   0f b6 7d f2                     	movzx edi, byte ptr [ebp - 0xe]
0x804aca4:   0f be 75 f3                     	movsx esi, byte ptr [ebp - 0xd]
0x804aca8:   50                              	push eax
0x804aca9:   52                              	push edx
0x804acaa:   51                              	push ecx
0x804acab:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804acb1:   53                              	push ebx
0x804acb2:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804acb5:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804acbb:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804acc1:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804acc4:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804acc7:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804accd:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804acd3:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804acd6:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804acd9:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804acdc:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804ace2:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804ace5:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804ace8:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804aceb:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804acf1:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804acf7:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804acfa:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804ad00:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804ad03:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804ad06:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804ad0c:   57                              	push edi
0x804ad0d:   56                              	push esi
0x804ad0e:   e8 13 e9 ff ff                  	call 0x8049626 <set_var>
0x804ad13:   83 c4 70                        	add esp, 0x70
0x804ad16:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804ad19:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804ad1c:   5b                              	pop ebx
0x804ad1d:   5e                              	pop esi
0x804ad1e:   5f                              	pop edi
0x804ad1f:   5d                              	pop ebp
0x804ad20:   c3                              	ret 
; function: main at 0x804ad21 -- 0x804b0f1
0x804ad21:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804ad25:   83 e4 f0                        	and esp, 0xfffffff0
0x804ad28:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804ad2b:   55                              	push ebp
0x804ad2c:   89 e5                           	mov ebp, esp
0x804ad2e:   53                              	push ebx
0x804ad2f:   51                              	push ecx
0x804ad30:   83 ec 10                        	sub esp, 0x10
0x804ad33:   e8 58 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ad38:   81 c3 c8 32 00 00               	add ebx, 0x32c8
0x804ad3e:   89 c8                           	mov eax, ecx
0x804ad40:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804ad47:   83 38 02                        	cmp dword ptr [eax], 2
0x804ad4a:   75 26                           	jne 0x804ad72 <main+0x51>
0x804ad4c:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804ad4f:   83 c0 04                        	add eax, 4
0x804ad52:   8b 00                           	mov eax, dword ptr [eax]
0x804ad54:   83 ec 08                        	sub esp, 8
0x804ad57:   8d 93 d8 d1 ff ff               	lea edx, [ebx - 0x2e28]
0x804ad5d:   52                              	push edx
0x804ad5e:   50                              	push eax
0x804ad5f:   e8 9c d5 ff ff                  	call 0x8048300 <strcmp>
0x804ad64:   83 c4 10                        	add esp, 0x10
0x804ad67:   85 c0                           	test eax, eax
0x804ad69:   75 07                           	jne 0x804ad72 <main+0x51>
0x804ad6b:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804ad72:   e8 df d6 ff ff                  	call 0x8048456 <platform_main_begin>
0x804ad77:   e8 ef e6 ff ff                  	call 0x804946b <crc32_gentab>
0x804ad7c:   e8 5d ea ff ff                  	call 0x80497de <func_1>
0x804ad81:   0f b6 83 24 00 00 00            	movzx eax, byte ptr [ebx + 0x24]
0x804ad88:   0f be c0                        	movsx eax, al
0x804ad8b:   83 ec 04                        	sub esp, 4
0x804ad8e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad91:   8d 93 da d1 ff ff               	lea edx, [ebx - 0x2e26]
0x804ad97:   52                              	push edx
0x804ad98:   50                              	push eax
0x804ad99:   e8 d9 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad9e:   83 c4 10                        	add esp, 0x10
0x804ada1:   0f b6 83 25 00 00 00            	movzx eax, byte ptr [ebx + 0x25]
0x804ada8:   0f b6 c0                        	movzx eax, al
0x804adab:   83 ec 04                        	sub esp, 4
0x804adae:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adb1:   8d 93 de d1 ff ff               	lea edx, [ebx - 0x2e22]
0x804adb7:   52                              	push edx
0x804adb8:   50                              	push eax
0x804adb9:   e8 b9 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adbe:   83 c4 10                        	add esp, 0x10
0x804adc1:   0f b7 83 26 00 00 00            	movzx eax, word ptr [ebx + 0x26]
0x804adc8:   98                              	cwde 
0x804adc9:   83 ec 04                        	sub esp, 4
0x804adcc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adcf:   8d 93 e2 d1 ff ff               	lea edx, [ebx - 0x2e1e]
0x804add5:   52                              	push edx
0x804add6:   50                              	push eax
0x804add7:   e8 9b e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804addc:   83 c4 10                        	add esp, 0x10
0x804addf:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804ade5:   83 ec 04                        	sub esp, 4
0x804ade8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adeb:   8d 93 e7 d1 ff ff               	lea edx, [ebx - 0x2e19]
0x804adf1:   52                              	push edx
0x804adf2:   50                              	push eax
0x804adf3:   e8 7f e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adf8:   83 c4 10                        	add esp, 0x10
0x804adfb:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804ae01:   83 ec 04                        	sub esp, 4
0x804ae04:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae07:   8d 93 ec d1 ff ff               	lea edx, [ebx - 0x2e14]
0x804ae0d:   52                              	push edx
0x804ae0e:   50                              	push eax
0x804ae0f:   e8 63 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae14:   83 c4 10                        	add esp, 0x10
0x804ae17:   0f b7 83 30 00 00 00            	movzx eax, word ptr [ebx + 0x30]
0x804ae1e:   98                              	cwde 
0x804ae1f:   83 ec 04                        	sub esp, 4
0x804ae22:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae25:   8d 93 f1 d1 ff ff               	lea edx, [ebx - 0x2e0f]
0x804ae2b:   52                              	push edx
0x804ae2c:   50                              	push eax
0x804ae2d:   e8 45 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae32:   83 c4 10                        	add esp, 0x10
0x804ae35:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804ae3b:   89 c2                           	mov edx, eax
0x804ae3d:   83 ec 04                        	sub esp, 4
0x804ae40:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae43:   8d 83 f6 d1 ff ff               	lea eax, [ebx - 0x2e0a]
0x804ae49:   50                              	push eax
0x804ae4a:   52                              	push edx
0x804ae4b:   e8 27 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae50:   83 c4 10                        	add esp, 0x10
0x804ae53:   0f b7 83 38 00 00 00            	movzx eax, word ptr [ebx + 0x38]
0x804ae5a:   98                              	cwde 
0x804ae5b:   83 ec 04                        	sub esp, 4
0x804ae5e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae61:   8d 93 fb d1 ff ff               	lea edx, [ebx - 0x2e05]
0x804ae67:   52                              	push edx
0x804ae68:   50                              	push eax
0x804ae69:   e8 09 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae6e:   83 c4 10                        	add esp, 0x10
0x804ae71:   0f b7 83 3a 00 00 00            	movzx eax, word ptr [ebx + 0x3a]
0x804ae78:   98                              	cwde 
0x804ae79:   83 ec 04                        	sub esp, 4
0x804ae7c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae7f:   8d 93 00 d2 ff ff               	lea edx, [ebx - 0x2e00]
0x804ae85:   52                              	push edx
0x804ae86:   50                              	push eax
0x804ae87:   e8 eb e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae8c:   83 c4 10                        	add esp, 0x10
0x804ae8f:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804ae95:   83 ec 04                        	sub esp, 4
0x804ae98:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae9b:   8d 93 05 d2 ff ff               	lea edx, [ebx - 0x2dfb]
0x804aea1:   52                              	push edx
0x804aea2:   50                              	push eax
0x804aea3:   e8 cf e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aea8:   83 c4 10                        	add esp, 0x10
0x804aeab:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804aeb1:   89 c2                           	mov edx, eax
0x804aeb3:   83 ec 04                        	sub esp, 4
0x804aeb6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aeb9:   8d 83 0a d2 ff ff               	lea eax, [ebx - 0x2df6]
0x804aebf:   50                              	push eax
0x804aec0:   52                              	push edx
0x804aec1:   e8 b1 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aec6:   83 c4 10                        	add esp, 0x10
0x804aec9:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804aecf:   89 c2                           	mov edx, eax
0x804aed1:   83 ec 04                        	sub esp, 4
0x804aed4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aed7:   8d 83 0f d2 ff ff               	lea eax, [ebx - 0x2df1]
0x804aedd:   50                              	push eax
0x804aede:   52                              	push edx
0x804aedf:   e8 93 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aee4:   83 c4 10                        	add esp, 0x10
0x804aee7:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804aeed:   89 c2                           	mov edx, eax
0x804aeef:   83 ec 04                        	sub esp, 4
0x804aef2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aef5:   8d 83 14 d2 ff ff               	lea eax, [ebx - 0x2dec]
0x804aefb:   50                              	push eax
0x804aefc:   52                              	push edx
0x804aefd:   e8 75 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af02:   83 c4 10                        	add esp, 0x10
0x804af05:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804af0b:   89 c2                           	mov edx, eax
0x804af0d:   83 ec 04                        	sub esp, 4
0x804af10:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af13:   8d 83 19 d2 ff ff               	lea eax, [ebx - 0x2de7]
0x804af19:   50                              	push eax
0x804af1a:   52                              	push edx
0x804af1b:   e8 57 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af20:   83 c4 10                        	add esp, 0x10
0x804af23:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804af29:   83 ec 04                        	sub esp, 4
0x804af2c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af2f:   8d 93 1e d2 ff ff               	lea edx, [ebx - 0x2de2]
0x804af35:   52                              	push edx
0x804af36:   50                              	push eax
0x804af37:   e8 3b e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af3c:   83 c4 10                        	add esp, 0x10
0x804af3f:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804af45:   89 c2                           	mov edx, eax
0x804af47:   83 ec 04                        	sub esp, 4
0x804af4a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af4d:   8d 83 23 d2 ff ff               	lea eax, [ebx - 0x2ddd]
0x804af53:   50                              	push eax
0x804af54:   52                              	push edx
0x804af55:   e8 1d e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af5a:   83 c4 10                        	add esp, 0x10
0x804af5d:   0f b7 83 a4 04 00 00            	movzx eax, word ptr [ebx + 0x4a4]
0x804af64:   0f b7 c0                        	movzx eax, ax
0x804af67:   83 ec 04                        	sub esp, 4
0x804af6a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af6d:   8d 93 29 d2 ff ff               	lea edx, [ebx - 0x2dd7]
0x804af73:   52                              	push edx
0x804af74:   50                              	push eax
0x804af75:   e8 fd e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af7a:   83 c4 10                        	add esp, 0x10
0x804af7d:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804af83:   83 ec 04                        	sub esp, 4
0x804af86:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af89:   8d 93 2f d2 ff ff               	lea edx, [ebx - 0x2dd1]
0x804af8f:   52                              	push edx
0x804af90:   50                              	push eax
0x804af91:   e8 e1 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af96:   83 c4 10                        	add esp, 0x10
0x804af99:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804af9f:   89 c2                           	mov edx, eax
0x804afa1:   83 ec 04                        	sub esp, 4
0x804afa4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afa7:   8d 83 35 d2 ff ff               	lea eax, [ebx - 0x2dcb]
0x804afad:   50                              	push eax
0x804afae:   52                              	push edx
0x804afaf:   e8 c3 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afb4:   83 c4 10                        	add esp, 0x10
0x804afb7:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804afbd:   89 c2                           	mov edx, eax
0x804afbf:   83 ec 04                        	sub esp, 4
0x804afc2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afc5:   8d 83 3b d2 ff ff               	lea eax, [ebx - 0x2dc5]
0x804afcb:   50                              	push eax
0x804afcc:   52                              	push edx
0x804afcd:   e8 a5 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afd2:   83 c4 10                        	add esp, 0x10
0x804afd5:   0f b6 83 60 00 00 00            	movzx eax, byte ptr [ebx + 0x60]
0x804afdc:   0f b6 c0                        	movzx eax, al
0x804afdf:   83 ec 04                        	sub esp, 4
0x804afe2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afe5:   8d 93 41 d2 ff ff               	lea edx, [ebx - 0x2dbf]
0x804afeb:   52                              	push edx
0x804afec:   50                              	push eax
0x804afed:   e8 85 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804aff2:   83 c4 10                        	add esp, 0x10
0x804aff5:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804affb:   83 ec 04                        	sub esp, 4
0x804affe:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b001:   8d 93 47 d2 ff ff               	lea edx, [ebx - 0x2db9]
0x804b007:   52                              	push edx
0x804b008:   50                              	push eax
0x804b009:   e8 69 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b00e:   83 c4 10                        	add esp, 0x10
0x804b011:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804b017:   83 ec 04                        	sub esp, 4
0x804b01a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b01d:   8d 93 4d d2 ff ff               	lea edx, [ebx - 0x2db3]
0x804b023:   52                              	push edx
0x804b024:   50                              	push eax
0x804b025:   e8 4d e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b02a:   83 c4 10                        	add esp, 0x10
0x804b02d:   0f b7 83 ac 04 00 00            	movzx eax, word ptr [ebx + 0x4ac]
0x804b034:   0f b7 c0                        	movzx eax, ax
0x804b037:   83 ec 04                        	sub esp, 4
0x804b03a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b03d:   8d 93 53 d2 ff ff               	lea edx, [ebx - 0x2dad]
0x804b043:   52                              	push edx
0x804b044:   50                              	push eax
0x804b045:   e8 2d e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b04a:   83 c4 10                        	add esp, 0x10
0x804b04d:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804b053:   89 c2                           	mov edx, eax
0x804b055:   83 ec 04                        	sub esp, 4
0x804b058:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b05b:   8d 83 59 d2 ff ff               	lea eax, [ebx - 0x2da7]
0x804b061:   50                              	push eax
0x804b062:   52                              	push edx
0x804b063:   e8 0f e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b068:   83 c4 10                        	add esp, 0x10
0x804b06b:   0f b6 83 70 00 00 00            	movzx eax, byte ptr [ebx + 0x70]
0x804b072:   0f b6 c0                        	movzx eax, al
0x804b075:   83 ec 04                        	sub esp, 4
0x804b078:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b07b:   8d 93 5f d2 ff ff               	lea edx, [ebx - 0x2da1]
0x804b081:   52                              	push edx
0x804b082:   50                              	push eax
0x804b083:   e8 ef e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b088:   83 c4 10                        	add esp, 0x10
0x804b08b:   0f b6 83 71 00 00 00            	movzx eax, byte ptr [ebx + 0x71]
0x804b092:   0f be c0                        	movsx eax, al
0x804b095:   83 ec 04                        	sub esp, 4
0x804b098:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b09b:   8d 93 65 d2 ff ff               	lea edx, [ebx - 0x2d9b]
0x804b0a1:   52                              	push edx
0x804b0a2:   50                              	push eax
0x804b0a3:   e8 cf e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0a8:   83 c4 10                        	add esp, 0x10
0x804b0ab:   0f b7 83 72 00 00 00            	movzx eax, word ptr [ebx + 0x72]
0x804b0b2:   0f b7 c0                        	movzx eax, ax
0x804b0b5:   83 ec 04                        	sub esp, 4
0x804b0b8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0bb:   8d 93 6b d2 ff ff               	lea edx, [ebx - 0x2d95]
0x804b0c1:   52                              	push edx
0x804b0c2:   50                              	push eax
0x804b0c3:   e8 af e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0c8:   83 c4 10                        	add esp, 0x10
0x804b0cb:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b0d1:   f7 d0                           	not eax
0x804b0d3:   83 ec 08                        	sub esp, 8
0x804b0d6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0d9:   50                              	push eax
0x804b0da:   e8 87 d3 ff ff                  	call 0x8048466 <platform_main_end>
0x804b0df:   83 c4 10                        	add esp, 0x10
0x804b0e2:   b8 00 00 00 00                  	mov eax, 0
0x804b0e7:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b0ea:   59                              	pop ecx
0x804b0eb:   5b                              	pop ebx
0x804b0ec:   5d                              	pop ebp
0x804b0ed:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b0f0:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b0f1 -- 0x804b0f5
0x804b0f1:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b0f4:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b0f5 -- 0x804b0f9
0x804b0f5:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b0f8:   c3                              	ret 
; data inside code section at 0x804b0f9 -- 0x804b100
0x804b0f9:   66 90 66 90 66 90 90                               |f.f.f..         |
; function: __libc_csu_init at 0x804b100 -- 0x804b15d
0x804b100:   55                              	push ebp
0x804b101:   57                              	push edi
0x804b102:   56                              	push esi
0x804b103:   53                              	push ebx
0x804b104:   e8 87 d2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b109:   81 c3 f7 2e 00 00               	add ebx, 0x2ef7
0x804b10f:   83 ec 0c                        	sub esp, 0xc
0x804b112:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b116:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b11c:   e8 ab d1 ff ff                  	call 0x80482cc <_init>
0x804b121:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b127:   29 c6                           	sub esi, eax
0x804b129:   c1 fe 02                        	sar esi, 2
0x804b12c:   85 f6                           	test esi, esi
0x804b12e:   74 25                           	je 0x804b155 <__libc_csu_init+0x55>
0x804b130:   31 ff                           	xor edi, edi
0x804b132:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b138:   83 ec 04                        	sub esp, 4
0x804b13b:   55                              	push ebp
0x804b13c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b140:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b144:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b14b:   83 c7 01                        	add edi, 1
0x804b14e:   83 c4 10                        	add esp, 0x10
0x804b151:   39 fe                           	cmp esi, edi
0x804b153:   75 e3                           	jne 0x804b138 <__libc_csu_init+0x38>
0x804b155:   83 c4 0c                        	add esp, 0xc
0x804b158:   5b                              	pop ebx
0x804b159:   5e                              	pop esi
0x804b15a:   5f                              	pop edi
0x804b15b:   5d                              	pop ebp
0x804b15c:   c3                              	ret 
; data inside code section at 0x804b15d -- 0x804b160
0x804b15d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b160 -- 0x804b162
0x804b160:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b164 -- 0x804b178
0x804b164:   53                              	push ebx
0x804b165:   83 ec 08                        	sub esp, 8
0x804b168:   e8 23 d2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b16d:   81 c3 93 2e 00 00               	add ebx, 0x2e93
0x804b173:   83 c4 08                        	add esp, 8
0x804b176:   5b                              	pop ebx
0x804b177:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 7c b1 04 08  04 00 00 00 11 00 10 00   |....|...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b178:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b188:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b198:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b1a8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b1b8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b1c8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b1d8:   31 00 67 5f 32 00 67 5f  36 00 67 5f 31 38 00 67   |1.g_2.g_6.g_18.g|
0x804b1e8:   5f 32 35 00 67 5f 33 30  00 67 5f 33 31 00 67 5f   |_25.g_30.g_31.g_|
0x804b1f8:   33 35 00 67 5f 33 36 00  67 5f 34 31 00 67 5f 34   |35.g_36.g_41.g_4|
0x804b208:   33 00 67 5f 34 39 00 67  5f 35 31 00 67 5f 35 32   |3.g_49.g_51.g_52|
0x804b218:   00 67 5f 35 35 00 67 5f  35 36 00 67 5f 31 31 33   |.g_55.g_56.g_113|
0x804b228:   00 67 5f 31 32 35 00 67  5f 31 33 32 00 67 5f 31   |.g_125.g_132.g_1|
0x804b238:   36 34 00 67 5f 31 36 35  00 67 5f 31 36 36 00 67   |64.g_165.g_166.g|
0x804b248:   5f 31 36 39 00 67 5f 31  39 34 00 67 5f 32 32 32   |_169.g_194.g_222|
0x804b258:   00 67 5f 32 32 38 00 67  5f 32 32 39 00 67 5f 33   |.g_228.g_229.g_3|
0x804b268:   37 33 00 67 5f 33 37 34  00 00 00 00 00 00 00 3f   |73.g_374.......?|
0x804b278:   ff ff ff 7e 00 00 80 0d  00 00 80 31 ff ff 7f 3f   |...~.......1...?|
0x804b288:   00 00 00 27 00 00 80 71  ff ff ff 34 00 00 00 00   |...'...q...4....|
0x804b298:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804b2a8:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804b2b8:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804b2c8:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804b2d8:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804b2e0:   01 1b 03 3b b8 02 00 00  56 00 00 00 10 d0 ff ff   |...;....V.......|
0x804b2f0:   e8 02 00 00 50 d0 ff ff  0c 03 00 00 a0 d0 ff ff   |....P...........|
0x804b300:   d4 02 00 00 76 d1 ff ff  20 03 00 00 86 d1 ff ff   |....v... .......|
0x804b310:   40 03 00 00 b4 d1 ff ff  64 03 00 00 d2 d1 ff ff   |@.......d.......|
0x804b320:   84 03 00 00 fa d1 ff ff  a4 03 00 00 24 d2 ff ff   |............$...|
0x804b330:   c4 03 00 00 4d d2 ff ff  e4 03 00 00 90 d2 ff ff   |....M...........|
0x804b340:   04 04 00 00 d1 d2 ff ff  24 04 00 00 29 d3 ff ff   |........$...)...|
0x804b350:   48 04 00 00 7b d3 ff ff  6c 04 00 00 b8 d3 ff ff   |H...{...l.......|
0x804b360:   8c 04 00 00 ef d3 ff ff  ac 04 00 00 0e d4 ff ff   |................|
0x804b370:   cc 04 00 00 38 d4 ff ff  ec 04 00 00 64 d4 ff ff   |....8.......d...|
0x804b380:   0c 05 00 00 8f d4 ff ff  2c 05 00 00 d8 d4 ff ff   |........,.......|
0x804b390:   4c 05 00 00 1f d5 ff ff  6c 05 00 00 79 d5 ff ff   |L.......l...y...|
0x804b3a0:   90 05 00 00 cd d5 ff ff  b4 05 00 00 0c d6 ff ff   |................|
0x804b3b0:   d4 05 00 00 45 d6 ff ff  f4 05 00 00 67 d6 ff ff   |....E.......g...|
0x804b3c0:   14 06 00 00 b5 d6 ff ff  34 06 00 00 f1 d6 ff ff   |........4.......|
0x804b3d0:   54 06 00 00 7a d7 ff ff  74 06 00 00 ac d7 ff ff   |T...z...t.......|
0x804b3e0:   94 06 00 00 dc d7 ff ff  b4 06 00 00 21 d8 ff ff   |............!...|
0x804b3f0:   d4 06 00 00 60 d8 ff ff  f4 06 00 00 92 d8 ff ff   |....`...........|
0x804b400:   14 07 00 00 be d8 ff ff  34 07 00 00 dc d8 ff ff   |........4.......|
0x804b410:   54 07 00 00 04 d9 ff ff  74 07 00 00 29 d9 ff ff   |T.......t...)...|
0x804b420:   94 07 00 00 4e d9 ff ff  b4 07 00 00 85 d9 ff ff   |....N...........|
0x804b430:   d4 07 00 00 b9 d9 ff ff  f4 07 00 00 0b da ff ff   |................|
0x804b440:   18 08 00 00 57 da ff ff  3c 08 00 00 8e da ff ff   |....W...<.......|
0x804b450:   5c 08 00 00 bf da ff ff  7c 08 00 00 de da ff ff   |\.......|.......|
0x804b460:   9c 08 00 00 08 db ff ff  bc 08 00 00 30 db ff ff   |............0...|
0x804b470:   dc 08 00 00 59 db ff ff  fc 08 00 00 95 db ff ff   |....Y...........|
0x804b480:   1c 09 00 00 cf db ff ff  3c 09 00 00 22 dc ff ff   |........<..."...|
0x804b490:   60 09 00 00 6f dc ff ff  84 09 00 00 a7 dc ff ff   |`...o...........|
0x804b4a0:   a4 09 00 00 d9 dc ff ff  c4 09 00 00 ed dc ff ff   |................|
0x804b4b0:   e4 09 00 00 04 dd ff ff  04 0a 00 00 19 dd ff ff   |................|
0x804b4c0:   24 0a 00 00 2f dd ff ff  44 0a 00 00 56 dd ff ff   |$.../...D...V...|
0x804b4d0:   64 0a 00 00 7b dd ff ff  84 0a 00 00 ba dd ff ff   |d...{...........|
0x804b4e0:   a4 0a 00 00 f3 dd ff ff  c4 0a 00 00 1f de ff ff   |................|
0x804b4f0:   e4 0a 00 00 45 de ff ff  04 0b 00 00 87 de ff ff   |....E...........|
0x804b500:   24 0b 00 00 c9 de ff ff  44 0b 00 00 0b df ff ff   |$.......D.......|
0x804b510:   64 0b 00 00 80 df ff ff  84 0b 00 00 dd df ff ff   |d...............|
0x804b520:   a4 0b 00 00 3a e0 ff ff  c4 0b 00 00 97 e0 ff ff   |....:...........|
0x804b530:   e4 0b 00 00 27 e1 ff ff  04 0c 00 00 8b e1 ff ff   |....'...........|
0x804b540:   24 0c 00 00 fb e1 ff ff  44 0c 00 00 42 e2 ff ff   |$.......D...B...|
0x804b550:   68 0c 00 00 97 e2 ff ff  88 0c 00 00 de e2 ff ff   |h...............|
0x804b560:   ac 0c 00 00 46 e3 ff ff  d0 0c 00 00 fe e4 ff ff   |....F...........|
0x804b570:   00 0d 00 00 41 fa ff ff  30 0d 00 00 11 fe ff ff   |....A...0.......|
0x804b580:   68 0d 00 00 15 fe ff ff  7c 0d 00 00 20 fe ff ff   |h.......|... ...|
0x804b590:   90 0d 00 00 80 fe ff ff  dc 0d 00 00 14            |.............   |
; section: .eh_frame
0x804b59c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b5ac:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b5bc:   c4 cd ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b5cc:   30 00 00 00 20 cd ff ff  40 00 00 00 00 0e 08 46   |0... ...@......F|
0x804b5dc:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b5ec:   10 00 00 00 54 00 00 00  3c cd ff ff 08 00 00 00   |....T...<.......|
0x804b5fc:   00 00 00 00 1c 00 00 00  68 00 00 00 4e ce ff ff   |........h...N...|
0x804b60c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b61c:   04 04 00 00 20 00 00 00  88 00 00 00 3e ce ff ff   |.... .......>...|
0x804b62c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b63c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b64c:   48 ce ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |H........A....B.|
0x804b65c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b66c:   46 ce ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |F...(....A....B.|
0x804b67c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b68c:   4e ce ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |N...*....A....B.|
0x804b69c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b6ac:   58 ce ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |X...)....A....B.|
0x804b6bc:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b6cc:   61 ce ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |a...C....A....B.|
0x804b6dc:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b6ec:   84 ce ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b6fc:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b70c:   a5 ce ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b71c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b72c:   90 01 00 00 d9 ce ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b73c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b74c:   1c 00 00 00 b4 01 00 00  07 cf ff ff 3d 00 00 00   |............=...|
0x804b75c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b76c:   1c 00 00 00 d4 01 00 00  24 cf ff ff 37 00 00 00   |........$...7...|
0x804b77c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b78c:   1c 00 00 00 f4 01 00 00  3b cf ff ff 1f 00 00 00   |........;.......|
0x804b79c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b7ac:   1c 00 00 00 14 02 00 00  3a cf ff ff 2a 00 00 00   |........:...*...|
0x804b7bc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b7cc:   1c 00 00 00 34 02 00 00  44 cf ff ff 2c 00 00 00   |....4...D...,...|
0x804b7dc:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b7ec:   1c 00 00 00 54 02 00 00  50 cf ff ff 2b 00 00 00   |....T...P...+...|
0x804b7fc:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b80c:   1c 00 00 00 74 02 00 00  5b cf ff ff 49 00 00 00   |....t...[...I...|
0x804b81c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b82c:   1c 00 00 00 94 02 00 00  84 cf ff ff 47 00 00 00   |............G...|
0x804b83c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b84c:   20 00 00 00 b4 02 00 00  ab cf ff ff 5a 00 00 00   | ...........Z...|
0x804b85c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b86c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 e1 cf ff ff   |.... ...........|
0x804b87c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b88c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b89c:   11 d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b8ac:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b8bc:   30 d0 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |0...9....A....B.|
0x804b8cc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b8dc:   49 d0 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |I..."....A....B.|
0x804b8ec:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b8fc:   4b d0 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |K...N....A....B.|
0x804b90c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b91c:   79 d0 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |y...<....A....B.|
0x804b92c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b93c:   95 d0 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b94c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b95c:   fe d0 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b96c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b97c:   10 d1 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b98c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b99c:   20 d1 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   | ...E....A....B.|
0x804b9ac:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b9bc:   45 d1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |E...?....A....B.|
0x804b9cc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b9dc:   64 d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |d...2....A....B.|
0x804b9ec:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b9fc:   76 d1 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |v...,....A....B.|
0x804ba0c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804ba1c:   82 d1 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804ba2c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804ba3c:   80 d1 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804ba4c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804ba5c:   88 d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ba6c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804ba7c:   8d d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ba8c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804ba9c:   92 d1 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804baac:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804babc:   a9 d1 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804bacc:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804badc:   bd d1 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804baec:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804bafc:   60 05 00 00 eb d1 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804bb0c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804bb1c:   1c 00 00 00 84 05 00 00  13 d2 ff ff 37 00 00 00   |............7...|
0x804bb2c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bb3c:   1c 00 00 00 a4 05 00 00  2a d2 ff ff 31 00 00 00   |........*...1...|
0x804bb4c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bb5c:   1c 00 00 00 c4 05 00 00  3b d2 ff ff 1f 00 00 00   |........;.......|
0x804bb6c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bb7c:   1c 00 00 00 e4 05 00 00  3a d2 ff ff 2a 00 00 00   |........:...*...|
0x804bb8c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bb9c:   1c 00 00 00 04 06 00 00  44 d2 ff ff 28 00 00 00   |........D...(...|
0x804bbac:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bbbc:   1c 00 00 00 24 06 00 00  4c d2 ff ff 29 00 00 00   |....$...L...)...|
0x804bbcc:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bbdc:   1c 00 00 00 44 06 00 00  55 d2 ff ff 3c 00 00 00   |....D...U...<...|
0x804bbec:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bbfc:   1c 00 00 00 64 06 00 00  71 d2 ff ff 3a 00 00 00   |....d...q...:...|
0x804bc0c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bc1c:   20 00 00 00 84 06 00 00  8b d2 ff ff 53 00 00 00   | ...........S...|
0x804bc2c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bc3c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 ba d2 ff ff   |.... ...........|
0x804bc4c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bc5c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bc6c:   e3 d2 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804bc7c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bc8c:   fb d2 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bc9c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bcac:   0d d3 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bcbc:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bccc:   01 d3 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bcdc:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bcec:   f8 d2 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bcfc:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bd0c:   ed d2 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bd1c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bd2c:   e3 d2 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804bd3c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bd4c:   ea d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bd5c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bd6c:   ef d2 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804bd7c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bd8c:   0e d3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bd9c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bdac:   27 d3 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |'...,....A....B.|
0x804bdbc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bdcc:   33 d3 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |3...&....A....B.|
0x804bddc:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bdec:   39 d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |9...B....A....B.|
0x804bdfc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804be0c:   5b d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |[...B....A....B.|
0x804be1c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804be2c:   7d d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |}...B....A....B.|
0x804be3c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804be4c:   9f d3 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804be5c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804be6c:   f4 d3 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804be7c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804be8c:   31 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |1...]....A....B.|
0x804be9c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804beac:   6e d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |n...]....A....B.|
0x804bebc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804becc:   ab d4 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bedc:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804beec:   1b d5 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804befc:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bf0c:   5f d5 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |_...p....A....B.|
0x804bf1c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bf2c:   af d5 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804bf3c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bf4c:   b0 09 00 00 d2 d5 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804bf5c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bf6c:   d0 09 00 00 07 d6 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804bf7c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bf8c:   20 00 00 00 f4 09 00 00  2a d6 ff ff 68 00 00 00   | .......*...h...|
0x804bf9c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bfac:   0c 04 04 00 2c 00 00 00  18 0a 00 00 6e d6 ff ff   |....,.......n...|
0x804bfbc:   b8 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804bfcc:   86 04 83 05 03 ab 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bfdc:   04 00 00 00 2c 00 00 00  48 0a 00 00 f6 d7 ff ff   |....,...H.......|
0x804bfec:   43 15 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |C....A....B..I..|
0x804bffc:   86 04 83 05 03 33 15 c3  41 c6 41 c7 41 c5 0c 04   |.....3..A.A.A...|
0x804c00c:   04 00 00 00 34 00 00 00  78 0a 00 00 09 ed ff ff   |....4...x.......|
0x804c01c:   d0 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804c02c:   0f 03 75 78 06 10 03 02  75 7c 03 bb 03 c1 0c 01   |..ux....u|......|
0x804c03c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804c04c:   b0 0a 00 00 a1 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804c05c:   10 00 00 00 c4 0a 00 00  91 f0 ff ff 04 00 00 00   |................|
0x804c06c:   00 00 00 00 48 00 00 00  d8 0a 00 00 88 f0 ff ff   |....H...........|
0x804c07c:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c08c:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c09c:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c0ac:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c0bc:   10 00 00 00 24 0b 00 00  9c f0 ff ff 02 00 00 00   |....$...........|
0x804c0cc:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 64 b1 04 08  19 00 00 00 0c df 04 08   |....d...........|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff fd 50 49 ae   |.............PI.|
0x804e028:   e6 9a dd a7 51 8c 9f e1  29 93 00 00 b4 14 2d c9   |....Q...).....-.|
0x804e038:   a4 0b f8 ff c6 ba 46 00  08 00 00 00 05 00 00 00   |......F.........|
0x804e048:   fb ff ff ff fe ff ff ff  ff ff ff ff 06 3f b0 b9   |.............?..|
0x804e058:   fe ff ff ff 37 49 79 c2  ff 00 00 00 3a 1e fb 57   |....7Iy.....:..W|
0x804e068:   ff ff ff ff d4 b1 f6 ee  a5 7a 01 00 ??            |.........z..?   |
