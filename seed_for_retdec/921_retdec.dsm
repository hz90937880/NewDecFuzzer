;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:58:38
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 00 d3 ff ff               	lea eax, [ebx - 0x2d00]
0x804835c:   50                              	push eax
0x804835d:   8d 83 a0 d2 ff ff               	lea eax, [ebx - 0x2d60]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 4e ae 04 08               	mov eax, 0x804ae4e
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 88 e0 04 08                  	mov eax, 0x804e088
0x80483a5:   3d 88 e0 04 08                  	cmp eax, 0x804e088
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 88 e0 04 08                  	push 0x804e088
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 88 e0 04 08                  	mov eax, 0x804e088
0x80483e5:   2d 88 e0 04 08                  	sub eax, 0x804e088
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 88 e0 04 08                  	push 0x804e088
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d a0 e0 04 08 00            	cmp byte ptr [0x804e0a0], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 a0 e0 04 08 01            	mov byte ptr [0x804e0a0], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 3a 2e 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 26 2e 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 20 d3 ff ff               	lea edx, [eax - 0x2ce0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 f9 2d 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 db 2d 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 b3 2d 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 89 2d 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 60 2d 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 1d 2d 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 db 2c 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 83 2c 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 32 2c 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 f5 2b 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 be 2b 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 9f 2b 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 75 2b 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 49 2b 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 1e 2b 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 d5 2a 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 8d 2a 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 33 2a 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 e0 29 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 a1 29 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 6b 29 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 49 29 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 fb 28 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 bf 28 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 36 28 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 04 28 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 d4 27 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 8f 27 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 50 27 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 1e 27 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 ef 26 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 d1 26 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 a9 26 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 84 26 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 5f 26 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 28 26 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 f3 25 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 a1 25 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 56 25 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 1f 25 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 ee 24 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 cf 24 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 a5 24 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 7d 24 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 54 24 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 18 24 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 dd 23 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 8a 23 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 3e 23 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 06 23 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 d7 22 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 c3 22 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 ac 22 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 97 22 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 81 22 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 5a 22 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 35 22 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 f6 21 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 bd 21 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 91 21 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 6b 21 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 34 d4 ff ff               	fld dword ptr [eax - 0x2bcc]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 34 d4 ff ff               	fld dword ptr [eax - 0x2bcc]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 38 d4 ff ff               	fld dword ptr [eax - 0x2bc8]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 29 21 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 34 d4 ff ff               	fld dword ptr [eax - 0x2bcc]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 34 d4 ff ff               	fld dword ptr [eax - 0x2bcc]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 38 d4 ff ff               	fld dword ptr [eax - 0x2bc8]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 e7 20 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 3c d4 ff ff               	fld dword ptr [eax - 0x2bc4]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 40 d4 ff ff               	fld dword ptr [eax - 0x2bc0]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 44 d4 ff ff               	fld dword ptr [eax - 0x2bbc]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 a5 20 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 48 d4 ff ff               	fld dword ptr [eax - 0x2bb8]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 4c d4 ff ff               	fld dword ptr [eax - 0x2bb4]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 50 d4 ff ff               	fld dword ptr [eax - 0x2bb0]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 2d 20 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 58 d4 ff ff               	fld qword ptr [eax - 0x2ba8]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 58 d4 ff ff               	fld qword ptr [eax - 0x2ba8]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 60 d4 ff ff               	fld qword ptr [eax - 0x2ba0]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 d0 1f 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 58 d4 ff ff               	fld qword ptr [eax - 0x2ba8]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 58 d4 ff ff               	fld qword ptr [eax - 0x2ba8]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 60 d4 ff ff               	fld qword ptr [eax - 0x2ba0]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 73 1f 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 68 d4 ff ff               	fld qword ptr [eax - 0x2b98]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 70 d4 ff ff               	fld qword ptr [eax - 0x2b90]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 78 d4 ff ff               	fld qword ptr [eax - 0x2b88]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 16 1f 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 80 d4 ff ff               	fld qword ptr [eax - 0x2b80]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 88 d4 ff ff               	fld qword ptr [eax - 0x2b78]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 90 d4 ff ff               	fld qword ptr [eax - 0x2b70]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 86 1e 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 98 d4 ff ff               	fld dword ptr [eax - 0x2b68]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 9c d4 ff ff               	fld dword ptr [eax - 0x2b64]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 22 1e 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 c0 00 00 00            	mov dword ptr [eax + edx*4 + 0xc0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 b1 1d 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 c0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xc0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 6e 1d 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 30 d3 ff ff               	lea eax, [ebx - 0x2cd0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 54 d3 ff ff               	lea eax, [ebx - 0x2cac]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: packed_printf at 0x8049626 -- 0x8049654
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   53                              	push ebx
0x804962a:   83 ec 04                        	sub esp, 4
0x804962d:   e8 66 1c 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8049632:   05 ce 49 00 00                  	add eax, 0x49ce
0x8049637:   83 ec 08                        	sub esp, 8
0x804963a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804963d:   8d 90 79 d3 ff ff               	lea edx, [eax - 0x2c87]
0x8049643:   52                              	push edx
0x8049644:   89 c3                           	mov ebx, eax
0x8049646:   e8 c5 ec ff ff                  	call 0x8048310 <printf>
0x804964b:   83 c4 10                        	add esp, 0x10
0x804964e:   90                              	nop 
0x804964f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049652:   c9                              	leave 
0x8049653:   c3                              	ret 
; function: set_var at 0x8049654 -- 0x804982b
0x8049654:   55                              	push ebp
0x8049655:   89 e5                           	mov ebp, esp
0x8049657:   57                              	push edi
0x8049658:   56                              	push esi
0x8049659:   53                              	push ebx
0x804965a:   83 ec 4c                        	sub esp, 0x4c
0x804965d:   e8 36 1c 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x8049662:   05 9e 49 00 00                  	add eax, 0x499e
0x8049667:   8b 55 24                        	mov edx, dword ptr [ebp + 0x24]
0x804966a:   8b 4d 30                        	mov ecx, dword ptr [ebp + 0x30]
0x804966d:   8b 5d 3c                        	mov ebx, dword ptr [ebp + 0x3c]
0x8049670:   8b 75 40                        	mov esi, dword ptr [ebp + 0x40]
0x8049673:   8b 7d 44                        	mov edi, dword ptr [ebp + 0x44]
0x8049676:   89 7d c0                        	mov dword ptr [ebp - 0x40], edi
0x8049679:   8b 7d 64                        	mov edi, dword ptr [ebp + 0x64]
0x804967c:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x804967f:   8b 7d 6c                        	mov edi, dword ptr [ebp + 0x6c]
0x8049682:   89 7d b8                        	mov dword ptr [ebp - 0x48], edi
0x8049685:   8b 7d 70                        	mov edi, dword ptr [ebp + 0x70]
0x8049688:   89 7d b4                        	mov dword ptr [ebp - 0x4c], edi
0x804968b:   8b 7d 74                        	mov edi, dword ptr [ebp + 0x74]
0x804968e:   89 7d b0                        	mov dword ptr [ebp - 0x50], edi
0x8049691:   8b 7d 78                        	mov edi, dword ptr [ebp + 0x78]
0x8049694:   89 7d ac                        	mov dword ptr [ebp - 0x54], edi
0x8049697:   8b 7d 7c                        	mov edi, dword ptr [ebp + 0x7c]
0x804969a:   89 7d a8                        	mov dword ptr [ebp - 0x58], edi
0x804969d:   8b bd 80 00 00 00               	mov edi, dword ptr [ebp + 0x80]
0x80496a3:   66 89 55 f0                     	mov word ptr [ebp - 0x10], dx
0x80496a7:   89 ca                           	mov edx, ecx
0x80496a9:   66 89 55 ec                     	mov word ptr [ebp - 0x14], dx
0x80496ad:   89 da                           	mov edx, ebx
0x80496af:   66 89 55 e8                     	mov word ptr [ebp - 0x18], dx
0x80496b3:   89 f2                           	mov edx, esi
0x80496b5:   66 89 55 e4                     	mov word ptr [ebp - 0x1c], dx
0x80496b9:   0f b6 55 c0                     	movzx edx, byte ptr [ebp - 0x40]
0x80496bd:   88 55 e0                        	mov byte ptr [ebp - 0x20], dl
0x80496c0:   0f b6 55 bc                     	movzx edx, byte ptr [ebp - 0x44]
0x80496c4:   88 55 dc                        	mov byte ptr [ebp - 0x24], dl
0x80496c7:   0f b6 55 b8                     	movzx edx, byte ptr [ebp - 0x48]
0x80496cb:   88 55 d8                        	mov byte ptr [ebp - 0x28], dl
0x80496ce:   0f b7 55 b4                     	movzx edx, word ptr [ebp - 0x4c]
0x80496d2:   66 89 55 d4                     	mov word ptr [ebp - 0x2c], dx
0x80496d6:   0f b7 55 b0                     	movzx edx, word ptr [ebp - 0x50]
0x80496da:   66 89 55 d0                     	mov word ptr [ebp - 0x30], dx
0x80496de:   0f b7 55 ac                     	movzx edx, word ptr [ebp - 0x54]
0x80496e2:   66 89 55 cc                     	mov word ptr [ebp - 0x34], dx
0x80496e6:   0f b7 55 a8                     	movzx edx, word ptr [ebp - 0x58]
0x80496ea:   66 89 55 c8                     	mov word ptr [ebp - 0x38], dx
0x80496ee:   89 fa                           	mov edx, edi
0x80496f0:   88 55 c4                        	mov byte ptr [ebp - 0x3c], dl
0x80496f3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80496f6:   89 90 24 00 00 00               	mov dword ptr [eax + 0x24], edx
0x80496fc:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80496ff:   89 90 28 00 00 00               	mov dword ptr [eax + 0x28], edx
0x8049705:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049708:   89 90 c4 04 00 00               	mov dword ptr [eax + 0x4c4], edx
0x804970e:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049711:   89 90 2c 00 00 00               	mov dword ptr [eax + 0x2c], edx
0x8049717:   8b 55 18                        	mov edx, dword ptr [ebp + 0x18]
0x804971a:   89 90 30 00 00 00               	mov dword ptr [eax + 0x30], edx
0x8049720:   8b 55 1c                        	mov edx, dword ptr [ebp + 0x1c]
0x8049723:   89 90 34 00 00 00               	mov dword ptr [eax + 0x34], edx
0x8049729:   8b 55 20                        	mov edx, dword ptr [ebp + 0x20]
0x804972c:   89 90 38 00 00 00               	mov dword ptr [eax + 0x38], edx
0x8049732:   0f b7 55 f0                     	movzx edx, word ptr [ebp - 0x10]
0x8049736:   66 89 90 3c 00 00 00            	mov word ptr [eax + 0x3c], dx
0x804973d:   8b 55 28                        	mov edx, dword ptr [ebp + 0x28]
0x8049740:   89 90 40 00 00 00               	mov dword ptr [eax + 0x40], edx
0x8049746:   8b 55 2c                        	mov edx, dword ptr [ebp + 0x2c]
0x8049749:   89 90 44 00 00 00               	mov dword ptr [eax + 0x44], edx
0x804974f:   0f b7 55 ec                     	movzx edx, word ptr [ebp - 0x14]
0x8049753:   66 89 90 48 00 00 00            	mov word ptr [eax + 0x48], dx
0x804975a:   8b 55 34                        	mov edx, dword ptr [ebp + 0x34]
0x804975d:   89 90 4c 00 00 00               	mov dword ptr [eax + 0x4c], edx
0x8049763:   8b 55 38                        	mov edx, dword ptr [ebp + 0x38]
0x8049766:   89 90 50 00 00 00               	mov dword ptr [eax + 0x50], edx
0x804976c:   0f b7 55 e8                     	movzx edx, word ptr [ebp - 0x18]
0x8049770:   66 89 90 54 00 00 00            	mov word ptr [eax + 0x54], dx
0x8049777:   0f b7 55 e4                     	movzx edx, word ptr [ebp - 0x1c]
0x804977b:   66 89 90 56 00 00 00            	mov word ptr [eax + 0x56], dx
0x8049782:   0f b6 55 e0                     	movzx edx, byte ptr [ebp - 0x20]
0x8049786:   88 90 58 00 00 00               	mov byte ptr [eax + 0x58], dl
0x804978c:   8b 55 48                        	mov edx, dword ptr [ebp + 0x48]
0x804978f:   89 90 5c 00 00 00               	mov dword ptr [eax + 0x5c], edx
0x8049795:   8b 55 4c                        	mov edx, dword ptr [ebp + 0x4c]
0x8049798:   89 90 60 00 00 00               	mov dword ptr [eax + 0x60], edx
0x804979e:   8b 55 50                        	mov edx, dword ptr [ebp + 0x50]
0x80497a1:   89 90 64 00 00 00               	mov dword ptr [eax + 0x64], edx
0x80497a7:   8b 55 54                        	mov edx, dword ptr [ebp + 0x54]
0x80497aa:   89 90 68 00 00 00               	mov dword ptr [eax + 0x68], edx
0x80497b0:   8b 55 58                        	mov edx, dword ptr [ebp + 0x58]
0x80497b3:   89 90 6c 00 00 00               	mov dword ptr [eax + 0x6c], edx
0x80497b9:   8b 55 5c                        	mov edx, dword ptr [ebp + 0x5c]
0x80497bc:   89 90 70 00 00 00               	mov dword ptr [eax + 0x70], edx
0x80497c2:   8b 55 60                        	mov edx, dword ptr [ebp + 0x60]
0x80497c5:   89 90 c8 04 00 00               	mov dword ptr [eax + 0x4c8], edx
0x80497cb:   0f b6 55 dc                     	movzx edx, byte ptr [ebp - 0x24]
0x80497cf:   88 90 74 00 00 00               	mov byte ptr [eax + 0x74], dl
0x80497d5:   8b 55 68                        	mov edx, dword ptr [ebp + 0x68]
0x80497d8:   89 90 78 00 00 00               	mov dword ptr [eax + 0x78], edx
0x80497de:   0f b6 55 d8                     	movzx edx, byte ptr [ebp - 0x28]
0x80497e2:   88 90 7c 00 00 00               	mov byte ptr [eax + 0x7c], dl
0x80497e8:   0f b7 55 d4                     	movzx edx, word ptr [ebp - 0x2c]
0x80497ec:   66 89 90 7e 00 00 00            	mov word ptr [eax + 0x7e], dx
0x80497f3:   0f b7 55 d0                     	movzx edx, word ptr [ebp - 0x30]
0x80497f7:   66 89 90 80 00 00 00            	mov word ptr [eax + 0x80], dx
0x80497fe:   0f b7 55 cc                     	movzx edx, word ptr [ebp - 0x34]
0x8049802:   66 89 90 82 00 00 00            	mov word ptr [eax + 0x82], dx
0x8049809:   0f b7 55 c8                     	movzx edx, word ptr [ebp - 0x38]
0x804980d:   66 89 90 84 00 00 00            	mov word ptr [eax + 0x84], dx
0x8049814:   0f b6 55 c4                     	movzx edx, byte ptr [ebp - 0x3c]
0x8049818:   88 90 86 00 00 00               	mov byte ptr [eax + 0x86], dl
0x804981e:   b8 00 00 00 00                  	mov eax, 0
0x8049823:   83 c4 4c                        	add esp, 0x4c
0x8049826:   5b                              	pop ebx
0x8049827:   5e                              	pop esi
0x8049828:   5f                              	pop edi
0x8049829:   5d                              	pop ebp
0x804982a:   c3                              	ret 
; function: func_1 at 0x804982b -- 0x804ae4e
0x804982b:   55                              	push ebp
0x804982c:   89 e5                           	mov ebp, esp
0x804982e:   57                              	push edi
0x804982f:   56                              	push esi
0x8049830:   53                              	push ebx
0x8049831:   81 ec c8 01 00 00               	sub esp, 0x1c8
0x8049837:   e8 5c 1a 00 00                  	call 0x804b298 <__x86.get_pc_thunk.ax>
0x804983c:   05 c4 47 00 00                  	add eax, 0x47c4
0x8049841:   c7 45 f0 06 00 00 00            	mov dword ptr [ebp - 0x10], 6
0x8049848:   c7 45 ec fd ff ff ff            	mov dword ptr [ebp - 0x14], 0xfffffffd
0x804984f:   c7 85 58 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa8], 0
0x8049859:   c7 45 e8 f7 ff ff ff            	mov dword ptr [ebp - 0x18], 0xfffffff7
0x8049860:   c6 85 57 ff ff ff 01            	mov byte ptr [ebp - 0xa9], 1
0x8049867:   c7 45 e4 01 00 00 00            	mov dword ptr [ebp - 0x1c], 1
0x804986e:   c7 45 e0 ff ff ff ff            	mov dword ptr [ebp - 0x20], 0xffffffff
0x8049875:   c7 45 dc 87 fa b3 b7            	mov dword ptr [ebp - 0x24], 0xb7b3fa87
0x804987c:   66 c7 45 da 84 49               	mov word ptr [ebp - 0x26], 0x4984
0x8049882:   c7 45 d4 04 00 00 00            	mov dword ptr [ebp - 0x2c], 4
0x8049889:   c7 85 50 ff ff ff f9 ff ff ff   	mov dword ptr [ebp - 0xb0], 0xfffffff9
0x8049893:   66 c7 45 d2 02 00               	mov word ptr [ebp - 0x2e], 2
0x8049899:   c7 45 cc 37 7e 42 26            	mov dword ptr [ebp - 0x34], 0x26427e37
0x80498a0:   c7 45 c8 fa ff ff ff            	mov dword ptr [ebp - 0x38], 0xfffffffa
0x80498a7:   66 c7 45 c6 ff ff               	mov word ptr [ebp - 0x3a], 0xffff
0x80498ad:   66 c7 85 4e ff ff ff 16 7f      	mov word ptr [ebp - 0xb2], 0x7f16
0x80498b6:   c6 45 c5 09                     	mov byte ptr [ebp - 0x3b], 9
0x80498ba:   c7 45 c0 bd b1 70 9f            	mov dword ptr [ebp - 0x40], 0x9f70b1bd
0x80498c1:   c7 45 bc 04 00 00 00            	mov dword ptr [ebp - 0x44], 4
0x80498c8:   c7 45 b8 30 e8 d1 8f            	mov dword ptr [ebp - 0x48], 0x8fd1e830
0x80498cf:   c7 45 b4 ff ff ff ff            	mov dword ptr [ebp - 0x4c], 0xffffffff
0x80498d6:   c7 45 b0 21 b1 95 57            	mov dword ptr [ebp - 0x50], 0x5795b121
0x80498dd:   c7 85 48 ff ff ff 3d d4 d9 23   	mov dword ptr [ebp - 0xb8], 0x23d9d43d
0x80498e7:   c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0x80498ee:   c6 45 ab ff                     	mov byte ptr [ebp - 0x55], 0xff
0x80498f2:   c7 45 a4 64 1c 54 54            	mov dword ptr [ebp - 0x5c], 0x54541c64
0x80498f9:   c6 45 a3 ff                     	mov byte ptr [ebp - 0x5d], 0xff
0x80498fd:   66 c7 45 a0 ff ff               	mov word ptr [ebp - 0x60], 0xffff
0x8049903:   66 c7 85 46 ff ff ff ff ff      	mov word ptr [ebp - 0xba], 0xffff
0x804990c:   66 c7 45 9e 03 00               	mov word ptr [ebp - 0x62], 3
0x8049912:   66 c7 45 9c ff ff               	mov word ptr [ebp - 0x64], 0xffff
0x8049918:   c6 45 9b ff                     	mov byte ptr [ebp - 0x65], 0xff
0x804991c:   c6 85 45 ff ff ff 00            	mov byte ptr [ebp - 0xbb], 0
0x8049923:   c7 45 94 01 00 00 00            	mov dword ptr [ebp - 0x6c], 1
0x804992a:   c7 45 90 01 00 00 00            	mov dword ptr [ebp - 0x70], 1
0x8049931:   c6 85 44 ff ff ff ff            	mov byte ptr [ebp - 0xbc], 0xff
0x8049938:   c7 45 8c 00 00 00 00            	mov dword ptr [ebp - 0x74], 0
0x804993f:   c7 45 88 02 d8 5c a5            	mov dword ptr [ebp - 0x78], 0xa55cd802
0x8049946:   c7 45 84 f7 ff ff ff            	mov dword ptr [ebp - 0x7c], 0xfffffff7
0x804994d:   c7 85 40 ff ff ff dc 35 bf 7c   	mov dword ptr [ebp - 0xc0], 0x7cbf35dc
0x8049957:   c6 85 3f ff ff ff c7            	mov byte ptr [ebp - 0xc1], 0xc7
0x804995e:   c6 85 3e ff ff ff b1            	mov byte ptr [ebp - 0xc2], 0xb1
0x8049965:   c7 85 38 ff ff ff 42 92 1d 01   	mov dword ptr [ebp - 0xc8], 0x11d9242
0x804996f:   c6 85 37 ff ff ff 01            	mov byte ptr [ebp - 0xc9], 1
0x8049976:   c7 85 30 ff ff ff 06 f8 36 de   	mov dword ptr [ebp - 0xd0], 0xde36f806
0x8049980:   c7 85 2c ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xd4], 2
0x804998a:   c7 45 f0 f6 ff ff ff            	mov dword ptr [ebp - 0x10], 0xfffffff6
0x8049991:   e9 df 05 00 00                  	jmp 0x8049f75 <func_1+0x74a>
0x8049996:   c6 85 2b ff ff ff ad            	mov byte ptr [ebp - 0xd5], 0xad
0x804999d:   c7 45 80 01 00 00 00            	mov dword ptr [ebp - 0x80], 1
0x80499a4:   c7 85 24 ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0xdc], 0xfffffffa
0x80499ae:   c6 85 7f ff ff ff 9e            	mov byte ptr [ebp - 0x81], 0x9e
0x80499b5:   c7 85 20 ff ff ff 35 03 f3 36   	mov dword ptr [ebp - 0xe0], 0x36f30335
0x80499bf:   66 c7 85 1e ff ff ff 01 00      	mov word ptr [ebp - 0xe2], 1
0x80499c8:   80 bd 2b ff ff ff 00            	cmp byte ptr [ebp - 0xd5], 0
0x80499cf:   0f 85 ac 05 00 00               	jne 0x8049f81 <func_1+0x756>
0x80499d5:   80 bd 45 ff ff ff 00            	cmp byte ptr [ebp - 0xbb], 0
0x80499dc:   0f 85 a2 05 00 00               	jne 0x8049f84 <func_1+0x759>
0x80499e2:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x80499e6:   74 4c                           	je 0x8049a34 <func_1+0x209>
0x80499e8:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x80499ed:   99                              	cdq 
0x80499ee:   f7 7d f0                        	idiv dword ptr [ebp - 0x10]
0x80499f1:   89 d0                           	mov eax, edx
0x80499f3:   98                              	cwde 
0x80499f4:   69 c0 43 e4 ff ff               	imul eax, eax, 0xffffe443
0x80499fa:   85 c0                           	test eax, eax
0x80499fc:   74 24                           	je 0x8049a22 <func_1+0x1f7>
0x80499fe:   c7 85 f0 fe ff ff d0 11 41 f3   	mov dword ptr [ebp - 0x110], 0xf34111d0
0x8049a08:   c7 85 ec fe ff ff fe ff ff ff   	mov dword ptr [ebp - 0x114], 0xfffffffe
0x8049a12:   83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x8049a16:   83 ad ec fe ff ff 01            	sub dword ptr [ebp - 0x114], 1
0x8049a1d:   e9 4f 05 00 00                  	jmp 0x8049f71 <func_1+0x746>
0x8049a22:   80 bd 2b ff ff ff 00            	cmp byte ptr [ebp - 0xd5], 0
0x8049a29:   0f 84 42 05 00 00               	je 0x8049f71 <func_1+0x746>
0x8049a2f:   e9 57 05 00 00                  	jmp 0x8049f8b <func_1+0x760>
0x8049a34:   66 c7 85 7c ff ff ff 25 4d      	mov word ptr [ebp - 0x84], 0x4d25
0x8049a3d:   c7 85 78 ff ff ff d7 b6 84 23   	mov dword ptr [ebp - 0x88], 0x2384b6d7
0x8049a47:   66 c7 85 1c ff ff ff ec dc      	mov word ptr [ebp - 0xe4], 0xdcec
0x8049a50:   66 c7 85 1a ff ff ff 4f f9      	mov word ptr [ebp - 0xe6], 0xf94f
0x8049a59:   c6 85 19 ff ff ff f8            	mov byte ptr [ebp - 0xe7], 0xf8
0x8049a60:   c6 85 18 ff ff ff ac            	mov byte ptr [ebp - 0xe8], 0xac
0x8049a67:   83 bd 58 ff ff ff 00            	cmp dword ptr [ebp - 0xa8], 0
0x8049a6e:   0f 85 13 05 00 00               	jne 0x8049f87 <func_1+0x75c>
0x8049a74:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049a77:   66 0f be d0                     	movsx dx, al
0x8049a7b:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049a7e:   66 98                           	cbw 
0x8049a80:   0f af c2                        	imul eax, edx
0x8049a83:   0f bf c8                        	movsx ecx, ax
0x8049a86:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049a89:   66 0f be 9d 2b ff ff ff         	movsx bx, byte ptr [ebp - 0xd5]
0x8049a91:   ba 00 00 00 00                  	mov edx, 0
0x8049a96:   66 f7 f3                        	div bx
0x8049a99:   89 d0                           	mov eax, edx
0x8049a9b:   66 3d f3 00                     	cmp ax, 0xf3
0x8049a9f:   0f 95 c0                        	setne al
0x8049aa2:   0f b6 c0                        	movzx eax, al
0x8049aa5:   0f af c8                        	imul ecx, eax
0x8049aa8:   89 ca                           	mov edx, ecx
0x8049aaa:   0f be 85 45 ff ff ff            	movsx eax, byte ptr [ebp - 0xbb]
0x8049ab1:   39 c2                           	cmp edx, eax
0x8049ab3:   0f 9f c0                        	setg al
0x8049ab6:   0f b6 d0                        	movzx edx, al
0x8049ab9:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049abc:   0f be c0                        	movsx eax, al
0x8049abf:   89 c1                           	mov ecx, eax
0x8049ac1:   d3 e2                           	shl edx, cl
0x8049ac3:   89 d0                           	mov eax, edx
0x8049ac5:   89 c2                           	mov edx, eax
0x8049ac7:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049aca:   31 d0                           	xor eax, edx
0x8049acc:   98                              	cwde 
0x8049acd:   39 45 94                        	cmp dword ptr [ebp - 0x6c], eax
0x8049ad0:   0f 9d c0                        	setge al
0x8049ad3:   0f b6 c0                        	movzx eax, al
0x8049ad6:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049ad9:   0f be 85 45 ff ff ff            	movsx eax, byte ptr [ebp - 0xbb]
0x8049ae0:   39 45 94                        	cmp dword ptr [ebp - 0x6c], eax
0x8049ae3:   0f 9f c0                        	setg al
0x8049ae6:   0f b6 c0                        	movzx eax, al
0x8049ae9:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049aec:   0f 84 49 01 00 00               	je 0x8049c3b <func_1+0x410>
0x8049af2:   c6 85 15 ff ff ff 56            	mov byte ptr [ebp - 0xeb], 0x56
0x8049af9:   c7 85 10 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xf0], 0
0x8049b03:   0f b6 85 15 ff ff ff            	movzx eax, byte ptr [ebp - 0xeb]
0x8049b0a:   c7 45 80 02 00 00 00            	mov dword ptr [ebp - 0x80], 2
0x8049b11:   39 45 80                        	cmp dword ptr [ebp - 0x80], eax
0x8049b14:   0f 9c c0                        	setl al
0x8049b17:   0f b6 c0                        	movzx eax, al
0x8049b1a:   f7 d0                           	not eax
0x8049b1c:   89 c1                           	mov ecx, eax
0x8049b1e:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049b21:   66 89 85 7c ff ff ff            	mov word ptr [ebp - 0x84], ax
0x8049b28:   0f b7 85 7c ff ff ff            	movzx eax, word ptr [ebp - 0x84]
0x8049b2f:   0f bf d0                        	movsx edx, ax
0x8049b32:   0f b6 85 15 ff ff ff            	movzx eax, byte ptr [ebp - 0xeb]
0x8049b39:   29 c2                           	sub edx, eax
0x8049b3b:   89 d0                           	mov eax, edx
0x8049b3d:   31 c8                           	xor eax, ecx
0x8049b3f:   21 85 78 ff ff ff               	and dword ptr [ebp - 0x88], eax
0x8049b45:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x8049b4b:   3b 45 94                        	cmp eax, dword ptr [ebp - 0x6c]
0x8049b4e:   0f 9e c0                        	setle al
0x8049b51:   0f b6 c0                        	movzx eax, al
0x8049b54:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049b57:   8b 8d 78 ff ff ff               	mov ecx, dword ptr [ebp - 0x88]
0x8049b5d:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049b60:   0f b6 c0                        	movzx eax, al
0x8049b63:   05 81 00 00 00                  	add eax, 0x81
0x8049b68:   39 45 80                        	cmp dword ptr [ebp - 0x80], eax
0x8049b6b:   0f 9f c0                        	setg al
0x8049b6e:   0f b6 d0                        	movzx edx, al
0x8049b71:   0f b6 85 15 ff ff ff            	movzx eax, byte ptr [ebp - 0xeb]
0x8049b78:   39 c2                           	cmp edx, eax
0x8049b7a:   75 07                           	jne 0x8049b83 <func_1+0x358>
0x8049b7c:   b8 80 00 00 00                  	mov eax, 0x80
0x8049b81:   eb 05                           	jmp 0x8049b88 <func_1+0x35d>
0x8049b83:   b8 00 00 00 00                  	mov eax, 0
0x8049b88:   8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x8049b8b:   0f b6 da                        	movzx ebx, dl
0x8049b8e:   99                              	cdq 
0x8049b8f:   f7 fb                           	idiv ebx
0x8049b91:   89 d0                           	mov eax, edx
0x8049b93:   89 c3                           	mov ebx, eax
0x8049b95:   89 c8                           	mov eax, ecx
0x8049b97:   ba 00 00 00 00                  	mov edx, 0
0x8049b9c:   f7 f3                           	div ebx
0x8049b9e:   89 d0                           	mov eax, edx
0x8049ba0:   0f b6 c0                        	movzx eax, al
0x8049ba3:   f6 b5 57 ff ff ff               	div byte ptr [ebp - 0xa9]
0x8049ba9:   0f b6 c4                        	movzx eax, ah
0x8049bac:   0f b6 c0                        	movzx eax, al
0x8049baf:   09 45 e4                        	or dword ptr [ebp - 0x1c], eax
0x8049bb2:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049bb5:   0f be c8                        	movsx ecx, al
0x8049bb8:   b8 3f 00 00 00                  	mov eax, 0x3f
0x8049bbd:   99                              	cdq 
0x8049bbe:   f7 f9                           	idiv ecx
0x8049bc0:   0f be 85 2b ff ff ff            	movsx eax, byte ptr [ebp - 0xd5]
0x8049bc7:   39 c2                           	cmp edx, eax
0x8049bc9:   0f 9e c0                        	setle al
0x8049bcc:   0f b6 d0                        	movzx edx, al
0x8049bcf:   0f be 85 2b ff ff ff            	movsx eax, byte ptr [ebp - 0xd5]
0x8049bd6:   39 c2                           	cmp edx, eax
0x8049bd8:   0f 9f c0                        	setg al
0x8049bdb:   0f b6 c0                        	movzx eax, al
0x8049bde:   f7 d8                           	neg eax
0x8049be0:   66 33 85 1c ff ff ff            	xor ax, word ptr [ebp - 0xe4]
0x8049be7:   89 c2                           	mov edx, eax
0x8049be9:   66 c1 fa 0f                     	sar dx, 0xf
0x8049bed:   66 c1 ea 0d                     	shr dx, 0xd
0x8049bf1:   01 d0                           	add eax, edx
0x8049bf3:   83 e0 07                        	and eax, 7
0x8049bf6:   29 d0                           	sub eax, edx
0x8049bf8:   98                              	cwde 
0x8049bf9:   31 45 e0                        	xor dword ptr [ebp - 0x20], eax
0x8049bfc:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049bff:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049c02:   81 7d 94 f7 00 00 00            	cmp dword ptr [ebp - 0x6c], 0xf7
0x8049c09:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049c0c:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049c0f:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049c12:   8d 50 0a                        	lea edx, [eax + 0xa]
0x8049c15:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049c18:   39 c2                           	cmp edx, eax
0x8049c1a:   80 bd 57 ff ff ff 00            	cmp byte ptr [ebp - 0xa9], 0
0x8049c21:   0f 94 c0                        	sete al
0x8049c24:   0f b6 d0                        	movzx edx, al
0x8049c27:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049c2a:   0f be c0                        	movsx eax, al
0x8049c2d:   89 c1                           	mov ecx, eax
0x8049c2f:   d3 fa                           	sar edx, cl
0x8049c31:   89 d0                           	mov eax, edx
0x8049c33:   89 85 10 ff ff ff               	mov dword ptr [ebp - 0xf0], eax
0x8049c39:   eb 27                           	jmp 0x8049c62 <func_1+0x437>
0x8049c3b:   66 c7 85 16 ff ff ff a2 98      	mov word ptr [ebp - 0xea], 0x98a2
0x8049c44:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049c48:   0f 95 c0                        	setne al
0x8049c4b:   0f b6 c0                        	movzx eax, al
0x8049c4e:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049c51:   80 85 7f ff ff ff 01            	add byte ptr [ebp - 0x81], 1
0x8049c58:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x8049c5c:   0f 85 28 03 00 00               	jne 0x8049f8a <func_1+0x75f>
0x8049c62:   66 83 6d da 01                  	sub word ptr [ebp - 0x26], 1
0x8049c67:   0f b7 85 7c ff ff ff            	movzx eax, word ptr [ebp - 0x84]
0x8049c6e:   0b 45 e4                        	or eax, dword ptr [ebp - 0x1c]
0x8049c71:   31 45 dc                        	xor dword ptr [ebp - 0x24], eax
0x8049c74:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049c78:   75 18                           	jne 0x8049c92 <func_1+0x467>
0x8049c7a:   81 75 e8 11 d9 00 00            	xor dword ptr [ebp - 0x18], 0xd911
0x8049c81:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049c84:   f7 d0                           	not eax
0x8049c86:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049c89:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x8049c8f:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x8049c92:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x8049c99:   75 0d                           	jne 0x8049ca8 <func_1+0x47d>
0x8049c9b:   83 bd 58 ff ff ff 00            	cmp dword ptr [ebp - 0xa8], 0
0x8049ca2:   0f 84 f3 01 00 00               	je 0x8049e9b <func_1+0x670>
0x8049ca8:   c6 85 0f ff ff ff 00            	mov byte ptr [ebp - 0xf1], 0
0x8049caf:   80 bd 7f ff ff ff 5d            	cmp byte ptr [ebp - 0x81], 0x5d
0x8049cb6:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x8049cbd:   74 07                           	je 0x8049cc6 <func_1+0x49b>
0x8049cbf:   b8 01 00 00 00                  	mov eax, 1
0x8049cc4:   eb 05                           	jmp 0x8049ccb <func_1+0x4a0>
0x8049cc6:   b8 00 00 00 00                  	mov eax, 0
0x8049ccb:   66 89 45 d2                     	mov word ptr [ebp - 0x2e], ax
0x8049ccf:   c7 85 08 ff ff ff 0b b0 9f c6   	mov dword ptr [ebp - 0xf8], 0xc69fb00b
0x8049cd9:   80 bd 19 ff ff ff 00            	cmp byte ptr [ebp - 0xe7], 0
0x8049ce0:   0f 84 e9 00 00 00               	je 0x8049dcf <func_1+0x5a4>
0x8049ce6:   c6 85 fb fe ff ff 01            	mov byte ptr [ebp - 0x105], 1
0x8049ced:   c7 85 f4 fe ff ff 03 00 00 00   	mov dword ptr [ebp - 0x10c], 3
0x8049cf7:   66 0f be 85 fb fe ff ff         	movsx ax, byte ptr [ebp - 0x105]
0x8049cff:   0f b7 c8                        	movzx ecx, ax
0x8049d02:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x8049d06:   89 c3                           	mov ebx, eax
0x8049d08:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049d0b:   99                              	cdq 
0x8049d0c:   f7 7d f0                        	idiv dword ptr [ebp - 0x10]
0x8049d0f:   89 d0                           	mov eax, edx
0x8049d11:   31 c3                           	xor ebx, eax
0x8049d13:   89 da                           	mov edx, ebx
0x8049d15:   66 0f be c2                     	movsx ax, dl
0x8049d19:   6b c0 85                        	imul eax, eax, -0x7b
0x8049d1c:   66 c1 e8 08                     	shr ax, 8
0x8049d20:   01 d0                           	add eax, edx
0x8049d22:   c0 f8 05                        	sar al, 5
0x8049d25:   89 c3                           	mov ebx, eax
0x8049d27:   89 d0                           	mov eax, edx
0x8049d29:   c0 f8 07                        	sar al, 7
0x8049d2c:   29 c3                           	sub ebx, eax
0x8049d2e:   89 d8                           	mov eax, ebx
0x8049d30:   bb 3e 00 00 00                  	mov ebx, 0x3e
0x8049d35:   0f af c3                        	imul eax, ebx
0x8049d38:   29 c2                           	sub edx, eax
0x8049d3a:   89 d0                           	mov eax, edx
0x8049d3c:   84 c0                           	test al, al
0x8049d3e:   75 06                           	jne 0x8049d46 <func_1+0x51b>
0x8049d40:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049d44:   74 07                           	je 0x8049d4d <func_1+0x522>
0x8049d46:   b8 01 00 00 00                  	mov eax, 1
0x8049d4b:   eb 05                           	jmp 0x8049d52 <func_1+0x527>
0x8049d4d:   b8 00 00 00 00                  	mov eax, 0
0x8049d52:   89 c2                           	mov edx, eax
0x8049d54:   81 fa 47 c3 5d 93               	cmp edx, 0x935dc347
0x8049d5a:   0f 93 c0                        	setae al
0x8049d5d:   0f b6 c0                        	movzx eax, al
0x8049d60:   69 c0 47 c3 5d 93               	imul eax, eax, 0x935dc347
0x8049d66:   29 c2                           	sub edx, eax
0x8049d68:   89 d0                           	mov eax, edx
0x8049d6a:   31 45 cc                        	xor dword ptr [ebp - 0x34], eax
0x8049d6d:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049d70:   0f b7 c0                        	movzx eax, ax
0x8049d73:   0f af c1                        	imul eax, ecx
0x8049d76:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x8049d79:   0f 93 c0                        	setae al
0x8049d7c:   0f b6 c0                        	movzx eax, al
0x8049d7f:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049d82:   81 7d 80 51 0d 76 f9            	cmp dword ptr [ebp - 0x80], 0xf9760d51
0x8049d89:   0f 94 c0                        	sete al
0x8049d8c:   0f b6 c0                        	movzx eax, al
0x8049d8f:   89 85 f4 fe ff ff               	mov dword ptr [ebp - 0x10c], eax
0x8049d95:   0f be 85 fb fe ff ff            	movsx eax, byte ptr [ebp - 0x105]
0x8049d9c:   0f b6 95 0f ff ff ff            	movzx edx, byte ptr [ebp - 0xf1]
0x8049da3:   8b 8d 58 ff ff ff               	mov ecx, dword ptr [ebp - 0xa8]
0x8049da9:   83 c1 01                        	add ecx, 1
0x8049dac:   0f bf d9                        	movsx ebx, cx
0x8049daf:   8b 4d dc                        	mov ecx, dword ptr [ebp - 0x24]
0x8049db2:   0f bf c9                        	movsx ecx, cx
0x8049db5:   29 cb                           	sub ebx, ecx
0x8049db7:   89 d9                           	mov ecx, ebx
0x8049db9:   21 d1                           	and ecx, edx
0x8049dbb:   99                              	cdq 
0x8049dbc:   f7 f9                           	idiv ecx
0x8049dbe:   89 55 80                        	mov dword ptr [ebp - 0x80], edx
0x8049dc1:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049dc4:   89 85 08 ff ff ff               	mov dword ptr [ebp - 0xf8], eax
0x8049dca:   e9 a2 01 00 00                  	jmp 0x8049f71 <func_1+0x746>
0x8049dcf:   c7 85 04 ff ff ff d9 57 42 4e   	mov dword ptr [ebp - 0xfc], 0x4e4257d9
0x8049dd9:   66 c7 85 02 ff ff ff d5 fc      	mov word ptr [ebp - 0xfe], 0xfcd5
0x8049de2:   c7 85 fc fe ff ff f9 ff ff ff   	mov dword ptr [ebp - 0x104], 0xfffffff9
0x8049dec:   0f b7 55 d2                     	movzx edx, word ptr [ebp - 0x2e]
0x8049df0:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x8049df4:   74 1d                           	je 0x8049e13 <func_1+0x5e8>
0x8049df6:   c7 45 80 00 00 00 00            	mov dword ptr [ebp - 0x80], 0
0x8049dfd:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049e00:   3b 45 e4                        	cmp eax, dword ptr [ebp - 0x1c]
0x8049e03:   80 bd 57 ff ff ff 00            	cmp byte ptr [ebp - 0xa9], 0
0x8049e0a:   74 07                           	je 0x8049e13 <func_1+0x5e8>
0x8049e0c:   b8 01 00 00 00                  	mov eax, 1
0x8049e11:   eb 05                           	jmp 0x8049e18 <func_1+0x5ed>
0x8049e13:   b8 00 00 00 00                  	mov eax, 0
0x8049e18:   21 d0                           	and eax, edx
0x8049e1a:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049e1d:   0f 95 c0                        	setne al
0x8049e20:   0f b6 c0                        	movzx eax, al
0x8049e23:   89 c2                           	mov edx, eax
0x8049e25:   0f b7 85 02 ff ff ff            	movzx eax, word ptr [ebp - 0xfe]
0x8049e2c:   0f b6 c0                        	movzx eax, al
0x8049e2f:   0f af c2                        	imul eax, edx
0x8049e32:   66 69 c8 5a ce                  	imul cx, ax, 0xce5a
0x8049e37:   66 83 f9 f8                     	cmp cx, -8
0x8049e3b:   0f 93 c0                        	setae al
0x8049e3e:   0f b6 d0                        	movzx edx, al
0x8049e41:   b8 00 00 00 00                  	mov eax, 0
0x8049e46:   29 d0                           	sub eax, edx
0x8049e48:   c1 e0 03                        	shl eax, 3
0x8049e4b:   29 c1                           	sub ecx, eax
0x8049e4d:   89 ca                           	mov edx, ecx
0x8049e4f:   89 d0                           	mov eax, edx
0x8049e51:   0f bf d0                        	movsx edx, ax
0x8049e54:   0f bf 85 1c ff ff ff            	movsx eax, word ptr [ebp - 0xe4]
0x8049e5b:   01 d0                           	add eax, edx
0x8049e5d:   39 85 78 ff ff ff               	cmp dword ptr [ebp - 0x88], eax
0x8049e63:   0f 9d c0                        	setge al
0x8049e66:   0f b6 c0                        	movzx eax, al
0x8049e69:   8b 95 fc fe ff ff               	mov edx, dword ptr [ebp - 0x104]
0x8049e6f:   0f be fa                        	movsx edi, dl
0x8049e72:   99                              	cdq 
0x8049e73:   f7 ff                           	idiv edi
0x8049e75:   89 c2                           	mov edx, eax
0x8049e77:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049e7a:   29 c2                           	sub edx, eax
0x8049e7c:   89 d0                           	mov eax, edx
0x8049e7e:   8b 95 fc fe ff ff               	mov edx, dword ptr [ebp - 0x104]
0x8049e84:   89 d1                           	mov ecx, edx
0x8049e86:   ba 00 00 00 00                  	mov edx, 0
0x8049e8b:   66 f7 f1                        	div cx
0x8049e8e:   89 d0                           	mov eax, edx
0x8049e90:   0f b7 c0                        	movzx eax, ax
0x8049e93:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049e96:   e9 d6 00 00 00                  	jmp 0x8049f71 <func_1+0x746>
0x8049e9b:   0f be 55 9b                     	movsx edx, byte ptr [ebp - 0x65]
0x8049e9f:   0f bf 5d 9c                     	movsx ebx, word ptr [ebp - 0x64]
0x8049ea3:   0f bf 7d 9e                     	movsx edi, word ptr [ebp - 0x62]
0x8049ea7:   0f b7 85 46 ff ff ff            	movzx eax, word ptr [ebp - 0xba]
0x8049eae:   89 85 40 fe ff ff               	mov dword ptr [ebp - 0x1c0], eax
0x8049eb4:   0f b7 75 a0                     	movzx esi, word ptr [ebp - 0x60]
0x8049eb8:   89 b5 3c fe ff ff               	mov dword ptr [ebp - 0x1c4], esi
0x8049ebe:   0f b6 4d a3                     	movzx ecx, byte ptr [ebp - 0x5d]
0x8049ec2:   89 8d 38 fe ff ff               	mov dword ptr [ebp - 0x1c8], ecx
0x8049ec8:   0f b6 45 ab                     	movzx eax, byte ptr [ebp - 0x55]
0x8049ecc:   89 85 34 fe ff ff               	mov dword ptr [ebp - 0x1cc], eax
0x8049ed2:   0f be 75 c5                     	movsx esi, byte ptr [ebp - 0x3b]
0x8049ed6:   89 b5 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], esi
0x8049edc:   0f bf 8d 4e ff ff ff            	movsx ecx, word ptr [ebp - 0xb2]
0x8049ee3:   89 8d 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], ecx
0x8049ee9:   0f b7 75 c6                     	movzx esi, word ptr [ebp - 0x3a]
0x8049eed:   0f b7 4d d2                     	movzx ecx, word ptr [ebp - 0x2e]
0x8049ef1:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x8049ef5:   52                              	push edx
0x8049ef6:   53                              	push ebx
0x8049ef7:   57                              	push edi
0x8049ef8:   ff b5 40 fe ff ff               	push dword ptr [ebp - 0x1c0]
0x8049efe:   ff b5 3c fe ff ff               	push dword ptr [ebp - 0x1c4]
0x8049f04:   ff b5 38 fe ff ff               	push dword ptr [ebp - 0x1c8]
0x8049f0a:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x8049f0d:   ff b5 34 fe ff ff               	push dword ptr [ebp - 0x1cc]
0x8049f13:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x8049f16:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x8049f1c:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049f1f:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049f22:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049f25:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049f28:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049f2b:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x8049f31:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x8049f37:   56                              	push esi
0x8049f38:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049f3b:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049f3e:   51                              	push ecx
0x8049f3f:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x8049f45:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049f48:   50                              	push eax
0x8049f49:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049f4c:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049f4f:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049f52:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049f55:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x8049f5b:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049f5e:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049f61:   e8 ee f6 ff ff                  	call 0x8049654 <set_var>
0x8049f66:   83 c4 7c                        	add esp, 0x7c
0x8049f69:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049f6c:   e9 d5 0e 00 00                  	jmp 0x804ae46 <func_1+0x161b>
0x8049f71:   83 45 f0 06                     	add dword ptr [ebp - 0x10], 6
0x8049f75:   83 7d f0 0b                     	cmp dword ptr [ebp - 0x10], 0xb
0x8049f79:   0f 8e 17 fa ff ff               	jle 0x8049996 <func_1+0x16b>
0x8049f7f:   eb 0a                           	jmp 0x8049f8b <func_1+0x760>
0x8049f81:   90                              	nop 
0x8049f82:   eb 07                           	jmp 0x8049f8b <func_1+0x760>
0x8049f84:   90                              	nop 
0x8049f85:   eb 04                           	jmp 0x8049f8b <func_1+0x760>
0x8049f87:   90                              	nop 
0x8049f88:   eb 01                           	jmp 0x8049f8b <func_1+0x760>
0x8049f8a:   90                              	nop 
0x8049f8b:   0f be 85 45 ff ff ff            	movsx eax, byte ptr [ebp - 0xbb]
0x8049f92:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x8049f98:   0f 95 c0                        	setne al
0x8049f9b:   0f b6 c0                        	movzx eax, al
0x8049f9e:   8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x8049fa1:   22 95 45 ff ff ff               	and dl, byte ptr [ebp - 0xbb]
0x8049fa7:   0f be d2                        	movsx edx, dl
0x8049faa:   83 e2 59                        	and edx, 0x59
0x8049fad:   0f af c2                        	imul eax, edx
0x8049fb0:   85 c0                           	test eax, eax
0x8049fb2:   0f 84 f3 00 00 00               	je 0x804a0ab <func_1+0x880>
0x8049fb8:   c7 85 50 fe ff ff f7 ff ff ff   	mov dword ptr [ebp - 0x1b0], 0xfffffff7
0x8049fc2:   c7 85 4c fe ff ff e7 45 0c 18   	mov dword ptr [ebp - 0x1b4], 0x180c45e7
0x8049fcc:   c7 45 cc e4 ff ff ff            	mov dword ptr [ebp - 0x34], 0xffffffe4
0x8049fd3:   e9 c4 00 00 00                  	jmp 0x804a09c <func_1+0x871>
0x8049fd8:   c7 85 48 fe ff ff f7 ff ff ff   	mov dword ptr [ebp - 0x1b8], 0xfffffff7
0x8049fe2:   c7 85 74 ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0x8c], 0xfffffffc
0x8049fec:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049fef:   35 9d 70 a7 a9                  	xor eax, 0xa9a7709d
0x8049ff4:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049ff7:   8b 85 48 fe ff ff               	mov eax, dword ptr [ebp - 0x1b8]
0x8049ffd:   f7 d8                           	neg eax
0x8049fff:   0f be d0                        	movsx edx, al
0x804a002:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a005:   0f be c0                        	movsx eax, al
0x804a008:   29 c2                           	sub edx, eax
0x804a00a:   89 d0                           	mov eax, edx
0x804a00c:   83 f8 67                        	cmp eax, 0x67
0x804a00f:   7e 06                           	jle 0x804a017 <func_1+0x7ec>
0x804a011:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a015:   74 07                           	je 0x804a01e <func_1+0x7f3>
0x804a017:   b8 01 00 00 00                  	mov eax, 1
0x804a01c:   eb 05                           	jmp 0x804a023 <func_1+0x7f8>
0x804a01e:   b8 00 00 00 00                  	mov eax, 0
0x804a023:   3d 44 53 00 00                  	cmp eax, 0x5344
0x804a028:   0f 95 c0                        	setne al
0x804a02b:   0f b6 c0                        	movzx eax, al
0x804a02e:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a031:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x804a038:   eb 58                           	jmp 0x804a092 <func_1+0x867>
0x804a03a:   c6 85 47 fe ff ff fb            	mov byte ptr [ebp - 0x1b9], 0xfb
0x804a041:   80 ad 47 fe ff ff 01            	sub byte ptr [ebp - 0x1b9], 1
0x804a048:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a04b:   89 85 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], eax
0x804a051:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a054:   0f b6 d0                        	movzx edx, al
0x804a057:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a05a:   0f b6 c0                        	movzx eax, al
0x804a05d:   01 d0                           	add eax, edx
0x804a05f:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x804a065:   76 10                           	jbe 0x804a077 <func_1+0x84c>
0x804a067:   83 bd 4c fe ff ff 00            	cmp dword ptr [ebp - 0x1b4], 0
0x804a06e:   74 07                           	je 0x804a077 <func_1+0x84c>
0x804a070:   b8 01 00 00 00                  	mov eax, 1
0x804a075:   eb 05                           	jmp 0x804a07c <func_1+0x851>
0x804a077:   b8 00 00 00 00                  	mov eax, 0
0x804a07c:   39 85 50 fe ff ff               	cmp dword ptr [ebp - 0x1b0], eax
0x804a082:   0f 9e c0                        	setle al
0x804a085:   0f b6 c0                        	movzx eax, al
0x804a088:   21 85 74 ff ff ff               	and dword ptr [ebp - 0x8c], eax
0x804a08e:   83 45 90 06                     	add dword ptr [ebp - 0x70], 6
0x804a092:   83 7d 90 2b                     	cmp dword ptr [ebp - 0x70], 0x2b
0x804a096:   76 a2                           	jbe 0x804a03a <func_1+0x80f>
0x804a098:   83 45 cc 01                     	add dword ptr [ebp - 0x34], 1
0x804a09c:   83 7d cc 12                     	cmp dword ptr [ebp - 0x34], 0x12
0x804a0a0:   0f 84 32 ff ff ff               	je 0x8049fd8 <func_1+0x7ad>
0x804a0a6:   e9 c7 0c 00 00                  	jmp 0x804ad72 <func_1+0x1547>
0x804a0ab:   c6 85 73 ff ff ff a5            	mov byte ptr [ebp - 0x8d], 0xa5
0x804a0b2:   c7 85 6c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x94], 0xffffffff
0x804a0bc:   c7 85 e8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x118], 0xffffffff
0x804a0c6:   c7 85 68 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x98], 0
0x804a0d0:   c7 85 e4 fe ff ff b9 0b f3 d0   	mov dword ptr [ebp - 0x11c], 0xd0f30bb9
0x804a0da:   c7 85 e0 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x120], 0xffffffff
0x804a0e4:   66 c7 85 66 ff ff ff 1c ec      	mov word ptr [ebp - 0x9a], 0xec1c
0x804a0ed:   c7 85 60 ff ff ff 3b 1e 01 9d   	mov dword ptr [ebp - 0xa0], 0x9d011e3b
0x804a0f7:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a0fa:   0c d8                           	or al, 0xd8
0x804a0fc:   89 c3                           	mov ebx, eax
0x804a0fe:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804a102:   0f be d0                        	movsx edx, al
0x804a105:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804a109:   75 06                           	jne 0x804a111 <func_1+0x8e6>
0x804a10b:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804a10f:   74 07                           	je 0x804a118 <func_1+0x8ed>
0x804a111:   b8 01 00 00 00                  	mov eax, 1
0x804a116:   eb 05                           	jmp 0x804a11d <func_1+0x8f2>
0x804a118:   b8 00 00 00 00                  	mov eax, 0
0x804a11d:   0f be c0                        	movsx eax, al
0x804a120:   89 c1                           	mov ecx, eax
0x804a122:   d3 e2                           	shl edx, cl
0x804a124:   89 d0                           	mov eax, edx
0x804a126:   39 c3                           	cmp ebx, eax
0x804a128:   0f 9d c0                        	setge al
0x804a12b:   88 85 73 ff ff ff               	mov byte ptr [ebp - 0x8d], al
0x804a131:   c7 45 94 00 00 00 00            	mov dword ptr [ebp - 0x6c], 0
0x804a138:   e9 7f 04 00 00                  	jmp 0x804a5bc <func_1+0xd91>
0x804a13d:   c7 85 94 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x16c], 1
0x804a147:   66 c7 85 92 fe ff ff f1 f7      	mov word ptr [ebp - 0x16e], 0xf7f1
0x804a150:   c7 85 8c fe ff ff fa ff ff ff   	mov dword ptr [ebp - 0x174], 0xfffffffa
0x804a15a:   c6 85 73 ff ff ff f7            	mov byte ptr [ebp - 0x8d], 0xf7
0x804a161:   e9 5a 03 00 00                  	jmp 0x804a4c0 <func_1+0xc95>
0x804a166:   66 c7 85 8a fe ff ff 01 00      	mov word ptr [ebp - 0x176], 1
0x804a16f:   c7 85 84 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x17c], 0
0x804a179:   c7 85 80 fe ff ff fe ff ff ff   	mov dword ptr [ebp - 0x180], 0xfffffffe
0x804a183:   c7 45 c8 50 fe ff ff            	mov dword ptr [ebp - 0x38], 0xfffffe50
0x804a18a:   8b 85 94 fe ff ff               	mov eax, dword ptr [ebp - 0x16c]
0x804a190:   0f b7 d0                        	movzx edx, ax
0x804a193:   0f b6 85 73 ff ff ff            	movzx eax, byte ptr [ebp - 0x8d]
0x804a19a:   89 c1                           	mov ecx, eax
0x804a19c:   d3 fa                           	sar edx, cl
0x804a19e:   89 d0                           	mov eax, edx
0x804a1a0:   66 89 45 c6                     	mov word ptr [ebp - 0x3a], ax
0x804a1a4:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x804a1a8:   0f b7 c0                        	movzx eax, ax
0x804a1ab:   21 85 6c ff ff ff               	and dword ptr [ebp - 0x94], eax
0x804a1b1:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a1b7:   0f b6 d0                        	movzx edx, al
0x804a1ba:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a1c0:   0f b6 c0                        	movzx eax, al
0x804a1c3:   89 c1                           	mov ecx, eax
0x804a1c5:   d3 e2                           	shl edx, cl
0x804a1c7:   89 d0                           	mov eax, edx
0x804a1c9:   25 00 a9 00 00                  	and eax, 0xa900
0x804a1ce:   99                              	cdq 
0x804a1cf:   f7 7d e4                        	idiv dword ptr [ebp - 0x1c]
0x804a1d2:   31 45 8c                        	xor dword ptr [ebp - 0x74], eax
0x804a1d5:   8b 85 94 fe ff ff               	mov eax, dword ptr [ebp - 0x16c]
0x804a1db:   0f b7 d0                        	movzx edx, ax
0x804a1de:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x804a1e2:   d0 f8                           	sar al, 1
0x804a1e4:   0f be c8                        	movsx ecx, al
0x804a1e7:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a1ea:   0d 80 7b 00 00                  	or eax, 0x7b80
0x804a1ef:   39 85 94 fe ff ff               	cmp dword ptr [ebp - 0x16c], eax
0x804a1f5:   0f 97 c0                        	seta al
0x804a1f8:   0f b6 c0                        	movzx eax, al
0x804a1fb:   39 c1                           	cmp ecx, eax
0x804a1fd:   0f 95 c0                        	setne al
0x804a200:   0f b6 c8                        	movzx ecx, al
0x804a203:   0f bf 85 92 fe ff ff            	movsx eax, word ptr [ebp - 0x16e]
0x804a20a:   01 c8                           	add eax, ecx
0x804a20c:   3d 04 68 00 00                  	cmp eax, 0x6804
0x804a211:   0f 96 c0                        	setbe al
0x804a214:   0f b6 c0                        	movzx eax, al
0x804a217:   89 c1                           	mov ecx, eax
0x804a219:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a21f:   66 98                           	cbw 
0x804a221:   0f af c1                        	imul eax, ecx
0x804a224:   0f b7 c0                        	movzx eax, ax
0x804a227:   01 d0                           	add eax, edx
0x804a229:   85 c0                           	test eax, eax
0x804a22b:   0f 84 7f 02 00 00               	je 0x804a4b0 <func_1+0xc85>
0x804a231:   c6 85 7f fe ff ff 01            	mov byte ptr [ebp - 0x181], 1
0x804a238:   c7 85 5c ff ff ff 7c c7 2a 6a   	mov dword ptr [ebp - 0xa4], 0x6a2ac77c
0x804a242:   c7 85 78 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x188], 0xffffffff
0x804a24c:   c7 85 74 fe ff ff 5b f0 6c ba   	mov dword ptr [ebp - 0x18c], 0xba6cf05b
0x804a256:   c7 85 70 fe ff ff 96 fb f1 78   	mov dword ptr [ebp - 0x190], 0x78f1fb96
0x804a260:   0f b6 85 73 ff ff ff            	movzx eax, byte ptr [ebp - 0x8d]
0x804a267:   80 bd 7f fe ff ff 00            	cmp byte ptr [ebp - 0x181], 0
0x804a26e:   0f 94 c2                        	sete dl
0x804a271:   0f b6 d2                        	movzx edx, dl
0x804a274:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804a277:   0f b7 95 92 fe ff ff            	movzx edx, word ptr [ebp - 0x16e]
0x804a27e:   66 89 55 d2                     	mov word ptr [ebp - 0x2e], dx
0x804a282:   66 39 45 d2                     	cmp word ptr [ebp - 0x2e], ax
0x804a286:   72 0e                           	jb 0x804a296 <func_1+0xa6b>
0x804a288:   66 83 bd 92 fe ff ff 00         	cmp word ptr [ebp - 0x16e], 0
0x804a290:   0f 84 95 00 00 00               	je 0x804a32b <func_1+0xb00>
0x804a296:   c7 85 60 fe ff ff fe ff ff ff   	mov dword ptr [ebp - 0x1a0], 0xfffffffe
0x804a2a0:   66 c7 85 5e fe ff ff 0b 55      	mov word ptr [ebp - 0x1a2], 0x550b
0x804a2a9:   c7 85 58 fe ff ff 04 47 c5 ca   	mov dword ptr [ebp - 0x1a8], 0xcac54704
0x804a2b3:   c7 85 54 fe ff ff f8 fc 99 45   	mov dword ptr [ebp - 0x1ac], 0x4599fcf8
0x804a2bd:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a2c1:   75 13                           	jne 0x804a2d6 <func_1+0xaab>
0x804a2c3:   0f b6 85 57 ff ff ff            	movzx eax, byte ptr [ebp - 0xa9]
0x804a2ca:   0b 45 ec                        	or eax, dword ptr [ebp - 0x14]
0x804a2cd:   85 c0                           	test eax, eax
0x804a2cf:   75 05                           	jne 0x804a2d6 <func_1+0xaab>
0x804a2d1:   66 83 7d da 00                  	cmp word ptr [ebp - 0x26], 0
0x804a2d6:   90                              	nop 
0x804a2d7:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804a2db:   74 07                           	je 0x804a2e4 <func_1+0xab9>
0x804a2dd:   b8 01 00 00 00                  	mov eax, 1
0x804a2e2:   eb 05                           	jmp 0x804a2e9 <func_1+0xabe>
0x804a2e4:   b8 00 00 00 00                  	mov eax, 0
0x804a2e9:   0f b6 d0                        	movzx edx, al
0x804a2ec:   8b 85 60 fe ff ff               	mov eax, dword ptr [ebp - 0x1a0]
0x804a2f2:   0f b6 c0                        	movzx eax, al
0x804a2f5:   89 c1                           	mov ecx, eax
0x804a2f7:   d3 fa                           	sar edx, cl
0x804a2f9:   89 d0                           	mov eax, edx
0x804a2fb:   66 23 85 5e fe ff ff            	and ax, word ptr [ebp - 0x1a2]
0x804a302:   66 35 89 46                     	xor ax, 0x4689
0x804a306:   89 c2                           	mov edx, eax
0x804a308:   66 83 fa ff                     	cmp dx, -1
0x804a30c:   0f 93 c0                        	setae al
0x804a30f:   0f b6 c0                        	movzx eax, al
0x804a312:   f7 d8                           	neg eax
0x804a314:   29 c2                           	sub edx, eax
0x804a316:   89 d0                           	mov eax, edx
0x804a318:   0f b7 c0                        	movzx eax, ax
0x804a31b:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a31e:   83 45 b8 01                     	add dword ptr [ebp - 0x48], 1
0x804a322:   83 45 b4 01                     	add dword ptr [ebp - 0x4c], 1
0x804a326:   e9 4c 01 00 00                  	jmp 0x804a477 <func_1+0xc4c>
0x804a32b:   c7 85 6c fe ff ff 05 25 6f 42   	mov dword ptr [ebp - 0x194], 0x426f2505
0x804a335:   c7 85 68 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x198], 0xffffffff
0x804a33f:   c7 85 64 fe ff ff 07 00 00 00   	mov dword ptr [ebp - 0x19c], 7
0x804a349:   0f be 95 44 ff ff ff            	movsx edx, byte ptr [ebp - 0xbc]
0x804a350:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a353:   98                              	cwde 
0x804a354:   89 c1                           	mov ecx, eax
0x804a356:   d3 e2                           	shl edx, cl
0x804a358:   89 d0                           	mov eax, edx
0x804a35a:   c0 f8 07                        	sar al, 7
0x804a35d:   89 c2                           	mov edx, eax
0x804a35f:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a362:   09 d0                           	or eax, edx
0x804a364:   0f b6 d0                        	movzx edx, al
0x804a367:   8b 85 6c fe ff ff               	mov eax, dword ptr [ebp - 0x194]
0x804a36d:   0f b6 c0                        	movzx eax, al
0x804a370:   89 c1                           	mov ecx, eax
0x804a372:   d3 fa                           	sar edx, cl
0x804a374:   89 d0                           	mov eax, edx
0x804a376:   39 45 bc                        	cmp dword ptr [ebp - 0x44], eax
0x804a379:   0f 94 c0                        	sete al
0x804a37c:   0f b6 c0                        	movzx eax, al
0x804a37f:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a382:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a385:   3b 85 8c fe ff ff               	cmp eax, dword ptr [ebp - 0x174]
0x804a38b:   0f 9c c0                        	setl al
0x804a38e:   0f b6 c0                        	movzx eax, al
0x804a391:   39 45 cc                        	cmp dword ptr [ebp - 0x34], eax
0x804a394:   0f 96 c0                        	setbe al
0x804a397:   0f b6 c0                        	movzx eax, al
0x804a39a:   f7 d8                           	neg eax
0x804a39c:   89 85 84 fe ff ff               	mov dword ptr [ebp - 0x17c], eax
0x804a3a2:   0f b7 85 92 fe ff ff            	movzx eax, word ptr [ebp - 0x16e]
0x804a3a9:   89 c1                           	mov ecx, eax
0x804a3ab:   8b 85 94 fe ff ff               	mov eax, dword ptr [ebp - 0x16c]
0x804a3b1:   8d 50 03                        	lea edx, [eax + 3]
0x804a3b4:   85 c0                           	test eax, eax
0x804a3b6:   0f 48 c2                        	cmovs eax, edx
0x804a3b9:   c1 f8 02                        	sar eax, 2
0x804a3bc:   f7 d8                           	neg eax
0x804a3be:   33 85 6c fe ff ff               	xor eax, dword ptr [ebp - 0x194]
0x804a3c4:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a3c7:   0f 94 c0                        	sete al
0x804a3ca:   0f b6 d0                        	movzx edx, al
0x804a3cd:   0f b6 85 73 ff ff ff            	movzx eax, byte ptr [ebp - 0x8d]
0x804a3d4:   39 c2                           	cmp edx, eax
0x804a3d6:   0f 9f c0                        	setg al
0x804a3d9:   0f b6 c0                        	movzx eax, al
0x804a3dc:   f7 d8                           	neg eax
0x804a3de:   89 c2                           	mov edx, eax
0x804a3e0:   8b 85 84 fe ff ff               	mov eax, dword ptr [ebp - 0x17c]
0x804a3e6:   39 c2                           	cmp edx, eax
0x804a3e8:   0f 92 c0                        	setb al
0x804a3eb:   01 c8                           	add eax, ecx
0x804a3ed:   89 c2                           	mov edx, eax
0x804a3ef:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x804a3f3:   31 d0                           	xor eax, edx
0x804a3f5:   0f b6 d0                        	movzx edx, al
0x804a3f8:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a3fe:   0f b6 c0                        	movzx eax, al
0x804a401:   0f af c2                        	imul eax, edx
0x804a404:   0f bf d0                        	movsx edx, ax
0x804a407:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a40a:   98                              	cwde 
0x804a40b:   0f af c2                        	imul eax, edx
0x804a40e:   89 85 6c fe ff ff               	mov dword ptr [ebp - 0x194], eax
0x804a414:   8b 85 6c fe ff ff               	mov eax, dword ptr [ebp - 0x194]
0x804a41a:   21 85 5c ff ff ff               	and dword ptr [ebp - 0xa4], eax
0x804a420:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x804a426:   0f b6 c0                        	movzx eax, al
0x804a429:   01 c0                           	add eax, eax
0x804a42b:   0f be d0                        	movsx edx, al
0x804a42e:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a431:   0f be c0                        	movsx eax, al
0x804a434:   89 c1                           	mov ecx, eax
0x804a436:   d3 e2                           	shl edx, cl
0x804a438:   89 d0                           	mov eax, edx
0x804a43a:   0b 45 b0                        	or eax, dword ptr [ebp - 0x50]
0x804a43d:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a440:   0f be 85 7f fe ff ff            	movsx eax, byte ptr [ebp - 0x181]
0x804a447:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804a44a:   0f 95 c0                        	setne al
0x804a44d:   0f b6 c0                        	movzx eax, al
0x804a450:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a453:   0f 93 c0                        	setae al
0x804a456:   0f b6 c0                        	movzx eax, al
0x804a459:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a45c:   c7 85 6c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x94], 0
0x804a466:   c7 45 88 00 00 00 00            	mov dword ptr [ebp - 0x78], 0
0x804a46d:   0f b6 85 73 ff ff ff            	movzx eax, byte ptr [ebp - 0x8d]
0x804a474:   09 45 c0                        	or dword ptr [ebp - 0x40], eax
0x804a477:   c7 85 5c ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0xa4], 0xfffffffe
0x804a481:   eb 18                           	jmp 0x804a49b <func_1+0xc70>
0x804a483:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804a487:   74 05                           	je 0x804a48e <func_1+0xc63>
0x804a489:   e9 fc f4 ff ff                  	jmp 0x804998a <func_1+0x15f>
0x804a48e:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a491:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a494:   83 ad 5c ff ff ff 01            	sub dword ptr [ebp - 0xa4], 1
0x804a49b:   83 bd 5c ff ff ff e6            	cmp dword ptr [ebp - 0xa4], -0x1a
0x804a4a2:   7d df                           	jge 0x804a483 <func_1+0xc58>
0x804a4a4:   0f b6 45 ab                     	movzx eax, byte ptr [ebp - 0x55]
0x804a4a8:   83 e8 01                        	sub eax, 1
0x804a4ab:   88 45 ab                        	mov byte ptr [ebp - 0x55], al
0x804a4ae:   eb 09                           	jmp 0x804a4b9 <func_1+0xc8e>
0x804a4b0:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804a4b6:   31 45 f0                        	xor dword ptr [ebp - 0x10], eax
0x804a4b9:   80 85 73 ff ff ff 04            	add byte ptr [ebp - 0x8d], 4
0x804a4c0:   80 bd 73 ff ff ff 3c            	cmp byte ptr [ebp - 0x8d], 0x3c
0x804a4c7:   0f 87 99 fc ff ff               	ja 0x804a166 <func_1+0x93b>
0x804a4cd:   c6 85 73 ff ff ff 13            	mov byte ptr [ebp - 0x8d], 0x13
0x804a4d4:   80 bd 73 ff ff ff 28            	cmp byte ptr [ebp - 0x8d], 0x28
0x804a4db:   0f 85 d7 00 00 00               	jne 0x804a5b8 <func_1+0xd8d>
0x804a4e1:   0f be 55 9b                     	movsx edx, byte ptr [ebp - 0x65]
0x804a4e5:   0f bf 5d 9c                     	movsx ebx, word ptr [ebp - 0x64]
0x804a4e9:   0f bf 7d 9e                     	movsx edi, word ptr [ebp - 0x62]
0x804a4ed:   0f b7 85 46 ff ff ff            	movzx eax, word ptr [ebp - 0xba]
0x804a4f4:   89 85 40 fe ff ff               	mov dword ptr [ebp - 0x1c0], eax
0x804a4fa:   0f b7 75 a0                     	movzx esi, word ptr [ebp - 0x60]
0x804a4fe:   89 b5 3c fe ff ff               	mov dword ptr [ebp - 0x1c4], esi
0x804a504:   0f b6 4d a3                     	movzx ecx, byte ptr [ebp - 0x5d]
0x804a508:   89 8d 38 fe ff ff               	mov dword ptr [ebp - 0x1c8], ecx
0x804a50e:   0f b6 45 ab                     	movzx eax, byte ptr [ebp - 0x55]
0x804a512:   89 85 34 fe ff ff               	mov dword ptr [ebp - 0x1cc], eax
0x804a518:   0f be 75 c5                     	movsx esi, byte ptr [ebp - 0x3b]
0x804a51c:   89 b5 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], esi
0x804a522:   0f bf 8d 4e ff ff ff            	movsx ecx, word ptr [ebp - 0xb2]
0x804a529:   89 8d 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], ecx
0x804a52f:   0f b7 75 c6                     	movzx esi, word ptr [ebp - 0x3a]
0x804a533:   0f b7 4d d2                     	movzx ecx, word ptr [ebp - 0x2e]
0x804a537:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804a53b:   52                              	push edx
0x804a53c:   53                              	push ebx
0x804a53d:   57                              	push edi
0x804a53e:   ff b5 40 fe ff ff               	push dword ptr [ebp - 0x1c0]
0x804a544:   ff b5 3c fe ff ff               	push dword ptr [ebp - 0x1c4]
0x804a54a:   ff b5 38 fe ff ff               	push dword ptr [ebp - 0x1c8]
0x804a550:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a553:   ff b5 34 fe ff ff               	push dword ptr [ebp - 0x1cc]
0x804a559:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a55c:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x804a562:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a565:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a568:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a56b:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a56e:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a571:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804a577:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x804a57d:   56                              	push esi
0x804a57e:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a581:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a584:   51                              	push ecx
0x804a585:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a58b:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a58e:   50                              	push eax
0x804a58f:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a592:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a595:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a598:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a59b:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804a5a1:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a5a4:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a5a7:   e8 a8 f0 ff ff                  	call 0x8049654 <set_var>
0x804a5ac:   83 c4 7c                        	add esp, 0x7c
0x804a5af:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804a5b3:   e9 8e 08 00 00                  	jmp 0x804ae46 <func_1+0x161b>
0x804a5b8:   83 6d 94 01                     	sub dword ptr [ebp - 0x6c], 1
0x804a5bc:   83 7d 94 f8                     	cmp dword ptr [ebp - 0x6c], -8
0x804a5c0:   0f 84 77 fb ff ff               	je 0x804a13d <func_1+0x912>
0x804a5c6:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a5c9:   0f be c0                        	movsx eax, al
0x804a5cc:   c1 e0 02                        	shl eax, 2
0x804a5cf:   0f bf d0                        	movsx edx, ax
0x804a5d2:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a5d5:   3b 85 40 ff ff ff               	cmp eax, dword ptr [ebp - 0xc0]
0x804a5db:   0f 94 c0                        	sete al
0x804a5de:   0f b6 c0                        	movzx eax, al
0x804a5e1:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x804a5e4:   75 07                           	jne 0x804a5ed <func_1+0xdc2>
0x804a5e6:   66 83 7d da 00                  	cmp word ptr [ebp - 0x26], 0
0x804a5eb:   74 07                           	je 0x804a5f4 <func_1+0xdc9>
0x804a5ed:   b8 01 00 00 00                  	mov eax, 1
0x804a5f2:   eb 05                           	jmp 0x804a5f9 <func_1+0xdce>
0x804a5f4:   b8 00 00 00 00                  	mov eax, 0
0x804a5f9:   3b 45 88                        	cmp eax, dword ptr [ebp - 0x78]
0x804a5fc:   0f 95 c0                        	setne al
0x804a5ff:   0f b6 c0                        	movzx eax, al
0x804a602:   31 45 a4                        	xor dword ptr [ebp - 0x5c], eax
0x804a605:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a608:   39 85 e8 fe ff ff               	cmp dword ptr [ebp - 0x118], eax
0x804a60e:   0f 95 c0                        	setne al
0x804a611:   0f b6 c0                        	movzx eax, al
0x804a614:   66 89 45 d2                     	mov word ptr [ebp - 0x2e], ax
0x804a618:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a61c:   98                              	cwde 
0x804a61d:   89 c1                           	mov ecx, eax
0x804a61f:   d3 fa                           	sar edx, cl
0x804a621:   0f be 85 3e ff ff ff            	movsx eax, byte ptr [ebp - 0xc2]
0x804a628:   39 c2                           	cmp edx, eax
0x804a62a:   0f 85 c9 02 00 00               	jne 0x804a8f9 <func_1+0x10ce>
0x804a630:   c6 85 db fe ff ff 19            	mov byte ptr [ebp - 0x125], 0x19
0x804a637:   c7 85 d4 fe ff ff 18 a4 bb 0c   	mov dword ptr [ebp - 0x12c], 0xcbba418
0x804a641:   c7 85 d0 fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x130], 2
0x804a64b:   c7 85 cc fe ff ff 07 00 00 00   	mov dword ptr [ebp - 0x134], 7
0x804a655:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a658:   88 45 a3                        	mov byte ptr [ebp - 0x5d], al
0x804a65b:   0f b6 45 a3                     	movzx eax, byte ptr [ebp - 0x5d]
0x804a65f:   3a 85 73 ff ff ff               	cmp al, byte ptr [ebp - 0x8d]
0x804a665:   73 09                           	jae 0x804a670 <func_1+0xe45>
0x804a667:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x804a66e:   74 07                           	je 0x804a677 <func_1+0xe4c>
0x804a670:   b8 01 00 00 00                  	mov eax, 1
0x804a675:   eb 05                           	jmp 0x804a67c <func_1+0xe51>
0x804a677:   b8 00 00 00 00                  	mov eax, 0
0x804a67c:   83 f8 4f                        	cmp eax, 0x4f
0x804a67f:   75 07                           	jne 0x804a688 <func_1+0xe5d>
0x804a681:   b8 e2 8d ff ff                  	mov eax, 0xffff8de2
0x804a686:   eb 05                           	jmp 0x804a68d <func_1+0xe62>
0x804a688:   b8 62 8d ff ff                  	mov eax, 0xffff8d62
0x804a68d:   23 45 e4                        	and eax, dword ptr [ebp - 0x1c]
0x804a690:   33 45 cc                        	xor eax, dword ptr [ebp - 0x34]
0x804a693:   89 c2                           	mov edx, eax
0x804a695:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a699:   39 c2                           	cmp edx, eax
0x804a69b:   0f 83 d1 01 00 00               	jae 0x804a872 <func_1+0x1047>
0x804a6a1:   c7 85 c4 fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x13c], 4
0x804a6ab:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x804a6b1:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a6b4:   80 bd db fe ff ff 00            	cmp byte ptr [ebp - 0x125], 0
0x804a6bb:   0f 9f c0                        	setg al
0x804a6be:   0f b6 c0                        	movzx eax, al
0x804a6c1:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x804a6c7:   0f 94 c0                        	sete al
0x804a6ca:   0f b6 c0                        	movzx eax, al
0x804a6cd:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a6d0:   0f be 85 db fe ff ff            	movsx eax, byte ptr [ebp - 0x125]
0x804a6d7:   39 45 bc                        	cmp dword ptr [ebp - 0x44], eax
0x804a6da:   74 10                           	je 0x804a6ec <func_1+0xec1>
0x804a6dc:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x804a6e3:   74 07                           	je 0x804a6ec <func_1+0xec1>
0x804a6e5:   b8 01 00 00 00                  	mov eax, 1
0x804a6ea:   eb 05                           	jmp 0x804a6f1 <func_1+0xec6>
0x804a6ec:   b8 00 00 00 00                  	mov eax, 0
0x804a6f1:   3d cb 9f 00 00                  	cmp eax, 0x9fcb
0x804a6f6:   7e 04                           	jle 0x804a6fc <func_1+0xed1>
0x804a6f8:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804a6fc:   8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x804a702:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a705:   83 bd c4 fe ff ff 00            	cmp dword ptr [ebp - 0x13c], 0
0x804a70c:   0f 94 c0                        	sete al
0x804a70f:   22 85 db fe ff ff               	and al, byte ptr [ebp - 0x125]
0x804a715:   0f b6 d0                        	movzx edx, al
0x804a718:   8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x804a71e:   0f b6 c0                        	movzx eax, al
0x804a721:   89 c1                           	mov ecx, eax
0x804a723:   d3 fa                           	sar edx, cl
0x804a725:   89 d0                           	mov eax, edx
0x804a727:   89 c2                           	mov edx, eax
0x804a729:   0f b6 45 a3                     	movzx eax, byte ptr [ebp - 0x5d]
0x804a72d:   31 d0                           	xor eax, edx
0x804a72f:   88 45 a3                        	mov byte ptr [ebp - 0x5d], al
0x804a732:   0f b6 45 a3                     	movzx eax, byte ptr [ebp - 0x5d]
0x804a736:   0b 85 6c ff ff ff               	or eax, dword ptr [ebp - 0x94]
0x804a73c:   3d 89 59 2b a7                  	cmp eax, 0xa72b5989
0x804a741:   0f 96 c0                        	setbe al
0x804a744:   0f b6 c0                        	movzx eax, al
0x804a747:   8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x804a74a:   29 d0                           	sub eax, edx
0x804a74c:   66 c1 e8 0b                     	shr ax, 0xb
0x804a750:   0f b7 c0                        	movzx eax, ax
0x804a753:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a756:   0f 84 f4 00 00 00               	je 0x804a850 <func_1+0x1025>
0x804a75c:   66 c7 85 c2 fe ff ff ff ff      	mov word ptr [ebp - 0x13e], 0xffff
0x804a765:   c7 45 84 00 00 00 00            	mov dword ptr [ebp - 0x7c], 0
0x804a76c:   eb 19                           	jmp 0x804a787 <func_1+0xf5c>
0x804a76e:   80 75 a3 02                     	xor byte ptr [ebp - 0x5d], 2
0x804a772:   b8 7d 00 00 00                  	mov eax, 0x7d
0x804a777:   0f b6 c0                        	movzx eax, al
0x804a77a:   f6 75 a3                        	div byte ptr [ebp - 0x5d]
0x804a77d:   0f b6 c0                        	movzx eax, al
0x804a780:   21 45 f0                        	and dword ptr [ebp - 0x10], eax
0x804a783:   83 45 84 01                     	add dword ptr [ebp - 0x7c], 1
0x804a787:   83 7d 84 08                     	cmp dword ptr [ebp - 0x7c], 8
0x804a78b:   74 e1                           	je 0x804a76e <func_1+0xf43>
0x804a78d:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a793:   34 f9                           	xor al, 0xf9
0x804a795:   89 c2                           	mov edx, eax
0x804a797:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a79a:   39 c2                           	cmp edx, eax
0x804a79c:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a79f:   0f b6 d0                        	movzx edx, al
0x804a7a2:   89 d0                           	mov eax, edx
0x804a7a4:   c1 e0 08                        	shl eax, 8
0x804a7a7:   29 d0                           	sub eax, edx
0x804a7a9:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x804a7ac:   74 10                           	je 0x804a7be <func_1+0xf93>
0x804a7ae:   83 bd 40 ff ff ff 00            	cmp dword ptr [ebp - 0xc0], 0
0x804a7b5:   74 07                           	je 0x804a7be <func_1+0xf93>
0x804a7b7:   b8 01 00 00 00                  	mov eax, 1
0x804a7bc:   eb 05                           	jmp 0x804a7c3 <func_1+0xf98>
0x804a7be:   b8 00 00 00 00                  	mov eax, 0
0x804a7c3:   0f b6 c0                        	movzx eax, al
0x804a7c6:   83 e8 78                        	sub eax, 0x78
0x804a7c9:   0f bf d0                        	movsx edx, ax
0x804a7cc:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x804a7d0:   98                              	cwde 
0x804a7d1:   01 d0                           	add eax, edx
0x804a7d3:   0b 85 68 ff ff ff               	or eax, dword ptr [ebp - 0x98]
0x804a7d9:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a7dc:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x804a7e0:   0f be c0                        	movsx eax, al
0x804a7e3:   ba 06 00 00 00                  	mov edx, 6
0x804a7e8:   89 c1                           	mov ecx, eax
0x804a7ea:   d3 fa                           	sar edx, cl
0x804a7ec:   89 d0                           	mov eax, edx
0x804a7ee:   83 e0 f0                        	and eax, 0xfffffff0
0x804a7f1:   0f be d0                        	movsx edx, al
0x804a7f4:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a7f7:   0f be c0                        	movsx eax, al
0x804a7fa:   89 c1                           	mov ecx, eax
0x804a7fc:   d3 e2                           	shl edx, cl
0x804a7fe:   89 d0                           	mov eax, edx
0x804a800:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x804a806:   0f 9d c0                        	setge al
0x804a809:   0f b6 d0                        	movzx edx, al
0x804a80c:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a80f:   01 c2                           	add edx, eax
0x804a811:   0f bf 85 c2 fe ff ff            	movsx eax, word ptr [ebp - 0x13e]
0x804a818:   39 c2                           	cmp edx, eax
0x804a81a:   0f 93 c0                        	setae al
0x804a81d:   0f b6 c0                        	movzx eax, al
0x804a820:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804a823:   83 7d 88 00                     	cmp dword ptr [ebp - 0x78], 0
0x804a827:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a82d:   0f be d0                        	movsx edx, al
0x804a830:   0f be 85 db fe ff ff            	movsx eax, byte ptr [ebp - 0x125]
0x804a837:   01 c2                           	add edx, eax
0x804a839:   0f be 85 3e ff ff ff            	movsx eax, byte ptr [ebp - 0xc2]
0x804a840:   39 c2                           	cmp edx, eax
0x804a842:   0f 9c c0                        	setl al
0x804a845:   0f b6 c0                        	movzx eax, al
0x804a848:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a84b:   e9 bd 00 00 00                  	jmp 0x804a90d <func_1+0x10e2>
0x804a850:   c7 45 c8 06 00 00 00            	mov dword ptr [ebp - 0x38], 6
0x804a857:   eb 0e                           	jmp 0x804a867 <func_1+0x103c>
0x804a859:   80 7d c5 00                     	cmp byte ptr [ebp - 0x3b], 0
0x804a85d:   0f 85 a9 00 00 00               	jne 0x804a90c <func_1+0x10e1>
0x804a863:   83 6d c8 05                     	sub dword ptr [ebp - 0x38], 5
0x804a867:   83 7d c8 e3                     	cmp dword ptr [ebp - 0x38], -0x1d
0x804a86b:   7d ec                           	jge 0x804a859 <func_1+0x102e>
0x804a86d:   e9 9b 00 00 00                  	jmp 0x804a90d <func_1+0x10e2>
0x804a872:   66 c7 85 ca fe ff ff 91 bc      	mov word ptr [ebp - 0x136], 0xbc91
0x804a87b:   c7 45 ac 87 f8 03 a0            	mov dword ptr [ebp - 0x54], 0xa003f887
0x804a882:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x804a889:   0f be 85 db fe ff ff            	movsx eax, byte ptr [ebp - 0x125]
0x804a890:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a893:   83 ad e4 fe ff ff 01            	sub dword ptr [ebp - 0x11c], 1
0x804a89a:   0f bf 85 4e ff ff ff            	movsx eax, word ptr [ebp - 0xb2]
0x804a8a1:   0b 85 e0 fe ff ff               	or eax, dword ptr [ebp - 0x120]
0x804a8a7:   89 c2                           	mov edx, eax
0x804a8a9:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a8ac:   89 c1                           	mov ecx, eax
0x804a8ae:   66 0f be 85 db fe ff ff         	movsx ax, byte ptr [ebp - 0x125]
0x804a8b6:   09 c8                           	or eax, ecx
0x804a8b8:   98                              	cwde 
0x804a8b9:   69 c0 68 a9 ff ff               	imul eax, eax, 0xffffa968
0x804a8bf:   85 c0                           	test eax, eax
0x804a8c1:   75 06                           	jne 0x804a8c9 <func_1+0x109e>
0x804a8c3:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804a8c7:   74 07                           	je 0x804a8d0 <func_1+0x10a5>
0x804a8c9:   b9 01 00 00 00                  	mov ecx, 1
0x804a8ce:   eb 05                           	jmp 0x804a8d5 <func_1+0x10aa>
0x804a8d0:   b9 00 00 00 00                  	mov ecx, 0
0x804a8d5:   0f bf 85 ca fe ff ff            	movsx eax, word ptr [ebp - 0x136]
0x804a8dc:   39 c1                           	cmp ecx, eax
0x804a8de:   7f 07                           	jg 0x804a8e7 <func_1+0x10bc>
0x804a8e0:   b8 00 1a 00 00                  	mov eax, 0x1a00
0x804a8e5:   eb 05                           	jmp 0x804a8ec <func_1+0x10c1>
0x804a8e7:   b8 05 50 00 00                  	mov eax, 0x5005
0x804a8ec:   39 d0                           	cmp eax, edx
0x804a8ee:   0f 94 c0                        	sete al
0x804a8f1:   0f b6 c0                        	movzx eax, al
0x804a8f4:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a8f7:   eb 14                           	jmp 0x804a90d <func_1+0x10e2>
0x804a8f9:   c7 85 dc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x124], 0
0x804a903:   83 85 dc fe ff ff 01            	add dword ptr [ebp - 0x124], 1
0x804a90a:   eb 01                           	jmp 0x804a90d <func_1+0x10e2>
0x804a90c:   90                              	nop 
0x804a90d:   c7 85 68 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x98], 0
0x804a917:   e9 49 04 00 00                  	jmp 0x804ad65 <func_1+0x153a>
0x804a91c:   c6 85 c1 fe ff ff da            	mov byte ptr [ebp - 0x13f], 0xda
0x804a923:   c6 85 c0 fe ff ff ff            	mov byte ptr [ebp - 0x140], 0xff
0x804a92a:   c7 85 bc fe ff ff 37 63 9c 38   	mov dword ptr [ebp - 0x144], 0x389c6337
0x804a934:   80 bd 57 ff ff ff 00            	cmp byte ptr [ebp - 0xa9], 0
0x804a93b:   74 6d                           	je 0x804a9aa <func_1+0x117f>
0x804a93d:   66 c7 85 9e fe ff ff 1f b6      	mov word ptr [ebp - 0x162], 0xb61f
0x804a946:   c7 85 98 fe ff ff fe ff ff ff   	mov dword ptr [ebp - 0x168], 0xfffffffe
0x804a950:   0f b7 85 9e fe ff ff            	movzx eax, word ptr [ebp - 0x162]
0x804a957:   8d 50 ff                        	lea edx, [eax - 1]
0x804a95a:   66 89 95 9e fe ff ff            	mov word ptr [ebp - 0x162], dx
0x804a961:   0f b7 d0                        	movzx edx, ax
0x804a964:   0f be 45 c5                     	movsx eax, byte ptr [ebp - 0x3b]
0x804a968:   39 c2                           	cmp edx, eax
0x804a96a:   0f 9e c0                        	setle al
0x804a96d:   0f b6 c0                        	movzx eax, al
0x804a970:   39 45 b0                        	cmp dword ptr [ebp - 0x50], eax
0x804a973:   0f 9e c0                        	setle al
0x804a976:   0f b6 d0                        	movzx edx, al
0x804a979:   0f b6 85 57 ff ff ff            	movzx eax, byte ptr [ebp - 0xa9]
0x804a980:   39 c2                           	cmp edx, eax
0x804a982:   80 bd 45 ff ff ff 00            	cmp byte ptr [ebp - 0xbb], 0
0x804a989:   81 7d d4 ca a9 ff ff            	cmp dword ptr [ebp - 0x2c], 0xffffa9ca
0x804a990:   c7 45 ac a9 11 0e 7b            	mov dword ptr [ebp - 0x54], 0x7b0e11a9
0x804a997:   66 83 bd 4e ff ff ff 00         	cmp word ptr [ebp - 0xb2], 0
0x804a99f:   0f 84 b5 02 00 00               	je 0x804ac5a <func_1+0x142f>
0x804a9a5:   e9 c8 03 00 00                  	jmp 0x804ad72 <func_1+0x1547>
0x804a9aa:   c7 85 b8 fe ff ff 29 4c b3 08   	mov dword ptr [ebp - 0x148], 0x8b34c29
0x804a9b4:   c7 85 b4 fe ff ff f6 ff ff ff   	mov dword ptr [ebp - 0x14c], 0xfffffff6
0x804a9be:   c7 85 b0 fe ff ff 16 14 1f 14   	mov dword ptr [ebp - 0x150], 0x141f1416
0x804a9c8:   0f b6 45 a3                     	movzx eax, byte ptr [ebp - 0x5d]
0x804a9cc:   f7 d0                           	not eax
0x804a9ce:   89 c2                           	mov edx, eax
0x804a9d0:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a9d3:   39 85 30 ff ff ff               	cmp dword ptr [ebp - 0xd0], eax
0x804a9d9:   0f 95 c0                        	setne al
0x804a9dc:   0f b6 c0                        	movzx eax, al
0x804a9df:   39 c2                           	cmp edx, eax
0x804a9e1:   0f 9d c0                        	setge al
0x804a9e4:   0f b6 c0                        	movzx eax, al
0x804a9e7:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a9ea:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a9ee:   0f 84 7b 01 00 00               	je 0x804ab6f <func_1+0x1344>
0x804a9f4:   c7 85 a4 fe ff ff f7 ff ff ff   	mov dword ptr [ebp - 0x15c], 0xfffffff7
0x804a9fe:   c7 45 88 ff ff ff ff            	mov dword ptr [ebp - 0x78], 0xffffffff
0x804aa05:   81 bd b8 fe ff ff cd 23 fd 9e   	cmp dword ptr [ebp - 0x148], 0x9efd23cd
0x804aa0f:   0f 95 c0                        	setne al
0x804aa12:   0f b6 c0                        	movzx eax, al
0x804aa15:   89 c2                           	mov edx, eax
0x804aa17:   8b 85 a4 fe ff ff               	mov eax, dword ptr [ebp - 0x15c]
0x804aa1d:   0f b6 c0                        	movzx eax, al
0x804aa20:   0f af c2                        	imul eax, edx
0x804aa23:   8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x804aa26:   29 d0                           	sub eax, edx
0x804aa28:   83 e8 0a                        	sub eax, 0xa
0x804aa2b:   66 0f be bd c1 fe ff ff         	movsx di, byte ptr [ebp - 0x13f]
0x804aa33:   ba 00 00 00 00                  	mov edx, 0
0x804aa38:   66 f7 f7                        	div di
0x804aa3b:   0f b7 c0                        	movzx eax, ax
0x804aa3e:   39 85 b8 fe ff ff               	cmp dword ptr [ebp - 0x148], eax
0x804aa44:   0f 9d c0                        	setge al
0x804aa47:   0f b6 d0                        	movzx edx, al
0x804aa4a:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804aa4e:   39 c2                           	cmp edx, eax
0x804aa50:   0f 84 e3 00 00 00               	je 0x804ab39 <func_1+0x130e>
0x804aa56:   c7 85 a0 fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x160], 4
0x804aa60:   0f be 55 9b                     	movsx edx, byte ptr [ebp - 0x65]
0x804aa64:   0f bf 5d 9c                     	movsx ebx, word ptr [ebp - 0x64]
0x804aa68:   0f bf 7d 9e                     	movsx edi, word ptr [ebp - 0x62]
0x804aa6c:   0f b7 85 46 ff ff ff            	movzx eax, word ptr [ebp - 0xba]
0x804aa73:   89 85 40 fe ff ff               	mov dword ptr [ebp - 0x1c0], eax
0x804aa79:   0f b7 75 a0                     	movzx esi, word ptr [ebp - 0x60]
0x804aa7d:   89 b5 3c fe ff ff               	mov dword ptr [ebp - 0x1c4], esi
0x804aa83:   0f b6 4d a3                     	movzx ecx, byte ptr [ebp - 0x5d]
0x804aa87:   89 8d 38 fe ff ff               	mov dword ptr [ebp - 0x1c8], ecx
0x804aa8d:   0f b6 45 ab                     	movzx eax, byte ptr [ebp - 0x55]
0x804aa91:   89 85 34 fe ff ff               	mov dword ptr [ebp - 0x1cc], eax
0x804aa97:   0f be 75 c5                     	movsx esi, byte ptr [ebp - 0x3b]
0x804aa9b:   89 b5 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], esi
0x804aaa1:   0f bf 8d 4e ff ff ff            	movsx ecx, word ptr [ebp - 0xb2]
0x804aaa8:   89 8d 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], ecx
0x804aaae:   0f b7 75 c6                     	movzx esi, word ptr [ebp - 0x3a]
0x804aab2:   0f b7 4d d2                     	movzx ecx, word ptr [ebp - 0x2e]
0x804aab6:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804aaba:   52                              	push edx
0x804aabb:   53                              	push ebx
0x804aabc:   57                              	push edi
0x804aabd:   ff b5 40 fe ff ff               	push dword ptr [ebp - 0x1c0]
0x804aac3:   ff b5 3c fe ff ff               	push dword ptr [ebp - 0x1c4]
0x804aac9:   ff b5 38 fe ff ff               	push dword ptr [ebp - 0x1c8]
0x804aacf:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804aad2:   ff b5 34 fe ff ff               	push dword ptr [ebp - 0x1cc]
0x804aad8:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804aadb:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x804aae1:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804aae4:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804aae7:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804aaea:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804aaed:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804aaf0:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804aaf6:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x804aafc:   56                              	push esi
0x804aafd:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804ab00:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804ab03:   51                              	push ecx
0x804ab04:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804ab0a:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804ab0d:   50                              	push eax
0x804ab0e:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804ab11:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804ab14:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804ab17:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804ab1a:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804ab20:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804ab23:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804ab26:   e8 29 eb ff ff                  	call 0x8049654 <set_var>
0x804ab2b:   83 c4 7c                        	add esp, 0x7c
0x804ab2e:   8b 85 a0 fe ff ff               	mov eax, dword ptr [ebp - 0x160]
0x804ab34:   e9 0d 03 00 00                  	jmp 0x804ae46 <func_1+0x161b>
0x804ab39:   0f be 95 c1 fe ff ff            	movsx edx, byte ptr [ebp - 0x13f]
0x804ab40:   0f b7 85 46 ff ff ff            	movzx eax, word ptr [ebp - 0xba]
0x804ab47:   39 85 a4 fe ff ff               	cmp dword ptr [ebp - 0x15c], eax
0x804ab4d:   0f 96 c0                        	setbe al
0x804ab50:   0f b6 c0                        	movzx eax, al
0x804ab53:   39 c2                           	cmp edx, eax
0x804ab55:   0f 9e c0                        	setle al
0x804ab58:   0f b6 c0                        	movzx eax, al
0x804ab5b:   f7 d0                           	not eax
0x804ab5d:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x804ab63:   83 85 b0 fe ff ff 01            	add dword ptr [ebp - 0x150], 1
0x804ab6a:   e9 cf 00 00 00                  	jmp 0x804ac3e <func_1+0x1413>
0x804ab6f:   c7 85 ac fe ff ff fd ff ff ff   	mov dword ptr [ebp - 0x154], 0xfffffffd
0x804ab79:   c7 85 a8 fe ff ff 05 74 c1 39   	mov dword ptr [ebp - 0x158], 0x39c17405
0x804ab83:   8b bd ac fe ff ff               	mov edi, dword ptr [ebp - 0x154]
0x804ab89:   b8 10 70 00 00                  	mov eax, 0x7010
0x804ab8e:   ba 00 00 00 00                  	mov edx, 0
0x804ab93:   f7 f7                           	div edi
0x804ab95:   0f b6 d0                        	movzx edx, al
0x804ab98:   0f b6 85 57 ff ff ff            	movzx eax, byte ptr [ebp - 0xa9]
0x804ab9f:   0f af c2                        	imul eax, edx
0x804aba2:   83 f8 01                        	cmp eax, 1
0x804aba5:   0f 94 c0                        	sete al
0x804aba8:   0f b6 c0                        	movzx eax, al
0x804abab:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804abae:   0f 96 c0                        	setbe al
0x804abb1:   0f b6 c0                        	movzx eax, al
0x804abb4:   89 85 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], eax
0x804abba:   66 83 45 a0 01                  	add word ptr [ebp - 0x60], 1
0x804abbf:   0f b7 55 a0                     	movzx edx, word ptr [ebp - 0x60]
0x804abc3:   0f b6 85 c0 fe ff ff            	movzx eax, byte ptr [ebp - 0x140]
0x804abca:   01 d0                           	add eax, edx
0x804abcc:   f7 d8                           	neg eax
0x804abce:   89 c2                           	mov edx, eax
0x804abd0:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x804abd4:   09 d0                           	or eax, edx
0x804abd6:   66 89 45 9e                     	mov word ptr [ebp - 0x62], ax
0x804abda:   0f bf 55 9e                     	movsx edx, word ptr [ebp - 0x62]
0x804abde:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804abe2:   98                              	cwde 
0x804abe3:   29 c2                           	sub edx, eax
0x804abe5:   89 d0                           	mov eax, edx
0x804abe7:   89 85 a8 fe ff ff               	mov dword ptr [ebp - 0x158], eax
0x804abed:   66 c7 45 9c 08 9f               	mov word ptr [ebp - 0x64], 0x9f08
0x804abf3:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x804abf7:   89 c2                           	mov edx, eax
0x804abf9:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x804abff:   09 d0                           	or eax, edx
0x804ac01:   89 c2                           	mov edx, eax
0x804ac03:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x804ac08:   0f b6 c0                        	movzx eax, al
0x804ac0b:   f6 f2                           	div dl
0x804ac0d:   f7 d0                           	not eax
0x804ac0f:   0f b6 d0                        	movzx edx, al
0x804ac12:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804ac15:   21 d0                           	and eax, edx
0x804ac17:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804ac1a:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804ac1d:   f7 d0                           	not eax
0x804ac1f:   21 45 e0                        	and dword ptr [ebp - 0x20], eax
0x804ac22:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804ac25:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804ac28:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804ac2b:   0f b6 8d c0 fe ff ff            	movzx ecx, byte ptr [ebp - 0x140]
0x804ac32:   ba 00 00 00 00                  	mov edx, 0
0x804ac37:   f7 f1                           	div ecx
0x804ac39:   89 d0                           	mov eax, edx
0x804ac3b:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804ac3e:   c7 85 6c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x94], 0xffffffff
0x804ac48:   0f b7 85 66 ff ff ff            	movzx eax, word ptr [ebp - 0x9a]
0x804ac4f:   66 0d b4 40                     	or ax, 0x40b4
0x804ac53:   66 89 85 66 ff ff ff            	mov word ptr [ebp - 0x9a], ax
0x804ac5a:   8b 85 bc fe ff ff               	mov eax, dword ptr [ebp - 0x144]
0x804ac60:   0f b7 d0                        	movzx edx, ax
0x804ac63:   0f b6 85 c0 fe ff ff            	movzx eax, byte ptr [ebp - 0x140]
0x804ac6a:   89 c1                           	mov ecx, eax
0x804ac6c:   d3 e2                           	shl edx, cl
0x804ac6e:   89 d0                           	mov eax, edx
0x804ac70:   09 45 f0                        	or dword ptr [ebp - 0x10], eax
0x804ac73:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x804ac79:   0b 45 d4                        	or eax, dword ptr [ebp - 0x2c]
0x804ac7c:   83 f8 03                        	cmp eax, 3
0x804ac7f:   0f 95 c0                        	setne al
0x804ac82:   0f b6 d0                        	movzx edx, al
0x804ac85:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804ac8b:   0f b6 c0                        	movzx eax, al
0x804ac8e:   0f af c2                        	imul eax, edx
0x804ac91:   ba 00 00 00 00                  	mov edx, 0
0x804ac96:   f7 b5 50 ff ff ff               	div dword ptr [ebp - 0xb0]
0x804ac9c:   89 d0                           	mov eax, edx
0x804ac9e:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804aca1:   c7 85 bc fe ff ff ff 03 00 00   	mov dword ptr [ebp - 0x144], 0x3ff
0x804acab:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804acae:   88 45 a3                        	mov byte ptr [ebp - 0x5d], al
0x804acb1:   80 7d a3 00                     	cmp byte ptr [ebp - 0x5d], 0
0x804acb5:   0f 94 c0                        	sete al
0x804acb8:   0f b6 d0                        	movzx edx, al
0x804acbb:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804acbf:   39 c2                           	cmp edx, eax
0x804acc1:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804acc5:   74 10                           	je 0x804acd7 <func_1+0x14ac>
0x804acc7:   80 bd c0 fe ff ff 00            	cmp byte ptr [ebp - 0x140], 0
0x804acce:   74 07                           	je 0x804acd7 <func_1+0x14ac>
0x804acd0:   b8 01 00 00 00                  	mov eax, 1
0x804acd5:   eb 05                           	jmp 0x804acdc <func_1+0x14b1>
0x804acd7:   b8 00 00 00 00                  	mov eax, 0
0x804acdc:   89 c2                           	mov edx, eax
0x804acde:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804ace1:   01 d0                           	add eax, edx
0x804ace3:   98                              	cwde 
0x804ace4:   8b 55 88                        	mov edx, dword ptr [ebp - 0x78]
0x804ace7:   0f bf fa                        	movsx edi, dx
0x804acea:   99                              	cdq 
0x804aceb:   f7 ff                           	idiv edi
0x804aced:   39 45 cc                        	cmp dword ptr [ebp - 0x34], eax
0x804acf0:   73 07                           	jae 0x804acf9 <func_1+0x14ce>
0x804acf2:   ba 38 00 00 00                  	mov edx, 0x38
0x804acf7:   eb 05                           	jmp 0x804acfe <func_1+0x14d3>
0x804acf9:   ba 37 00 00 00                  	mov edx, 0x37
0x804acfe:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804ad01:   89 c1                           	mov ecx, eax
0x804ad03:   89 d0                           	mov eax, edx
0x804ad05:   0f af c1                        	imul eax, ecx
0x804ad08:   83 e8 01                        	sub eax, 1
0x804ad0b:   88 45 c5                        	mov byte ptr [ebp - 0x3b], al
0x804ad0e:   0f b6 45 c5                     	movzx eax, byte ptr [ebp - 0x3b]
0x804ad12:   83 f0 40                        	xor eax, 0x40
0x804ad15:   88 45 9b                        	mov byte ptr [ebp - 0x65], al
0x804ad18:   80 7d 9b 00                     	cmp byte ptr [ebp - 0x65], 0
0x804ad1c:   0f b6 95 c0 fe ff ff            	movzx edx, byte ptr [ebp - 0x140]
0x804ad23:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804ad29:   0f b6 c0                        	movzx eax, al
0x804ad2c:   89 c1                           	mov ecx, eax
0x804ad2e:   d3 e2                           	shl edx, cl
0x804ad30:   89 d0                           	mov eax, edx
0x804ad32:   0f bf d0                        	movsx edx, ax
0x804ad35:   89 d0                           	mov eax, edx
0x804ad37:   01 c0                           	add eax, eax
0x804ad39:   01 d0                           	add eax, edx
0x804ad3b:   01 c0                           	add eax, eax
0x804ad3d:   31 45 bc                        	xor dword ptr [ebp - 0x44], eax
0x804ad40:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x804ad44:   74 04                           	je 0x804ad4a <func_1+0x151f>
0x804ad46:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x804ad4a:   b8 08 e9 95 7d                  	mov eax, 0x7d95e908
0x804ad4f:   31 85 60 ff ff ff               	xor dword ptr [ebp - 0xa0], eax
0x804ad55:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804ad5b:   21 45 dc                        	and dword ptr [ebp - 0x24], eax
0x804ad5e:   83 85 68 ff ff ff 01            	add dword ptr [ebp - 0x98], 1
0x804ad65:   83 bd 68 ff ff ff 0b            	cmp dword ptr [ebp - 0x98], 0xb
0x804ad6c:   0f 8e aa fb ff ff               	jle 0x804a91c <func_1+0x10f1>
0x804ad72:   0f be 55 9b                     	movsx edx, byte ptr [ebp - 0x65]
0x804ad76:   0f bf 5d 9c                     	movsx ebx, word ptr [ebp - 0x64]
0x804ad7a:   0f bf 7d 9e                     	movsx edi, word ptr [ebp - 0x62]
0x804ad7e:   0f b7 85 46 ff ff ff            	movzx eax, word ptr [ebp - 0xba]
0x804ad85:   89 85 40 fe ff ff               	mov dword ptr [ebp - 0x1c0], eax
0x804ad8b:   0f b7 75 a0                     	movzx esi, word ptr [ebp - 0x60]
0x804ad8f:   89 b5 3c fe ff ff               	mov dword ptr [ebp - 0x1c4], esi
0x804ad95:   0f b6 4d a3                     	movzx ecx, byte ptr [ebp - 0x5d]
0x804ad99:   89 8d 38 fe ff ff               	mov dword ptr [ebp - 0x1c8], ecx
0x804ad9f:   0f b6 45 ab                     	movzx eax, byte ptr [ebp - 0x55]
0x804ada3:   89 85 34 fe ff ff               	mov dword ptr [ebp - 0x1cc], eax
0x804ada9:   0f be 75 c5                     	movsx esi, byte ptr [ebp - 0x3b]
0x804adad:   89 b5 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], esi
0x804adb3:   0f bf 8d 4e ff ff ff            	movsx ecx, word ptr [ebp - 0xb2]
0x804adba:   89 8d 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], ecx
0x804adc0:   0f b7 75 c6                     	movzx esi, word ptr [ebp - 0x3a]
0x804adc4:   0f b7 4d d2                     	movzx ecx, word ptr [ebp - 0x2e]
0x804adc8:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804adcc:   52                              	push edx
0x804adcd:   53                              	push ebx
0x804adce:   57                              	push edi
0x804adcf:   ff b5 40 fe ff ff               	push dword ptr [ebp - 0x1c0]
0x804add5:   ff b5 3c fe ff ff               	push dword ptr [ebp - 0x1c4]
0x804addb:   ff b5 38 fe ff ff               	push dword ptr [ebp - 0x1c8]
0x804ade1:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804ade4:   ff b5 34 fe ff ff               	push dword ptr [ebp - 0x1cc]
0x804adea:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804aded:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x804adf3:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804adf6:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804adf9:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804adfc:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804adff:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804ae02:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804ae08:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x804ae0e:   56                              	push esi
0x804ae0f:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804ae12:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804ae15:   51                              	push ecx
0x804ae16:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804ae1c:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804ae1f:   50                              	push eax
0x804ae20:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804ae23:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804ae26:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804ae29:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804ae2c:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804ae32:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804ae35:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804ae38:   e8 17 e8 ff ff                  	call 0x8049654 <set_var>
0x804ae3d:   83 c4 7c                        	add esp, 0x7c
0x804ae40:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804ae46:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804ae49:   5b                              	pop ebx
0x804ae4a:   5e                              	pop esi
0x804ae4b:   5f                              	pop edi
0x804ae4c:   5d                              	pop ebp
0x804ae4d:   c3                              	ret 
; function: main at 0x804ae4e -- 0x804b298
0x804ae4e:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804ae52:   83 e4 f0                        	and esp, 0xfffffff0
0x804ae55:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804ae58:   55                              	push ebp
0x804ae59:   89 e5                           	mov ebp, esp
0x804ae5b:   53                              	push ebx
0x804ae5c:   51                              	push ecx
0x804ae5d:   83 ec 10                        	sub esp, 0x10
0x804ae60:   e8 2b d5 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ae65:   81 c3 9b 31 00 00               	add ebx, 0x319b
0x804ae6b:   89 c8                           	mov eax, ecx
0x804ae6d:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804ae74:   83 38 02                        	cmp dword ptr [eax], 2
0x804ae77:   75 26                           	jne 0x804ae9f <main+0x51>
0x804ae79:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804ae7c:   83 c0 04                        	add eax, 4
0x804ae7f:   8b 00                           	mov eax, dword ptr [eax]
0x804ae81:   83 ec 08                        	sub esp, 8
0x804ae84:   8d 93 7d d3 ff ff               	lea edx, [ebx - 0x2c83]
0x804ae8a:   52                              	push edx
0x804ae8b:   50                              	push eax
0x804ae8c:   e8 6f d4 ff ff                  	call 0x8048300 <strcmp>
0x804ae91:   83 c4 10                        	add esp, 0x10
0x804ae94:   85 c0                           	test eax, eax
0x804ae96:   75 07                           	jne 0x804ae9f <main+0x51>
0x804ae98:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804ae9f:   e8 b2 d5 ff ff                  	call 0x8048456 <platform_main_begin>
0x804aea4:   e8 c2 e5 ff ff                  	call 0x804946b <crc32_gentab>
0x804aea9:   e8 7d e9 ff ff                  	call 0x804982b <func_1>
0x804aeae:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804aeb4:   89 c2                           	mov edx, eax
0x804aeb6:   83 ec 04                        	sub esp, 4
0x804aeb9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aebc:   8d 83 7f d3 ff ff               	lea eax, [ebx - 0x2c81]
0x804aec2:   50                              	push eax
0x804aec3:   52                              	push edx
0x804aec4:   e8 ae e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aec9:   83 c4 10                        	add esp, 0x10
0x804aecc:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804aed2:   83 ec 04                        	sub esp, 4
0x804aed5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aed8:   8d 93 83 d3 ff ff               	lea edx, [ebx - 0x2c7d]
0x804aede:   52                              	push edx
0x804aedf:   50                              	push eax
0x804aee0:   e8 92 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aee5:   83 c4 10                        	add esp, 0x10
0x804aee8:   8b 83 c4 04 00 00               	mov eax, dword ptr [ebx + 0x4c4]
0x804aeee:   89 c2                           	mov edx, eax
0x804aef0:   83 ec 04                        	sub esp, 4
0x804aef3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aef6:   8d 83 88 d3 ff ff               	lea eax, [ebx - 0x2c78]
0x804aefc:   50                              	push eax
0x804aefd:   52                              	push edx
0x804aefe:   e8 74 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af03:   83 c4 10                        	add esp, 0x10
0x804af06:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804af0c:   83 ec 04                        	sub esp, 4
0x804af0f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af12:   8d 93 8d d3 ff ff               	lea edx, [ebx - 0x2c73]
0x804af18:   52                              	push edx
0x804af19:   50                              	push eax
0x804af1a:   e8 58 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af1f:   83 c4 10                        	add esp, 0x10
0x804af22:   b8 01 00 00 00                  	mov eax, 1
0x804af27:   0f b6 c0                        	movzx eax, al
0x804af2a:   83 ec 04                        	sub esp, 4
0x804af2d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af30:   8d 93 92 d3 ff ff               	lea edx, [ebx - 0x2c6e]
0x804af36:   52                              	push edx
0x804af37:   50                              	push eax
0x804af38:   e8 3a e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af3d:   83 c4 10                        	add esp, 0x10
0x804af40:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804af46:   89 c2                           	mov edx, eax
0x804af48:   83 ec 04                        	sub esp, 4
0x804af4b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af4e:   8d 83 97 d3 ff ff               	lea eax, [ebx - 0x2c69]
0x804af54:   50                              	push eax
0x804af55:   52                              	push edx
0x804af56:   e8 1c e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af5b:   83 c4 10                        	add esp, 0x10
0x804af5e:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804af64:   89 c2                           	mov edx, eax
0x804af66:   83 ec 04                        	sub esp, 4
0x804af69:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af6c:   8d 83 9c d3 ff ff               	lea eax, [ebx - 0x2c64]
0x804af72:   50                              	push eax
0x804af73:   52                              	push edx
0x804af74:   e8 fe e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af79:   83 c4 10                        	add esp, 0x10
0x804af7c:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804af82:   89 c2                           	mov edx, eax
0x804af84:   83 ec 04                        	sub esp, 4
0x804af87:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af8a:   8d 83 a1 d3 ff ff               	lea eax, [ebx - 0x2c5f]
0x804af90:   50                              	push eax
0x804af91:   52                              	push edx
0x804af92:   e8 e0 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af97:   83 c4 10                        	add esp, 0x10
0x804af9a:   0f b7 83 3c 00 00 00            	movzx eax, word ptr [ebx + 0x3c]
0x804afa1:   0f b7 c0                        	movzx eax, ax
0x804afa4:   83 ec 04                        	sub esp, 4
0x804afa7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afaa:   8d 93 a6 d3 ff ff               	lea edx, [ebx - 0x2c5a]
0x804afb0:   52                              	push edx
0x804afb1:   50                              	push eax
0x804afb2:   e8 c0 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afb7:   83 c4 10                        	add esp, 0x10
0x804afba:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804afc0:   83 ec 04                        	sub esp, 4
0x804afc3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afc6:   8d 93 ab d3 ff ff               	lea edx, [ebx - 0x2c55]
0x804afcc:   52                              	push edx
0x804afcd:   50                              	push eax
0x804afce:   e8 a4 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afd3:   83 c4 10                        	add esp, 0x10
0x804afd6:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804afdc:   83 ec 04                        	sub esp, 4
0x804afdf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afe2:   8d 93 b0 d3 ff ff               	lea edx, [ebx - 0x2c50]
0x804afe8:   52                              	push edx
0x804afe9:   50                              	push eax
0x804afea:   e8 88 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afef:   83 c4 10                        	add esp, 0x10
0x804aff2:   0f b7 83 48 00 00 00            	movzx eax, word ptr [ebx + 0x48]
0x804aff9:   0f b7 c0                        	movzx eax, ax
0x804affc:   83 ec 04                        	sub esp, 4
0x804afff:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b002:   8d 93 b5 d3 ff ff               	lea edx, [ebx - 0x2c4b]
0x804b008:   52                              	push edx
0x804b009:   50                              	push eax
0x804b00a:   e8 68 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b00f:   83 c4 10                        	add esp, 0x10
0x804b012:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804b018:   83 ec 04                        	sub esp, 4
0x804b01b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b01e:   8d 93 ba d3 ff ff               	lea edx, [ebx - 0x2c46]
0x804b024:   52                              	push edx
0x804b025:   50                              	push eax
0x804b026:   e8 4c e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b02b:   83 c4 10                        	add esp, 0x10
0x804b02e:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804b034:   89 c2                           	mov edx, eax
0x804b036:   83 ec 04                        	sub esp, 4
0x804b039:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b03c:   8d 83 c0 d3 ff ff               	lea eax, [ebx - 0x2c40]
0x804b042:   50                              	push eax
0x804b043:   52                              	push edx
0x804b044:   e8 2e e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b049:   83 c4 10                        	add esp, 0x10
0x804b04c:   0f b7 83 54 00 00 00            	movzx eax, word ptr [ebx + 0x54]
0x804b053:   0f b7 c0                        	movzx eax, ax
0x804b056:   83 ec 04                        	sub esp, 4
0x804b059:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b05c:   8d 93 c6 d3 ff ff               	lea edx, [ebx - 0x2c3a]
0x804b062:   52                              	push edx
0x804b063:   50                              	push eax
0x804b064:   e8 0e e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b069:   83 c4 10                        	add esp, 0x10
0x804b06c:   0f b7 83 56 00 00 00            	movzx eax, word ptr [ebx + 0x56]
0x804b073:   98                              	cwde 
0x804b074:   83 ec 04                        	sub esp, 4
0x804b077:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b07a:   8d 93 cc d3 ff ff               	lea edx, [ebx - 0x2c34]
0x804b080:   52                              	push edx
0x804b081:   50                              	push eax
0x804b082:   e8 f0 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b087:   83 c4 10                        	add esp, 0x10
0x804b08a:   0f b6 83 58 00 00 00            	movzx eax, byte ptr [ebx + 0x58]
0x804b091:   0f be c0                        	movsx eax, al
0x804b094:   83 ec 04                        	sub esp, 4
0x804b097:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b09a:   8d 93 d2 d3 ff ff               	lea edx, [ebx - 0x2c2e]
0x804b0a0:   52                              	push edx
0x804b0a1:   50                              	push eax
0x804b0a2:   e8 d0 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0a7:   83 c4 10                        	add esp, 0x10
0x804b0aa:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804b0b0:   89 c2                           	mov edx, eax
0x804b0b2:   83 ec 04                        	sub esp, 4
0x804b0b5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0b8:   8d 83 d8 d3 ff ff               	lea eax, [ebx - 0x2c28]
0x804b0be:   50                              	push eax
0x804b0bf:   52                              	push edx
0x804b0c0:   e8 b2 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0c5:   83 c4 10                        	add esp, 0x10
0x804b0c8:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804b0ce:   89 c2                           	mov edx, eax
0x804b0d0:   83 ec 04                        	sub esp, 4
0x804b0d3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0d6:   8d 83 de d3 ff ff               	lea eax, [ebx - 0x2c22]
0x804b0dc:   50                              	push eax
0x804b0dd:   52                              	push edx
0x804b0de:   e8 94 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0e3:   83 c4 10                        	add esp, 0x10
0x804b0e6:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804b0ec:   83 ec 04                        	sub esp, 4
0x804b0ef:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0f2:   8d 93 e4 d3 ff ff               	lea edx, [ebx - 0x2c1c]
0x804b0f8:   52                              	push edx
0x804b0f9:   50                              	push eax
0x804b0fa:   e8 78 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0ff:   83 c4 10                        	add esp, 0x10
0x804b102:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804b108:   83 ec 04                        	sub esp, 4
0x804b10b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b10e:   8d 93 ea d3 ff ff               	lea edx, [ebx - 0x2c16]
0x804b114:   52                              	push edx
0x804b115:   50                              	push eax
0x804b116:   e8 5c e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b11b:   83 c4 10                        	add esp, 0x10
0x804b11e:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804b124:   89 c2                           	mov edx, eax
0x804b126:   83 ec 04                        	sub esp, 4
0x804b129:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b12c:   8d 83 f0 d3 ff ff               	lea eax, [ebx - 0x2c10]
0x804b132:   50                              	push eax
0x804b133:   52                              	push edx
0x804b134:   e8 3e e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b139:   83 c4 10                        	add esp, 0x10
0x804b13c:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804b142:   89 c2                           	mov edx, eax
0x804b144:   83 ec 04                        	sub esp, 4
0x804b147:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b14a:   8d 83 f6 d3 ff ff               	lea eax, [ebx - 0x2c0a]
0x804b150:   50                              	push eax
0x804b151:   52                              	push edx
0x804b152:   e8 20 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b157:   83 c4 10                        	add esp, 0x10
0x804b15a:   8b 83 c8 04 00 00               	mov eax, dword ptr [ebx + 0x4c8]
0x804b160:   89 c2                           	mov edx, eax
0x804b162:   83 ec 04                        	sub esp, 4
0x804b165:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b168:   8d 83 fc d3 ff ff               	lea eax, [ebx - 0x2c04]
0x804b16e:   50                              	push eax
0x804b16f:   52                              	push edx
0x804b170:   e8 02 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b175:   83 c4 10                        	add esp, 0x10
0x804b178:   0f b6 83 74 00 00 00            	movzx eax, byte ptr [ebx + 0x74]
0x804b17f:   0f b6 c0                        	movzx eax, al
0x804b182:   83 ec 04                        	sub esp, 4
0x804b185:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b188:   8d 93 02 d4 ff ff               	lea edx, [ebx - 0x2bfe]
0x804b18e:   52                              	push edx
0x804b18f:   50                              	push eax
0x804b190:   e8 e2 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b195:   83 c4 10                        	add esp, 0x10
0x804b198:   8b 83 78 00 00 00               	mov eax, dword ptr [ebx + 0x78]
0x804b19e:   89 c2                           	mov edx, eax
0x804b1a0:   83 ec 04                        	sub esp, 4
0x804b1a3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1a6:   8d 83 08 d4 ff ff               	lea eax, [ebx - 0x2bf8]
0x804b1ac:   50                              	push eax
0x804b1ad:   52                              	push edx
0x804b1ae:   e8 c4 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1b3:   83 c4 10                        	add esp, 0x10
0x804b1b6:   0f b6 83 7c 00 00 00            	movzx eax, byte ptr [ebx + 0x7c]
0x804b1bd:   0f b6 c0                        	movzx eax, al
0x804b1c0:   83 ec 04                        	sub esp, 4
0x804b1c3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1c6:   8d 93 0e d4 ff ff               	lea edx, [ebx - 0x2bf2]
0x804b1cc:   52                              	push edx
0x804b1cd:   50                              	push eax
0x804b1ce:   e8 a4 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1d3:   83 c4 10                        	add esp, 0x10
0x804b1d6:   0f b7 83 7e 00 00 00            	movzx eax, word ptr [ebx + 0x7e]
0x804b1dd:   0f b7 c0                        	movzx eax, ax
0x804b1e0:   83 ec 04                        	sub esp, 4
0x804b1e3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1e6:   8d 93 14 d4 ff ff               	lea edx, [ebx - 0x2bec]
0x804b1ec:   52                              	push edx
0x804b1ed:   50                              	push eax
0x804b1ee:   e8 84 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1f3:   83 c4 10                        	add esp, 0x10
0x804b1f6:   0f b7 83 80 00 00 00            	movzx eax, word ptr [ebx + 0x80]
0x804b1fd:   0f b7 c0                        	movzx eax, ax
0x804b200:   83 ec 04                        	sub esp, 4
0x804b203:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b206:   8d 93 1a d4 ff ff               	lea edx, [ebx - 0x2be6]
0x804b20c:   52                              	push edx
0x804b20d:   50                              	push eax
0x804b20e:   e8 64 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b213:   83 c4 10                        	add esp, 0x10
0x804b216:   0f b7 83 82 00 00 00            	movzx eax, word ptr [ebx + 0x82]
0x804b21d:   98                              	cwde 
0x804b21e:   83 ec 04                        	sub esp, 4
0x804b221:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b224:   8d 93 20 d4 ff ff               	lea edx, [ebx - 0x2be0]
0x804b22a:   52                              	push edx
0x804b22b:   50                              	push eax
0x804b22c:   e8 46 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b231:   83 c4 10                        	add esp, 0x10
0x804b234:   0f b7 83 84 00 00 00            	movzx eax, word ptr [ebx + 0x84]
0x804b23b:   98                              	cwde 
0x804b23c:   83 ec 04                        	sub esp, 4
0x804b23f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b242:   8d 93 26 d4 ff ff               	lea edx, [ebx - 0x2bda]
0x804b248:   52                              	push edx
0x804b249:   50                              	push eax
0x804b24a:   e8 28 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b24f:   83 c4 10                        	add esp, 0x10
0x804b252:   0f b6 83 86 00 00 00            	movzx eax, byte ptr [ebx + 0x86]
0x804b259:   0f be c0                        	movsx eax, al
0x804b25c:   83 ec 04                        	sub esp, 4
0x804b25f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b262:   8d 93 2c d4 ff ff               	lea edx, [ebx - 0x2bd4]
0x804b268:   52                              	push edx
0x804b269:   50                              	push eax
0x804b26a:   e8 08 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b26f:   83 c4 10                        	add esp, 0x10
0x804b272:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b278:   f7 d0                           	not eax
0x804b27a:   83 ec 08                        	sub esp, 8
0x804b27d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b280:   50                              	push eax
0x804b281:   e8 e0 d1 ff ff                  	call 0x8048466 <platform_main_end>
0x804b286:   83 c4 10                        	add esp, 0x10
0x804b289:   b8 00 00 00 00                  	mov eax, 0
0x804b28e:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b291:   59                              	pop ecx
0x804b292:   5b                              	pop ebx
0x804b293:   5d                              	pop ebp
0x804b294:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b297:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b298 -- 0x804b29c
0x804b298:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b29b:   c3                              	ret 
; data inside code section at 0x804b29c -- 0x804b2a0
0x804b29c:   66 90 66 90                                        |f.f.            |
; function: __libc_csu_init at 0x804b2a0 -- 0x804b2fd
0x804b2a0:   55                              	push ebp
0x804b2a1:   57                              	push edi
0x804b2a2:   56                              	push esi
0x804b2a3:   53                              	push ebx
0x804b2a4:   e8 e7 d0 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b2a9:   81 c3 57 2d 00 00               	add ebx, 0x2d57
0x804b2af:   83 ec 0c                        	sub esp, 0xc
0x804b2b2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b2b6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b2bc:   e8 0b d0 ff ff                  	call 0x80482cc <_init>
0x804b2c1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b2c7:   29 c6                           	sub esi, eax
0x804b2c9:   c1 fe 02                        	sar esi, 2
0x804b2cc:   85 f6                           	test esi, esi
0x804b2ce:   74 25                           	je 0x804b2f5 <__libc_csu_init+0x55>
0x804b2d0:   31 ff                           	xor edi, edi
0x804b2d2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b2d8:   83 ec 04                        	sub esp, 4
0x804b2db:   55                              	push ebp
0x804b2dc:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b2e0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b2e4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b2eb:   83 c7 01                        	add edi, 1
0x804b2ee:   83 c4 10                        	add esp, 0x10
0x804b2f1:   39 fe                           	cmp esi, edi
0x804b2f3:   75 e3                           	jne 0x804b2d8 <__libc_csu_init+0x38>
0x804b2f5:   83 c4 0c                        	add esp, 0xc
0x804b2f8:   5b                              	pop ebx
0x804b2f9:   5e                              	pop esi
0x804b2fa:   5f                              	pop edi
0x804b2fb:   5d                              	pop ebp
0x804b2fc:   c3                              	ret 
; data inside code section at 0x804b2fd -- 0x804b300
0x804b2fd:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b300 -- 0x804b302
0x804b300:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b304 -- 0x804b318
0x804b304:   53                              	push ebx
0x804b305:   83 ec 08                        	sub esp, 8
0x804b308:   e8 83 d0 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b30d:   81 c3 f3 2c 00 00               	add ebx, 0x2cf3
0x804b313:   83 c4 08                        	add esp, 8
0x804b316:   5b                              	pop ebx
0x804b317:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 1c b3 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b318:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b328:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b338:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b348:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b358:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b368:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b378:   01 25 64 0a 00 31 00 67  5f 32 00 67 5f 31 35 00   |.%d..1.g_2.g_15.|
0x804b388:   67 5f 31 38 00 67 5f 34  30 00 67 5f 36 30 00 67   |g_18.g_40.g_60.g|
0x804b398:   5f 36 31 00 67 5f 36 34  00 67 5f 37 31 00 67 5f   |_61.g_64.g_71.g_|
0x804b3a8:   38 32 00 67 5f 38 37 00  67 5f 38 38 00 67 5f 39   |82.g_87.g_88.g_9|
0x804b3b8:   39 00 67 5f 31 33 37 00  67 5f 32 30 30 00 67 5f   |9.g_137.g_200.g_|
0x804b3c8:   32 30 36 00 67 5f 32 32  37 00 67 5f 32 33 33 00   |206.g_227.g_233.|
0x804b3d8:   67 5f 32 33 37 00 67 5f  32 33 38 00 67 5f 32 33   |g_237.g_238.g_23|
0x804b3e8:   39 00 67 5f 32 34 32 00  67 5f 32 35 36 00 67 5f   |9.g_242.g_256.g_|
0x804b3f8:   32 39 30 00 67 5f 32 39  31 00 67 5f 32 39 33 00   |290.g_291.g_293.|
0x804b408:   67 5f 33 30 35 00 67 5f  33 31 33 00 67 5f 33 39   |g_305.g_313.g_39|
0x804b418:   38 00 67 5f 34 32 35 00  67 5f 34 35 38 00 67 5f   |8.g_425.g_458.g_|
0x804b428:   34 36 30 00 67 5f 34 39  37 00 00 00 00 00 00 3f   |460.g_497......?|
0x804b438:   ff ff ff 7e 00 00 80 0d  00 00 80 31 ff ff 7f 3f   |...~.......1...?|
0x804b448:   00 00 00 27 00 00 80 71  ff ff ff 34 00 00 00 00   |...'...q...4....|
0x804b458:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804b468:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804b478:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804b488:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804b498:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804b4a0:   01 1b 03 3b b8 02 00 00  56 00 00 00 50 ce ff ff   |...;....V...P...|
0x804b4b0:   e8 02 00 00 90 ce ff ff  0c 03 00 00 e0 ce ff ff   |................|
0x804b4c0:   d4 02 00 00 b6 cf ff ff  20 03 00 00 c6 cf ff ff   |........ .......|
0x804b4d0:   40 03 00 00 f4 cf ff ff  64 03 00 00 12 d0 ff ff   |@.......d.......|
0x804b4e0:   84 03 00 00 3a d0 ff ff  a4 03 00 00 64 d0 ff ff   |....:.......d...|
0x804b4f0:   c4 03 00 00 8d d0 ff ff  e4 03 00 00 d0 d0 ff ff   |................|
0x804b500:   04 04 00 00 11 d1 ff ff  24 04 00 00 69 d1 ff ff   |........$...i...|
0x804b510:   48 04 00 00 bb d1 ff ff  6c 04 00 00 f8 d1 ff ff   |H.......l.......|
0x804b520:   8c 04 00 00 2f d2 ff ff  ac 04 00 00 4e d2 ff ff   |..../.......N...|
0x804b530:   cc 04 00 00 78 d2 ff ff  ec 04 00 00 a4 d2 ff ff   |....x...........|
0x804b540:   0c 05 00 00 cf d2 ff ff  2c 05 00 00 18 d3 ff ff   |........,.......|
0x804b550:   4c 05 00 00 5f d3 ff ff  6c 05 00 00 b9 d3 ff ff   |L..._...l.......|
0x804b560:   90 05 00 00 0d d4 ff ff  b4 05 00 00 4c d4 ff ff   |............L...|
0x804b570:   d4 05 00 00 85 d4 ff ff  f4 05 00 00 a7 d4 ff ff   |................|
0x804b580:   14 06 00 00 f5 d4 ff ff  34 06 00 00 31 d5 ff ff   |........4...1...|
0x804b590:   54 06 00 00 ba d5 ff ff  74 06 00 00 ec d5 ff ff   |T.......t.......|
0x804b5a0:   94 06 00 00 1c d6 ff ff  b4 06 00 00 61 d6 ff ff   |............a...|
0x804b5b0:   d4 06 00 00 a0 d6 ff ff  f4 06 00 00 d2 d6 ff ff   |................|
0x804b5c0:   14 07 00 00 fe d6 ff ff  34 07 00 00 1c d7 ff ff   |........4.......|
0x804b5d0:   54 07 00 00 44 d7 ff ff  74 07 00 00 69 d7 ff ff   |T...D...t...i...|
0x804b5e0:   94 07 00 00 8e d7 ff ff  b4 07 00 00 c5 d7 ff ff   |................|
0x804b5f0:   d4 07 00 00 f9 d7 ff ff  f4 07 00 00 4b d8 ff ff   |............K...|
0x804b600:   18 08 00 00 97 d8 ff ff  3c 08 00 00 ce d8 ff ff   |........<.......|
0x804b610:   5c 08 00 00 ff d8 ff ff  7c 08 00 00 1e d9 ff ff   |\.......|.......|
0x804b620:   9c 08 00 00 48 d9 ff ff  bc 08 00 00 70 d9 ff ff   |....H.......p...|
0x804b630:   dc 08 00 00 99 d9 ff ff  fc 08 00 00 d5 d9 ff ff   |................|
0x804b640:   1c 09 00 00 0f da ff ff  3c 09 00 00 62 da ff ff   |........<...b...|
0x804b650:   60 09 00 00 af da ff ff  84 09 00 00 e7 da ff ff   |`...............|
0x804b660:   a4 09 00 00 19 db ff ff  c4 09 00 00 2d db ff ff   |............-...|
0x804b670:   e4 09 00 00 44 db ff ff  04 0a 00 00 59 db ff ff   |....D.......Y...|
0x804b680:   24 0a 00 00 6f db ff ff  44 0a 00 00 96 db ff ff   |$...o...D.......|
0x804b690:   64 0a 00 00 bb db ff ff  84 0a 00 00 fa db ff ff   |d...............|
0x804b6a0:   a4 0a 00 00 33 dc ff ff  c4 0a 00 00 5f dc ff ff   |....3......._...|
0x804b6b0:   e4 0a 00 00 85 dc ff ff  04 0b 00 00 c7 dc ff ff   |................|
0x804b6c0:   24 0b 00 00 09 dd ff ff  44 0b 00 00 4b dd ff ff   |$.......D...K...|
0x804b6d0:   64 0b 00 00 c0 dd ff ff  84 0b 00 00 1d de ff ff   |d...............|
0x804b6e0:   a4 0b 00 00 7a de ff ff  c4 0b 00 00 d7 de ff ff   |....z...........|
0x804b6f0:   e4 0b 00 00 67 df ff ff  04 0c 00 00 cb df ff ff   |....g...........|
0x804b700:   24 0c 00 00 3b e0 ff ff  44 0c 00 00 82 e0 ff ff   |$...;...D.......|
0x804b710:   68 0c 00 00 d7 e0 ff ff  88 0c 00 00 1e e1 ff ff   |h...............|
0x804b720:   ac 0c 00 00 86 e1 ff ff  d0 0c 00 00 b4 e1 ff ff   |................|
0x804b730:   f4 0c 00 00 8b e3 ff ff  24 0d 00 00 ae f9 ff ff   |........$.......|
0x804b740:   54 0d 00 00 f8 fd ff ff  8c 0d 00 00 00 fe ff ff   |T...............|
0x804b750:   a0 0d 00 00 60 fe ff ff  ec 0d 00 00 14            |....`........   |
; section: .eh_frame
0x804b75c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b76c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b77c:   04 cc ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b78c:   30 00 00 00 60 cb ff ff  40 00 00 00 00 0e 08 46   |0...`...@......F|
0x804b79c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b7ac:   10 00 00 00 54 00 00 00  7c cb ff ff 08 00 00 00   |....T...|.......|
0x804b7bc:   00 00 00 00 1c 00 00 00  68 00 00 00 8e cc ff ff   |........h.......|
0x804b7cc:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b7dc:   04 04 00 00 20 00 00 00  88 00 00 00 7e cc ff ff   |.... .......~...|
0x804b7ec:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b7fc:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b80c:   88 cc ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b81c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b82c:   86 cc ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b83c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b84c:   8e cc ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b85c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b86c:   98 cc ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b87c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b88c:   a1 cc ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b89c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b8ac:   c4 cc ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b8bc:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b8cc:   e5 cc ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b8dc:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b8ec:   90 01 00 00 19 cd ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b8fc:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b90c:   1c 00 00 00 b4 01 00 00  47 cd ff ff 3d 00 00 00   |........G...=...|
0x804b91c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b92c:   1c 00 00 00 d4 01 00 00  64 cd ff ff 37 00 00 00   |........d...7...|
0x804b93c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b94c:   1c 00 00 00 f4 01 00 00  7b cd ff ff 1f 00 00 00   |........{.......|
0x804b95c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b96c:   1c 00 00 00 14 02 00 00  7a cd ff ff 2a 00 00 00   |........z...*...|
0x804b97c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b98c:   1c 00 00 00 34 02 00 00  84 cd ff ff 2c 00 00 00   |....4.......,...|
0x804b99c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b9ac:   1c 00 00 00 54 02 00 00  90 cd ff ff 2b 00 00 00   |....T.......+...|
0x804b9bc:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b9cc:   1c 00 00 00 74 02 00 00  9b cd ff ff 49 00 00 00   |....t.......I...|
0x804b9dc:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b9ec:   1c 00 00 00 94 02 00 00  c4 cd ff ff 47 00 00 00   |............G...|
0x804b9fc:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804ba0c:   20 00 00 00 b4 02 00 00  eb cd ff ff 5a 00 00 00   | ...........Z...|
0x804ba1c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804ba2c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 21 ce ff ff   |.... .......!...|
0x804ba3c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804ba4c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804ba5c:   51 ce ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |Q...?....A....B.|
0x804ba6c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804ba7c:   70 ce ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |p...9....A....B.|
0x804ba8c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804ba9c:   89 ce ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804baac:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804babc:   8b ce ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804bacc:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804badc:   b9 ce ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804baec:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804bafc:   d5 ce ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bb0c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804bb1c:   3e cf ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |>...2....A....B.|
0x804bb2c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804bb3c:   50 cf ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |P...0....A....B.|
0x804bb4c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804bb5c:   60 cf ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |`...E....A....B.|
0x804bb6c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804bb7c:   85 cf ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804bb8c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804bb9c:   a4 cf ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bbac:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804bbbc:   b6 cf ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bbcc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804bbdc:   c2 cf ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bbec:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804bbfc:   c0 cf ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804bc0c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804bc1c:   c8 cf ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bc2c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804bc3c:   cd cf ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bc4c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804bc5c:   d2 cf ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804bc6c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804bc7c:   e9 cf ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804bc8c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804bc9c:   fd cf ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804bcac:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804bcbc:   60 05 00 00 2b d0 ff ff  4c 00 00 00 00 41 0e 08   |`...+...L....A..|
0x804bccc:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804bcdc:   1c 00 00 00 84 05 00 00  53 d0 ff ff 37 00 00 00   |........S...7...|
0x804bcec:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bcfc:   1c 00 00 00 a4 05 00 00  6a d0 ff ff 31 00 00 00   |........j...1...|
0x804bd0c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bd1c:   1c 00 00 00 c4 05 00 00  7b d0 ff ff 1f 00 00 00   |........{.......|
0x804bd2c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bd3c:   1c 00 00 00 e4 05 00 00  7a d0 ff ff 2a 00 00 00   |........z...*...|
0x804bd4c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bd5c:   1c 00 00 00 04 06 00 00  84 d0 ff ff 28 00 00 00   |............(...|
0x804bd6c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bd7c:   1c 00 00 00 24 06 00 00  8c d0 ff ff 29 00 00 00   |....$.......)...|
0x804bd8c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bd9c:   1c 00 00 00 44 06 00 00  95 d0 ff ff 3c 00 00 00   |....D.......<...|
0x804bdac:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bdbc:   1c 00 00 00 64 06 00 00  b1 d0 ff ff 3a 00 00 00   |....d.......:...|
0x804bdcc:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bddc:   20 00 00 00 84 06 00 00  cb d0 ff ff 53 00 00 00   | ...........S...|
0x804bdec:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bdfc:   c5 0c 04 04 20 00 00 00  a8 06 00 00 fa d0 ff ff   |.... ...........|
0x804be0c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804be1c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804be2c:   23 d1 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |#...8....A....B.|
0x804be3c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804be4c:   3b d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |;...2....A....B.|
0x804be5c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804be6c:   4d d1 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |M........A....B.|
0x804be7c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804be8c:   41 d1 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |A........A....B.|
0x804be9c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804beac:   38 d1 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |8........A....B.|
0x804bebc:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804becc:   2d d1 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |-........A....B.|
0x804bedc:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804beec:   23 d1 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |#...'....A....B.|
0x804befc:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bf0c:   2a d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |*...%....A....B.|
0x804bf1c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bf2c:   2f d1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |/...?....A....B.|
0x804bf3c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bf4c:   4e d1 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |N...9....A....B.|
0x804bf5c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bf6c:   67 d1 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |g...,....A....B.|
0x804bf7c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bf8c:   73 d1 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |s...&....A....B.|
0x804bf9c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bfac:   79 d1 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |y...B....A....B.|
0x804bfbc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bfcc:   9b d1 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bfdc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bfec:   bd d1 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bffc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804c00c:   df d1 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804c01c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804c02c:   34 d2 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |4...]....A....B.|
0x804c03c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804c04c:   71 d2 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |q...]....A....B.|
0x804c05c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804c06c:   ae d2 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804c07c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804c08c:   eb d2 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c09c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804c0ac:   5b d3 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |[...d....A....B.|
0x804c0bc:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804c0cc:   9f d3 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804c0dc:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804c0ec:   ef d3 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804c0fc:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804c10c:   b0 09 00 00 12 d4 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804c11c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804c12c:   d0 09 00 00 47 d4 ff ff  47 00 00 00 00 41 0e 08   |....G...G....A..|
0x804c13c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804c14c:   20 00 00 00 f4 09 00 00  6a d4 ff ff 68 00 00 00   | .......j...h...|
0x804c15c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804c16c:   0c 04 04 00 20 00 00 00  18 0a 00 00 ae d4 ff ff   |.... ...........|
0x804c17c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804c18c:   66 c5 c3 0c 04 04 00 00  2c 00 00 00 3c 0a 00 00   |f.......,...<...|
0x804c19c:   b8 d4 ff ff d7 01 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c1ac:   05 46 87 03 86 04 83 05  03 ca 01 c3 41 c6 41 c7   |.F..........A.A.|
0x804c1bc:   41 c5 0c 04 04 00 00 00  2c 00 00 00 6c 0a 00 00   |A.......,...l...|
0x804c1cc:   5f d6 ff ff 23 16 00 00  00 41 0e 08 85 02 42 0d   |_...#....A....B.|
0x804c1dc:   05 49 87 03 86 04 83 05  03 13 16 c3 41 c6 41 c7   |.I..........A.A.|
0x804c1ec:   41 c5 0c 04 04 00 00 00  34 00 00 00 9c 0a 00 00   |A.......4.......|
0x804c1fc:   52 ec ff ff 4a 04 00 00  00 44 0c 01 00 47 10 05   |R...J....D...G..|
0x804c20c:   02 75 00 44 0f 03 75 78  06 10 03 02 75 7c 03 35   |.u.D..ux....u|.5|
0x804c21c:   04 c1 0c 01 00 41 c3 41  c5 43 0c 04 04 00 00 00   |.....A.A.C......|
0x804c22c:   10 00 00 00 d4 0a 00 00  64 f0 ff ff 04 00 00 00   |........d.......|
0x804c23c:   00 00 00 00 48 00 00 00  e8 0a 00 00 58 f0 ff ff   |....H.......X...|
0x804c24c:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c25c:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c26c:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c27c:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c28c:   10 00 00 00 34 0b 00 00  6c f0 ff ff 02 00 00 00   |....4...l.......|
0x804c29c:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 04 b3 04 08  19 00 00 00 0c df 04 08   |................|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 06 00 00 00   |................|
0x804e028:   fd ff ff ff f7 ff ff ff  01 00 00 00 ff ff ff ff   |................|
0x804e038:   87 fa b3 b7 84 49 00 00  04 00 00 00 f9 ff ff ff   |.....I..........|
0x804e048:   02 00 00 00 37 7e 42 26  fa ff ff ff ff ff 16 7f   |....7~B&........|
0x804e058:   09 00 00 00 bd b1 70 9f  04 00 00 00 30 e8 d1 8f   |......p.....0...|
0x804e068:   ff ff ff ff 21 b1 95 57  3d d4 d9 23 ff 00 00 00   |....!..W=..#....|
0x804e078:   64 1c 54 54 ff 00 ff ff  ff ff 03 00 ff ff ff ??   |d.TT...........?|
