;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 10:18:12
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 10 dc ff ff               	lea eax, [ebx - 0x23f0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 b0 db ff ff               	lea eax, [ebx - 0x2450]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 1e a8 04 08               	mov eax, 0x804a81e
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 74 d0 04 08                  	mov eax, 0x804d074
0x80483a5:   3d 74 d0 04 08                  	cmp eax, 0x804d074
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 74 d0 04 08                  	push 0x804d074
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 74 d0 04 08                  	mov eax, 0x804d074
0x80483e5:   2d 74 d0 04 08                  	sub eax, 0x804d074
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 74 d0 04 08                  	push 0x804d074
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 3e 27 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 2a 27 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 30 dc ff ff               	lea edx, [eax - 0x23d0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 fd 26 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 df 26 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 b7 26 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 8d 26 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 64 26 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 21 26 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 df 25 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 87 25 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 36 25 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 f9 24 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 c2 24 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 a3 24 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 79 24 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 4d 24 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 22 24 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 d9 23 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 91 23 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 37 23 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 e4 22 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 a5 22 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 6f 22 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 4d 22 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 ff 21 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 c3 21 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 3a 21 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 08 21 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 d8 20 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 93 20 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 54 20 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 22 20 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 f3 1f 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 d5 1f 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 ad 1f 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 88 1f 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 63 1f 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 2c 1f 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 f7 1e 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 a5 1e 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 5a 1e 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 23 1e 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 f2 1d 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 d3 1d 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 a9 1d 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 81 1d 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 58 1d 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 1c 1d 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 e1 1c 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 8e 1c 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 42 1c 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 0a 1c 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 db 1b 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 c7 1b 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 b0 1b 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 9b 1b 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 85 1b 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 5e 1b 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 39 1b 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 fa 1a 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 c1 1a 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 95 1a 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 6f 1a 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 14 dd ff ff               	fld dword ptr [eax - 0x22ec]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 14 dd ff ff               	fld dword ptr [eax - 0x22ec]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 18 dd ff ff               	fld dword ptr [eax - 0x22e8]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 2d 1a 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 14 dd ff ff               	fld dword ptr [eax - 0x22ec]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 14 dd ff ff               	fld dword ptr [eax - 0x22ec]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 18 dd ff ff               	fld dword ptr [eax - 0x22e8]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 eb 19 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 1c dd ff ff               	fld dword ptr [eax - 0x22e4]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 20 dd ff ff               	fld dword ptr [eax - 0x22e0]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 24 dd ff ff               	fld dword ptr [eax - 0x22dc]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 a9 19 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 28 dd ff ff               	fld dword ptr [eax - 0x22d8]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 2c dd ff ff               	fld dword ptr [eax - 0x22d4]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 30 dd ff ff               	fld dword ptr [eax - 0x22d0]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 31 19 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 38 dd ff ff               	fld qword ptr [eax - 0x22c8]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 38 dd ff ff               	fld qword ptr [eax - 0x22c8]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 40 dd ff ff               	fld qword ptr [eax - 0x22c0]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 d4 18 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 38 dd ff ff               	fld qword ptr [eax - 0x22c8]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 38 dd ff ff               	fld qword ptr [eax - 0x22c8]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 40 dd ff ff               	fld qword ptr [eax - 0x22c0]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 77 18 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 48 dd ff ff               	fld qword ptr [eax - 0x22b8]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 50 dd ff ff               	fld qword ptr [eax - 0x22b0]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 58 dd ff ff               	fld qword ptr [eax - 0x22a8]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 1a 18 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 60 dd ff ff               	fld qword ptr [eax - 0x22a0]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 68 dd ff ff               	fld qword ptr [eax - 0x2298]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 70 dd ff ff               	fld qword ptr [eax - 0x2290]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 8a 17 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 78 dd ff ff               	fld dword ptr [eax - 0x2288]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 7c dd ff ff               	fld dword ptr [eax - 0x2284]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 26 17 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 b5 16 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 72 16 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 40 dc ff ff               	lea eax, [ebx - 0x23c0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 64 dc ff ff               	lea eax, [ebx - 0x239c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: packed_printf at 0x8049626 -- 0x8049654
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   53                              	push ebx
0x804962a:   83 ec 04                        	sub esp, 4
0x804962d:   e8 6a 15 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8049632:   05 ce 39 00 00                  	add eax, 0x39ce
0x8049637:   83 ec 08                        	sub esp, 8
0x804963a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804963d:   8d 90 88 dc ff ff               	lea edx, [eax - 0x2378]
0x8049643:   52                              	push edx
0x8049644:   89 c3                           	mov ebx, eax
0x8049646:   e8 c5 ec ff ff                  	call 0x8048310 <printf>
0x804964b:   83 c4 10                        	add esp, 0x10
0x804964e:   90                              	nop 
0x804964f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049652:   c9                              	leave 
0x8049653:   c3                              	ret 
; function: set_var at 0x8049654 -- 0x80497ef
0x8049654:   55                              	push ebp
0x8049655:   89 e5                           	mov ebp, esp
0x8049657:   57                              	push edi
0x8049658:   56                              	push esi
0x8049659:   53                              	push ebx
0x804965a:   83 ec 4c                        	sub esp, 0x4c
0x804965d:   e8 3e 15 00 00                  	call 0x804aba0 <__x86.get_pc_thunk.dx>
0x8049662:   81 c2 9e 39 00 00               	add edx, 0x399e
0x8049668:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x804966b:   8b 4d 20                        	mov ecx, dword ptr [ebp + 0x20]
0x804966e:   8b 5d 28                        	mov ebx, dword ptr [ebp + 0x28]
0x8049671:   8b 75 30                        	mov esi, dword ptr [ebp + 0x30]
0x8049674:   8b 7d 3c                        	mov edi, dword ptr [ebp + 0x3c]
0x8049677:   89 7d c0                        	mov dword ptr [ebp - 0x40], edi
0x804967a:   8b 7d 40                        	mov edi, dword ptr [ebp + 0x40]
0x804967d:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x8049680:   8b 7d 44                        	mov edi, dword ptr [ebp + 0x44]
0x8049683:   89 7d b8                        	mov dword ptr [ebp - 0x48], edi
0x8049686:   8b 7d 48                        	mov edi, dword ptr [ebp + 0x48]
0x8049689:   89 7d b4                        	mov dword ptr [ebp - 0x4c], edi
0x804968c:   8b 7d 4c                        	mov edi, dword ptr [ebp + 0x4c]
0x804968f:   89 7d b0                        	mov dword ptr [ebp - 0x50], edi
0x8049692:   8b 7d 50                        	mov edi, dword ptr [ebp + 0x50]
0x8049695:   89 7d ac                        	mov dword ptr [ebp - 0x54], edi
0x8049698:   8b 7d 5c                        	mov edi, dword ptr [ebp + 0x5c]
0x804969b:   89 7d a8                        	mov dword ptr [ebp - 0x58], edi
0x804969e:   8b 7d 64                        	mov edi, dword ptr [ebp + 0x64]
0x80496a1:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x80496a5:   89 c8                           	mov eax, ecx
0x80496a7:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x80496ab:   89 d8                           	mov eax, ebx
0x80496ad:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x80496b0:   89 f0                           	mov eax, esi
0x80496b2:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x80496b6:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x80496ba:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x80496bd:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x80496c1:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496c4:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x80496c8:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496cc:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x80496d0:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496d3:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x80496d7:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496da:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x80496de:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496e2:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496e6:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x80496ea:   89 f8                           	mov eax, edi
0x80496ec:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x80496ef:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80496f2:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x80496f8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80496fb:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x8049701:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x8049704:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x804970a:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x804970d:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x8049713:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x8049716:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x804971c:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x8049720:   66 89 82 38 00 00 00            	mov word ptr [edx + 0x38], ax
0x8049727:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x804972b:   66 89 82 3a 00 00 00            	mov word ptr [edx + 0x3a], ax
0x8049732:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x8049735:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x804973b:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x804973f:   88 82 40 00 00 00               	mov byte ptr [edx + 0x40], al
0x8049745:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x8049748:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x804974e:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049752:   66 89 82 48 00 00 00            	mov word ptr [edx + 0x48], ax
0x8049759:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x804975c:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x8049762:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049765:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x804976b:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x804976f:   88 82 54 00 00 00               	mov byte ptr [edx + 0x54], al
0x8049775:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x8049779:   88 82 55 00 00 00               	mov byte ptr [edx + 0x55], al
0x804977f:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x8049783:   66 89 82 56 00 00 00            	mov word ptr [edx + 0x56], ax
0x804978a:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x804978e:   88 82 58 00 00 00               	mov byte ptr [edx + 0x58], al
0x8049794:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x8049798:   88 82 59 00 00 00               	mov byte ptr [edx + 0x59], al
0x804979e:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x80497a2:   66 89 82 5a 00 00 00            	mov word ptr [edx + 0x5a], ax
0x80497a9:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x80497ac:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x80497b2:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x80497b5:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x80497bb:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x80497bf:   66 89 82 64 00 00 00            	mov word ptr [edx + 0x64], ax
0x80497c6:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x80497c9:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x80497cf:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x80497d3:   88 82 6c 00 00 00               	mov byte ptr [edx + 0x6c], al
0x80497d9:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x80497dc:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x80497e2:   b8 00 00 00 00                  	mov eax, 0
0x80497e7:   83 c4 4c                        	add esp, 0x4c
0x80497ea:   5b                              	pop ebx
0x80497eb:   5e                              	pop esi
0x80497ec:   5f                              	pop edi
0x80497ed:   5d                              	pop ebp
0x80497ee:   c3                              	ret 
; function: func_1 at 0x80497ef -- 0x804a81e
0x80497ef:   55                              	push ebp
0x80497f0:   89 e5                           	mov ebp, esp
0x80497f2:   57                              	push edi
0x80497f3:   56                              	push esi
0x80497f4:   53                              	push ebx
0x80497f5:   81 ec 28 01 00 00               	sub esp, 0x128
0x80497fb:   e8 9c 13 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8049800:   05 00 38 00 00                  	add eax, 0x3800
0x8049805:   c7 45 84 ff ff ff ff            	mov dword ptr [ebp - 0x7c], 0xffffffff
0x804980c:   c7 45 80 09 00 00 00            	mov dword ptr [ebp - 0x80], 9
0x8049813:   c7 45 dc 01 00 00 00            	mov dword ptr [ebp - 0x24], 1
0x804981a:   c7 45 d8 01 00 00 00            	mov dword ptr [ebp - 0x28], 1
0x8049821:   c7 45 d4 d0 98 48 b1            	mov dword ptr [ebp - 0x2c], 0xb14898d0
0x8049828:   66 c7 45 e2 56 b9               	mov word ptr [ebp - 0x1e], 0xb956
0x804982e:   66 c7 45 f2 01 00               	mov word ptr [ebp - 0xe], 1
0x8049834:   c7 45 ec 02 00 00 00            	mov dword ptr [ebp - 0x14], 2
0x804983b:   c6 45 f1 03                     	mov byte ptr [ebp - 0xf], 3
0x804983f:   c7 85 7c ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0x84], 0xfffffffb
0x8049849:   66 c7 45 ea a9 a9               	mov word ptr [ebp - 0x16], 0xa9a9
0x804984f:   c7 45 e4 fc 71 10 3a            	mov dword ptr [ebp - 0x1c], 0x3a1071fc
0x8049856:   c7 45 d0 01 00 00 00            	mov dword ptr [ebp - 0x30], 1
0x804985d:   c6 85 7b ff ff ff 01            	mov byte ptr [ebp - 0x85], 1
0x8049864:   c6 85 7a ff ff ff fc            	mov byte ptr [ebp - 0x86], 0xfc
0x804986b:   66 c7 45 ce b9 2b               	mov word ptr [ebp - 0x32], 0x2bb9
0x8049871:   c6 45 cd 79                     	mov byte ptr [ebp - 0x33], 0x79
0x8049875:   c6 45 cc 01                     	mov byte ptr [ebp - 0x34], 1
0x8049879:   66 c7 45 ca ff ff               	mov word ptr [ebp - 0x36], 0xffff
0x804987f:   c7 85 74 ff ff ff 54 66 eb ae   	mov dword ptr [ebp - 0x8c], 0xaeeb6654
0x8049889:   c7 45 c4 a3 3e 6e bb            	mov dword ptr [ebp - 0x3c], 0xbb6e3ea3
0x8049890:   66 c7 45 c2 42 8a               	mov word ptr [ebp - 0x3e], 0x8a42
0x8049896:   c7 45 bc c8 11 d0 6e            	mov dword ptr [ebp - 0x44], 0x6ed011c8
0x804989d:   c6 85 73 ff ff ff e3            	mov byte ptr [ebp - 0x8d], 0xe3
0x80498a4:   c7 45 b8 ff ff ff ff            	mov dword ptr [ebp - 0x48], 0xffffffff
0x80498ab:   66 c7 45 b6 8e c8               	mov word ptr [ebp - 0x4a], 0xc88e
0x80498b1:   c7 45 b0 ff ff ff ff            	mov dword ptr [ebp - 0x50], 0xffffffff
0x80498b8:   c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0x80498bf:   c7 45 a8 da 39 9a c7            	mov dword ptr [ebp - 0x58], 0xc79a39da
0x80498c6:   c7 85 6c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x94], 1
0x80498d0:   c7 85 68 ff ff ff 2f 2b 2a bb   	mov dword ptr [ebp - 0x98], 0xbb2a2b2f
0x80498da:   c7 85 64 ff ff ff ea 67 7b ec   	mov dword ptr [ebp - 0x9c], 0xec7b67ea
0x80498e4:   c7 85 60 ff ff ff 03 00 00 00   	mov dword ptr [ebp - 0xa0], 3
0x80498ee:   c7 45 80 00 00 00 00            	mov dword ptr [ebp - 0x80], 0
0x80498f5:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x80498f9:   98                              	cwde 
0x80498fa:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80498ff:   89 c1                           	mov ecx, eax
0x8049901:   d3 fa                           	sar edx, cl
0x8049903:   89 d0                           	mov eax, edx
0x8049905:   0f be d0                        	movsx edx, al
0x8049908:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804990b:   0f be c0                        	movsx eax, al
0x804990e:   89 c1                           	mov ecx, eax
0x8049910:   d3 e2                           	shl edx, cl
0x8049912:   89 d0                           	mov eax, edx
0x8049914:   3c e7                           	cmp al, 0xe7
0x8049916:   0f 93 c0                        	setae al
0x8049919:   0f b6 d0                        	movzx edx, al
0x804991c:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x8049920:   09 d0                           	or eax, edx
0x8049922:   85 c0                           	test eax, eax
0x8049924:   0f 84 dc 0b 00 00               	je 0x804a506 <func_1+0xd17>
0x804992a:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x8049931:   c7 45 a0 11 79 19 0c            	mov dword ptr [ebp - 0x60], 0xc197911
0x8049938:   c7 45 9c 00 00 00 00            	mov dword ptr [ebp - 0x64], 0
0x804993f:   c7 85 5c ff ff ff 62 fc b3 a9   	mov dword ptr [ebp - 0xa4], 0xa9b3fc62
0x8049949:   c7 45 98 26 63 cf 73            	mov dword ptr [ebp - 0x68], 0x73cf6326
0x8049950:   66 c7 45 96 6e 20               	mov word ptr [ebp - 0x6a], 0x206e
0x8049956:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x804995d:   66 c7 85 5a ff ff ff 04 00      	mov word ptr [ebp - 0xa6], 4
0x8049966:   c7 85 54 ff ff ff 07 00 00 00   	mov dword ptr [ebp - 0xac], 7
0x8049970:   c7 85 50 ff ff ff f8 ff ff ff   	mov dword ptr [ebp - 0xb0], 0xfffffff8
0x804997a:   66 c7 45 b6 00 00               	mov word ptr [ebp - 0x4a], 0
0x8049980:   e9 8f 05 00 00                  	jmp 0x8049f14 <func_1+0x725>
0x8049985:   c7 85 4c ff ff ff a3 f8 b6 7f   	mov dword ptr [ebp - 0xb4], 0x7fb6f8a3
0x804998f:   c7 45 8c 01 00 00 00            	mov dword ptr [ebp - 0x74], 1
0x8049996:   66 c7 85 4a ff ff ff 8d 1b      	mov word ptr [ebp - 0xb6], 0x1b8d
0x804999f:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x80499a2:   0f b7 c0                        	movzx eax, ax
0x80499a5:   85 c0                           	test eax, eax
0x80499a7:   0f 95 c0                        	setne al
0x80499aa:   0f b6 c0                        	movzx eax, al
0x80499ad:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x80499b0:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x80499b4:   75 06                           	jne 0x80499bc <func_1+0x1cd>
0x80499b6:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x80499ba:   74 07                           	je 0x80499c3 <func_1+0x1d4>
0x80499bc:   b8 01 00 00 00                  	mov eax, 1
0x80499c1:   eb 05                           	jmp 0x80499c8 <func_1+0x1d9>
0x80499c3:   b8 00 00 00 00                  	mov eax, 0
0x80499c8:   09 45 dc                        	or dword ptr [ebp - 0x24], eax
0x80499cb:   b8 01 00 00 00                  	mov eax, 1
0x80499d0:   31 45 d8                        	xor dword ptr [ebp - 0x28], eax
0x80499d3:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x80499d6:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x80499d9:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x80499e0:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x80499e3:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x80499e7:   c7 45 d4 fa ff ff ff            	mov dword ptr [ebp - 0x2c], 0xfffffffa
0x80499ee:   e9 5f 01 00 00                  	jmp 0x8049b52 <func_1+0x363>
0x80499f3:   c7 85 24 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xdc], 2
0x80499fd:   c7 85 20 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe0], 0
0x8049a07:   c7 85 1c ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0xe4], 0xfffffffa
0x8049a11:   c7 85 18 ff ff ff f8 ff ff ff   	mov dword ptr [ebp - 0xe8], 0xfffffff8
0x8049a1b:   83 85 24 ff ff ff 01            	add dword ptr [ebp - 0xdc], 1
0x8049a22:   c7 45 a0 f7 ff ff ff            	mov dword ptr [ebp - 0x60], 0xfffffff7
0x8049a29:   e9 c8 00 00 00                  	jmp 0x8049af6 <func_1+0x307>
0x8049a2e:   66 c7 85 16 ff ff ff c0 06      	mov word ptr [ebp - 0xea], 0x6c0
0x8049a37:   c7 85 10 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xf0], 0
0x8049a41:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x8049a45:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x8049a49:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049a4d:   83 c0 1d                        	add eax, 0x1d
0x8049a50:   0f b6 d0                        	movzx edx, al
0x8049a53:   0f b7 85 16 ff ff ff            	movzx eax, word ptr [ebp - 0xea]
0x8049a5a:   0f b6 c0                        	movzx eax, al
0x8049a5d:   89 c1                           	mov ecx, eax
0x8049a5f:   d3 fa                           	sar edx, cl
0x8049a61:   89 d0                           	mov eax, edx
0x8049a63:   23 45 9c                        	and eax, dword ptr [ebp - 0x64]
0x8049a66:   89 c2                           	mov edx, eax
0x8049a68:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049a6b:   31 d0                           	xor eax, edx
0x8049a6d:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049a70:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x8049a74:   0f bf 45 e2                     	movsx eax, word ptr [ebp - 0x1e]
0x8049a78:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x8049a7b:   0f 95 c0                        	setne al
0x8049a7e:   0f b6 c0                        	movzx eax, al
0x8049a81:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x8049a84:   0f 9f c0                        	setg al
0x8049a87:   0f b6 c0                        	movzx eax, al
0x8049a8a:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049a8d:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049a90:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049a93:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049a96:   84 c0                           	test al, al
0x8049a98:   78 38                           	js 0x8049ad2 <func_1+0x2e3>
0x8049a9a:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x8049aa0:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x8049aa3:   b8 01 00 00 00                  	mov eax, 1
0x8049aa8:   89 c2                           	mov edx, eax
0x8049aaa:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049aad:   89 c1                           	mov ecx, eax
0x8049aaf:   89 d0                           	mov eax, edx
0x8049ab1:   ba 00 00 00 00                  	mov edx, 0
0x8049ab6:   66 f7 f1                        	div cx
0x8049ab9:   89 d0                           	mov eax, edx
0x8049abb:   3c fb                           	cmp al, 0xfb
0x8049abd:   0f 95 c0                        	setne al
0x8049ac0:   0f b6 c0                        	movzx eax, al
0x8049ac3:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x8049ac7:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049acb:   0b 45 a0                        	or eax, dword ptr [ebp - 0x60]
0x8049ace:   85 c0                           	test eax, eax
0x8049ad0:   74 07                           	je 0x8049ad9 <func_1+0x2ea>
0x8049ad2:   b8 01 00 00 00                  	mov eax, 1
0x8049ad7:   eb 05                           	jmp 0x8049ade <func_1+0x2ef>
0x8049ad9:   b8 00 00 00 00                  	mov eax, 0
0x8049ade:   88 45 f1                        	mov byte ptr [ebp - 0xf], al
0x8049ae1:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049ae5:   83 e8 01                        	sub eax, 1
0x8049ae8:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x8049aec:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x8049af0:   75 10                           	jne 0x8049b02 <func_1+0x313>
0x8049af2:   83 6d a0 01                     	sub dword ptr [ebp - 0x60], 1
0x8049af6:   83 7d a0 e8                     	cmp dword ptr [ebp - 0x60], -0x18
0x8049afa:   0f 8d 2e ff ff ff               	jge 0x8049a2e <func_1+0x23f>
0x8049b00:   eb 01                           	jmp 0x8049b03 <func_1+0x314>
0x8049b02:   90                              	nop 
0x8049b03:   8b 55 9c                        	mov edx, dword ptr [ebp - 0x64]
0x8049b06:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049b09:   8d 48 ff                        	lea ecx, [eax - 1]
0x8049b0c:   89 4d d0                        	mov dword ptr [ebp - 0x30], ecx
0x8049b0f:   83 e8 01                        	sub eax, 1
0x8049b12:   0f b6 c0                        	movzx eax, al
0x8049b15:   01 c0                           	add eax, eax
0x8049b17:   85 c0                           	test eax, eax
0x8049b19:   74 0d                           	je 0x8049b28 <func_1+0x339>
0x8049b1b:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x8049b1f:   74 07                           	je 0x8049b28 <func_1+0x339>
0x8049b21:   b9 01 00 00 00                  	mov ecx, 1
0x8049b26:   eb 05                           	jmp 0x8049b2d <func_1+0x33e>
0x8049b28:   b9 00 00 00 00                  	mov ecx, 0
0x8049b2d:   89 d0                           	mov eax, edx
0x8049b2f:   99                              	cdq 
0x8049b30:   f7 f9                           	idiv ecx
0x8049b32:   0f b7 d0                        	movzx edx, ax
0x8049b35:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049b38:   0f b7 c0                        	movzx eax, ax
0x8049b3b:   01 d0                           	add eax, edx
0x8049b3d:   83 f0 fc                        	xor eax, 0xfffffffc
0x8049b40:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049b43:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x8049b47:   83 c0 01                        	add eax, 1
0x8049b4a:   66 89 45 ce                     	mov word ptr [ebp - 0x32], ax
0x8049b4e:   83 6d d4 02                     	sub dword ptr [ebp - 0x2c], 2
0x8049b52:   83 7d d4 e5                     	cmp dword ptr [ebp - 0x2c], -0x1b
0x8049b56:   0f 84 97 fe ff ff               	je 0x80499f3 <func_1+0x204>
0x8049b5c:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x8049b60:   0f 84 45 01 00 00               	je 0x8049cab <func_1+0x4bc>
0x8049b66:   c7 85 2c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xd4], 1
0x8049b70:   80 7d f1 00                     	cmp byte ptr [ebp - 0xf], 0
0x8049b74:   74 1b                           	je 0x8049b91 <func_1+0x3a2>
0x8049b76:   83 bd 2c ff ff ff 00            	cmp dword ptr [ebp - 0xd4], 0
0x8049b7d:   0f 85 9e 03 00 00               	jne 0x8049f21 <func_1+0x732>
0x8049b83:   80 bd 7a ff ff ff 00            	cmp byte ptr [ebp - 0x86], 0
0x8049b8a:   74 1e                           	je 0x8049baa <func_1+0x3bb>
0x8049b8c:   e9 91 03 00 00                  	jmp 0x8049f22 <func_1+0x733>
0x8049b91:   c7 85 28 ff ff ff 75 3b ca b7   	mov dword ptr [ebp - 0xd8], 0xb7ca3b75
0x8049b9b:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049b9e:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049ba1:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049ba4:   89 85 28 ff ff ff               	mov dword ptr [ebp - 0xd8], eax
0x8049baa:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049bad:   98                              	cwde 
0x8049bae:   f7 d8                           	neg eax
0x8049bb0:   31 45 8c                        	xor dword ptr [ebp - 0x74], eax
0x8049bb3:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049bb6:   89 c1                           	mov ecx, eax
0x8049bb8:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049bbb:   89 c2                           	mov edx, eax
0x8049bbd:   0f b6 c1                        	movzx eax, cl
0x8049bc0:   f6 f2                           	div dl
0x8049bc2:   0f b6 c4                        	movzx eax, ah
0x8049bc5:   84 c0                           	test al, al
0x8049bc7:   83 bd 2c ff ff ff 00            	cmp dword ptr [ebp - 0xd4], 0
0x8049bce:   c7 45 d4 01 00 00 00            	mov dword ptr [ebp - 0x2c], 1
0x8049bd5:   66 c7 45 f2 00 00               	mov word ptr [ebp - 0xe], 0
0x8049bdb:   66 83 7d f2 1d                  	cmp word ptr [ebp - 0xe], 0x1d
0x8049be0:   0f 85 29 03 00 00               	jne 0x8049f0f <func_1+0x720>
0x8049be6:   0f be 85 73 ff ff ff            	movsx eax, byte ptr [ebp - 0x8d]
0x8049bed:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x8049bf1:   0f b7 7d ca                     	movzx edi, word ptr [ebp - 0x36]
0x8049bf5:   0f b6 75 cc                     	movzx esi, byte ptr [ebp - 0x34]
0x8049bf9:   89 b5 e0 fe ff ff               	mov dword ptr [ebp - 0x120], esi
0x8049bff:   0f be 5d cd                     	movsx ebx, byte ptr [ebp - 0x33]
0x8049c03:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x8049c09:   0f b7 4d ce                     	movzx ecx, word ptr [ebp - 0x32]
0x8049c0d:   89 8d d8 fe ff ff               	mov dword ptr [ebp - 0x128], ecx
0x8049c13:   0f be b5 7a ff ff ff            	movsx esi, byte ptr [ebp - 0x86]
0x8049c1a:   89 b5 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], esi
0x8049c20:   0f be 9d 7b ff ff ff            	movsx ebx, byte ptr [ebp - 0x85]
0x8049c27:   89 9d d0 fe ff ff               	mov dword ptr [ebp - 0x130], ebx
0x8049c2d:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x8049c31:   89 8d cc fe ff ff               	mov dword ptr [ebp - 0x134], ecx
0x8049c37:   0f be 75 f1                     	movsx esi, byte ptr [ebp - 0xf]
0x8049c3b:   0f b7 5d f2                     	movzx ebx, word ptr [ebp - 0xe]
0x8049c3f:   0f bf 4d e2                     	movsx ecx, word ptr [ebp - 0x1e]
0x8049c43:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049c46:   50                              	push eax
0x8049c47:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049c4a:   52                              	push edx
0x8049c4b:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049c4e:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049c54:   57                              	push edi
0x8049c55:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x8049c5b:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x8049c61:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x8049c67:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x8049c6d:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x8049c73:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049c76:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049c79:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x8049c7f:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049c85:   56                              	push esi
0x8049c86:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049c89:   53                              	push ebx
0x8049c8a:   51                              	push ecx
0x8049c8b:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049c8e:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049c91:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049c94:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049c97:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049c9a:   e8 b5 f9 ff ff                  	call 0x8049654 <set_var>
0x8049c9f:   83 c4 64                        	add esp, 0x64
0x8049ca2:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049ca6:   e9 6b 0b 00 00                  	jmp 0x804a816 <func_1+0x1027>
0x8049cab:   c7 85 44 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xbc], 0
0x8049cb5:   c7 85 40 ff ff ff f9 ff ff ff   	mov dword ptr [ebp - 0xc0], 0xfffffff9
0x8049cbf:   c6 85 3f ff ff ff 67            	mov byte ptr [ebp - 0xc1], 0x67
0x8049cc6:   80 7d f1 00                     	cmp byte ptr [ebp - 0xf], 0
0x8049cca:   75 09                           	jne 0x8049cd5 <func_1+0x4e6>
0x8049ccc:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x8049cd3:   74 5f                           	je 0x8049d34 <func_1+0x545>
0x8049cd5:   81 7d 9c d0 72 6d bd            	cmp dword ptr [ebp - 0x64], 0xbd6d72d0
0x8049cdc:   77 07                           	ja 0x8049ce5 <func_1+0x4f6>
0x8049cde:   b8 f3 ff ff ff                  	mov eax, 0xfffffff3
0x8049ce3:   eb 05                           	jmp 0x8049cea <func_1+0x4fb>
0x8049ce5:   b8 f2 ff ff ff                  	mov eax, 0xfffffff2
0x8049cea:   88 45 cd                        	mov byte ptr [ebp - 0x33], al
0x8049ced:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x8049cf3:   0f b7 d0                        	movzx edx, ax
0x8049cf6:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049cf9:   0f b7 c0                        	movzx eax, ax
0x8049cfc:   0f af c2                        	imul eax, edx
0x8049cff:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049d02:   8b 4d 8c                        	mov ecx, dword ptr [ebp - 0x74]
0x8049d05:   83 f9 fe                        	cmp ecx, -2
0x8049d08:   0f 93 c0                        	setae al
0x8049d0b:   0f b6 d0                        	movzx edx, al
0x8049d0e:   b8 00 00 00 00                  	mov eax, 0
0x8049d13:   29 d0                           	sub eax, edx
0x8049d15:   01 c0                           	add eax, eax
0x8049d17:   29 c1                           	sub ecx, eax
0x8049d19:   89 ca                           	mov edx, ecx
0x8049d1b:   81 fa d9 f0 00 00               	cmp edx, 0xf0d9
0x8049d21:   0f 96 c0                        	setbe al
0x8049d24:   0f b6 c0                        	movzx eax, al
0x8049d27:   f7 d0                           	not eax
0x8049d29:   0b 45 ec                        	or eax, dword ptr [ebp - 0x14]
0x8049d2c:   89 c2                           	mov edx, eax
0x8049d2e:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x8049d32:   39 c2                           	cmp edx, eax
0x8049d34:   0f be 85 7a ff ff ff            	movsx eax, byte ptr [ebp - 0x86]
0x8049d3b:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x8049d3f:   75 06                           	jne 0x8049d47 <func_1+0x558>
0x8049d41:   80 7d cd 00                     	cmp byte ptr [ebp - 0x33], 0
0x8049d45:   74 07                           	je 0x8049d4e <func_1+0x55f>
0x8049d47:   ba 01 00 00 00                  	mov edx, 1
0x8049d4c:   eb 05                           	jmp 0x8049d53 <func_1+0x564>
0x8049d4e:   ba 00 00 00 00                  	mov edx, 0
0x8049d53:   39 c2                           	cmp edx, eax
0x8049d55:   c7 45 d4 74 11 39 c4            	mov dword ptr [ebp - 0x2c], 0xc4391174
0x8049d5c:   c6 45 cc 00                     	mov byte ptr [ebp - 0x34], 0
0x8049d60:   e9 51 01 00 00                  	jmp 0x8049eb6 <func_1+0x6c7>
0x8049d65:   66 c7 85 3c ff ff ff 0f 54      	mov word ptr [ebp - 0xc4], 0x540f
0x8049d6e:   c7 85 38 ff ff ff 84 92 d8 95   	mov dword ptr [ebp - 0xc8], 0x95d89284
0x8049d78:   80 bd 7b ff ff ff 00            	cmp byte ptr [ebp - 0x85], 0
0x8049d7f:   74 0e                           	je 0x8049d8f <func_1+0x5a0>
0x8049d81:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049d84:   23 45 ec                        	and eax, dword ptr [ebp - 0x14]
0x8049d87:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049d8a:   e9 fe 00 00 00                  	jmp 0x8049e8d <func_1+0x69e>
0x8049d8f:   c7 85 34 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xcc], 1
0x8049d99:   c7 85 30 ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xd0], 0xfffffffc
0x8049da3:   0f b6 55 cc                     	movzx edx, byte ptr [ebp - 0x34]
0x8049da7:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049daa:   8d b0 74 7e c9 f2               	lea esi, [eax - 0xd36818c]
0x8049db0:   66 83 6d ca 01                  	sub word ptr [ebp - 0x36], 1
0x8049db5:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x8049db9:   0f b6 d8                        	movzx ebx, al
0x8049dbc:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x8049dc0:   89 c1                           	mov ecx, eax
0x8049dc2:   d3 e3                           	shl ebx, cl
0x8049dc4:   89 d8                           	mov eax, ebx
0x8049dc6:   39 c6                           	cmp esi, eax
0x8049dc8:   0f 93 c0                        	setae al
0x8049dcb:   0f b6 c0                        	movzx eax, al
0x8049dce:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x8049dd2:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x8049dd6:   0f be 85 7b ff ff ff            	movsx eax, byte ptr [ebp - 0x85]
0x8049ddd:   21 c8                           	and eax, ecx
0x8049ddf:   39 c2                           	cmp edx, eax
0x8049de1:   0f 9c c0                        	setl al
0x8049de4:   0f b6 c0                        	movzx eax, al
0x8049de7:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x8049dea:   0f 94 c0                        	sete al
0x8049ded:   0f b6 c0                        	movzx eax, al
0x8049df0:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049df3:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049df6:   0f b6 c0                        	movzx eax, al
0x8049df9:   c1 e0 05                        	shl eax, 5
0x8049dfc:   33 85 7c ff ff ff               	xor eax, dword ptr [ebp - 0x84]
0x8049e02:   89 c2                           	mov edx, eax
0x8049e04:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049e07:   29 c2                           	sub edx, eax
0x8049e09:   89 d0                           	mov eax, edx
0x8049e0b:   3d 12 ba 00 00                  	cmp eax, 0xba12
0x8049e10:   0f 9f c0                        	setg al
0x8049e13:   0f b6 c0                        	movzx eax, al
0x8049e16:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049e19:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049e1c:   89 c2                           	mov edx, eax
0x8049e1e:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049e21:   29 c2                           	sub edx, eax
0x8049e23:   89 d0                           	mov eax, edx
0x8049e25:   0f bf d0                        	movsx edx, ax
0x8049e28:   69 d2 a9 19 00 00               	imul edx, edx, 0x19a9
0x8049e2e:   c1 ea 10                        	shr edx, 0x10
0x8049e31:   66 c1 fa 08                     	sar dx, 8
0x8049e35:   66 c1 f8 0f                     	sar ax, 0xf
0x8049e39:   29 d0                           	sub eax, edx
0x8049e3b:   98                              	cwde 
0x8049e3c:   0f be 4d cd                     	movsx ecx, byte ptr [ebp - 0x33]
0x8049e40:   99                              	cdq 
0x8049e41:   f7 f9                           	idiv ecx
0x8049e43:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x8049e47:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049e4a:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049e4d:   66 89 45 96                     	mov word ptr [ebp - 0x6a], ax
0x8049e51:   89 d0                           	mov eax, edx
0x8049e53:   30 45 f1                        	xor byte ptr [ebp - 0xf], al
0x8049e56:   66 0f be 45 f1                  	movsx ax, byte ptr [ebp - 0xf]
0x8049e5b:   66 39 45 96                     	cmp word ptr [ebp - 0x6a], ax
0x8049e5f:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049e62:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049e65:   83 bd 4c ff ff ff 01            	cmp dword ptr [ebp - 0xb4], 1
0x8049e6c:   c7 85 34 ff ff ff b1 38 00 00   	mov dword ptr [ebp - 0xcc], 0x38b1
0x8049e76:   0f b7 85 3c ff ff ff            	movzx eax, word ptr [ebp - 0xc4]
0x8049e7d:   83 c0 01                        	add eax, 1
0x8049e80:   66 89 85 3c ff ff ff            	mov word ptr [ebp - 0xc4], ax
0x8049e87:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x8049e8b:   75 35                           	jne 0x8049ec2 <func_1+0x6d3>
0x8049e8d:   66 c7 45 e2 09 00               	mov word ptr [ebp - 0x1e], 9
0x8049e93:   eb 16                           	jmp 0x8049eab <func_1+0x6bc>
0x8049e95:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x8049e99:   83 e8 01                        	sub eax, 1
0x8049e9c:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x8049ea0:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x8049ea4:   83 e8 01                        	sub eax, 1
0x8049ea7:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x8049eab:   66 83 7d e2 00                  	cmp word ptr [ebp - 0x1e], 0
0x8049eb0:   78 e3                           	js 0x8049e95 <func_1+0x6a6>
0x8049eb2:   80 45 cc 01                     	add byte ptr [ebp - 0x34], 1
0x8049eb6:   80 7d cc 16                     	cmp byte ptr [ebp - 0x34], 0x16
0x8049eba:   0f 87 a5 fe ff ff               	ja 0x8049d65 <func_1+0x576>
0x8049ec0:   eb 01                           	jmp 0x8049ec3 <func_1+0x6d4>
0x8049ec2:   90                              	nop 
0x8049ec3:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x8049ec7:   08 45 cc                        	or byte ptr [ebp - 0x34], al
0x8049eca:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x8049ece:   8b 95 44 ff ff ff               	mov edx, dword ptr [ebp - 0xbc]
0x8049ed4:   0f bf d2                        	movsx edx, dx
0x8049ed7:   f7 da                           	neg edx
0x8049ed9:   39 d0                           	cmp eax, edx
0x8049edb:   0f 9c c0                        	setl al
0x8049ede:   0f b6 c0                        	movzx eax, al
0x8049ee1:   99                              	cdq 
0x8049ee2:   f7 bd 6c ff ff ff               	idiv dword ptr [ebp - 0x94]
0x8049ee8:   0f b6 85 3f ff ff ff            	movzx eax, byte ptr [ebp - 0xc1]
0x8049eef:   39 c2                           	cmp edx, eax
0x8049ef1:   0f 9e c0                        	setle al
0x8049ef4:   0f b6 d0                        	movzx edx, al
0x8049ef7:   0f be 45 f1                     	movsx eax, byte ptr [ebp - 0xf]
0x8049efb:   09 d0                           	or eax, edx
0x8049efd:   3d 24 6a 00 00                  	cmp eax, 0x6a24
0x8049f02:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x8049f08:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049f0b:   83 45 bc 01                     	add dword ptr [ebp - 0x44], 1
0x8049f0f:   66 83 45 b6 05                  	add word ptr [ebp - 0x4a], 5
0x8049f14:   66 83 7d b6 14                  	cmp word ptr [ebp - 0x4a], 0x14
0x8049f19:   0f 85 66 fa ff ff               	jne 0x8049985 <func_1+0x196>
0x8049f1f:   eb 01                           	jmp 0x8049f22 <func_1+0x733>
0x8049f21:   90                              	nop 
0x8049f22:   c7 45 98 00 00 00 00            	mov dword ptr [ebp - 0x68], 0
0x8049f29:   e9 c9 05 00 00                  	jmp 0x804a4f7 <func_1+0xd08>
0x8049f2e:   c6 85 0c ff ff ff ff            	mov byte ptr [ebp - 0xf4], 0xff
0x8049f35:   c7 85 08 ff ff ff f9 ff ff ff   	mov dword ptr [ebp - 0xf8], 0xfffffff9
0x8049f3f:   c7 45 88 ac a5 57 92            	mov dword ptr [ebp - 0x78], 0x9257a5ac
0x8049f46:   66 c7 85 06 ff ff ff e4 c3      	mov word ptr [ebp - 0xfa], 0xc3e4
0x8049f4f:   c6 85 05 ff ff ff 00            	mov byte ptr [ebp - 0xfb], 0
0x8049f56:   0f bf 55 96                     	movsx edx, word ptr [ebp - 0x6a]
0x8049f5a:   0f bf 45 96                     	movsx eax, word ptr [ebp - 0x6a]
0x8049f5e:   0b 45 9c                        	or eax, dword ptr [ebp - 0x64]
0x8049f61:   89 c1                           	mov ecx, eax
0x8049f63:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049f66:   39 c1                           	cmp ecx, eax
0x8049f68:   72 07                           	jb 0x8049f71 <func_1+0x782>
0x8049f6a:   bb bf ff ff ff                  	mov ebx, 0xffffffbf
0x8049f6f:   eb 05                           	jmp 0x8049f76 <func_1+0x787>
0x8049f71:   bb c0 ff ff ff                  	mov ebx, 0xffffffc0
0x8049f76:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049f79:   0f be c0                        	movsx eax, al
0x8049f7c:   89 c1                           	mov ecx, eax
0x8049f7e:   d3 e3                           	shl ebx, cl
0x8049f80:   89 d9                           	mov ecx, ebx
0x8049f82:   0f be 45 f1                     	movsx eax, byte ptr [ebp - 0xf]
0x8049f86:   39 c1                           	cmp ecx, eax
0x8049f88:   0f 94 c0                        	sete al
0x8049f8b:   0f b6 d8                        	movzx ebx, al
0x8049f8e:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049f91:   0f b7 c0                        	movzx eax, ax
0x8049f94:   89 c1                           	mov ecx, eax
0x8049f96:   d3 e3                           	shl ebx, cl
0x8049f98:   89 d8                           	mov eax, ebx
0x8049f9a:   3d b7 00 00 00                  	cmp eax, 0xb7
0x8049f9f:   0f 95 c0                        	setne al
0x8049fa2:   0f b6 c0                        	movzx eax, al
0x8049fa5:   39 45 bc                        	cmp dword ptr [ebp - 0x44], eax
0x8049fa8:   0f 96 c0                        	setbe al
0x8049fab:   0f b6 c8                        	movzx ecx, al
0x8049fae:   0f be 45 cd                     	movsx eax, byte ptr [ebp - 0x33]
0x8049fb2:   39 c1                           	cmp ecx, eax
0x8049fb4:   0f 9e c0                        	setle al
0x8049fb7:   0f b6 c0                        	movzx eax, al
0x8049fba:   39 c2                           	cmp edx, eax
0x8049fbc:   0f 94 c0                        	sete al
0x8049fbf:   0f b6 c0                        	movzx eax, al
0x8049fc2:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049fc5:   0f 92 c0                        	setb al
0x8049fc8:   0f b6 c0                        	movzx eax, al
0x8049fcb:   09 45 90                        	or dword ptr [ebp - 0x70], eax
0x8049fce:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049fd1:   3b 45 e4                        	cmp eax, dword ptr [ebp - 0x1c]
0x8049fd4:   80 45 cc 01                     	add byte ptr [ebp - 0x34], 1
0x8049fd8:   c6 85 04 ff ff ff 01            	mov byte ptr [ebp - 0xfc], 1
0x8049fdf:   c7 85 00 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x100], 0
0x8049fe9:   c7 85 fc fe ff ff 2b 91 75 85   	mov dword ptr [ebp - 0x104], 0x8575912b
0x8049ff3:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049ff6:   3b 85 7c ff ff ff               	cmp eax, dword ptr [ebp - 0x84]
0x8049ffc:   74 4b                           	je 0x804a049 <func_1+0x85a>
0x8049ffe:   0f b7 95 5a ff ff ff            	movzx edx, word ptr [ebp - 0xa6]
0x804a005:   81 bd 54 ff ff ff c0 00 00 00   	cmp dword ptr [ebp - 0xac], 0xc0
0x804a00f:   0f 96 c0                        	setbe al
0x804a012:   0f b6 c0                        	movzx eax, al
0x804a015:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x804a01b:   83 7d dc 01                     	cmp dword ptr [ebp - 0x24], 1
0x804a01f:   75 09                           	jne 0x804a02a <func_1+0x83b>
0x804a021:   83 bd 08 ff ff ff 00            	cmp dword ptr [ebp - 0xf8], 0
0x804a028:   74 07                           	je 0x804a031 <func_1+0x842>
0x804a02a:   b9 01 00 00 00                  	mov ecx, 1
0x804a02f:   eb 05                           	jmp 0x804a036 <func_1+0x847>
0x804a031:   b9 00 00 00 00                  	mov ecx, 0
0x804a036:   0f be 85 7b ff ff ff            	movsx eax, byte ptr [ebp - 0x85]
0x804a03d:   39 c1                           	cmp ecx, eax
0x804a03f:   0f 9f c0                        	setg al
0x804a042:   0f b6 c0                        	movzx eax, al
0x804a045:   39 c2                           	cmp edx, eax
0x804a047:   7f 07                           	jg 0x804a050 <func_1+0x861>
0x804a049:   b8 01 00 00 00                  	mov eax, 1
0x804a04e:   eb 05                           	jmp 0x804a055 <func_1+0x866>
0x804a050:   b8 00 00 00 00                  	mov eax, 0
0x804a055:   0f be 8d 04 ff ff ff            	movsx ecx, byte ptr [ebp - 0xfc]
0x804a05c:   99                              	cdq 
0x804a05d:   f7 f9                           	idiv ecx
0x804a05f:   89 55 c4                        	mov dword ptr [ebp - 0x3c], edx
0x804a062:   83 45 b8 01                     	add dword ptr [ebp - 0x48], 1
0x804a066:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804a06a:   66 c1 f8 07                     	sar ax, 7
0x804a06e:   89 c2                           	mov edx, eax
0x804a070:   0f b6 85 0c ff ff ff            	movzx eax, byte ptr [ebp - 0xf4]
0x804a077:   31 d0                           	xor eax, edx
0x804a079:   89 c2                           	mov edx, eax
0x804a07b:   89 d0                           	mov eax, edx
0x804a07d:   01 c0                           	add eax, eax
0x804a07f:   01 d0                           	add eax, edx
0x804a081:   88 45 f1                        	mov byte ptr [ebp - 0xf], al
0x804a084:   80 bd 04 ff ff ff 00            	cmp byte ptr [ebp - 0xfc], 0
0x804a08b:   74 07                           	je 0x804a094 <func_1+0x8a5>
0x804a08d:   b8 01 00 00 00                  	mov eax, 1
0x804a092:   eb 05                           	jmp 0x804a099 <func_1+0x8aa>
0x804a094:   b8 00 00 00 00                  	mov eax, 0
0x804a099:   31 45 88                        	xor dword ptr [ebp - 0x78], eax
0x804a09c:   66 c7 45 ca f3 ff               	mov word ptr [ebp - 0x36], 0xfff3
0x804a0a2:   e9 41 04 00 00                  	jmp 0x804a4e8 <func_1+0xcf9>
0x804a0a7:   66 c7 85 fa fe ff ff 07 00      	mov word ptr [ebp - 0x106], 7
0x804a0b0:   66 c7 85 f8 fe ff ff 01 00      	mov word ptr [ebp - 0x108], 1
0x804a0b9:   c7 85 f4 fe ff ff 6e f5 e3 29   	mov dword ptr [ebp - 0x10c], 0x29e3f56e
0x804a0c3:   c6 85 f3 fe ff ff 48            	mov byte ptr [ebp - 0x10d], 0x48
0x804a0ca:   66 83 bd fa fe ff ff 00         	cmp word ptr [ebp - 0x106], 0
0x804a0d2:   74 1e                           	je 0x804a0f2 <func_1+0x903>
0x804a0d4:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a0da:   0f b6 c0                        	movzx eax, al
0x804a0dd:   c1 e0 06                        	shl eax, 6
0x804a0e0:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a0e3:   0f bf 85 fa fe ff ff            	movsx eax, word ptr [ebp - 0x106]
0x804a0ea:   21 45 b0                        	and dword ptr [ebp - 0x50], eax
0x804a0ed:   e9 6f 01 00 00                  	jmp 0x804a261 <func_1+0xa72>
0x804a0f2:   c6 85 f2 fe ff ff 01            	mov byte ptr [ebp - 0x10e], 1
0x804a0f9:   0f b7 55 ce                     	movzx edx, word ptr [ebp - 0x32]
0x804a0fd:   0f be 45 cd                     	movsx eax, byte ptr [ebp - 0x33]
0x804a101:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a104:   0f 9e c0                        	setle al
0x804a107:   0f b6 c0                        	movzx eax, al
0x804a10a:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x804a10e:   0f bf 45 e2                     	movsx eax, word ptr [ebp - 0x1e]
0x804a112:   83 e8 01                        	sub eax, 1
0x804a115:   39 c2                           	cmp edx, eax
0x804a117:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a11a:   98                              	cwde 
0x804a11b:   ba 2c 1d 00 00                  	mov edx, 0x1d2c
0x804a120:   89 c1                           	mov ecx, eax
0x804a122:   d3 fa                           	sar edx, cl
0x804a124:   89 d0                           	mov eax, edx
0x804a126:   0f be c0                        	movsx eax, al
0x804a129:   ba f7 ff ff ff                  	mov edx, 0xfffffff7
0x804a12e:   29 c2                           	sub edx, eax
0x804a130:   89 d0                           	mov eax, edx
0x804a132:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x804a135:   7f 07                           	jg 0x804a13e <func_1+0x94f>
0x804a137:   66 83 7d e2 00                  	cmp word ptr [ebp - 0x1e], 0
0x804a13c:   74 07                           	je 0x804a145 <func_1+0x956>
0x804a13e:   b8 01 00 00 00                  	mov eax, 1
0x804a143:   eb 05                           	jmp 0x804a14a <func_1+0x95b>
0x804a145:   b8 00 00 00 00                  	mov eax, 0
0x804a14a:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804a14d:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a150:   3d f9 00 00 00                  	cmp eax, 0xf9
0x804a155:   0f 97 c0                        	seta al
0x804a158:   0f b6 d0                        	movzx edx, al
0x804a15b:   0f b6 85 0c ff ff ff            	movzx eax, byte ptr [ebp - 0xf4]
0x804a162:   0f be c0                        	movsx eax, al
0x804a165:   89 c1                           	mov ecx, eax
0x804a167:   d3 e2                           	shl edx, cl
0x804a169:   89 d0                           	mov eax, edx
0x804a16b:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x804a171:   0f be 95 73 ff ff ff            	movsx edx, byte ptr [ebp - 0x8d]
0x804a178:   80 7d f1 00                     	cmp byte ptr [ebp - 0xf], 0
0x804a17c:   0f 94 c0                        	sete al
0x804a17f:   0f b6 c0                        	movzx eax, al
0x804a182:   0f af c2                        	imul eax, edx
0x804a185:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a188:   c7 45 d0 ef ff ff ff            	mov dword ptr [ebp - 0x30], 0xffffffef
0x804a18f:   83 7d d0 0e                     	cmp dword ptr [ebp - 0x30], 0xe
0x804a193:   0f 85 c8 00 00 00               	jne 0x804a261 <func_1+0xa72>
0x804a199:   0f be 85 73 ff ff ff            	movsx eax, byte ptr [ebp - 0x8d]
0x804a1a0:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x804a1a4:   0f b7 7d ca                     	movzx edi, word ptr [ebp - 0x36]
0x804a1a8:   0f b6 75 cc                     	movzx esi, byte ptr [ebp - 0x34]
0x804a1ac:   89 b5 e0 fe ff ff               	mov dword ptr [ebp - 0x120], esi
0x804a1b2:   0f be 5d cd                     	movsx ebx, byte ptr [ebp - 0x33]
0x804a1b6:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x804a1bc:   0f b7 4d ce                     	movzx ecx, word ptr [ebp - 0x32]
0x804a1c0:   89 8d d8 fe ff ff               	mov dword ptr [ebp - 0x128], ecx
0x804a1c6:   0f be b5 7a ff ff ff            	movsx esi, byte ptr [ebp - 0x86]
0x804a1cd:   89 b5 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], esi
0x804a1d3:   0f be 9d 7b ff ff ff            	movsx ebx, byte ptr [ebp - 0x85]
0x804a1da:   89 9d d0 fe ff ff               	mov dword ptr [ebp - 0x130], ebx
0x804a1e0:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x804a1e4:   89 8d cc fe ff ff               	mov dword ptr [ebp - 0x134], ecx
0x804a1ea:   0f be 75 f1                     	movsx esi, byte ptr [ebp - 0xf]
0x804a1ee:   0f b7 5d f2                     	movzx ebx, word ptr [ebp - 0xe]
0x804a1f2:   0f bf 4d e2                     	movsx ecx, word ptr [ebp - 0x1e]
0x804a1f6:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a1f9:   50                              	push eax
0x804a1fa:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a1fd:   52                              	push edx
0x804a1fe:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a201:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a207:   57                              	push edi
0x804a208:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a20e:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a214:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a21a:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a220:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a226:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a229:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a22c:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a232:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a238:   56                              	push esi
0x804a239:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a23c:   53                              	push ebx
0x804a23d:   51                              	push ecx
0x804a23e:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a241:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a244:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a247:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a24a:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a24d:   e8 02 f4 ff ff                  	call 0x8049654 <set_var>
0x804a252:   83 c4 64                        	add esp, 0x64
0x804a255:   0f b6 85 f2 fe ff ff            	movzx eax, byte ptr [ebp - 0x10e]
0x804a25c:   e9 b5 05 00 00                  	jmp 0x804a816 <func_1+0x1027>
0x804a261:   66 81 bd 06 ff ff ff 91 00      	cmp word ptr [ebp - 0xfa], 0x91
0x804a26a:   74 22                           	je 0x804a28e <func_1+0xa9f>
0x804a26c:   0f b7 85 fa fe ff ff            	movzx eax, word ptr [ebp - 0x106]
0x804a273:   89 c2                           	mov edx, eax
0x804a275:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x804a279:   0f 9f c0                        	setg al
0x804a27c:   31 d0                           	xor eax, edx
0x804a27e:   20 45 f1                        	and byte ptr [ebp - 0xf], al
0x804a281:   80 7d f1 00                     	cmp byte ptr [ebp - 0xf], 0
0x804a285:   74 07                           	je 0x804a28e <func_1+0xa9f>
0x804a287:   ba 01 00 00 00                  	mov edx, 1
0x804a28c:   eb 05                           	jmp 0x804a293 <func_1+0xaa4>
0x804a28e:   ba 00 00 00 00                  	mov edx, 0
0x804a293:   0f b7 85 f8 fe ff ff            	movzx eax, word ptr [ebp - 0x108]
0x804a29a:   39 c2                           	cmp edx, eax
0x804a29c:   0f 95 c0                        	setne al
0x804a29f:   0f b6 d0                        	movzx edx, al
0x804a2a2:   0f b7 85 fa fe ff ff            	movzx eax, word ptr [ebp - 0x106]
0x804a2a9:   0f b6 c0                        	movzx eax, al
0x804a2ac:   01 c2                           	add edx, eax
0x804a2ae:   0f bf 85 fa fe ff ff            	movsx eax, word ptr [ebp - 0x106]
0x804a2b5:   09 c2                           	or edx, eax
0x804a2b7:   0f bf 45 96                     	movsx eax, word ptr [ebp - 0x6a]
0x804a2bb:   09 c2                           	or edx, eax
0x804a2bd:   0f bf 85 fa fe ff ff            	movsx eax, word ptr [ebp - 0x106]
0x804a2c4:   31 d0                           	xor eax, edx
0x804a2c6:   31 45 88                        	xor dword ptr [ebp - 0x78], eax
0x804a2c9:   c7 45 9c 00 00 00 00            	mov dword ptr [ebp - 0x64], 0
0x804a2d0:   83 7d 9c 0c                     	cmp dword ptr [ebp - 0x64], 0xc
0x804a2d4:   0f 87 84 01 00 00               	ja 0x804a45e <func_1+0xc6f>
0x804a2da:   66 c7 85 f0 fe ff ff 4d fa      	mov word ptr [ebp - 0x110], 0xfa4d
0x804a2e3:   c6 85 ef fe ff ff 01            	mov byte ptr [ebp - 0x111], 1
0x804a2ea:   0f be 45 f1                     	movsx eax, byte ptr [ebp - 0xf]
0x804a2ee:   0f b7 95 f0 fe ff ff            	movzx edx, word ptr [ebp - 0x110]
0x804a2f5:   0f be fa                        	movsx edi, dl
0x804a2f8:   99                              	cdq 
0x804a2f9:   f7 ff                           	idiv edi
0x804a2fb:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x804a2fe:   0f 95 c0                        	setne al
0x804a301:   0f b6 c0                        	movzx eax, al
0x804a304:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x804a307:   0f 94 c0                        	sete al
0x804a30a:   0f b6 d0                        	movzx edx, al
0x804a30d:   0f bf 45 96                     	movsx eax, word ptr [ebp - 0x6a]
0x804a311:   39 c2                           	cmp edx, eax
0x804a313:   0f 94 c0                        	sete al
0x804a316:   0f b6 d0                        	movzx edx, al
0x804a319:   0f b7 85 f0 fe ff ff            	movzx eax, word ptr [ebp - 0x110]
0x804a320:   0f b6 c0                        	movzx eax, al
0x804a323:   0f af c2                        	imul eax, edx
0x804a326:   23 45 d0                        	and eax, dword ptr [ebp - 0x30]
0x804a329:   85 c0                           	test eax, eax
0x804a32b:   75 0a                           	jne 0x804a337 <func_1+0xb48>
0x804a32d:   66 83 bd f0 fe ff ff 00         	cmp word ptr [ebp - 0x110], 0
0x804a335:   74 07                           	je 0x804a33e <func_1+0xb4f>
0x804a337:   ba 01 00 00 00                  	mov edx, 1
0x804a33c:   eb 05                           	jmp 0x804a343 <func_1+0xb54>
0x804a33e:   ba 00 00 00 00                  	mov edx, 0
0x804a343:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x804a347:   39 c2                           	cmp edx, eax
0x804a349:   0f 9e c0                        	setle al
0x804a34c:   0f b6 d0                        	movzx edx, al
0x804a34f:   0f b7 85 f8 fe ff ff            	movzx eax, word ptr [ebp - 0x108]
0x804a356:   39 c2                           	cmp edx, eax
0x804a358:   7c 07                           	jl 0x804a361 <func_1+0xb72>
0x804a35a:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x804a35f:   eb 05                           	jmp 0x804a366 <func_1+0xb77>
0x804a361:   b8 00 00 00 00                  	mov eax, 0
0x804a366:   32 85 05 ff ff ff               	xor al, byte ptr [ebp - 0xfb]
0x804a36c:   66 98                           	cbw 
0x804a36e:   ba 00 00 00 00                  	mov edx, 0
0x804a373:   66 f7 b5 f8 fe ff ff            	div word ptr [ebp - 0x108]
0x804a37a:   0f b7 c0                        	movzx eax, ax
0x804a37d:   89 85 f4 fe ff ff               	mov dword ptr [ebp - 0x10c], eax
0x804a383:   c6 85 ee fe ff ff f6            	mov byte ptr [ebp - 0x112], 0xf6
0x804a38a:   83 4d a0 08                     	or dword ptr [ebp - 0x60], 8
0x804a38e:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a394:   88 85 ee fe ff ff               	mov byte ptr [ebp - 0x112], al
0x804a39a:   0f be 85 73 ff ff ff            	movsx eax, byte ptr [ebp - 0x8d]
0x804a3a1:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x804a3a5:   0f b7 7d ca                     	movzx edi, word ptr [ebp - 0x36]
0x804a3a9:   0f b6 75 cc                     	movzx esi, byte ptr [ebp - 0x34]
0x804a3ad:   89 b5 e0 fe ff ff               	mov dword ptr [ebp - 0x120], esi
0x804a3b3:   0f be 5d cd                     	movsx ebx, byte ptr [ebp - 0x33]
0x804a3b7:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x804a3bd:   0f b7 4d ce                     	movzx ecx, word ptr [ebp - 0x32]
0x804a3c1:   89 8d d8 fe ff ff               	mov dword ptr [ebp - 0x128], ecx
0x804a3c7:   0f be b5 7a ff ff ff            	movsx esi, byte ptr [ebp - 0x86]
0x804a3ce:   89 b5 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], esi
0x804a3d4:   0f be 9d 7b ff ff ff            	movsx ebx, byte ptr [ebp - 0x85]
0x804a3db:   89 9d d0 fe ff ff               	mov dword ptr [ebp - 0x130], ebx
0x804a3e1:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x804a3e5:   89 8d cc fe ff ff               	mov dword ptr [ebp - 0x134], ecx
0x804a3eb:   0f be 75 f1                     	movsx esi, byte ptr [ebp - 0xf]
0x804a3ef:   0f b7 5d f2                     	movzx ebx, word ptr [ebp - 0xe]
0x804a3f3:   0f bf 4d e2                     	movsx ecx, word ptr [ebp - 0x1e]
0x804a3f7:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a3fa:   50                              	push eax
0x804a3fb:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a3fe:   52                              	push edx
0x804a3ff:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a402:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a408:   57                              	push edi
0x804a409:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a40f:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a415:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a41b:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a421:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a427:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a42a:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a42d:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a433:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a439:   56                              	push esi
0x804a43a:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a43d:   53                              	push ebx
0x804a43e:   51                              	push ecx
0x804a43f:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a442:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a445:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a448:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a44b:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a44e:   e8 01 f2 ff ff                  	call 0x8049654 <set_var>
0x804a453:   83 c4 64                        	add esp, 0x64
0x804a456:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a459:   e9 b8 03 00 00                  	jmp 0x804a816 <func_1+0x1027>
0x804a45e:   80 45 cc 01                     	add byte ptr [ebp - 0x34], 1
0x804a462:   0f b6 4d cc                     	movzx ecx, byte ptr [ebp - 0x34]
0x804a466:   66 83 7d c2 00                  	cmp word ptr [ebp - 0x3e], 0
0x804a46b:   74 51                           	je 0x804a4be <func_1+0xccf>
0x804a46d:   c7 85 68 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x98], 0
0x804a477:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x804a47d:   0f be d0                        	movsx edx, al
0x804a480:   89 d0                           	mov eax, edx
0x804a482:   c1 e0 02                        	shl eax, 2
0x804a485:   01 d0                           	add eax, edx
0x804a487:   c1 e0 03                        	shl eax, 3
0x804a48a:   85 c0                           	test eax, eax
0x804a48c:   74 0a                           	je 0x804a498 <func_1+0xca9>
0x804a48e:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x804a492:   74 04                           	je 0x804a498 <func_1+0xca9>
0x804a494:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a498:   81 bd 08 ff ff ff 96 cf da 30   	cmp dword ptr [ebp - 0xf8], 0x30dacf96
0x804a4a2:   0f 97 c0                        	seta al
0x804a4a5:   0f b6 c0                        	movzx eax, al
0x804a4a8:   89 85 f4 fe ff ff               	mov dword ptr [ebp - 0x10c], eax
0x804a4ae:   83 bd f4 fe ff ff 00            	cmp dword ptr [ebp - 0x10c], 0
0x804a4b5:   74 07                           	je 0x804a4be <func_1+0xccf>
0x804a4b7:   b8 01 00 00 00                  	mov eax, 1
0x804a4bc:   eb 05                           	jmp 0x804a4c3 <func_1+0xcd4>
0x804a4be:   b8 00 00 00 00                  	mov eax, 0
0x804a4c3:   0f b6 c0                        	movzx eax, al
0x804a4c6:   29 c1                           	sub ecx, eax
0x804a4c8:   89 c8                           	mov eax, ecx
0x804a4ca:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a4cd:   0f 95 c0                        	setne al
0x804a4d0:   0f b6 c0                        	movzx eax, al
0x804a4d3:   30 85 f3 fe ff ff               	xor byte ptr [ebp - 0x10d], al
0x804a4d9:   0f be 85 f3 fe ff ff            	movsx eax, byte ptr [ebp - 0x10d]
0x804a4e0:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a4e3:   66 83 45 ca 05                  	add word ptr [ebp - 0x36], 5
0x804a4e8:   66 83 7d ca 3a                  	cmp word ptr [ebp - 0x36], 0x3a
0x804a4ed:   0f 87 b4 fb ff ff               	ja 0x804a0a7 <func_1+0x8b8>
0x804a4f3:   83 45 98 01                     	add dword ptr [ebp - 0x68], 1
0x804a4f7:   83 7d 98 03                     	cmp dword ptr [ebp - 0x68], 3
0x804a4fb:   0f 8e 2d fa ff ff               	jle 0x8049f2e <func_1+0x73f>
0x804a501:   e9 c4 00 00 00                  	jmp 0x804a5ca <func_1+0xddb>
0x804a506:   0f be 85 73 ff ff ff            	movsx eax, byte ptr [ebp - 0x8d]
0x804a50d:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x804a511:   0f b7 7d ca                     	movzx edi, word ptr [ebp - 0x36]
0x804a515:   0f b6 75 cc                     	movzx esi, byte ptr [ebp - 0x34]
0x804a519:   89 b5 e0 fe ff ff               	mov dword ptr [ebp - 0x120], esi
0x804a51f:   0f be 5d cd                     	movsx ebx, byte ptr [ebp - 0x33]
0x804a523:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x804a529:   0f b7 4d ce                     	movzx ecx, word ptr [ebp - 0x32]
0x804a52d:   89 8d d8 fe ff ff               	mov dword ptr [ebp - 0x128], ecx
0x804a533:   0f be b5 7a ff ff ff            	movsx esi, byte ptr [ebp - 0x86]
0x804a53a:   89 b5 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], esi
0x804a540:   0f be 9d 7b ff ff ff            	movsx ebx, byte ptr [ebp - 0x85]
0x804a547:   89 9d d0 fe ff ff               	mov dword ptr [ebp - 0x130], ebx
0x804a54d:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x804a551:   89 8d cc fe ff ff               	mov dword ptr [ebp - 0x134], ecx
0x804a557:   0f be 75 f1                     	movsx esi, byte ptr [ebp - 0xf]
0x804a55b:   0f b7 5d f2                     	movzx ebx, word ptr [ebp - 0xe]
0x804a55f:   0f bf 4d e2                     	movsx ecx, word ptr [ebp - 0x1e]
0x804a563:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a566:   50                              	push eax
0x804a567:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a56a:   52                              	push edx
0x804a56b:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a56e:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a574:   57                              	push edi
0x804a575:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a57b:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a581:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a587:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a58d:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a593:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a596:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a599:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a59f:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a5a5:   56                              	push esi
0x804a5a6:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a5a9:   53                              	push ebx
0x804a5aa:   51                              	push ecx
0x804a5ab:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a5ae:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a5b1:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a5b4:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a5b7:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a5ba:   e8 95 f0 ff ff                  	call 0x8049654 <set_var>
0x804a5bf:   83 c4 64                        	add esp, 0x64
0x804a5c2:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a5c5:   e9 4c 02 00 00                  	jmp 0x804a816 <func_1+0x1027>
0x804a5ca:   c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0x804a5d1:   e9 33 01 00 00                  	jmp 0x804a709 <func_1+0xf1a>
0x804a5d6:   66 c7 85 0e ff ff ff ff ff      	mov word ptr [ebp - 0xf2], 0xffff
0x804a5df:   66 83 bd 0e ff ff ff 00         	cmp word ptr [ebp - 0xf2], 0
0x804a5e7:   7f 0d                           	jg 0x804a5f6 <func_1+0xe07>
0x804a5e9:   80 7d f1 00                     	cmp byte ptr [ebp - 0xf], 0
0x804a5ed:   74 07                           	je 0x804a5f6 <func_1+0xe07>
0x804a5ef:   b8 01 00 00 00                  	mov eax, 1
0x804a5f4:   eb 05                           	jmp 0x804a5fb <func_1+0xe0c>
0x804a5f6:   b8 00 00 00 00                  	mov eax, 0
0x804a5fb:   66 89 45 ca                     	mov word ptr [ebp - 0x36], ax
0x804a5ff:   0f b7 55 ca                     	movzx edx, word ptr [ebp - 0x36]
0x804a603:   0f bf 85 0e ff ff ff            	movsx eax, word ptr [ebp - 0xf2]
0x804a60a:   39 c2                           	cmp edx, eax
0x804a60c:   0f 9d c0                        	setge al
0x804a60f:   0f b6 d0                        	movzx edx, al
0x804a612:   0f b7 85 0e ff ff ff            	movzx eax, word ptr [ebp - 0xf2]
0x804a619:   0f b6 c0                        	movzx eax, al
0x804a61c:   89 c1                           	mov ecx, eax
0x804a61e:   d3 e2                           	shl edx, cl
0x804a620:   89 d0                           	mov eax, edx
0x804a622:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a625:   c7 45 e4 fd ff ff ff            	mov dword ptr [ebp - 0x1c], 0xfffffffd
0x804a62c:   83 7d e4 f8                     	cmp dword ptr [ebp - 0x1c], -8
0x804a630:   0f 8d cf 00 00 00               	jge 0x804a705 <func_1+0xf16>
0x804a636:   c6 85 0d ff ff ff 87            	mov byte ptr [ebp - 0xf3], 0x87
0x804a63d:   0f be 85 73 ff ff ff            	movsx eax, byte ptr [ebp - 0x8d]
0x804a644:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x804a648:   0f b7 7d ca                     	movzx edi, word ptr [ebp - 0x36]
0x804a64c:   0f b6 75 cc                     	movzx esi, byte ptr [ebp - 0x34]
0x804a650:   89 b5 e0 fe ff ff               	mov dword ptr [ebp - 0x120], esi
0x804a656:   0f be 5d cd                     	movsx ebx, byte ptr [ebp - 0x33]
0x804a65a:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x804a660:   0f b7 4d ce                     	movzx ecx, word ptr [ebp - 0x32]
0x804a664:   89 8d d8 fe ff ff               	mov dword ptr [ebp - 0x128], ecx
0x804a66a:   0f be b5 7a ff ff ff            	movsx esi, byte ptr [ebp - 0x86]
0x804a671:   89 b5 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], esi
0x804a677:   0f be 9d 7b ff ff ff            	movsx ebx, byte ptr [ebp - 0x85]
0x804a67e:   89 9d d0 fe ff ff               	mov dword ptr [ebp - 0x130], ebx
0x804a684:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x804a688:   89 8d cc fe ff ff               	mov dword ptr [ebp - 0x134], ecx
0x804a68e:   0f be 75 f1                     	movsx esi, byte ptr [ebp - 0xf]
0x804a692:   0f b7 5d f2                     	movzx ebx, word ptr [ebp - 0xe]
0x804a696:   0f bf 4d e2                     	movsx ecx, word ptr [ebp - 0x1e]
0x804a69a:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a69d:   50                              	push eax
0x804a69e:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a6a1:   52                              	push edx
0x804a6a2:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a6a5:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a6ab:   57                              	push edi
0x804a6ac:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a6b2:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a6b8:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a6be:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a6c4:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a6ca:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a6cd:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a6d0:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a6d6:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a6dc:   56                              	push esi
0x804a6dd:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a6e0:   53                              	push ebx
0x804a6e1:   51                              	push ecx
0x804a6e2:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a6e5:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a6e8:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a6eb:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a6ee:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a6f1:   e8 5e ef ff ff                  	call 0x8049654 <set_var>
0x804a6f6:   83 c4 64                        	add esp, 0x64
0x804a6f9:   0f b6 85 0d ff ff ff            	movzx eax, byte ptr [ebp - 0xf3]
0x804a700:   e9 11 01 00 00                  	jmp 0x804a816 <func_1+0x1027>
0x804a705:   83 6d ac 01                     	sub dword ptr [ebp - 0x54], 1
0x804a709:   83 7d ac f0                     	cmp dword ptr [ebp - 0x54], -0x10
0x804a70d:   0f 8c c3 fe ff ff               	jl 0x804a5d6 <func_1+0xde7>
0x804a713:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a716:   89 c2                           	mov edx, eax
0x804a718:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a71e:   21 d0                           	and eax, edx
0x804a720:   0f be d8                        	movsx ebx, al
0x804a723:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a729:   89 c2                           	mov edx, eax
0x804a72b:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a72e:   09 d0                           	or eax, edx
0x804a730:   66 2b 45 f2                     	sub ax, word ptr [ebp - 0xe]
0x804a734:   66 c1 f8 07                     	sar ax, 7
0x804a738:   0f bf c8                        	movsx ecx, ax
0x804a73b:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a73e:   99                              	cdq 
0x804a73f:   f7 f9                           	idiv ecx
0x804a741:   89 d0                           	mov eax, edx
0x804a743:   0f be c0                        	movsx eax, al
0x804a746:   89 c1                           	mov ecx, eax
0x804a748:   d3 fb                           	sar ebx, cl
0x804a74a:   89 d8                           	mov eax, ebx
0x804a74c:   66 c1 e8 06                     	shr ax, 6
0x804a750:   0f b7 c0                        	movzx eax, ax
0x804a753:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a756:   0f be 85 73 ff ff ff            	movsx eax, byte ptr [ebp - 0x8d]
0x804a75d:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x804a761:   0f b7 7d ca                     	movzx edi, word ptr [ebp - 0x36]
0x804a765:   0f b6 75 cc                     	movzx esi, byte ptr [ebp - 0x34]
0x804a769:   89 b5 e0 fe ff ff               	mov dword ptr [ebp - 0x120], esi
0x804a76f:   0f be 5d cd                     	movsx ebx, byte ptr [ebp - 0x33]
0x804a773:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x804a779:   0f b7 4d ce                     	movzx ecx, word ptr [ebp - 0x32]
0x804a77d:   89 8d d8 fe ff ff               	mov dword ptr [ebp - 0x128], ecx
0x804a783:   0f be b5 7a ff ff ff            	movsx esi, byte ptr [ebp - 0x86]
0x804a78a:   89 b5 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], esi
0x804a790:   0f be 9d 7b ff ff ff            	movsx ebx, byte ptr [ebp - 0x85]
0x804a797:   89 9d d0 fe ff ff               	mov dword ptr [ebp - 0x130], ebx
0x804a79d:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x804a7a1:   89 8d cc fe ff ff               	mov dword ptr [ebp - 0x134], ecx
0x804a7a7:   0f be 75 f1                     	movsx esi, byte ptr [ebp - 0xf]
0x804a7ab:   0f b7 5d f2                     	movzx ebx, word ptr [ebp - 0xe]
0x804a7af:   0f bf 4d e2                     	movsx ecx, word ptr [ebp - 0x1e]
0x804a7b3:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a7b6:   50                              	push eax
0x804a7b7:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a7ba:   52                              	push edx
0x804a7bb:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a7be:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a7c4:   57                              	push edi
0x804a7c5:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a7cb:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a7d1:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a7d7:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a7dd:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a7e3:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a7e6:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a7e9:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a7ef:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a7f5:   56                              	push esi
0x804a7f6:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a7f9:   53                              	push ebx
0x804a7fa:   51                              	push ecx
0x804a7fb:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a7fe:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a801:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a804:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a807:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a80a:   e8 45 ee ff ff                  	call 0x8049654 <set_var>
0x804a80f:   83 c4 64                        	add esp, 0x64
0x804a812:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804a816:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a819:   5b                              	pop ebx
0x804a81a:   5e                              	pop esi
0x804a81b:   5f                              	pop edi
0x804a81c:   5d                              	pop ebp
0x804a81d:   c3                              	ret 
; function: main at 0x804a81e -- 0x804ab9c
0x804a81e:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a822:   83 e4 f0                        	and esp, 0xfffffff0
0x804a825:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a828:   55                              	push ebp
0x804a829:   89 e5                           	mov ebp, esp
0x804a82b:   53                              	push ebx
0x804a82c:   51                              	push ecx
0x804a82d:   83 ec 10                        	sub esp, 0x10
0x804a830:   e8 5b db ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a835:   81 c3 cb 27 00 00               	add ebx, 0x27cb
0x804a83b:   89 c8                           	mov eax, ecx
0x804a83d:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a844:   83 38 02                        	cmp dword ptr [eax], 2
0x804a847:   75 26                           	jne 0x804a86f <main+0x51>
0x804a849:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a84c:   83 c0 04                        	add eax, 4
0x804a84f:   8b 00                           	mov eax, dword ptr [eax]
0x804a851:   83 ec 08                        	sub esp, 8
0x804a854:   8d 93 8c dc ff ff               	lea edx, [ebx - 0x2374]
0x804a85a:   52                              	push edx
0x804a85b:   50                              	push eax
0x804a85c:   e8 9f da ff ff                  	call 0x8048300 <strcmp>
0x804a861:   83 c4 10                        	add esp, 0x10
0x804a864:   85 c0                           	test eax, eax
0x804a866:   75 07                           	jne 0x804a86f <main+0x51>
0x804a868:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a86f:   e8 e2 db ff ff                  	call 0x8048456 <platform_main_begin>
0x804a874:   e8 f2 eb ff ff                  	call 0x804946b <crc32_gentab>
0x804a879:   e8 71 ef ff ff                  	call 0x80497ef <func_1>
0x804a87e:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804a884:   89 c2                           	mov edx, eax
0x804a886:   83 ec 04                        	sub esp, 4
0x804a889:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a88c:   8d 83 8e dc ff ff               	lea eax, [ebx - 0x2372]
0x804a892:   50                              	push eax
0x804a893:   52                              	push edx
0x804a894:   e8 de ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a899:   83 c4 10                        	add esp, 0x10
0x804a89c:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a8a2:   83 ec 04                        	sub esp, 4
0x804a8a5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8a8:   8d 93 93 dc ff ff               	lea edx, [ebx - 0x236d]
0x804a8ae:   52                              	push edx
0x804a8af:   50                              	push eax
0x804a8b0:   e8 c2 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8b5:   83 c4 10                        	add esp, 0x10
0x804a8b8:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a8be:   89 c2                           	mov edx, eax
0x804a8c0:   83 ec 04                        	sub esp, 4
0x804a8c3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8c6:   8d 83 98 dc ff ff               	lea eax, [ebx - 0x2368]
0x804a8cc:   50                              	push eax
0x804a8cd:   52                              	push edx
0x804a8ce:   e8 a4 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8d3:   83 c4 10                        	add esp, 0x10
0x804a8d6:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804a8dc:   83 ec 04                        	sub esp, 4
0x804a8df:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8e2:   8d 93 9d dc ff ff               	lea edx, [ebx - 0x2363]
0x804a8e8:   52                              	push edx
0x804a8e9:   50                              	push eax
0x804a8ea:   e8 88 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8ef:   83 c4 10                        	add esp, 0x10
0x804a8f2:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a8f8:   89 c2                           	mov edx, eax
0x804a8fa:   83 ec 04                        	sub esp, 4
0x804a8fd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a900:   8d 83 a2 dc ff ff               	lea eax, [ebx - 0x235e]
0x804a906:   50                              	push eax
0x804a907:   52                              	push edx
0x804a908:   e8 6a ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a90d:   83 c4 10                        	add esp, 0x10
0x804a910:   0f b7 83 38 00 00 00            	movzx eax, word ptr [ebx + 0x38]
0x804a917:   98                              	cwde 
0x804a918:   83 ec 04                        	sub esp, 4
0x804a91b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a91e:   8d 93 a7 dc ff ff               	lea edx, [ebx - 0x2359]
0x804a924:   52                              	push edx
0x804a925:   50                              	push eax
0x804a926:   e8 4c ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a92b:   83 c4 10                        	add esp, 0x10
0x804a92e:   0f b7 83 3a 00 00 00            	movzx eax, word ptr [ebx + 0x3a]
0x804a935:   0f b7 c0                        	movzx eax, ax
0x804a938:   83 ec 04                        	sub esp, 4
0x804a93b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a93e:   8d 93 ac dc ff ff               	lea edx, [ebx - 0x2354]
0x804a944:   52                              	push edx
0x804a945:   50                              	push eax
0x804a946:   e8 2c ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a94b:   83 c4 10                        	add esp, 0x10
0x804a94e:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804a954:   83 ec 04                        	sub esp, 4
0x804a957:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a95a:   8d 93 b1 dc ff ff               	lea edx, [ebx - 0x234f]
0x804a960:   52                              	push edx
0x804a961:   50                              	push eax
0x804a962:   e8 10 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a967:   83 c4 10                        	add esp, 0x10
0x804a96a:   0f b6 83 40 00 00 00            	movzx eax, byte ptr [ebx + 0x40]
0x804a971:   0f be c0                        	movsx eax, al
0x804a974:   83 ec 04                        	sub esp, 4
0x804a977:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a97a:   8d 93 b6 dc ff ff               	lea edx, [ebx - 0x234a]
0x804a980:   52                              	push edx
0x804a981:   50                              	push eax
0x804a982:   e8 f0 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a987:   83 c4 10                        	add esp, 0x10
0x804a98a:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804a990:   89 c2                           	mov edx, eax
0x804a992:   83 ec 04                        	sub esp, 4
0x804a995:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a998:   8d 83 bb dc ff ff               	lea eax, [ebx - 0x2345]
0x804a99e:   50                              	push eax
0x804a99f:   52                              	push edx
0x804a9a0:   e8 d2 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9a5:   83 c4 10                        	add esp, 0x10
0x804a9a8:   0f b7 83 48 00 00 00            	movzx eax, word ptr [ebx + 0x48]
0x804a9af:   0f b7 c0                        	movzx eax, ax
0x804a9b2:   83 ec 04                        	sub esp, 4
0x804a9b5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9b8:   8d 93 c0 dc ff ff               	lea edx, [ebx - 0x2340]
0x804a9be:   52                              	push edx
0x804a9bf:   50                              	push eax
0x804a9c0:   e8 b2 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9c5:   83 c4 10                        	add esp, 0x10
0x804a9c8:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804a9ce:   89 c2                           	mov edx, eax
0x804a9d0:   83 ec 04                        	sub esp, 4
0x804a9d3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9d6:   8d 83 c5 dc ff ff               	lea eax, [ebx - 0x233b]
0x804a9dc:   50                              	push eax
0x804a9dd:   52                              	push edx
0x804a9de:   e8 94 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9e3:   83 c4 10                        	add esp, 0x10
0x804a9e6:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804a9ec:   83 ec 04                        	sub esp, 4
0x804a9ef:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9f2:   8d 93 ca dc ff ff               	lea edx, [ebx - 0x2336]
0x804a9f8:   52                              	push edx
0x804a9f9:   50                              	push eax
0x804a9fa:   e8 78 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9ff:   83 c4 10                        	add esp, 0x10
0x804aa02:   0f b6 83 54 00 00 00            	movzx eax, byte ptr [ebx + 0x54]
0x804aa09:   0f be c0                        	movsx eax, al
0x804aa0c:   83 ec 04                        	sub esp, 4
0x804aa0f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa12:   8d 93 cf dc ff ff               	lea edx, [ebx - 0x2331]
0x804aa18:   52                              	push edx
0x804aa19:   50                              	push eax
0x804aa1a:   e8 58 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa1f:   83 c4 10                        	add esp, 0x10
0x804aa22:   0f b6 83 55 00 00 00            	movzx eax, byte ptr [ebx + 0x55]
0x804aa29:   0f be c0                        	movsx eax, al
0x804aa2c:   83 ec 04                        	sub esp, 4
0x804aa2f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa32:   8d 93 d4 dc ff ff               	lea edx, [ebx - 0x232c]
0x804aa38:   52                              	push edx
0x804aa39:   50                              	push eax
0x804aa3a:   e8 38 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa3f:   83 c4 10                        	add esp, 0x10
0x804aa42:   0f b7 83 56 00 00 00            	movzx eax, word ptr [ebx + 0x56]
0x804aa49:   0f b7 c0                        	movzx eax, ax
0x804aa4c:   83 ec 04                        	sub esp, 4
0x804aa4f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa52:   8d 93 d9 dc ff ff               	lea edx, [ebx - 0x2327]
0x804aa58:   52                              	push edx
0x804aa59:   50                              	push eax
0x804aa5a:   e8 18 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa5f:   83 c4 10                        	add esp, 0x10
0x804aa62:   0f b6 83 58 00 00 00            	movzx eax, byte ptr [ebx + 0x58]
0x804aa69:   0f be c0                        	movsx eax, al
0x804aa6c:   83 ec 04                        	sub esp, 4
0x804aa6f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa72:   8d 93 de dc ff ff               	lea edx, [ebx - 0x2322]
0x804aa78:   52                              	push edx
0x804aa79:   50                              	push eax
0x804aa7a:   e8 f8 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa7f:   83 c4 10                        	add esp, 0x10
0x804aa82:   0f b6 83 59 00 00 00            	movzx eax, byte ptr [ebx + 0x59]
0x804aa89:   0f b6 c0                        	movzx eax, al
0x804aa8c:   83 ec 04                        	sub esp, 4
0x804aa8f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa92:   8d 93 e4 dc ff ff               	lea edx, [ebx - 0x231c]
0x804aa98:   52                              	push edx
0x804aa99:   50                              	push eax
0x804aa9a:   e8 d8 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa9f:   83 c4 10                        	add esp, 0x10
0x804aaa2:   0f b7 83 5a 00 00 00            	movzx eax, word ptr [ebx + 0x5a]
0x804aaa9:   0f b7 c0                        	movzx eax, ax
0x804aaac:   83 ec 04                        	sub esp, 4
0x804aaaf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aab2:   8d 93 ea dc ff ff               	lea edx, [ebx - 0x2316]
0x804aab8:   52                              	push edx
0x804aab9:   50                              	push eax
0x804aaba:   e8 b8 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aabf:   83 c4 10                        	add esp, 0x10
0x804aac2:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804aac8:   89 c2                           	mov edx, eax
0x804aaca:   83 ec 04                        	sub esp, 4
0x804aacd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aad0:   8d 83 f0 dc ff ff               	lea eax, [ebx - 0x2310]
0x804aad6:   50                              	push eax
0x804aad7:   52                              	push edx
0x804aad8:   e8 9a ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aadd:   83 c4 10                        	add esp, 0x10
0x804aae0:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804aae6:   89 c2                           	mov edx, eax
0x804aae8:   83 ec 04                        	sub esp, 4
0x804aaeb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaee:   8d 83 f6 dc ff ff               	lea eax, [ebx - 0x230a]
0x804aaf4:   50                              	push eax
0x804aaf5:   52                              	push edx
0x804aaf6:   e8 7c ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aafb:   83 c4 10                        	add esp, 0x10
0x804aafe:   0f b7 83 64 00 00 00            	movzx eax, word ptr [ebx + 0x64]
0x804ab05:   0f b7 c0                        	movzx eax, ax
0x804ab08:   83 ec 04                        	sub esp, 4
0x804ab0b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab0e:   8d 93 fc dc ff ff               	lea edx, [ebx - 0x2304]
0x804ab14:   52                              	push edx
0x804ab15:   50                              	push eax
0x804ab16:   e8 5c ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab1b:   83 c4 10                        	add esp, 0x10
0x804ab1e:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804ab24:   83 ec 04                        	sub esp, 4
0x804ab27:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab2a:   8d 93 02 dd ff ff               	lea edx, [ebx - 0x22fe]
0x804ab30:   52                              	push edx
0x804ab31:   50                              	push eax
0x804ab32:   e8 40 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab37:   83 c4 10                        	add esp, 0x10
0x804ab3a:   0f b6 83 6c 00 00 00            	movzx eax, byte ptr [ebx + 0x6c]
0x804ab41:   0f be c0                        	movsx eax, al
0x804ab44:   83 ec 04                        	sub esp, 4
0x804ab47:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab4a:   8d 93 08 dd ff ff               	lea edx, [ebx - 0x22f8]
0x804ab50:   52                              	push edx
0x804ab51:   50                              	push eax
0x804ab52:   e8 20 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab57:   83 c4 10                        	add esp, 0x10
0x804ab5a:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804ab60:   83 ec 04                        	sub esp, 4
0x804ab63:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab66:   8d 93 0e dd ff ff               	lea edx, [ebx - 0x22f2]
0x804ab6c:   52                              	push edx
0x804ab6d:   50                              	push eax
0x804ab6e:   e8 04 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab73:   83 c4 10                        	add esp, 0x10
0x804ab76:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ab7c:   f7 d0                           	not eax
0x804ab7e:   83 ec 08                        	sub esp, 8
0x804ab81:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab84:   50                              	push eax
0x804ab85:   e8 dc d8 ff ff                  	call 0x8048466 <platform_main_end>
0x804ab8a:   83 c4 10                        	add esp, 0x10
0x804ab8d:   b8 00 00 00 00                  	mov eax, 0
0x804ab92:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ab95:   59                              	pop ecx
0x804ab96:   5b                              	pop ebx
0x804ab97:   5d                              	pop ebp
0x804ab98:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ab9b:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ab9c -- 0x804aba0
0x804ab9c:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ab9f:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804aba0 -- 0x804aba4
0x804aba0:   8b 14 24                        	mov edx, dword ptr [esp]
0x804aba3:   c3                              	ret 
; data inside code section at 0x804aba4 -- 0x804abb0
0x804aba4:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: __libc_csu_init at 0x804abb0 -- 0x804ac0d
0x804abb0:   55                              	push ebp
0x804abb1:   57                              	push edi
0x804abb2:   56                              	push esi
0x804abb3:   53                              	push ebx
0x804abb4:   e8 d7 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804abb9:   81 c3 47 24 00 00               	add ebx, 0x2447
0x804abbf:   83 ec 0c                        	sub esp, 0xc
0x804abc2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804abc6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804abcc:   e8 fb d6 ff ff                  	call 0x80482cc <_init>
0x804abd1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804abd7:   29 c6                           	sub esi, eax
0x804abd9:   c1 fe 02                        	sar esi, 2
0x804abdc:   85 f6                           	test esi, esi
0x804abde:   74 25                           	je 0x804ac05 <__libc_csu_init+0x55>
0x804abe0:   31 ff                           	xor edi, edi
0x804abe2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804abe8:   83 ec 04                        	sub esp, 4
0x804abeb:   55                              	push ebp
0x804abec:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804abf0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804abf4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804abfb:   83 c7 01                        	add edi, 1
0x804abfe:   83 c4 10                        	add esp, 0x10
0x804ac01:   39 fe                           	cmp esi, edi
0x804ac03:   75 e3                           	jne 0x804abe8 <__libc_csu_init+0x38>
0x804ac05:   83 c4 0c                        	add esp, 0xc
0x804ac08:   5b                              	pop ebx
0x804ac09:   5e                              	pop esi
0x804ac0a:   5f                              	pop edi
0x804ac0b:   5d                              	pop ebp
0x804ac0c:   c3                              	ret 
; data inside code section at 0x804ac0d -- 0x804ac10
0x804ac0d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804ac10 -- 0x804ac12
0x804ac10:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804ac14 -- 0x804ac28
0x804ac14:   53                              	push ebx
0x804ac15:   83 ec 08                        	sub esp, 8
0x804ac18:   e8 73 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ac1d:   81 c3 e3 23 00 00               	add ebx, 0x23e3
0x804ac23:   83 c4 08                        	add esp, 8
0x804ac26:   5b                              	pop ebx
0x804ac27:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 2c ac 04 08  04 00 00 00 11 00 10 00   |....,...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804ac28:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804ac38:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804ac48:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804ac58:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804ac68:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ac78:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ac88:   25 64 0a 00 31 00 67 5f  31 31 00 67 5f 31 33 00   |%d..1.g_11.g_13.|
0x804ac98:   67 5f 31 39 00 67 5f 32  30 00 67 5f 32 31 00 67   |g_19.g_20.g_21.g|
0x804aca8:   5f 32 33 00 67 5f 34 37  00 67 5f 35 32 00 67 5f   |_23.g_47.g_52.g_|
0x804acb8:   36 31 00 67 5f 36 33 00  67 5f 36 34 00 67 5f 37   |61.g_63.g_64.g_7|
0x804acc8:   39 00 67 5f 38 30 00 67  5f 38 33 00 67 5f 38 34   |9.g_80.g_83.g_84|
0x804acd8:   00 67 5f 38 35 00 67 5f  31 32 30 00 67 5f 31 35   |.g_85.g_120.g_15|
0x804ace8:   33 00 67 5f 31 36 30 00  67 5f 31 39 33 00 67 5f   |3.g_160.g_193.g_|
0x804acf8:   31 39 35 00 67 5f 31 39  37 00 67 5f 32 30 37 00   |195.g_197.g_207.|
0x804ad08:   67 5f 32 33 33 00 67 5f  32 33 37 00 00 00 00 3f   |g_233.g_237....?|
0x804ad18:   ff ff ff 7e 00 00 80 0d  00 00 80 31 ff ff 7f 3f   |...~.......1...?|
0x804ad28:   00 00 00 27 00 00 80 71  ff ff ff 34 00 00 00 00   |...'...q...4....|
0x804ad38:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804ad48:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804ad58:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804ad68:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804ad78:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804ad80:   01 1b 03 3b c0 02 00 00  57 00 00 00 70 d5 ff ff   |...;....W...p...|
0x804ad90:   f0 02 00 00 b0 d5 ff ff  14 03 00 00 00 d6 ff ff   |................|
0x804ada0:   dc 02 00 00 d6 d6 ff ff  28 03 00 00 e6 d6 ff ff   |........(.......|
0x804adb0:   48 03 00 00 14 d7 ff ff  6c 03 00 00 32 d7 ff ff   |H.......l...2...|
0x804adc0:   8c 03 00 00 5a d7 ff ff  ac 03 00 00 84 d7 ff ff   |....Z...........|
0x804add0:   cc 03 00 00 ad d7 ff ff  ec 03 00 00 f0 d7 ff ff   |................|
0x804ade0:   0c 04 00 00 31 d8 ff ff  2c 04 00 00 89 d8 ff ff   |....1...,.......|
0x804adf0:   50 04 00 00 db d8 ff ff  74 04 00 00 18 d9 ff ff   |P.......t.......|
0x804ae00:   94 04 00 00 4f d9 ff ff  b4 04 00 00 6e d9 ff ff   |....O.......n...|
0x804ae10:   d4 04 00 00 98 d9 ff ff  f4 04 00 00 c4 d9 ff ff   |................|
0x804ae20:   14 05 00 00 ef d9 ff ff  34 05 00 00 38 da ff ff   |........4...8...|
0x804ae30:   54 05 00 00 7f da ff ff  74 05 00 00 d9 da ff ff   |T.......t.......|
0x804ae40:   98 05 00 00 2d db ff ff  bc 05 00 00 6c db ff ff   |....-.......l...|
0x804ae50:   dc 05 00 00 a5 db ff ff  fc 05 00 00 c7 db ff ff   |................|
0x804ae60:   1c 06 00 00 15 dc ff ff  3c 06 00 00 51 dc ff ff   |........<...Q...|
0x804ae70:   5c 06 00 00 da dc ff ff  7c 06 00 00 0c dd ff ff   |\.......|.......|
0x804ae80:   9c 06 00 00 3c dd ff ff  bc 06 00 00 81 dd ff ff   |....<...........|
0x804ae90:   dc 06 00 00 c0 dd ff ff  fc 06 00 00 f2 dd ff ff   |................|
0x804aea0:   1c 07 00 00 1e de ff ff  3c 07 00 00 3c de ff ff   |........<...<...|
0x804aeb0:   5c 07 00 00 64 de ff ff  7c 07 00 00 89 de ff ff   |\...d...|.......|
0x804aec0:   9c 07 00 00 ae de ff ff  bc 07 00 00 e5 de ff ff   |................|
0x804aed0:   dc 07 00 00 19 df ff ff  fc 07 00 00 6b df ff ff   |............k...|
0x804aee0:   20 08 00 00 b7 df ff ff  44 08 00 00 ee df ff ff   | .......D.......|
0x804aef0:   64 08 00 00 1f e0 ff ff  84 08 00 00 3e e0 ff ff   |d...........>...|
0x804af00:   a4 08 00 00 68 e0 ff ff  c4 08 00 00 90 e0 ff ff   |....h...........|
0x804af10:   e4 08 00 00 b9 e0 ff ff  04 09 00 00 f5 e0 ff ff   |................|
0x804af20:   24 09 00 00 2f e1 ff ff  44 09 00 00 82 e1 ff ff   |$.../...D.......|
0x804af30:   68 09 00 00 cf e1 ff ff  8c 09 00 00 07 e2 ff ff   |h...............|
0x804af40:   ac 09 00 00 39 e2 ff ff  cc 09 00 00 4d e2 ff ff   |....9.......M...|
0x804af50:   ec 09 00 00 64 e2 ff ff  0c 0a 00 00 79 e2 ff ff   |....d.......y...|
0x804af60:   2c 0a 00 00 8f e2 ff ff  4c 0a 00 00 b6 e2 ff ff   |,.......L.......|
0x804af70:   6c 0a 00 00 db e2 ff ff  8c 0a 00 00 1a e3 ff ff   |l...............|
0x804af80:   ac 0a 00 00 53 e3 ff ff  cc 0a 00 00 7f e3 ff ff   |....S...........|
0x804af90:   ec 0a 00 00 a5 e3 ff ff  0c 0b 00 00 e7 e3 ff ff   |................|
0x804afa0:   2c 0b 00 00 29 e4 ff ff  4c 0b 00 00 6b e4 ff ff   |,...)...L...k...|
0x804afb0:   6c 0b 00 00 e0 e4 ff ff  8c 0b 00 00 3d e5 ff ff   |l...........=...|
0x804afc0:   ac 0b 00 00 9a e5 ff ff  cc 0b 00 00 f7 e5 ff ff   |................|
0x804afd0:   ec 0b 00 00 87 e6 ff ff  0c 0c 00 00 eb e6 ff ff   |................|
0x804afe0:   2c 0c 00 00 5b e7 ff ff  4c 0c 00 00 a2 e7 ff ff   |,...[...L.......|
0x804aff0:   70 0c 00 00 f7 e7 ff ff  90 0c 00 00 3e e8 ff ff   |p...........>...|
0x804b000:   b4 0c 00 00 a6 e8 ff ff  d8 0c 00 00 d4 e8 ff ff   |................|
0x804b010:   fc 0c 00 00 6f ea ff ff  2c 0d 00 00 9e fa ff ff   |....o...,.......|
0x804b020:   5c 0d 00 00 1c fe ff ff  94 0d 00 00 20 fe ff ff   |\........... ...|
0x804b030:   a8 0d 00 00 30 fe ff ff  bc 0d 00 00 90 fe ff ff   |....0...........|
0x804b040:   08 0e 00 00 14                                     |.....           |
; section: .eh_frame
0x804b044:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b054:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b064:   1c d3 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b074:   30 00 00 00 78 d2 ff ff  40 00 00 00 00 0e 08 46   |0...x...@......F|
0x804b084:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b094:   10 00 00 00 54 00 00 00  94 d2 ff ff 08 00 00 00   |....T...........|
0x804b0a4:   00 00 00 00 1c 00 00 00  68 00 00 00 a6 d3 ff ff   |........h.......|
0x804b0b4:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b0c4:   04 04 00 00 20 00 00 00  88 00 00 00 96 d3 ff ff   |.... ...........|
0x804b0d4:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b0e4:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b0f4:   a0 d3 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b104:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b114:   9e d3 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b124:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b134:   a6 d3 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b144:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b154:   b0 d3 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b164:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b174:   b9 d3 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b184:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b194:   dc d3 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b1a4:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b1b4:   fd d3 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b1c4:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b1d4:   90 01 00 00 31 d4 ff ff  52 00 00 00 00 41 0e 08   |....1...R....A..|
0x804b1e4:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b1f4:   1c 00 00 00 b4 01 00 00  5f d4 ff ff 3d 00 00 00   |........_...=...|
0x804b204:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b214:   1c 00 00 00 d4 01 00 00  7c d4 ff ff 37 00 00 00   |........|...7...|
0x804b224:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b234:   1c 00 00 00 f4 01 00 00  93 d4 ff ff 1f 00 00 00   |................|
0x804b244:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b254:   1c 00 00 00 14 02 00 00  92 d4 ff ff 2a 00 00 00   |............*...|
0x804b264:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b274:   1c 00 00 00 34 02 00 00  9c d4 ff ff 2c 00 00 00   |....4.......,...|
0x804b284:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b294:   1c 00 00 00 54 02 00 00  a8 d4 ff ff 2b 00 00 00   |....T.......+...|
0x804b2a4:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b2b4:   1c 00 00 00 74 02 00 00  b3 d4 ff ff 49 00 00 00   |....t.......I...|
0x804b2c4:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b2d4:   1c 00 00 00 94 02 00 00  dc d4 ff ff 47 00 00 00   |............G...|
0x804b2e4:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b2f4:   20 00 00 00 b4 02 00 00  03 d5 ff ff 5a 00 00 00   | ...........Z...|
0x804b304:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b314:   c5 0c 04 04 20 00 00 00  d8 02 00 00 39 d5 ff ff   |.... .......9...|
0x804b324:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b334:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b344:   69 d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |i...?....A....B.|
0x804b354:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b364:   88 d5 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b374:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b384:   a1 d5 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b394:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b3a4:   a3 d5 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b3b4:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b3c4:   d1 d5 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b3d4:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b3e4:   ed d5 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b3f4:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b404:   56 d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |V...2....A....B.|
0x804b414:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b424:   68 d6 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |h...0....A....B.|
0x804b434:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b444:   78 d6 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |x...E....A....B.|
0x804b454:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b464:   9d d6 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b474:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b484:   bc d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b494:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b4a4:   ce d6 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b4b4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b4c4:   da d6 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b4d4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b4e4:   d8 d6 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b4f4:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b504:   e0 d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b514:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b524:   e5 d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b534:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b544:   ea d6 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b554:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b564:   01 d7 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b574:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b584:   15 d7 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b594:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b5a4:   60 05 00 00 43 d7 ff ff  4c 00 00 00 00 41 0e 08   |`...C...L....A..|
0x804b5b4:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b5c4:   1c 00 00 00 84 05 00 00  6b d7 ff ff 37 00 00 00   |........k...7...|
0x804b5d4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b5e4:   1c 00 00 00 a4 05 00 00  82 d7 ff ff 31 00 00 00   |............1...|
0x804b5f4:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b604:   1c 00 00 00 c4 05 00 00  93 d7 ff ff 1f 00 00 00   |................|
0x804b614:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b624:   1c 00 00 00 e4 05 00 00  92 d7 ff ff 2a 00 00 00   |............*...|
0x804b634:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b644:   1c 00 00 00 04 06 00 00  9c d7 ff ff 28 00 00 00   |............(...|
0x804b654:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b664:   1c 00 00 00 24 06 00 00  a4 d7 ff ff 29 00 00 00   |....$.......)...|
0x804b674:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b684:   1c 00 00 00 44 06 00 00  ad d7 ff ff 3c 00 00 00   |....D.......<...|
0x804b694:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b6a4:   1c 00 00 00 64 06 00 00  c9 d7 ff ff 3a 00 00 00   |....d.......:...|
0x804b6b4:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b6c4:   20 00 00 00 84 06 00 00  e3 d7 ff ff 53 00 00 00   | ...........S...|
0x804b6d4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b6e4:   c5 0c 04 04 20 00 00 00  a8 06 00 00 12 d8 ff ff   |.... ...........|
0x804b6f4:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b704:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b714:   3b d8 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |;...8....A....B.|
0x804b724:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b734:   53 d8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |S...2....A....B.|
0x804b744:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b754:   65 d8 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |e........A....B.|
0x804b764:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b774:   59 d8 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |Y........A....B.|
0x804b784:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b794:   50 d8 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |P........A....B.|
0x804b7a4:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b7b4:   45 d8 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |E........A....B.|
0x804b7c4:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b7d4:   3b d8 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |;...'....A....B.|
0x804b7e4:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b7f4:   42 d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |B...%....A....B.|
0x804b804:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b814:   47 d8 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |G...?....A....B.|
0x804b824:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b834:   66 d8 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |f...9....A....B.|
0x804b844:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b854:   7f d8 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b864:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b874:   8b d8 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804b884:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b894:   91 d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b8a4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b8b4:   b3 d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b8c4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b8d4:   d5 d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b8e4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b8f4:   f7 d8 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804b904:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b914:   4c d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |L...]....A....B.|
0x804b924:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b934:   89 d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b944:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b954:   c6 d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b964:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b974:   03 da ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b984:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b994:   73 da ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |s...d....A....B.|
0x804b9a4:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b9b4:   b7 da ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804b9c4:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b9d4:   07 db ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b9e4:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b9f4:   b0 09 00 00 2a db ff ff  55 00 00 00 00 41 0e 08   |....*...U....A..|
0x804ba04:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804ba14:   d0 09 00 00 5f db ff ff  47 00 00 00 00 41 0e 08   |...._...G....A..|
0x804ba24:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804ba34:   20 00 00 00 f4 09 00 00  82 db ff ff 68 00 00 00   | ...........h...|
0x804ba44:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804ba54:   0c 04 04 00 20 00 00 00  18 0a 00 00 c6 db ff ff   |.... ...........|
0x804ba64:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804ba74:   66 c5 c3 0c 04 04 00 00  2c 00 00 00 3c 0a 00 00   |f.......,...<...|
0x804ba84:   d0 db ff ff 9b 01 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804ba94:   05 46 87 03 86 04 83 05  03 8e 01 c3 41 c6 41 c7   |.F..........A.A.|
0x804baa4:   41 c5 0c 04 04 00 00 00  2c 00 00 00 6c 0a 00 00   |A.......,...l...|
0x804bab4:   3b dd ff ff 2f 10 00 00  00 41 0e 08 85 02 42 0d   |;.../....A....B.|
0x804bac4:   05 49 87 03 86 04 83 05  03 1f 10 c3 41 c6 41 c7   |.I..........A.A.|
0x804bad4:   41 c5 0c 04 04 00 00 00  34 00 00 00 9c 0a 00 00   |A.......4.......|
0x804bae4:   3a ed ff ff 7e 03 00 00  00 44 0c 01 00 47 10 05   |:...~....D...G..|
0x804baf4:   02 75 00 44 0f 03 75 78  06 10 03 02 75 7c 03 69   |.u.D..ux....u|.i|
0x804bb04:   03 c1 0c 01 00 41 c3 41  c5 43 0c 04 04 00 00 00   |.....A.A.C......|
0x804bb14:   10 00 00 00 d4 0a 00 00  80 f0 ff ff 04 00 00 00   |................|
0x804bb24:   00 00 00 00 10 00 00 00  e8 0a 00 00 70 f0 ff ff   |............p...|
0x804bb34:   04 00 00 00 00 00 00 00  48 00 00 00 fc 0a 00 00   |........H.......|
0x804bb44:   6c f0 ff ff 5d 00 00 00  00 41 0e 08 85 02 41 0e   |l...]....A....A.|
0x804bb54:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 4e 0e 20   |...A....A....N. |
0x804bb64:   69 0e 24 41 0e 28 44 0e  2c 44 0e 30 4d 0e 20 47   |i.$A.(D.,D.0M. G|
0x804bb74:   0e 14 41 c3 0e 10 41 c6  0e 0c 41 c7 0e 08 41 c5   |..A...A...A...A.|
0x804bb84:   0e 04 00 00 10 00 00 00  48 0b 00 00 80 f0 ff ff   |........H.......|
0x804bb94:   02 00 00 00 00 00 00 00  00 00 00 00 ??            |............?   |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 14 ac 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff ff ff ff ff   |................|
0x804d028:   09 00 00 00 01 00 00 00  01 00 00 00 d0 98 48 b1   |..............H.|
0x804d038:   56 b9 01 00 02 00 00 00  03 00 00 00 fb ff ff ff   |V...............|
0x804d048:   a9 a9 00 00 fc 71 10 3a  01 00 00 00 01 fc b9 2b   |.....q.:.......+|
0x804d058:   79 01 ff ff 54 66 eb ae  a3 3e 6e bb 42 8a 00 00   |y...Tf...>n.B...|
0x804d068:   c8 11 d0 6e e3 00 00 00  ff ff ff ff ??            |...n........?   |
