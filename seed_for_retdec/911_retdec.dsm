;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:53:33
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 60 d8 ff ff               	lea eax, [ebx - 0x27a0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 00 d8 ff ff               	lea eax, [ebx - 0x2800]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 53 a5 04 08               	mov eax, 0x804a553
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 60 d0 04 08                  	mov eax, 0x804d060
0x80483a5:   3d 60 d0 04 08                  	cmp eax, 0x804d060
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 60 d0 04 08                  	push 0x804d060
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 60 d0 04 08                  	mov eax, 0x804d060
0x80483e5:   2d 60 d0 04 08                  	sub eax, 0x804d060
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 60 d0 04 08                  	push 0x804d060
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 60 d0 04 08 00            	cmp byte ptr [0x804d060], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 60 d0 04 08 01            	mov byte ptr [0x804d060], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 95 23 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 81 23 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 80 d8 ff ff               	lea edx, [eax - 0x2780]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 54 23 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 36 23 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 0e 23 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 e4 22 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 bb 22 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 78 22 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 36 22 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 de 21 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 8d 21 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 50 21 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 19 21 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 fa 20 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 d0 20 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 a4 20 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 79 20 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 30 20 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 e8 1f 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 8e 1f 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 3b 1f 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 fc 1e 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 c6 1e 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 a4 1e 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 56 1e 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 1a 1e 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 91 1d 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 5f 1d 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 2f 1d 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 ea 1c 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 ab 1c 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 79 1c 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 4a 1c 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 2c 1c 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 04 1c 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 df 1b 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 ba 1b 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 83 1b 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 4e 1b 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 fc 1a 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 b1 1a 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 7a 1a 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 49 1a 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 2a 1a 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 00 1a 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 d8 19 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 af 19 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 73 19 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 38 19 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 e5 18 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 99 18 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 61 18 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 32 18 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 1e 18 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 07 18 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 f2 17 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 dc 17 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 b5 17 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 90 17 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 51 17 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 18 17 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 ec 16 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 c6 16 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 44 d9 ff ff               	fld dword ptr [eax - 0x26bc]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 44 d9 ff ff               	fld dword ptr [eax - 0x26bc]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 48 d9 ff ff               	fld dword ptr [eax - 0x26b8]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 84 16 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 44 d9 ff ff               	fld dword ptr [eax - 0x26bc]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 44 d9 ff ff               	fld dword ptr [eax - 0x26bc]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 48 d9 ff ff               	fld dword ptr [eax - 0x26b8]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 42 16 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 4c d9 ff ff               	fld dword ptr [eax - 0x26b4]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 50 d9 ff ff               	fld dword ptr [eax - 0x26b0]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 54 d9 ff ff               	fld dword ptr [eax - 0x26ac]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 00 16 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 58 d9 ff ff               	fld dword ptr [eax - 0x26a8]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 5c d9 ff ff               	fld dword ptr [eax - 0x26a4]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 60 d9 ff ff               	fld dword ptr [eax - 0x26a0]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 88 15 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 68 d9 ff ff               	fld qword ptr [eax - 0x2698]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 68 d9 ff ff               	fld qword ptr [eax - 0x2698]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 70 d9 ff ff               	fld qword ptr [eax - 0x2690]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 2b 15 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 68 d9 ff ff               	fld qword ptr [eax - 0x2698]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 68 d9 ff ff               	fld qword ptr [eax - 0x2698]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 70 d9 ff ff               	fld qword ptr [eax - 0x2690]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 ce 14 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 78 d9 ff ff               	fld qword ptr [eax - 0x2688]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 80 d9 ff ff               	fld qword ptr [eax - 0x2680]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 88 d9 ff ff               	fld qword ptr [eax - 0x2678]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 71 14 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 90 d9 ff ff               	fld qword ptr [eax - 0x2670]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 98 d9 ff ff               	fld qword ptr [eax - 0x2668]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 a0 d9 ff ff               	fld qword ptr [eax - 0x2660]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 e1 13 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 a8 d9 ff ff               	fld dword ptr [eax - 0x2658]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 ac d9 ff ff               	fld dword ptr [eax - 0x2654]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 7d 13 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 80 00 00 00            	mov dword ptr [eax + edx*4 + 0x80], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 0c 13 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 80 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0x80]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 c9 12 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 90 d8 ff ff               	lea eax, [ebx - 0x2770]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 b4 d8 ff ff               	lea eax, [ebx - 0x274c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: packed_printf at 0x8049626 -- 0x8049654
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   53                              	push ebx
0x804962a:   83 ec 04                        	sub esp, 4
0x804962d:   e8 c1 11 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8049632:   05 ce 39 00 00                  	add eax, 0x39ce
0x8049637:   83 ec 08                        	sub esp, 8
0x804963a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804963d:   8d 90 d8 d8 ff ff               	lea edx, [eax - 0x2728]
0x8049643:   52                              	push edx
0x8049644:   89 c3                           	mov ebx, eax
0x8049646:   e8 c5 ec ff ff                  	call 0x8048310 <printf>
0x804964b:   83 c4 10                        	add esp, 0x10
0x804964e:   90                              	nop 
0x804964f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049652:   c9                              	leave 
0x8049653:   c3                              	ret 
; function: set_var at 0x8049654 -- 0x8049783
0x8049654:   55                              	push ebp
0x8049655:   89 e5                           	mov ebp, esp
0x8049657:   57                              	push edi
0x8049658:   56                              	push esi
0x8049659:   53                              	push ebx
0x804965a:   83 ec 34                        	sub esp, 0x34
0x804965d:   e8 91 11 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8049662:   05 9e 39 00 00                  	add eax, 0x399e
0x8049667:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804966a:   8b 4d 10                        	mov ecx, dword ptr [ebp + 0x10]
0x804966d:   8b 75 18                        	mov esi, dword ptr [ebp + 0x18]
0x8049670:   8b 5d 20                        	mov ebx, dword ptr [ebp + 0x20]
0x8049673:   89 5d cc                        	mov dword ptr [ebp - 0x34], ebx
0x8049676:   8b 7d 38                        	mov edi, dword ptr [ebp + 0x38]
0x8049679:   89 7d c8                        	mov dword ptr [ebp - 0x38], edi
0x804967c:   8b 5d 40                        	mov ebx, dword ptr [ebp + 0x40]
0x804967f:   89 5d c4                        	mov dword ptr [ebp - 0x3c], ebx
0x8049682:   8b 7d 44                        	mov edi, dword ptr [ebp + 0x44]
0x8049685:   89 7d c0                        	mov dword ptr [ebp - 0x40], edi
0x8049688:   8b 7d 48                        	mov edi, dword ptr [ebp + 0x48]
0x804968b:   8b 5d 4c                        	mov ebx, dword ptr [ebp + 0x4c]
0x804968e:   66 89 55 f0                     	mov word ptr [ebp - 0x10], dx
0x8049692:   89 ca                           	mov edx, ecx
0x8049694:   66 89 55 ec                     	mov word ptr [ebp - 0x14], dx
0x8049698:   89 f2                           	mov edx, esi
0x804969a:   66 89 55 e8                     	mov word ptr [ebp - 0x18], dx
0x804969e:   0f b7 55 cc                     	movzx edx, word ptr [ebp - 0x34]
0x80496a2:   66 89 55 e4                     	mov word ptr [ebp - 0x1c], dx
0x80496a6:   0f b7 55 c8                     	movzx edx, word ptr [ebp - 0x38]
0x80496aa:   66 89 55 e0                     	mov word ptr [ebp - 0x20], dx
0x80496ae:   0f b6 55 c4                     	movzx edx, byte ptr [ebp - 0x3c]
0x80496b2:   88 55 dc                        	mov byte ptr [ebp - 0x24], dl
0x80496b5:   0f b6 55 c0                     	movzx edx, byte ptr [ebp - 0x40]
0x80496b9:   88 55 d8                        	mov byte ptr [ebp - 0x28], dl
0x80496bc:   89 fa                           	mov edx, edi
0x80496be:   88 55 d4                        	mov byte ptr [ebp - 0x2c], dl
0x80496c1:   89 da                           	mov edx, ebx
0x80496c3:   88 55 d0                        	mov byte ptr [ebp - 0x30], dl
0x80496c6:   0f b7 55 f0                     	movzx edx, word ptr [ebp - 0x10]
0x80496ca:   66 89 90 24 00 00 00            	mov word ptr [eax + 0x24], dx
0x80496d1:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80496d4:   89 90 28 00 00 00               	mov dword ptr [eax + 0x28], edx
0x80496da:   0f b7 55 ec                     	movzx edx, word ptr [ebp - 0x14]
0x80496de:   66 89 90 2c 00 00 00            	mov word ptr [eax + 0x2c], dx
0x80496e5:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80496e8:   89 90 30 00 00 00               	mov dword ptr [eax + 0x30], edx
0x80496ee:   0f b7 55 e8                     	movzx edx, word ptr [ebp - 0x18]
0x80496f2:   66 89 90 34 00 00 00            	mov word ptr [eax + 0x34], dx
0x80496f9:   8b 55 1c                        	mov edx, dword ptr [ebp + 0x1c]
0x80496fc:   89 90 38 00 00 00               	mov dword ptr [eax + 0x38], edx
0x8049702:   0f b7 55 e4                     	movzx edx, word ptr [ebp - 0x1c]
0x8049706:   66 89 90 3c 00 00 00            	mov word ptr [eax + 0x3c], dx
0x804970d:   8b 55 24                        	mov edx, dword ptr [ebp + 0x24]
0x8049710:   89 90 40 00 00 00               	mov dword ptr [eax + 0x40], edx
0x8049716:   8b 55 28                        	mov edx, dword ptr [ebp + 0x28]
0x8049719:   89 90 44 00 00 00               	mov dword ptr [eax + 0x44], edx
0x804971f:   8b 55 2c                        	mov edx, dword ptr [ebp + 0x2c]
0x8049722:   89 90 48 00 00 00               	mov dword ptr [eax + 0x48], edx
0x8049728:   8b 55 30                        	mov edx, dword ptr [ebp + 0x30]
0x804972b:   89 90 4c 00 00 00               	mov dword ptr [eax + 0x4c], edx
0x8049731:   8b 55 34                        	mov edx, dword ptr [ebp + 0x34]
0x8049734:   89 90 50 00 00 00               	mov dword ptr [eax + 0x50], edx
0x804973a:   0f b7 55 e0                     	movzx edx, word ptr [ebp - 0x20]
0x804973e:   66 89 90 54 00 00 00            	mov word ptr [eax + 0x54], dx
0x8049745:   8b 55 3c                        	mov edx, dword ptr [ebp + 0x3c]
0x8049748:   89 90 58 00 00 00               	mov dword ptr [eax + 0x58], edx
0x804974e:   0f b6 55 dc                     	movzx edx, byte ptr [ebp - 0x24]
0x8049752:   88 90 5c 00 00 00               	mov byte ptr [eax + 0x5c], dl
0x8049758:   0f b6 55 d8                     	movzx edx, byte ptr [ebp - 0x28]
0x804975c:   88 90 5d 00 00 00               	mov byte ptr [eax + 0x5d], dl
0x8049762:   0f b6 55 d4                     	movzx edx, byte ptr [ebp - 0x2c]
0x8049766:   88 90 5e 00 00 00               	mov byte ptr [eax + 0x5e], dl
0x804976c:   0f b6 55 d0                     	movzx edx, byte ptr [ebp - 0x30]
0x8049770:   88 90 5f 00 00 00               	mov byte ptr [eax + 0x5f], dl
0x8049776:   b8 00 00 00 00                  	mov eax, 0
0x804977b:   83 c4 34                        	add esp, 0x34
0x804977e:   5b                              	pop ebx
0x804977f:   5e                              	pop esi
0x8049780:   5f                              	pop edi
0x8049781:   5d                              	pop ebp
0x8049782:   c3                              	ret 
; function: func_1 at 0x8049783 -- 0x804a553
0x8049783:   55                              	push ebp
0x8049784:   89 e5                           	mov ebp, esp
0x8049786:   57                              	push edi
0x8049787:   56                              	push esi
0x8049788:   53                              	push ebx
0x8049789:   81 ec 1c 01 00 00               	sub esp, 0x11c
0x804978f:   e8 5f 10 00 00                  	call 0x804a7f3 <__x86.get_pc_thunk.ax>
0x8049794:   05 6c 38 00 00                  	add eax, 0x386c
0x8049799:   66 c7 45 e6 ff ff               	mov word ptr [ebp - 0x1a], 0xffff
0x804979f:   c7 45 a4 07 00 00 00            	mov dword ptr [ebp - 0x5c], 7
0x80497a6:   66 c7 45 e4 ff ff               	mov word ptr [ebp - 0x1c], 0xffff
0x80497ac:   c7 45 e0 01 0d ea 57            	mov dword ptr [ebp - 0x20], 0x57ea0d01
0x80497b3:   66 c7 45 f2 f4 f6               	mov word ptr [ebp - 0xe], 0xf6f4
0x80497b9:   c7 45 ec ab 27 d7 5d            	mov dword ptr [ebp - 0x14], 0x5dd727ab
0x80497c0:   66 c7 45 a2 50 5a               	mov word ptr [ebp - 0x5e], 0x5a50
0x80497c6:   c7 45 e8 fc ff ff ff            	mov dword ptr [ebp - 0x18], 0xfffffffc
0x80497cd:   c7 45 dc 6a f5 a6 ff            	mov dword ptr [ebp - 0x24], 0xffa6f56a
0x80497d4:   c7 45 d8 01 00 00 00            	mov dword ptr [ebp - 0x28], 1
0x80497db:   c7 45 d4 ff ff ff ff            	mov dword ptr [ebp - 0x2c], 0xffffffff
0x80497e2:   c7 45 d0 01 00 00 00            	mov dword ptr [ebp - 0x30], 1
0x80497e9:   66 c7 45 a0 01 00               	mov word ptr [ebp - 0x60], 1
0x80497ef:   c7 45 cc 23 de 75 26            	mov dword ptr [ebp - 0x34], 0x2675de23
0x80497f6:   c6 45 cb b9                     	mov byte ptr [ebp - 0x35], 0xb9
0x80497fa:   c6 45 ca 2e                     	mov byte ptr [ebp - 0x36], 0x2e
0x80497fe:   c6 45 9f 7e                     	mov byte ptr [ebp - 0x61], 0x7e
0x8049802:   c6 45 9e 09                     	mov byte ptr [ebp - 0x62], 9
0x8049806:   c6 45 c9 ff                     	mov byte ptr [ebp - 0x37], 0xff
0x804980a:   c7 45 c4 00 00 00 00            	mov dword ptr [ebp - 0x3c], 0
0x8049811:   66 c7 45 c2 ff 8d               	mov word ptr [ebp - 0x3e], 0x8dff
0x8049817:   c7 45 98 1a d9 f3 c1            	mov dword ptr [ebp - 0x68], 0xc1f3d91a
0x804981e:   c7 45 94 ad 30 8e 83            	mov dword ptr [ebp - 0x6c], 0x838e30ad
0x8049825:   c7 45 90 36 b1 49 14            	mov dword ptr [ebp - 0x70], 0x1449b136
0x804982c:   c7 45 bc 5d 08 de e7            	mov dword ptr [ebp - 0x44], 0xe7de085d
0x8049833:   c7 45 8c 2a f7 3b bb            	mov dword ptr [ebp - 0x74], 0xbb3bf72a
0x804983a:   c7 45 88 01 00 00 00            	mov dword ptr [ebp - 0x78], 1
0x8049841:   c7 45 84 ff ff ff ff            	mov dword ptr [ebp - 0x7c], 0xffffffff
0x8049848:   0f b6 55 c9                     	movzx edx, byte ptr [ebp - 0x37]
0x804984c:   0f bf 4d e6                     	movsx ecx, word ptr [ebp - 0x1a]
0x8049850:   0f b6 45 c9                     	movzx eax, byte ptr [ebp - 0x37]
0x8049854:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x8049857:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804985a:   89 c3                           	mov ebx, eax
0x804985c:   0f b6 45 c9                     	movzx eax, byte ptr [ebp - 0x37]
0x8049860:   01 d8                           	add eax, ebx
0x8049862:   0f b7 c0                        	movzx eax, ax
0x8049865:   69 c0 bf 69 00 00               	imul eax, eax, 0x69bf
0x804986b:   c1 e8 10                        	shr eax, 0x10
0x804986e:   89 c3                           	mov ebx, eax
0x8049870:   66 c1 eb 0b                     	shr bx, 0xb
0x8049874:   0f b6 45 c9                     	movzx eax, byte ptr [ebp - 0x37]
0x8049878:   66 39 c3                        	cmp bx, ax
0x804987b:   0f 96 c0                        	setbe al
0x804987e:   0f b6 c0                        	movzx eax, al
0x8049881:   39 c1                           	cmp ecx, eax
0x8049883:   74 0d                           	je 0x8049892 <func_1+0x10f>
0x8049885:   80 7d c9 00                     	cmp byte ptr [ebp - 0x37], 0
0x8049889:   74 07                           	je 0x8049892 <func_1+0x10f>
0x804988b:   b8 01 00 00 00                  	mov eax, 1
0x8049890:   eb 05                           	jmp 0x8049897 <func_1+0x114>
0x8049892:   b8 00 00 00 00                  	mov eax, 0
0x8049897:   39 d0                           	cmp eax, edx
0x8049899:   0f 9c c0                        	setl al
0x804989c:   89 c2                           	mov edx, eax
0x804989e:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x80498a2:   29 c2                           	sub edx, eax
0x80498a4:   89 d0                           	mov eax, edx
0x80498a6:   0f b6 d0                        	movzx edx, al
0x80498a9:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x80498ad:   0f b6 c0                        	movzx eax, al
0x80498b0:   29 c2                           	sub edx, eax
0x80498b2:   89 d0                           	mov eax, edx
0x80498b4:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x80498b7:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x80498ba:   66 21 45 e4                     	and word ptr [ebp - 0x1c], ax
0x80498be:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x80498c2:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x80498c5:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x80498cc:   e9 fb 0b 00 00                  	jmp 0x804a4cc <func_1+0xd49>
0x80498d1:   c7 45 80 db ce 8c 5a            	mov dword ptr [ebp - 0x80], 0x5a8ccedb
0x80498d8:   c7 85 7c ff ff ff 13 0d f0 d4   	mov dword ptr [ebp - 0x84], 0xd4f00d13
0x80498e2:   c7 45 b8 ff ff ff ff            	mov dword ptr [ebp - 0x48], 0xffffffff
0x80498e9:   c6 85 7b ff ff ff 0a            	mov byte ptr [ebp - 0x85], 0xa
0x80498f0:   c6 85 7a ff ff ff ff            	mov byte ptr [ebp - 0x86], 0xff
0x80498f7:   c7 85 74 ff ff ff 76 7b 5e 2d   	mov dword ptr [ebp - 0x8c], 0x2d5e7b76
0x8049901:   c7 85 70 ff ff ff dc 56 f1 64   	mov dword ptr [ebp - 0x90], 0x64f156dc
0x804990b:   c7 85 6c ff ff ff e5 ac a2 8c   	mov dword ptr [ebp - 0x94], 0x8ca2ace5
0x8049915:   0f b7 55 e4                     	movzx edx, word ptr [ebp - 0x1c]
0x8049919:   80 7d c9 00                     	cmp byte ptr [ebp - 0x37], 0
0x804991d:   0f 95 c0                        	setne al
0x8049920:   0f b6 c0                        	movzx eax, al
0x8049923:   0f be d8                        	movsx ebx, al
0x8049926:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049929:   0f be c0                        	movsx eax, al
0x804992c:   89 c1                           	mov ecx, eax
0x804992e:   d3 fb                           	sar ebx, cl
0x8049930:   89 d8                           	mov eax, ebx
0x8049932:   39 c2                           	cmp edx, eax
0x8049934:   c7 85 68 ff ff ff 79 48 8e d2   	mov dword ptr [ebp - 0x98], 0xd28e4879
0x804993e:   c7 85 64 ff ff ff 26 d3 77 79   	mov dword ptr [ebp - 0x9c], 0x7977d326
0x8049948:   c6 85 63 ff ff ff fb            	mov byte ptr [ebp - 0x9d], 0xfb
0x804994f:   66 c7 85 60 ff ff ff 85 fb      	mov word ptr [ebp - 0xa0], 0xfb85
0x8049958:   c7 85 5c ff ff ff 00 71 b8 dc   	mov dword ptr [ebp - 0xa4], 0xdcb87100
0x8049962:   66 c7 85 5a ff ff ff b6 45      	mov word ptr [ebp - 0xa6], 0x45b6
0x804996b:   c7 45 b4 8f 18 29 94            	mov dword ptr [ebp - 0x4c], 0x9429188f
0x8049972:   66 c7 85 58 ff ff ff 56 b6      	mov word ptr [ebp - 0xa8], 0xb656
0x804997b:   c7 85 54 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xac], 0
0x8049985:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049988:   89 c2                           	mov edx, eax
0x804998a:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804998e:   09 d0                           	or eax, edx
0x8049990:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x8049994:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x8049999:   0f 84 b6 04 00 00               	je 0x8049e55 <func_1+0x6d2>
0x804999f:   c7 85 40 ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xc0], 0xfffffff6
0x80499a9:   c7 85 3c ff ff ff dd 8d 30 be   	mov dword ptr [ebp - 0xc4], 0xbe308ddd
0x80499b3:   c7 85 38 ff ff ff 03 b0 f1 51   	mov dword ptr [ebp - 0xc8], 0x51f1b003
0x80499bd:   c7 85 34 ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0xcc], 8
0x80499c7:   66 c7 85 32 ff ff ff 77 5f      	mov word ptr [ebp - 0xce], 0x5f77
0x80499d0:   c7 85 2c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xd4], 0xffffffff
0x80499da:   66 c7 85 2a ff ff ff c8 a8      	mov word ptr [ebp - 0xd6], 0xa8c8
0x80499e3:   c6 45 c9 00                     	mov byte ptr [ebp - 0x37], 0
0x80499e7:   80 7d c9 11                     	cmp byte ptr [ebp - 0x37], 0x11
0x80499eb:   0f 86 e9 05 00 00               	jbe 0x8049fda <func_1+0x857>
0x80499f1:   c7 85 24 ff ff ff 45 55 54 a6   	mov dword ptr [ebp - 0xdc], 0xa6545545
0x80499fb:   c7 85 20 ff ff ff 21 de 0c b8   	mov dword ptr [ebp - 0xe0], 0xb80cde21
0x8049a05:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049a08:   0f b7 d0                        	movzx edx, ax
0x8049a0b:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x8049a11:   0f b7 c0                        	movzx eax, ax
0x8049a14:   0f af c2                        	imul eax, edx
0x8049a17:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049a1a:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049a1d:   83 f0 2a                        	xor eax, 0x2a
0x8049a20:   0b 85 40 ff ff ff               	or eax, dword ptr [ebp - 0xc0]
0x8049a26:   89 85 3c ff ff ff               	mov dword ptr [ebp - 0xc4], eax
0x8049a2c:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x8049a32:   31 85 24 ff ff ff               	xor dword ptr [ebp - 0xdc], eax
0x8049a38:   b8 01 00 00 00                  	mov eax, 1
0x8049a3d:   3b 45 80                        	cmp eax, dword ptr [ebp - 0x80]
0x8049a40:   0f 9f c0                        	setg al
0x8049a43:   0f b6 c0                        	movzx eax, al
0x8049a46:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x8049a4a:   0f b7 55 e4                     	movzx edx, word ptr [ebp - 0x1c]
0x8049a4e:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x8049a52:   39 c2                           	cmp edx, eax
0x8049a54:   c7 85 38 ff ff ff 15 03 91 0f   	mov dword ptr [ebp - 0xc8], 0xf910315
0x8049a5e:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x8049a64:   0f b7 d0                        	movzx edx, ax
0x8049a67:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x8049a6d:   0f b7 c0                        	movzx eax, ax
0x8049a70:   89 c1                           	mov ecx, eax
0x8049a72:   d3 fa                           	sar edx, cl
0x8049a74:   89 d0                           	mov eax, edx
0x8049a76:   85 c0                           	test eax, eax
0x8049a78:   74 05                           	je 0x8049a7f <func_1+0x2fc>
0x8049a7a:   66 83 7d e4 00                  	cmp word ptr [ebp - 0x1c], 0
0x8049a7f:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049a82:   c1 e8 1f                        	shr eax, 0x1f
0x8049a85:   0f b6 c0                        	movzx eax, al
0x8049a88:   66 23 45 e6                     	and ax, word ptr [ebp - 0x1a]
0x8049a8c:   66 c1 f8 0e                     	sar ax, 0xe
0x8049a90:   98                              	cwde 
0x8049a91:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x8049a97:   66 81 65 e6 91 3f               	and word ptr [ebp - 0x1a], 0x3f91
0x8049a9d:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x8049aa1:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049aa4:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049aa7:   0f bf c8                        	movsx ecx, ax
0x8049aaa:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x8049ab0:   66 85 c0                        	test ax, ax
0x8049ab3:   75 1c                           	jne 0x8049ad1 <func_1+0x34e>
0x8049ab5:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049ab8:   66 3d a8 e1                     	cmp ax, 0xe1a8
0x8049abc:   0f 94 c0                        	sete al
0x8049abf:   0f b6 c0                        	movzx eax, al
0x8049ac2:   8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x8049ac5:   0f b7 da                        	movzx ebx, dx
0x8049ac8:   99                              	cdq 
0x8049ac9:   f7 fb                           	idiv ebx
0x8049acb:   89 d0                           	mov eax, edx
0x8049acd:   85 c0                           	test eax, eax
0x8049acf:   74 07                           	je 0x8049ad8 <func_1+0x355>
0x8049ad1:   b8 01 00 00 00                  	mov eax, 1
0x8049ad6:   eb 05                           	jmp 0x8049add <func_1+0x35a>
0x8049ad8:   b8 00 00 00 00                  	mov eax, 0
0x8049add:   0f bf f0                        	movsx esi, ax
0x8049ae0:   89 c8                           	mov eax, ecx
0x8049ae2:   99                              	cdq 
0x8049ae3:   f7 fe                           	idiv esi
0x8049ae5:   66 25 ac 68                     	and ax, 0x68ac
0x8049ae9:   89 c2                           	mov edx, eax
0x8049aeb:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x8049af1:   31 d0                           	xor eax, edx
0x8049af3:   66 89 85 32 ff ff ff            	mov word ptr [ebp - 0xce], ax
0x8049afa:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049afe:   0f b6 c0                        	movzx eax, al
0x8049b01:   8b 55 80                        	mov edx, dword ptr [ebp - 0x80]
0x8049b04:   0f b6 ca                        	movzx ecx, dl
0x8049b07:   99                              	cdq 
0x8049b08:   f7 f9                           	idiv ecx
0x8049b0a:   89 d0                           	mov eax, edx
0x8049b0c:   85 c0                           	test eax, eax
0x8049b0e:   0f 84 aa 00 00 00               	je 0x8049bbe <func_1+0x43b>
0x8049b14:   c7 85 18 ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0xe8], 0xfffffffa
0x8049b1e:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049b22:   0f 85 b1 04 00 00               	jne 0x8049fd9 <func_1+0x856>
0x8049b28:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x8049b2f:   74 05                           	je 0x8049b36 <func_1+0x3b3>
0x8049b31:   e9 88 fd ff ff                  	jmp 0x80498be <func_1+0x13b>
0x8049b36:   66 83 7d e4 00                  	cmp word ptr [ebp - 0x1c], 0
0x8049b3b:   74 05                           	je 0x8049b42 <func_1+0x3bf>
0x8049b3d:   e9 7c fd ff ff                  	jmp 0x80498be <func_1+0x13b>
0x8049b42:   0f b6 55 9e                     	movzx edx, byte ptr [ebp - 0x62]
0x8049b46:   0f be 5d 9f                     	movsx ebx, byte ptr [ebp - 0x61]
0x8049b4a:   0f b6 45 ca                     	movzx eax, byte ptr [ebp - 0x36]
0x8049b4e:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x8049b54:   0f b6 75 cb                     	movzx esi, byte ptr [ebp - 0x35]
0x8049b58:   89 b5 dc fe ff ff               	mov dword ptr [ebp - 0x124], esi
0x8049b5e:   0f bf 7d a0                     	movsx edi, word ptr [ebp - 0x60]
0x8049b62:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x8049b68:   0f bf 7d a2                     	movsx edi, word ptr [ebp - 0x5e]
0x8049b6c:   0f bf 75 f2                     	movsx esi, word ptr [ebp - 0xe]
0x8049b70:   0f b7 4d e4                     	movzx ecx, word ptr [ebp - 0x1c]
0x8049b74:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x8049b78:   52                              	push edx
0x8049b79:   53                              	push ebx
0x8049b7a:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x8049b80:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x8049b86:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049b89:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x8049b8f:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049b92:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049b95:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049b98:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049b9b:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049b9e:   57                              	push edi
0x8049b9f:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049ba2:   56                              	push esi
0x8049ba3:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049ba6:   51                              	push ecx
0x8049ba7:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x8049baa:   50                              	push eax
0x8049bab:   e8 a4 fa ff ff                  	call 0x8049654 <set_var>
0x8049bb0:   83 c4 48                        	add esp, 0x48
0x8049bb3:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x8049bb9:   e9 8d 09 00 00                  	jmp 0x804a54b <func_1+0xdc8>
0x8049bbe:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049bc1:   89 c3                           	mov ebx, eax
0x8049bc3:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049bc7:   8d 50 01                        	lea edx, [eax + 1]
0x8049bca:   66 89 55 e4                     	mov word ptr [ebp - 0x1c], dx
0x8049bce:   0f b7 c0                        	movzx eax, ax
0x8049bd1:   81 bd 7c ff ff ff 6b 3d b9 70   	cmp dword ptr [ebp - 0x84], 0x70b93d6b
0x8049bdb:   0f 94 c2                        	sete dl
0x8049bde:   0f b6 d2                        	movzx edx, dl
0x8049be1:   89 95 34 ff ff ff               	mov dword ptr [ebp - 0xcc], edx
0x8049be7:   39 85 34 ff ff ff               	cmp dword ptr [ebp - 0xcc], eax
0x8049bed:   75 0f                           	jne 0x8049bfe <func_1+0x47b>
0x8049bef:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x8049bf5:   c1 e8 1f                        	shr eax, 0x1f
0x8049bf8:   0f b6 c0                        	movzx eax, al
0x8049bfb:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x8049bfe:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049c02:   74 07                           	je 0x8049c0b <func_1+0x488>
0x8049c04:   b8 01 00 00 00                  	mov eax, 1
0x8049c09:   eb 05                           	jmp 0x8049c10 <func_1+0x48d>
0x8049c0b:   b8 00 00 00 00                  	mov eax, 0
0x8049c10:   0f bf d0                        	movsx edx, ax
0x8049c13:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x8049c19:   98                              	cwde 
0x8049c1a:   89 c1                           	mov ecx, eax
0x8049c1c:   d3 fa                           	sar edx, cl
0x8049c1e:   89 d0                           	mov eax, edx
0x8049c20:   0f be d0                        	movsx edx, al
0x8049c23:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049c26:   0f be c0                        	movsx eax, al
0x8049c29:   89 c1                           	mov ecx, eax
0x8049c2b:   d3 e2                           	shl edx, cl
0x8049c2d:   89 d0                           	mov eax, edx
0x8049c2f:   0f b6 c0                        	movzx eax, al
0x8049c32:   c1 e0 04                        	shl eax, 4
0x8049c35:   89 c7                           	mov edi, eax
0x8049c37:   89 d8                           	mov eax, ebx
0x8049c39:   ba 00 00 00 00                  	mov edx, 0
0x8049c3e:   66 f7 f7                        	div di
0x8049c41:   66 89 45 a2                     	mov word ptr [ebp - 0x5e], ax
0x8049c45:   0f bf 45 a2                     	movsx eax, word ptr [ebp - 0x5e]
0x8049c49:   8b 95 7c ff ff ff               	mov edx, dword ptr [ebp - 0x84]
0x8049c4f:   f7 d2                           	not edx
0x8049c51:   89 95 64 ff ff ff               	mov dword ptr [ebp - 0x9c], edx
0x8049c57:   ba 00 00 00 00                  	mov edx, 0
0x8049c5c:   21 55 e8                        	and dword ptr [ebp - 0x18], edx
0x8049c5f:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x8049c63:   74 07                           	je 0x8049c6c <func_1+0x4e9>
0x8049c65:   ba 01 00 00 00                  	mov edx, 1
0x8049c6a:   eb 05                           	jmp 0x8049c71 <func_1+0x4ee>
0x8049c6c:   ba 00 00 00 00                  	mov edx, 0
0x8049c71:   39 c2                           	cmp edx, eax
0x8049c73:   0f 9d c0                        	setge al
0x8049c76:   0f b6 d0                        	movzx edx, al
0x8049c79:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x8049c7d:   0f af c2                        	imul eax, edx
0x8049c80:   83 f8 fa                        	cmp eax, -6
0x8049c83:   0f 9d c0                        	setge al
0x8049c86:   0f b6 c0                        	movzx eax, al
0x8049c89:   31 85 3c ff ff ff               	xor dword ptr [ebp - 0xc4], eax
0x8049c8f:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x8049c95:   21 85 34 ff ff ff               	and dword ptr [ebp - 0xcc], eax
0x8049c9b:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x8049ca1:   0f be d0                        	movsx edx, al
0x8049ca4:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049ca7:   0f be c0                        	movsx eax, al
0x8049caa:   89 c1                           	mov ecx, eax
0x8049cac:   d3 fa                           	sar edx, cl
0x8049cae:   89 d0                           	mov eax, edx
0x8049cb0:   0f bf d0                        	movsx edx, ax
0x8049cb3:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049cb6:   98                              	cwde 
0x8049cb7:   89 c1                           	mov ecx, eax
0x8049cb9:   d3 e2                           	shl edx, cl
0x8049cbb:   89 d0                           	mov eax, edx
0x8049cbd:   98                              	cwde 
0x8049cbe:   c1 e0 07                        	shl eax, 7
0x8049cc1:   3d ea 58 5c 45                  	cmp eax, 0x455c58ea
0x8049cc6:   74 07                           	je 0x8049ccf <func_1+0x54c>
0x8049cc8:   b8 e0 40 01 00                  	mov eax, 0x140e0
0x8049ccd:   eb 05                           	jmp 0x8049cd4 <func_1+0x551>
0x8049ccf:   b8 70 a0 00 00                  	mov eax, 0xa070
0x8049cd4:   0b 85 40 ff ff ff               	or eax, dword ptr [ebp - 0xc0]
0x8049cda:   89 c2                           	mov edx, eax
0x8049cdc:   0f be 85 63 ff ff ff            	movsx eax, byte ptr [ebp - 0x9d]
0x8049ce3:   39 c2                           	cmp edx, eax
0x8049ce5:   76 7a                           	jbe 0x8049d61 <func_1+0x5de>
0x8049ce7:   0f b6 55 9e                     	movzx edx, byte ptr [ebp - 0x62]
0x8049ceb:   0f be 5d 9f                     	movsx ebx, byte ptr [ebp - 0x61]
0x8049cef:   0f b6 45 ca                     	movzx eax, byte ptr [ebp - 0x36]
0x8049cf3:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x8049cf9:   0f b6 75 cb                     	movzx esi, byte ptr [ebp - 0x35]
0x8049cfd:   89 b5 dc fe ff ff               	mov dword ptr [ebp - 0x124], esi
0x8049d03:   0f bf 7d a0                     	movsx edi, word ptr [ebp - 0x60]
0x8049d07:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x8049d0d:   0f bf 7d a2                     	movsx edi, word ptr [ebp - 0x5e]
0x8049d11:   0f bf 75 f2                     	movsx esi, word ptr [ebp - 0xe]
0x8049d15:   0f b7 4d e4                     	movzx ecx, word ptr [ebp - 0x1c]
0x8049d19:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x8049d1d:   52                              	push edx
0x8049d1e:   53                              	push ebx
0x8049d1f:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x8049d25:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x8049d2b:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049d2e:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x8049d34:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049d37:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049d3a:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049d3d:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049d40:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049d43:   57                              	push edi
0x8049d44:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049d47:   56                              	push esi
0x8049d48:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049d4b:   51                              	push ecx
0x8049d4c:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x8049d4f:   50                              	push eax
0x8049d50:   e8 ff f8 ff ff                  	call 0x8049654 <set_var>
0x8049d55:   83 c4 48                        	add esp, 0x48
0x8049d58:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049d5c:   e9 ea 07 00 00                  	jmp 0x804a54b <func_1+0xdc8>
0x8049d61:   c6 85 1f ff ff ff 00            	mov byte ptr [ebp - 0xe1], 0
0x8049d68:   81 8d 2c ff ff ff f0 83 75 23   	or dword ptr [ebp - 0xd4], 0x237583f0
0x8049d72:   83 7d e8 01                     	cmp dword ptr [ebp - 0x18], 1
0x8049d76:   0f 94 c0                        	sete al
0x8049d79:   0f b6 c0                        	movzx eax, al
0x8049d7c:   8b 95 7c ff ff ff               	mov edx, dword ptr [ebp - 0x84]
0x8049d82:   09 d0                           	or eax, edx
0x8049d84:   0f bf d0                        	movsx edx, ax
0x8049d87:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x8049d8b:   89 c1                           	mov ecx, eax
0x8049d8d:   d3 e2                           	shl edx, cl
0x8049d8f:   89 d0                           	mov eax, edx
0x8049d91:   33 45 e8                        	xor eax, dword ptr [ebp - 0x18]
0x8049d94:   3d 3d fa 00 00                  	cmp eax, 0xfa3d
0x8049d99:   0f 94 c0                        	sete al
0x8049d9c:   0f b6 c0                        	movzx eax, al
0x8049d9f:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049da2:   83 7d dc 49                     	cmp dword ptr [ebp - 0x24], 0x49
0x8049da6:   0f b6 85 1f ff ff ff            	movzx eax, byte ptr [ebp - 0xe1]
0x8049dad:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x8049db0:   0f 9e c0                        	setle al
0x8049db3:   0f b6 c0                        	movzx eax, al
0x8049db6:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x8049dbc:   0f b7 85 2a ff ff ff            	movzx eax, word ptr [ebp - 0xd6]
0x8049dc3:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x8049dc6:   0f 9f c0                        	setg al
0x8049dc9:   0f b6 d0                        	movzx edx, al
0x8049dcc:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x8049dd0:   39 c2                           	cmp edx, eax
0x8049dd2:   0f 94 c0                        	sete al
0x8049dd5:   0f b6 c0                        	movzx eax, al
0x8049dd8:   09 45 d8                        	or dword ptr [ebp - 0x28], eax
0x8049ddb:   0f b6 55 9e                     	movzx edx, byte ptr [ebp - 0x62]
0x8049ddf:   0f be 5d 9f                     	movsx ebx, byte ptr [ebp - 0x61]
0x8049de3:   0f b6 45 ca                     	movzx eax, byte ptr [ebp - 0x36]
0x8049de7:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x8049ded:   0f b6 75 cb                     	movzx esi, byte ptr [ebp - 0x35]
0x8049df1:   89 b5 dc fe ff ff               	mov dword ptr [ebp - 0x124], esi
0x8049df7:   0f bf 7d a0                     	movsx edi, word ptr [ebp - 0x60]
0x8049dfb:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x8049e01:   0f bf 7d a2                     	movsx edi, word ptr [ebp - 0x5e]
0x8049e05:   0f bf 75 f2                     	movsx esi, word ptr [ebp - 0xe]
0x8049e09:   0f b7 4d e4                     	movzx ecx, word ptr [ebp - 0x1c]
0x8049e0d:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x8049e11:   52                              	push edx
0x8049e12:   53                              	push ebx
0x8049e13:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x8049e19:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x8049e1f:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049e22:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x8049e28:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049e2b:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049e2e:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049e31:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049e34:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049e37:   57                              	push edi
0x8049e38:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049e3b:   56                              	push esi
0x8049e3c:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049e3f:   51                              	push ecx
0x8049e40:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x8049e43:   50                              	push eax
0x8049e44:   e8 0b f8 ff ff                  	call 0x8049654 <set_var>
0x8049e49:   83 c4 48                        	add esp, 0x48
0x8049e4c:   0f b7 45 a2                     	movzx eax, word ptr [ebp - 0x5e]
0x8049e50:   e9 f6 06 00 00                  	jmp 0x804a54b <func_1+0xdc8>
0x8049e55:   c7 85 50 ff ff ff 03 2a 8b aa   	mov dword ptr [ebp - 0xb0], 0xaa8b2a03
0x8049e5f:   c7 45 b0 0c 7c 29 50            	mov dword ptr [ebp - 0x50], 0x50297c0c
0x8049e66:   83 7d 80 00                     	cmp dword ptr [ebp - 0x80], 0
0x8049e6a:   74 05                           	je 0x8049e71 <func_1+0x6ee>
0x8049e6c:   e9 4d fa ff ff                  	jmp 0x80498be <func_1+0x13b>
0x8049e71:   c7 85 4c ff ff ff 86 df f7 c1   	mov dword ptr [ebp - 0xb4], 0xc1f7df86
0x8049e7b:   c7 45 d8 00 00 00 00            	mov dword ptr [ebp - 0x28], 0
0x8049e82:   0f b7 55 e4                     	movzx edx, word ptr [ebp - 0x1c]
0x8049e86:   83 7d dc 08                     	cmp dword ptr [ebp - 0x24], 8
0x8049e8a:   0f 95 c0                        	setne al
0x8049e8d:   0f b6 c0                        	movzx eax, al
0x8049e90:   39 c2                           	cmp edx, eax
0x8049e92:   0f 94 c0                        	sete al
0x8049e95:   0f b6 d0                        	movzx edx, al
0x8049e98:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x8049e9c:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x8049e9f:   0f 94 c0                        	sete al
0x8049ea2:   0f b6 c0                        	movzx eax, al
0x8049ea5:   29 c2                           	sub edx, eax
0x8049ea7:   89 d0                           	mov eax, edx
0x8049ea9:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x8049eac:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x8049eb3:   75 09                           	jne 0x8049ebe <func_1+0x73b>
0x8049eb5:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x8049ebc:   74 07                           	je 0x8049ec5 <func_1+0x742>
0x8049ebe:   b8 01 00 00 00                  	mov eax, 1
0x8049ec3:   eb 05                           	jmp 0x8049eca <func_1+0x747>
0x8049ec5:   b8 00 00 00 00                  	mov eax, 0
0x8049eca:   89 c2                           	mov edx, eax
0x8049ecc:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049ecf:   31 d0                           	xor eax, edx
0x8049ed1:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x8049ed5:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x8049edc:   83 7d ec 05                     	cmp dword ptr [ebp - 0x14], 5
0x8049ee0:   76 05                           	jbe 0x8049ee7 <func_1+0x764>
0x8049ee2:   66 83 7d a2 00                  	cmp word ptr [ebp - 0x5e], 0
0x8049ee7:   66 83 7d e6 01                  	cmp word ptr [ebp - 0x1a], 1
0x8049eec:   0f 9e c0                        	setle al
0x8049eef:   0f b6 c0                        	movzx eax, al
0x8049ef2:   09 45 c4                        	or dword ptr [ebp - 0x3c], eax
0x8049ef5:   66 c7 45 f2 05 00               	mov word ptr [ebp - 0xe], 5
0x8049efb:   e9 cc 00 00 00                  	jmp 0x8049fcc <func_1+0x849>
0x8049f00:   c6 45 c9 12                     	mov byte ptr [ebp - 0x37], 0x12
0x8049f04:   eb 26                           	jmp 0x8049f2c <func_1+0x7a9>
0x8049f06:   81 bd 5c ff ff ff 65 15 69 34   	cmp dword ptr [ebp - 0xa4], 0x34691565
0x8049f10:   0f 94 c0                        	sete al
0x8049f13:   0f b6 c0                        	movzx eax, al
0x8049f16:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x8049f19:   0f 9c c0                        	setl al
0x8049f1c:   0f b6 c0                        	movzx eax, al
0x8049f1f:   0f be c0                        	movsx eax, al
0x8049f22:   c1 e0 04                        	shl eax, 4
0x8049f25:   31 45 d8                        	xor dword ptr [ebp - 0x28], eax
0x8049f28:   80 45 c9 07                     	add byte ptr [ebp - 0x37], 7
0x8049f2c:   80 7d c9 1b                     	cmp byte ptr [ebp - 0x37], 0x1b
0x8049f30:   76 d4                           	jbe 0x8049f06 <func_1+0x783>
0x8049f32:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049f35:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049f38:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049f3c:   74 20                           	je 0x8049f5e <func_1+0x7db>
0x8049f3e:   c7 85 44 ff ff ff 62 1c 20 f8   	mov dword ptr [ebp - 0xbc], 0xf8201c62
0x8049f48:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049f4b:   89 85 44 ff ff ff               	mov dword ptr [ebp - 0xbc], eax
0x8049f51:   c7 45 e8 ff ff ff ff            	mov dword ptr [ebp - 0x18], 0xffffffff
0x8049f58:   83 4d e8 fe                     	or dword ptr [ebp - 0x18], 0xfffffffe
0x8049f5c:   eb 5c                           	jmp 0x8049fba <func_1+0x837>
0x8049f5e:   c7 85 48 ff ff ff a0 09 a9 18   	mov dword ptr [ebp - 0xb8], 0x18a909a0
0x8049f68:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x8049f6e:   c0 f8 04                        	sar al, 4
0x8049f71:   3c ff                           	cmp al, 0xff
0x8049f73:   0f 95 c0                        	setne al
0x8049f76:   0f b6 c0                        	movzx eax, al
0x8049f79:   39 85 48 ff ff ff               	cmp dword ptr [ebp - 0xb8], eax
0x8049f7f:   0f 9e c0                        	setle al
0x8049f82:   0f b6 d0                        	movzx edx, al
0x8049f85:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049f89:   98                              	cwde 
0x8049f8a:   89 c1                           	mov ecx, eax
0x8049f8c:   d3 fa                           	sar edx, cl
0x8049f8e:   89 d0                           	mov eax, edx
0x8049f90:   f7 d0                           	not eax
0x8049f92:   09 45 dc                        	or dword ptr [ebp - 0x24], eax
0x8049f95:   83 7d dc 02                     	cmp dword ptr [ebp - 0x24], 2
0x8049f99:   0f 94 c0                        	sete al
0x8049f9c:   0f b6 c0                        	movzx eax, al
0x8049f9f:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x8049fa5:   0f 92 c0                        	setb al
0x8049fa8:   0f b6 d0                        	movzx edx, al
0x8049fab:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049fae:   01 d0                           	add eax, edx
0x8049fb0:   09 45 c4                        	or dword ptr [ebp - 0x3c], eax
0x8049fb3:   81 75 b0 dd df b7 0a            	xor dword ptr [ebp - 0x50], 0xab7dfdd
0x8049fba:   c7 45 e8 01 00 00 00            	mov dword ptr [ebp - 0x18], 1
0x8049fc1:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049fc5:   83 c0 01                        	add eax, 1
0x8049fc8:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x8049fcc:   66 83 7d f2 18                  	cmp word ptr [ebp - 0xe], 0x18
0x8049fd1:   0f 84 29 ff ff ff               	je 0x8049f00 <func_1+0x77d>
0x8049fd7:   eb 01                           	jmp 0x8049fda <func_1+0x857>
0x8049fd9:   90                              	nop 
0x8049fda:   80 7d c9 00                     	cmp byte ptr [ebp - 0x37], 0
0x8049fde:   0f 94 c0                        	sete al
0x8049fe1:   0f b6 c0                        	movzx eax, al
0x8049fe4:   f7 d8                           	neg eax
0x8049fe6:   0f b6 d0                        	movzx edx, al
0x8049fe9:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049fec:   0f b6 c0                        	movzx eax, al
0x8049fef:   0f af c2                        	imul eax, edx
0x8049ff2:   85 c0                           	test eax, eax
0x8049ff4:   0f 94 c0                        	sete al
0x8049ff7:   0f b6 c0                        	movzx eax, al
0x8049ffa:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049ffd:   0f 96 c0                        	setbe al
0x804a000:   89 c2                           	mov edx, eax
0x804a002:   0f b7 45 a2                     	movzx eax, word ptr [ebp - 0x5e]
0x804a006:   21 d0                           	and eax, edx
0x804a008:   0f be d0                        	movsx edx, al
0x804a00b:   0f b6 85 7b ff ff ff            	movzx eax, byte ptr [ebp - 0x85]
0x804a012:   0f be c0                        	movsx eax, al
0x804a015:   89 c1                           	mov ecx, eax
0x804a017:   d3 e2                           	shl edx, cl
0x804a019:   89 d0                           	mov eax, edx
0x804a01b:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a01e:   b8 01 00 00 00                  	mov eax, 1
0x804a023:   83 f8 07                        	cmp eax, 7
0x804a026:   0f 86 fa 03 00 00               	jbe 0x804a426 <func_1+0xca3>
0x804a02c:   66 c7 85 0e ff ff ff 01 00      	mov word ptr [ebp - 0xf2], 1
0x804a035:   c7 85 08 ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xf8], 0xfffffffc
0x804a03f:   c7 85 04 ff ff ff f7 ff ff ff   	mov dword ptr [ebp - 0xfc], 0xfffffff7
0x804a049:   c7 45 ac fa ff ff ff            	mov dword ptr [ebp - 0x54], 0xfffffffa
0x804a050:   c7 45 e8 e7 ff ff ff            	mov dword ptr [ebp - 0x18], 0xffffffe7
0x804a057:   eb 27                           	jmp 0x804a080 <func_1+0x8fd>
0x804a059:   66 c7 85 e6 fe ff ff 33 49      	mov word ptr [ebp - 0x11a], 0x4933
0x804a062:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a065:   89 c2                           	mov edx, eax
0x804a067:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a06b:   09 d0                           	or eax, edx
0x804a06d:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x804a071:   0f b7 85 0e ff ff ff            	movzx eax, word ptr [ebp - 0xf2]
0x804a078:   98                              	cwde 
0x804a079:   31 45 d8                        	xor dword ptr [ebp - 0x28], eax
0x804a07c:   83 45 e8 01                     	add dword ptr [ebp - 0x18], 1
0x804a080:   83 7d e8 f3                     	cmp dword ptr [ebp - 0x18], -0xd
0x804a084:   75 d3                           	jne 0x804a059 <func_1+0x8d6>
0x804a086:   0f b6 45 cb                     	movzx eax, byte ptr [ebp - 0x35]
0x804a08a:   83 c0 01                        	add eax, 1
0x804a08d:   88 45 cb                        	mov byte ptr [ebp - 0x35], al
0x804a090:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a096:   0f b7 c8                        	movzx ecx, ax
0x804a099:   0f bf b5 0e ff ff ff            	movsx esi, word ptr [ebp - 0xf2]
0x804a0a0:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a0a3:   ba 00 00 00 00                  	mov edx, 0
0x804a0a8:   f7 f6                           	div esi
0x804a0aa:   0f b7 c0                        	movzx eax, ax
0x804a0ad:   0f af c1                        	imul eax, ecx
0x804a0b0:   31 45 ac                        	xor dword ptr [ebp - 0x54], eax
0x804a0b3:   8b 85 08 ff ff ff               	mov eax, dword ptr [ebp - 0xf8]
0x804a0b9:   0f b7 c0                        	movzx eax, ax
0x804a0bc:   83 c0 01                        	add eax, 1
0x804a0bf:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a0c2:   8b 4d b8                        	mov ecx, dword ptr [ebp - 0x48]
0x804a0c5:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a0c8:   ba 00 00 00 00                  	mov edx, 0
0x804a0cd:   f7 f1                           	div ecx
0x804a0cf:   0f bf 45 a2                     	movsx eax, word ptr [ebp - 0x5e]
0x804a0d3:   39 c2                           	cmp edx, eax
0x804a0d5:   0f 93 c0                        	setae al
0x804a0d8:   0f b6 d0                        	movzx edx, al
0x804a0db:   0f bf 85 58 ff ff ff            	movsx eax, word ptr [ebp - 0xa8]
0x804a0e2:   89 c1                           	mov ecx, eax
0x804a0e4:   d3 e2                           	shl edx, cl
0x804a0e6:   89 d0                           	mov eax, edx
0x804a0e8:   85 c0                           	test eax, eax
0x804a0ea:   0f 84 43 02 00 00               	je 0x804a333 <func_1+0xbb0>
0x804a0f0:   66 c7 85 f4 fe ff ff bf ad      	mov word ptr [ebp - 0x10c], 0xadbf
0x804a0f9:   c7 45 a8 01 00 00 00            	mov dword ptr [ebp - 0x58], 1
0x804a100:   c7 85 f0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x110], 1
0x804a10a:   66 83 7d e6 7e                  	cmp word ptr [ebp - 0x1a], 0x7e
0x804a10f:   0f 9e c0                        	setle al
0x804a112:   0f b6 c0                        	movzx eax, al
0x804a115:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a118:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x804a11c:   75 2b                           	jne 0x804a149 <func_1+0x9c6>
0x804a11e:   83 bd 08 ff ff ff 00            	cmp dword ptr [ebp - 0xf8], 0
0x804a125:   75 0c                           	jne 0x804a133 <func_1+0x9b0>
0x804a127:   0f b6 55 c9                     	movzx edx, byte ptr [ebp - 0x37]
0x804a12b:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a12f:   39 c2                           	cmp edx, eax
0x804a131:   74 07                           	je 0x804a13a <func_1+0x9b7>
0x804a133:   ba 01 00 00 00                  	mov edx, 1
0x804a138:   eb 05                           	jmp 0x804a13f <func_1+0x9bc>
0x804a13a:   ba 00 00 00 00                  	mov edx, 0
0x804a13f:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a143:   09 d0                           	or eax, edx
0x804a145:   85 c0                           	test eax, eax
0x804a147:   74 07                           	je 0x804a150 <func_1+0x9cd>
0x804a149:   b8 01 00 00 00                  	mov eax, 1
0x804a14e:   eb 05                           	jmp 0x804a155 <func_1+0x9d2>
0x804a150:   b8 00 00 00 00                  	mov eax, 0
0x804a155:   39 45 b4                        	cmp dword ptr [ebp - 0x4c], eax
0x804a158:   0f 96 c0                        	setbe al
0x804a15b:   0f b6 c0                        	movzx eax, al
0x804a15e:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a161:   c7 45 b4 00 00 00 00            	mov dword ptr [ebp - 0x4c], 0
0x804a168:   e9 8e 01 00 00                  	jmp 0x804a2fb <func_1+0xb78>
0x804a16d:   c6 85 ef fe ff ff ea            	mov byte ptr [ebp - 0x111], 0xea
0x804a174:   c7 85 e8 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x118], 1
0x804a17e:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a181:   89 85 08 ff ff ff               	mov dword ptr [ebp - 0xf8], eax
0x804a187:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x804a18b:   75 7c                           	jne 0x804a209 <func_1+0xa86>
0x804a18d:   80 bd ef fe ff ff 00            	cmp byte ptr [ebp - 0x111], 0
0x804a194:   74 66                           	je 0x804a1fc <func_1+0xa79>
0x804a196:   66 83 bd f4 fe ff ff 00         	cmp word ptr [ebp - 0x10c], 0
0x804a19e:   75 06                           	jne 0x804a1a6 <func_1+0xa23>
0x804a1a0:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x804a1a4:   74 07                           	je 0x804a1ad <func_1+0xa2a>
0x804a1a6:   b8 01 00 00 00                  	mov eax, 1
0x804a1ab:   eb 05                           	jmp 0x804a1b2 <func_1+0xa2f>
0x804a1ad:   b8 00 00 00 00                  	mov eax, 0
0x804a1b2:   88 45 cb                        	mov byte ptr [ebp - 0x35], al
0x804a1b5:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a1b8:   0f b6 d0                        	movzx edx, al
0x804a1bb:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a1be:   0f b6 c0                        	movzx eax, al
0x804a1c1:   29 c2                           	sub edx, eax
0x804a1c3:   89 d0                           	mov eax, edx
0x804a1c5:   f7 d0                           	not eax
0x804a1c7:   8b 7d d4                        	mov edi, dword ptr [ebp - 0x2c]
0x804a1ca:   99                              	cdq 
0x804a1cb:   f7 ff                           	idiv edi
0x804a1cd:   3d f8 00 00 00                  	cmp eax, 0xf8
0x804a1d2:   74 07                           	je 0x804a1db <func_1+0xa58>
0x804a1d4:   b8 01 00 00 00                  	mov eax, 1
0x804a1d9:   eb 05                           	jmp 0x804a1e0 <func_1+0xa5d>
0x804a1db:   b8 00 00 00 00                  	mov eax, 0
0x804a1e0:   0f b6 d0                        	movzx edx, al
0x804a1e3:   8b 85 08 ff ff ff               	mov eax, dword ptr [ebp - 0xf8]
0x804a1e9:   0f b6 c0                        	movzx eax, al
0x804a1ec:   89 c1                           	mov ecx, eax
0x804a1ee:   d3 e2                           	shl edx, cl
0x804a1f0:   89 d0                           	mov eax, edx
0x804a1f2:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a1f5:   b8 01 00 00 00                  	mov eax, 1
0x804a1fa:   eb 05                           	jmp 0x804a201 <func_1+0xa7e>
0x804a1fc:   b8 00 00 00 00                  	mov eax, 0
0x804a201:   3b 85 04 ff ff ff               	cmp eax, dword ptr [ebp - 0xfc]
0x804a207:   74 07                           	je 0x804a210 <func_1+0xa8d>
0x804a209:   b8 01 00 00 00                  	mov eax, 1
0x804a20e:   eb 05                           	jmp 0x804a215 <func_1+0xa92>
0x804a210:   b8 00 00 00 00                  	mov eax, 0
0x804a215:   09 45 b8                        	or dword ptr [ebp - 0x48], eax
0x804a218:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a21b:   88 45 cb                        	mov byte ptr [ebp - 0x35], al
0x804a21e:   0f b6 45 cb                     	movzx eax, byte ptr [ebp - 0x35]
0x804a222:   0b 45 b4                        	or eax, dword ptr [ebp - 0x4c]
0x804a225:   89 c1                           	mov ecx, eax
0x804a227:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a22a:   ba 00 00 00 00                  	mov edx, 0
0x804a22f:   f7 f1                           	div ecx
0x804a231:   89 d0                           	mov eax, edx
0x804a233:   3d 80 00 00 00                  	cmp eax, 0x80
0x804a238:   0f 97 c0                        	seta al
0x804a23b:   0f b6 c0                        	movzx eax, al
0x804a23e:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x804a244:   c7 85 e8 fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x118], 2
0x804a24e:   0f b6 55 cb                     	movzx edx, byte ptr [ebp - 0x35]
0x804a252:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a258:   89 c3                           	mov ebx, eax
0x804a25a:   0f b7 45 a2                     	movzx eax, word ptr [ebp - 0x5e]
0x804a25e:   89 c1                           	mov ecx, eax
0x804a260:   89 d8                           	mov eax, ebx
0x804a262:   0f af c1                        	imul eax, ecx
0x804a265:   0f b6 c8                        	movzx ecx, al
0x804a268:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a26b:   0f b6 c0                        	movzx eax, al
0x804a26e:   0f af c1                        	imul eax, ecx
0x804a271:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804a274:   0f 97 c0                        	seta al
0x804a277:   0f b6 c0                        	movzx eax, al
0x804a27a:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a27d:   81 7d a8 3c 74 00 00            	cmp dword ptr [ebp - 0x58], 0x743c
0x804a284:   0f 96 c0                        	setbe al
0x804a287:   0f b6 c0                        	movzx eax, al
0x804a28a:   66 0b 45 a0                     	or ax, word ptr [ebp - 0x60]
0x804a28e:   0f bf d8                        	movsx ebx, ax
0x804a291:   0f b6 45 cb                     	movzx eax, byte ptr [ebp - 0x35]
0x804a295:   89 c1                           	mov ecx, eax
0x804a297:   d3 fb                           	sar ebx, cl
0x804a299:   89 d8                           	mov eax, ebx
0x804a29b:   3d 79 d3 f0 00                  	cmp eax, 0xf0d379
0x804a2a0:   0f 95 c0                        	setne al
0x804a2a3:   0f b6 c0                        	movzx eax, al
0x804a2a6:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a2a9:   75 06                           	jne 0x804a2b1 <func_1+0xb2e>
0x804a2ab:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x804a2af:   74 07                           	je 0x804a2b8 <func_1+0xb35>
0x804a2b1:   b9 01 00 00 00                  	mov ecx, 1
0x804a2b6:   eb 05                           	jmp 0x804a2bd <func_1+0xb3a>
0x804a2b8:   b9 00 00 00 00                  	mov ecx, 0
0x804a2bd:   0f bf 85 f4 fe ff ff            	movsx eax, word ptr [ebp - 0x10c]
0x804a2c4:   39 c1                           	cmp ecx, eax
0x804a2c6:   0f 95 c0                        	setne al
0x804a2c9:   0f b6 c0                        	movzx eax, al
0x804a2cc:   29 c2                           	sub edx, eax
0x804a2ce:   89 d0                           	mov eax, edx
0x804a2d0:   83 e0 02                        	and eax, 2
0x804a2d3:   83 f8 08                        	cmp eax, 8
0x804a2d6:   0f 97 c0                        	seta al
0x804a2d9:   0f b6 c0                        	movzx eax, al
0x804a2dc:   39 85 04 ff ff ff               	cmp dword ptr [ebp - 0xfc], eax
0x804a2e2:   0f 9f c0                        	setg al
0x804a2e5:   0f b6 c0                        	movzx eax, al
0x804a2e8:   39 85 54 ff ff ff               	cmp dword ptr [ebp - 0xac], eax
0x804a2ee:   0f 9f c0                        	setg al
0x804a2f1:   0f b6 c0                        	movzx eax, al
0x804a2f4:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a2f7:   83 45 b4 01                     	add dword ptr [ebp - 0x4c], 1
0x804a2fb:   83 7d b4 05                     	cmp dword ptr [ebp - 0x4c], 5
0x804a2ff:   0f 86 68 fe ff ff               	jbe 0x804a16d <func_1+0x9ea>
0x804a305:   c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0x804a30c:   eb 1a                           	jmp 0x804a328 <func_1+0xba5>
0x804a30e:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x804a312:   0f 94 c0                        	sete al
0x804a315:   0f b6 c0                        	movzx eax, al
0x804a318:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a31b:   0f 95 c0                        	setne al
0x804a31e:   0f b6 c0                        	movzx eax, al
0x804a321:   09 45 d8                        	or dword ptr [ebp - 0x28], eax
0x804a324:   83 45 ac 01                     	add dword ptr [ebp - 0x54], 1
0x804a328:   83 7d ac 16                     	cmp dword ptr [ebp - 0x54], 0x16
0x804a32c:   74 e0                           	je 0x804a30e <func_1+0xb8b>
0x804a32e:   e9 95 01 00 00                  	jmp 0x804a4c8 <func_1+0xd45>
0x804a333:   c7 85 00 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x100], 1
0x804a33d:   c6 85 ff fe ff ff fe            	mov byte ptr [ebp - 0x101], 0xfe
0x804a344:   c7 85 f8 fe ff ff fc ff ff ff   	mov dword ptr [ebp - 0x108], 0xfffffffc
0x804a34e:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a351:   89 85 00 ff ff ff               	mov dword ptr [ebp - 0x100], eax
0x804a357:   0f be 85 63 ff ff ff            	movsx eax, byte ptr [ebp - 0x9d]
0x804a35e:   39 85 00 ff ff ff               	cmp dword ptr [ebp - 0x100], eax
0x804a364:   0f 84 b1 00 00 00               	je 0x804a41b <func_1+0xc98>
0x804a36a:   66 c7 85 f6 fe ff ff f9 ff      	mov word ptr [ebp - 0x10a], 0xfff9
0x804a373:   c6 85 ff fe ff ff 00            	mov byte ptr [ebp - 0x101], 0
0x804a37a:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a37d:   0f bf d0                        	movsx edx, ax
0x804a380:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a383:   0f b6 c0                        	movzx eax, al
0x804a386:   89 c1                           	mov ecx, eax
0x804a388:   d3 fa                           	sar edx, cl
0x804a38a:   89 d0                           	mov eax, edx
0x804a38c:   0f b6 d0                        	movzx edx, al
0x804a38f:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a392:   0f b6 c0                        	movzx eax, al
0x804a395:   89 c1                           	mov ecx, eax
0x804a397:   d3 fa                           	sar edx, cl
0x804a399:   0f b6 85 7a ff ff ff            	movzx eax, byte ptr [ebp - 0x86]
0x804a3a0:   39 c2                           	cmp edx, eax
0x804a3a2:   0f 9c c0                        	setl al
0x804a3a5:   0f b6 c0                        	movzx eax, al
0x804a3a8:   89 85 f8 fe ff ff               	mov dword ptr [ebp - 0x108], eax
0x804a3ae:   0f bf 85 58 ff ff ff            	movsx eax, word ptr [ebp - 0xa8]
0x804a3b5:   0f b7 55 e6                     	movzx edx, word ptr [ebp - 0x1a]
0x804a3b9:   66 0f be d2                     	movsx dx, dl
0x804a3bd:   0f b7 d2                        	movzx edx, dx
0x804a3c0:   81 c2 25 82 00 00               	add edx, 0x8225
0x804a3c6:   f7 d2                           	not edx
0x804a3c8:   39 d0                           	cmp eax, edx
0x804a3ca:   0f 95 c0                        	setne al
0x804a3cd:   0f b6 c0                        	movzx eax, al
0x804a3d0:   39 45 94                        	cmp dword ptr [ebp - 0x6c], eax
0x804a3d3:   0f 9f c0                        	setg al
0x804a3d6:   0f b6 c0                        	movzx eax, al
0x804a3d9:   66 33 45 f2                     	xor ax, word ptr [ebp - 0xe]
0x804a3dd:   89 c2                           	mov edx, eax
0x804a3df:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x804a3e5:   01 d0                           	add eax, edx
0x804a3e7:   0f b7 d0                        	movzx edx, ax
0x804a3ea:   89 d0                           	mov eax, edx
0x804a3ec:   01 c0                           	add eax, eax
0x804a3ee:   01 d0                           	add eax, edx
0x804a3f0:   01 c0                           	add eax, eax
0x804a3f2:   39 85 00 ff ff ff               	cmp dword ptr [ebp - 0x100], eax
0x804a3f8:   0f 94 c0                        	sete al
0x804a3fb:   0f b6 d0                        	movzx edx, al
0x804a3fe:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a401:   0f b7 c0                        	movzx eax, ax
0x804a404:   0f af c2                        	imul eax, edx
0x804a407:   89 85 f8 fe ff ff               	mov dword ptr [ebp - 0x108], eax
0x804a40d:   66 c7 85 f6 fe ff ff 00 00      	mov word ptr [ebp - 0x10a], 0
0x804a416:   e9 ad 00 00 00                  	jmp 0x804a4c8 <func_1+0xd45>
0x804a41b:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a41e:   31 45 e8                        	xor dword ptr [ebp - 0x18], eax
0x804a421:   e9 a2 00 00 00                  	jmp 0x804a4c8 <func_1+0xd45>
0x804a426:   c7 85 14 ff ff ff 1d ad fa f1   	mov dword ptr [ebp - 0xec], 0xf1faad1d
0x804a430:   c7 85 10 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0xf0], 0xfffffffe
0x804a43a:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a43d:   88 45 ca                        	mov byte ptr [ebp - 0x36], al
0x804a440:   0f b6 45 ca                     	movzx eax, byte ptr [ebp - 0x36]
0x804a444:   33 85 6c ff ff ff               	xor eax, dword ptr [ebp - 0x94]
0x804a44a:   89 c2                           	mov edx, eax
0x804a44c:   0f bf 45 a0                     	movsx eax, word ptr [ebp - 0x60]
0x804a450:   39 c2                           	cmp edx, eax
0x804a452:   0f 95 c0                        	setne al
0x804a455:   0f b6 c0                        	movzx eax, al
0x804a458:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x804a45b:   0f 94 c0                        	sete al
0x804a45e:   0f b6 c0                        	movzx eax, al
0x804a461:   39 85 14 ff ff ff               	cmp dword ptr [ebp - 0xec], eax
0x804a467:   0f 94 c0                        	sete al
0x804a46a:   0f b6 c0                        	movzx eax, al
0x804a46d:   21 45 bc                        	and dword ptr [ebp - 0x44], eax
0x804a470:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a473:   39 45 bc                        	cmp dword ptr [ebp - 0x44], eax
0x804a476:   0f 97 c0                        	seta al
0x804a479:   0f b6 d0                        	movzx edx, al
0x804a47c:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a47f:   0f be c0                        	movsx eax, al
0x804a482:   01 c2                           	add edx, eax
0x804a484:   0f bf 45 a2                     	movsx eax, word ptr [ebp - 0x5e]
0x804a488:   39 c2                           	cmp edx, eax
0x804a48a:   0f 9d c0                        	setge al
0x804a48d:   0f b6 c0                        	movzx eax, al
0x804a490:   0b 85 14 ff ff ff               	or eax, dword ptr [ebp - 0xec]
0x804a496:   85 c0                           	test eax, eax
0x804a498:   75 13                           	jne 0x804a4ad <func_1+0xd2a>
0x804a49a:   83 bd 14 ff ff ff 00            	cmp dword ptr [ebp - 0xec], 0
0x804a4a1:   75 0a                           	jne 0x804a4ad <func_1+0xd2a>
0x804a4a3:   66 83 bd 5a ff ff ff 00         	cmp word ptr [ebp - 0xa6], 0
0x804a4ab:   74 07                           	je 0x804a4b4 <func_1+0xd31>
0x804a4ad:   b8 01 00 00 00                  	mov eax, 1
0x804a4b2:   eb 05                           	jmp 0x804a4b9 <func_1+0xd36>
0x804a4b4:   b8 00 00 00 00                  	mov eax, 0
0x804a4b9:   3b 45 98                        	cmp eax, dword ptr [ebp - 0x68]
0x804a4bc:   0f 9d c0                        	setge al
0x804a4bf:   0f b6 c0                        	movzx eax, al
0x804a4c2:   31 85 10 ff ff ff               	xor dword ptr [ebp - 0xf0], eax
0x804a4c8:   83 45 e0 01                     	add dword ptr [ebp - 0x20], 1
0x804a4cc:   83 7d e0 24                     	cmp dword ptr [ebp - 0x20], 0x24
0x804a4d0:   0f 87 fb f3 ff ff               	ja 0x80498d1 <func_1+0x14e>
0x804a4d6:   0f b6 55 9e                     	movzx edx, byte ptr [ebp - 0x62]
0x804a4da:   0f be 5d 9f                     	movsx ebx, byte ptr [ebp - 0x61]
0x804a4de:   0f b6 45 ca                     	movzx eax, byte ptr [ebp - 0x36]
0x804a4e2:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x804a4e8:   0f b6 75 cb                     	movzx esi, byte ptr [ebp - 0x35]
0x804a4ec:   89 b5 dc fe ff ff               	mov dword ptr [ebp - 0x124], esi
0x804a4f2:   0f bf 7d a0                     	movsx edi, word ptr [ebp - 0x60]
0x804a4f6:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x804a4fc:   0f bf 7d a2                     	movsx edi, word ptr [ebp - 0x5e]
0x804a500:   0f bf 75 f2                     	movsx esi, word ptr [ebp - 0xe]
0x804a504:   0f b7 4d e4                     	movzx ecx, word ptr [ebp - 0x1c]
0x804a508:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x804a50c:   52                              	push edx
0x804a50d:   53                              	push ebx
0x804a50e:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a514:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a51a:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a51d:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a523:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a526:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a529:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a52c:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a52f:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a532:   57                              	push edi
0x804a533:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a536:   56                              	push esi
0x804a537:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a53a:   51                              	push ecx
0x804a53b:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a53e:   50                              	push eax
0x804a53f:   e8 10 f1 ff ff                  	call 0x8049654 <set_var>
0x804a544:   83 c4 48                        	add esp, 0x48
0x804a547:   0f b6 45 ca                     	movzx eax, byte ptr [ebp - 0x36]
0x804a54b:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a54e:   5b                              	pop ebx
0x804a54f:   5e                              	pop esi
0x804a550:   5f                              	pop edi
0x804a551:   5d                              	pop ebp
0x804a552:   c3                              	ret 
; function: main at 0x804a553 -- 0x804a7f3
0x804a553:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a557:   83 e4 f0                        	and esp, 0xfffffff0
0x804a55a:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a55d:   55                              	push ebp
0x804a55e:   89 e5                           	mov ebp, esp
0x804a560:   53                              	push ebx
0x804a561:   51                              	push ecx
0x804a562:   83 ec 10                        	sub esp, 0x10
0x804a565:   e8 26 de ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a56a:   81 c3 96 2a 00 00               	add ebx, 0x2a96
0x804a570:   89 c8                           	mov eax, ecx
0x804a572:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a579:   83 38 02                        	cmp dword ptr [eax], 2
0x804a57c:   75 26                           	jne 0x804a5a4 <main+0x51>
0x804a57e:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a581:   83 c0 04                        	add eax, 4
0x804a584:   8b 00                           	mov eax, dword ptr [eax]
0x804a586:   83 ec 08                        	sub esp, 8
0x804a589:   8d 93 dc d8 ff ff               	lea edx, [ebx - 0x2724]
0x804a58f:   52                              	push edx
0x804a590:   50                              	push eax
0x804a591:   e8 6a dd ff ff                  	call 0x8048300 <strcmp>
0x804a596:   83 c4 10                        	add esp, 0x10
0x804a599:   85 c0                           	test eax, eax
0x804a59b:   75 07                           	jne 0x804a5a4 <main+0x51>
0x804a59d:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a5a4:   e8 ad de ff ff                  	call 0x8048456 <platform_main_begin>
0x804a5a9:   e8 bd ee ff ff                  	call 0x804946b <crc32_gentab>
0x804a5ae:   e8 d0 f1 ff ff                  	call 0x8049783 <func_1>
0x804a5b3:   0f b7 83 24 00 00 00            	movzx eax, word ptr [ebx + 0x24]
0x804a5ba:   98                              	cwde 
0x804a5bb:   83 ec 04                        	sub esp, 4
0x804a5be:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a5c1:   8d 93 de d8 ff ff               	lea edx, [ebx - 0x2722]
0x804a5c7:   52                              	push edx
0x804a5c8:   50                              	push eax
0x804a5c9:   e8 a9 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a5ce:   83 c4 10                        	add esp, 0x10
0x804a5d1:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a5d7:   83 ec 04                        	sub esp, 4
0x804a5da:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a5dd:   8d 93 e2 d8 ff ff               	lea edx, [ebx - 0x271e]
0x804a5e3:   52                              	push edx
0x804a5e4:   50                              	push eax
0x804a5e5:   e8 8d ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a5ea:   83 c4 10                        	add esp, 0x10
0x804a5ed:   0f b7 83 2c 00 00 00            	movzx eax, word ptr [ebx + 0x2c]
0x804a5f4:   0f b7 c0                        	movzx eax, ax
0x804a5f7:   83 ec 04                        	sub esp, 4
0x804a5fa:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a5fd:   8d 93 e7 d8 ff ff               	lea edx, [ebx - 0x2719]
0x804a603:   52                              	push edx
0x804a604:   50                              	push eax
0x804a605:   e8 6d ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a60a:   83 c4 10                        	add esp, 0x10
0x804a60d:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804a613:   83 ec 04                        	sub esp, 4
0x804a616:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a619:   8d 93 ec d8 ff ff               	lea edx, [ebx - 0x2714]
0x804a61f:   52                              	push edx
0x804a620:   50                              	push eax
0x804a621:   e8 51 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a626:   83 c4 10                        	add esp, 0x10
0x804a629:   0f b7 83 34 00 00 00            	movzx eax, word ptr [ebx + 0x34]
0x804a630:   98                              	cwde 
0x804a631:   83 ec 04                        	sub esp, 4
0x804a634:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a637:   8d 93 f1 d8 ff ff               	lea edx, [ebx - 0x270f]
0x804a63d:   52                              	push edx
0x804a63e:   50                              	push eax
0x804a63f:   e8 33 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a644:   83 c4 10                        	add esp, 0x10
0x804a647:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804a64d:   83 ec 04                        	sub esp, 4
0x804a650:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a653:   8d 93 f6 d8 ff ff               	lea edx, [ebx - 0x270a]
0x804a659:   52                              	push edx
0x804a65a:   50                              	push eax
0x804a65b:   e8 17 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a660:   83 c4 10                        	add esp, 0x10
0x804a663:   0f b7 83 3c 00 00 00            	movzx eax, word ptr [ebx + 0x3c]
0x804a66a:   98                              	cwde 
0x804a66b:   83 ec 04                        	sub esp, 4
0x804a66e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a671:   8d 93 fb d8 ff ff               	lea edx, [ebx - 0x2705]
0x804a677:   52                              	push edx
0x804a678:   50                              	push eax
0x804a679:   e8 f9 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a67e:   83 c4 10                        	add esp, 0x10
0x804a681:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804a687:   89 c2                           	mov edx, eax
0x804a689:   83 ec 04                        	sub esp, 4
0x804a68c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a68f:   8d 83 00 d9 ff ff               	lea eax, [ebx - 0x2700]
0x804a695:   50                              	push eax
0x804a696:   52                              	push edx
0x804a697:   e8 db ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a69c:   83 c4 10                        	add esp, 0x10
0x804a69f:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804a6a5:   83 ec 04                        	sub esp, 4
0x804a6a8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6ab:   8d 93 06 d9 ff ff               	lea edx, [ebx - 0x26fa]
0x804a6b1:   52                              	push edx
0x804a6b2:   50                              	push eax
0x804a6b3:   e8 bf ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6b8:   83 c4 10                        	add esp, 0x10
0x804a6bb:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804a6c1:   89 c2                           	mov edx, eax
0x804a6c3:   83 ec 04                        	sub esp, 4
0x804a6c6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6c9:   8d 83 0c d9 ff ff               	lea eax, [ebx - 0x26f4]
0x804a6cf:   50                              	push eax
0x804a6d0:   52                              	push edx
0x804a6d1:   e8 a1 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6d6:   83 c4 10                        	add esp, 0x10
0x804a6d9:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804a6df:   83 ec 04                        	sub esp, 4
0x804a6e2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6e5:   8d 93 12 d9 ff ff               	lea edx, [ebx - 0x26ee]
0x804a6eb:   52                              	push edx
0x804a6ec:   50                              	push eax
0x804a6ed:   e8 85 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6f2:   83 c4 10                        	add esp, 0x10
0x804a6f5:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804a6fb:   89 c2                           	mov edx, eax
0x804a6fd:   83 ec 04                        	sub esp, 4
0x804a700:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a703:   8d 83 18 d9 ff ff               	lea eax, [ebx - 0x26e8]
0x804a709:   50                              	push eax
0x804a70a:   52                              	push edx
0x804a70b:   e8 67 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a710:   83 c4 10                        	add esp, 0x10
0x804a713:   0f b7 83 54 00 00 00            	movzx eax, word ptr [ebx + 0x54]
0x804a71a:   98                              	cwde 
0x804a71b:   83 ec 04                        	sub esp, 4
0x804a71e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a721:   8d 93 1e d9 ff ff               	lea edx, [ebx - 0x26e2]
0x804a727:   52                              	push edx
0x804a728:   50                              	push eax
0x804a729:   e8 49 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a72e:   83 c4 10                        	add esp, 0x10
0x804a731:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804a737:   83 ec 04                        	sub esp, 4
0x804a73a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a73d:   8d 93 24 d9 ff ff               	lea edx, [ebx - 0x26dc]
0x804a743:   52                              	push edx
0x804a744:   50                              	push eax
0x804a745:   e8 2d ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a74a:   83 c4 10                        	add esp, 0x10
0x804a74d:   0f b6 83 5c 00 00 00            	movzx eax, byte ptr [ebx + 0x5c]
0x804a754:   0f b6 c0                        	movzx eax, al
0x804a757:   83 ec 04                        	sub esp, 4
0x804a75a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a75d:   8d 93 2a d9 ff ff               	lea edx, [ebx - 0x26d6]
0x804a763:   52                              	push edx
0x804a764:   50                              	push eax
0x804a765:   e8 0d ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a76a:   83 c4 10                        	add esp, 0x10
0x804a76d:   0f b6 83 5d 00 00 00            	movzx eax, byte ptr [ebx + 0x5d]
0x804a774:   0f b6 c0                        	movzx eax, al
0x804a777:   83 ec 04                        	sub esp, 4
0x804a77a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a77d:   8d 93 30 d9 ff ff               	lea edx, [ebx - 0x26d0]
0x804a783:   52                              	push edx
0x804a784:   50                              	push eax
0x804a785:   e8 ed ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a78a:   83 c4 10                        	add esp, 0x10
0x804a78d:   0f b6 83 5e 00 00 00            	movzx eax, byte ptr [ebx + 0x5e]
0x804a794:   0f be c0                        	movsx eax, al
0x804a797:   83 ec 04                        	sub esp, 4
0x804a79a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a79d:   8d 93 36 d9 ff ff               	lea edx, [ebx - 0x26ca]
0x804a7a3:   52                              	push edx
0x804a7a4:   50                              	push eax
0x804a7a5:   e8 cd ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7aa:   83 c4 10                        	add esp, 0x10
0x804a7ad:   0f b6 83 5f 00 00 00            	movzx eax, byte ptr [ebx + 0x5f]
0x804a7b4:   0f b6 c0                        	movzx eax, al
0x804a7b7:   83 ec 04                        	sub esp, 4
0x804a7ba:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7bd:   8d 93 3c d9 ff ff               	lea edx, [ebx - 0x26c4]
0x804a7c3:   52                              	push edx
0x804a7c4:   50                              	push eax
0x804a7c5:   e8 ad ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7ca:   83 c4 10                        	add esp, 0x10
0x804a7cd:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804a7d3:   f7 d0                           	not eax
0x804a7d5:   83 ec 08                        	sub esp, 8
0x804a7d8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7db:   50                              	push eax
0x804a7dc:   e8 85 dc ff ff                  	call 0x8048466 <platform_main_end>
0x804a7e1:   83 c4 10                        	add esp, 0x10
0x804a7e4:   b8 00 00 00 00                  	mov eax, 0
0x804a7e9:   8d 65 f8                        	lea esp, [ebp - 8]
0x804a7ec:   59                              	pop ecx
0x804a7ed:   5b                              	pop ebx
0x804a7ee:   5d                              	pop ebp
0x804a7ef:   8d 61 fc                        	lea esp, [ecx - 4]
0x804a7f2:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804a7f3 -- 0x804a7f7
0x804a7f3:   8b 04 24                        	mov eax, dword ptr [esp]
0x804a7f6:   c3                              	ret 
; data inside code section at 0x804a7f7 -- 0x804a800
0x804a7f7:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: __libc_csu_init at 0x804a800 -- 0x804a85d
0x804a800:   55                              	push ebp
0x804a801:   57                              	push edi
0x804a802:   56                              	push esi
0x804a803:   53                              	push ebx
0x804a804:   e8 87 db ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a809:   81 c3 f7 27 00 00               	add ebx, 0x27f7
0x804a80f:   83 ec 0c                        	sub esp, 0xc
0x804a812:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804a816:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804a81c:   e8 ab da ff ff                  	call 0x80482cc <_init>
0x804a821:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804a827:   29 c6                           	sub esi, eax
0x804a829:   c1 fe 02                        	sar esi, 2
0x804a82c:   85 f6                           	test esi, esi
0x804a82e:   74 25                           	je 0x804a855 <__libc_csu_init+0x55>
0x804a830:   31 ff                           	xor edi, edi
0x804a832:   8d b6 00 00 00 00               	lea esi, [esi]
0x804a838:   83 ec 04                        	sub esp, 4
0x804a83b:   55                              	push ebp
0x804a83c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a840:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a844:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804a84b:   83 c7 01                        	add edi, 1
0x804a84e:   83 c4 10                        	add esp, 0x10
0x804a851:   39 fe                           	cmp esi, edi
0x804a853:   75 e3                           	jne 0x804a838 <__libc_csu_init+0x38>
0x804a855:   83 c4 0c                        	add esp, 0xc
0x804a858:   5b                              	pop ebx
0x804a859:   5e                              	pop esi
0x804a85a:   5f                              	pop edi
0x804a85b:   5d                              	pop ebp
0x804a85c:   c3                              	ret 
; data inside code section at 0x804a85d -- 0x804a860
0x804a85d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804a860 -- 0x804a862
0x804a860:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804a864 -- 0x804a878
0x804a864:   53                              	push ebx
0x804a865:   83 ec 08                        	sub esp, 8
0x804a868:   e8 23 db ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a86d:   81 c3 93 27 00 00               	add ebx, 0x2793
0x804a873:   83 c4 08                        	add esp, 8
0x804a876:   5b                              	pop ebx
0x804a877:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 7c a8 04 08  04 00 00 00 11 00 10 00   |....|...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804a878:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804a888:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804a898:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804a8a8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804a8b8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804a8c8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804a8d8:   25 64 0a 00 31 00 67 5f  37 00 67 5f 31 33 00 67   |%d..1.g_7.g_13.g|
0x804a8e8:   5f 31 34 00 67 5f 31 35  00 67 5f 33 32 00 67 5f   |_14.g_15.g_32.g_|
0x804a8f8:   35 31 00 67 5f 38 38 00  67 5f 31 30 38 00 67 5f   |51.g_88.g_108.g_|
0x804a908:   31 31 38 00 67 5f 31 32  30 00 67 5f 31 35 31 00   |118.g_120.g_151.|
0x804a918:   67 5f 31 39 34 00 67 5f  31 39 35 00 67 5f 32 31   |g_194.g_195.g_21|
0x804a928:   31 00 67 5f 32 32 35 00  67 5f 33 33 30 00 67 5f   |1.g_225.g_330.g_|
0x804a938:   33 34 31 00 67 5f 33 34  32 00 00 00 00 00 00 3f   |341.g_342......?|
0x804a948:   ff ff ff 7e 00 00 80 0d  00 00 80 31 ff ff 7f 3f   |...~.......1...?|
0x804a958:   00 00 00 27 00 00 80 71  ff ff ff 34 00 00 00 00   |...'...q...4....|
0x804a968:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804a978:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804a988:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804a998:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804a9a8:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804a9b0:   01 1b 03 3b b8 02 00 00  56 00 00 00 40 d9 ff ff   |...;....V...@...|
0x804a9c0:   e8 02 00 00 80 d9 ff ff  0c 03 00 00 d0 d9 ff ff   |................|
0x804a9d0:   d4 02 00 00 a6 da ff ff  20 03 00 00 b6 da ff ff   |........ .......|
0x804a9e0:   40 03 00 00 e4 da ff ff  64 03 00 00 02 db ff ff   |@.......d.......|
0x804a9f0:   84 03 00 00 2a db ff ff  a4 03 00 00 54 db ff ff   |....*.......T...|
0x804aa00:   c4 03 00 00 7d db ff ff  e4 03 00 00 c0 db ff ff   |....}...........|
0x804aa10:   04 04 00 00 01 dc ff ff  24 04 00 00 59 dc ff ff   |........$...Y...|
0x804aa20:   48 04 00 00 ab dc ff ff  6c 04 00 00 e8 dc ff ff   |H.......l.......|
0x804aa30:   8c 04 00 00 1f dd ff ff  ac 04 00 00 3e dd ff ff   |............>...|
0x804aa40:   cc 04 00 00 68 dd ff ff  ec 04 00 00 94 dd ff ff   |....h...........|
0x804aa50:   0c 05 00 00 bf dd ff ff  2c 05 00 00 08 de ff ff   |........,.......|
0x804aa60:   4c 05 00 00 4f de ff ff  6c 05 00 00 a9 de ff ff   |L...O...l.......|
0x804aa70:   90 05 00 00 fd de ff ff  b4 05 00 00 3c df ff ff   |............<...|
0x804aa80:   d4 05 00 00 75 df ff ff  f4 05 00 00 97 df ff ff   |....u...........|
0x804aa90:   14 06 00 00 e5 df ff ff  34 06 00 00 21 e0 ff ff   |........4...!...|
0x804aaa0:   54 06 00 00 aa e0 ff ff  74 06 00 00 dc e0 ff ff   |T.......t.......|
0x804aab0:   94 06 00 00 0c e1 ff ff  b4 06 00 00 51 e1 ff ff   |............Q...|
0x804aac0:   d4 06 00 00 90 e1 ff ff  f4 06 00 00 c2 e1 ff ff   |................|
0x804aad0:   14 07 00 00 ee e1 ff ff  34 07 00 00 0c e2 ff ff   |........4.......|
0x804aae0:   54 07 00 00 34 e2 ff ff  74 07 00 00 59 e2 ff ff   |T...4...t...Y...|
0x804aaf0:   94 07 00 00 7e e2 ff ff  b4 07 00 00 b5 e2 ff ff   |....~...........|
0x804ab00:   d4 07 00 00 e9 e2 ff ff  f4 07 00 00 3b e3 ff ff   |............;...|
0x804ab10:   18 08 00 00 87 e3 ff ff  3c 08 00 00 be e3 ff ff   |........<.......|
0x804ab20:   5c 08 00 00 ef e3 ff ff  7c 08 00 00 0e e4 ff ff   |\.......|.......|
0x804ab30:   9c 08 00 00 38 e4 ff ff  bc 08 00 00 60 e4 ff ff   |....8.......`...|
0x804ab40:   dc 08 00 00 89 e4 ff ff  fc 08 00 00 c5 e4 ff ff   |................|
0x804ab50:   1c 09 00 00 ff e4 ff ff  3c 09 00 00 52 e5 ff ff   |........<...R...|
0x804ab60:   60 09 00 00 9f e5 ff ff  84 09 00 00 d7 e5 ff ff   |`...............|
0x804ab70:   a4 09 00 00 09 e6 ff ff  c4 09 00 00 1d e6 ff ff   |................|
0x804ab80:   e4 09 00 00 34 e6 ff ff  04 0a 00 00 49 e6 ff ff   |....4.......I...|
0x804ab90:   24 0a 00 00 5f e6 ff ff  44 0a 00 00 86 e6 ff ff   |$..._...D.......|
0x804aba0:   64 0a 00 00 ab e6 ff ff  84 0a 00 00 ea e6 ff ff   |d...............|
0x804abb0:   a4 0a 00 00 23 e7 ff ff  c4 0a 00 00 4f e7 ff ff   |....#.......O...|
0x804abc0:   e4 0a 00 00 75 e7 ff ff  04 0b 00 00 b7 e7 ff ff   |....u...........|
0x804abd0:   24 0b 00 00 f9 e7 ff ff  44 0b 00 00 3b e8 ff ff   |$.......D...;...|
0x804abe0:   64 0b 00 00 b0 e8 ff ff  84 0b 00 00 0d e9 ff ff   |d...............|
0x804abf0:   a4 0b 00 00 6a e9 ff ff  c4 0b 00 00 c7 e9 ff ff   |....j...........|
0x804ac00:   e4 0b 00 00 57 ea ff ff  04 0c 00 00 bb ea ff ff   |....W...........|
0x804ac10:   24 0c 00 00 2b eb ff ff  44 0c 00 00 72 eb ff ff   |$...+...D...r...|
0x804ac20:   68 0c 00 00 c7 eb ff ff  88 0c 00 00 0e ec ff ff   |h...............|
0x804ac30:   ac 0c 00 00 76 ec ff ff  d0 0c 00 00 a4 ec ff ff   |....v...........|
0x804ac40:   f4 0c 00 00 d3 ed ff ff  24 0d 00 00 a3 fb ff ff   |........$.......|
0x804ac50:   54 0d 00 00 43 fe ff ff  8c 0d 00 00 50 fe ff ff   |T...C.......P...|
0x804ac60:   a0 0d 00 00 b0 fe ff ff  ec 0d 00 00 14            |.............   |
; section: .eh_frame
0x804ac6c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804ac7c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804ac8c:   f4 d6 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804ac9c:   30 00 00 00 50 d6 ff ff  40 00 00 00 00 0e 08 46   |0...P...@......F|
0x804acac:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804acbc:   10 00 00 00 54 00 00 00  6c d6 ff ff 08 00 00 00   |....T...l.......|
0x804accc:   00 00 00 00 1c 00 00 00  68 00 00 00 7e d7 ff ff   |........h...~...|
0x804acdc:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804acec:   04 04 00 00 20 00 00 00  88 00 00 00 6e d7 ff ff   |.... .......n...|
0x804acfc:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804ad0c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804ad1c:   78 d7 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |x........A....B.|
0x804ad2c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804ad3c:   76 d7 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |v...(....A....B.|
0x804ad4c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804ad5c:   7e d7 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |~...*....A....B.|
0x804ad6c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804ad7c:   88 d7 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804ad8c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804ad9c:   91 d7 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804adac:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804adbc:   b4 d7 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804adcc:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804addc:   d5 d7 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804adec:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804adfc:   90 01 00 00 09 d8 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804ae0c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804ae1c:   1c 00 00 00 b4 01 00 00  37 d8 ff ff 3d 00 00 00   |........7...=...|
0x804ae2c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804ae3c:   1c 00 00 00 d4 01 00 00  54 d8 ff ff 37 00 00 00   |........T...7...|
0x804ae4c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804ae5c:   1c 00 00 00 f4 01 00 00  6b d8 ff ff 1f 00 00 00   |........k.......|
0x804ae6c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804ae7c:   1c 00 00 00 14 02 00 00  6a d8 ff ff 2a 00 00 00   |........j...*...|
0x804ae8c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804ae9c:   1c 00 00 00 34 02 00 00  74 d8 ff ff 2c 00 00 00   |....4...t...,...|
0x804aeac:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804aebc:   1c 00 00 00 54 02 00 00  80 d8 ff ff 2b 00 00 00   |....T.......+...|
0x804aecc:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804aedc:   1c 00 00 00 74 02 00 00  8b d8 ff ff 49 00 00 00   |....t.......I...|
0x804aeec:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804aefc:   1c 00 00 00 94 02 00 00  b4 d8 ff ff 47 00 00 00   |............G...|
0x804af0c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804af1c:   20 00 00 00 b4 02 00 00  db d8 ff ff 5a 00 00 00   | ...........Z...|
0x804af2c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804af3c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 11 d9 ff ff   |.... ...........|
0x804af4c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804af5c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804af6c:   41 d9 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |A...?....A....B.|
0x804af7c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804af8c:   60 d9 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |`...9....A....B.|
0x804af9c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804afac:   79 d9 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |y..."....A....B.|
0x804afbc:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804afcc:   7b d9 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |{...N....A....B.|
0x804afdc:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804afec:   a9 d9 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804affc:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b00c:   c5 d9 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b01c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b02c:   2e da ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b03c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b04c:   40 da ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |@...0....A....B.|
0x804b05c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b06c:   50 da ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |P...E....A....B.|
0x804b07c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b08c:   75 da ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |u...?....A....B.|
0x804b09c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b0ac:   94 da ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b0bc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b0cc:   a6 da ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b0dc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b0ec:   b2 da ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b0fc:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b10c:   b0 da ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b11c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b12c:   b8 da ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b13c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b14c:   bd da ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b15c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b16c:   c2 da ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b17c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b18c:   d9 da ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b19c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b1ac:   ed da ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b1bc:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b1cc:   60 05 00 00 1b db ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b1dc:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b1ec:   1c 00 00 00 84 05 00 00  43 db ff ff 37 00 00 00   |........C...7...|
0x804b1fc:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b20c:   1c 00 00 00 a4 05 00 00  5a db ff ff 31 00 00 00   |........Z...1...|
0x804b21c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b22c:   1c 00 00 00 c4 05 00 00  6b db ff ff 1f 00 00 00   |........k.......|
0x804b23c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b24c:   1c 00 00 00 e4 05 00 00  6a db ff ff 2a 00 00 00   |........j...*...|
0x804b25c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b26c:   1c 00 00 00 04 06 00 00  74 db ff ff 28 00 00 00   |........t...(...|
0x804b27c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b28c:   1c 00 00 00 24 06 00 00  7c db ff ff 29 00 00 00   |....$...|...)...|
0x804b29c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b2ac:   1c 00 00 00 44 06 00 00  85 db ff ff 3c 00 00 00   |....D.......<...|
0x804b2bc:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b2cc:   1c 00 00 00 64 06 00 00  a1 db ff ff 3a 00 00 00   |....d.......:...|
0x804b2dc:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b2ec:   20 00 00 00 84 06 00 00  bb db ff ff 53 00 00 00   | ...........S...|
0x804b2fc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b30c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 ea db ff ff   |.... ...........|
0x804b31c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b32c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b33c:   13 dc ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b34c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b35c:   2b dc ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |+...2....A....B.|
0x804b36c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b37c:   3d dc ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |=........A....B.|
0x804b38c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b39c:   31 dc ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |1........A....B.|
0x804b3ac:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b3bc:   28 dc ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |(........A....B.|
0x804b3cc:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b3dc:   1d dc ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b3ec:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b3fc:   13 dc ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b40c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b41c:   1a dc ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b42c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b43c:   1f dc ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b44c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b45c:   3e dc ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |>...9....A....B.|
0x804b46c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b47c:   57 dc ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |W...,....A....B.|
0x804b48c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b49c:   63 dc ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |c...&....A....B.|
0x804b4ac:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b4bc:   69 dc ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |i...B....A....B.|
0x804b4cc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b4dc:   8b dc ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b4ec:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b4fc:   ad dc ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b50c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b51c:   cf dc ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804b52c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b53c:   24 dd ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |$...]....A....B.|
0x804b54c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b55c:   61 dd ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |a...]....A....B.|
0x804b56c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b57c:   9e dd ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b58c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b59c:   db dd ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b5ac:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b5bc:   4b de ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |K...d....A....B.|
0x804b5cc:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b5dc:   8f de ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804b5ec:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b5fc:   df de ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b60c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b61c:   b0 09 00 00 02 df ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804b62c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b63c:   d0 09 00 00 37 df ff ff  47 00 00 00 00 41 0e 08   |....7...G....A..|
0x804b64c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b65c:   20 00 00 00 f4 09 00 00  5a df ff ff 68 00 00 00   | .......Z...h...|
0x804b66c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b67c:   0c 04 04 00 20 00 00 00  18 0a 00 00 9e df ff ff   |.... ...........|
0x804b68c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b69c:   66 c5 c3 0c 04 04 00 00  2c 00 00 00 3c 0a 00 00   |f.......,...<...|
0x804b6ac:   a8 df ff ff 2f 01 00 00  00 41 0e 08 85 02 42 0d   |..../....A....B.|
0x804b6bc:   05 46 87 03 86 04 83 05  03 22 01 c3 41 c6 41 c7   |.F......."..A.A.|
0x804b6cc:   41 c5 0c 04 04 00 00 00  2c 00 00 00 6c 0a 00 00   |A.......,...l...|
0x804b6dc:   a7 e0 ff ff d0 0d 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b6ec:   05 49 87 03 86 04 83 05  03 c0 0d c3 41 c6 41 c7   |.I..........A.A.|
0x804b6fc:   41 c5 0c 04 04 00 00 00  34 00 00 00 9c 0a 00 00   |A.......4.......|
0x804b70c:   47 ee ff ff a0 02 00 00  00 44 0c 01 00 47 10 05   |G........D...G..|
0x804b71c:   02 75 00 44 0f 03 75 78  06 10 03 02 75 7c 03 8b   |.u.D..ux....u|..|
0x804b72c:   02 c1 0c 01 00 41 c3 41  c5 43 0c 04 04 00 00 00   |.....A.A.C......|
0x804b73c:   10 00 00 00 d4 0a 00 00  af f0 ff ff 04 00 00 00   |................|
0x804b74c:   00 00 00 00 48 00 00 00  e8 0a 00 00 a8 f0 ff ff   |....H...........|
0x804b75c:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804b76c:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804b77c:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804b78c:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804b79c:   10 00 00 00 34 0b 00 00  bc f0 ff ff 02 00 00 00   |....4...........|
0x804b7ac:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 64 a8 04 08  19 00 00 00 0c cf 04 08   |....d...........|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff ff ff 00 00   |................|
0x804d028:   07 00 00 00 ff ff 00 00  01 0d ea 57 f4 f6 00 00   |...........W....|
0x804d038:   ab 27 d7 5d 50 5a 00 00  fc ff ff ff 6a f5 a6 ff   |.'.]PZ......j...|
0x804d048:   01 00 00 00 ff ff ff ff  01 00 00 00 01 00 00 00   |................|
0x804d058:   23 de 75 26 b9 2e 7e 09  00                        |#.u&..~..       |
