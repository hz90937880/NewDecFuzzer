;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:44:17
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 60 d2 ff ff               	lea eax, [ebx - 0x2da0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 00 d2 ff ff               	lea eax, [ebx - 0x2e00]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 5b ae 04 08               	mov eax, 0x804ae5b
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 74 e0 04 08                  	mov eax, 0x804e074
0x80483a5:   3d 74 e0 04 08                  	cmp eax, 0x804e074
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 74 e0 04 08                  	push 0x804e074
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 74 e0 04 08                  	mov eax, 0x804e074
0x80483e5:   2d 74 e0 04 08                  	sub eax, 0x804e074
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 74 e0 04 08                  	push 0x804e074
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 e0 04 08 00            	cmp byte ptr [0x804e080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 e0 04 08 01            	mov byte ptr [0x804e080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 91 2d 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 7d 2d 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 80 d2 ff ff               	lea edx, [eax - 0x2d80]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 50 2d 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 32 2d 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 0a 2d 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 e0 2c 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 b7 2c 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 74 2c 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 32 2c 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 da 2b 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 89 2b 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 4c 2b 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 15 2b 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 f6 2a 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 cc 2a 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 a0 2a 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 75 2a 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 2c 2a 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 e4 29 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 8a 29 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 37 29 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 f8 28 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 c2 28 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 a0 28 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 52 28 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 16 28 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 8d 27 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 5b 27 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 2b 27 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 e6 26 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 a7 26 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 75 26 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 46 26 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 28 26 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 00 26 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 db 25 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 b6 25 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 7f 25 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 4a 25 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 f8 24 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 ad 24 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 76 24 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 45 24 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 26 24 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 fc 23 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 d4 23 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 ab 23 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 6f 23 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 34 23 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 e1 22 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 95 22 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 5d 22 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 2e 22 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 1a 22 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 03 22 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 ee 21 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 d8 21 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 b1 21 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 8c 21 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 4d 21 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 14 21 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 e8 20 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 c2 20 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 70 d3 ff ff               	fld dword ptr [eax - 0x2c90]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 70 d3 ff ff               	fld dword ptr [eax - 0x2c90]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 74 d3 ff ff               	fld dword ptr [eax - 0x2c8c]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 80 20 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 70 d3 ff ff               	fld dword ptr [eax - 0x2c90]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 70 d3 ff ff               	fld dword ptr [eax - 0x2c90]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 74 d3 ff ff               	fld dword ptr [eax - 0x2c8c]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 3e 20 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 78 d3 ff ff               	fld dword ptr [eax - 0x2c88]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 7c d3 ff ff               	fld dword ptr [eax - 0x2c84]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 80 d3 ff ff               	fld dword ptr [eax - 0x2c80]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 fc 1f 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 84 d3 ff ff               	fld dword ptr [eax - 0x2c7c]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 88 d3 ff ff               	fld dword ptr [eax - 0x2c78]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 8c d3 ff ff               	fld dword ptr [eax - 0x2c74]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 84 1f 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 90 d3 ff ff               	fld qword ptr [eax - 0x2c70]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 90 d3 ff ff               	fld qword ptr [eax - 0x2c70]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 98 d3 ff ff               	fld qword ptr [eax - 0x2c68]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 27 1f 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 90 d3 ff ff               	fld qword ptr [eax - 0x2c70]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 90 d3 ff ff               	fld qword ptr [eax - 0x2c70]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 98 d3 ff ff               	fld qword ptr [eax - 0x2c68]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 ca 1e 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 a0 d3 ff ff               	fld qword ptr [eax - 0x2c60]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 a8 d3 ff ff               	fld qword ptr [eax - 0x2c58]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 b0 d3 ff ff               	fld qword ptr [eax - 0x2c50]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 6d 1e 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 b8 d3 ff ff               	fld qword ptr [eax - 0x2c48]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 c0 d3 ff ff               	fld qword ptr [eax - 0x2c40]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 c8 d3 ff ff               	fld qword ptr [eax - 0x2c38]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 dd 1d 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 d0 d3 ff ff               	fld dword ptr [eax - 0x2c30]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 d4 d3 ff ff               	fld dword ptr [eax - 0x2c2c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 79 1d 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 08 1d 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 c5 1c 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 90 d2 ff ff               	lea eax, [ebx - 0x2d70]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 b4 d2 ff ff               	lea eax, [ebx - 0x2d4c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: packed_printf at 0x8049626 -- 0x8049654
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   53                              	push ebx
0x804962a:   83 ec 04                        	sub esp, 4
0x804962d:   e8 bd 1b 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8049632:   05 ce 49 00 00                  	add eax, 0x49ce
0x8049637:   83 ec 08                        	sub esp, 8
0x804963a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804963d:   8d 90 d8 d2 ff ff               	lea edx, [eax - 0x2d28]
0x8049643:   52                              	push edx
0x8049644:   89 c3                           	mov ebx, eax
0x8049646:   e8 c5 ec ff ff                  	call 0x8048310 <printf>
0x804964b:   83 c4 10                        	add esp, 0x10
0x804964e:   90                              	nop 
0x804964f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049652:   c9                              	leave 
0x8049653:   c3                              	ret 
; function: set_var at 0x8049654 -- 0x80497f8
0x8049654:   55                              	push ebp
0x8049655:   89 e5                           	mov ebp, esp
0x8049657:   57                              	push edi
0x8049658:   56                              	push esi
0x8049659:   53                              	push ebx
0x804965a:   83 ec 4c                        	sub esp, 0x4c
0x804965d:   e8 91 1b 00 00                  	call 0x804b1f3 <__x86.get_pc_thunk.dx>
0x8049662:   81 c2 9e 49 00 00               	add edx, 0x499e
0x8049668:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804966b:   8b 4d 10                        	mov ecx, dword ptr [ebp + 0x10]
0x804966e:   8b 5d 14                        	mov ebx, dword ptr [ebp + 0x14]
0x8049671:   8b 75 1c                        	mov esi, dword ptr [ebp + 0x1c]
0x8049674:   8b 7d 24                        	mov edi, dword ptr [ebp + 0x24]
0x8049677:   89 7d c0                        	mov dword ptr [ebp - 0x40], edi
0x804967a:   8b 7d 2c                        	mov edi, dword ptr [ebp + 0x2c]
0x804967d:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x8049680:   8b 7d 34                        	mov edi, dword ptr [ebp + 0x34]
0x8049683:   89 7d b8                        	mov dword ptr [ebp - 0x48], edi
0x8049686:   8b 7d 40                        	mov edi, dword ptr [ebp + 0x40]
0x8049689:   89 7d b4                        	mov dword ptr [ebp - 0x4c], edi
0x804968c:   8b 7d 4c                        	mov edi, dword ptr [ebp + 0x4c]
0x804968f:   89 7d b0                        	mov dword ptr [ebp - 0x50], edi
0x8049692:   8b 7d 50                        	mov edi, dword ptr [ebp + 0x50]
0x8049695:   89 7d ac                        	mov dword ptr [ebp - 0x54], edi
0x8049698:   8b 7d 60                        	mov edi, dword ptr [ebp + 0x60]
0x804969b:   89 7d a8                        	mov dword ptr [ebp - 0x58], edi
0x804969e:   8b 7d 6c                        	mov edi, dword ptr [ebp + 0x6c]
0x80496a1:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x80496a5:   89 c8                           	mov eax, ecx
0x80496a7:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x80496aa:   89 d8                           	mov eax, ebx
0x80496ac:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x80496b0:   89 f0                           	mov eax, esi
0x80496b2:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496b5:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x80496b9:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x80496bc:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x80496c0:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496c3:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x80496c7:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496cb:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x80496cf:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496d2:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x80496d6:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496da:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x80496de:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496e2:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80496e6:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496e9:   89 f8                           	mov eax, edi
0x80496eb:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496ef:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80496f2:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x80496f8:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x80496fc:   66 89 82 28 00 00 00            	mov word ptr [edx + 0x28], ax
0x8049703:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x8049707:   88 82 2a 00 00 00               	mov byte ptr [edx + 0x2a], al
0x804970d:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049711:   66 89 82 2c 00 00 00            	mov word ptr [edx + 0x2c], ax
0x8049718:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x804971b:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x8049721:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x8049725:   88 82 a4 04 00 00               	mov byte ptr [edx + 0x4a4], al
0x804972b:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x804972e:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x8049734:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049738:   88 82 38 00 00 00               	mov byte ptr [edx + 0x38], al
0x804973e:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x8049741:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x8049747:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x804974b:   88 82 40 00 00 00               	mov byte ptr [edx + 0x40], al
0x8049751:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049754:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x804975a:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x804975e:   66 89 82 48 00 00 00            	mov word ptr [edx + 0x48], ax
0x8049765:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049768:   89 82 a8 04 00 00               	mov dword ptr [edx + 0x4a8], eax
0x804976e:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x8049771:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x8049777:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x804977b:   88 82 50 00 00 00               	mov byte ptr [edx + 0x50], al
0x8049781:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049784:   89 82 ac 04 00 00               	mov dword ptr [edx + 0x4ac], eax
0x804978a:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x804978d:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x8049793:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x8049797:   66 89 82 b0 04 00 00            	mov word ptr [edx + 0x4b0], ax
0x804979e:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x80497a2:   66 89 82 58 00 00 00            	mov word ptr [edx + 0x58], ax
0x80497a9:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x80497ac:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x80497b2:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x80497b5:   89 82 b4 04 00 00               	mov dword ptr [edx + 0x4b4], eax
0x80497bb:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x80497be:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x80497c4:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497c8:   88 82 64 00 00 00               	mov byte ptr [edx + 0x64], al
0x80497ce:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x80497d1:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x80497d7:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x80497da:   89 82 6c 00 00 00               	mov dword ptr [edx + 0x6c], eax
0x80497e0:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80497e4:   66 89 82 70 00 00 00            	mov word ptr [edx + 0x70], ax
0x80497eb:   b8 00 00 00 00                  	mov eax, 0
0x80497f0:   83 c4 4c                        	add esp, 0x4c
0x80497f3:   5b                              	pop ebx
0x80497f4:   5e                              	pop esi
0x80497f5:   5f                              	pop edi
0x80497f6:   5d                              	pop ebp
0x80497f7:   c3                              	ret 
; function: func_1 at 0x80497f8 -- 0x804ae5b
0x80497f8:   55                              	push ebp
0x80497f9:   89 e5                           	mov ebp, esp
0x80497fb:   57                              	push edi
0x80497fc:   56                              	push esi
0x80497fd:   53                              	push ebx
0x80497fe:   81 ec a8 01 00 00               	sub esp, 0x1a8
0x8049804:   e8 e6 19 00 00                  	call 0x804b1ef <__x86.get_pc_thunk.ax>
0x8049809:   05 f7 47 00 00                  	add eax, 0x47f7
0x804980e:   c7 45 f0 0e 72 f5 0c            	mov dword ptr [ebp - 0x10], 0xcf5720e
0x8049815:   66 c7 45 94 01 00               	mov word ptr [ebp - 0x6c], 1
0x804981b:   c6 45 ef 92                     	mov byte ptr [ebp - 0x11], 0x92
0x804981f:   66 c7 45 ec 72 ee               	mov word ptr [ebp - 0x14], 0xee72
0x8049825:   c7 45 e8 fd ff ff ff            	mov dword ptr [ebp - 0x18], 0xfffffffd
0x804982c:   c6 45 93 00                     	mov byte ptr [ebp - 0x6d], 0
0x8049830:   c7 45 e4 dc 77 a5 d3            	mov dword ptr [ebp - 0x1c], 0xd3a577dc
0x8049837:   c6 45 92 09                     	mov byte ptr [ebp - 0x6e], 9
0x804983b:   c7 45 e0 a2 2e a0 95            	mov dword ptr [ebp - 0x20], 0x95a02ea2
0x8049842:   c6 45 91 ff                     	mov byte ptr [ebp - 0x6f], 0xff
0x8049846:   c7 45 8c 6c 23 be c0            	mov dword ptr [ebp - 0x74], 0xc0be236c
0x804984d:   66 c7 45 de fa ff               	mov word ptr [ebp - 0x22], 0xfffa
0x8049853:   c7 45 d8 00 00 00 00            	mov dword ptr [ebp - 0x28], 0
0x804985a:   c7 45 88 fb ff ff ff            	mov dword ptr [ebp - 0x78], 0xfffffffb
0x8049861:   c6 45 d7 4e                     	mov byte ptr [ebp - 0x29], 0x4e
0x8049865:   c7 45 d0 00 00 00 00            	mov dword ptr [ebp - 0x30], 0
0x804986c:   c7 45 cc ff ff ff ff            	mov dword ptr [ebp - 0x34], 0xffffffff
0x8049873:   66 c7 45 ca 00 00               	mov word ptr [ebp - 0x36], 0
0x8049879:   66 c7 45 c8 99 c7               	mov word ptr [ebp - 0x38], 0xc799
0x804987f:   c7 45 c4 ff ff ff ff            	mov dword ptr [ebp - 0x3c], 0xffffffff
0x8049886:   c7 45 c0 00 00 00 00            	mov dword ptr [ebp - 0x40], 0
0x804988d:   c7 45 84 c4 7f cc e5            	mov dword ptr [ebp - 0x7c], 0xe5cc7fc4
0x8049894:   c6 45 bf 44                     	mov byte ptr [ebp - 0x41], 0x44
0x8049898:   c7 45 80 d9 fe 15 e2            	mov dword ptr [ebp - 0x80], 0xe215fed9
0x804989f:   c7 45 b8 42 d6 f5 c4            	mov dword ptr [ebp - 0x48], 0xc4f5d642
0x80498a6:   66 c7 45 b6 08 00               	mov word ptr [ebp - 0x4a], 8
0x80498ac:   66 c7 85 7e ff ff ff 00 00      	mov word ptr [ebp - 0x82], 0
0x80498b5:   c7 85 78 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0x88], 0xfffffffe
0x80498bf:   c7 85 74 ff ff ff da 35 0d 70   	mov dword ptr [ebp - 0x8c], 0x700d35da
0x80498c9:   c7 85 70 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x90], 1
0x80498d3:   c7 45 b0 ff ff ff ff            	mov dword ptr [ebp - 0x50], 0xffffffff
0x80498da:   c7 85 6c ff ff ff 07 00 00 00   	mov dword ptr [ebp - 0x94], 7
0x80498e4:   c6 85 6b ff ff ff 00            	mov byte ptr [ebp - 0x95], 0
0x80498eb:   66 c7 85 68 ff ff ff ff ff      	mov word ptr [ebp - 0x98], 0xffff
0x80498f4:   c7 85 64 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x9c], 0xffffffff
0x80498fe:   c6 85 63 ff ff ff 50            	mov byte ptr [ebp - 0x9d], 0x50
0x8049905:   66 c7 45 ae 00 00               	mov word ptr [ebp - 0x52], 0
0x804990b:   c7 85 5c ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0xa4], 8
0x8049915:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049918:   66 89 45 94                     	mov word ptr [ebp - 0x6c], ax
0x804991c:   66 83 bd 7e ff ff ff 00         	cmp word ptr [ebp - 0x82], 0
0x8049924:   74 1e                           	je 0x8049944 <func_1+0x14c>
0x8049926:   0f b7 45 94                     	movzx eax, word ptr [ebp - 0x6c]
0x804992a:   0f b6 d0                        	movzx edx, al
0x804992d:   89 d0                           	mov eax, edx
0x804992f:   c1 e0 06                        	shl eax, 6
0x8049932:   01 d0                           	add eax, edx
0x8049934:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804993a:   0f bf 45 94                     	movsx eax, word ptr [ebp - 0x6c]
0x804993e:   39 85 78 ff ff ff               	cmp dword ptr [ebp - 0x88], eax
0x8049944:   66 83 bd 7e ff ff ff 01         	cmp word ptr [ebp - 0x82], 1
0x804994c:   0f 95 c0                        	setne al
0x804994f:   0f b6 c0                        	movzx eax, al
0x8049952:   89 c2                           	mov edx, eax
0x8049954:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x8049958:   09 d0                           	or eax, edx
0x804995a:   88 45 ef                        	mov byte ptr [ebp - 0x11], al
0x804995d:   0f bf 85 7e ff ff ff            	movsx eax, word ptr [ebp - 0x82]
0x8049964:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804996a:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x8049970:   25 85 00 00 00                  	and eax, 0x85
0x8049975:   85 c0                           	test eax, eax
0x8049977:   74 0e                           	je 0x8049987 <func_1+0x18f>
0x8049979:   66 83 7d 94 00                  	cmp word ptr [ebp - 0x6c], 0
0x804997e:   74 07                           	je 0x8049987 <func_1+0x18f>
0x8049980:   b8 01 00 00 00                  	mov eax, 1
0x8049985:   eb 05                           	jmp 0x804998c <func_1+0x194>
0x8049987:   b8 00 00 00 00                  	mov eax, 0
0x804998c:   f7 d0                           	not eax
0x804998e:   89 c2                           	mov edx, eax
0x8049990:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x8049994:   09 d0                           	or eax, edx
0x8049996:   89 c1                           	mov ecx, eax
0x8049998:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804999b:   89 c2                           	mov edx, eax
0x804999d:   0f b6 c1                        	movzx eax, cl
0x80499a0:   f6 f2                           	div dl
0x80499a2:   0f b6 c0                        	movzx eax, al
0x80499a5:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x80499ab:   0f bf 85 7e ff ff ff            	movsx eax, word ptr [ebp - 0x82]
0x80499b2:   0b 85 74 ff ff ff               	or eax, dword ptr [ebp - 0x8c]
0x80499b8:   3d 00 c0 fe 1f                  	cmp eax, 0x1ffec000
0x80499bd:   0f 9e c0                        	setle al
0x80499c0:   0f b6 c0                        	movzx eax, al
0x80499c3:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x80499c6:   0f 9e c0                        	setle al
0x80499c9:   0f b6 d0                        	movzx edx, al
0x80499cc:   0f bf 85 7e ff ff ff            	movsx eax, word ptr [ebp - 0x82]
0x80499d3:   29 c2                           	sub edx, eax
0x80499d5:   89 d0                           	mov eax, edx
0x80499d7:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x80499dd:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x80499e3:   0f be c0                        	movsx eax, al
0x80499e6:   c1 e0 04                        	shl eax, 4
0x80499e9:   83 f8 fb                        	cmp eax, -5
0x80499ec:   0f 94 c0                        	sete al
0x80499ef:   0f b6 d0                        	movzx edx, al
0x80499f2:   0f bf 85 7e ff ff ff            	movsx eax, word ptr [ebp - 0x82]
0x80499f9:   39 c2                           	cmp edx, eax
0x80499fb:   7f 07                           	jg 0x8049a04 <func_1+0x20c>
0x80499fd:   b8 d9 d1 00 00                  	mov eax, 0xd1d9
0x8049a02:   eb 05                           	jmp 0x8049a09 <func_1+0x211>
0x8049a04:   b8 d8 d1 00 00                  	mov eax, 0xd1d8
0x8049a09:   31 45 b0                        	xor dword ptr [ebp - 0x50], eax
0x8049a0c:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x8049a10:   75 09                           	jne 0x8049a1b <func_1+0x223>
0x8049a12:   83 bd 74 ff ff ff 00            	cmp dword ptr [ebp - 0x8c], 0
0x8049a19:   74 07                           	je 0x8049a22 <func_1+0x22a>
0x8049a1b:   b8 01 00 00 00                  	mov eax, 1
0x8049a20:   eb 05                           	jmp 0x8049a27 <func_1+0x22f>
0x8049a22:   b8 00 00 00 00                  	mov eax, 0
0x8049a27:   85 c0                           	test eax, eax
0x8049a29:   0f 9f c0                        	setg al
0x8049a2c:   0f b6 d0                        	movzx edx, al
0x8049a2f:   0f b7 45 94                     	movzx eax, word ptr [ebp - 0x6c]
0x8049a33:   0f b7 c0                        	movzx eax, ax
0x8049a36:   01 d0                           	add eax, edx
0x8049a38:   85 c0                           	test eax, eax
0x8049a3a:   0f 95 c0                        	setne al
0x8049a3d:   88 85 6b ff ff ff               	mov byte ptr [ebp - 0x95], al
0x8049a43:   0f b6 95 6b ff ff ff            	movzx edx, byte ptr [ebp - 0x95]
0x8049a4a:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x8049a4e:   01 d0                           	add eax, edx
0x8049a50:   0f be c0                        	movsx eax, al
0x8049a53:   6b c0 bc                        	imul eax, eax, -0x44
0x8049a56:   3d 1e d9 ff ff                  	cmp eax, 0xffffd91e
0x8049a5b:   0f 84 6d 09 00 00               	je 0x804a3ce <func_1+0xbd6>
0x8049a61:   c7 85 bc fe ff ff b1 0d af fd   	mov dword ptr [ebp - 0x144], 0xfdaf0db1
0x8049a6b:   c7 85 b8 fe ff ff 04 b1 3e 79   	mov dword ptr [ebp - 0x148], 0x793eb104
0x8049a75:   c7 45 a8 58 08 5a 00            	mov dword ptr [ebp - 0x58], 0x5a0858
0x8049a7c:   c7 85 b4 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x14c], 0xffffffff
0x8049a86:   c6 85 b3 fe ff ff 58            	mov byte ptr [ebp - 0x14d], 0x58
0x8049a8d:   66 c7 85 b0 fe ff ff 06 00      	mov word ptr [ebp - 0x150], 6
0x8049a96:   c7 85 78 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x88], 0
0x8049aa0:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049aa3:   0f b7 c0                        	movzx eax, ax
0x8049aa6:   c1 e0 0c                        	shl eax, 0xc
0x8049aa9:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049aac:   7c 07                           	jl 0x8049ab5 <func_1+0x2bd>
0x8049aae:   b8 01 00 00 00                  	mov eax, 1
0x8049ab3:   eb 05                           	jmp 0x8049aba <func_1+0x2c2>
0x8049ab5:   b8 00 00 00 00                  	mov eax, 0
0x8049aba:   84 c0                           	test al, al
0x8049abc:   74 4d                           	je 0x8049b0b <func_1+0x313>
0x8049abe:   c7 85 70 fe ff ff 35 33 be 7a   	mov dword ptr [ebp - 0x190], 0x7abe3335
0x8049ac8:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049ace:   89 c2                           	mov edx, eax
0x8049ad0:   8b 85 bc fe ff ff               	mov eax, dword ptr [ebp - 0x144]
0x8049ad6:   21 d0                           	and eax, edx
0x8049ad8:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x8049adc:   c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x8049ae3:   0f b7 85 68 ff ff ff            	movzx eax, word ptr [ebp - 0x98]
0x8049aea:   89 85 b8 fe ff ff               	mov dword ptr [ebp - 0x148], eax
0x8049af0:   0f be 55 93                     	movsx edx, byte ptr [ebp - 0x6d]
0x8049af4:   66 83 75 de 03                  	xor word ptr [ebp - 0x22], 3
0x8049af9:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049afd:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049b00:   0f 84 27 08 00 00               	je 0x804a32d <func_1+0xb35>
0x8049b06:   e9 14 08 00 00                  	jmp 0x804a31f <func_1+0xb27>
0x8049b0b:   c6 85 af fe ff ff 00            	mov byte ptr [ebp - 0x151], 0
0x8049b12:   c7 45 a4 01 00 00 00            	mov dword ptr [ebp - 0x5c], 1
0x8049b19:   66 c7 85 ac fe ff ff 9e 43      	mov word ptr [ebp - 0x154], 0x439e
0x8049b22:   66 83 7d 94 00                  	cmp word ptr [ebp - 0x6c], 0
0x8049b27:   0f 84 d8 00 00 00               	je 0x8049c05 <func_1+0x40d>
0x8049b2d:   c7 85 78 fe ff ff 07 00 00 00   	mov dword ptr [ebp - 0x188], 7
0x8049b37:   c7 85 74 fe ff ff 07 00 00 00   	mov dword ptr [ebp - 0x18c], 7
0x8049b41:   c6 45 93 fc                     	mov byte ptr [ebp - 0x6d], 0xfc
0x8049b45:   c7 45 e4 f7 ff ff ff            	mov dword ptr [ebp - 0x1c], 0xfffffff7
0x8049b4c:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x8049b50:   0f be 55 bf                     	movsx edx, byte ptr [ebp - 0x41]
0x8049b54:   0f bf 4d c8                     	movsx ecx, word ptr [ebp - 0x38]
0x8049b58:   0f bf 5d ca                     	movsx ebx, word ptr [ebp - 0x36]
0x8049b5c:   0f be 7d d7                     	movsx edi, byte ptr [ebp - 0x29]
0x8049b60:   89 bd 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], edi
0x8049b66:   0f b7 75 de                     	movzx esi, word ptr [ebp - 0x22]
0x8049b6a:   89 b5 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], esi
0x8049b70:   0f b6 7d 91                     	movzx edi, byte ptr [ebp - 0x6f]
0x8049b74:   89 bd 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], edi
0x8049b7a:   0f b6 75 92                     	movzx esi, byte ptr [ebp - 0x6e]
0x8049b7e:   89 b5 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], esi
0x8049b84:   0f be 7d 93                     	movsx edi, byte ptr [ebp - 0x6d]
0x8049b88:   89 bd 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edi
0x8049b8e:   0f bf 75 ec                     	movsx esi, word ptr [ebp - 0x14]
0x8049b92:   89 b5 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], esi
0x8049b98:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x8049b9c:   0f bf 75 94                     	movsx esi, word ptr [ebp - 0x6c]
0x8049ba0:   50                              	push eax
0x8049ba1:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049ba4:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049ba7:   52                              	push edx
0x8049ba8:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049bab:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049bae:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049bb1:   51                              	push ecx
0x8049bb2:   53                              	push ebx
0x8049bb3:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049bb6:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049bb9:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x8049bbf:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049bc2:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049bc5:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x8049bcb:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049bce:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x8049bd4:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049bd7:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x8049bdd:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049be0:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x8049be6:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049be9:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x8049bef:   57                              	push edi
0x8049bf0:   56                              	push esi
0x8049bf1:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049bf4:   e8 5b fa ff ff                  	call 0x8049654 <set_var>
0x8049bf9:   83 c4 68                        	add esp, 0x68
0x8049bfc:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x8049c00:   e9 4e 12 00 00                  	jmp 0x804ae53 <func_1+0x165b>
0x8049c05:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x8049c0c:   c6 85 ab fe ff ff 97            	mov byte ptr [ebp - 0x155], 0x97
0x8049c13:   66 c7 45 9e 31 7f               	mov word ptr [ebp - 0x62], 0x7f31
0x8049c19:   c7 45 98 01 00 00 00            	mov dword ptr [ebp - 0x68], 1
0x8049c20:   c7 85 a4 fe ff ff 03 00 00 00   	mov dword ptr [ebp - 0x15c], 3
0x8049c2a:   c7 85 a0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x160], 1
0x8049c34:   c7 45 f0 f0 ff ff ff            	mov dword ptr [ebp - 0x10], 0xfffffff0
0x8049c3b:   eb 79                           	jmp 0x8049cb6 <func_1+0x4be>
0x8049c3d:   66 c7 85 7c fe ff ff 00 00      	mov word ptr [ebp - 0x184], 0
0x8049c46:   80 bd ab fe ff ff 00            	cmp byte ptr [ebp - 0x155], 0
0x8049c4d:   0f 95 c0                        	setne al
0x8049c50:   0f b6 c0                        	movzx eax, al
0x8049c53:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049c56:   81 7d e4 93 00 00 00            	cmp dword ptr [ebp - 0x1c], 0x93
0x8049c5d:   0f 9e c0                        	setle al
0x8049c60:   0f b6 c0                        	movzx eax, al
0x8049c63:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x8049c69:   83 bd 74 ff ff ff 00            	cmp dword ptr [ebp - 0x8c], 0
0x8049c70:   74 22                           	je 0x8049c94 <func_1+0x49c>
0x8049c72:   c7 45 a8 01 00 00 00            	mov dword ptr [ebp - 0x58], 1
0x8049c79:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049c7c:   3b 45 f0                        	cmp eax, dword ptr [ebp - 0x10]
0x8049c7f:   0f 9c c0                        	setl al
0x8049c82:   0f b6 c0                        	movzx eax, al
0x8049c85:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049c88:   0f bf 85 ac fe ff ff            	movsx eax, word ptr [ebp - 0x154]
0x8049c8f:   31 45 e0                        	xor dword ptr [ebp - 0x20], eax
0x8049c92:   eb 17                           	jmp 0x8049cab <func_1+0x4b3>
0x8049c94:   66 c7 45 9e ff ff               	mov word ptr [ebp - 0x62], 0xffff
0x8049c9a:   c7 45 b0 00 00 00 00            	mov dword ptr [ebp - 0x50], 0
0x8049ca1:   0f b7 85 7c fe ff ff            	movzx eax, word ptr [ebp - 0x184]
0x8049ca8:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049cab:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x8049caf:   31 45 e0                        	xor dword ptr [ebp - 0x20], eax
0x8049cb2:   83 45 f0 02                     	add dword ptr [ebp - 0x10], 2
0x8049cb6:   83 7d f0 f0                     	cmp dword ptr [ebp - 0x10], -0x10
0x8049cba:   7c 81                           	jl 0x8049c3d <func_1+0x445>
0x8049cbc:   80 45 91 01                     	add byte ptr [ebp - 0x6f], 1
0x8049cc0:   66 83 7d 94 00                  	cmp word ptr [ebp - 0x6c], 0
0x8049cc5:   0f 84 8f 01 00 00               	je 0x8049e5a <func_1+0x662>
0x8049ccb:   c6 85 93 fe ff ff fe            	mov byte ptr [ebp - 0x16d], 0xfe
0x8049cd2:   c7 85 8c fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x174], 1
0x8049cdc:   0f b7 85 ac fe ff ff            	movzx eax, word ptr [ebp - 0x154]
0x8049ce3:   83 c0 09                        	add eax, 9
0x8049ce6:   0f bf d0                        	movsx edx, ax
0x8049ce9:   0f b6 8d 93 fe ff ff            	movzx ecx, byte ptr [ebp - 0x16d]
0x8049cf0:   81 7d e8 ae 00 00 00            	cmp dword ptr [ebp - 0x18], 0xae
0x8049cf7:   0f 97 c0                        	seta al
0x8049cfa:   0f b6 c0                        	movzx eax, al
0x8049cfd:   21 c8                           	and eax, ecx
0x8049cff:   98                              	cwde 
0x8049d00:   0f af c2                        	imul eax, edx
0x8049d03:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x8049d09:   0f 95 c0                        	setne al
0x8049d0c:   0f b6 c0                        	movzx eax, al
0x8049d0f:   2b 45 e0                        	sub eax, dword ptr [ebp - 0x20]
0x8049d12:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049d15:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x8049d1c:   e9 be 00 00 00                  	jmp 0x8049ddf <func_1+0x5e7>
0x8049d21:   c7 85 88 fe ff ff 08 00 00 00   	mov dword ptr [ebp - 0x178], 8
0x8049d2b:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049d2f:   83 c0 01                        	add eax, 1
0x8049d32:   66 89 45 de                     	mov word ptr [ebp - 0x22], ax
0x8049d36:   80 bd 6b ff ff ff cd            	cmp byte ptr [ebp - 0x95], 0xcd
0x8049d3d:   0f 96 c0                        	setbe al
0x8049d40:   0f b6 c0                        	movzx eax, al
0x8049d43:   0f b6 5d 92                     	movzx ebx, byte ptr [ebp - 0x6e]
0x8049d47:   99                              	cdq 
0x8049d48:   f7 fb                           	idiv ebx
0x8049d4a:   0f bf d0                        	movsx edx, ax
0x8049d4d:   0f bf 45 94                     	movsx eax, word ptr [ebp - 0x6c]
0x8049d51:   89 c1                           	mov ecx, eax
0x8049d53:   d3 e2                           	shl edx, cl
0x8049d55:   89 d0                           	mov eax, edx
0x8049d57:   3d 26 9c 00 00                  	cmp eax, 0x9c26
0x8049d5c:   7e 05                           	jle 0x8049d63 <func_1+0x56b>
0x8049d5e:   66 83 7d ec 00                  	cmp word ptr [ebp - 0x14], 0
0x8049d63:   8b 85 88 fe ff ff               	mov eax, dword ptr [ebp - 0x178]
0x8049d69:   0f be c0                        	movsx eax, al
0x8049d6c:   83 e8 01                        	sub eax, 1
0x8049d6f:   09 45 b0                        	or dword ptr [ebp - 0x50], eax
0x8049d72:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049d75:   09 45 e0                        	or dword ptr [ebp - 0x20], eax
0x8049d78:   83 bd 88 fe ff ff 00            	cmp dword ptr [ebp - 0x178], 0
0x8049d7f:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049d82:   83 f8 08                        	cmp eax, 8
0x8049d85:   0f 96 c0                        	setbe al
0x8049d88:   0f b6 c0                        	movzx eax, al
0x8049d8b:   21 45 a8                        	and dword ptr [ebp - 0x58], eax
0x8049d8e:   0f b6 45 91                     	movzx eax, byte ptr [ebp - 0x6f]
0x8049d92:   39 45 a8                        	cmp dword ptr [ebp - 0x58], eax
0x8049d95:   0f 95 c0                        	setne al
0x8049d98:   0f b6 d0                        	movzx edx, al
0x8049d9b:   0f bf 45 ec                     	movsx eax, word ptr [ebp - 0x14]
0x8049d9f:   39 c2                           	cmp edx, eax
0x8049da1:   0f 9d c0                        	setge al
0x8049da4:   0f b6 c0                        	movzx eax, al
0x8049da7:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049daa:   66 83 7d de 00                  	cmp word ptr [ebp - 0x22], 0
0x8049daf:   75 29                           	jne 0x8049dda <func_1+0x5e2>
0x8049db1:   80 7d 92 03                     	cmp byte ptr [ebp - 0x6e], 3
0x8049db5:   83 45 d8 01                     	add dword ptr [ebp - 0x28], 1
0x8049db9:   8b 4d d8                        	mov ecx, dword ptr [ebp - 0x28]
0x8049dbc:   ba 65 0d b9 be                  	mov edx, 0xbeb90d65
0x8049dc1:   89 c8                           	mov eax, ecx
0x8049dc3:   f7 e2                           	mul edx
0x8049dc5:   89 d0                           	mov eax, edx
0x8049dc7:   c1 e8 1c                        	shr eax, 0x1c
0x8049dca:   69 c0 74 e7 79 15               	imul eax, eax, 0x1579e774
0x8049dd0:   29 c1                           	sub ecx, eax
0x8049dd2:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049dd5:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049dd8:   eb 01                           	jmp 0x8049ddb <func_1+0x5e3>
0x8049dda:   90                              	nop 
0x8049ddb:   83 6d a0 08                     	sub dword ptr [ebp - 0x60], 8
0x8049ddf:   83 7d a0 e8                     	cmp dword ptr [ebp - 0x60], -0x18
0x8049de3:   0f 85 38 ff ff ff               	jne 0x8049d21 <func_1+0x529>
0x8049de9:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x8049ded:   75 0a                           	jne 0x8049df9 <func_1+0x601>
0x8049def:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049df3:   31 85 8c fe ff ff               	xor dword ptr [ebp - 0x174], eax
0x8049df9:   80 bd 93 fe ff ff 00            	cmp byte ptr [ebp - 0x16d], 0
0x8049e00:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x8049e06:   0f b7 d0                        	movzx edx, ax
0x8049e09:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x8049e0d:   0f b7 c0                        	movzx eax, ax
0x8049e10:   01 d0                           	add eax, edx
0x8049e12:   85 c0                           	test eax, eax
0x8049e14:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049e17:   89 c2                           	mov edx, eax
0x8049e19:   0f b6 45 d7                     	movzx eax, byte ptr [ebp - 0x29]
0x8049e1d:   09 d0                           	or eax, edx
0x8049e1f:   88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x8049e22:   80 7d d7 00                     	cmp byte ptr [ebp - 0x29], 0
0x8049e26:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x8049e2d:   74 0d                           	je 0x8049e3c <func_1+0x644>
0x8049e2f:   80 7d 93 00                     	cmp byte ptr [ebp - 0x6d], 0
0x8049e33:   74 07                           	je 0x8049e3c <func_1+0x644>
0x8049e35:   b8 01 00 00 00                  	mov eax, 1
0x8049e3a:   eb 05                           	jmp 0x8049e41 <func_1+0x649>
0x8049e3c:   b8 00 00 00 00                  	mov eax, 0
0x8049e41:   3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x8049e44:   7e 07                           	jle 0x8049e4d <func_1+0x655>
0x8049e46:   b8 65 00 00 00                  	mov eax, 0x65
0x8049e4b:   eb 05                           	jmp 0x8049e52 <func_1+0x65a>
0x8049e4d:   b8 64 00 00 00                  	mov eax, 0x64
0x8049e52:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049e55:   e9 26 02 00 00                  	jmp 0x804a080 <func_1+0x888>
0x8049e5a:   66 c7 85 9e fe ff ff fd ff      	mov word ptr [ebp - 0x162], 0xfffd
0x8049e63:   83 85 64 ff ff ff 01            	add dword ptr [ebp - 0x9c], 1
0x8049e6a:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x8049e6e:   83 e0 01                        	and eax, 1
0x8049e71:   89 c2                           	mov edx, eax
0x8049e73:   0f bf 85 9e fe ff ff            	movsx eax, word ptr [ebp - 0x162]
0x8049e7a:   39 c2                           	cmp edx, eax
0x8049e7c:   7e 07                           	jle 0x8049e85 <func_1+0x68d>
0x8049e7e:   ba d8 ff ff ff                  	mov edx, 0xffffffd8
0x8049e83:   eb 05                           	jmp 0x8049e8a <func_1+0x692>
0x8049e85:   ba d7 ff ff ff                  	mov edx, 0xffffffd7
0x8049e8a:   0f be 45 93                     	movsx eax, byte ptr [ebp - 0x6d]
0x8049e8e:   01 d0                           	add eax, edx
0x8049e90:   85 c0                           	test eax, eax
0x8049e92:   75 06                           	jne 0x8049e9a <func_1+0x6a2>
0x8049e94:   80 7d 92 00                     	cmp byte ptr [ebp - 0x6e], 0
0x8049e98:   74 07                           	je 0x8049ea1 <func_1+0x6a9>
0x8049e9a:   b8 01 00 00 00                  	mov eax, 1
0x8049e9f:   eb 05                           	jmp 0x8049ea6 <func_1+0x6ae>
0x8049ea1:   b8 00 00 00 00                  	mov eax, 0
0x8049ea6:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x8049ea9:   0f 94 c0                        	sete al
0x8049eac:   0f b6 c0                        	movzx eax, al
0x8049eaf:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049eb2:   c7 45 e4 14 00 00 00            	mov dword ptr [ebp - 0x1c], 0x14
0x8049eb9:   e9 b8 01 00 00                  	jmp 0x804a076 <func_1+0x87e>
0x8049ebe:   c7 85 98 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x168], 1
0x8049ec8:   c7 85 94 fe ff ff 73 09 4e f4   	mov dword ptr [ebp - 0x16c], 0xf44e0973
0x8049ed2:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049ed5:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x8049ed8:   0f 96 c0                        	setbe al
0x8049edb:   0f b6 c0                        	movzx eax, al
0x8049ede:   39 85 b8 fe ff ff               	cmp dword ptr [ebp - 0x148], eax
0x8049ee4:   7f 07                           	jg 0x8049eed <func_1+0x6f5>
0x8049ee6:   b8 30 c5 d9 66                  	mov eax, 0x66d9c530
0x8049eeb:   eb 05                           	jmp 0x8049ef2 <func_1+0x6fa>
0x8049eed:   b8 2f c5 d9 66                  	mov eax, 0x66d9c52f
0x8049ef2:   3b 45 d0                        	cmp eax, dword ptr [ebp - 0x30]
0x8049ef5:   0f 9c c0                        	setl al
0x8049ef8:   0f b6 c0                        	movzx eax, al
0x8049efb:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x8049f01:   83 bd 94 fe ff ff 00            	cmp dword ptr [ebp - 0x16c], 0
0x8049f08:   75 07                           	jne 0x8049f11 <func_1+0x719>
0x8049f0a:   83 bd b8 fe ff ff 00            	cmp dword ptr [ebp - 0x148], 0
0x8049f11:   0f be 55 d7                     	movsx edx, byte ptr [ebp - 0x29]
0x8049f15:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049f18:   83 f0 e8                        	xor eax, 0xffffffe8
0x8049f1b:   0f b6 c8                        	movzx ecx, al
0x8049f1e:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x8049f22:   01 c8                           	add eax, ecx
0x8049f24:   25 34 15 00 00                  	and eax, 0x1534
0x8049f29:   33 85 6c ff ff ff               	xor eax, dword ptr [ebp - 0x94]
0x8049f2f:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x8049f32:   0f 93 c0                        	setae al
0x8049f35:   0f b6 c8                        	movzx ecx, al
0x8049f38:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049f3b:   0f be c0                        	movsx eax, al
0x8049f3e:   0f af c1                        	imul eax, ecx
0x8049f41:   39 c2                           	cmp edx, eax
0x8049f43:   0f 95 c0                        	setne al
0x8049f46:   0f b6 d0                        	movzx edx, al
0x8049f49:   8b 85 98 fe ff ff               	mov eax, dword ptr [ebp - 0x168]
0x8049f4f:   0f b6 c0                        	movzx eax, al
0x8049f52:   89 c1                           	mov ecx, eax
0x8049f54:   d3 e2                           	shl edx, cl
0x8049f56:   89 d0                           	mov eax, edx
0x8049f58:   89 c2                           	mov edx, eax
0x8049f5a:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x8049f60:   29 c2                           	sub edx, eax
0x8049f62:   89 d0                           	mov eax, edx
0x8049f64:   88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x8049f67:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x8049f6b:   39 85 98 fe ff ff               	cmp dword ptr [ebp - 0x168], eax
0x8049f71:   74 07                           	je 0x8049f7a <func_1+0x782>
0x8049f73:   83 bd 98 fe ff ff 00            	cmp dword ptr [ebp - 0x168], 0
0x8049f7a:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049f7d:   3d 37 19 e2 be                  	cmp eax, 0xbee21937
0x8049f82:   0f 97 c0                        	seta al
0x8049f85:   0f b6 c0                        	movzx eax, al
0x8049f88:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049f8b:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049f8e:   66 21 45 ca                     	and word ptr [ebp - 0x36], ax
0x8049f92:   66 83 bd ac fe ff ff fc         	cmp word ptr [ebp - 0x154], -4
0x8049f9a:   0f 9c c0                        	setl al
0x8049f9d:   0f b6 d0                        	movzx edx, al
0x8049fa0:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049fa3:   98                              	cwde 
0x8049fa4:   0f af c2                        	imul eax, edx
0x8049fa7:   09 45 e0                        	or dword ptr [ebp - 0x20], eax
0x8049faa:   66 83 7d de 00                  	cmp word ptr [ebp - 0x22], 0
0x8049faf:   0f 95 c0                        	setne al
0x8049fb2:   0f b6 c0                        	movzx eax, al
0x8049fb5:   0f bf 9d 9e fe ff ff            	movsx ebx, word ptr [ebp - 0x162]
0x8049fbc:   99                              	cdq 
0x8049fbd:   f7 fb                           	idiv ebx
0x8049fbf:   21 45 98                        	and dword ptr [ebp - 0x68], eax
0x8049fc2:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049fc5:   83 f8 02                        	cmp eax, 2
0x8049fc8:   0f 96 c0                        	setbe al
0x8049fcb:   0f b6 d0                        	movzx edx, al
0x8049fce:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049fd1:   0f be c0                        	movsx eax, al
0x8049fd4:   89 c1                           	mov ecx, eax
0x8049fd6:   d3 fa                           	sar edx, cl
0x8049fd8:   89 d0                           	mov eax, edx
0x8049fda:   3d 0a 7d 00 00                  	cmp eax, 0x7d0a
0x8049fdf:   7e 09                           	jle 0x8049fea <func_1+0x7f2>
0x8049fe1:   80 bd b3 fe ff ff 00            	cmp byte ptr [ebp - 0x14d], 0
0x8049fe8:   74 07                           	je 0x8049ff1 <func_1+0x7f9>
0x8049fea:   b8 01 00 00 00                  	mov eax, 1
0x8049fef:   eb 05                           	jmp 0x8049ff6 <func_1+0x7fe>
0x8049ff1:   b8 00 00 00 00                  	mov eax, 0
0x8049ff6:   c0 f8 04                        	sar al, 4
0x8049ff9:   84 c0                           	test al, al
0x8049ffb:   75 0a                           	jne 0x804a007 <func_1+0x80f>
0x8049ffd:   66 83 bd ac fe ff ff 00         	cmp word ptr [ebp - 0x154], 0
0x804a005:   74 07                           	je 0x804a00e <func_1+0x816>
0x804a007:   b8 01 00 00 00                  	mov eax, 1
0x804a00c:   eb 05                           	jmp 0x804a013 <func_1+0x81b>
0x804a00e:   b8 00 00 00 00                  	mov eax, 0
0x804a013:   0b 85 98 fe ff ff               	or eax, dword ptr [ebp - 0x168]
0x804a019:   85 c0                           	test eax, eax
0x804a01b:   75 06                           	jne 0x804a023 <func_1+0x82b>
0x804a01d:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a021:   74 07                           	je 0x804a02a <func_1+0x832>
0x804a023:   b8 01 00 00 00                  	mov eax, 1
0x804a028:   eb 05                           	jmp 0x804a02f <func_1+0x837>
0x804a02a:   b8 00 00 00 00                  	mov eax, 0
0x804a02f:   3d f5 00 00 00                  	cmp eax, 0xf5
0x804a034:   0f 94 c0                        	sete al
0x804a037:   0f b6 d0                        	movzx edx, al
0x804a03a:   0f bf 85 9e fe ff ff            	movsx eax, word ptr [ebp - 0x162]
0x804a041:   39 c2                           	cmp edx, eax
0x804a043:   0f 9c c0                        	setl al
0x804a046:   0f b6 c0                        	movzx eax, al
0x804a049:   8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x804a04c:   0f b6 da                        	movzx ebx, dl
0x804a04f:   99                              	cdq 
0x804a050:   f7 fb                           	idiv ebx
0x804a052:   39 45 8c                        	cmp dword ptr [ebp - 0x74], eax
0x804a055:   0f 95 c0                        	setne al
0x804a058:   0f b6 c0                        	movzx eax, al
0x804a05b:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a05e:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a062:   74 07                           	je 0x804a06b <func_1+0x873>
0x804a064:   80 bd af fe ff ff 00            	cmp byte ptr [ebp - 0x151], 0
0x804a06b:   c7 45 d0 01 00 00 00            	mov dword ptr [ebp - 0x30], 1
0x804a072:   83 6d e4 01                     	sub dword ptr [ebp - 0x1c], 1
0x804a076:   83 7d e4 0b                     	cmp dword ptr [ebp - 0x1c], 0xb
0x804a07a:   0f 8f 3e fe ff ff               	jg 0x8049ebe <func_1+0x6c6>
0x804a080:   c7 45 a8 00 00 00 00            	mov dword ptr [ebp - 0x58], 0
0x804a087:   83 7d a8 eb                     	cmp dword ptr [ebp - 0x58], -0x15
0x804a08b:   0f 8c c5 00 00 00               	jl 0x804a156 <func_1+0x95e>
0x804a091:   66 c7 85 7e fe ff ff 09 00      	mov word ptr [ebp - 0x182], 9
0x804a09a:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804a09e:   0f be 55 bf                     	movsx edx, byte ptr [ebp - 0x41]
0x804a0a2:   0f bf 4d c8                     	movsx ecx, word ptr [ebp - 0x38]
0x804a0a6:   0f bf 5d ca                     	movsx ebx, word ptr [ebp - 0x36]
0x804a0aa:   0f be 7d d7                     	movsx edi, byte ptr [ebp - 0x29]
0x804a0ae:   89 bd 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], edi
0x804a0b4:   0f b7 75 de                     	movzx esi, word ptr [ebp - 0x22]
0x804a0b8:   89 b5 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], esi
0x804a0be:   0f b6 7d 91                     	movzx edi, byte ptr [ebp - 0x6f]
0x804a0c2:   89 bd 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], edi
0x804a0c8:   0f b6 75 92                     	movzx esi, byte ptr [ebp - 0x6e]
0x804a0cc:   89 b5 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], esi
0x804a0d2:   0f be 7d 93                     	movsx edi, byte ptr [ebp - 0x6d]
0x804a0d6:   89 bd 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edi
0x804a0dc:   0f bf 75 ec                     	movsx esi, word ptr [ebp - 0x14]
0x804a0e0:   89 b5 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], esi
0x804a0e6:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x804a0ea:   0f bf 75 94                     	movsx esi, word ptr [ebp - 0x6c]
0x804a0ee:   50                              	push eax
0x804a0ef:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a0f2:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a0f5:   52                              	push edx
0x804a0f6:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a0f9:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a0fc:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a0ff:   51                              	push ecx
0x804a100:   53                              	push ebx
0x804a101:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a104:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a107:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a10d:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a110:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a113:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a119:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a11c:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a122:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a125:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a12b:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a12e:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a134:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a137:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804a13d:   57                              	push edi
0x804a13e:   56                              	push esi
0x804a13f:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a142:   e8 0d f5 ff ff                  	call 0x8049654 <set_var>
0x804a147:   83 c4 68                        	add esp, 0x68
0x804a14a:   0f b7 85 7e fe ff ff            	movzx eax, word ptr [ebp - 0x182]
0x804a151:   e9 fd 0c 00 00                  	jmp 0x804ae53 <func_1+0x165b>
0x804a156:   c7 45 a8 fc ff ff ff            	mov dword ptr [ebp - 0x58], 0xfffffffc
0x804a15d:   83 7d a8 1b                     	cmp dword ptr [ebp - 0x58], 0x1b
0x804a161:   0f 8f ff 00 00 00               	jg 0x804a266 <func_1+0xa6e>
0x804a167:   c7 85 84 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x17c], 0xffffffff
0x804a171:   81 7d cc c9 0e d2 6d            	cmp dword ptr [ebp - 0x34], 0x6dd20ec9
0x804a178:   0f 94 c0                        	sete al
0x804a17b:   0f b6 d0                        	movzx edx, al
0x804a17e:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a181:   0f b7 c0                        	movzx eax, ax
0x804a184:   89 c1                           	mov ecx, eax
0x804a186:   d3 e2                           	shl edx, cl
0x804a188:   89 d0                           	mov eax, edx
0x804a18a:   89 c2                           	mov edx, eax
0x804a18c:   0f b6 45 92                     	movzx eax, byte ptr [ebp - 0x6e]
0x804a190:   21 d0                           	and eax, edx
0x804a192:   88 45 92                        	mov byte ptr [ebp - 0x6e], al
0x804a195:   c7 85 80 fe ff ff 73 7d 7a 1c   	mov dword ptr [ebp - 0x180], 0x1c7a7d73
0x804a19f:   8b 85 80 fe ff ff               	mov eax, dword ptr [ebp - 0x180]
0x804a1a5:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804a1ab:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804a1af:   0f be 55 bf                     	movsx edx, byte ptr [ebp - 0x41]
0x804a1b3:   0f bf 4d c8                     	movsx ecx, word ptr [ebp - 0x38]
0x804a1b7:   0f bf 5d ca                     	movsx ebx, word ptr [ebp - 0x36]
0x804a1bb:   0f be 7d d7                     	movsx edi, byte ptr [ebp - 0x29]
0x804a1bf:   89 bd 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], edi
0x804a1c5:   0f b7 75 de                     	movzx esi, word ptr [ebp - 0x22]
0x804a1c9:   89 b5 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], esi
0x804a1cf:   0f b6 7d 91                     	movzx edi, byte ptr [ebp - 0x6f]
0x804a1d3:   89 bd 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], edi
0x804a1d9:   0f b6 75 92                     	movzx esi, byte ptr [ebp - 0x6e]
0x804a1dd:   89 b5 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], esi
0x804a1e3:   0f be 7d 93                     	movsx edi, byte ptr [ebp - 0x6d]
0x804a1e7:   89 bd 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edi
0x804a1ed:   0f bf 75 ec                     	movsx esi, word ptr [ebp - 0x14]
0x804a1f1:   89 b5 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], esi
0x804a1f7:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x804a1fb:   0f bf 75 94                     	movsx esi, word ptr [ebp - 0x6c]
0x804a1ff:   50                              	push eax
0x804a200:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a203:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a206:   52                              	push edx
0x804a207:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a20a:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a20d:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a210:   51                              	push ecx
0x804a211:   53                              	push ebx
0x804a212:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a215:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a218:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a21e:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a221:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a224:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a22a:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a22d:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a233:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a236:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a23c:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a23f:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a245:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a248:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804a24e:   57                              	push edi
0x804a24f:   56                              	push esi
0x804a250:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a253:   e8 fc f3 ff ff                  	call 0x8049654 <set_var>
0x804a258:   83 c4 68                        	add esp, 0x68
0x804a25b:   8b 85 84 fe ff ff               	mov eax, dword ptr [ebp - 0x17c]
0x804a261:   e9 ed 0b 00 00                  	jmp 0x804ae53 <func_1+0x165b>
0x804a266:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804a26a:   0f be 55 bf                     	movsx edx, byte ptr [ebp - 0x41]
0x804a26e:   0f bf 4d c8                     	movsx ecx, word ptr [ebp - 0x38]
0x804a272:   0f bf 5d ca                     	movsx ebx, word ptr [ebp - 0x36]
0x804a276:   0f be 7d d7                     	movsx edi, byte ptr [ebp - 0x29]
0x804a27a:   89 bd 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], edi
0x804a280:   0f b7 75 de                     	movzx esi, word ptr [ebp - 0x22]
0x804a284:   89 b5 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], esi
0x804a28a:   0f b6 7d 91                     	movzx edi, byte ptr [ebp - 0x6f]
0x804a28e:   89 bd 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], edi
0x804a294:   0f b6 75 92                     	movzx esi, byte ptr [ebp - 0x6e]
0x804a298:   89 b5 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], esi
0x804a29e:   0f be 7d 93                     	movsx edi, byte ptr [ebp - 0x6d]
0x804a2a2:   89 bd 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edi
0x804a2a8:   0f bf 75 ec                     	movsx esi, word ptr [ebp - 0x14]
0x804a2ac:   89 b5 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], esi
0x804a2b2:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x804a2b6:   0f bf 75 94                     	movsx esi, word ptr [ebp - 0x6c]
0x804a2ba:   50                              	push eax
0x804a2bb:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a2be:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a2c1:   52                              	push edx
0x804a2c2:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a2c5:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a2c8:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a2cb:   51                              	push ecx
0x804a2cc:   53                              	push ebx
0x804a2cd:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a2d0:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a2d3:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a2d9:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a2dc:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a2df:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a2e5:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a2e8:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a2ee:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a2f1:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a2f7:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a2fa:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a300:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a303:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804a309:   57                              	push edi
0x804a30a:   56                              	push esi
0x804a30b:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a30e:   e8 41 f3 ff ff                  	call 0x8049654 <set_var>
0x804a313:   83 c4 68                        	add esp, 0x68
0x804a316:   0f b6 45 92                     	movzx eax, byte ptr [ebp - 0x6e]
0x804a31a:   e9 34 0b 00 00                  	jmp 0x804ae53 <func_1+0x165b>
0x804a31f:   66 83 7d ec 00                  	cmp word ptr [ebp - 0x14], 0
0x804a324:   74 07                           	je 0x804a32d <func_1+0xb35>
0x804a326:   b8 01 00 00 00                  	mov eax, 1
0x804a32b:   eb 05                           	jmp 0x804a332 <func_1+0xb3a>
0x804a32d:   b8 00 00 00 00                  	mov eax, 0
0x804a332:   21 c2                           	and edx, eax
0x804a334:   0f b7 85 b0 fe ff ff            	movzx eax, word ptr [ebp - 0x150]
0x804a33b:   39 c2                           	cmp edx, eax
0x804a33d:   0f 94 c0                        	sete al
0x804a340:   0f b6 d0                        	movzx edx, al
0x804a343:   0f bf 45 ec                     	movsx eax, word ptr [ebp - 0x14]
0x804a347:   39 c2                           	cmp edx, eax
0x804a349:   74 05                           	je 0x804a350 <func_1+0xb58>
0x804a34b:   66 83 7d de 00                  	cmp word ptr [ebp - 0x22], 0
0x804a350:   66 c7 45 c8 01 00               	mov word ptr [ebp - 0x38], 1
0x804a356:   0f bf 45 c8                     	movsx eax, word ptr [ebp - 0x38]
0x804a35a:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a35d:   0f b7 85 68 ff ff ff            	movzx eax, word ptr [ebp - 0x98]
0x804a364:   39 85 64 ff ff ff               	cmp dword ptr [ebp - 0x9c], eax
0x804a36a:   0f 95 c0                        	setne al
0x804a36d:   0f b6 c0                        	movzx eax, al
0x804a370:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a373:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a379:   0f b7 c0                        	movzx eax, ax
0x804a37c:   2d 4d 72 00 00                  	sub eax, 0x724d
0x804a381:   39 85 bc fe ff ff               	cmp dword ptr [ebp - 0x144], eax
0x804a387:   75 07                           	jne 0x804a390 <func_1+0xb98>
0x804a389:   66 83 7d ca 00                  	cmp word ptr [ebp - 0x36], 0
0x804a38e:   74 07                           	je 0x804a397 <func_1+0xb9f>
0x804a390:   ba 01 00 00 00                  	mov edx, 1
0x804a395:   eb 05                           	jmp 0x804a39c <func_1+0xba4>
0x804a397:   ba 00 00 00 00                  	mov edx, 0
0x804a39c:   0f b6 45 91                     	movzx eax, byte ptr [ebp - 0x6f]
0x804a3a0:   39 c2                           	cmp edx, eax
0x804a3a2:   0f 9c c0                        	setl al
0x804a3a5:   0f b6 d0                        	movzx edx, al
0x804a3a8:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a3ae:   98                              	cwde 
0x804a3af:   01 d0                           	add eax, edx
0x804a3b1:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a3b4:   0f 9f c0                        	setg al
0x804a3b7:   0f b6 c0                        	movzx eax, al
0x804a3ba:   39 85 b8 fe ff ff               	cmp dword ptr [ebp - 0x148], eax
0x804a3c0:   0f 95 c0                        	setne al
0x804a3c3:   0f b6 c0                        	movzx eax, al
0x804a3c6:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a3c9:   e9 d1 09 00 00                  	jmp 0x804ad9f <func_1+0x15a7>
0x804a3ce:   c7 85 58 ff ff ff 04 00 00 00   	mov dword ptr [ebp - 0xa8], 4
0x804a3d8:   c6 45 97 61                     	mov byte ptr [ebp - 0x69], 0x61
0x804a3dc:   c7 85 54 ff ff ff 0a 9a bb 1b   	mov dword ptr [ebp - 0xac], 0x1bbb9a0a
0x804a3e6:   c7 85 50 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xb0], 0
0x804a3f0:   66 c7 85 4e ff ff ff 75 14      	mov word ptr [ebp - 0xb2], 0x1475
0x804a3f9:   c7 85 48 ff ff ff b3 57 06 17   	mov dword ptr [ebp - 0xb8], 0x170657b3
0x804a403:   c7 85 44 ff ff ff aa 8b 37 1f   	mov dword ptr [ebp - 0xbc], 0x1f378baa
0x804a40d:   c7 85 40 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xc0], 0xffffffff
0x804a417:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x804a41b:   89 c1                           	mov ecx, eax
0x804a41d:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804a423:   89 c2                           	mov edx, eax
0x804a425:   0f b6 c1                        	movzx eax, cl
0x804a428:   f6 f2                           	div dl
0x804a42a:   84 c0                           	test al, al
0x804a42c:   0f 84 13 07 00 00               	je 0x804ab45 <func_1+0x134d>
0x804a432:   c7 85 0c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xf4], 1
0x804a43c:   c7 85 08 ff ff ff c6 ad 98 b5   	mov dword ptr [ebp - 0xf8], 0xb598adc6
0x804a446:   c7 85 04 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xfc], 1
0x804a450:   66 c7 85 02 ff ff ff 6c 43      	mov word ptr [ebp - 0xfe], 0x436c
0x804a459:   c7 85 fc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x104], 0
0x804a463:   c7 85 f8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x108], 0xffffffff
0x804a46d:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a471:   0f 84 01 01 00 00               	je 0x804a578 <func_1+0xd80>
0x804a477:   c7 85 c0 fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x140], 4
0x804a481:   0f b6 55 91                     	movzx edx, byte ptr [ebp - 0x6f]
0x804a485:   0f be 45 97                     	movsx eax, byte ptr [ebp - 0x69]
0x804a489:   39 c2                           	cmp edx, eax
0x804a48b:   0f 95 c0                        	setne al
0x804a48e:   0f b6 c0                        	movzx eax, al
0x804a491:   33 45 f0                        	xor eax, dword ptr [ebp - 0x10]
0x804a494:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a497:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x804a49b:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a49e:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a4a1:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804a4a4:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a4a7:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x804a4aa:   0f 96 c0                        	setbe al
0x804a4ad:   88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x804a4b0:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x804a4b4:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a4b7:   c7 45 cc 01 00 00 00            	mov dword ptr [ebp - 0x34], 1
0x804a4be:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804a4c2:   0f be 55 bf                     	movsx edx, byte ptr [ebp - 0x41]
0x804a4c6:   0f bf 4d c8                     	movsx ecx, word ptr [ebp - 0x38]
0x804a4ca:   0f bf 5d ca                     	movsx ebx, word ptr [ebp - 0x36]
0x804a4ce:   0f be 7d d7                     	movsx edi, byte ptr [ebp - 0x29]
0x804a4d2:   89 bd 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], edi
0x804a4d8:   0f b7 75 de                     	movzx esi, word ptr [ebp - 0x22]
0x804a4dc:   89 b5 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], esi
0x804a4e2:   0f b6 7d 91                     	movzx edi, byte ptr [ebp - 0x6f]
0x804a4e6:   89 bd 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], edi
0x804a4ec:   0f b6 75 92                     	movzx esi, byte ptr [ebp - 0x6e]
0x804a4f0:   89 b5 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], esi
0x804a4f6:   0f be 7d 93                     	movsx edi, byte ptr [ebp - 0x6d]
0x804a4fa:   89 bd 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edi
0x804a500:   0f bf 75 ec                     	movsx esi, word ptr [ebp - 0x14]
0x804a504:   89 b5 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], esi
0x804a50a:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x804a50e:   0f bf 75 94                     	movsx esi, word ptr [ebp - 0x6c]
0x804a512:   50                              	push eax
0x804a513:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a516:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a519:   52                              	push edx
0x804a51a:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a51d:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a520:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a523:   51                              	push ecx
0x804a524:   53                              	push ebx
0x804a525:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a528:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a52b:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a531:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a534:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a537:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a53d:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a540:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a546:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a549:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a54f:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a552:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a558:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a55b:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804a561:   57                              	push edi
0x804a562:   56                              	push esi
0x804a563:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a566:   e8 e9 f0 ff ff                  	call 0x8049654 <set_var>
0x804a56b:   83 c4 68                        	add esp, 0x68
0x804a56e:   66 0f be 45 d7                  	movsx ax, byte ptr [ebp - 0x29]
0x804a573:   e9 db 08 00 00                  	jmp 0x804ae53 <func_1+0x165b>
0x804a578:   c7 85 f4 fe ff ff fa ff ff ff   	mov dword ptr [ebp - 0x10c], 0xfffffffa
0x804a582:   66 c7 85 f2 fe ff ff ff ff      	mov word ptr [ebp - 0x10e], 0xffff
0x804a58b:   c6 85 f1 fe ff ff fe            	mov byte ptr [ebp - 0x10f], 0xfe
0x804a592:   c7 85 ec fe ff ff 09 00 00 00   	mov dword ptr [ebp - 0x114], 9
0x804a59c:   c7 85 e8 fe ff ff fb ff ff ff   	mov dword ptr [ebp - 0x118], 0xfffffffb
0x804a5a6:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a5ac:   33 85 f4 fe ff ff               	xor eax, dword ptr [ebp - 0x10c]
0x804a5b2:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x804a5b8:   0f be 45 bf                     	movsx eax, byte ptr [ebp - 0x41]
0x804a5bc:   c1 e0 06                        	shl eax, 6
0x804a5bf:   89 c1                           	mov ecx, eax
0x804a5c1:   0f b6 55 ef                     	movzx edx, byte ptr [ebp - 0x11]
0x804a5c5:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a5c8:   98                              	cwde 
0x804a5c9:   29 c2                           	sub edx, eax
0x804a5cb:   89 d0                           	mov eax, edx
0x804a5cd:   39 c1                           	cmp ecx, eax
0x804a5cf:   0f 94 c0                        	sete al
0x804a5d2:   0f b6 c0                        	movzx eax, al
0x804a5d5:   39 45 cc                        	cmp dword ptr [ebp - 0x34], eax
0x804a5d8:   0f 84 49 03 00 00               	je 0x804a927 <func_1+0x112f>
0x804a5de:   c7 85 dc fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x124], 0xffffffff
0x804a5e8:   c7 85 d8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x128], 0xffffffff
0x804a5f2:   c7 85 d4 fe ff ff 01 9c ad f3   	mov dword ptr [ebp - 0x12c], 0xf3ad9c01
0x804a5fc:   c7 85 d0 fe ff ff 03 00 00 00   	mov dword ptr [ebp - 0x130], 3
0x804a606:   c7 85 cc fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x134], 0xffffffff
0x804a610:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x804a616:   0f b7 c8                        	movzx ecx, ax
0x804a619:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a61c:   0f be c0                        	movsx eax, al
0x804a61f:   01 c0                           	add eax, eax
0x804a621:   8b 95 0c ff ff ff               	mov edx, dword ptr [ebp - 0xf4]
0x804a627:   0f b7 da                        	movzx ebx, dx
0x804a62a:   83 bd dc fe ff ff 01            	cmp dword ptr [ebp - 0x124], 1
0x804a631:   0f 96 c2                        	setbe dl
0x804a634:   0f b6 f2                        	movzx esi, dl
0x804a637:   0f bf 95 f2 fe ff ff            	movsx edx, word ptr [ebp - 0x10e]
0x804a63e:   39 d6                           	cmp esi, edx
0x804a640:   0f 95 c2                        	setne dl
0x804a643:   0f b6 d2                        	movzx edx, dl
0x804a646:   0f b7 d2                        	movzx edx, dx
0x804a649:   01 d3                           	add ebx, edx
0x804a64b:   99                              	cdq 
0x804a64c:   f7 fb                           	idiv ebx
0x804a64e:   89 d0                           	mov eax, edx
0x804a650:   85 c0                           	test eax, eax
0x804a652:   74 10                           	je 0x804a664 <func_1+0xe6c>
0x804a654:   66 83 bd f2 fe ff ff 00         	cmp word ptr [ebp - 0x10e], 0
0x804a65c:   74 06                           	je 0x804a664 <func_1+0xe6c>
0x804a65e:   80 7d bf 00                     	cmp byte ptr [ebp - 0x41], 0
0x804a662:   75 06                           	jne 0x804a66a <func_1+0xe72>
0x804a664:   80 7d 97 00                     	cmp byte ptr [ebp - 0x69], 0
0x804a668:   74 07                           	je 0x804a671 <func_1+0xe79>
0x804a66a:   b8 01 00 00 00                  	mov eax, 1
0x804a66f:   eb 05                           	jmp 0x804a676 <func_1+0xe7e>
0x804a671:   b8 00 00 00 00                  	mov eax, 0
0x804a676:   0f b6 55 97                     	movzx edx, byte ptr [ebp - 0x69]
0x804a67a:   0f b6 c0                        	movzx eax, al
0x804a67d:   f6 f2                           	div dl
0x804a67f:   0f b6 c0                        	movzx eax, al
0x804a682:   29 c1                           	sub ecx, eax
0x804a684:   89 ca                           	mov edx, ecx
0x804a686:   0f b6 85 f1 fe ff ff            	movzx eax, byte ptr [ebp - 0x10f]
0x804a68d:   39 c2                           	cmp edx, eax
0x804a68f:   0f 9c c0                        	setl al
0x804a692:   0f b6 d0                        	movzx edx, al
0x804a695:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x804a69b:   0f be c0                        	movsx eax, al
0x804a69e:   89 c1                           	mov ecx, eax
0x804a6a0:   d3 e2                           	shl edx, cl
0x804a6a2:   89 d0                           	mov eax, edx
0x804a6a4:   85 c0                           	test eax, eax
0x804a6a6:   74 0d                           	je 0x804a6b5 <func_1+0xebd>
0x804a6a8:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x804a6ac:   74 07                           	je 0x804a6b5 <func_1+0xebd>
0x804a6ae:   b8 01 00 00 00                  	mov eax, 1
0x804a6b3:   eb 05                           	jmp 0x804a6ba <func_1+0xec2>
0x804a6b5:   b8 00 00 00 00                  	mov eax, 0
0x804a6ba:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a6bd:   66 83 7d ca 67                  	cmp word ptr [ebp - 0x36], 0x67
0x804a6c2:   0f 9f c0                        	setg al
0x804a6c5:   0f b6 c0                        	movzx eax, al
0x804a6c8:   c7 45 c0 00 00 00 00            	mov dword ptr [ebp - 0x40], 0
0x804a6cf:   c7 85 ec fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x114], 0
0x804a6d9:   8b 9d ec fe ff ff               	mov ebx, dword ptr [ebp - 0x114]
0x804a6df:   ba 00 00 00 00                  	mov edx, 0
0x804a6e4:   f7 f3                           	div ebx
0x804a6e6:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x804a6ec:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a6ef:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a6f2:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804a6f8:   0f bf d0                        	movsx edx, ax
0x804a6fb:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a6fe:   98                              	cwde 
0x804a6ff:   01 d0                           	add eax, edx
0x804a701:   89 c2                           	mov edx, eax
0x804a703:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804a709:   f7 d0                           	not eax
0x804a70b:   21 d0                           	and eax, edx
0x804a70d:   85 c0                           	test eax, eax
0x804a70f:   0f 84 1b 01 00 00               	je 0x804a830 <func_1+0x1038>
0x804a715:   c7 85 c4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x13c], 0
0x804a71f:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a722:   0f be 4d bf                     	movsx ecx, byte ptr [ebp - 0x41]
0x804a726:   99                              	cdq 
0x804a727:   f7 f9                           	idiv ecx
0x804a729:   89 d0                           	mov eax, edx
0x804a72b:   0f b6 55 93                     	movzx edx, byte ptr [ebp - 0x6d]
0x804a72f:   0f b6 c0                        	movzx eax, al
0x804a732:   f6 f2                           	div dl
0x804a734:   84 c0                           	test al, al
0x804a736:   74 10                           	je 0x804a748 <func_1+0xf50>
0x804a738:   83 bd c4 fe ff ff 00            	cmp dword ptr [ebp - 0x13c], 0
0x804a73f:   74 07                           	je 0x804a748 <func_1+0xf50>
0x804a741:   ba 01 00 00 00                  	mov edx, 1
0x804a746:   eb 05                           	jmp 0x804a74d <func_1+0xf55>
0x804a748:   ba 00 00 00 00                  	mov edx, 0
0x804a74d:   0f b6 45 92                     	movzx eax, byte ptr [ebp - 0x6e]
0x804a751:   29 c2                           	sub edx, eax
0x804a753:   89 d0                           	mov eax, edx
0x804a755:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a758:   0f 95 c0                        	setne al
0x804a75b:   0f b6 c0                        	movzx eax, al
0x804a75e:   31 85 04 ff ff ff               	xor dword ptr [ebp - 0xfc], eax
0x804a764:   0f be 45 97                     	movsx eax, byte ptr [ebp - 0x69]
0x804a768:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a76b:   0f b6 45 92                     	movzx eax, byte ptr [ebp - 0x6e]
0x804a76f:   21 85 d0 fe ff ff               	and dword ptr [ebp - 0x130], eax
0x804a775:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804a779:   0f be 55 bf                     	movsx edx, byte ptr [ebp - 0x41]
0x804a77d:   0f bf 4d c8                     	movsx ecx, word ptr [ebp - 0x38]
0x804a781:   0f bf 5d ca                     	movsx ebx, word ptr [ebp - 0x36]
0x804a785:   0f be 7d d7                     	movsx edi, byte ptr [ebp - 0x29]
0x804a789:   89 bd 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], edi
0x804a78f:   0f b7 75 de                     	movzx esi, word ptr [ebp - 0x22]
0x804a793:   89 b5 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], esi
0x804a799:   0f b6 7d 91                     	movzx edi, byte ptr [ebp - 0x6f]
0x804a79d:   89 bd 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], edi
0x804a7a3:   0f b6 75 92                     	movzx esi, byte ptr [ebp - 0x6e]
0x804a7a7:   89 b5 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], esi
0x804a7ad:   0f be 7d 93                     	movsx edi, byte ptr [ebp - 0x6d]
0x804a7b1:   89 bd 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edi
0x804a7b7:   0f bf 75 ec                     	movsx esi, word ptr [ebp - 0x14]
0x804a7bb:   89 b5 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], esi
0x804a7c1:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x804a7c5:   0f bf 75 94                     	movsx esi, word ptr [ebp - 0x6c]
0x804a7c9:   50                              	push eax
0x804a7ca:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a7cd:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a7d0:   52                              	push edx
0x804a7d1:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a7d4:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a7d7:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a7da:   51                              	push ecx
0x804a7db:   53                              	push ebx
0x804a7dc:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a7df:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a7e2:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a7e8:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a7eb:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a7ee:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a7f4:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a7f7:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a7fd:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a800:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a806:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a809:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a80f:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a812:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804a818:   57                              	push edi
0x804a819:   56                              	push esi
0x804a81a:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a81d:   e8 32 ee ff ff                  	call 0x8049654 <set_var>
0x804a822:   83 c4 68                        	add esp, 0x68
0x804a825:   8b 85 dc fe ff ff               	mov eax, dword ptr [ebp - 0x124]
0x804a82b:   e9 23 06 00 00                  	jmp 0x804ae53 <func_1+0x165b>
0x804a830:   c7 85 c8 fe ff ff 05 00 00 00   	mov dword ptr [ebp - 0x138], 5
0x804a83a:   8b 85 ec fe ff ff               	mov eax, dword ptr [ebp - 0x114]
0x804a840:   c1 e0 03                        	shl eax, 3
0x804a843:   0f b6 c0                        	movzx eax, al
0x804a846:   ba 01 00 00 00                  	mov edx, 1
0x804a84b:   29 c2                           	sub edx, eax
0x804a84d:   89 d0                           	mov eax, edx
0x804a84f:   39 85 d8 fe ff ff               	cmp dword ptr [ebp - 0x128], eax
0x804a855:   0f 94 c0                        	sete al
0x804a858:   0f b6 c0                        	movzx eax, al
0x804a85b:   89 85 c8 fe ff ff               	mov dword ptr [ebp - 0x138], eax
0x804a861:   0f b6 85 f1 fe ff ff            	movzx eax, byte ptr [ebp - 0x10f]
0x804a868:   c1 e0 06                        	shl eax, 6
0x804a86b:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a86e:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a871:   0f b6 d0                        	movzx edx, al
0x804a874:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a877:   0f b6 c0                        	movzx eax, al
0x804a87a:   01 d0                           	add eax, edx
0x804a87c:   0f bf d0                        	movsx edx, ax
0x804a87f:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a882:   98                              	cwde 
0x804a883:   0f af c2                        	imul eax, edx
0x804a886:   83 f8 ff                        	cmp eax, -1
0x804a889:   74 0d                           	je 0x804a898 <func_1+0x10a0>
0x804a88b:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a88f:   74 07                           	je 0x804a898 <func_1+0x10a0>
0x804a891:   b8 01 00 00 00                  	mov eax, 1
0x804a896:   eb 05                           	jmp 0x804a89d <func_1+0x10a5>
0x804a898:   b8 00 00 00 00                  	mov eax, 0
0x804a89d:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a8a0:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a8a3:   66 89 45 de                     	mov word ptr [ebp - 0x22], ax
0x804a8a7:   66 83 7d de 00                  	cmp word ptr [ebp - 0x22], 0
0x804a8ac:   75 48                           	jne 0x804a8f6 <func_1+0x10fe>
0x804a8ae:   0f b6 45 93                     	movzx eax, byte ptr [ebp - 0x6d]
0x804a8b2:   3a 85 63 ff ff ff               	cmp al, byte ptr [ebp - 0x9d]
0x804a8b8:   0f 9e c0                        	setle al
0x804a8bb:   0f b6 c0                        	movzx eax, al
0x804a8be:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a8c1:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a8c7:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x804a8ca:   0f 95 c0                        	setne al
0x804a8cd:   0f b6 c0                        	movzx eax, al
0x804a8d0:   8b 95 04 ff ff ff               	mov edx, dword ptr [ebp - 0xfc]
0x804a8d6:   0f bf da                        	movsx ebx, dx
0x804a8d9:   99                              	cdq 
0x804a8da:   f7 fb                           	idiv ebx
0x804a8dc:   83 f8 fd                        	cmp eax, -3
0x804a8df:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a8e5:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x804a8e8:   0f 93 c0                        	setae al
0x804a8eb:   0f b6 d0                        	movzx edx, al
0x804a8ee:   0f be 45 97                     	movsx eax, byte ptr [ebp - 0x69]
0x804a8f2:   39 c2                           	cmp edx, eax
0x804a8f4:   7e 07                           	jle 0x804a8fd <func_1+0x1105>
0x804a8f6:   ba 01 00 00 00                  	mov edx, 1
0x804a8fb:   eb 05                           	jmp 0x804a902 <func_1+0x110a>
0x804a8fd:   ba 00 00 00 00                  	mov edx, 0
0x804a902:   0f bf 45 c8                     	movsx eax, word ptr [ebp - 0x38]
0x804a906:   39 c2                           	cmp edx, eax
0x804a908:   7e 07                           	jle 0x804a911 <func_1+0x1119>
0x804a90a:   ba 04 00 00 00                  	mov edx, 4
0x804a90f:   eb 05                           	jmp 0x804a916 <func_1+0x111e>
0x804a911:   ba 00 00 00 00                  	mov edx, 0
0x804a916:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x804a91a:   01 d0                           	add eax, edx
0x804a91c:   21 85 cc fe ff ff               	and dword ptr [ebp - 0x134], eax
0x804a922:   e9 78 04 00 00                  	jmp 0x804ad9f <func_1+0x15a7>
0x804a927:   c6 85 e7 fe ff ff 60            	mov byte ptr [ebp - 0x119], 0x60
0x804a92e:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x804a932:   88 45 bf                        	mov byte ptr [ebp - 0x41], al
0x804a935:   0f be 4d bf                     	movsx ecx, byte ptr [ebp - 0x41]
0x804a939:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x804a93d:   8d 50 ff                        	lea edx, [eax - 1]
0x804a940:   88 55 ef                        	mov byte ptr [ebp - 0x11], dl
0x804a943:   0f b6 c0                        	movzx eax, al
0x804a946:   09 85 54 ff ff ff               	or dword ptr [ebp - 0xac], eax
0x804a94c:   b8 00 00 00 00                  	mov eax, 0
0x804a951:   0f b6 c0                        	movzx eax, al
0x804a954:   83 c0 66                        	add eax, 0x66
0x804a957:   39 85 58 ff ff ff               	cmp dword ptr [ebp - 0xa8], eax
0x804a95d:   0f 92 c0                        	setb al
0x804a960:   0f b6 c0                        	movzx eax, al
0x804a963:   39 85 58 ff ff ff               	cmp dword ptr [ebp - 0xa8], eax
0x804a969:   72 04                           	jb 0x804a96f <func_1+0x1177>
0x804a96b:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804a96f:   c7 85 50 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xb0], 2
0x804a979:   b8 01 00 00 00                  	mov eax, 1
0x804a97e:   39 c8                           	cmp eax, ecx
0x804a980:   0f 9c c0                        	setl al
0x804a983:   0f b6 d0                        	movzx edx, al
0x804a986:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804a98c:   98                              	cwde 
0x804a98d:   89 c1                           	mov ecx, eax
0x804a98f:   d3 fa                           	sar edx, cl
0x804a991:   89 d0                           	mov eax, edx
0x804a993:   85 c0                           	test eax, eax
0x804a995:   0f 84 c2 00 00 00               	je 0x804aa5d <func_1+0x1265>
0x804a99b:   c7 85 e0 fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x120], 4
0x804a9a5:   0f b6 85 e7 fe ff ff            	movzx eax, byte ptr [ebp - 0x119]
0x804a9ac:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x804a9b2:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a9b5:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x804a9bb:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a9c1:   89 85 04 ff ff ff               	mov dword ptr [ebp - 0xfc], eax
0x804a9c7:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x804a9cd:   f7 d0                           	not eax
0x804a9cf:   0f be d0                        	movsx edx, al
0x804a9d2:   0f b6 85 f1 fe ff ff            	movzx eax, byte ptr [ebp - 0x10f]
0x804a9d9:   0f be c0                        	movsx eax, al
0x804a9dc:   0f af c2                        	imul eax, edx
0x804a9df:   85 c0                           	test eax, eax
0x804a9e1:   75 04                           	jne 0x804a9e7 <func_1+0x11ef>
0x804a9e3:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x804a9e7:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a9ea:   98                              	cwde 
0x804a9eb:   ba 02 2e 00 00                  	mov edx, 0x2e02
0x804a9f0:   89 c1                           	mov ecx, eax
0x804a9f2:   d3 fa                           	sar edx, cl
0x804a9f4:   89 d0                           	mov eax, edx
0x804a9f6:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x804a9f9:   0f 96 c0                        	setbe al
0x804a9fc:   0f b6 c0                        	movzx eax, al
0x804a9ff:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804aa02:   0f 94 c0                        	sete al
0x804aa05:   0f b6 d0                        	movzx edx, al
0x804aa08:   0f b6 85 e7 fe ff ff            	movzx eax, byte ptr [ebp - 0x119]
0x804aa0f:   39 c2                           	cmp edx, eax
0x804aa11:   75 07                           	jne 0x804aa1a <func_1+0x1222>
0x804aa13:   b8 01 00 00 00                  	mov eax, 1
0x804aa18:   eb 05                           	jmp 0x804aa1f <func_1+0x1227>
0x804aa1a:   b8 00 00 00 00                  	mov eax, 0
0x804aa1f:   89 85 fc fe ff ff               	mov dword ptr [ebp - 0x104], eax
0x804aa25:   8b 85 fc fe ff ff               	mov eax, dword ptr [ebp - 0x104]
0x804aa2b:   23 45 8c                        	and eax, dword ptr [ebp - 0x74]
0x804aa2e:   09 85 f8 fe ff ff               	or dword ptr [ebp - 0x108], eax
0x804aa34:   8b 85 f8 fe ff ff               	mov eax, dword ptr [ebp - 0x108]
0x804aa3a:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804aa3d:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804aa40:   89 c2                           	mov edx, eax
0x804aa42:   0f b6 45 d7                     	movzx eax, byte ptr [ebp - 0x29]
0x804aa46:   21 d0                           	and eax, edx
0x804aa48:   88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x804aa4b:   c7 85 54 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xac], 0
0x804aa55:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804aa58:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804aa5b:   eb 06                           	jmp 0x804aa63 <func_1+0x126b>
0x804aa5d:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804aa60:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804aa63:   0f b7 85 4e ff ff ff            	movzx eax, word ptr [ebp - 0xb2]
0x804aa6a:   83 c8 01                        	or eax, 1
0x804aa6d:   0f be d0                        	movsx edx, al
0x804aa70:   0f be 85 63 ff ff ff            	movsx eax, byte ptr [ebp - 0x9d]
0x804aa77:   01 d0                           	add eax, edx
0x804aa79:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804aa7c:   c6 45 bf e3                     	mov byte ptr [ebp - 0x41], 0xe3
0x804aa80:   80 7d bf 1c                     	cmp byte ptr [ebp - 0x41], 0x1c
0x804aa84:   0f 85 15 03 00 00               	jne 0x804ad9f <func_1+0x15a7>
0x804aa8a:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804aa8e:   0f be 55 bf                     	movsx edx, byte ptr [ebp - 0x41]
0x804aa92:   0f bf 4d c8                     	movsx ecx, word ptr [ebp - 0x38]
0x804aa96:   0f bf 5d ca                     	movsx ebx, word ptr [ebp - 0x36]
0x804aa9a:   0f be 7d d7                     	movsx edi, byte ptr [ebp - 0x29]
0x804aa9e:   89 bd 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], edi
0x804aaa4:   0f b7 75 de                     	movzx esi, word ptr [ebp - 0x22]
0x804aaa8:   89 b5 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], esi
0x804aaae:   0f b6 7d 91                     	movzx edi, byte ptr [ebp - 0x6f]
0x804aab2:   89 bd 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], edi
0x804aab8:   0f b6 75 92                     	movzx esi, byte ptr [ebp - 0x6e]
0x804aabc:   89 b5 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], esi
0x804aac2:   0f be 7d 93                     	movsx edi, byte ptr [ebp - 0x6d]
0x804aac6:   89 bd 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edi
0x804aacc:   0f bf 75 ec                     	movsx esi, word ptr [ebp - 0x14]
0x804aad0:   89 b5 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], esi
0x804aad6:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x804aada:   0f bf 75 94                     	movsx esi, word ptr [ebp - 0x6c]
0x804aade:   50                              	push eax
0x804aadf:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804aae2:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804aae5:   52                              	push edx
0x804aae6:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804aae9:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804aaec:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804aaef:   51                              	push ecx
0x804aaf0:   53                              	push ebx
0x804aaf1:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804aaf4:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804aaf7:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804aafd:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804ab00:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804ab03:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804ab09:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804ab0c:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804ab12:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804ab15:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804ab1b:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804ab1e:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804ab24:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804ab27:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804ab2d:   57                              	push edi
0x804ab2e:   56                              	push esi
0x804ab2f:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804ab32:   e8 1d eb ff ff                  	call 0x8049654 <set_var>
0x804ab37:   83 c4 68                        	add esp, 0x68
0x804ab3a:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x804ab40:   e9 0e 03 00 00                  	jmp 0x804ae53 <func_1+0x165b>
0x804ab45:   c6 85 3f ff ff ff 00            	mov byte ptr [ebp - 0xc1], 0
0x804ab4c:   c6 85 3e ff ff ff 94            	mov byte ptr [ebp - 0xc2], 0x94
0x804ab53:   c7 85 38 ff ff ff db 5e 85 b3   	mov dword ptr [ebp - 0xc8], 0xb3855edb
0x804ab5d:   66 c7 85 36 ff ff ff 00 00      	mov word ptr [ebp - 0xca], 0
0x804ab66:   66 c7 85 34 ff ff ff f0 d1      	mov word ptr [ebp - 0xcc], 0xd1f0
0x804ab6f:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804ab75:   0f b7 c0                        	movzx eax, ax
0x804ab78:   c1 e0 06                        	shl eax, 6
0x804ab7b:   31 85 54 ff ff ff               	xor dword ptr [ebp - 0xac], eax
0x804ab81:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804ab84:   83 c8 f6                        	or eax, 0xfffffff6
0x804ab87:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x804ab8a:   0f 96 c0                        	setbe al
0x804ab8d:   88 85 3e ff ff ff               	mov byte ptr [ebp - 0xc2], al
0x804ab93:   66 c7 45 ae 00 00               	mov word ptr [ebp - 0x52], 0
0x804ab99:   e9 f6 01 00 00                  	jmp 0x804ad94 <func_1+0x159c>
0x804ab9e:   c7 85 30 ff ff ff 24 4f 58 cb   	mov dword ptr [ebp - 0xd0], 0xcb584f24
0x804aba8:   c7 85 2c ff ff ff 3f a5 bf 89   	mov dword ptr [ebp - 0xd4], 0x89bfa53f
0x804abb2:   c7 85 28 ff ff ff 4f 14 26 f1   	mov dword ptr [ebp - 0xd8], 0xf126144f
0x804abbc:   8b 4d c0                        	mov ecx, dword ptr [ebp - 0x40]
0x804abbf:   b8 01 00 00 00                  	mov eax, 1
0x804abc4:   99                              	cdq 
0x804abc5:   f7 f9                           	idiv ecx
0x804abc7:   89 d0                           	mov eax, edx
0x804abc9:   83 f0 fa                        	xor eax, 0xfffffffa
0x804abcc:   0f b6 c0                        	movzx eax, al
0x804abcf:   ba ff 00 00 00                  	mov edx, 0xff
0x804abd4:   89 c1                           	mov ecx, eax
0x804abd6:   d3 fa                           	sar edx, cl
0x804abd8:   89 d0                           	mov eax, edx
0x804abda:   66 c1 f8 0a                     	sar ax, 0xa
0x804abde:   98                              	cwde 
0x804abdf:   21 45 e0                        	and dword ptr [ebp - 0x20], eax
0x804abe2:   c6 45 97 e6                     	mov byte ptr [ebp - 0x69], 0xe6
0x804abe6:   e9 7f 01 00 00                  	jmp 0x804ad6a <func_1+0x1572>
0x804abeb:   66 c7 85 26 ff ff ff 02 00      	mov word ptr [ebp - 0xda], 2
0x804abf4:   c7 85 20 ff ff ff 7f 25 d5 1b   	mov dword ptr [ebp - 0xe0], 0x1bd5257f
0x804abfe:   c7 85 1c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xe4], 0xffffffff
0x804ac08:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804ac0b:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804ac0e:   0f b6 85 3e ff ff ff            	movzx eax, byte ptr [ebp - 0xc2]
0x804ac15:   88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x804ac18:   80 7d 92 00                     	cmp byte ptr [ebp - 0x6e], 0
0x804ac1c:   74 07                           	je 0x804ac25 <func_1+0x142d>
0x804ac1e:   ba 01 00 00 00                  	mov edx, 1
0x804ac23:   eb 05                           	jmp 0x804ac2a <func_1+0x1432>
0x804ac25:   ba 00 00 00 00                  	mov edx, 0
0x804ac2a:   0f b6 85 3f ff ff ff            	movzx eax, byte ptr [ebp - 0xc1]
0x804ac31:   39 c2                           	cmp edx, eax
0x804ac33:   b8 01 00 00 00                  	mov eax, 1
0x804ac38:   39 85 30 ff ff ff               	cmp dword ptr [ebp - 0xd0], eax
0x804ac3e:   0f 95 c0                        	setne al
0x804ac41:   0f b6 d0                        	movzx edx, al
0x804ac44:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x804ac48:   39 c2                           	cmp edx, eax
0x804ac4a:   74 7e                           	je 0x804acca <func_1+0x14d2>
0x804ac4c:   c7 85 14 ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xec], 0xfffffff6
0x804ac56:   c7 85 10 ff ff ff 7b f9 a9 89   	mov dword ptr [ebp - 0xf0], 0x89a9f97b
0x804ac60:   83 ad 14 ff ff ff 01            	sub dword ptr [ebp - 0xec], 1
0x804ac67:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804ac6a:   0f b6 d0                        	movzx edx, al
0x804ac6d:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804ac70:   0f b7 c0                        	movzx eax, ax
0x804ac73:   69 c0 e3 e7 00 00               	imul eax, eax, 0xe7e3
0x804ac79:   c1 e8 10                        	shr eax, 0x10
0x804ac7c:   66 c1 e8 0d                     	shr ax, 0xd
0x804ac80:   0f be d8                        	movsx ebx, al
0x804ac83:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x804ac87:   0f be c0                        	movsx eax, al
0x804ac8a:   89 c1                           	mov ecx, eax
0x804ac8c:   d3 fb                           	sar ebx, cl
0x804ac8e:   89 d8                           	mov eax, ebx
0x804ac90:   25 1e dc 00 00                  	and eax, 0xdc1e
0x804ac95:   39 85 58 ff ff ff               	cmp dword ptr [ebp - 0xa8], eax
0x804ac9b:   0f 93 c0                        	setae al
0x804ac9e:   0f b6 c0                        	movzx eax, al
0x804aca1:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x804aca7:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804acad:   89 c3                           	mov ebx, eax
0x804acaf:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x804acb5:   89 c1                           	mov ecx, eax
0x804acb7:   89 d8                           	mov eax, ebx
0x804acb9:   0f af c1                        	imul eax, ecx
0x804acbc:   0f b6 c0                        	movzx eax, al
0x804acbf:   0f af c2                        	imul eax, edx
0x804acc2:   21 85 10 ff ff ff               	and dword ptr [ebp - 0xf0], eax
0x804acc8:   eb 7e                           	jmp 0x804ad48 <func_1+0x1550>
0x804acca:   c7 85 18 ff ff ff 8d fb 3e 30   	mov dword ptr [ebp - 0xe8], 0x303efb8d
0x804acd4:   c6 45 d7 df                     	mov byte ptr [ebp - 0x29], 0xdf
0x804acd8:   0f bf 55 ae                     	movsx edx, word ptr [ebp - 0x52]
0x804acdc:   0f bf 85 26 ff ff ff            	movsx eax, word ptr [ebp - 0xda]
0x804ace3:   39 85 18 ff ff ff               	cmp dword ptr [ebp - 0xe8], eax
0x804ace9:   75 06                           	jne 0x804acf1 <func_1+0x14f9>
0x804aceb:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x804acef:   74 07                           	je 0x804acf8 <func_1+0x1500>
0x804acf1:   b8 01 00 00 00                  	mov eax, 1
0x804acf6:   eb 05                           	jmp 0x804acfd <func_1+0x1505>
0x804acf8:   b8 00 00 00 00                  	mov eax, 0
0x804acfd:   01 d0                           	add eax, edx
0x804acff:   83 f8 df                        	cmp eax, -0x21
0x804ad02:   0f 95 c0                        	setne al
0x804ad05:   0f b6 d0                        	movzx edx, al
0x804ad08:   0f bf 45 ca                     	movsx eax, word ptr [ebp - 0x36]
0x804ad0c:   39 c2                           	cmp edx, eax
0x804ad0e:   0f 95 c0                        	setne al
0x804ad11:   0f b6 d0                        	movzx edx, al
0x804ad14:   0f bf 85 34 ff ff ff            	movsx eax, word ptr [ebp - 0xcc]
0x804ad1b:   0f af c2                        	imul eax, edx
0x804ad1e:   89 85 54 ff ff ff               	mov dword ptr [ebp - 0xac], eax
0x804ad24:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804ad2a:   c0 e8 02                        	shr al, 2
0x804ad2d:   0f b6 c0                        	movzx eax, al
0x804ad30:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804ad33:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804ad36:   21 45 d0                        	and dword ptr [ebp - 0x30], eax
0x804ad39:   83 bd 40 ff ff ff 00            	cmp dword ptr [ebp - 0xc0], 0
0x804ad40:   75 1d                           	jne 0x804ad5f <func_1+0x1567>
0x804ad42:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x804ad46:   75 2e                           	jne 0x804ad76 <func_1+0x157e>
0x804ad48:   c7 85 5c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa4], 0
0x804ad52:   c7 45 cc 00 00 00 00            	mov dword ptr [ebp - 0x34], 0
0x804ad59:   83 6d b8 01                     	sub dword ptr [ebp - 0x48], 1
0x804ad5d:   eb 01                           	jmp 0x804ad60 <func_1+0x1568>
0x804ad5f:   90                              	nop 
0x804ad60:   0f b6 45 97                     	movzx eax, byte ptr [ebp - 0x69]
0x804ad64:   83 c0 01                        	add eax, 1
0x804ad67:   88 45 97                        	mov byte ptr [ebp - 0x69], al
0x804ad6a:   80 7d 97 f7                     	cmp byte ptr [ebp - 0x69], 0xf7
0x804ad6e:   0f 8d 77 fe ff ff               	jge 0x804abeb <func_1+0x13f3>
0x804ad74:   eb 01                           	jmp 0x804ad77 <func_1+0x157f>
0x804ad76:   90                              	nop 
0x804ad77:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804ad7b:   83 e8 01                        	sub eax, 1
0x804ad7e:   66 89 45 b6                     	mov word ptr [ebp - 0x4a], ax
0x804ad82:   80 bd 3e ff ff ff 00            	cmp byte ptr [ebp - 0xc2], 0
0x804ad89:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x804ad8d:   83 e8 01                        	sub eax, 1
0x804ad90:   66 89 45 ae                     	mov word ptr [ebp - 0x52], ax
0x804ad94:   66 83 7d ae e8                  	cmp word ptr [ebp - 0x52], -0x18
0x804ad99:   0f 8d ff fd ff ff               	jge 0x804ab9e <func_1+0x13a6>
0x804ad9f:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804ada3:   0f be 55 bf                     	movsx edx, byte ptr [ebp - 0x41]
0x804ada7:   0f bf 4d c8                     	movsx ecx, word ptr [ebp - 0x38]
0x804adab:   0f bf 5d ca                     	movsx ebx, word ptr [ebp - 0x36]
0x804adaf:   0f be 7d d7                     	movsx edi, byte ptr [ebp - 0x29]
0x804adb3:   89 bd 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], edi
0x804adb9:   0f b7 75 de                     	movzx esi, word ptr [ebp - 0x22]
0x804adbd:   89 b5 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], esi
0x804adc3:   0f b6 7d 91                     	movzx edi, byte ptr [ebp - 0x6f]
0x804adc7:   89 bd 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], edi
0x804adcd:   0f b6 75 92                     	movzx esi, byte ptr [ebp - 0x6e]
0x804add1:   89 b5 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], esi
0x804add7:   0f be 7d 93                     	movsx edi, byte ptr [ebp - 0x6d]
0x804addb:   89 bd 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edi
0x804ade1:   0f bf 75 ec                     	movsx esi, word ptr [ebp - 0x14]
0x804ade5:   89 b5 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], esi
0x804adeb:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x804adef:   0f bf 75 94                     	movsx esi, word ptr [ebp - 0x6c]
0x804adf3:   50                              	push eax
0x804adf4:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804adf7:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804adfa:   52                              	push edx
0x804adfb:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804adfe:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804ae01:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804ae04:   51                              	push ecx
0x804ae05:   53                              	push ebx
0x804ae06:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804ae09:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804ae0c:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804ae12:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804ae15:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804ae18:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804ae1e:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804ae21:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804ae27:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804ae2a:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804ae30:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804ae33:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804ae39:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804ae3c:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804ae42:   57                              	push edi
0x804ae43:   56                              	push esi
0x804ae44:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804ae47:   e8 08 e8 ff ff                  	call 0x8049654 <set_var>
0x804ae4c:   83 c4 68                        	add esp, 0x68
0x804ae4f:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x804ae53:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804ae56:   5b                              	pop ebx
0x804ae57:   5e                              	pop esi
0x804ae58:   5f                              	pop edi
0x804ae59:   5d                              	pop ebp
0x804ae5a:   c3                              	ret 
; function: main at 0x804ae5b -- 0x804b1ef
0x804ae5b:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804ae5f:   83 e4 f0                        	and esp, 0xfffffff0
0x804ae62:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804ae65:   55                              	push ebp
0x804ae66:   89 e5                           	mov ebp, esp
0x804ae68:   53                              	push ebx
0x804ae69:   51                              	push ecx
0x804ae6a:   83 ec 10                        	sub esp, 0x10
0x804ae6d:   e8 1e d5 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ae72:   81 c3 8e 31 00 00               	add ebx, 0x318e
0x804ae78:   89 c8                           	mov eax, ecx
0x804ae7a:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804ae81:   83 38 02                        	cmp dword ptr [eax], 2
0x804ae84:   75 26                           	jne 0x804aeac <main+0x51>
0x804ae86:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804ae89:   83 c0 04                        	add eax, 4
0x804ae8c:   8b 00                           	mov eax, dword ptr [eax]
0x804ae8e:   83 ec 08                        	sub esp, 8
0x804ae91:   8d 93 dc d2 ff ff               	lea edx, [ebx - 0x2d24]
0x804ae97:   52                              	push edx
0x804ae98:   50                              	push eax
0x804ae99:   e8 62 d4 ff ff                  	call 0x8048300 <strcmp>
0x804ae9e:   83 c4 10                        	add esp, 0x10
0x804aea1:   85 c0                           	test eax, eax
0x804aea3:   75 07                           	jne 0x804aeac <main+0x51>
0x804aea5:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804aeac:   e8 a5 d5 ff ff                  	call 0x8048456 <platform_main_begin>
0x804aeb1:   e8 b5 e5 ff ff                  	call 0x804946b <crc32_gentab>
0x804aeb6:   e8 3d e9 ff ff                  	call 0x80497f8 <func_1>
0x804aebb:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804aec1:   89 c2                           	mov edx, eax
0x804aec3:   83 ec 04                        	sub esp, 4
0x804aec6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aec9:   8d 83 de d2 ff ff               	lea eax, [ebx - 0x2d22]
0x804aecf:   50                              	push eax
0x804aed0:   52                              	push edx
0x804aed1:   e8 a1 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aed6:   83 c4 10                        	add esp, 0x10
0x804aed9:   0f b7 83 28 00 00 00            	movzx eax, word ptr [ebx + 0x28]
0x804aee0:   98                              	cwde 
0x804aee1:   83 ec 04                        	sub esp, 4
0x804aee4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aee7:   8d 93 e2 d2 ff ff               	lea edx, [ebx - 0x2d1e]
0x804aeed:   52                              	push edx
0x804aeee:   50                              	push eax
0x804aeef:   e8 83 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aef4:   83 c4 10                        	add esp, 0x10
0x804aef7:   0f b6 83 2a 00 00 00            	movzx eax, byte ptr [ebx + 0x2a]
0x804aefe:   0f b6 c0                        	movzx eax, al
0x804af01:   83 ec 04                        	sub esp, 4
0x804af04:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af07:   8d 93 e6 d2 ff ff               	lea edx, [ebx - 0x2d1a]
0x804af0d:   52                              	push edx
0x804af0e:   50                              	push eax
0x804af0f:   e8 63 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af14:   83 c4 10                        	add esp, 0x10
0x804af17:   0f b7 83 2c 00 00 00            	movzx eax, word ptr [ebx + 0x2c]
0x804af1e:   98                              	cwde 
0x804af1f:   83 ec 04                        	sub esp, 4
0x804af22:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af25:   8d 93 eb d2 ff ff               	lea edx, [ebx - 0x2d15]
0x804af2b:   52                              	push edx
0x804af2c:   50                              	push eax
0x804af2d:   e8 45 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af32:   83 c4 10                        	add esp, 0x10
0x804af35:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804af3b:   83 ec 04                        	sub esp, 4
0x804af3e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af41:   8d 93 f0 d2 ff ff               	lea edx, [ebx - 0x2d10]
0x804af47:   52                              	push edx
0x804af48:   50                              	push eax
0x804af49:   e8 29 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af4e:   83 c4 10                        	add esp, 0x10
0x804af51:   0f b6 83 a4 04 00 00            	movzx eax, byte ptr [ebx + 0x4a4]
0x804af58:   0f be c0                        	movsx eax, al
0x804af5b:   83 ec 04                        	sub esp, 4
0x804af5e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af61:   8d 93 f5 d2 ff ff               	lea edx, [ebx - 0x2d0b]
0x804af67:   52                              	push edx
0x804af68:   50                              	push eax
0x804af69:   e8 09 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af6e:   83 c4 10                        	add esp, 0x10
0x804af71:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804af77:   89 c2                           	mov edx, eax
0x804af79:   83 ec 04                        	sub esp, 4
0x804af7c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af7f:   8d 83 fa d2 ff ff               	lea eax, [ebx - 0x2d06]
0x804af85:   50                              	push eax
0x804af86:   52                              	push edx
0x804af87:   e8 eb e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af8c:   83 c4 10                        	add esp, 0x10
0x804af8f:   0f b6 83 38 00 00 00            	movzx eax, byte ptr [ebx + 0x38]
0x804af96:   0f b6 c0                        	movzx eax, al
0x804af99:   83 ec 04                        	sub esp, 4
0x804af9c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af9f:   8d 93 ff d2 ff ff               	lea edx, [ebx - 0x2d01]
0x804afa5:   52                              	push edx
0x804afa6:   50                              	push eax
0x804afa7:   e8 cb e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afac:   83 c4 10                        	add esp, 0x10
0x804afaf:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804afb5:   89 c2                           	mov edx, eax
0x804afb7:   83 ec 04                        	sub esp, 4
0x804afba:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afbd:   8d 83 04 d3 ff ff               	lea eax, [ebx - 0x2cfc]
0x804afc3:   50                              	push eax
0x804afc4:   52                              	push edx
0x804afc5:   e8 ad e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afca:   83 c4 10                        	add esp, 0x10
0x804afcd:   0f b6 83 40 00 00 00            	movzx eax, byte ptr [ebx + 0x40]
0x804afd4:   0f b6 c0                        	movzx eax, al
0x804afd7:   83 ec 04                        	sub esp, 4
0x804afda:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afdd:   8d 93 09 d3 ff ff               	lea edx, [ebx - 0x2cf7]
0x804afe3:   52                              	push edx
0x804afe4:   50                              	push eax
0x804afe5:   e8 8d e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afea:   83 c4 10                        	add esp, 0x10
0x804afed:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804aff3:   89 c2                           	mov edx, eax
0x804aff5:   83 ec 04                        	sub esp, 4
0x804aff8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804affb:   8d 83 0f d3 ff ff               	lea eax, [ebx - 0x2cf1]
0x804b001:   50                              	push eax
0x804b002:   52                              	push edx
0x804b003:   e8 6f e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b008:   83 c4 10                        	add esp, 0x10
0x804b00b:   0f b7 83 48 00 00 00            	movzx eax, word ptr [ebx + 0x48]
0x804b012:   0f b7 c0                        	movzx eax, ax
0x804b015:   83 ec 04                        	sub esp, 4
0x804b018:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b01b:   8d 93 15 d3 ff ff               	lea edx, [ebx - 0x2ceb]
0x804b021:   52                              	push edx
0x804b022:   50                              	push eax
0x804b023:   e8 4f e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b028:   83 c4 10                        	add esp, 0x10
0x804b02b:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804b031:   83 ec 04                        	sub esp, 4
0x804b034:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b037:   8d 93 1b d3 ff ff               	lea edx, [ebx - 0x2ce5]
0x804b03d:   52                              	push edx
0x804b03e:   50                              	push eax
0x804b03f:   e8 33 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b044:   83 c4 10                        	add esp, 0x10
0x804b047:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804b04d:   83 ec 04                        	sub esp, 4
0x804b050:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b053:   8d 93 21 d3 ff ff               	lea edx, [ebx - 0x2cdf]
0x804b059:   52                              	push edx
0x804b05a:   50                              	push eax
0x804b05b:   e8 17 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b060:   83 c4 10                        	add esp, 0x10
0x804b063:   0f b6 83 50 00 00 00            	movzx eax, byte ptr [ebx + 0x50]
0x804b06a:   0f be c0                        	movsx eax, al
0x804b06d:   83 ec 04                        	sub esp, 4
0x804b070:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b073:   8d 93 27 d3 ff ff               	lea edx, [ebx - 0x2cd9]
0x804b079:   52                              	push edx
0x804b07a:   50                              	push eax
0x804b07b:   e8 f7 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b080:   83 c4 10                        	add esp, 0x10
0x804b083:   8b 83 ac 04 00 00               	mov eax, dword ptr [ebx + 0x4ac]
0x804b089:   89 c2                           	mov edx, eax
0x804b08b:   83 ec 04                        	sub esp, 4
0x804b08e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b091:   8d 83 2d d3 ff ff               	lea eax, [ebx - 0x2cd3]
0x804b097:   50                              	push eax
0x804b098:   52                              	push edx
0x804b099:   e8 d9 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b09e:   83 c4 10                        	add esp, 0x10
0x804b0a1:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804b0a7:   89 c2                           	mov edx, eax
0x804b0a9:   83 ec 04                        	sub esp, 4
0x804b0ac:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0af:   8d 83 33 d3 ff ff               	lea eax, [ebx - 0x2ccd]
0x804b0b5:   50                              	push eax
0x804b0b6:   52                              	push edx
0x804b0b7:   e8 bb e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0bc:   83 c4 10                        	add esp, 0x10
0x804b0bf:   0f b7 83 b0 04 00 00            	movzx eax, word ptr [ebx + 0x4b0]
0x804b0c6:   98                              	cwde 
0x804b0c7:   83 ec 04                        	sub esp, 4
0x804b0ca:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0cd:   8d 93 39 d3 ff ff               	lea edx, [ebx - 0x2cc7]
0x804b0d3:   52                              	push edx
0x804b0d4:   50                              	push eax
0x804b0d5:   e8 9d e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0da:   83 c4 10                        	add esp, 0x10
0x804b0dd:   0f b7 83 58 00 00 00            	movzx eax, word ptr [ebx + 0x58]
0x804b0e4:   98                              	cwde 
0x804b0e5:   83 ec 04                        	sub esp, 4
0x804b0e8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0eb:   8d 93 3f d3 ff ff               	lea edx, [ebx - 0x2cc1]
0x804b0f1:   52                              	push edx
0x804b0f2:   50                              	push eax
0x804b0f3:   e8 7f e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0f8:   83 c4 10                        	add esp, 0x10
0x804b0fb:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804b101:   89 c2                           	mov edx, eax
0x804b103:   83 ec 04                        	sub esp, 4
0x804b106:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b109:   8d 83 45 d3 ff ff               	lea eax, [ebx - 0x2cbb]
0x804b10f:   50                              	push eax
0x804b110:   52                              	push edx
0x804b111:   e8 61 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b116:   83 c4 10                        	add esp, 0x10
0x804b119:   8b 83 b4 04 00 00               	mov eax, dword ptr [ebx + 0x4b4]
0x804b11f:   83 ec 04                        	sub esp, 4
0x804b122:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b125:   8d 93 4b d3 ff ff               	lea edx, [ebx - 0x2cb5]
0x804b12b:   52                              	push edx
0x804b12c:   50                              	push eax
0x804b12d:   e8 45 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b132:   83 c4 10                        	add esp, 0x10
0x804b135:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804b13b:   83 ec 04                        	sub esp, 4
0x804b13e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b141:   8d 93 51 d3 ff ff               	lea edx, [ebx - 0x2caf]
0x804b147:   52                              	push edx
0x804b148:   50                              	push eax
0x804b149:   e8 29 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b14e:   83 c4 10                        	add esp, 0x10
0x804b151:   0f b6 83 64 00 00 00            	movzx eax, byte ptr [ebx + 0x64]
0x804b158:   0f be c0                        	movsx eax, al
0x804b15b:   83 ec 04                        	sub esp, 4
0x804b15e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b161:   8d 93 57 d3 ff ff               	lea edx, [ebx - 0x2ca9]
0x804b167:   52                              	push edx
0x804b168:   50                              	push eax
0x804b169:   e8 09 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b16e:   83 c4 10                        	add esp, 0x10
0x804b171:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804b177:   83 ec 04                        	sub esp, 4
0x804b17a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b17d:   8d 93 5d d3 ff ff               	lea edx, [ebx - 0x2ca3]
0x804b183:   52                              	push edx
0x804b184:   50                              	push eax
0x804b185:   e8 ed e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b18a:   83 c4 10                        	add esp, 0x10
0x804b18d:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804b193:   83 ec 04                        	sub esp, 4
0x804b196:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b199:   8d 93 63 d3 ff ff               	lea edx, [ebx - 0x2c9d]
0x804b19f:   52                              	push edx
0x804b1a0:   50                              	push eax
0x804b1a1:   e8 d1 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1a6:   83 c4 10                        	add esp, 0x10
0x804b1a9:   0f b7 83 70 00 00 00            	movzx eax, word ptr [ebx + 0x70]
0x804b1b0:   0f b7 c0                        	movzx eax, ax
0x804b1b3:   83 ec 04                        	sub esp, 4
0x804b1b6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1b9:   8d 93 69 d3 ff ff               	lea edx, [ebx - 0x2c97]
0x804b1bf:   52                              	push edx
0x804b1c0:   50                              	push eax
0x804b1c1:   e8 b1 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1c6:   83 c4 10                        	add esp, 0x10
0x804b1c9:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b1cf:   f7 d0                           	not eax
0x804b1d1:   83 ec 08                        	sub esp, 8
0x804b1d4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1d7:   50                              	push eax
0x804b1d8:   e8 89 d2 ff ff                  	call 0x8048466 <platform_main_end>
0x804b1dd:   83 c4 10                        	add esp, 0x10
0x804b1e0:   b8 00 00 00 00                  	mov eax, 0
0x804b1e5:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b1e8:   59                              	pop ecx
0x804b1e9:   5b                              	pop ebx
0x804b1ea:   5d                              	pop ebp
0x804b1eb:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b1ee:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b1ef -- 0x804b1f3
0x804b1ef:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b1f2:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b1f3 -- 0x804b1f7
0x804b1f3:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b1f6:   c3                              	ret 
; data inside code section at 0x804b1f7 -- 0x804b200
0x804b1f7:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: __libc_csu_init at 0x804b200 -- 0x804b25d
0x804b200:   55                              	push ebp
0x804b201:   57                              	push edi
0x804b202:   56                              	push esi
0x804b203:   53                              	push ebx
0x804b204:   e8 87 d1 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b209:   81 c3 f7 2d 00 00               	add ebx, 0x2df7
0x804b20f:   83 ec 0c                        	sub esp, 0xc
0x804b212:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b216:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b21c:   e8 ab d0 ff ff                  	call 0x80482cc <_init>
0x804b221:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b227:   29 c6                           	sub esi, eax
0x804b229:   c1 fe 02                        	sar esi, 2
0x804b22c:   85 f6                           	test esi, esi
0x804b22e:   74 25                           	je 0x804b255 <__libc_csu_init+0x55>
0x804b230:   31 ff                           	xor edi, edi
0x804b232:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b238:   83 ec 04                        	sub esp, 4
0x804b23b:   55                              	push ebp
0x804b23c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b240:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b244:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b24b:   83 c7 01                        	add edi, 1
0x804b24e:   83 c4 10                        	add esp, 0x10
0x804b251:   39 fe                           	cmp esi, edi
0x804b253:   75 e3                           	jne 0x804b238 <__libc_csu_init+0x38>
0x804b255:   83 c4 0c                        	add esp, 0xc
0x804b258:   5b                              	pop ebx
0x804b259:   5e                              	pop esi
0x804b25a:   5f                              	pop edi
0x804b25b:   5d                              	pop ebp
0x804b25c:   c3                              	ret 
; data inside code section at 0x804b25d -- 0x804b260
0x804b25d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b260 -- 0x804b262
0x804b260:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b264 -- 0x804b278
0x804b264:   53                              	push ebx
0x804b265:   83 ec 08                        	sub esp, 8
0x804b268:   e8 23 d1 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b26d:   81 c3 93 2d 00 00               	add ebx, 0x2d93
0x804b273:   83 c4 08                        	add esp, 8
0x804b276:   5b                              	pop ebx
0x804b277:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 7c b2 04 08  04 00 00 00 11 00 10 00   |....|...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b278:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b288:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b298:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b2a8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b2b8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b2c8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b2d8:   25 64 0a 00 31 00 67 5f  32 00 67 5f 33 00 67 5f   |%d..1.g_2.g_3.g_|
0x804b2e8:   31 30 00 67 5f 35 37 00  67 5f 35 39 00 67 5f 36   |10.g_57.g_59.g_6|
0x804b2f8:   31 00 67 5f 37 33 00 67  5f 39 37 00 67 5f 39 38   |1.g_73.g_97.g_98|
0x804b308:   00 67 5f 31 31 34 00 67  5f 31 33 32 00 67 5f 31   |.g_114.g_132.g_1|
0x804b318:   33 33 00 67 5f 31 35 34  00 67 5f 31 37 33 00 67   |33.g_154.g_173.g|
0x804b328:   5f 31 37 34 00 67 5f 31  37 35 00 67 5f 31 37 36   |_174.g_175.g_176|
0x804b338:   00 67 5f 32 30 36 00 67  5f 32 34 34 00 67 5f 32   |.g_206.g_244.g_2|
0x804b348:   34 35 00 67 5f 32 36 35  00 67 5f 32 36 36 00 67   |45.g_265.g_266.g|
0x804b358:   5f 32 37 30 00 67 5f 34  33 31 00 67 5f 34 37 38   |_270.g_431.g_478|
0x804b368:   00 67 5f 34 38 31 00 00  00 00 00 3f ff ff ff 7e   |.g_481.....?...~|
0x804b378:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x804b388:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x804b398:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804b3a8:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804b3b8:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804b3c8:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804b3d8:   01                                                 |.               |
; section: .eh_frame_hdr
0x804b3d8:   01 1b 03 3b c0 02 00 00  57 00 00 00 18 cf ff ff   |...;....W.......|
0x804b3e8:   f0 02 00 00 58 cf ff ff  14 03 00 00 a8 cf ff ff   |....X...........|
0x804b3f8:   dc 02 00 00 7e d0 ff ff  28 03 00 00 8e d0 ff ff   |....~...(.......|
0x804b408:   48 03 00 00 bc d0 ff ff  6c 03 00 00 da d0 ff ff   |H.......l.......|
0x804b418:   8c 03 00 00 02 d1 ff ff  ac 03 00 00 2c d1 ff ff   |............,...|
0x804b428:   cc 03 00 00 55 d1 ff ff  ec 03 00 00 98 d1 ff ff   |....U...........|
0x804b438:   0c 04 00 00 d9 d1 ff ff  2c 04 00 00 31 d2 ff ff   |........,...1...|
0x804b448:   50 04 00 00 83 d2 ff ff  74 04 00 00 c0 d2 ff ff   |P.......t.......|
0x804b458:   94 04 00 00 f7 d2 ff ff  b4 04 00 00 16 d3 ff ff   |................|
0x804b468:   d4 04 00 00 40 d3 ff ff  f4 04 00 00 6c d3 ff ff   |....@.......l...|
0x804b478:   14 05 00 00 97 d3 ff ff  34 05 00 00 e0 d3 ff ff   |........4.......|
0x804b488:   54 05 00 00 27 d4 ff ff  74 05 00 00 81 d4 ff ff   |T...'...t.......|
0x804b498:   98 05 00 00 d5 d4 ff ff  bc 05 00 00 14 d5 ff ff   |................|
0x804b4a8:   dc 05 00 00 4d d5 ff ff  fc 05 00 00 6f d5 ff ff   |....M.......o...|
0x804b4b8:   1c 06 00 00 bd d5 ff ff  3c 06 00 00 f9 d5 ff ff   |........<.......|
0x804b4c8:   5c 06 00 00 82 d6 ff ff  7c 06 00 00 b4 d6 ff ff   |\.......|.......|
0x804b4d8:   9c 06 00 00 e4 d6 ff ff  bc 06 00 00 29 d7 ff ff   |............)...|
0x804b4e8:   dc 06 00 00 68 d7 ff ff  fc 06 00 00 9a d7 ff ff   |....h...........|
0x804b4f8:   1c 07 00 00 c6 d7 ff ff  3c 07 00 00 e4 d7 ff ff   |........<.......|
0x804b508:   5c 07 00 00 0c d8 ff ff  7c 07 00 00 31 d8 ff ff   |\.......|...1...|
0x804b518:   9c 07 00 00 56 d8 ff ff  bc 07 00 00 8d d8 ff ff   |....V...........|
0x804b528:   dc 07 00 00 c1 d8 ff ff  fc 07 00 00 13 d9 ff ff   |................|
0x804b538:   20 08 00 00 5f d9 ff ff  44 08 00 00 96 d9 ff ff   | ..._...D.......|
0x804b548:   64 08 00 00 c7 d9 ff ff  84 08 00 00 e6 d9 ff ff   |d...............|
0x804b558:   a4 08 00 00 10 da ff ff  c4 08 00 00 38 da ff ff   |............8...|
0x804b568:   e4 08 00 00 61 da ff ff  04 09 00 00 9d da ff ff   |....a...........|
0x804b578:   24 09 00 00 d7 da ff ff  44 09 00 00 2a db ff ff   |$.......D...*...|
0x804b588:   68 09 00 00 77 db ff ff  8c 09 00 00 af db ff ff   |h...w...........|
0x804b598:   ac 09 00 00 e1 db ff ff  cc 09 00 00 f5 db ff ff   |................|
0x804b5a8:   ec 09 00 00 0c dc ff ff  0c 0a 00 00 21 dc ff ff   |............!...|
0x804b5b8:   2c 0a 00 00 37 dc ff ff  4c 0a 00 00 5e dc ff ff   |,...7...L...^...|
0x804b5c8:   6c 0a 00 00 83 dc ff ff  8c 0a 00 00 c2 dc ff ff   |l...............|
0x804b5d8:   ac 0a 00 00 fb dc ff ff  cc 0a 00 00 27 dd ff ff   |............'...|
0x804b5e8:   ec 0a 00 00 4d dd ff ff  0c 0b 00 00 8f dd ff ff   |....M...........|
0x804b5f8:   2c 0b 00 00 d1 dd ff ff  4c 0b 00 00 13 de ff ff   |,.......L.......|
0x804b608:   6c 0b 00 00 88 de ff ff  8c 0b 00 00 e5 de ff ff   |l...............|
0x804b618:   ac 0b 00 00 42 df ff ff  cc 0b 00 00 9f df ff ff   |....B...........|
0x804b628:   ec 0b 00 00 2f e0 ff ff  0c 0c 00 00 93 e0 ff ff   |..../...........|
0x804b638:   2c 0c 00 00 03 e1 ff ff  4c 0c 00 00 4a e1 ff ff   |,.......L...J...|
0x804b648:   70 0c 00 00 9f e1 ff ff  90 0c 00 00 e6 e1 ff ff   |p...............|
0x804b658:   b4 0c 00 00 4e e2 ff ff  d8 0c 00 00 7c e2 ff ff   |....N.......|...|
0x804b668:   fc 0c 00 00 20 e4 ff ff  2c 0d 00 00 83 fa ff ff   |.... ...,.......|
0x804b678:   5c 0d 00 00 17 fe ff ff  94 0d 00 00 1b fe ff ff   |\...............|
0x804b688:   a8 0d 00 00 28 fe ff ff  bc 0d 00 00 88 fe ff ff   |....(...........|
0x804b698:   08 0e 00 00 14                                     |.....           |
; section: .eh_frame
0x804b69c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b6ac:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b6bc:   c4 cc ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b6cc:   30 00 00 00 20 cc ff ff  40 00 00 00 00 0e 08 46   |0... ...@......F|
0x804b6dc:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b6ec:   10 00 00 00 54 00 00 00  3c cc ff ff 08 00 00 00   |....T...<.......|
0x804b6fc:   00 00 00 00 1c 00 00 00  68 00 00 00 4e cd ff ff   |........h...N...|
0x804b70c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b71c:   04 04 00 00 20 00 00 00  88 00 00 00 3e cd ff ff   |.... .......>...|
0x804b72c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b73c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b74c:   48 cd ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |H........A....B.|
0x804b75c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b76c:   46 cd ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |F...(....A....B.|
0x804b77c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b78c:   4e cd ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |N...*....A....B.|
0x804b79c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b7ac:   58 cd ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |X...)....A....B.|
0x804b7bc:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b7cc:   61 cd ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |a...C....A....B.|
0x804b7dc:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b7ec:   84 cd ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b7fc:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b80c:   a5 cd ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b81c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b82c:   90 01 00 00 d9 cd ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b83c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b84c:   1c 00 00 00 b4 01 00 00  07 ce ff ff 3d 00 00 00   |............=...|
0x804b85c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b86c:   1c 00 00 00 d4 01 00 00  24 ce ff ff 37 00 00 00   |........$...7...|
0x804b87c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b88c:   1c 00 00 00 f4 01 00 00  3b ce ff ff 1f 00 00 00   |........;.......|
0x804b89c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b8ac:   1c 00 00 00 14 02 00 00  3a ce ff ff 2a 00 00 00   |........:...*...|
0x804b8bc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b8cc:   1c 00 00 00 34 02 00 00  44 ce ff ff 2c 00 00 00   |....4...D...,...|
0x804b8dc:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b8ec:   1c 00 00 00 54 02 00 00  50 ce ff ff 2b 00 00 00   |....T...P...+...|
0x804b8fc:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b90c:   1c 00 00 00 74 02 00 00  5b ce ff ff 49 00 00 00   |....t...[...I...|
0x804b91c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b92c:   1c 00 00 00 94 02 00 00  84 ce ff ff 47 00 00 00   |............G...|
0x804b93c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b94c:   20 00 00 00 b4 02 00 00  ab ce ff ff 5a 00 00 00   | ...........Z...|
0x804b95c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b96c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 e1 ce ff ff   |.... ...........|
0x804b97c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b98c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b99c:   11 cf ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b9ac:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b9bc:   30 cf ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |0...9....A....B.|
0x804b9cc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b9dc:   49 cf ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |I..."....A....B.|
0x804b9ec:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b9fc:   4b cf ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |K...N....A....B.|
0x804ba0c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804ba1c:   79 cf ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |y...<....A....B.|
0x804ba2c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804ba3c:   95 cf ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804ba4c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804ba5c:   fe cf ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804ba6c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804ba7c:   10 d0 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804ba8c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804ba9c:   20 d0 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   | ...E....A....B.|
0x804baac:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804babc:   45 d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |E...?....A....B.|
0x804bacc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804badc:   64 d0 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |d...2....A....B.|
0x804baec:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804bafc:   76 d0 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |v...,....A....B.|
0x804bb0c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804bb1c:   82 d0 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bb2c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804bb3c:   80 d0 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804bb4c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804bb5c:   88 d0 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bb6c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804bb7c:   8d d0 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bb8c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804bb9c:   92 d0 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804bbac:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804bbbc:   a9 d0 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804bbcc:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804bbdc:   bd d0 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804bbec:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804bbfc:   60 05 00 00 eb d0 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804bc0c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804bc1c:   1c 00 00 00 84 05 00 00  13 d1 ff ff 37 00 00 00   |............7...|
0x804bc2c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bc3c:   1c 00 00 00 a4 05 00 00  2a d1 ff ff 31 00 00 00   |........*...1...|
0x804bc4c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bc5c:   1c 00 00 00 c4 05 00 00  3b d1 ff ff 1f 00 00 00   |........;.......|
0x804bc6c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bc7c:   1c 00 00 00 e4 05 00 00  3a d1 ff ff 2a 00 00 00   |........:...*...|
0x804bc8c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bc9c:   1c 00 00 00 04 06 00 00  44 d1 ff ff 28 00 00 00   |........D...(...|
0x804bcac:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bcbc:   1c 00 00 00 24 06 00 00  4c d1 ff ff 29 00 00 00   |....$...L...)...|
0x804bccc:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bcdc:   1c 00 00 00 44 06 00 00  55 d1 ff ff 3c 00 00 00   |....D...U...<...|
0x804bcec:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bcfc:   1c 00 00 00 64 06 00 00  71 d1 ff ff 3a 00 00 00   |....d...q...:...|
0x804bd0c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bd1c:   20 00 00 00 84 06 00 00  8b d1 ff ff 53 00 00 00   | ...........S...|
0x804bd2c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bd3c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 ba d1 ff ff   |.... ...........|
0x804bd4c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bd5c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bd6c:   e3 d1 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804bd7c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bd8c:   fb d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bd9c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bdac:   0d d2 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bdbc:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bdcc:   01 d2 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bddc:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bdec:   f8 d1 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bdfc:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804be0c:   ed d1 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804be1c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804be2c:   e3 d1 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804be3c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804be4c:   ea d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804be5c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804be6c:   ef d1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804be7c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804be8c:   0e d2 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804be9c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804beac:   27 d2 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |'...,....A....B.|
0x804bebc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804becc:   33 d2 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |3...&....A....B.|
0x804bedc:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804beec:   39 d2 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |9...B....A....B.|
0x804befc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bf0c:   5b d2 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |[...B....A....B.|
0x804bf1c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bf2c:   7d d2 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |}...B....A....B.|
0x804bf3c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bf4c:   9f d2 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804bf5c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bf6c:   f4 d2 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bf7c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bf8c:   31 d3 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |1...]....A....B.|
0x804bf9c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bfac:   6e d3 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |n...]....A....B.|
0x804bfbc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bfcc:   ab d3 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bfdc:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804bfec:   1b d4 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804bffc:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804c00c:   5f d4 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |_...p....A....B.|
0x804c01c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804c02c:   af d4 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804c03c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804c04c:   b0 09 00 00 d2 d4 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804c05c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804c06c:   d0 09 00 00 07 d5 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804c07c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804c08c:   20 00 00 00 f4 09 00 00  2a d5 ff ff 68 00 00 00   | .......*...h...|
0x804c09c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804c0ac:   0c 04 04 00 20 00 00 00  18 0a 00 00 6e d5 ff ff   |.... .......n...|
0x804c0bc:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804c0cc:   66 c5 c3 0c 04 04 00 00  2c 00 00 00 3c 0a 00 00   |f.......,...<...|
0x804c0dc:   78 d5 ff ff a4 01 00 00  00 41 0e 08 85 02 42 0d   |x........A....B.|
0x804c0ec:   05 46 87 03 86 04 83 05  03 97 01 c3 41 c6 41 c7   |.F..........A.A.|
0x804c0fc:   41 c5 0c 04 04 00 00 00  2c 00 00 00 6c 0a 00 00   |A.......,...l...|
0x804c10c:   ec d6 ff ff 63 16 00 00  00 41 0e 08 85 02 42 0d   |....c....A....B.|
0x804c11c:   05 49 87 03 86 04 83 05  03 53 16 c3 41 c6 41 c7   |.I.......S..A.A.|
0x804c12c:   41 c5 0c 04 04 00 00 00  34 00 00 00 9c 0a 00 00   |A.......4.......|
0x804c13c:   1f ed ff ff 94 03 00 00  00 44 0c 01 00 47 10 05   |.........D...G..|
0x804c14c:   02 75 00 44 0f 03 75 78  06 10 03 02 75 7c 03 7f   |.u.D..ux....u|..|
0x804c15c:   03 c1 0c 01 00 41 c3 41  c5 43 0c 04 04 00 00 00   |.....A.A.C......|
0x804c16c:   10 00 00 00 d4 0a 00 00  7b f0 ff ff 04 00 00 00   |........{.......|
0x804c17c:   00 00 00 00 10 00 00 00  e8 0a 00 00 6b f0 ff ff   |............k...|
0x804c18c:   04 00 00 00 00 00 00 00  48 00 00 00 fc 0a 00 00   |........H.......|
0x804c19c:   64 f0 ff ff 5d 00 00 00  00 41 0e 08 85 02 41 0e   |d...]....A....A.|
0x804c1ac:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 4e 0e 20   |...A....A....N. |
0x804c1bc:   69 0e 24 41 0e 28 44 0e  2c 44 0e 30 4d 0e 20 47   |i.$A.(D.,D.0M. G|
0x804c1cc:   0e 14 41 c3 0e 10 41 c6  0e 0c 41 c7 0e 08 41 c5   |..A...A...A...A.|
0x804c1dc:   0e 04 00 00 10 00 00 00  48 0b 00 00 78 f0 ff ff   |........H...x...|
0x804c1ec:   02 00 00 00 00 00 00 00  00 00 00 00 ??            |............?   |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 64 b2 04 08  19 00 00 00 0c df 04 08   |....d...........|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 0e 72 f5 0c   |.............r..|
0x804e028:   01 00 92 00 72 ee 00 00  fd ff ff ff dc 77 a5 d3   |....r........w..|
0x804e038:   09 00 00 00 a2 2e a0 95  ff 00 00 00 6c 23 be c0   |............l#..|
0x804e048:   fa ff 00 00 fb ff ff ff  4e 00 00 00 ff ff ff ff   |........N.......|
0x804e058:   99 c7 00 00 ff ff ff ff  c4 7f cc e5 44 00 00 00   |............D...|
0x804e068:   d9 fe 15 e2 42 d6 f5 c4  08 00 ??                  |....B.....?     |
