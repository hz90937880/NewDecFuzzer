;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:34:02
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 90 d9 ff ff               	lea eax, [ebx - 0x2670]
0x804835c:   50                              	push eax
0x804835d:   8d 83 30 d9 ff ff               	lea eax, [ebx - 0x26d0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 21 a6 04 08               	mov eax, 0x804a621
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 54 d0 04 08                  	mov eax, 0x804d054
0x80483a5:   3d 54 d0 04 08                  	cmp eax, 0x804d054
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 54 d0 04 08                  	push 0x804d054
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 54 d0 04 08                  	mov eax, 0x804d054
0x80483e5:   2d 54 d0 04 08                  	sub eax, 0x804d054
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 54 d0 04 08                  	push 0x804d054
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 60 d0 04 08 00            	cmp byte ptr [0x804d060], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 60 d0 04 08 01            	mov byte ptr [0x804d060], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 c9 24 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 b5 24 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 b0 d9 ff ff               	lea edx, [eax - 0x2650]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 88 24 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 6a 24 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 42 24 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 18 24 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 ef 23 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 ac 23 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 6a 23 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 12 23 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 c1 22 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 84 22 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 4d 22 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 2e 22 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 04 22 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 d8 21 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 ad 21 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 64 21 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 1c 21 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 c2 20 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 6f 20 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 30 20 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 fa 1f 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 d8 1f 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 8a 1f 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 4e 1f 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 c5 1e 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 93 1e 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 63 1e 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 1e 1e 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 df 1d 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 ad 1d 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 7e 1d 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 60 1d 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 38 1d 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 13 1d 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 ee 1c 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 b7 1c 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 82 1c 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 30 1c 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 e5 1b 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 ae 1b 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 7d 1b 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 5e 1b 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 34 1b 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 0c 1b 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 e3 1a 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 a7 1a 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 6c 1a 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 19 1a 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 cd 19 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 95 19 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 66 19 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 52 19 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 3b 19 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 26 19 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 10 19 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 e9 18 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 c4 18 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 85 18 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 4c 18 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 20 18 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 fa 17 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 7c da ff ff               	fld dword ptr [eax - 0x2584]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 7c da ff ff               	fld dword ptr [eax - 0x2584]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 80 da ff ff               	fld dword ptr [eax - 0x2580]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 b8 17 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 7c da ff ff               	fld dword ptr [eax - 0x2584]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 7c da ff ff               	fld dword ptr [eax - 0x2584]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 80 da ff ff               	fld dword ptr [eax - 0x2580]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 76 17 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 84 da ff ff               	fld dword ptr [eax - 0x257c]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 88 da ff ff               	fld dword ptr [eax - 0x2578]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 8c da ff ff               	fld dword ptr [eax - 0x2574]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 34 17 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 90 da ff ff               	fld dword ptr [eax - 0x2570]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 94 da ff ff               	fld dword ptr [eax - 0x256c]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 98 da ff ff               	fld dword ptr [eax - 0x2568]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 bc 16 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 a0 da ff ff               	fld qword ptr [eax - 0x2560]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 a0 da ff ff               	fld qword ptr [eax - 0x2560]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 a8 da ff ff               	fld qword ptr [eax - 0x2558]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 5f 16 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 a0 da ff ff               	fld qword ptr [eax - 0x2560]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 a0 da ff ff               	fld qword ptr [eax - 0x2560]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 a8 da ff ff               	fld qword ptr [eax - 0x2558]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 02 16 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 b0 da ff ff               	fld qword ptr [eax - 0x2550]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 b8 da ff ff               	fld qword ptr [eax - 0x2548]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 c0 da ff ff               	fld qword ptr [eax - 0x2540]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 a5 15 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 c8 da ff ff               	fld qword ptr [eax - 0x2538]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 d0 da ff ff               	fld qword ptr [eax - 0x2530]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 d8 da ff ff               	fld qword ptr [eax - 0x2528]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 15 15 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 e0 da ff ff               	fld dword ptr [eax - 0x2520]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 e4 da ff ff               	fld dword ptr [eax - 0x251c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 b1 14 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 80 00 00 00            	mov dword ptr [eax + edx*4 + 0x80], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 40 14 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 80 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0x80]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 fd 13 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 c0 d9 ff ff               	lea eax, [ebx - 0x2640]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 e4 d9 ff ff               	lea eax, [ebx - 0x261c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80497d8
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 68                        	sub esp, 0x68
0x804962f:   e8 f7 12 00 00                  	call 0x804a92b <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 39 00 00               	add edx, 0x39cc
0x804963a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804963d:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049640:   8b 4d 10                        	mov ecx, dword ptr [ebp + 0x10]
0x8049643:   8b 5d 14                        	mov ebx, dword ptr [ebp + 0x14]
0x8049646:   8b 75 18                        	mov esi, dword ptr [ebp + 0x18]
0x8049649:   8b 7d 1c                        	mov edi, dword ptr [ebp + 0x1c]
0x804964c:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x804964f:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049652:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x8049655:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049658:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x804965b:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804965e:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x8049661:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049664:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049667:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804966a:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x804966d:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049670:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049673:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049676:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049679:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804967c:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x804967f:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049682:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x8049685:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049688:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x804968c:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x804968f:   89 c8                           	mov eax, ecx
0x8049691:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x8049695:   89 d8                           	mov eax, ebx
0x8049697:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x804969b:   89 f0                           	mov eax, esi
0x804969d:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x80496a1:   89 f8                           	mov eax, edi
0x80496a3:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x80496a7:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x80496ab:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496ae:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x80496b2:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x80496b5:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496b9:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496bd:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80496c1:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496c5:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496c9:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496cd:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x80496d1:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x80496d5:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x80496d9:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496dd:   0f b7 45 94                     	movzx eax, word ptr [ebp - 0x6c]
0x80496e1:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x80496e5:   0f b6 45 90                     	movzx eax, byte ptr [ebp - 0x70]
0x80496e9:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x80496ec:   0f b7 45 8c                     	movzx eax, word ptr [ebp - 0x74]
0x80496f0:   66 89 45 b8                     	mov word ptr [ebp - 0x48], ax
0x80496f4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80496f7:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x80496fd:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x8049701:   88 82 28 00 00 00               	mov byte ptr [edx + 0x28], al
0x8049707:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x804970b:   66 89 82 2a 00 00 00            	mov word ptr [edx + 0x2a], ax
0x8049712:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049716:   66 89 82 2c 00 00 00            	mov word ptr [edx + 0x2c], ax
0x804971d:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049721:   66 89 82 2e 00 00 00            	mov word ptr [edx + 0x2e], ax
0x8049728:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x804972c:   66 89 82 30 00 00 00            	mov word ptr [edx + 0x30], ax
0x8049733:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x8049737:   88 82 32 00 00 00               	mov byte ptr [edx + 0x32], al
0x804973d:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x8049741:   88 82 33 00 00 00               	mov byte ptr [edx + 0x33], al
0x8049747:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x804974b:   66 89 82 34 00 00 00            	mov word ptr [edx + 0x34], ax
0x8049752:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x8049755:   89 82 84 04 00 00               	mov dword ptr [edx + 0x484], eax
0x804975b:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x804975e:   89 82 88 04 00 00               	mov dword ptr [edx + 0x488], eax
0x8049764:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x8049768:   66 89 82 36 00 00 00            	mov word ptr [edx + 0x36], ax
0x804976f:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x8049773:   66 89 82 38 00 00 00            	mov word ptr [edx + 0x38], ax
0x804977a:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x804977d:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x8049783:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x8049787:   66 89 82 8c 04 00 00            	mov word ptr [edx + 0x48c], ax
0x804978e:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x8049792:   66 89 82 40 00 00 00            	mov word ptr [edx + 0x40], ax
0x8049799:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804979d:   66 89 82 42 00 00 00            	mov word ptr [edx + 0x42], ax
0x80497a4:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x80497a7:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x80497ad:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x80497b1:   88 82 48 00 00 00               	mov byte ptr [edx + 0x48], al
0x80497b7:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x80497ba:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x80497c0:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x80497c4:   66 89 82 50 00 00 00            	mov word ptr [edx + 0x50], ax
0x80497cb:   b8 00 00 00 00                  	mov eax, 0
0x80497d0:   83 c4 68                        	add esp, 0x68
0x80497d3:   5b                              	pop ebx
0x80497d4:   5e                              	pop esi
0x80497d5:   5f                              	pop edi
0x80497d6:   5d                              	pop ebp
0x80497d7:   c3                              	ret 
; function: func_1 at 0x80497d8 -- 0x804a621
0x80497d8:   55                              	push ebp
0x80497d9:   89 e5                           	mov ebp, esp
0x80497db:   57                              	push edi
0x80497dc:   56                              	push esi
0x80497dd:   53                              	push ebx
0x80497de:   81 ec 34 01 00 00               	sub esp, 0x134
0x80497e4:   e8 3e 11 00 00                  	call 0x804a927 <__x86.get_pc_thunk.ax>
0x80497e9:   05 17 38 00 00                  	add eax, 0x3817
0x80497ee:   c7 45 a4 d5 0c 17 0c            	mov dword ptr [ebp - 0x5c], 0xc170cd5
0x80497f5:   c6 45 ba e3                     	mov byte ptr [ebp - 0x46], 0xe3
0x80497f9:   66 c7 45 b4 97 56               	mov word ptr [ebp - 0x4c], 0x5697
0x80497ff:   66 c7 45 a2 f8 8a               	mov word ptr [ebp - 0x5e], 0x8af8
0x8049805:   66 c7 45 b2 fa ff               	mov word ptr [ebp - 0x4e], 0xfffa
0x804980b:   66 c7 45 a0 04 00               	mov word ptr [ebp - 0x60], 4
0x8049811:   c6 45 b1 fe                     	mov byte ptr [ebp - 0x4f], 0xfe
0x8049815:   c6 45 b0 01                     	mov byte ptr [ebp - 0x50], 1
0x8049819:   66 c7 45 ae 05 00               	mov word ptr [ebp - 0x52], 5
0x804981f:   c7 45 a8 00 00 00 00            	mov dword ptr [ebp - 0x58], 0
0x8049826:   c7 45 9c 00 00 00 00            	mov dword ptr [ebp - 0x64], 0
0x804982d:   66 c7 45 b8 f9 ff               	mov word ptr [ebp - 0x48], 0xfff9
0x8049833:   66 c7 45 b6 b0 89               	mov word ptr [ebp - 0x4a], 0x89b0
0x8049839:   c7 45 c0 bf a4 73 ff            	mov dword ptr [ebp - 0x40], 0xff73a4bf
0x8049840:   66 c7 45 be 00 00               	mov word ptr [ebp - 0x42], 0
0x8049846:   66 c7 45 bc f7 ff               	mov word ptr [ebp - 0x44], 0xfff7
0x804984c:   66 c7 45 9a 02 00               	mov word ptr [ebp - 0x66], 2
0x8049852:   c7 45 94 01 00 00 00            	mov dword ptr [ebp - 0x6c], 1
0x8049859:   c6 45 bb dd                     	mov byte ptr [ebp - 0x45], 0xdd
0x804985d:   c7 45 f0 ec d9 12 ba            	mov dword ptr [ebp - 0x10], 0xba12d9ec
0x8049864:   66 c7 45 ee f6 ff               	mov word ptr [ebp - 0x12], 0xfff6
0x804986a:   c6 45 ed 12                     	mov byte ptr [ebp - 0x13], 0x12
0x804986e:   c7 45 d4 a2 ee 34 3c            	mov dword ptr [ebp - 0x2c], 0x3c34eea2
0x8049875:   c7 45 90 01 00 00 00            	mov dword ptr [ebp - 0x70], 1
0x804987c:   c7 45 d0 01 00 00 00            	mov dword ptr [ebp - 0x30], 1
0x8049883:   c7 45 cc 99 ef 51 7f            	mov dword ptr [ebp - 0x34], 0x7f51ef99
0x804988a:   66 c7 45 ca aa 48               	mov word ptr [ebp - 0x36], 0x48aa
0x8049890:   66 c7 45 c8 07 00               	mov word ptr [ebp - 0x38], 7
0x8049896:   c7 45 8c 71 28 34 6c            	mov dword ptr [ebp - 0x74], 0x6c342871
0x804989d:   c7 45 c4 f9 ff ff ff            	mov dword ptr [ebp - 0x3c], 0xfffffff9
0x80498a4:   c6 45 ec f6                     	mov byte ptr [ebp - 0x14], 0xf6
0x80498a8:   c6 45 8b 01                     	mov byte ptr [ebp - 0x75], 1
0x80498ac:   0f b6 55 ed                     	movzx edx, byte ptr [ebp - 0x13]
0x80498b0:   c7 45 90 1b 4b 37 42            	mov dword ptr [ebp - 0x70], 0x42374b1b
0x80498b7:   83 7d a4 01                     	cmp dword ptr [ebp - 0x5c], 1
0x80498bb:   76 04                           	jbe 0x80498c1 <func_1+0xe9>
0x80498bd:   80 7d ed 00                     	cmp byte ptr [ebp - 0x13], 0
0x80498c1:   80 7d ed 00                     	cmp byte ptr [ebp - 0x13], 0
0x80498c5:   74 07                           	je 0x80498ce <func_1+0xf6>
0x80498c7:   b8 01 00 00 00                  	mov eax, 1
0x80498cc:   eb 05                           	jmp 0x80498d3 <func_1+0xfb>
0x80498ce:   b8 00 00 00 00                  	mov eax, 0
0x80498d3:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x80498d6:   0f 96 c0                        	setbe al
0x80498d9:   88 45 ba                        	mov byte ptr [ebp - 0x46], al
0x80498dc:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x80498df:   23 45 a4                        	and eax, dword ptr [ebp - 0x5c]
0x80498e2:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x80498e5:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x80498e9:   74 07                           	je 0x80498f2 <func_1+0x11a>
0x80498eb:   b8 01 00 00 00                  	mov eax, 1
0x80498f0:   eb 05                           	jmp 0x80498f7 <func_1+0x11f>
0x80498f2:   b8 00 00 00 00                  	mov eax, 0
0x80498f7:   09 c2                           	or edx, eax
0x80498f9:   0f b6 45 ed                     	movzx eax, byte ptr [ebp - 0x13]
0x80498fd:   39 c2                           	cmp edx, eax
0x80498ff:   0f b6 45 ba                     	movzx eax, byte ptr [ebp - 0x46]
0x8049903:   66 98                           	cbw 
0x8049905:   66 31 45 b4                     	xor word ptr [ebp - 0x4c], ax
0x8049909:   66 83 45 ca 01                  	add word ptr [ebp - 0x36], 1
0x804990e:   0f bf 45 a2                     	movsx eax, word ptr [ebp - 0x5e]
0x8049912:   8b 4d d4                        	mov ecx, dword ptr [ebp - 0x2c]
0x8049915:   8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x8049918:   01 ca                           	add edx, ecx
0x804991a:   39 d0                           	cmp eax, edx
0x804991c:   0f 94 c0                        	sete al
0x804991f:   88 45 b1                        	mov byte ptr [ebp - 0x4f], al
0x8049922:   66 83 7d b2 00                  	cmp word ptr [ebp - 0x4e], 0
0x8049927:   0f 84 60 0a 00 00               	je 0x804a38d <func_1+0xbb5>
0x804992d:   c7 45 e8 46 67 95 db            	mov dword ptr [ebp - 0x18], 0xdb956746
0x8049934:   c7 45 e4 05 00 00 00            	mov dword ptr [ebp - 0x1c], 5
0x804993b:   c6 85 72 ff ff ff 5f            	mov byte ptr [ebp - 0x8e], 0x5f
0x8049942:   c7 85 6c ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0x94], 0xfffffffe
0x804994c:   c7 85 68 ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0x98], 5
0x8049956:   c7 85 64 ff ff ff 03 00 00 00   	mov dword ptr [ebp - 0x9c], 3
0x8049960:   66 c7 85 62 ff ff ff f7 ff      	mov word ptr [ebp - 0x9e], 0xfff7
0x8049969:   66 c7 45 b2 e7 ff               	mov word ptr [ebp - 0x4e], 0xffe7
0x804996f:   e9 08 01 00 00                  	jmp 0x8049a7c <func_1+0x2a4>
0x8049974:   c7 85 f0 fe ff ff 6f a3 ff f2   	mov dword ptr [ebp - 0x110], 0xf2ffa36f
0x804997e:   c7 85 ec fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x114], 0
0x8049988:   c7 45 e0 bd 1b 3a 3a            	mov dword ptr [ebp - 0x20], 0x3a3a1bbd
0x804998f:   c7 85 e8 fe ff ff 38 08 6c e0   	mov dword ptr [ebp - 0x118], 0xe06c0838
0x8049999:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804999d:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x80499a0:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x80499a3:   66 89 45 b4                     	mov word ptr [ebp - 0x4c], ax
0x80499a7:   66 83 7d b4 00                  	cmp word ptr [ebp - 0x4c], 0
0x80499ac:   75 37                           	jne 0x80499e5 <func_1+0x20d>
0x80499ae:   8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x80499b1:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x80499b4:   01 d0                           	add eax, edx
0x80499b6:   3d 8d 51 00 00                  	cmp eax, 0x518d
0x80499bb:   77 07                           	ja 0x80499c4 <func_1+0x1ec>
0x80499bd:   b8 57 36 ff ff                  	mov eax, 0xffff3657
0x80499c2:   eb 05                           	jmp 0x80499c9 <func_1+0x1f1>
0x80499c4:   b8 58 36 ff ff                  	mov eax, 0xffff3658
0x80499c9:   89 85 ec fe ff ff               	mov dword ptr [ebp - 0x114], eax
0x80499cf:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x80499d6:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x80499d9:   83 f0 01                        	xor eax, 1
0x80499dc:   25 02 4c 00 00                  	and eax, 0x4c02
0x80499e1:   85 c0                           	test eax, eax
0x80499e3:   74 07                           	je 0x80499ec <func_1+0x214>
0x80499e5:   b8 01 00 00 00                  	mov eax, 1
0x80499ea:   eb 05                           	jmp 0x80499f1 <func_1+0x219>
0x80499ec:   b8 00 00 00 00                  	mov eax, 0
0x80499f1:   89 c2                           	mov edx, eax
0x80499f3:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x80499f6:   89 c1                           	mov ecx, eax
0x80499f8:   89 d0                           	mov eax, edx
0x80499fa:   ba 00 00 00 00                  	mov edx, 0
0x80499ff:   66 f7 f1                        	div cx
0x8049a02:   0f b7 d0                        	movzx edx, ax
0x8049a05:   0f bf 45 b2                     	movsx eax, word ptr [ebp - 0x4e]
0x8049a09:   31 d0                           	xor eax, edx
0x8049a0b:   09 85 e8 fe ff ff               	or dword ptr [ebp - 0x118], eax
0x8049a11:   0f b6 45 b1                     	movzx eax, byte ptr [ebp - 0x4f]
0x8049a15:   88 45 b0                        	mov byte ptr [ebp - 0x50], al
0x8049a18:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049a1b:   89 c2                           	mov edx, eax
0x8049a1d:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x8049a21:   21 d0                           	and eax, edx
0x8049a23:   66 89 45 ae                     	mov word ptr [ebp - 0x52], ax
0x8049a27:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x8049a2b:   0b 45 cc                        	or eax, dword ptr [ebp - 0x34]
0x8049a2e:   89 c2                           	mov edx, eax
0x8049a30:   0f be 45 ba                     	movsx eax, byte ptr [ebp - 0x46]
0x8049a34:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049a37:   0f be 45 ba                     	movsx eax, byte ptr [ebp - 0x46]
0x8049a3b:   39 45 a8                        	cmp dword ptr [ebp - 0x58], eax
0x8049a3e:   0f 9c c0                        	setl al
0x8049a41:   0f b6 c0                        	movzx eax, al
0x8049a44:   39 c2                           	cmp edx, eax
0x8049a46:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049a49:   0f b7 d0                        	movzx edx, ax
0x8049a4c:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049a4f:   0f b7 c0                        	movzx eax, ax
0x8049a52:   0f af d0                        	imul edx, eax
0x8049a55:   0f bf 45 b4                     	movsx eax, word ptr [ebp - 0x4c]
0x8049a59:   39 c2                           	cmp edx, eax
0x8049a5b:   0f 9e c0                        	setle al
0x8049a5e:   0f b6 d0                        	movzx edx, al
0x8049a61:   0f be 45 b0                     	movsx eax, byte ptr [ebp - 0x50]
0x8049a65:   39 c2                           	cmp edx, eax
0x8049a67:   0f 9e c0                        	setle al
0x8049a6a:   0f b6 c0                        	movzx eax, al
0x8049a6d:   66 89 45 b8                     	mov word ptr [ebp - 0x48], ax
0x8049a71:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x8049a75:   83 c0 01                        	add eax, 1
0x8049a78:   66 89 45 b2                     	mov word ptr [ebp - 0x4e], ax
0x8049a7c:   66 83 7d b2 0c                  	cmp word ptr [ebp - 0x4e], 0xc
0x8049a81:   0f 84 ed fe ff ff               	je 0x8049974 <func_1+0x19c>
0x8049a87:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x8049a8b:   0f 84 b8 04 00 00               	je 0x8049f49 <func_1+0x771>
0x8049a91:   c7 85 24 ff ff ff 06 e0 22 1b   	mov dword ptr [ebp - 0xdc], 0x1b22e006
0x8049a9b:   c7 85 20 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe0], 0
0x8049aa5:   c7 85 1c ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xe4], 9
0x8049aaf:   c6 45 ed e7                     	mov byte ptr [ebp - 0x13], 0xe7
0x8049ab3:   e9 ff 03 00 00                  	jmp 0x8049eb7 <func_1+0x6df>
0x8049ab8:   c7 85 18 ff ff ff 02 c4 db 52   	mov dword ptr [ebp - 0xe8], 0x52dbc402
0x8049ac2:   c7 85 14 ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xec], 0xfffffff6
0x8049acc:   c6 85 13 ff ff ff 7b            	mov byte ptr [ebp - 0xed], 0x7b
0x8049ad3:   c7 85 0c ff ff ff d8 d0 57 d3   	mov dword ptr [ebp - 0xf4], 0xd357d0d8
0x8049add:   c6 85 0b ff ff ff 00            	mov byte ptr [ebp - 0xf5], 0
0x8049ae4:   c6 85 0a ff ff ff 01            	mov byte ptr [ebp - 0xf6], 1
0x8049aeb:   c7 85 18 ff ff ff 66 52 21 18   	mov dword ptr [ebp - 0xe8], 0x18215266
0x8049af5:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x8049afb:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049afe:   0f b6 45 ba                     	movzx eax, byte ptr [ebp - 0x46]
0x8049b02:   c0 f8 03                        	sar al, 3
0x8049b05:   83 f0 f6                        	xor eax, 0xfffffff6
0x8049b08:   66 98                           	cbw 
0x8049b0a:   8b 55 9c                        	mov edx, dword ptr [ebp - 0x64]
0x8049b0d:   21 d0                           	and eax, edx
0x8049b0f:   66 c1 e8 0f                     	shr ax, 0xf
0x8049b13:   88 85 72 ff ff ff               	mov byte ptr [ebp - 0x8e], al
0x8049b19:   c7 85 18 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xe8], 0xffffffff
0x8049b23:   c6 85 09 ff ff ff ff            	mov byte ptr [ebp - 0xf7], 0xff
0x8049b2a:   c7 45 dc 4c 92 51 46            	mov dword ptr [ebp - 0x24], 0x4651924c
0x8049b31:   80 7d b0 00                     	cmp byte ptr [ebp - 0x50], 0
0x8049b35:   0f 8e e1 00 00 00               	jle 0x8049c1c <func_1+0x444>
0x8049b3b:   c6 85 08 ff ff ff 01            	mov byte ptr [ebp - 0xf8], 1
0x8049b42:   c7 85 04 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xfc], 1
0x8049b4c:   c7 85 00 ff ff ff ae e8 d1 8b   	mov dword ptr [ebp - 0x100], 0x8bd1e8ae
0x8049b56:   0f bf 45 a2                     	movsx eax, word ptr [ebp - 0x5e]
0x8049b5a:   c6 85 08 ff ff ff d7            	mov byte ptr [ebp - 0xf8], 0xd7
0x8049b61:   0f b7 55 ae                     	movzx edx, word ptr [ebp - 0x52]
0x8049b65:   89 95 6c ff ff ff               	mov dword ptr [ebp - 0x94], edx
0x8049b6b:   8b 95 6c ff ff ff               	mov edx, dword ptr [ebp - 0x94]
0x8049b71:   89 d1                           	mov ecx, edx
0x8049b73:   83 e1 d7                        	and ecx, 0xffffffd7
0x8049b76:   66 83 7d ae 00                  	cmp word ptr [ebp - 0x52], 0
0x8049b7b:   74 0e                           	je 0x8049b8b <func_1+0x3b3>
0x8049b7d:   66 83 7d ae 00                  	cmp word ptr [ebp - 0x52], 0
0x8049b82:   74 07                           	je 0x8049b8b <func_1+0x3b3>
0x8049b84:   ba 01 00 00 00                  	mov edx, 1
0x8049b89:   eb 05                           	jmp 0x8049b90 <func_1+0x3b8>
0x8049b8b:   ba 00 00 00 00                  	mov edx, 0
0x8049b90:   3b 95 14 ff ff ff               	cmp edx, dword ptr [ebp - 0xec]
0x8049b96:   0f 9e c2                        	setle dl
0x8049b99:   0f b6 d2                        	movzx edx, dl
0x8049b9c:   f7 da                           	neg edx
0x8049b9e:   39 d1                           	cmp ecx, edx
0x8049ba0:   0f 96 c2                        	setbe dl
0x8049ba3:   0f b6 d2                        	movzx edx, dl
0x8049ba6:   0b 55 d0                        	or edx, dword ptr [ebp - 0x30]
0x8049ba9:   85 d2                           	test edx, edx
0x8049bab:   74 0e                           	je 0x8049bbb <func_1+0x3e3>
0x8049bad:   66 83 7d ae 00                  	cmp word ptr [ebp - 0x52], 0
0x8049bb2:   74 07                           	je 0x8049bbb <func_1+0x3e3>
0x8049bb4:   ba 01 00 00 00                  	mov edx, 1
0x8049bb9:   eb 05                           	jmp 0x8049bc0 <func_1+0x3e8>
0x8049bbb:   ba 00 00 00 00                  	mov edx, 0
0x8049bc0:   0f bf ca                        	movsx ecx, dx
0x8049bc3:   0f be 55 b1                     	movsx edx, byte ptr [ebp - 0x4f]
0x8049bc7:   29 d1                           	sub ecx, edx
0x8049bc9:   89 ca                           	mov edx, ecx
0x8049bcb:   81 fa a7 90 ce e5               	cmp edx, 0xe5ce90a7
0x8049bd1:   0f 97 c2                        	seta dl
0x8049bd4:   0f b6 d2                        	movzx edx, dl
0x8049bd7:   0b 95 04 ff ff ff               	or edx, dword ptr [ebp - 0xfc]
0x8049bdd:   89 d1                           	mov ecx, edx
0x8049bdf:   ba 00 00 00 00                  	mov edx, 0
0x8049be4:   f7 f1                           	div ecx
0x8049be6:   89 d0                           	mov eax, edx
0x8049be8:   0f b6 d0                        	movzx edx, al
0x8049beb:   0f b6 45 b1                     	movzx eax, byte ptr [ebp - 0x4f]
0x8049bef:   0f b6 c0                        	movzx eax, al
0x8049bf2:   89 c1                           	mov ecx, eax
0x8049bf4:   d3 fa                           	sar edx, cl
0x8049bf6:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x8049bfa:   21 d0                           	and eax, edx
0x8049bfc:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049bff:   83 85 00 ff ff ff 01            	add dword ptr [ebp - 0x100], 1
0x8049c06:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x8049c0a:   83 e8 01                        	sub eax, 1
0x8049c0d:   66 89 45 b6                     	mov word ptr [ebp - 0x4a], ax
0x8049c11:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049c14:   83 e0 3e                        	and eax, 0x3e
0x8049c17:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049c1a:   eb 07                           	jmp 0x8049c23 <func_1+0x44b>
0x8049c1c:   c7 45 a8 fc b3 a9 25            	mov dword ptr [ebp - 0x58], 0x25a9b3fc
0x8049c23:   80 7d b1 00                     	cmp byte ptr [ebp - 0x4f], 0
0x8049c27:   0f 84 ad 01 00 00               	je 0x8049dda <func_1+0x602>
0x8049c2d:   c6 85 ff fe ff ff fd            	mov byte ptr [ebp - 0x101], 0xfd
0x8049c34:   c7 85 f8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x108], 0
0x8049c3e:   c7 85 f4 fe ff ff 17 e5 91 f9   	mov dword ptr [ebp - 0x10c], 0xf991e517
0x8049c48:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x8049c4e:   0f be c0                        	movsx eax, al
0x8049c51:   c1 e0 07                        	shl eax, 7
0x8049c54:   89 c3                           	mov ebx, eax
0x8049c56:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x8049c5c:   0f bf d0                        	movsx edx, ax
0x8049c5f:   0f be 45 b1                     	movsx eax, byte ptr [ebp - 0x4f]
0x8049c63:   39 85 24 ff ff ff               	cmp dword ptr [ebp - 0xdc], eax
0x8049c69:   0f 96 c0                        	setbe al
0x8049c6c:   0f b6 c0                        	movzx eax, al
0x8049c6f:   21 45 e4                        	and dword ptr [ebp - 0x1c], eax
0x8049c72:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049c75:   3c 09                           	cmp al, 9
0x8049c77:   75 07                           	jne 0x8049c80 <func_1+0x4a8>
0x8049c79:   66 83 7d a2 00                  	cmp word ptr [ebp - 0x5e], 0
0x8049c7e:   74 07                           	je 0x8049c87 <func_1+0x4af>
0x8049c80:   b8 01 00 00 00                  	mov eax, 1
0x8049c85:   eb 05                           	jmp 0x8049c8c <func_1+0x4b4>
0x8049c87:   b8 00 00 00 00                  	mov eax, 0
0x8049c8c:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049c8f:   0f 92 c0                        	setb al
0x8049c92:   0f b6 c8                        	movzx ecx, al
0x8049c95:   0f be 45 b1                     	movsx eax, byte ptr [ebp - 0x4f]
0x8049c99:   39 c1                           	cmp ecx, eax
0x8049c9b:   0f 95 c0                        	setne al
0x8049c9e:   0f b6 c0                        	movzx eax, al
0x8049ca1:   89 c1                           	mov ecx, eax
0x8049ca3:   d3 fa                           	sar edx, cl
0x8049ca5:   89 d0                           	mov eax, edx
0x8049ca7:   39 85 68 ff ff ff               	cmp dword ptr [ebp - 0x98], eax
0x8049cad:   0f 97 c0                        	seta al
0x8049cb0:   0f b6 c0                        	movzx eax, al
0x8049cb3:   39 c3                           	cmp ebx, eax
0x8049cb5:   0f 9e c0                        	setle al
0x8049cb8:   0f b6 d0                        	movzx edx, al
0x8049cbb:   0f b6 85 13 ff ff ff            	movzx eax, byte ptr [ebp - 0xed]
0x8049cc2:   39 c2                           	cmp edx, eax
0x8049cc4:   74 09                           	je 0x8049ccf <func_1+0x4f7>
0x8049cc6:   83 bd 64 ff ff ff 00            	cmp dword ptr [ebp - 0x9c], 0
0x8049ccd:   74 07                           	je 0x8049cd6 <func_1+0x4fe>
0x8049ccf:   b8 01 00 00 00                  	mov eax, 1
0x8049cd4:   eb 05                           	jmp 0x8049cdb <func_1+0x503>
0x8049cd6:   b8 00 00 00 00                  	mov eax, 0
0x8049cdb:   88 45 b1                        	mov byte ptr [ebp - 0x4f], al
0x8049cde:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049ce1:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049ce4:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x8049ce8:   74 05                           	je 0x8049cef <func_1+0x517>
0x8049cea:   66 83 7d a2 00                  	cmp word ptr [ebp - 0x5e], 0
0x8049cef:   b8 00 00 00 00                  	mov eax, 0
0x8049cf4:   09 45 dc                        	or dword ptr [ebp - 0x24], eax
0x8049cf7:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049cfa:   21 45 a8                        	and dword ptr [ebp - 0x58], eax
0x8049cfd:   83 85 0c ff ff ff 01            	add dword ptr [ebp - 0xf4], 1
0x8049d04:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x8049d08:   88 85 e0 fe ff ff               	mov byte ptr [ebp - 0x120], al
0x8049d0e:   8b 5d c0                        	mov ebx, dword ptr [ebp - 0x40]
0x8049d11:   8d 43 01                        	lea eax, [ebx + 1]
0x8049d14:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x8049d17:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049d1a:   89 c1                           	mov ecx, eax
0x8049d1c:   66 0f be d1                     	movsx dx, cl
0x8049d20:   89 d0                           	mov eax, edx
0x8049d22:   c1 e0 03                        	shl eax, 3
0x8049d25:   29 d0                           	sub eax, edx
0x8049d27:   c1 e0 03                        	shl eax, 3
0x8049d2a:   01 d0                           	add eax, edx
0x8049d2c:   66 c1 e8 08                     	shr ax, 8
0x8049d30:   89 c2                           	mov edx, eax
0x8049d32:   c0 fa 04                        	sar dl, 4
0x8049d35:   89 c8                           	mov eax, ecx
0x8049d37:   c0 f8 07                        	sar al, 7
0x8049d3a:   29 c2                           	sub edx, eax
0x8049d3c:   89 d0                           	mov eax, edx
0x8049d3e:   c1 e0 03                        	shl eax, 3
0x8049d41:   01 d0                           	add eax, edx
0x8049d43:   c1 e0 03                        	shl eax, 3
0x8049d46:   29 c1                           	sub ecx, eax
0x8049d48:   89 ca                           	mov edx, ecx
0x8049d4a:   0f be d2                        	movsx edx, dl
0x8049d4d:   0f b6 85 09 ff ff ff            	movzx eax, byte ptr [ebp - 0xf7]
0x8049d54:   39 c2                           	cmp edx, eax
0x8049d56:   0f 9f c0                        	setg al
0x8049d59:   0f b6 d0                        	movzx edx, al
0x8049d5c:   0f be 45 b0                     	movsx eax, byte ptr [ebp - 0x50]
0x8049d60:   39 c2                           	cmp edx, eax
0x8049d62:   0f 9c c0                        	setl al
0x8049d65:   0f b6 c0                        	movzx eax, al
0x8049d68:   0f bf d0                        	movsx edx, ax
0x8049d6b:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x8049d6f:   98                              	cwde 
0x8049d70:   01 d0                           	add eax, edx
0x8049d72:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049d75:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049d78:   3d 2a 1e a0 ef                  	cmp eax, 0xefa01e2a
0x8049d7d:   0f 96 c0                        	setbe al
0x8049d80:   0f b6 c0                        	movzx eax, al
0x8049d83:   39 c3                           	cmp ebx, eax
0x8049d85:   0f 93 c0                        	setae al
0x8049d88:   0f b6 d0                        	movzx edx, al
0x8049d8b:   0f b7 45 be                     	movzx eax, word ptr [ebp - 0x42]
0x8049d8f:   09 d0                           	or eax, edx
0x8049d91:   89 c2                           	mov edx, eax
0x8049d93:   0f b6 85 e0 fe ff ff            	movzx eax, byte ptr [ebp - 0x120]
0x8049d9a:   0f af c2                        	imul eax, edx
0x8049d9d:   89 c2                           	mov edx, eax
0x8049d9f:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x8049da3:   31 d0                           	xor eax, edx
0x8049da5:   d0 f8                           	sar al, 1
0x8049da7:   0f be d0                        	movsx edx, al
0x8049daa:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x8049db0:   0f be c0                        	movsx eax, al
0x8049db3:   c1 e0 04                        	shl eax, 4
0x8049db6:   98                              	cwde 
0x8049db7:   21 95 f4 fe ff ff               	and dword ptr [ebp - 0x10c], edx
0x8049dbd:   8b 95 f4 fe ff ff               	mov edx, dword ptr [ebp - 0x10c]
0x8049dc3:   0f bf f2                        	movsx esi, dx
0x8049dc6:   99                              	cdq 
0x8049dc7:   f7 fe                           	idiv esi
0x8049dc9:   83 f8 01                        	cmp eax, 1
0x8049dcc:   0f 95 c0                        	setne al
0x8049dcf:   0f b6 c0                        	movzx eax, al
0x8049dd2:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049dd5:   e9 d3 00 00 00                  	jmp 0x8049ead <func_1+0x6d5>
0x8049dda:   0f bf 45 ee                     	movsx eax, word ptr [ebp - 0x12]
0x8049dde:   0f b6 55 bb                     	movzx edx, byte ptr [ebp - 0x45]
0x8049de2:   0f bf 4d 9a                     	movsx ecx, word ptr [ebp - 0x66]
0x8049de6:   0f b7 75 bc                     	movzx esi, word ptr [ebp - 0x44]
0x8049dea:   0f b7 7d be                     	movzx edi, word ptr [ebp - 0x42]
0x8049dee:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x8049df4:   0f b7 5d b6                     	movzx ebx, word ptr [ebp - 0x4a]
0x8049df8:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x8049dfe:   0f bf 7d b8                     	movsx edi, word ptr [ebp - 0x48]
0x8049e02:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x8049e08:   0f b7 5d ae                     	movzx ebx, word ptr [ebp - 0x52]
0x8049e0c:   89 9d d4 fe ff ff               	mov dword ptr [ebp - 0x12c], ebx
0x8049e12:   0f be 7d b0                     	movsx edi, byte ptr [ebp - 0x50]
0x8049e16:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x8049e1c:   0f be 5d b1                     	movsx ebx, byte ptr [ebp - 0x4f]
0x8049e20:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x8049e26:   0f bf 7d a0                     	movsx edi, word ptr [ebp - 0x60]
0x8049e2a:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x8049e30:   0f bf 5d b2                     	movsx ebx, word ptr [ebp - 0x4e]
0x8049e34:   89 9d c4 fe ff ff               	mov dword ptr [ebp - 0x13c], ebx
0x8049e3a:   0f bf 7d a2                     	movsx edi, word ptr [ebp - 0x5e]
0x8049e3e:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x8049e44:   0f bf 7d b4                     	movsx edi, word ptr [ebp - 0x4c]
0x8049e48:   0f be 5d ba                     	movsx ebx, byte ptr [ebp - 0x46]
0x8049e4c:   50                              	push eax
0x8049e4d:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049e50:   52                              	push edx
0x8049e51:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x8049e54:   51                              	push ecx
0x8049e55:   56                              	push esi
0x8049e56:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x8049e5c:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049e5f:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x8049e65:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x8049e6b:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x8049e6e:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x8049e71:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x8049e77:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x8049e7d:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x8049e83:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x8049e89:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x8049e8f:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x8049e95:   57                              	push edi
0x8049e96:   53                              	push ebx
0x8049e97:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x8049e9a:   e8 87 f7 ff ff                  	call 0x8049626 <set_var>
0x8049e9f:   83 c4 54                        	add esp, 0x54
0x8049ea2:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x8049ea8:   e9 6c 07 00 00                  	jmp 0x804a619 <func_1+0xe41>
0x8049ead:   0f b6 45 ed                     	movzx eax, byte ptr [ebp - 0x13]
0x8049eb1:   83 c0 01                        	add eax, 1
0x8049eb4:   88 45 ed                        	mov byte ptr [ebp - 0x13], al
0x8049eb7:   80 7d ed 07                     	cmp byte ptr [ebp - 0x13], 7
0x8049ebb:   0f 87 f7 fb ff ff               	ja 0x8049ab8 <func_1+0x2e0>
0x8049ec1:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049ec4:   f7 d0                           	not eax
0x8049ec6:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049ec9:   0f bf 45 b2                     	movsx eax, word ptr [ebp - 0x4e]
0x8049ecd:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049ed0:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049ed3:   88 45 bb                        	mov byte ptr [ebp - 0x45], al
0x8049ed6:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x8049edc:   0f be c0                        	movsx eax, al
0x8049edf:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049ee2:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x8049ee8:   0f b6 c8                        	movzx ecx, al
0x8049eeb:   b8 e9 00 00 00                  	mov eax, 0xe9
0x8049ef0:   99                              	cdq 
0x8049ef1:   f7 f9                           	idiv ecx
0x8049ef3:   89 d0                           	mov eax, edx
0x8049ef5:   85 c0                           	test eax, eax
0x8049ef7:   75 07                           	jne 0x8049f00 <func_1+0x728>
0x8049ef9:   66 83 7d 9a 00                  	cmp word ptr [ebp - 0x66], 0
0x8049efe:   74 07                           	je 0x8049f07 <func_1+0x72f>
0x8049f00:   b8 01 00 00 00                  	mov eax, 1
0x8049f05:   eb 05                           	jmp 0x8049f0c <func_1+0x734>
0x8049f07:   b8 00 00 00 00                  	mov eax, 0
0x8049f0c:   89 c2                           	mov edx, eax
0x8049f0e:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x8049f13:   0f b6 c0                        	movzx eax, al
0x8049f16:   f6 f2                           	div dl
0x8049f18:   0f b6 c4                        	movzx eax, ah
0x8049f1b:   89 c2                           	mov edx, eax
0x8049f1d:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x8049f21:   01 d0                           	add eax, edx
0x8049f23:   0f be d0                        	movsx edx, al
0x8049f26:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049f29:   0f be c0                        	movsx eax, al
0x8049f2c:   89 c1                           	mov ecx, eax
0x8049f2e:   d3 fa                           	sar edx, cl
0x8049f30:   89 d0                           	mov eax, edx
0x8049f32:   39 85 24 ff ff ff               	cmp dword ptr [ebp - 0xdc], eax
0x8049f38:   0f 97 c0                        	seta al
0x8049f3b:   0f b6 c0                        	movzx eax, al
0x8049f3e:   89 85 1c ff ff ff               	mov dword ptr [ebp - 0xe4], eax
0x8049f44:   e9 01 06 00 00                  	jmp 0x804a54a <func_1+0xd72>
0x8049f49:   c7 85 5c ff ff ff f9 e6 de ee   	mov dword ptr [ebp - 0xa4], 0xeedee6f9
0x8049f53:   c7 85 58 ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0xa8], 5
0x8049f5d:   c6 85 57 ff ff ff 19            	mov byte ptr [ebp - 0xa9], 0x19
0x8049f64:   c7 85 50 ff ff ff 26 04 b6 d1   	mov dword ptr [ebp - 0xb0], 0xd1b60426
0x8049f6e:   c7 85 5c ff ff ff b6 c7 7e 69   	mov dword ptr [ebp - 0xa4], 0x697ec7b6
0x8049f78:   80 7d ba 00                     	cmp byte ptr [ebp - 0x46], 0
0x8049f7c:   90                              	nop 
0x8049f7d:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049f80:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049f83:   0f bf 45 b2                     	movsx eax, word ptr [ebp - 0x4e]
0x8049f87:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049f8a:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049f8d:   89 c2                           	mov edx, eax
0x8049f8f:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049f92:   83 c8 01                        	or eax, 1
0x8049f95:   83 f8 f7                        	cmp eax, -9
0x8049f98:   0f 94 c0                        	sete al
0x8049f9b:   31 c2                           	xor edx, eax
0x8049f9d:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049fa0:   09 d0                           	or eax, edx
0x8049fa2:   89 c1                           	mov ecx, eax
0x8049fa4:   0f b7 45 be                     	movzx eax, word ptr [ebp - 0x42]
0x8049fa8:   89 c2                           	mov edx, eax
0x8049faa:   0f b6 c1                        	movzx eax, cl
0x8049fad:   f6 f2                           	div dl
0x8049faf:   0f b6 c4                        	movzx eax, ah
0x8049fb2:   89 c2                           	mov edx, eax
0x8049fb4:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x8049fb8:   01 d0                           	add eax, edx
0x8049fba:   08 45 ba                        	or byte ptr [ebp - 0x46], al
0x8049fbd:   80 7d ba 00                     	cmp byte ptr [ebp - 0x46], 0
0x8049fc1:   74 07                           	je 0x8049fca <func_1+0x7f2>
0x8049fc3:   b8 01 00 00 00                  	mov eax, 1
0x8049fc8:   eb 05                           	jmp 0x8049fcf <func_1+0x7f7>
0x8049fca:   b8 00 00 00 00                  	mov eax, 0
0x8049fcf:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049fd2:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049fd5:   0f b7 d0                        	movzx edx, ax
0x8049fd8:   66 0f be 85 72 ff ff ff         	movsx ax, byte ptr [ebp - 0x8e]
0x8049fe0:   0f b7 c0                        	movzx eax, ax
0x8049fe3:   89 c1                           	mov ecx, eax
0x8049fe5:   d3 e2                           	shl edx, cl
0x8049fe7:   89 d0                           	mov eax, edx
0x8049fe9:   0f be d0                        	movsx edx, al
0x8049fec:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x8049ff2:   0f be c0                        	movsx eax, al
0x8049ff5:   89 c1                           	mov ecx, eax
0x8049ff7:   d3 fa                           	sar edx, cl
0x8049ff9:   0f be 45 b0                     	movsx eax, byte ptr [ebp - 0x50]
0x8049ffd:   39 c2                           	cmp edx, eax
0x8049fff:   0f 9c c0                        	setl al
0x804a002:   0f b6 c0                        	movzx eax, al
0x804a005:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a008:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a00b:   88 45 b1                        	mov byte ptr [ebp - 0x4f], al
0x804a00e:   0f b6 45 b1                     	movzx eax, byte ptr [ebp - 0x4f]
0x804a012:   c0 f8 07                        	sar al, 7
0x804a015:   0f be d0                        	movsx edx, al
0x804a018:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a01e:   98                              	cwde 
0x804a01f:   89 c1                           	mov ecx, eax
0x804a021:   d3 fa                           	sar edx, cl
0x804a023:   89 d0                           	mov eax, edx
0x804a025:   66 89 45 b4                     	mov word ptr [ebp - 0x4c], ax
0x804a029:   66 c7 85 4e ff ff ff 9e b8      	mov word ptr [ebp - 0xb2], 0xb89e
0x804a032:   c7 85 48 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0xb8], 0xfffffffe
0x804a03c:   c7 85 44 ff ff ff f5 e3 29 2d   	mov dword ptr [ebp - 0xbc], 0x2d29e3f5
0x804a046:   c7 45 e8 fd ff ff ff            	mov dword ptr [ebp - 0x18], 0xfffffffd
0x804a04d:   e9 ad 01 00 00                  	jmp 0x804a1ff <func_1+0xa27>
0x804a052:   c7 85 38 ff ff ff d5 af 3f 48   	mov dword ptr [ebp - 0xc8], 0x483fafd5
0x804a05c:   c6 85 37 ff ff ff 72            	mov byte ptr [ebp - 0xc9], 0x72
0x804a063:   83 45 c4 01                     	add dword ptr [ebp - 0x3c], 1
0x804a067:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804a06d:   2d b0 3d 5d 20                  	sub eax, 0x205d3db0
0x804a072:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x804a075:   0f 95 c0                        	setne al
0x804a078:   0f b6 c0                        	movzx eax, al
0x804a07b:   39 45 a8                        	cmp dword ptr [ebp - 0x58], eax
0x804a07e:   0f 9c c0                        	setl al
0x804a081:   0f b6 c0                        	movzx eax, al
0x804a084:   66 21 45 b4                     	and word ptr [ebp - 0x4c], ax
0x804a088:   0f bf 55 b4                     	movsx edx, word ptr [ebp - 0x4c]
0x804a08c:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x804a090:   39 c2                           	cmp edx, eax
0x804a092:   0f 94 c0                        	sete al
0x804a095:   0f b6 c0                        	movzx eax, al
0x804a098:   39 85 38 ff ff ff               	cmp dword ptr [ebp - 0xc8], eax
0x804a09e:   0f 9f c0                        	setg al
0x804a0a1:   0f b6 c0                        	movzx eax, al
0x804a0a4:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a0a7:   0f b7 8d 4e ff ff ff            	movzx ecx, word ptr [ebp - 0xb2]
0x804a0ae:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a0b1:   ba 00 00 00 00                  	mov edx, 0
0x804a0b6:   f7 f1                           	div ecx
0x804a0b8:   89 d0                           	mov eax, edx
0x804a0ba:   0f b6 d0                        	movzx edx, al
0x804a0bd:   0f b6 45 ba                     	movzx eax, byte ptr [ebp - 0x46]
0x804a0c1:   0f b6 c0                        	movzx eax, al
0x804a0c4:   0f af c2                        	imul eax, edx
0x804a0c7:   09 45 f0                        	or dword ptr [ebp - 0x10], eax
0x804a0ca:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x804a0ce:   0f 84 cc 00 00 00               	je 0x804a1a0 <func_1+0x9c8>
0x804a0d4:   c7 85 30 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xd0], 1
0x804a0de:   c7 85 2c ff ff ff ee 83 c6 72   	mov dword ptr [ebp - 0xd4], 0x72c683ee
0x804a0e8:   66 c7 85 2a ff ff ff 33 26      	mov word ptr [ebp - 0xd6], 0x2633
0x804a0f1:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804a0f7:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x804a0fa:   0f 94 c0                        	sete al
0x804a0fd:   0f b6 c0                        	movzx eax, al
0x804a100:   21 45 f0                        	and dword ptr [ebp - 0x10], eax
0x804a103:   0f b7 4d b6                     	movzx ecx, word ptr [ebp - 0x4a]
0x804a107:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x804a10d:   89 85 2c ff ff ff               	mov dword ptr [ebp - 0xd4], eax
0x804a113:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804a119:   0f be c0                        	movsx eax, al
0x804a11c:   0f be 5d ba                     	movsx ebx, byte ptr [ebp - 0x46]
0x804a120:   99                              	cdq 
0x804a121:   f7 fb                           	idiv ebx
0x804a123:   89 d0                           	mov eax, edx
0x804a125:   85 c0                           	test eax, eax
0x804a127:   75 04                           	jne 0x804a12d <func_1+0x955>
0x804a129:   80 7d b0 00                     	cmp byte ptr [ebp - 0x50], 0
0x804a12d:   0f b7 95 2a ff ff ff            	movzx edx, word ptr [ebp - 0xd6]
0x804a134:   0f bf 45 b4                     	movsx eax, word ptr [ebp - 0x4c]
0x804a138:   21 d0                           	and eax, edx
0x804a13a:   25 68 e6 0e fb                  	and eax, 0xfb0ee668
0x804a13f:   89 c2                           	mov edx, eax
0x804a141:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804a147:   39 c2                           	cmp edx, eax
0x804a149:   0f 97 c0                        	seta al
0x804a14c:   0f b6 c0                        	movzx eax, al
0x804a14f:   0b 45 a4                        	or eax, dword ptr [ebp - 0x5c]
0x804a152:   85 c0                           	test eax, eax
0x804a154:   75 07                           	jne 0x804a15d <func_1+0x985>
0x804a156:   66 83 7d ee 00                  	cmp word ptr [ebp - 0x12], 0
0x804a15b:   74 0e                           	je 0x804a16b <func_1+0x993>
0x804a15d:   66 83 7d b4 00                  	cmp word ptr [ebp - 0x4c], 0
0x804a162:   74 07                           	je 0x804a16b <func_1+0x993>
0x804a164:   b8 01 00 00 00                  	mov eax, 1
0x804a169:   eb 05                           	jmp 0x804a170 <func_1+0x998>
0x804a16b:   b8 00 00 00 00                  	mov eax, 0
0x804a170:   39 85 2c ff ff ff               	cmp dword ptr [ebp - 0xd4], eax
0x804a176:   0f 9f c0                        	setg al
0x804a179:   0f b6 c0                        	movzx eax, al
0x804a17c:   39 45 a8                        	cmp dword ptr [ebp - 0x58], eax
0x804a17f:   0f 95 c0                        	setne al
0x804a182:   0f b6 c0                        	movzx eax, al
0x804a185:   39 c1                           	cmp ecx, eax
0x804a187:   0f 9f c0                        	setg al
0x804a18a:   0f b6 d0                        	movzx edx, al
0x804a18d:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x804a191:   39 c2                           	cmp edx, eax
0x804a193:   0f 9e c0                        	setle al
0x804a196:   0f b6 c0                        	movzx eax, al
0x804a199:   f7 d0                           	not eax
0x804a19b:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a19e:   eb 4a                           	jmp 0x804a1ea <func_1+0xa12>
0x804a1a0:   81 75 a8 2f 22 38 76            	xor dword ptr [ebp - 0x58], 0x7638222f
0x804a1a7:   83 bd 38 ff ff ff 00            	cmp dword ptr [ebp - 0xc8], 0
0x804a1ae:   74 05                           	je 0x804a1b5 <func_1+0x9dd>
0x804a1b0:   e9 54 f7 ff ff                  	jmp 0x8049909 <func_1+0x131>
0x804a1b5:   66 c7 45 ee 04 00               	mov word ptr [ebp - 0x12], 4
0x804a1bb:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a1be:   89 c1                           	mov ecx, eax
0x804a1c0:   0f bf 55 b2                     	movsx edx, word ptr [ebp - 0x4e]
0x804a1c4:   0f be 45 b0                     	movsx eax, byte ptr [ebp - 0x50]
0x804a1c8:   21 d0                           	and eax, edx
0x804a1ca:   83 f8 03                        	cmp eax, 3
0x804a1cd:   0f 9f c0                        	setg al
0x804a1d0:   21 c8                           	and eax, ecx
0x804a1d2:   0f be c0                        	movsx eax, al
0x804a1d5:   8d 50 52                        	lea edx, [eax + 0x52]
0x804a1d8:   0f b7 85 4e ff ff ff            	movzx eax, word ptr [ebp - 0xb2]
0x804a1df:   39 c2                           	cmp edx, eax
0x804a1e1:   0f 9c c0                        	setl al
0x804a1e4:   0f b6 c0                        	movzx eax, al
0x804a1e7:   21 45 f0                        	and dword ptr [ebp - 0x10], eax
0x804a1ea:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x804a1ee:   83 e8 01                        	sub eax, 1
0x804a1f1:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x804a1f4:   80 85 37 ff ff ff 01            	add byte ptr [ebp - 0xc9], 1
0x804a1fb:   83 45 e8 01                     	add dword ptr [ebp - 0x18], 1
0x804a1ff:   83 7d e8 35                     	cmp dword ptr [ebp - 0x18], 0x35
0x804a203:   0f 86 49 fe ff ff               	jbe 0x804a052 <func_1+0x87a>
0x804a209:   c6 45 b1 fe                     	mov byte ptr [ebp - 0x4f], 0xfe
0x804a20d:   eb 4c                           	jmp 0x804a25b <func_1+0xa83>
0x804a20f:   c7 45 d4 00 00 00 00            	mov dword ptr [ebp - 0x2c], 0
0x804a216:   eb 33                           	jmp 0x804a24b <func_1+0xa73>
0x804a218:   c7 85 3c ff ff ff d6 f6 da 81   	mov dword ptr [ebp - 0xc4], 0x81daf6d6
0x804a222:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x804a226:   75 1b                           	jne 0x804a243 <func_1+0xa6b>
0x804a228:   83 bd 3c ff ff ff 00            	cmp dword ptr [ebp - 0xc4], 0
0x804a22f:   75 15                           	jne 0x804a246 <func_1+0xa6e>
0x804a231:   0f bf 45 a0                     	movsx eax, word ptr [ebp - 0x60]
0x804a235:   39 45 a8                        	cmp dword ptr [ebp - 0x58], eax
0x804a238:   0f 95 c0                        	setne al
0x804a23b:   0f b6 c0                        	movzx eax, al
0x804a23e:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a241:   eb 04                           	jmp 0x804a247 <func_1+0xa6f>
0x804a243:   90                              	nop 
0x804a244:   eb 01                           	jmp 0x804a247 <func_1+0xa6f>
0x804a246:   90                              	nop 
0x804a247:   83 45 d4 01                     	add dword ptr [ebp - 0x2c], 1
0x804a24b:   83 7d d4 0d                     	cmp dword ptr [ebp - 0x2c], 0xd
0x804a24f:   7f c7                           	jg 0x804a218 <func_1+0xa40>
0x804a251:   0f b6 45 b1                     	movzx eax, byte ptr [ebp - 0x4f]
0x804a255:   83 e8 01                        	sub eax, 1
0x804a258:   88 45 b1                        	mov byte ptr [ebp - 0x4f], al
0x804a25b:   80 7d b1 f0                     	cmp byte ptr [ebp - 0x4f], 0xf0
0x804a25f:   7c ae                           	jl 0x804a20f <func_1+0xa37>
0x804a261:   66 c7 45 be f8 ff               	mov word ptr [ebp - 0x42], 0xfff8
0x804a267:   e9 ae 00 00 00                  	jmp 0x804a31a <func_1+0xb42>
0x804a26c:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a26f:   89 c3                           	mov ebx, eax
0x804a271:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x804a275:   66 89 45 b4                     	mov word ptr [ebp - 0x4c], ax
0x804a279:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x804a27d:   66 2b 45 ae                     	sub ax, word ptr [ebp - 0x52]
0x804a281:   0f b7 d0                        	movzx edx, ax
0x804a284:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x804a288:   89 c1                           	mov ecx, eax
0x804a28a:   d3 fa                           	sar edx, cl
0x804a28c:   89 d0                           	mov eax, edx
0x804a28e:   32 45 ba                        	xor al, byte ptr [ebp - 0x46]
0x804a291:   89 c2                           	mov edx, eax
0x804a293:   0f b6 c3                        	movzx eax, bl
0x804a296:   f6 f2                           	div dl
0x804a298:   0f b6 c4                        	movzx eax, ah
0x804a29b:   84 c0                           	test al, al
0x804a29d:   74 56                           	je 0x804a2f5 <func_1+0xb1d>
0x804a29f:   c7 85 40 ff ff ff 5c 4c 40 3e   	mov dword ptr [ebp - 0xc0], 0x3e404c5c
0x804a2a9:   81 65 f0 d8 e7 d1 f3            	and dword ptr [ebp - 0x10], 0xf3d1e7d8
0x804a2b0:   0f b7 45 be                     	movzx eax, word ptr [ebp - 0x42]
0x804a2b4:   66 33 45 a2                     	xor ax, word ptr [ebp - 0x5e]
0x804a2b8:   66 09 45 b2                     	or word ptr [ebp - 0x4e], ax
0x804a2bc:   0f bf 45 b2                     	movsx eax, word ptr [ebp - 0x4e]
0x804a2c0:   83 c0 01                        	add eax, 1
0x804a2c3:   21 45 cc                        	and dword ptr [ebp - 0x34], eax
0x804a2c6:   83 bd 40 ff ff ff 00            	cmp dword ptr [ebp - 0xc0], 0
0x804a2cd:   0f 95 c0                        	setne al
0x804a2d0:   0f b6 c0                        	movzx eax, al
0x804a2d3:   89 c2                           	mov edx, eax
0x804a2d5:   0f b6 45 bb                     	movzx eax, byte ptr [ebp - 0x45]
0x804a2d9:   31 d0                           	xor eax, edx
0x804a2db:   0f bf d0                        	movsx edx, ax
0x804a2de:   0f b7 85 4e ff ff ff            	movzx eax, word ptr [ebp - 0xb2]
0x804a2e5:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x804a2e8:   0f 9d c0                        	setge al
0x804a2eb:   0f b6 c0                        	movzx eax, al
0x804a2ee:   01 d0                           	add eax, edx
0x804a2f0:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a2f3:   eb 1a                           	jmp 0x804a30f <func_1+0xb37>
0x804a2f5:   0f bf 45 a0                     	movsx eax, word ptr [ebp - 0x60]
0x804a2f9:   31 45 d0                        	xor dword ptr [ebp - 0x30], eax
0x804a2fc:   c7 85 58 ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0xa8], 5
0x804a306:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804a30c:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a30f:   0f b7 45 be                     	movzx eax, word ptr [ebp - 0x42]
0x804a313:   83 c0 01                        	add eax, 1
0x804a316:   66 89 45 be                     	mov word ptr [ebp - 0x42], ax
0x804a31a:   66 83 7d be 1f                  	cmp word ptr [ebp - 0x42], 0x1f
0x804a31f:   0f 86 47 ff ff ff               	jbe 0x804a26c <func_1+0xa94>
0x804a325:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x804a32b:   0f b6 c0                        	movzx eax, al
0x804a32e:   c1 e0 04                        	shl eax, 4
0x804a331:   85 c0                           	test eax, eax
0x804a333:   75 38                           	jne 0x804a36d <func_1+0xb95>
0x804a335:   0f bf 95 62 ff ff ff            	movsx edx, word ptr [ebp - 0x9e]
0x804a33c:   0f be 45 ba                     	movsx eax, byte ptr [ebp - 0x46]
0x804a340:   09 d0                           	or eax, edx
0x804a342:   89 85 48 ff ff ff               	mov dword ptr [ebp - 0xb8], eax
0x804a348:   b8 00 00 00 00                  	mov eax, 0
0x804a34d:   89 c2                           	mov edx, eax
0x804a34f:   0f b6 45 bb                     	movzx eax, byte ptr [ebp - 0x45]
0x804a353:   09 d0                           	or eax, edx
0x804a355:   88 45 bb                        	mov byte ptr [ebp - 0x45], al
0x804a358:   80 7d bb 7a                     	cmp byte ptr [ebp - 0x45], 0x7a
0x804a35c:   77 04                           	ja 0x804a362 <func_1+0xb8a>
0x804a35e:   80 7d ed 00                     	cmp byte ptr [ebp - 0x13], 0
0x804a362:   0f be 45 b0                     	movsx eax, byte ptr [ebp - 0x50]
0x804a366:   3d bd dd 27 a7                  	cmp eax, 0xa727ddbd
0x804a36b:   74 07                           	je 0x804a374 <func_1+0xb9c>
0x804a36d:   b8 01 00 00 00                  	mov eax, 1
0x804a372:   eb 05                           	jmp 0x804a379 <func_1+0xba1>
0x804a374:   b8 00 00 00 00                  	mov eax, 0
0x804a379:   31 85 44 ff ff ff               	xor dword ptr [ebp - 0xbc], eax
0x804a37f:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x804a385:   31 45 d4                        	xor dword ptr [ebp - 0x2c], eax
0x804a388:   e9 bd 01 00 00                  	jmp 0x804a54a <func_1+0xd72>
0x804a38d:   c7 45 84 00 00 00 00            	mov dword ptr [ebp - 0x7c], 0
0x804a394:   c7 45 80 cc 17 92 02            	mov dword ptr [ebp - 0x80], 0x29217cc
0x804a39b:   c6 45 db 09                     	mov byte ptr [ebp - 0x25], 9
0x804a39f:   c7 85 7c ff ff ff 6e 0c 5f 23   	mov dword ptr [ebp - 0x84], 0x235f0c6e
0x804a3a9:   c6 85 7b ff ff ff 92            	mov byte ptr [ebp - 0x85], 0x92
0x804a3b0:   0f bf 55 9a                     	movsx edx, word ptr [ebp - 0x66]
0x804a3b4:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x804a3b8:   75 08                           	jne 0x804a3c2 <func_1+0xbea>
0x804a3ba:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a3bd:   3b 45 c0                        	cmp eax, dword ptr [ebp - 0x40]
0x804a3c0:   73 07                           	jae 0x804a3c9 <func_1+0xbf1>
0x804a3c2:   b8 01 00 00 00                  	mov eax, 1
0x804a3c7:   eb 05                           	jmp 0x804a3ce <func_1+0xbf6>
0x804a3c9:   b8 00 00 00 00                  	mov eax, 0
0x804a3ce:   0f bf c8                        	movsx ecx, ax
0x804a3d1:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a3d4:   98                              	cwde 
0x804a3d5:   0f af c1                        	imul eax, ecx
0x804a3d8:   05 7d b3 97 2e                  	add eax, 0x2e97b37d
0x804a3dd:   09 d0                           	or eax, edx
0x804a3df:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a3e2:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a3e5:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x804a3e8:   0f 95 c0                        	setne al
0x804a3eb:   0f b6 c0                        	movzx eax, al
0x804a3ee:   0f bf 4d b4                     	movsx ecx, word ptr [ebp - 0x4c]
0x804a3f2:   99                              	cdq 
0x804a3f3:   f7 f9                           	idiv ecx
0x804a3f5:   89 d0                           	mov eax, edx
0x804a3f7:   98                              	cwde 
0x804a3f8:   2d 13 78 00 00                  	sub eax, 0x7813
0x804a3fd:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a400:   66 c7 45 bc 0b 00               	mov word ptr [ebp - 0x44], 0xb
0x804a406:   eb 27                           	jmp 0x804a42f <func_1+0xc57>
0x804a408:   c6 85 73 ff ff ff 09            	mov byte ptr [ebp - 0x8d], 9
0x804a40f:   c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x804a416:   80 7d ba 00                     	cmp byte ptr [ebp - 0x46], 0
0x804a41a:   75 0d                           	jne 0x804a429 <func_1+0xc51>
0x804a41c:   c6 45 db 02                     	mov byte ptr [ebp - 0x25], 2
0x804a420:   0f be 45 8b                     	movsx eax, byte ptr [ebp - 0x75]
0x804a424:   09 45 f0                        	or dword ptr [ebp - 0x10], eax
0x804a427:   eb 01                           	jmp 0x804a42a <func_1+0xc52>
0x804a429:   90                              	nop 
0x804a42a:   66 83 45 bc 02                  	add word ptr [ebp - 0x44], 2
0x804a42f:   66 83 7d bc 23                  	cmp word ptr [ebp - 0x44], 0x23
0x804a434:   75 d2                           	jne 0x804a408 <func_1+0xc30>
0x804a436:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a43a:   83 f0 85                        	xor eax, 0xffffff85
0x804a43d:   89 c2                           	mov edx, eax
0x804a43f:   0f b7 45 be                     	movzx eax, word ptr [ebp - 0x42]
0x804a443:   09 d0                           	or eax, edx
0x804a445:   08 45 b0                        	or byte ptr [ebp - 0x50], al
0x804a448:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x804a44c:   0f be 55 ba                     	movsx edx, byte ptr [ebp - 0x46]
0x804a450:   0f bf 45 c8                     	movsx eax, word ptr [ebp - 0x38]
0x804a454:   39 45 80                        	cmp dword ptr [ebp - 0x80], eax
0x804a457:   0f 93 c0                        	setae al
0x804a45a:   0f b6 c0                        	movzx eax, al
0x804a45d:   09 d0                           	or eax, edx
0x804a45f:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a462:   66 c7 45 c8 00 00               	mov word ptr [ebp - 0x38], 0
0x804a468:   e9 cf 00 00 00                  	jmp 0x804a53c <func_1+0xd64>
0x804a46d:   66 c7 85 78 ff ff ff df d6      	mov word ptr [ebp - 0x88], 0xd6df
0x804a476:   c7 85 74 ff ff ff f7 44 df e6   	mov dword ptr [ebp - 0x8c], 0xe6df44f7
0x804a480:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x804a484:   66 89 85 78 ff ff ff            	mov word ptr [ebp - 0x88], ax
0x804a48b:   0f bf 85 78 ff ff ff            	movsx eax, word ptr [ebp - 0x88]
0x804a492:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804a498:   66 c7 45 b2 ff ff               	mov word ptr [ebp - 0x4e], 0xffff
0x804a49e:   0f be 85 7b ff ff ff            	movsx eax, byte ptr [ebp - 0x85]
0x804a4a5:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804a4ab:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a4ae:   0f bf d0                        	movsx edx, ax
0x804a4b1:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a4b4:   0f be d8                        	movsx ebx, al
0x804a4b7:   0f be 45 b0                     	movsx eax, byte ptr [ebp - 0x50]
0x804a4bb:   89 c1                           	mov ecx, eax
0x804a4bd:   d3 e3                           	shl ebx, cl
0x804a4bf:   89 d8                           	mov eax, ebx
0x804a4c1:   33 45 a4                        	xor eax, dword ptr [ebp - 0x5c]
0x804a4c4:   89 c1                           	mov ecx, eax
0x804a4c6:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a4c9:   39 c1                           	cmp ecx, eax
0x804a4cb:   0f 94 c0                        	sete al
0x804a4ce:   0f b6 c0                        	movzx eax, al
0x804a4d1:   89 c1                           	mov ecx, eax
0x804a4d3:   d3 e2                           	shl edx, cl
0x804a4d5:   89 d0                           	mov eax, edx
0x804a4d7:   c0 f8 07                        	sar al, 7
0x804a4da:   0f be c0                        	movsx eax, al
0x804a4dd:   0f b6 75 db                     	movzx esi, byte ptr [ebp - 0x25]
0x804a4e1:   99                              	cdq 
0x804a4e2:   f7 fe                           	idiv esi
0x804a4e4:   89 c2                           	mov edx, eax
0x804a4e6:   0f bf 85 78 ff ff ff            	movsx eax, word ptr [ebp - 0x88]
0x804a4ed:   39 c2                           	cmp edx, eax
0x804a4ef:   0f 9e c0                        	setle al
0x804a4f2:   0f b6 c0                        	movzx eax, al
0x804a4f5:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804a4fb:   66 83 7d ca 00                  	cmp word ptr [ebp - 0x36], 0
0x804a500:   0f 95 c0                        	setne al
0x804a503:   0f b6 d0                        	movzx edx, al
0x804a506:   0f b7 85 78 ff ff ff            	movzx eax, word ptr [ebp - 0x88]
0x804a50d:   0f b6 c0                        	movzx eax, al
0x804a510:   01 d0                           	add eax, edx
0x804a512:   3d f5 00 00 00                  	cmp eax, 0xf5
0x804a517:   0f 96 c0                        	setbe al
0x804a51a:   0f b6 c0                        	movzx eax, al
0x804a51d:   0f b6 55 db                     	movzx edx, byte ptr [ebp - 0x25]
0x804a521:   0f be ca                        	movsx ecx, dl
0x804a524:   99                              	cdq 
0x804a525:   f7 f9                           	idiv ecx
0x804a527:   89 55 a8                        	mov dword ptr [ebp - 0x58], edx
0x804a52a:   66 83 7d a0 00                  	cmp word ptr [ebp - 0x60], 0
0x804a52f:   75 18                           	jne 0x804a549 <func_1+0xd71>
0x804a531:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x804a535:   83 c0 04                        	add eax, 4
0x804a538:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x804a53c:   66 83 7d c8 0b                  	cmp word ptr [ebp - 0x38], 0xb
0x804a541:   0f 8e 26 ff ff ff               	jle 0x804a46d <func_1+0xc95>
0x804a547:   eb 01                           	jmp 0x804a54a <func_1+0xd72>
0x804a549:   90                              	nop 
0x804a54a:   83 65 a8 01                     	and dword ptr [ebp - 0x58], 1
0x804a54e:   0f bf 45 ee                     	movsx eax, word ptr [ebp - 0x12]
0x804a552:   0f b6 55 bb                     	movzx edx, byte ptr [ebp - 0x45]
0x804a556:   0f bf 4d 9a                     	movsx ecx, word ptr [ebp - 0x66]
0x804a55a:   0f b7 75 bc                     	movzx esi, word ptr [ebp - 0x44]
0x804a55e:   0f b7 7d be                     	movzx edi, word ptr [ebp - 0x42]
0x804a562:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x804a568:   0f b7 5d b6                     	movzx ebx, word ptr [ebp - 0x4a]
0x804a56c:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x804a572:   0f bf 7d b8                     	movsx edi, word ptr [ebp - 0x48]
0x804a576:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x804a57c:   0f b7 5d ae                     	movzx ebx, word ptr [ebp - 0x52]
0x804a580:   89 9d d4 fe ff ff               	mov dword ptr [ebp - 0x12c], ebx
0x804a586:   0f be 7d b0                     	movsx edi, byte ptr [ebp - 0x50]
0x804a58a:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x804a590:   0f be 5d b1                     	movsx ebx, byte ptr [ebp - 0x4f]
0x804a594:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x804a59a:   0f bf 7d a0                     	movsx edi, word ptr [ebp - 0x60]
0x804a59e:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x804a5a4:   0f bf 5d b2                     	movsx ebx, word ptr [ebp - 0x4e]
0x804a5a8:   89 9d c4 fe ff ff               	mov dword ptr [ebp - 0x13c], ebx
0x804a5ae:   0f bf 7d a2                     	movsx edi, word ptr [ebp - 0x5e]
0x804a5b2:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x804a5b8:   0f bf 7d b4                     	movsx edi, word ptr [ebp - 0x4c]
0x804a5bc:   0f be 5d ba                     	movsx ebx, byte ptr [ebp - 0x46]
0x804a5c0:   50                              	push eax
0x804a5c1:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a5c4:   52                              	push edx
0x804a5c5:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a5c8:   51                              	push ecx
0x804a5c9:   56                              	push esi
0x804a5ca:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a5d0:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a5d3:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a5d9:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a5df:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a5e2:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a5e5:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a5eb:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a5f1:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a5f7:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a5fd:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a603:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a609:   57                              	push edi
0x804a60a:   53                              	push ebx
0x804a60b:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a60e:   e8 13 f0 ff ff                  	call 0x8049626 <set_var>
0x804a613:   83 c4 54                        	add esp, 0x54
0x804a616:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a619:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a61c:   5b                              	pop ebx
0x804a61d:   5e                              	pop esi
0x804a61e:   5f                              	pop edi
0x804a61f:   5d                              	pop ebp
0x804a620:   c3                              	ret 
; function: main at 0x804a621 -- 0x804a927
0x804a621:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a625:   83 e4 f0                        	and esp, 0xfffffff0
0x804a628:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a62b:   55                              	push ebp
0x804a62c:   89 e5                           	mov ebp, esp
0x804a62e:   53                              	push ebx
0x804a62f:   51                              	push ecx
0x804a630:   83 ec 10                        	sub esp, 0x10
0x804a633:   e8 58 dd ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a638:   81 c3 c8 29 00 00               	add ebx, 0x29c8
0x804a63e:   89 c8                           	mov eax, ecx
0x804a640:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a647:   83 38 02                        	cmp dword ptr [eax], 2
0x804a64a:   75 26                           	jne 0x804a672 <main+0x51>
0x804a64c:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a64f:   83 c0 04                        	add eax, 4
0x804a652:   8b 00                           	mov eax, dword ptr [eax]
0x804a654:   83 ec 08                        	sub esp, 8
0x804a657:   8d 93 08 da ff ff               	lea edx, [ebx - 0x25f8]
0x804a65d:   52                              	push edx
0x804a65e:   50                              	push eax
0x804a65f:   e8 9c dc ff ff                  	call 0x8048300 <strcmp>
0x804a664:   83 c4 10                        	add esp, 0x10
0x804a667:   85 c0                           	test eax, eax
0x804a669:   75 07                           	jne 0x804a672 <main+0x51>
0x804a66b:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a672:   e8 df dd ff ff                  	call 0x8048456 <platform_main_begin>
0x804a677:   e8 ef ed ff ff                  	call 0x804946b <crc32_gentab>
0x804a67c:   e8 57 f1 ff ff                  	call 0x80497d8 <func_1>
0x804a681:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804a687:   83 ec 04                        	sub esp, 4
0x804a68a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a68d:   8d 93 0a da ff ff               	lea edx, [ebx - 0x25f6]
0x804a693:   52                              	push edx
0x804a694:   50                              	push eax
0x804a695:   e8 dd ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a69a:   83 c4 10                        	add esp, 0x10
0x804a69d:   0f b6 83 28 00 00 00            	movzx eax, byte ptr [ebx + 0x28]
0x804a6a4:   0f be c0                        	movsx eax, al
0x804a6a7:   83 ec 04                        	sub esp, 4
0x804a6aa:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6ad:   8d 93 0e da ff ff               	lea edx, [ebx - 0x25f2]
0x804a6b3:   52                              	push edx
0x804a6b4:   50                              	push eax
0x804a6b5:   e8 bd ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6ba:   83 c4 10                        	add esp, 0x10
0x804a6bd:   0f b7 83 2a 00 00 00            	movzx eax, word ptr [ebx + 0x2a]
0x804a6c4:   98                              	cwde 
0x804a6c5:   83 ec 04                        	sub esp, 4
0x804a6c8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6cb:   8d 93 13 da ff ff               	lea edx, [ebx - 0x25ed]
0x804a6d1:   52                              	push edx
0x804a6d2:   50                              	push eax
0x804a6d3:   e8 9f ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6d8:   83 c4 10                        	add esp, 0x10
0x804a6db:   0f b7 83 2c 00 00 00            	movzx eax, word ptr [ebx + 0x2c]
0x804a6e2:   98                              	cwde 
0x804a6e3:   83 ec 04                        	sub esp, 4
0x804a6e6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6e9:   8d 93 18 da ff ff               	lea edx, [ebx - 0x25e8]
0x804a6ef:   52                              	push edx
0x804a6f0:   50                              	push eax
0x804a6f1:   e8 81 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6f6:   83 c4 10                        	add esp, 0x10
0x804a6f9:   0f b7 83 2e 00 00 00            	movzx eax, word ptr [ebx + 0x2e]
0x804a700:   98                              	cwde 
0x804a701:   83 ec 04                        	sub esp, 4
0x804a704:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a707:   8d 93 1d da ff ff               	lea edx, [ebx - 0x25e3]
0x804a70d:   52                              	push edx
0x804a70e:   50                              	push eax
0x804a70f:   e8 63 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a714:   83 c4 10                        	add esp, 0x10
0x804a717:   0f b7 83 30 00 00 00            	movzx eax, word ptr [ebx + 0x30]
0x804a71e:   98                              	cwde 
0x804a71f:   83 ec 04                        	sub esp, 4
0x804a722:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a725:   8d 93 22 da ff ff               	lea edx, [ebx - 0x25de]
0x804a72b:   52                              	push edx
0x804a72c:   50                              	push eax
0x804a72d:   e8 45 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a732:   83 c4 10                        	add esp, 0x10
0x804a735:   0f b6 83 32 00 00 00            	movzx eax, byte ptr [ebx + 0x32]
0x804a73c:   0f be c0                        	movsx eax, al
0x804a73f:   83 ec 04                        	sub esp, 4
0x804a742:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a745:   8d 93 27 da ff ff               	lea edx, [ebx - 0x25d9]
0x804a74b:   52                              	push edx
0x804a74c:   50                              	push eax
0x804a74d:   e8 25 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a752:   83 c4 10                        	add esp, 0x10
0x804a755:   0f b6 83 33 00 00 00            	movzx eax, byte ptr [ebx + 0x33]
0x804a75c:   0f be c0                        	movsx eax, al
0x804a75f:   83 ec 04                        	sub esp, 4
0x804a762:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a765:   8d 93 2c da ff ff               	lea edx, [ebx - 0x25d4]
0x804a76b:   52                              	push edx
0x804a76c:   50                              	push eax
0x804a76d:   e8 05 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a772:   83 c4 10                        	add esp, 0x10
0x804a775:   0f b7 83 34 00 00 00            	movzx eax, word ptr [ebx + 0x34]
0x804a77c:   0f b7 c0                        	movzx eax, ax
0x804a77f:   83 ec 04                        	sub esp, 4
0x804a782:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a785:   8d 93 31 da ff ff               	lea edx, [ebx - 0x25cf]
0x804a78b:   52                              	push edx
0x804a78c:   50                              	push eax
0x804a78d:   e8 e5 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a792:   83 c4 10                        	add esp, 0x10
0x804a795:   8b 83 84 04 00 00               	mov eax, dword ptr [ebx + 0x484]
0x804a79b:   89 c2                           	mov edx, eax
0x804a79d:   83 ec 04                        	sub esp, 4
0x804a7a0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7a3:   8d 83 36 da ff ff               	lea eax, [ebx - 0x25ca]
0x804a7a9:   50                              	push eax
0x804a7aa:   52                              	push edx
0x804a7ab:   e8 c7 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7b0:   83 c4 10                        	add esp, 0x10
0x804a7b3:   8b 83 88 04 00 00               	mov eax, dword ptr [ebx + 0x488]
0x804a7b9:   89 c2                           	mov edx, eax
0x804a7bb:   83 ec 04                        	sub esp, 4
0x804a7be:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7c1:   8d 83 3b da ff ff               	lea eax, [ebx - 0x25c5]
0x804a7c7:   50                              	push eax
0x804a7c8:   52                              	push edx
0x804a7c9:   e8 a9 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7ce:   83 c4 10                        	add esp, 0x10
0x804a7d1:   0f b7 83 36 00 00 00            	movzx eax, word ptr [ebx + 0x36]
0x804a7d8:   98                              	cwde 
0x804a7d9:   83 ec 04                        	sub esp, 4
0x804a7dc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7df:   8d 93 40 da ff ff               	lea edx, [ebx - 0x25c0]
0x804a7e5:   52                              	push edx
0x804a7e6:   50                              	push eax
0x804a7e7:   e8 8b ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7ec:   83 c4 10                        	add esp, 0x10
0x804a7ef:   0f b7 83 38 00 00 00            	movzx eax, word ptr [ebx + 0x38]
0x804a7f6:   0f b7 c0                        	movzx eax, ax
0x804a7f9:   83 ec 04                        	sub esp, 4
0x804a7fc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7ff:   8d 93 45 da ff ff               	lea edx, [ebx - 0x25bb]
0x804a805:   52                              	push edx
0x804a806:   50                              	push eax
0x804a807:   e8 6b ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a80c:   83 c4 10                        	add esp, 0x10
0x804a80f:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804a815:   83 ec 04                        	sub esp, 4
0x804a818:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a81b:   8d 93 4a da ff ff               	lea edx, [ebx - 0x25b6]
0x804a821:   52                              	push edx
0x804a822:   50                              	push eax
0x804a823:   e8 4f ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a828:   83 c4 10                        	add esp, 0x10
0x804a82b:   0f b7 83 8c 04 00 00            	movzx eax, word ptr [ebx + 0x48c]
0x804a832:   0f b7 c0                        	movzx eax, ax
0x804a835:   83 ec 04                        	sub esp, 4
0x804a838:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a83b:   8d 93 50 da ff ff               	lea edx, [ebx - 0x25b0]
0x804a841:   52                              	push edx
0x804a842:   50                              	push eax
0x804a843:   e8 2f ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a848:   83 c4 10                        	add esp, 0x10
0x804a84b:   0f b7 83 40 00 00 00            	movzx eax, word ptr [ebx + 0x40]
0x804a852:   0f b7 c0                        	movzx eax, ax
0x804a855:   83 ec 04                        	sub esp, 4
0x804a858:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a85b:   8d 93 56 da ff ff               	lea edx, [ebx - 0x25aa]
0x804a861:   52                              	push edx
0x804a862:   50                              	push eax
0x804a863:   e8 0f ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a868:   83 c4 10                        	add esp, 0x10
0x804a86b:   0f b7 83 42 00 00 00            	movzx eax, word ptr [ebx + 0x42]
0x804a872:   98                              	cwde 
0x804a873:   83 ec 04                        	sub esp, 4
0x804a876:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a879:   8d 93 5c da ff ff               	lea edx, [ebx - 0x25a4]
0x804a87f:   52                              	push edx
0x804a880:   50                              	push eax
0x804a881:   e8 f1 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a886:   83 c4 10                        	add esp, 0x10
0x804a889:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804a88f:   83 ec 04                        	sub esp, 4
0x804a892:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a895:   8d 93 62 da ff ff               	lea edx, [ebx - 0x259e]
0x804a89b:   52                              	push edx
0x804a89c:   50                              	push eax
0x804a89d:   e8 d5 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8a2:   83 c4 10                        	add esp, 0x10
0x804a8a5:   0f b6 83 48 00 00 00            	movzx eax, byte ptr [ebx + 0x48]
0x804a8ac:   0f b6 c0                        	movzx eax, al
0x804a8af:   83 ec 04                        	sub esp, 4
0x804a8b2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8b5:   8d 93 68 da ff ff               	lea edx, [ebx - 0x2598]
0x804a8bb:   52                              	push edx
0x804a8bc:   50                              	push eax
0x804a8bd:   e8 b5 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8c2:   83 c4 10                        	add esp, 0x10
0x804a8c5:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804a8cb:   89 c2                           	mov edx, eax
0x804a8cd:   83 ec 04                        	sub esp, 4
0x804a8d0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8d3:   8d 83 6e da ff ff               	lea eax, [ebx - 0x2592]
0x804a8d9:   50                              	push eax
0x804a8da:   52                              	push edx
0x804a8db:   e8 97 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8e0:   83 c4 10                        	add esp, 0x10
0x804a8e3:   0f b7 83 50 00 00 00            	movzx eax, word ptr [ebx + 0x50]
0x804a8ea:   98                              	cwde 
0x804a8eb:   83 ec 04                        	sub esp, 4
0x804a8ee:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8f1:   8d 93 74 da ff ff               	lea edx, [ebx - 0x258c]
0x804a8f7:   52                              	push edx
0x804a8f8:   50                              	push eax
0x804a8f9:   e8 79 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8fe:   83 c4 10                        	add esp, 0x10
0x804a901:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804a907:   f7 d0                           	not eax
0x804a909:   83 ec 08                        	sub esp, 8
0x804a90c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a90f:   50                              	push eax
0x804a910:   e8 51 db ff ff                  	call 0x8048466 <platform_main_end>
0x804a915:   83 c4 10                        	add esp, 0x10
0x804a918:   b8 00 00 00 00                  	mov eax, 0
0x804a91d:   8d 65 f8                        	lea esp, [ebp - 8]
0x804a920:   59                              	pop ecx
0x804a921:   5b                              	pop ebx
0x804a922:   5d                              	pop ebp
0x804a923:   8d 61 fc                        	lea esp, [ecx - 4]
0x804a926:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804a927 -- 0x804a92b
0x804a927:   8b 04 24                        	mov eax, dword ptr [esp]
0x804a92a:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804a92b -- 0x804a92f
0x804a92b:   8b 14 24                        	mov edx, dword ptr [esp]
0x804a92e:   c3                              	ret 
; data inside code section at 0x804a92f -- 0x804a930
0x804a92f:   90                                                 |.               |
; function: __libc_csu_init at 0x804a930 -- 0x804a98d
0x804a930:   55                              	push ebp
0x804a931:   57                              	push edi
0x804a932:   56                              	push esi
0x804a933:   53                              	push ebx
0x804a934:   e8 57 da ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a939:   81 c3 c7 26 00 00               	add ebx, 0x26c7
0x804a93f:   83 ec 0c                        	sub esp, 0xc
0x804a942:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804a946:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804a94c:   e8 7b d9 ff ff                  	call 0x80482cc <_init>
0x804a951:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804a957:   29 c6                           	sub esi, eax
0x804a959:   c1 fe 02                        	sar esi, 2
0x804a95c:   85 f6                           	test esi, esi
0x804a95e:   74 25                           	je 0x804a985 <__libc_csu_init+0x55>
0x804a960:   31 ff                           	xor edi, edi
0x804a962:   8d b6 00 00 00 00               	lea esi, [esi]
0x804a968:   83 ec 04                        	sub esp, 4
0x804a96b:   55                              	push ebp
0x804a96c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a970:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a974:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804a97b:   83 c7 01                        	add edi, 1
0x804a97e:   83 c4 10                        	add esp, 0x10
0x804a981:   39 fe                           	cmp esi, edi
0x804a983:   75 e3                           	jne 0x804a968 <__libc_csu_init+0x38>
0x804a985:   83 c4 0c                        	add esp, 0xc
0x804a988:   5b                              	pop ebx
0x804a989:   5e                              	pop esi
0x804a98a:   5f                              	pop edi
0x804a98b:   5d                              	pop ebp
0x804a98c:   c3                              	ret 
; data inside code section at 0x804a98d -- 0x804a990
0x804a98d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804a990 -- 0x804a992
0x804a990:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804a994 -- 0x804a9a8
0x804a994:   53                              	push ebx
0x804a995:   83 ec 08                        	sub esp, 8
0x804a998:   e8 f3 d9 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a99d:   81 c3 63 26 00 00               	add ebx, 0x2663
0x804a9a3:   83 c4 08                        	add esp, 8
0x804a9a6:   5b                              	pop ebx
0x804a9a7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 ac a9 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804a9a8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804a9b8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804a9c8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804a9d8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804a9e8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804a9f8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804aa08:   31 00 67 5f 35 00 67 5f  31 30 00 67 5f 31 31 00   |1.g_5.g_10.g_11.|
0x804aa18:   67 5f 31 32 00 67 5f 31  33 00 67 5f 31 34 00 67   |g_12.g_13.g_14.g|
0x804aa28:   5f 32 36 00 67 5f 34 32  00 67 5f 34 37 00 67 5f   |_26.g_42.g_47.g_|
0x804aa38:   34 39 00 67 5f 35 30 00  67 5f 35 31 00 67 5f 39   |49.g_50.g_51.g_9|
0x804aa48:   35 00 67 5f 31 32 38 00  67 5f 31 33 37 00 67 5f   |5.g_128.g_137.g_|
0x804aa58:   31 34 30 00 67 5f 31 34  34 00 67 5f 31 34 35 00   |140.g_144.g_145.|
0x804aa68:   67 5f 31 35 30 00 67 5f  31 35 36 00 67 5f 31 35   |g_150.g_156.g_15|
0x804aa78:   38 00 00 00 00 00 00 3f  ff ff ff 7e 00 00 80 0d   |8......?...~....|
0x804aa88:   00 00 80 31 ff ff 7f 3f  00 00 00 27 00 00 80 71   |...1...?...'...q|
0x804aa98:   ff ff ff 34 00 00 00 00  00 00 00 00 00 00 e0 3f   |...4...........?|
0x804aaa8:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804aab8:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804aac8:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804aad8:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804aae8:   01                                                 |.               |
; section: .eh_frame_hdr
0x804aae8:   01 1b 03 3b b8 02 00 00  56 00 00 00 08 d8 ff ff   |...;....V.......|
0x804aaf8:   e8 02 00 00 48 d8 ff ff  0c 03 00 00 98 d8 ff ff   |....H...........|
0x804ab08:   d4 02 00 00 6e d9 ff ff  20 03 00 00 7e d9 ff ff   |....n... ...~...|
0x804ab18:   40 03 00 00 ac d9 ff ff  64 03 00 00 ca d9 ff ff   |@.......d.......|
0x804ab28:   84 03 00 00 f2 d9 ff ff  a4 03 00 00 1c da ff ff   |................|
0x804ab38:   c4 03 00 00 45 da ff ff  e4 03 00 00 88 da ff ff   |....E...........|
0x804ab48:   04 04 00 00 c9 da ff ff  24 04 00 00 21 db ff ff   |........$...!...|
0x804ab58:   48 04 00 00 73 db ff ff  6c 04 00 00 b0 db ff ff   |H...s...l.......|
0x804ab68:   8c 04 00 00 e7 db ff ff  ac 04 00 00 06 dc ff ff   |................|
0x804ab78:   cc 04 00 00 30 dc ff ff  ec 04 00 00 5c dc ff ff   |....0.......\...|
0x804ab88:   0c 05 00 00 87 dc ff ff  2c 05 00 00 d0 dc ff ff   |........,.......|
0x804ab98:   4c 05 00 00 17 dd ff ff  6c 05 00 00 71 dd ff ff   |L.......l...q...|
0x804aba8:   90 05 00 00 c5 dd ff ff  b4 05 00 00 04 de ff ff   |................|
0x804abb8:   d4 05 00 00 3d de ff ff  f4 05 00 00 5f de ff ff   |....=......._...|
0x804abc8:   14 06 00 00 ad de ff ff  34 06 00 00 e9 de ff ff   |........4.......|
0x804abd8:   54 06 00 00 72 df ff ff  74 06 00 00 a4 df ff ff   |T...r...t.......|
0x804abe8:   94 06 00 00 d4 df ff ff  b4 06 00 00 19 e0 ff ff   |................|
0x804abf8:   d4 06 00 00 58 e0 ff ff  f4 06 00 00 8a e0 ff ff   |....X...........|
0x804ac08:   14 07 00 00 b6 e0 ff ff  34 07 00 00 d4 e0 ff ff   |........4.......|
0x804ac18:   54 07 00 00 fc e0 ff ff  74 07 00 00 21 e1 ff ff   |T.......t...!...|
0x804ac28:   94 07 00 00 46 e1 ff ff  b4 07 00 00 7d e1 ff ff   |....F.......}...|
0x804ac38:   d4 07 00 00 b1 e1 ff ff  f4 07 00 00 03 e2 ff ff   |................|
0x804ac48:   18 08 00 00 4f e2 ff ff  3c 08 00 00 86 e2 ff ff   |....O...<.......|
0x804ac58:   5c 08 00 00 b7 e2 ff ff  7c 08 00 00 d6 e2 ff ff   |\.......|.......|
0x804ac68:   9c 08 00 00 00 e3 ff ff  bc 08 00 00 28 e3 ff ff   |............(...|
0x804ac78:   dc 08 00 00 51 e3 ff ff  fc 08 00 00 8d e3 ff ff   |....Q...........|
0x804ac88:   1c 09 00 00 c7 e3 ff ff  3c 09 00 00 1a e4 ff ff   |........<.......|
0x804ac98:   60 09 00 00 67 e4 ff ff  84 09 00 00 9f e4 ff ff   |`...g...........|
0x804aca8:   a4 09 00 00 d1 e4 ff ff  c4 09 00 00 e5 e4 ff ff   |................|
0x804acb8:   e4 09 00 00 fc e4 ff ff  04 0a 00 00 11 e5 ff ff   |................|
0x804acc8:   24 0a 00 00 27 e5 ff ff  44 0a 00 00 4e e5 ff ff   |$...'...D...N...|
0x804acd8:   64 0a 00 00 73 e5 ff ff  84 0a 00 00 b2 e5 ff ff   |d...s...........|
0x804ace8:   a4 0a 00 00 eb e5 ff ff  c4 0a 00 00 17 e6 ff ff   |................|
0x804acf8:   e4 0a 00 00 3d e6 ff ff  04 0b 00 00 7f e6 ff ff   |....=...........|
0x804ad08:   24 0b 00 00 c1 e6 ff ff  44 0b 00 00 03 e7 ff ff   |$.......D.......|
0x804ad18:   64 0b 00 00 78 e7 ff ff  84 0b 00 00 d5 e7 ff ff   |d...x...........|
0x804ad28:   a4 0b 00 00 32 e8 ff ff  c4 0b 00 00 8f e8 ff ff   |....2...........|
0x804ad38:   e4 0b 00 00 1f e9 ff ff  04 0c 00 00 83 e9 ff ff   |................|
0x804ad48:   24 0c 00 00 f3 e9 ff ff  44 0c 00 00 3a ea ff ff   |$.......D...:...|
0x804ad58:   68 0c 00 00 8f ea ff ff  88 0c 00 00 d6 ea ff ff   |h...............|
0x804ad68:   ac 0c 00 00 3e eb ff ff  d0 0c 00 00 f0 ec ff ff   |....>...........|
0x804ad78:   00 0d 00 00 39 fb ff ff  30 0d 00 00 3f fe ff ff   |....9...0...?...|
0x804ad88:   68 0d 00 00 43 fe ff ff  7c 0d 00 00 48 fe ff ff   |h...C...|...H...|
0x804ad98:   90 0d 00 00 a8 fe ff ff  dc 0d 00 00 14            |.............   |
; section: .eh_frame
0x804ada4:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804adb4:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804adc4:   bc d5 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804add4:   30 00 00 00 18 d5 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804ade4:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804adf4:   10 00 00 00 54 00 00 00  34 d5 ff ff 08 00 00 00   |....T...4.......|
0x804ae04:   00 00 00 00 1c 00 00 00  68 00 00 00 46 d6 ff ff   |........h...F...|
0x804ae14:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804ae24:   04 04 00 00 20 00 00 00  88 00 00 00 36 d6 ff ff   |.... .......6...|
0x804ae34:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804ae44:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804ae54:   40 d6 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |@........A....B.|
0x804ae64:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804ae74:   3e d6 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |>...(....A....B.|
0x804ae84:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804ae94:   46 d6 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |F...*....A....B.|
0x804aea4:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804aeb4:   50 d6 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |P...)....A....B.|
0x804aec4:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804aed4:   59 d6 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |Y...C....A....B.|
0x804aee4:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804aef4:   7c d6 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   ||...A....A....B.|
0x804af04:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804af14:   9d d6 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804af24:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804af34:   90 01 00 00 d1 d6 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804af44:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804af54:   1c 00 00 00 b4 01 00 00  ff d6 ff ff 3d 00 00 00   |............=...|
0x804af64:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804af74:   1c 00 00 00 d4 01 00 00  1c d7 ff ff 37 00 00 00   |............7...|
0x804af84:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804af94:   1c 00 00 00 f4 01 00 00  33 d7 ff ff 1f 00 00 00   |........3.......|
0x804afa4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804afb4:   1c 00 00 00 14 02 00 00  32 d7 ff ff 2a 00 00 00   |........2...*...|
0x804afc4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804afd4:   1c 00 00 00 34 02 00 00  3c d7 ff ff 2c 00 00 00   |....4...<...,...|
0x804afe4:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804aff4:   1c 00 00 00 54 02 00 00  48 d7 ff ff 2b 00 00 00   |....T...H...+...|
0x804b004:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b014:   1c 00 00 00 74 02 00 00  53 d7 ff ff 49 00 00 00   |....t...S...I...|
0x804b024:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b034:   1c 00 00 00 94 02 00 00  7c d7 ff ff 47 00 00 00   |........|...G...|
0x804b044:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b054:   20 00 00 00 b4 02 00 00  a3 d7 ff ff 5a 00 00 00   | ...........Z...|
0x804b064:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b074:   c5 0c 04 04 20 00 00 00  d8 02 00 00 d9 d7 ff ff   |.... ...........|
0x804b084:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b094:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b0a4:   09 d8 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b0b4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b0c4:   28 d8 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |(...9....A....B.|
0x804b0d4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b0e4:   41 d8 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |A..."....A....B.|
0x804b0f4:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b104:   43 d8 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |C...N....A....B.|
0x804b114:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b124:   71 d8 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |q...<....A....B.|
0x804b134:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b144:   8d d8 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b154:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b164:   f6 d8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b174:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b184:   08 d9 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b194:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b1a4:   18 d9 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b1b4:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b1c4:   3d d9 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |=...?....A....B.|
0x804b1d4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b1e4:   5c d9 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |\...2....A....B.|
0x804b1f4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b204:   6e d9 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |n...,....A....B.|
0x804b214:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b224:   7a d9 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |z........A....B.|
0x804b234:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b244:   78 d9 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |x...(....A....B.|
0x804b254:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b264:   80 d9 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b274:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b284:   85 d9 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b294:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b2a4:   8a d9 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b2b4:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b2c4:   a1 d9 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b2d4:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b2e4:   b5 d9 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b2f4:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b304:   60 05 00 00 e3 d9 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b314:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b324:   1c 00 00 00 84 05 00 00  0b da ff ff 37 00 00 00   |............7...|
0x804b334:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b344:   1c 00 00 00 a4 05 00 00  22 da ff ff 31 00 00 00   |........"...1...|
0x804b354:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b364:   1c 00 00 00 c4 05 00 00  33 da ff ff 1f 00 00 00   |........3.......|
0x804b374:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b384:   1c 00 00 00 e4 05 00 00  32 da ff ff 2a 00 00 00   |........2...*...|
0x804b394:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b3a4:   1c 00 00 00 04 06 00 00  3c da ff ff 28 00 00 00   |........<...(...|
0x804b3b4:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b3c4:   1c 00 00 00 24 06 00 00  44 da ff ff 29 00 00 00   |....$...D...)...|
0x804b3d4:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b3e4:   1c 00 00 00 44 06 00 00  4d da ff ff 3c 00 00 00   |....D...M...<...|
0x804b3f4:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b404:   1c 00 00 00 64 06 00 00  69 da ff ff 3a 00 00 00   |....d...i...:...|
0x804b414:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b424:   20 00 00 00 84 06 00 00  83 da ff ff 53 00 00 00   | ...........S...|
0x804b434:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b444:   c5 0c 04 04 20 00 00 00  a8 06 00 00 b2 da ff ff   |.... ...........|
0x804b454:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b464:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b474:   db da ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b484:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b494:   f3 da ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b4a4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b4b4:   05 db ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b4c4:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b4d4:   f9 da ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b4e4:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b4f4:   f0 da ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b504:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b514:   e5 da ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b524:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b534:   db da ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b544:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b554:   e2 da ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b564:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b574:   e7 da ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b584:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b594:   06 db ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b5a4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b5b4:   1f db ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b5c4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b5d4:   2b db ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |+...&....A....B.|
0x804b5e4:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b5f4:   31 db ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |1...B....A....B.|
0x804b604:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b614:   53 db ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |S...B....A....B.|
0x804b624:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b634:   75 db ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |u...B....A....B.|
0x804b644:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b654:   97 db ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804b664:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b674:   ec db ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b684:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b694:   29 dc ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |)...]....A....B.|
0x804b6a4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b6b4:   66 dc ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |f...]....A....B.|
0x804b6c4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b6d4:   a3 dc ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b6e4:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b6f4:   13 dd ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804b704:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b714:   57 dd ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |W...p....A....B.|
0x804b724:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b734:   a7 dd ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b744:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b754:   b0 09 00 00 ca dd ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804b764:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b774:   d0 09 00 00 ff dd ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804b784:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b794:   20 00 00 00 f4 09 00 00  22 de ff ff 68 00 00 00   | ......."...h...|
0x804b7a4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b7b4:   0c 04 04 00 2c 00 00 00  18 0a 00 00 66 de ff ff   |....,.......f...|
0x804b7c4:   b2 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804b7d4:   86 04 83 05 03 a5 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804b7e4:   04 00 00 00 2c 00 00 00  48 0a 00 00 e8 df ff ff   |....,...H.......|
0x804b7f4:   49 0e 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |I....A....B..I..|
0x804b804:   86 04 83 05 03 39 0e c3  41 c6 41 c7 41 c5 0c 04   |.....9..A.A.A...|
0x804b814:   04 00 00 00 34 00 00 00  78 0a 00 00 01 ee ff ff   |....4...x.......|
0x804b824:   06 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804b834:   0f 03 75 78 06 10 03 02  75 7c 03 f1 02 c1 0c 01   |..ux....u|......|
0x804b844:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804b854:   b0 0a 00 00 cf f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804b864:   10 00 00 00 c4 0a 00 00  bf f0 ff ff 04 00 00 00   |................|
0x804b874:   00 00 00 00 48 00 00 00  d8 0a 00 00 b0 f0 ff ff   |....H...........|
0x804b884:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804b894:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804b8a4:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804b8b4:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804b8c4:   10 00 00 00 24 0b 00 00  c4 f0 ff ff 02 00 00 00   |....$...........|
0x804b8d4:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 94 a9 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff d5 0c 17 0c   |................|
0x804d028:   e3 00 97 56 f8 8a fa ff  04 00 fe 01 05 00 f9 ff   |...V............|
0x804d038:   b0 89 00 00 bf a4 73 ff  f7 ff 02 00 01 00 00 00   |......s.........|
0x804d048:   dd 00 00 00 ec d9 12 ba  f6 ff ??                  |..........?     |
