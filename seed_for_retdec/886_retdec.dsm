;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:44:15
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 70 de ff ff               	lea eax, [ebx - 0x2190]
0x804835c:   50                              	push eax
0x804835d:   8d 83 10 de ff ff               	lea eax, [ebx - 0x21f0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 7b ab 04 08               	mov eax, 0x804ab7b
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 58 d0 04 08                  	mov eax, 0x804d058
0x80483a5:   3d 58 d0 04 08                  	cmp eax, 0x804d058
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 58 d0 04 08                  	push 0x804d058
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 58 d0 04 08                  	mov eax, 0x804d058
0x80483e5:   2d 58 d0 04 08                  	sub eax, 0x804d058
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 58 d0 04 08                  	push 0x804d058
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 60 d0 04 08 00            	cmp byte ptr [0x804d060], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 60 d0 04 08 01            	mov byte ptr [0x804d060], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 a7 29 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 93 29 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 90 de ff ff               	lea edx, [eax - 0x2170]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 66 29 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 48 29 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 20 29 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 f6 28 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 cd 28 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 8a 28 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 48 28 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 f0 27 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 9f 27 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 62 27 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 2b 27 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 0c 27 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 e2 26 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 b6 26 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 8b 26 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 42 26 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 fa 25 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 a0 25 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 4d 25 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 0e 25 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 d8 24 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 b6 24 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 68 24 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 2c 24 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 a3 23 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 71 23 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 41 23 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 fc 22 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 bd 22 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 8b 22 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 5c 22 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 3e 22 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 16 22 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 f1 21 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 cc 21 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 95 21 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 60 21 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 0e 21 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 c3 20 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 8c 20 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 5b 20 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 3c 20 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 12 20 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 ea 1f 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 c1 1f 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 85 1f 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 4a 1f 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 f7 1e 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 ab 1e 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 73 1e 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 44 1e 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 30 1e 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 19 1e 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 04 1e 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 ee 1d 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 c7 1d 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 a2 1d 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 63 1d 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 2a 1d 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 fe 1c 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 d8 1c 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 50 df ff ff               	fld dword ptr [eax - 0x20b0]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 50 df ff ff               	fld dword ptr [eax - 0x20b0]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 54 df ff ff               	fld dword ptr [eax - 0x20ac]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 96 1c 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 50 df ff ff               	fld dword ptr [eax - 0x20b0]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 50 df ff ff               	fld dword ptr [eax - 0x20b0]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 54 df ff ff               	fld dword ptr [eax - 0x20ac]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 54 1c 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 58 df ff ff               	fld dword ptr [eax - 0x20a8]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 5c df ff ff               	fld dword ptr [eax - 0x20a4]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 60 df ff ff               	fld dword ptr [eax - 0x20a0]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 12 1c 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 64 df ff ff               	fld dword ptr [eax - 0x209c]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 68 df ff ff               	fld dword ptr [eax - 0x2098]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 6c df ff ff               	fld dword ptr [eax - 0x2094]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 9a 1b 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 70 df ff ff               	fld qword ptr [eax - 0x2090]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 70 df ff ff               	fld qword ptr [eax - 0x2090]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 78 df ff ff               	fld qword ptr [eax - 0x2088]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 3d 1b 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 70 df ff ff               	fld qword ptr [eax - 0x2090]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 70 df ff ff               	fld qword ptr [eax - 0x2090]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 78 df ff ff               	fld qword ptr [eax - 0x2088]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 e0 1a 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 80 df ff ff               	fld qword ptr [eax - 0x2080]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 88 df ff ff               	fld qword ptr [eax - 0x2078]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 90 df ff ff               	fld qword ptr [eax - 0x2070]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 83 1a 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 98 df ff ff               	fld qword ptr [eax - 0x2068]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 a0 df ff ff               	fld qword ptr [eax - 0x2060]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 a8 df ff ff               	fld qword ptr [eax - 0x2058]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 f3 19 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 b0 df ff ff               	fld dword ptr [eax - 0x2050]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 b4 df ff ff               	fld dword ptr [eax - 0x204c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 8f 19 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 80 00 00 00            	mov dword ptr [eax + edx*4 + 0x80], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 1e 19 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 80 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0x80]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 db 18 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 a0 de ff ff               	lea eax, [ebx - 0x2160]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 c4 de ff ff               	lea eax, [ebx - 0x213c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: packed_printf at 0x8049626 -- 0x8049654
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   53                              	push ebx
0x804962a:   83 ec 04                        	sub esp, 4
0x804962d:   e8 d3 17 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x8049632:   05 ce 39 00 00                  	add eax, 0x39ce
0x8049637:   83 ec 08                        	sub esp, 8
0x804963a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804963d:   8d 90 e8 de ff ff               	lea edx, [eax - 0x2118]
0x8049643:   52                              	push edx
0x8049644:   89 c3                           	mov ebx, eax
0x8049646:   e8 c5 ec ff ff                  	call 0x8048310 <printf>
0x804964b:   83 c4 10                        	add esp, 0x10
0x804964e:   90                              	nop 
0x804964f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049652:   c9                              	leave 
0x8049653:   c3                              	ret 
; function: set_var at 0x8049654 -- 0x804978d
0x8049654:   55                              	push ebp
0x8049655:   89 e5                           	mov ebp, esp
0x8049657:   57                              	push edi
0x8049658:   56                              	push esi
0x8049659:   53                              	push ebx
0x804965a:   83 ec 3c                        	sub esp, 0x3c
0x804965d:   e8 a7 17 00 00                  	call 0x804ae09 <__x86.get_pc_thunk.dx>
0x8049662:   81 c2 9e 39 00 00               	add edx, 0x399e
0x8049668:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804966b:   8b 4d 1c                        	mov ecx, dword ptr [ebp + 0x1c]
0x804966e:   8b 5d 20                        	mov ebx, dword ptr [ebp + 0x20]
0x8049671:   8b 75 24                        	mov esi, dword ptr [ebp + 0x24]
0x8049674:   89 75 c8                        	mov dword ptr [ebp - 0x38], esi
0x8049677:   8b 7d 30                        	mov edi, dword ptr [ebp + 0x30]
0x804967a:   89 7d c4                        	mov dword ptr [ebp - 0x3c], edi
0x804967d:   8b 75 34                        	mov esi, dword ptr [ebp + 0x34]
0x8049680:   89 75 c0                        	mov dword ptr [ebp - 0x40], esi
0x8049683:   8b 7d 3c                        	mov edi, dword ptr [ebp + 0x3c]
0x8049686:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x8049689:   8b 75 40                        	mov esi, dword ptr [ebp + 0x40]
0x804968c:   89 75 b8                        	mov dword ptr [ebp - 0x48], esi
0x804968f:   8b 7d 44                        	mov edi, dword ptr [ebp + 0x44]
0x8049692:   8b 75 48                        	mov esi, dword ptr [ebp + 0x48]
0x8049695:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x8049699:   89 c8                           	mov eax, ecx
0x804969b:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x804969e:   89 d8                           	mov eax, ebx
0x80496a0:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x80496a4:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x80496a8:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x80496ac:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80496b0:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x80496b4:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x80496b8:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496bb:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x80496bf:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496c3:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x80496c7:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496cb:   89 f8                           	mov eax, edi
0x80496cd:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496d0:   89 f0                           	mov eax, esi
0x80496d2:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496d6:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x80496da:   66 89 82 24 00 00 00            	mov word ptr [edx + 0x24], ax
0x80496e1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80496e4:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x80496ea:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x80496ed:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x80496f3:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x80496f6:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x80496fc:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x80496ff:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x8049705:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x8049709:   88 82 38 00 00 00               	mov byte ptr [edx + 0x38], al
0x804970f:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049713:   66 89 82 3a 00 00 00            	mov word ptr [edx + 0x3a], ax
0x804971a:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804971e:   66 89 82 3c 00 00 00            	mov word ptr [edx + 0x3c], ax
0x8049725:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x8049728:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x804972e:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x8049731:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x8049737:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x804973b:   66 89 82 48 00 00 00            	mov word ptr [edx + 0x48], ax
0x8049742:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x8049746:   88 82 4a 00 00 00               	mov byte ptr [edx + 0x4a], al
0x804974c:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x804974f:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x8049755:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x8049759:   66 89 82 84 04 00 00            	mov word ptr [edx + 0x484], ax
0x8049760:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x8049764:   66 89 82 50 00 00 00            	mov word ptr [edx + 0x50], ax
0x804976b:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x804976f:   88 82 52 00 00 00               	mov byte ptr [edx + 0x52], al
0x8049775:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x8049779:   66 89 82 54 00 00 00            	mov word ptr [edx + 0x54], ax
0x8049780:   b8 00 00 00 00                  	mov eax, 0
0x8049785:   83 c4 3c                        	add esp, 0x3c
0x8049788:   5b                              	pop ebx
0x8049789:   5e                              	pop esi
0x804978a:   5f                              	pop edi
0x804978b:   5d                              	pop ebp
0x804978c:   c3                              	ret 
; function: func_1 at 0x804978d -- 0x804ab7b
0x804978d:   55                              	push ebp
0x804978e:   89 e5                           	mov ebp, esp
0x8049790:   57                              	push edi
0x8049791:   56                              	push esi
0x8049792:   53                              	push ebx
0x8049793:   81 ec 70 01 00 00               	sub esp, 0x170
0x8049799:   e8 67 16 00 00                  	call 0x804ae05 <__x86.get_pc_thunk.ax>
0x804979e:   05 62 38 00 00                  	add eax, 0x3862
0x80497a3:   66 c7 45 f2 ff ff               	mov word ptr [ebp - 0xe], 0xffff
0x80497a9:   c7 45 ec bc df f0 d1            	mov dword ptr [ebp - 0x14], 0xd1f0dfbc
0x80497b0:   c7 45 e8 5d f3 f4 dd            	mov dword ptr [ebp - 0x18], 0xddf4f35d
0x80497b7:   c7 45 e4 f8 ff ff ff            	mov dword ptr [ebp - 0x1c], 0xfffffff8
0x80497be:   c7 45 e0 ff ff ff ff            	mov dword ptr [ebp - 0x20], 0xffffffff
0x80497c5:   c6 45 df 6c                     	mov byte ptr [ebp - 0x21], 0x6c
0x80497c9:   66 c7 45 dc c0 60               	mov word ptr [ebp - 0x24], 0x60c0
0x80497cf:   66 c7 45 da c5 c9               	mov word ptr [ebp - 0x26], 0xc9c5
0x80497d5:   c7 45 d4 29 c5 97 69            	mov dword ptr [ebp - 0x2c], 0x6997c529
0x80497dc:   c7 45 88 06 00 00 00            	mov dword ptr [ebp - 0x78], 6
0x80497e3:   66 c7 45 d2 7d e7               	mov word ptr [ebp - 0x2e], 0xe77d
0x80497e9:   c6 45 d1 ff                     	mov byte ptr [ebp - 0x2f], 0xff
0x80497ed:   c7 45 cc 9e d7 f8 60            	mov dword ptr [ebp - 0x34], 0x60f8d79e
0x80497f4:   66 c7 45 ca 00 00               	mov word ptr [ebp - 0x36], 0
0x80497fa:   66 c7 45 c8 03 2d               	mov word ptr [ebp - 0x38], 0x2d03
0x8049800:   c6 45 c7 f8                     	mov byte ptr [ebp - 0x39], 0xf8
0x8049804:   66 c7 45 c4 06 00               	mov word ptr [ebp - 0x3c], 6
0x804980a:   66 c7 45 c2 00 00               	mov word ptr [ebp - 0x3e], 0
0x8049810:   c6 45 c1 00                     	mov byte ptr [ebp - 0x3f], 0
0x8049814:   c7 45 bc 88 a4 09 92            	mov dword ptr [ebp - 0x44], 0x9209a488
0x804981b:   c7 45 b8 ff ff ff ff            	mov dword ptr [ebp - 0x48], 0xffffffff
0x8049822:   c7 45 84 cf 06 71 17            	mov dword ptr [ebp - 0x7c], 0x177106cf
0x8049829:   c7 45 80 ff ff ff ff            	mov dword ptr [ebp - 0x80], 0xffffffff
0x8049830:   c7 85 7c ff ff ff 0a e0 a6 a1   	mov dword ptr [ebp - 0x84], 0xa1a6e00a
0x804983a:   c7 85 78 ff ff ff 29 6f 16 04   	mov dword ptr [ebp - 0x88], 0x4166f29
0x8049844:   c6 45 b7 ff                     	mov byte ptr [ebp - 0x49], 0xff
0x8049848:   66 c7 45 b4 bc 1f               	mov word ptr [ebp - 0x4c], 0x1fbc
0x804984e:   c6 45 b3 fd                     	mov byte ptr [ebp - 0x4d], 0xfd
0x8049852:   66 c7 85 76 ff ff ff 01 00      	mov word ptr [ebp - 0x8a], 1
0x804985b:   66 c7 45 b0 ff ff               	mov word ptr [ebp - 0x50], 0xffff
0x8049861:   c7 45 ac ff ff ff ff            	mov dword ptr [ebp - 0x54], 0xffffffff
0x8049868:   c7 85 70 ff ff ff 43 55 ca 4c   	mov dword ptr [ebp - 0x90], 0x4cca5543
0x8049872:   66 c7 85 6e ff ff ff ff ff      	mov word ptr [ebp - 0x92], 0xffff
0x804987b:   c7 85 68 ff ff ff 5a 13 e8 0a   	mov dword ptr [ebp - 0x98], 0xae8135a
0x8049885:   c7 85 64 ff ff ff d8 b5 07 1c   	mov dword ptr [ebp - 0x9c], 0x1c07b5d8
0x804988f:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x8049894:   0f 84 84 00 00 00               	je 0x804991e <func_1+0x191>
0x804989a:   0f b7 55 c4                     	movzx edx, word ptr [ebp - 0x3c]
0x804989e:   0f b6 5d c7                     	movzx ebx, byte ptr [ebp - 0x39]
0x80498a2:   0f b7 7d c8                     	movzx edi, word ptr [ebp - 0x38]
0x80498a6:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x80498aa:   89 85 90 fe ff ff               	mov dword ptr [ebp - 0x170], eax
0x80498b0:   0f be 75 d1                     	movsx esi, byte ptr [ebp - 0x2f]
0x80498b4:   89 b5 8c fe ff ff               	mov dword ptr [ebp - 0x174], esi
0x80498ba:   0f b7 4d d2                     	movzx ecx, word ptr [ebp - 0x2e]
0x80498be:   89 8d 88 fe ff ff               	mov dword ptr [ebp - 0x178], ecx
0x80498c4:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x80498c8:   89 85 84 fe ff ff               	mov dword ptr [ebp - 0x17c], eax
0x80498ce:   0f bf 75 dc                     	movsx esi, word ptr [ebp - 0x24]
0x80498d2:   0f be 4d df                     	movsx ecx, byte ptr [ebp - 0x21]
0x80498d6:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x80498da:   52                              	push edx
0x80498db:   53                              	push ebx
0x80498dc:   57                              	push edi
0x80498dd:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x80498e3:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x80498e6:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x80498ec:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x80498f2:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x80498f5:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x80498f8:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x80498fe:   56                              	push esi
0x80498ff:   51                              	push ecx
0x8049900:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049903:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049906:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049909:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804990c:   50                              	push eax
0x804990d:   e8 42 fd ff ff                  	call 0x8049654 <set_var>
0x8049912:   83 c4 44                        	add esp, 0x44
0x8049915:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x8049919:   e9 55 12 00 00                  	jmp 0x804ab73 <func_1+0x13e6>
0x804991e:   c7 45 a8 cb 8e a0 1a            	mov dword ptr [ebp - 0x58], 0x1aa08ecb
0x8049925:   66 c7 45 c2 00 00               	mov word ptr [ebp - 0x3e], 0
0x804992b:   e9 df 00 00 00                  	jmp 0x8049a0f <func_1+0x282>
0x8049930:   c6 85 63 ff ff ff 03            	mov byte ptr [ebp - 0x9d], 3
0x8049937:   c7 85 5c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xa4], 1
0x8049941:   c6 85 5b ff ff ff 6d            	mov byte ptr [ebp - 0xa5], 0x6d
0x8049948:   c6 85 5a ff ff ff 03            	mov byte ptr [ebp - 0xa6], 3
0x804994f:   c6 45 c1 76                     	mov byte ptr [ebp - 0x3f], 0x76
0x8049953:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x8049957:   c1 e0 0c                        	shl eax, 0xc
0x804995a:   85 c0                           	test eax, eax
0x804995c:   0f 94 c0                        	sete al
0x804995f:   0f b6 d0                        	movzx edx, al
0x8049962:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049965:   0f b7 c0                        	movzx eax, ax
0x8049968:   0f af c2                        	imul eax, edx
0x804996b:   89 85 5c ff ff ff               	mov dword ptr [ebp - 0xa4], eax
0x8049971:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x8049977:   0f be d0                        	movsx edx, al
0x804997a:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804997d:   0f be c0                        	movsx eax, al
0x8049980:   0f af d0                        	imul edx, eax
0x8049983:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x8049987:   39 c2                           	cmp edx, eax
0x8049989:   0f 94 c0                        	sete al
0x804998c:   0f b6 d0                        	movzx edx, al
0x804998f:   66 0f be 85 5b ff ff ff         	movsx ax, byte ptr [ebp - 0xa5]
0x8049997:   09 d0                           	or eax, edx
0x8049999:   0f bf d0                        	movsx edx, ax
0x804999c:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x80499a0:   0f af c2                        	imul eax, edx
0x80499a3:   3d 48 86 0e 79                  	cmp eax, 0x790e8648
0x80499a8:   0f 94 c0                        	sete al
0x80499ab:   0f b6 d0                        	movzx edx, al
0x80499ae:   0f b6 85 5a ff ff ff            	movzx eax, byte ptr [ebp - 0xa6]
0x80499b5:   39 c2                           	cmp edx, eax
0x80499b7:   0f 94 c0                        	sete al
0x80499ba:   0f b6 c0                        	movzx eax, al
0x80499bd:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x80499c0:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x80499c3:   0f b7 c0                        	movzx eax, ax
0x80499c6:   c1 e0 03                        	shl eax, 3
0x80499c9:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x80499cc:   0f b6 55 c1                     	movzx edx, byte ptr [ebp - 0x3f]
0x80499d0:   c7 45 bc ef a7 00 00            	mov dword ptr [ebp - 0x44], 0xa7ef
0x80499d7:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x80499da:   89 c1                           	mov ecx, eax
0x80499dc:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x80499df:   31 c8                           	xor eax, ecx
0x80499e1:   0f b7 c0                        	movzx eax, ax
0x80499e4:   0f af c2                        	imul eax, edx
0x80499e7:   83 f8 f7                        	cmp eax, -9
0x80499ea:   77 06                           	ja 0x80499f2 <func_1+0x265>
0x80499ec:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x80499f0:   74 07                           	je 0x80499f9 <func_1+0x26c>
0x80499f2:   b8 01 00 00 00                  	mov eax, 1
0x80499f7:   eb 05                           	jmp 0x80499fe <func_1+0x271>
0x80499f9:   b8 00 00 00 00                  	mov eax, 0
0x80499fe:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049a01:   83 bd 5c ff ff ff 00            	cmp dword ptr [ebp - 0xa4], 0
0x8049a08:   75 12                           	jne 0x8049a1c <func_1+0x28f>
0x8049a0a:   66 83 45 c2 03                  	add word ptr [ebp - 0x3e], 3
0x8049a0f:   66 83 7d c2 39                  	cmp word ptr [ebp - 0x3e], 0x39
0x8049a14:   0f 85 16 ff ff ff               	jne 0x8049930 <func_1+0x1a3>
0x8049a1a:   eb 01                           	jmp 0x8049a1d <func_1+0x290>
0x8049a1c:   90                              	nop 
0x8049a1d:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x8049a24:   c6 45 c1 f4                     	mov byte ptr [ebp - 0x3f], 0xf4
0x8049a28:   e9 de 01 00 00                  	jmp 0x8049c0b <func_1+0x47e>
0x8049a2d:   c7 85 54 ff ff ff 96 90 87 ee   	mov dword ptr [ebp - 0xac], 0xee879096
0x8049a37:   c7 45 a4 58 11 15 97            	mov dword ptr [ebp - 0x5c], 0x97151158
0x8049a3e:   c7 85 50 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xb0], 0
0x8049a48:   c7 85 4c ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0xb4], 5
0x8049a52:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x8049a59:   e9 06 01 00 00                  	jmp 0x8049b64 <func_1+0x3d7>
0x8049a5e:   66 c7 85 4a ff ff ff 00 00      	mov word ptr [ebp - 0xb6], 0
0x8049a67:   c7 45 a8 00 00 00 00            	mov dword ptr [ebp - 0x58], 0
0x8049a6e:   e9 94 00 00 00                  	jmp 0x8049b07 <func_1+0x37a>
0x8049a73:   c6 85 49 ff ff ff fc            	mov byte ptr [ebp - 0xb7], 0xfc
0x8049a7a:   c7 85 44 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xbc], 9
0x8049a84:   0f be 85 49 ff ff ff            	movsx eax, byte ptr [ebp - 0xb7]
0x8049a8b:   89 85 54 ff ff ff               	mov dword ptr [ebp - 0xac], eax
0x8049a91:   0f bf 55 f2                     	movsx edx, word ptr [ebp - 0xe]
0x8049a95:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049a98:   39 c2                           	cmp edx, eax
0x8049a9a:   0f 97 c0                        	seta al
0x8049a9d:   0f b6 c0                        	movzx eax, al
0x8049aa0:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049aa3:   0f 95 c0                        	setne al
0x8049aa6:   0f b6 c0                        	movzx eax, al
0x8049aa9:   89 85 44 ff ff ff               	mov dword ptr [ebp - 0xbc], eax
0x8049aaf:   0f b7 95 4a ff ff ff            	movzx edx, word ptr [ebp - 0xb6]
0x8049ab6:   0f b7 ca                        	movzx ecx, dx
0x8049ab9:   89 c8                           	mov eax, ecx
0x8049abb:   c1 e0 04                        	shl eax, 4
0x8049abe:   01 c8                           	add eax, ecx
0x8049ac0:   c1 e8 10                        	shr eax, 0x10
0x8049ac3:   29 c2                           	sub edx, eax
0x8049ac5:   66 d1 ea                        	shr dx, 1
0x8049ac8:   01 d0                           	add eax, edx
0x8049aca:   66 c1 e8 0b                     	shr ax, 0xb
0x8049ace:   98                              	cwde 
0x8049acf:   81 7d ec e6 6c 00 00            	cmp dword ptr [ebp - 0x14], 0x6ce6
0x8049ad6:   74 07                           	je 0x8049adf <func_1+0x352>
0x8049ad8:   ba 40 00 00 00                  	mov edx, 0x40
0x8049add:   eb 05                           	jmp 0x8049ae4 <func_1+0x357>
0x8049adf:   ba 00 00 00 00                  	mov edx, 0
0x8049ae4:   29 d0                           	sub eax, edx
0x8049ae6:   0d ff ff 00 00                  	or eax, 0xffff
0x8049aeb:   3d d8 1d d2 2a                  	cmp eax, 0x2ad21dd8
0x8049af0:   0f 96 c0                        	setbe al
0x8049af3:   0f b6 c0                        	movzx eax, al
0x8049af6:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049af9:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x8049afd:   75 14                           	jne 0x8049b13 <func_1+0x386>
0x8049aff:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x8049b03:   83 6d a8 01                     	sub dword ptr [ebp - 0x58], 1
0x8049b07:   83 7d a8 f1                     	cmp dword ptr [ebp - 0x58], -0xf
0x8049b0b:   0f 84 62 ff ff ff               	je 0x8049a73 <func_1+0x2e6>
0x8049b11:   eb 01                           	jmp 0x8049b14 <func_1+0x387>
0x8049b13:   90                              	nop 
0x8049b14:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x8049b18:   75 56                           	jne 0x8049b70 <func_1+0x3e3>
0x8049b1a:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x8049b21:   eb 37                           	jmp 0x8049b5a <func_1+0x3cd>
0x8049b23:   c7 85 40 ff ff ff 9e 2c 0a 17   	mov dword ptr [ebp - 0xc0], 0x170a2c9e
0x8049b2d:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049b30:   89 c2                           	mov edx, eax
0x8049b32:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049b36:   01 d0                           	add eax, edx
0x8049b38:   0f b7 d0                        	movzx edx, ax
0x8049b3b:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x8049b41:   0f b7 c0                        	movzx eax, ax
0x8049b44:   0f af d0                        	imul edx, eax
0x8049b47:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x8049b4b:   39 c2                           	cmp edx, eax
0x8049b4d:   0f 95 c0                        	setne al
0x8049b50:   0f b6 c0                        	movzx eax, al
0x8049b53:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049b56:   83 45 ec 07                     	add dword ptr [ebp - 0x14], 7
0x8049b5a:   83 7d ec 15                     	cmp dword ptr [ebp - 0x14], 0x15
0x8049b5e:   75 c3                           	jne 0x8049b23 <func_1+0x396>
0x8049b60:   83 6d b8 01                     	sub dword ptr [ebp - 0x48], 1
0x8049b64:   83 7d b8 f7                     	cmp dword ptr [ebp - 0x48], -9
0x8049b68:   0f 8d f0 fe ff ff               	jge 0x8049a5e <func_1+0x2d1>
0x8049b6e:   eb 01                           	jmp 0x8049b71 <func_1+0x3e4>
0x8049b70:   90                              	nop 
0x8049b71:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x8049b76:   0f 85 9b 00 00 00               	jne 0x8049c17 <func_1+0x48a>
0x8049b7c:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x8049b81:   74 2e                           	je 0x8049bb1 <func_1+0x424>
0x8049b83:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x8049b89:   0f be c0                        	movsx eax, al
0x8049b8c:   f7 d8                           	neg eax
0x8049b8e:   89 c2                           	mov edx, eax
0x8049b90:   81 7d ec ff ff 00 00            	cmp dword ptr [ebp - 0x14], 0xffff
0x8049b97:   0f 95 c0                        	setne al
0x8049b9a:   0f b6 c0                        	movzx eax, al
0x8049b9d:   39 c2                           	cmp edx, eax
0x8049b9f:   0f 94 c0                        	sete al
0x8049ba2:   0f b6 c0                        	movzx eax, al
0x8049ba5:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049ba8:   75 07                           	jne 0x8049bb1 <func_1+0x424>
0x8049baa:   b8 01 00 00 00                  	mov eax, 1
0x8049baf:   eb 05                           	jmp 0x8049bb6 <func_1+0x429>
0x8049bb1:   b8 00 00 00 00                  	mov eax, 0
0x8049bb6:   09 45 a4                        	or dword ptr [ebp - 0x5c], eax
0x8049bb9:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049bbc:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x8049bc0:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x8049bc4:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049bc7:   b8 01 00 00 00                  	mov eax, 1
0x8049bcc:   0f b6 d0                        	movzx edx, al
0x8049bcf:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049bd2:   0f b6 c0                        	movzx eax, al
0x8049bd5:   01 d0                           	add eax, edx
0x8049bd7:   33 85 50 ff ff ff               	xor eax, dword ptr [ebp - 0xb0]
0x8049bdd:   89 c2                           	mov edx, eax
0x8049bdf:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x8049be5:   31 d0                           	xor eax, edx
0x8049be7:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x8049bed:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x8049bf3:   31 45 e4                        	xor dword ptr [ebp - 0x1c], eax
0x8049bf6:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049bf9:   35 5f d1 02 e7                  	xor eax, 0xe702d15f
0x8049bfe:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049c01:   0f b6 45 c1                     	movzx eax, byte ptr [ebp - 0x3f]
0x8049c05:   83 c0 01                        	add eax, 1
0x8049c08:   88 45 c1                        	mov byte ptr [ebp - 0x3f], al
0x8049c0b:   80 7d c1 1a                     	cmp byte ptr [ebp - 0x3f], 0x1a
0x8049c0f:   0f 84 18 fe ff ff               	je 0x8049a2d <func_1+0x2a0>
0x8049c15:   eb 01                           	jmp 0x8049c18 <func_1+0x48b>
0x8049c17:   90                              	nop 
0x8049c18:   c7 45 ec c1 ec de 77            	mov dword ptr [ebp - 0x14], 0x77deecc1
0x8049c1f:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049c22:   31 45 e0                        	xor dword ptr [ebp - 0x20], eax
0x8049c25:   81 7d e0 a4 00 00 00            	cmp dword ptr [ebp - 0x20], 0xa4
0x8049c2c:   0f 96 c2                        	setbe dl
0x8049c2f:   0f b6 45 c1                     	movzx eax, byte ptr [ebp - 0x3f]
0x8049c33:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049c36:   0f 95 c0                        	setne al
0x8049c39:   21 d0                           	and eax, edx
0x8049c3b:   0f b6 c0                        	movzx eax, al
0x8049c3e:   39 45 bc                        	cmp dword ptr [ebp - 0x44], eax
0x8049c41:   0f 9d c0                        	setge al
0x8049c44:   0f b6 c0                        	movzx eax, al
0x8049c47:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049c4a:   0f 9c c0                        	setl al
0x8049c4d:   0f b6 c0                        	movzx eax, al
0x8049c50:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049c53:   8b 4d 84                        	mov ecx, dword ptr [ebp - 0x7c]
0x8049c56:   ba 91 9e fc 8a                  	mov edx, 0x8afc9e91
0x8049c5b:   89 c8                           	mov eax, ecx
0x8049c5d:   f7 ea                           	imul edx
0x8049c5f:   8d 04 0a                        	lea eax, [edx + ecx]
0x8049c62:   c1 f8 1e                        	sar eax, 0x1e
0x8049c65:   c1 f9 1f                        	sar ecx, 0x1f
0x8049c68:   89 ca                           	mov edx, ecx
0x8049c6a:   29 c2                           	sub edx, eax
0x8049c6c:   89 d0                           	mov eax, edx
0x8049c6e:   0f b7 c0                        	movzx eax, ax
0x8049c71:   c1 e0 06                        	shl eax, 6
0x8049c74:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x8049c77:   74 0e                           	je 0x8049c87 <func_1+0x4fa>
0x8049c79:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049c7c:   0f b7 7d c2                     	movzx edi, word ptr [ebp - 0x3e]
0x8049c80:   99                              	cdq 
0x8049c81:   f7 ff                           	idiv edi
0x8049c83:   85 c0                           	test eax, eax
0x8049c85:   74 07                           	je 0x8049c8e <func_1+0x501>
0x8049c87:   b8 01 00 00 00                  	mov eax, 1
0x8049c8c:   eb 05                           	jmp 0x8049c93 <func_1+0x506>
0x8049c8e:   b8 00 00 00 00                  	mov eax, 0
0x8049c93:   66 09 45 f2                     	or word ptr [ebp - 0xe], ax
0x8049c97:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049c9a:   ba 00 00 00 00                  	mov edx, 0
0x8049c9f:   f7 75 e0                        	div dword ptr [ebp - 0x20]
0x8049ca2:   85 c0                           	test eax, eax
0x8049ca4:   0f 84 f7 00 00 00               	je 0x8049da1 <func_1+0x614>
0x8049caa:   c6 85 a7 fe ff ff 07            	mov byte ptr [ebp - 0x159], 7
0x8049cb1:   c7 85 a0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x160], 1
0x8049cbb:   c7 85 9c fe ff ff 7f ee 5d f1   	mov dword ptr [ebp - 0x164], 0xf15dee7f
0x8049cc5:   c7 85 98 fe ff ff 91 64 93 cb   	mov dword ptr [ebp - 0x168], 0xcb936491
0x8049ccf:   0f be 8d a7 fe ff ff            	movsx ecx, byte ptr [ebp - 0x159]
0x8049cd6:   80 bd a7 fe ff ff 00            	cmp byte ptr [ebp - 0x159], 0
0x8049cdd:   75 07                           	jne 0x8049ce6 <func_1+0x559>
0x8049cdf:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x8049ce4:   74 07                           	je 0x8049ced <func_1+0x560>
0x8049ce6:   b8 01 00 00 00                  	mov eax, 1
0x8049ceb:   eb 05                           	jmp 0x8049cf2 <func_1+0x565>
0x8049ced:   b8 00 00 00 00                  	mov eax, 0
0x8049cf2:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x8049cf6:   99                              	cdq 
0x8049cf7:   f7 ff                           	idiv edi
0x8049cf9:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x8049cfd:   ba 00 00 00 00                  	mov edx, 0
0x8049d02:   f7 f7                           	div edi
0x8049d04:   89 c3                           	mov ebx, eax
0x8049d06:   89 c8                           	mov eax, ecx
0x8049d08:   99                              	cdq 
0x8049d09:   f7 fb                           	idiv ebx
0x8049d0b:   89 d0                           	mov eax, edx
0x8049d0d:   98                              	cwde 
0x8049d0e:   0f be bd a7 fe ff ff            	movsx edi, byte ptr [ebp - 0x159]
0x8049d15:   99                              	cdq 
0x8049d16:   f7 ff                           	idiv edi
0x8049d18:   ba 00 00 00 00                  	mov edx, 0
0x8049d1d:   f7 75 e4                        	div dword ptr [ebp - 0x1c]
0x8049d20:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049d23:   29 d0                           	sub eax, edx
0x8049d25:   89 c2                           	mov edx, eax
0x8049d27:   0f be 85 a7 fe ff ff            	movsx eax, byte ptr [ebp - 0x159]
0x8049d2e:   39 c2                           	cmp edx, eax
0x8049d30:   81 4d b8 34 16 00 00            	or dword ptr [ebp - 0x48], 0x1634
0x8049d37:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049d3a:   98                              	cwde 
0x8049d3b:   c1 e0 07                        	shl eax, 7
0x8049d3e:   89 85 9c fe ff ff               	mov dword ptr [ebp - 0x164], eax
0x8049d44:   8b 85 9c fe ff ff               	mov eax, dword ptr [ebp - 0x164]
0x8049d4a:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x8049d4d:   66 0f be 45 df                  	movsx ax, byte ptr [ebp - 0x21]
0x8049d52:   66 c1 e8 0a                     	shr ax, 0xa
0x8049d56:   66 83 f8 01                     	cmp ax, 1
0x8049d5a:   0f 96 c0                        	setbe al
0x8049d5d:   0f b6 c0                        	movzx eax, al
0x8049d60:   89 85 98 fe ff ff               	mov dword ptr [ebp - 0x168], eax
0x8049d66:   8b 85 98 fe ff ff               	mov eax, dword ptr [ebp - 0x168]
0x8049d6c:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049d6f:   c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x8049d76:   eb 1e                           	jmp 0x8049d96 <func_1+0x609>
0x8049d78:   c7 85 94 fe ff ff ef 93 1a 90   	mov dword ptr [ebp - 0x16c], 0x901a93ef
0x8049d82:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x8049d86:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049d89:   8b 85 94 fe ff ff               	mov eax, dword ptr [ebp - 0x16c]
0x8049d8f:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049d92:   83 45 e8 01                     	add dword ptr [ebp - 0x18], 1
0x8049d96:   83 7d e8 17                     	cmp dword ptr [ebp - 0x18], 0x17
0x8049d9a:   76 dc                           	jbe 0x8049d78 <func_1+0x5eb>
0x8049d9c:   e9 4c 0d 00 00                  	jmp 0x804aaed <func_1+0x1360>
0x8049da1:   c7 85 3c ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0xc4], 6
0x8049dab:   c7 45 a0 01 00 00 00            	mov dword ptr [ebp - 0x60], 1
0x8049db2:   c7 85 38 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xc8], 0xffffffff
0x8049dbc:   c7 85 34 ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0xcc], 8
0x8049dc6:   c7 85 30 ff ff ff e6 ff 5a eb   	mov dword ptr [ebp - 0xd0], 0xeb5affe6
0x8049dd0:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049dd3:   89 c2                           	mov edx, eax
0x8049dd5:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049dd8:   09 d0                           	or eax, edx
0x8049dda:   66 98                           	cbw 
0x8049ddc:   6b c0 b6                        	imul eax, eax, -0x4a
0x8049ddf:   66 c1 f8 0d                     	sar ax, 0xd
0x8049de3:   98                              	cwde 
0x8049de4:   31 45 a0                        	xor dword ptr [ebp - 0x60], eax
0x8049de7:   66 c7 45 9e fa ff               	mov word ptr [ebp - 0x62], 0xfffa
0x8049ded:   c6 85 2f ff ff ff 01            	mov byte ptr [ebp - 0xd1], 1
0x8049df4:   c6 85 2e ff ff ff fd            	mov byte ptr [ebp - 0xd2], 0xfd
0x8049dfb:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x8049e02:   eb 0f                           	jmp 0x8049e13 <func_1+0x686>
0x8049e04:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x8049e08:   83 e8 01                        	sub eax, 1
0x8049e0b:   66 89 45 9e                     	mov word ptr [ebp - 0x62], ax
0x8049e0f:   83 6d b8 01                     	sub dword ptr [ebp - 0x48], 1
0x8049e13:   83 7d b8 fd                     	cmp dword ptr [ebp - 0x48], -3
0x8049e17:   75 eb                           	jne 0x8049e04 <func_1+0x677>
0x8049e19:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x8049e1d:   39 85 3c ff ff ff               	cmp dword ptr [ebp - 0xc4], eax
0x8049e23:   0f 93 c0                        	setae al
0x8049e26:   0f b6 d0                        	movzx edx, al
0x8049e29:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x8049e2d:   0f b6 c0                        	movzx eax, al
0x8049e30:   89 c1                           	mov ecx, eax
0x8049e32:   d3 e2                           	shl edx, cl
0x8049e34:   89 d0                           	mov eax, edx
0x8049e36:   0f b6 d0                        	movzx edx, al
0x8049e39:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049e3c:   0f b6 c0                        	movzx eax, al
0x8049e3f:   01 d0                           	add eax, edx
0x8049e41:   83 f8 4c                        	cmp eax, 0x4c
0x8049e44:   7f 07                           	jg 0x8049e4d <func_1+0x6c0>
0x8049e46:   b8 00 00 00 00                  	mov eax, 0
0x8049e4b:   eb 05                           	jmp 0x8049e52 <func_1+0x6c5>
0x8049e4d:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x8049e52:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049e55:   66 81 65 dc 18 a6               	and word ptr [ebp - 0x24], 0xa618
0x8049e5b:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049e5e:   0f be d0                        	movsx edx, al
0x8049e61:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049e64:   0f be c0                        	movsx eax, al
0x8049e67:   0f af c2                        	imul eax, edx
0x8049e6a:   85 c0                           	test eax, eax
0x8049e6c:   0f 84 87 00 00 00               	je 0x8049ef9 <func_1+0x76c>
0x8049e72:   0f b7 55 c4                     	movzx edx, word ptr [ebp - 0x3c]
0x8049e76:   0f b6 5d c7                     	movzx ebx, byte ptr [ebp - 0x39]
0x8049e7a:   0f b7 7d c8                     	movzx edi, word ptr [ebp - 0x38]
0x8049e7e:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x8049e82:   89 85 90 fe ff ff               	mov dword ptr [ebp - 0x170], eax
0x8049e88:   0f be 75 d1                     	movsx esi, byte ptr [ebp - 0x2f]
0x8049e8c:   89 b5 8c fe ff ff               	mov dword ptr [ebp - 0x174], esi
0x8049e92:   0f b7 4d d2                     	movzx ecx, word ptr [ebp - 0x2e]
0x8049e96:   89 8d 88 fe ff ff               	mov dword ptr [ebp - 0x178], ecx
0x8049e9c:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x8049ea0:   89 85 84 fe ff ff               	mov dword ptr [ebp - 0x17c], eax
0x8049ea6:   0f bf 75 dc                     	movsx esi, word ptr [ebp - 0x24]
0x8049eaa:   0f be 4d df                     	movsx ecx, byte ptr [ebp - 0x21]
0x8049eae:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x8049eb2:   52                              	push edx
0x8049eb3:   53                              	push ebx
0x8049eb4:   57                              	push edi
0x8049eb5:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x8049ebb:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049ebe:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x8049ec4:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x8049eca:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049ecd:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049ed0:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x8049ed6:   56                              	push esi
0x8049ed7:   51                              	push ecx
0x8049ed8:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049edb:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049ede:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049ee1:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049ee4:   50                              	push eax
0x8049ee5:   e8 6a f7 ff ff                  	call 0x8049654 <set_var>
0x8049eea:   83 c4 44                        	add esp, 0x44
0x8049eed:   0f b6 85 2e ff ff ff            	movzx eax, byte ptr [ebp - 0xd2]
0x8049ef4:   e9 7a 0c 00 00                  	jmp 0x804ab73 <func_1+0x13e6>
0x8049ef9:   c6 85 2d ff ff ff fb            	mov byte ptr [ebp - 0xd3], 0xfb
0x8049f00:   0f bf 55 dc                     	movsx edx, word ptr [ebp - 0x24]
0x8049f04:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049f07:   0f b6 c8                        	movzx ecx, al
0x8049f0a:   80 bd 2d ff ff ff 00            	cmp byte ptr [ebp - 0xd3], 0
0x8049f11:   0f 94 c0                        	sete al
0x8049f14:   0f b6 d8                        	movzx ebx, al
0x8049f17:   0f be 45 df                     	movsx eax, byte ptr [ebp - 0x21]
0x8049f1b:   39 c3                           	cmp ebx, eax
0x8049f1d:   0f 9f c0                        	setg al
0x8049f20:   0f b6 d8                        	movzx ebx, al
0x8049f23:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049f27:   01 d8                           	add eax, ebx
0x8049f29:   0f bf d8                        	movsx ebx, ax
0x8049f2c:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x8049f32:   98                              	cwde 
0x8049f33:   0f af d8                        	imul ebx, eax
0x8049f36:   0f bf 45 dc                     	movsx eax, word ptr [ebp - 0x24]
0x8049f3a:   39 c3                           	cmp ebx, eax
0x8049f3c:   0f 9e c0                        	setle al
0x8049f3f:   0f b6 c0                        	movzx eax, al
0x8049f42:   0f af c1                        	imul eax, ecx
0x8049f45:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049f48:   0f 94 c0                        	sete al
0x8049f4b:   0f b6 c0                        	movzx eax, al
0x8049f4e:   39 45 a0                        	cmp dword ptr [ebp - 0x60], eax
0x8049f51:   7f 07                           	jg 0x8049f5a <func_1+0x7cd>
0x8049f53:   b8 00 80 00 00                  	mov eax, 0x8000
0x8049f58:   eb 05                           	jmp 0x8049f5f <func_1+0x7d2>
0x8049f5a:   b8 00 00 00 00                  	mov eax, 0
0x8049f5f:   0b 45 bc                        	or eax, dword ptr [ebp - 0x44]
0x8049f62:   21 d0                           	and eax, edx
0x8049f64:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049f67:   c7 45 bc 16 00 00 00            	mov dword ptr [ebp - 0x44], 0x16
0x8049f6e:   e9 6a 0b 00 00                  	jmp 0x804aadd <func_1+0x1350>
0x8049f73:   c7 85 28 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xd8], 1
0x8049f7d:   c7 85 24 ff ff ff a4 7f 14 31   	mov dword ptr [ebp - 0xdc], 0x31147fa4
0x8049f87:   66 c7 85 22 ff ff ff fe ff      	mov word ptr [ebp - 0xde], 0xfffe
0x8049f90:   c7 85 1c ff ff ff f5 f8 dc 8c   	mov dword ptr [ebp - 0xe4], 0x8cdcf8f5
0x8049f9a:   c6 85 1b ff ff ff 00            	mov byte ptr [ebp - 0xe5], 0
0x8049fa1:   c7 85 14 ff ff ff 74 4e 6b 03   	mov dword ptr [ebp - 0xec], 0x36b4e74
0x8049fab:   66 c7 85 12 ff ff ff 00 00      	mov word ptr [ebp - 0xee], 0
0x8049fb4:   66 c7 85 10 ff ff ff 04 00      	mov word ptr [ebp - 0xf0], 4
0x8049fbd:   0f bf 55 dc                     	movsx edx, word ptr [ebp - 0x24]
0x8049fc1:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x8049fc7:   89 c3                           	mov ebx, eax
0x8049fc9:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049fcc:   89 c1                           	mov ecx, eax
0x8049fce:   0f b6 c3                        	movzx eax, bl
0x8049fd1:   f6 f1                           	div cl
0x8049fd3:   0f b6 c0                        	movzx eax, al
0x8049fd6:   89 85 24 ff ff ff               	mov dword ptr [ebp - 0xdc], eax
0x8049fdc:   39 95 24 ff ff ff               	cmp dword ptr [ebp - 0xdc], edx
0x8049fe2:   0f 9f c0                        	setg al
0x8049fe5:   0f b6 c0                        	movzx eax, al
0x8049fe8:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049feb:   76 07                           	jbe 0x8049ff4 <func_1+0x867>
0x8049fed:   83 bd 28 ff ff ff 00            	cmp dword ptr [ebp - 0xd8], 0
0x8049ff4:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x8049ffa:   0f be c0                        	movsx eax, al
0x8049ffd:   83 c0 01                        	add eax, 1
0x804a000:   39 45 a0                        	cmp dword ptr [ebp - 0x60], eax
0x804a003:   0f 9e c0                        	setle al
0x804a006:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x804a009:   0f b7 55 f2                     	movzx edx, word ptr [ebp - 0xe]
0x804a00d:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804a011:   21 d0                           	and eax, edx
0x804a013:   66 89 45 da                     	mov word ptr [ebp - 0x26], ax
0x804a017:   83 7d a0 01                     	cmp dword ptr [ebp - 0x60], 1
0x804a01b:   0f 95 c0                        	setne al
0x804a01e:   0f b6 d0                        	movzx edx, al
0x804a021:   0f b7 85 22 ff ff ff            	movzx eax, word ptr [ebp - 0xde]
0x804a028:   0f be c0                        	movsx eax, al
0x804a02b:   01 d0                           	add eax, edx
0x804a02d:   85 c0                           	test eax, eax
0x804a02f:   0f 84 c0 00 00 00               	je 0x804a0f5 <func_1+0x968>
0x804a035:   66 c7 85 ea fe ff ff de 8b      	mov word ptr [ebp - 0x116], 0x8bde
0x804a03e:   c7 85 e4 fe ff ff a1 b0 28 32   	mov dword ptr [ebp - 0x11c], 0x3228b0a1
0x804a048:   c7 85 e0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x120], 1
0x804a052:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x804a056:   83 e8 01                        	sub eax, 1
0x804a059:   66 89 45 b4                     	mov word ptr [ebp - 0x4c], ax
0x804a05d:   0f b7 85 ea fe ff ff            	movzx eax, word ptr [ebp - 0x116]
0x804a064:   66 c1 f8 09                     	sar ax, 9
0x804a068:   0f bf d0                        	movsx edx, ax
0x804a06b:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a06e:   0f b6 c8                        	movzx ecx, al
0x804a071:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a074:   0f b6 c0                        	movzx eax, al
0x804a077:   0f af c1                        	imul eax, ecx
0x804a07a:   31 d0                           	xor eax, edx
0x804a07c:   39 85 24 ff ff ff               	cmp dword ptr [ebp - 0xdc], eax
0x804a082:   0f 94 c0                        	sete al
0x804a085:   0f b6 c0                        	movzx eax, al
0x804a088:   09 45 d4                        	or dword ptr [ebp - 0x2c], eax
0x804a08b:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a08e:   3b 85 e4 fe ff ff               	cmp eax, dword ptr [ebp - 0x11c]
0x804a094:   7c 0d                           	jl 0x804a0a3 <func_1+0x916>
0x804a096:   83 7d 80 00                     	cmp dword ptr [ebp - 0x80], 0
0x804a09a:   74 07                           	je 0x804a0a3 <func_1+0x916>
0x804a09c:   b8 01 00 00 00                  	mov eax, 1
0x804a0a1:   eb 05                           	jmp 0x804a0a8 <func_1+0x91b>
0x804a0a3:   b8 00 00 00 00                  	mov eax, 0
0x804a0a8:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a0ab:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804a0af:   8d 50 01                        	lea edx, [eax + 1]
0x804a0b2:   66 89 55 da                     	mov word ptr [ebp - 0x26], dx
0x804a0b6:   0f b7 c0                        	movzx eax, ax
0x804a0b9:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a0bc:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a0c2:   83 c8 2c                        	or eax, 0x2c
0x804a0c5:   30 45 b3                        	xor byte ptr [ebp - 0x4d], al
0x804a0c8:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a0cc:   89 c2                           	mov edx, eax
0x804a0ce:   0f b6 45 b3                     	movzx eax, byte ptr [ebp - 0x4d]
0x804a0d2:   0f b6 c0                        	movzx eax, al
0x804a0d5:   f6 f2                           	div dl
0x804a0d7:   0f b6 c4                        	movzx eax, ah
0x804a0da:   0f b6 c0                        	movzx eax, al
0x804a0dd:   33 85 e0 fe ff ff               	xor eax, dword ptr [ebp - 0x120]
0x804a0e3:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a0e6:   c7 85 e4 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x11c], 1
0x804a0f0:   e9 fa 01 00 00                  	jmp 0x804a2ef <func_1+0xb62>
0x804a0f5:   66 c7 85 0e ff ff ff 59 33      	mov word ptr [ebp - 0xf2], 0x3359
0x804a0fe:   c7 85 08 ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0xf8], 5
0x804a108:   c7 85 04 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xfc], 0
0x804a112:   c7 85 00 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x100], 0
0x804a11c:   c6 85 ff fe ff ff 15            	mov byte ptr [ebp - 0x101], 0x15
0x804a123:   c7 85 f8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x108], 0xffffffff
0x804a12d:   0f be 95 ff fe ff ff            	movsx edx, byte ptr [ebp - 0x101]
0x804a134:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a137:   0f be c0                        	movsx eax, al
0x804a13a:   89 c1                           	mov ecx, eax
0x804a13c:   d3 e2                           	shl edx, cl
0x804a13e:   89 d1                           	mov ecx, edx
0x804a140:   66 83 bd 22 ff ff ff 00         	cmp word ptr [ebp - 0xde], 0
0x804a148:   0f 95 c0                        	setne al
0x804a14b:   0f b6 d0                        	movzx edx, al
0x804a14e:   8b 85 1c ff ff ff               	mov eax, dword ptr [ebp - 0xe4]
0x804a154:   01 d0                           	add eax, edx
0x804a156:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804a159:   0f 9f c0                        	setg al
0x804a15c:   0f b6 d0                        	movzx edx, al
0x804a15f:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x804a165:   0f b6 c0                        	movzx eax, al
0x804a168:   29 c2                           	sub edx, eax
0x804a16a:   89 d0                           	mov eax, edx
0x804a16c:   0f b7 d0                        	movzx edx, ax
0x804a16f:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a172:   0f b7 c0                        	movzx eax, ax
0x804a175:   0f af d0                        	imul edx, eax
0x804a178:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804a17c:   39 c2                           	cmp edx, eax
0x804a17e:   0f 9f c0                        	setg al
0x804a181:   0f b6 d0                        	movzx edx, al
0x804a184:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804a188:   31 c2                           	xor edx, eax
0x804a18a:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a18e:   31 c2                           	xor edx, eax
0x804a190:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x804a194:   09 d0                           	or eax, edx
0x804a196:   3d ee 2b 00 00                  	cmp eax, 0x2bee
0x804a19b:   0f 9f c0                        	setg al
0x804a19e:   0f b6 c0                        	movzx eax, al
0x804a1a1:   23 45 ec                        	and eax, dword ptr [ebp - 0x14]
0x804a1a4:   39 85 28 ff ff ff               	cmp dword ptr [ebp - 0xd8], eax
0x804a1aa:   0f 9f c0                        	setg al
0x804a1ad:   0f b6 c0                        	movzx eax, al
0x804a1b0:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a1b3:   0f 94 c0                        	sete al
0x804a1b6:   0f b6 c0                        	movzx eax, al
0x804a1b9:   39 c1                           	cmp ecx, eax
0x804a1bb:   0f 9c c0                        	setl al
0x804a1be:   0f b6 d0                        	movzx edx, al
0x804a1c1:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x804a1c7:   98                              	cwde 
0x804a1c8:   89 c1                           	mov ecx, eax
0x804a1ca:   d3 fa                           	sar edx, cl
0x804a1cc:   89 d0                           	mov eax, edx
0x804a1ce:   0f b7 d0                        	movzx edx, ax
0x804a1d1:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a1d4:   0f b7 c0                        	movzx eax, ax
0x804a1d7:   01 d0                           	add eax, edx
0x804a1d9:   89 85 f8 fe ff ff               	mov dword ptr [ebp - 0x108], eax
0x804a1df:   83 bd f8 fe ff ff 00            	cmp dword ptr [ebp - 0x108], 0
0x804a1e6:   0f 9e c0                        	setle al
0x804a1e9:   0f b6 d0                        	movzx edx, al
0x804a1ec:   0f bf 45 dc                     	movsx eax, word ptr [ebp - 0x24]
0x804a1f0:   21 c2                           	and edx, eax
0x804a1f2:   0f bf 85 0e ff ff ff            	movsx eax, word ptr [ebp - 0xf2]
0x804a1f9:   39 c2                           	cmp edx, eax
0x804a1fb:   7f 63                           	jg 0x804a260 <func_1+0xad3>
0x804a1fd:   c7 85 ec fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x114], 0
0x804a207:   80 7d df 00                     	cmp byte ptr [ebp - 0x21], 0
0x804a20b:   0f 85 d8 08 00 00               	jne 0x804aae9 <func_1+0x135c>
0x804a211:   0f be 45 df                     	movsx eax, byte ptr [ebp - 0x21]
0x804a215:   0f bf 55 dc                     	movsx edx, word ptr [ebp - 0x24]
0x804a219:   8b 4d bc                        	mov ecx, dword ptr [ebp - 0x44]
0x804a21c:   0f bf d9                        	movsx ebx, cx
0x804a21f:   8b 8d 1c ff ff ff               	mov ecx, dword ptr [ebp - 0xe4]
0x804a225:   0f bf c9                        	movsx ecx, cx
0x804a228:   0f af cb                        	imul ecx, ebx
0x804a22b:   39 4d e4                        	cmp dword ptr [ebp - 0x1c], ecx
0x804a22e:   0f 96 c1                        	setbe cl
0x804a231:   0f b6 c9                        	movzx ecx, cl
0x804a234:   f7 d9                           	neg ecx
0x804a236:   21 d1                           	and ecx, edx
0x804a238:   0f bf 95 0e ff ff ff            	movsx edx, word ptr [ebp - 0xf2]
0x804a23f:   21 ca                           	and edx, ecx
0x804a241:   39 d0                           	cmp eax, edx
0x804a243:   0f 95 c0                        	setne al
0x804a246:   0f b6 c0                        	movzx eax, al
0x804a249:   09 85 08 ff ff ff               	or dword ptr [ebp - 0xf8], eax
0x804a24f:   8b 85 08 ff ff ff               	mov eax, dword ptr [ebp - 0xf8]
0x804a255:   89 85 ec fe ff ff               	mov dword ptr [ebp - 0x114], eax
0x804a25b:   e9 8a 00 00 00                  	jmp 0x804a2ea <func_1+0xb5d>
0x804a260:   c7 85 f4 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x10c], 1
0x804a26a:   66 c7 85 f2 fe ff ff f9 ff      	mov word ptr [ebp - 0x10e], 0xfff9
0x804a273:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x804a277:   89 85 f8 fe ff ff               	mov dword ptr [ebp - 0x108], eax
0x804a27d:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a281:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x804a284:   66 0f be 45 df                  	movsx ax, byte ptr [ebp - 0x21]
0x804a289:   8b 95 04 ff ff ff               	mov edx, dword ptr [ebp - 0xfc]
0x804a28f:   21 d0                           	and eax, edx
0x804a291:   98                              	cwde 
0x804a292:   f7 d8                           	neg eax
0x804a294:   33 85 f8 fe ff ff               	xor eax, dword ptr [ebp - 0x108]
0x804a29a:   89 85 00 ff ff ff               	mov dword ptr [ebp - 0x100], eax
0x804a2a0:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x804a2a4:   74 05                           	je 0x804a2ab <func_1+0xb1e>
0x804a2a6:   e9 25 fb ff ff                  	jmp 0x8049dd0 <func_1+0x643>
0x804a2ab:   81 7d e8 d1 6c fd b2            	cmp dword ptr [ebp - 0x18], 0xb2fd6cd1
0x804a2b2:   0f 95 c0                        	setne al
0x804a2b5:   0f b6 c0                        	movzx eax, al
0x804a2b8:   39 85 f4 fe ff ff               	cmp dword ptr [ebp - 0x10c], eax
0x804a2be:   0f 9d c0                        	setge al
0x804a2c1:   0f b6 c0                        	movzx eax, al
0x804a2c4:   21 45 ec                        	and dword ptr [ebp - 0x14], eax
0x804a2c7:   0f bf 95 f2 fe ff ff            	movsx edx, word ptr [ebp - 0x10e]
0x804a2ce:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a2d1:   01 d0                           	add eax, edx
0x804a2d3:   83 f8 50                        	cmp eax, 0x50
0x804a2d6:   0f 9e c0                        	setle al
0x804a2d9:   0f b6 c0                        	movzx eax, al
0x804a2dc:   8b 7d e4                        	mov edi, dword ptr [ebp - 0x1c]
0x804a2df:   99                              	cdq 
0x804a2e0:   f7 ff                           	idiv edi
0x804a2e2:   25 70 0c 00 00                  	and eax, 0xc70
0x804a2e7:   09 45 d4                        	or dword ptr [ebp - 0x2c], eax
0x804a2ea:   66 83 6d d2 01                  	sub word ptr [ebp - 0x2e], 1
0x804a2ef:   83 bd 28 ff ff ff 00            	cmp dword ptr [ebp - 0xd8], 0
0x804a2f6:   0f 84 56 02 00 00               	je 0x804a552 <func_1+0xdc5>
0x804a2fc:   66 c7 85 c6 fe ff ff 04 00      	mov word ptr [ebp - 0x13a], 4
0x804a305:   c7 85 c0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x140], 0
0x804a30f:   c7 85 bc fe ff ff 3c ad 1f 80   	mov dword ptr [ebp - 0x144], 0x801fad3c
0x804a319:   83 bd 28 ff ff ff 00            	cmp dword ptr [ebp - 0xd8], 0
0x804a320:   74 05                           	je 0x804a327 <func_1+0xb9a>
0x804a322:   e9 f8 f8 ff ff                  	jmp 0x8049c1f <func_1+0x492>
0x804a327:   0f bf 45 dc                     	movsx eax, word ptr [ebp - 0x24]
0x804a32b:   0f b7 95 c6 fe ff ff            	movzx edx, word ptr [ebp - 0x13a]
0x804a332:   89 95 c0 fe ff ff               	mov dword ptr [ebp - 0x140], edx
0x804a338:   83 bd c0 fe ff ff 00            	cmp dword ptr [ebp - 0x140], 0
0x804a33f:   75 09                           	jne 0x804a34a <func_1+0xbbd>
0x804a341:   83 bd 38 ff ff ff 00            	cmp dword ptr [ebp - 0xc8], 0
0x804a348:   74 07                           	je 0x804a351 <func_1+0xbc4>
0x804a34a:   ba 01 00 00 00                  	mov edx, 1
0x804a34f:   eb 05                           	jmp 0x804a356 <func_1+0xbc9>
0x804a351:   ba 00 00 00 00                  	mov edx, 0
0x804a356:   0f bf da                        	movsx ebx, dx
0x804a359:   0f be 55 df                     	movsx edx, byte ptr [ebp - 0x21]
0x804a35d:   89 d1                           	mov ecx, edx
0x804a35f:   d3 e3                           	shl ebx, cl
0x804a361:   89 df                           	mov edi, ebx
0x804a363:   99                              	cdq 
0x804a364:   f7 ff                           	idiv edi
0x804a366:   3d 0b de 02 32                  	cmp eax, 0x3202de0b
0x804a36b:   0f 94 c0                        	sete al
0x804a36e:   0f b6 d0                        	movzx edx, al
0x804a371:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a375:   09 c2                           	or edx, eax
0x804a377:   0f bf 45 dc                     	movsx eax, word ptr [ebp - 0x24]
0x804a37b:   39 c2                           	cmp edx, eax
0x804a37d:   b8 00 00 00 00                  	mov eax, 0
0x804a382:   89 c2                           	mov edx, eax
0x804a384:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x804a388:   31 d0                           	xor eax, edx
0x804a38a:   66 89 45 b0                     	mov word ptr [ebp - 0x50], ax
0x804a38e:   83 bd 3c ff ff ff 00            	cmp dword ptr [ebp - 0xc4], 0
0x804a395:   0f 84 22 01 00 00               	je 0x804a4bd <func_1+0xd30>
0x804a39b:   c6 85 bb fe ff ff dc            	mov byte ptr [ebp - 0x145], 0xdc
0x804a3a2:   c7 85 b4 fe ff ff 77 69 ab 93   	mov dword ptr [ebp - 0x14c], 0x93ab6977
0x804a3ac:   66 83 6d d2 01                  	sub word ptr [ebp - 0x2e], 1
0x804a3b1:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a3b5:   ba 69 00 00 00                  	mov edx, 0x69
0x804a3ba:   0f af c2                        	imul eax, edx
0x804a3bd:   0f b6 d0                        	movzx edx, al
0x804a3c0:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a3c3:   66 c1 f8 04                     	sar ax, 4
0x804a3c7:   89 c1                           	mov ecx, eax
0x804a3c9:   0f b6 85 bb fe ff ff            	movzx eax, byte ptr [ebp - 0x145]
0x804a3d0:   31 c8                           	xor eax, ecx
0x804a3d2:   88 85 bb fe ff ff               	mov byte ptr [ebp - 0x145], al
0x804a3d8:   0f b6 85 bb fe ff ff            	movzx eax, byte ptr [ebp - 0x145]
0x804a3df:   0f af c2                        	imul eax, edx
0x804a3e2:   0b 85 38 ff ff ff               	or eax, dword ptr [ebp - 0xc8]
0x804a3e8:   33 85 14 ff ff ff               	xor eax, dword ptr [ebp - 0xec]
0x804a3ee:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a3f1:   0f b6 85 1b ff ff ff            	movzx eax, byte ptr [ebp - 0xe5]
0x804a3f8:   0f b6 8d bb fe ff ff            	movzx ecx, byte ptr [ebp - 0x145]
0x804a3ff:   0f b6 95 bb fe ff ff            	movzx edx, byte ptr [ebp - 0x145]
0x804a406:   0f af d1                        	imul edx, ecx
0x804a409:   89 d1                           	mov ecx, edx
0x804a40b:   ba 00 00 00 00                  	mov edx, 0
0x804a410:   f7 f1                           	div ecx
0x804a412:   89 d0                           	mov eax, edx
0x804a414:   c0 f8 06                        	sar al, 6
0x804a417:   0f be c0                        	movsx eax, al
0x804a41a:   25 74 09 00 00                  	and eax, 0x974
0x804a41f:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a422:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x804a429:   88 45 d1                        	mov byte ptr [ebp - 0x2f], al
0x804a42c:   83 7d ec 06                     	cmp dword ptr [ebp - 0x14], 6
0x804a430:   0f 9e c0                        	setle al
0x804a433:   0f b6 c0                        	movzx eax, al
0x804a436:   39 85 38 ff ff ff               	cmp dword ptr [ebp - 0xc8], eax
0x804a43c:   0f 94 c0                        	sete al
0x804a43f:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x804a442:   b8 01 00 00 00                  	mov eax, 1
0x804a447:   31 45 cc                        	xor dword ptr [ebp - 0x34], eax
0x804a44a:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a44d:   25 4f 3d 00 00                  	and eax, 0x3d4f
0x804a452:   39 85 b4 fe ff ff               	cmp dword ptr [ebp - 0x14c], eax
0x804a458:   74 19                           	je 0x804a473 <func_1+0xce6>
0x804a45a:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804a45e:   83 e8 01                        	sub eax, 1
0x804a461:   66 89 45 ca                     	mov word ptr [ebp - 0x36], ax
0x804a465:   83 bd 70 ff ff ff 00            	cmp dword ptr [ebp - 0x90], 0
0x804a46c:   74 59                           	je 0x804a4c7 <func_1+0xd3a>
0x804a46e:   e9 7a 06 00 00                  	jmp 0x804aaed <func_1+0x1360>
0x804a473:   c7 85 b0 fe ff ff 4c d4 85 25   	mov dword ptr [ebp - 0x150], 0x2585d44c
0x804a47d:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x804a483:   89 c3                           	mov ebx, eax
0x804a485:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a489:   89 c2                           	mov edx, eax
0x804a48b:   0f b6 85 bb fe ff ff            	movzx eax, byte ptr [ebp - 0x145]
0x804a492:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a495:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a498:   0f b7 c0                        	movzx eax, ax
0x804a49b:   be 63 2e 00 00                  	mov esi, 0x2e63
0x804a4a0:   89 c1                           	mov ecx, eax
0x804a4a2:   d3 e6                           	shl esi, cl
0x804a4a4:   89 f0                           	mov eax, esi
0x804a4a6:   21 d0                           	and eax, edx
0x804a4a8:   89 c2                           	mov edx, eax
0x804a4aa:   0f b6 c3                        	movzx eax, bl
0x804a4ad:   f6 f2                           	div dl
0x804a4af:   0f b6 c4                        	movzx eax, ah
0x804a4b2:   0f b6 c0                        	movzx eax, al
0x804a4b5:   89 85 b0 fe ff ff               	mov dword ptr [ebp - 0x150], eax
0x804a4bb:   eb 0a                           	jmp 0x804a4c7 <func_1+0xd3a>
0x804a4bd:   80 7d df 00                     	cmp byte ptr [ebp - 0x21], 0
0x804a4c1:   0f 85 25 06 00 00               	jne 0x804aaec <func_1+0x135f>
0x804a4c7:   0f b7 85 c6 fe ff ff            	movzx eax, word ptr [ebp - 0x13a]
0x804a4ce:   0f be f8                        	movsx edi, al
0x804a4d1:   b8 69 00 00 00                  	mov eax, 0x69
0x804a4d6:   99                              	cdq 
0x804a4d7:   f7 ff                           	idiv edi
0x804a4d9:   ba da c7 dc 1b                  	mov edx, 0x1bdcc7da
0x804a4de:   29 c2                           	sub edx, eax
0x804a4e0:   89 d0                           	mov eax, edx
0x804a4e2:   89 c2                           	mov edx, eax
0x804a4e4:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804a4e8:   39 c2                           	cmp edx, eax
0x804a4ea:   7f 3b                           	jg 0x804a527 <func_1+0xd9a>
0x804a4ec:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a4ef:   0f b7 d0                        	movzx edx, ax
0x804a4f2:   8b 85 c0 fe ff ff               	mov eax, dword ptr [ebp - 0x140]
0x804a4f8:   0f b7 c0                        	movzx eax, ax
0x804a4fb:   89 c1                           	mov ecx, eax
0x804a4fd:   d3 fa                           	sar edx, cl
0x804a4ff:   89 d0                           	mov eax, edx
0x804a501:   98                              	cwde 
0x804a502:   8b 55 88                        	mov edx, dword ptr [ebp - 0x78]
0x804a505:   0f bf ca                        	movsx ecx, dx
0x804a508:   99                              	cdq 
0x804a509:   f7 f9                           	idiv ecx
0x804a50b:   89 d0                           	mov eax, edx
0x804a50d:   89 c2                           	mov edx, eax
0x804a50f:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a512:   09 d0                           	or eax, edx
0x804a514:   66 31 45 c8                     	xor word ptr [ebp - 0x38], ax
0x804a518:   c7 85 c0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x140], 0
0x804a522:   e9 73 04 00 00                  	jmp 0x804a99a <func_1+0x120d>
0x804a527:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a52b:   66 89 85 6e ff ff ff            	mov word ptr [ebp - 0x92], ax
0x804a532:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a535:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a538:   81 65 d4 c5 0c 00 00            	and dword ptr [ebp - 0x2c], 0xcc5
0x804a53f:   66 0f be 45 d1                  	movsx ax, byte ptr [ebp - 0x2f]
0x804a544:   0f b7 c0                        	movzx eax, ax
0x804a547:   83 e8 01                        	sub eax, 1
0x804a54a:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a54d:   e9 48 04 00 00                  	jmp 0x804a99a <func_1+0x120d>
0x804a552:   c7 45 98 07 5a a9 8a            	mov dword ptr [ebp - 0x68], 0x8aa95a07
0x804a559:   c7 85 dc fe ff ff 2f 05 a1 eb   	mov dword ptr [ebp - 0x124], 0xeba1052f
0x804a563:   66 c7 45 96 60 cd               	mov word ptr [ebp - 0x6a], 0xcd60
0x804a569:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x804a570:   c7 85 d8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x128], 0
0x804a57a:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a57e:   0f be c0                        	movsx eax, al
0x804a581:   f7 d8                           	neg eax
0x804a583:   83 f8 01                        	cmp eax, 1
0x804a586:   0f 84 07 03 00 00               	je 0x804a893 <func_1+0x1106>
0x804a58c:   66 c7 85 d4 fe ff ff ff ff      	mov word ptr [ebp - 0x12c], 0xffff
0x804a595:   c7 45 8c 0b 65 23 78            	mov dword ptr [ebp - 0x74], 0x7823650b
0x804a59c:   c7 85 d0 fe ff ff f5 d4 a1 c6   	mov dword ptr [ebp - 0x130], 0xc6a1d4f5
0x804a5a6:   c6 85 cf fe ff ff 88            	mov byte ptr [ebp - 0x131], 0x88
0x804a5ad:   c7 45 ac e9 ff ff ff            	mov dword ptr [ebp - 0x54], 0xffffffe9
0x804a5b4:   e9 a5 00 00 00                  	jmp 0x804a65e <func_1+0xed1>
0x804a5b9:   c6 85 ce fe ff ff c2            	mov byte ptr [ebp - 0x132], 0xc2
0x804a5c0:   80 65 d1 b9                     	and byte ptr [ebp - 0x2f], 0xb9
0x804a5c4:   80 7d d1 00                     	cmp byte ptr [ebp - 0x2f], 0
0x804a5c8:   75 06                           	jne 0x804a5d0 <func_1+0xe43>
0x804a5ca:   80 7d df 00                     	cmp byte ptr [ebp - 0x21], 0
0x804a5ce:   74 07                           	je 0x804a5d7 <func_1+0xe4a>
0x804a5d0:   b8 01 00 00 00                  	mov eax, 1
0x804a5d5:   eb 05                           	jmp 0x804a5dc <func_1+0xe4f>
0x804a5d7:   b8 00 00 00 00                  	mov eax, 0
0x804a5dc:   0f bf d0                        	movsx edx, ax
0x804a5df:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a5e2:   98                              	cwde 
0x804a5e3:   29 c2                           	sub edx, eax
0x804a5e5:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a5e9:   39 c2                           	cmp edx, eax
0x804a5eb:   c7 85 68 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x98], 1
0x804a5f5:   c7 45 8c f6 ff ff ff            	mov dword ptr [ebp - 0x74], 0xfffffff6
0x804a5fc:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a5ff:   23 45 e0                        	and eax, dword ptr [ebp - 0x20]
0x804a602:   3d 9e 3e ec 28                  	cmp eax, 0x28ec3e9e
0x804a607:   0f 95 c0                        	setne al
0x804a60a:   88 45 c7                        	mov byte ptr [ebp - 0x39], al
0x804a60d:   0f bf 85 12 ff ff ff            	movsx eax, word ptr [ebp - 0xee]
0x804a614:   ba 01 00 00 00                  	mov edx, 1
0x804a619:   89 c1                           	mov ecx, eax
0x804a61b:   d3 e2                           	shl edx, cl
0x804a61d:   89 d0                           	mov eax, edx
0x804a61f:   85 c0                           	test eax, eax
0x804a621:   0f 9e c0                        	setle al
0x804a624:   0f b6 c0                        	movzx eax, al
0x804a627:   20 85 ce fe ff ff               	and byte ptr [ebp - 0x132], al
0x804a62d:   0f be 85 ce fe ff ff            	movsx eax, byte ptr [ebp - 0x132]
0x804a634:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x804a637:   0f 94 c0                        	sete al
0x804a63a:   0f b6 c0                        	movzx eax, al
0x804a63d:   33 45 ec                        	xor eax, dword ptr [ebp - 0x14]
0x804a640:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804a643:   8b 85 1c ff ff ff               	mov eax, dword ptr [ebp - 0xe4]
0x804a649:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a64c:   66 83 7d da 00                  	cmp word ptr [ebp - 0x26], 0
0x804a651:   75 17                           	jne 0x804a66a <func_1+0xedd>
0x804a653:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a657:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a65a:   83 45 ac 08                     	add dword ptr [ebp - 0x54], 8
0x804a65e:   83 7d ac f3                     	cmp dword ptr [ebp - 0x54], -0xd
0x804a662:   0f 8c 51 ff ff ff               	jl 0x804a5b9 <func_1+0xe2c>
0x804a668:   eb 01                           	jmp 0x804a66b <func_1+0xede>
0x804a66a:   90                              	nop 
0x804a66b:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x804a66f:   74 62                           	je 0x804a6d3 <func_1+0xf46>
0x804a671:   83 65 ac 01                     	and dword ptr [ebp - 0x54], 1
0x804a675:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x804a679:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a67c:   98                              	cwde 
0x804a67d:   83 c0 01                        	add eax, 1
0x804a680:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a683:   c7 85 30 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd0], 0
0x804a68d:   c7 85 dc fe ff ff c8 ff ff ff   	mov dword ptr [ebp - 0x124], 0xffffffc8
0x804a697:   8b 85 dc fe ff ff               	mov eax, dword ptr [ebp - 0x124]
0x804a69d:   83 c8 89                        	or eax, 0xffffff89
0x804a6a0:   0f b6 c0                        	movzx eax, al
0x804a6a3:   f7 d8                           	neg eax
0x804a6a5:   66 c1 e8 05                     	shr ax, 5
0x804a6a9:   83 c0 04                        	add eax, 4
0x804a6ac:   0f be c0                        	movsx eax, al
0x804a6af:   f7 d8                           	neg eax
0x804a6b1:   89 c2                           	mov edx, eax
0x804a6b3:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x804a6b7:   39 c2                           	cmp edx, eax
0x804a6b9:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804a6bf:   0f b7 c0                        	movzx eax, ax
0x804a6c2:   69 c0 5a 5b 00 00               	imul eax, eax, 0x5b5a
0x804a6c8:   85 c0                           	test eax, eax
0x804a6ca:   74 07                           	je 0x804a6d3 <func_1+0xf46>
0x804a6cc:   b8 01 00 00 00                  	mov eax, 1
0x804a6d1:   eb 05                           	jmp 0x804a6d8 <func_1+0xf4b>
0x804a6d3:   b8 00 00 00 00                  	mov eax, 0
0x804a6d8:   3b 85 d0 fe ff ff               	cmp eax, dword ptr [ebp - 0x130]
0x804a6de:   0f 94 c0                        	sete al
0x804a6e1:   0f b6 d0                        	movzx edx, al
0x804a6e4:   0f b6 45 d1                     	movzx eax, byte ptr [ebp - 0x2f]
0x804a6e8:   0f b6 c0                        	movzx eax, al
0x804a6eb:   89 c1                           	mov ecx, eax
0x804a6ed:   d3 fa                           	sar edx, cl
0x804a6ef:   89 d0                           	mov eax, edx
0x804a6f1:   85 c0                           	test eax, eax
0x804a6f3:   0f b7 5d ca                     	movzx ebx, word ptr [ebp - 0x36]
0x804a6f7:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x804a6fd:   0f be c8                        	movsx ecx, al
0x804a700:   ba f7 12 da 4b                  	mov edx, 0x4bda12f7
0x804a705:   89 c8                           	mov eax, ecx
0x804a707:   f7 ea                           	imul edx
0x804a709:   c1 fa 04                        	sar edx, 4
0x804a70c:   89 c8                           	mov eax, ecx
0x804a70e:   c1 f8 1f                        	sar eax, 0x1f
0x804a711:   29 c2                           	sub edx, eax
0x804a713:   89 d0                           	mov eax, edx
0x804a715:   39 c3                           	cmp ebx, eax
0x804a717:   0f 9f c0                        	setg al
0x804a71a:   0f b6 c0                        	movzx eax, al
0x804a71d:   8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x804a720:   01 c2                           	add edx, eax
0x804a722:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x804a728:   09 d0                           	or eax, edx
0x804a72a:   83 e0 04                        	and eax, 4
0x804a72d:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x804a731:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a735:   83 c0 07                        	add eax, 7
0x804a738:   66 83 f8 0e                     	cmp ax, 0xe
0x804a73c:   0f 86 96 00 00 00               	jbe 0x804a7d8 <func_1+0x104b>
0x804a742:   83 bd 3c ff ff ff 00            	cmp dword ptr [ebp - 0xc4], 0
0x804a749:   0f 84 89 00 00 00               	je 0x804a7d8 <func_1+0x104b>
0x804a74f:   c7 85 c8 fe ff ff fc de e6 2e   	mov dword ptr [ebp - 0x138], 0x2ee6defc
0x804a759:   83 7d ec 1d                     	cmp dword ptr [ebp - 0x14], 0x1d
0x804a75d:   7f 07                           	jg 0x804a766 <func_1+0xfd9>
0x804a75f:   b8 01 00 00 00                  	mov eax, 1
0x804a764:   eb 05                           	jmp 0x804a76b <func_1+0xfde>
0x804a766:   b8 00 00 00 00                  	mov eax, 0
0x804a76b:   66 89 45 96                     	mov word ptr [ebp - 0x6a], ax
0x804a76f:   c6 45 d1 ff                     	mov byte ptr [ebp - 0x2f], 0xff
0x804a773:   66 c7 45 c8 ff ff               	mov word ptr [ebp - 0x38], 0xffff
0x804a779:   0f be 85 cf fe ff ff            	movsx eax, byte ptr [ebp - 0x131]
0x804a780:   0d 03 8d ff ff                  	or eax, 0xffff8d03
0x804a785:   83 f8 fe                        	cmp eax, -2
0x804a788:   0f 9d c0                        	setge al
0x804a78b:   0f b6 c0                        	movzx eax, al
0x804a78e:   39 85 28 ff ff ff               	cmp dword ptr [ebp - 0xd8], eax
0x804a794:   0f 9e c0                        	setle al
0x804a797:   0f b6 c0                        	movzx eax, al
0x804a79a:   8b 95 14 ff ff ff               	mov edx, dword ptr [ebp - 0xec]
0x804a7a0:   31 d0                           	xor eax, edx
0x804a7a2:   f7 d0                           	not eax
0x804a7a4:   89 c1                           	mov ecx, eax
0x804a7a6:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a7a9:   89 c2                           	mov edx, eax
0x804a7ab:   89 c8                           	mov eax, ecx
0x804a7ad:   0f af c2                        	imul eax, edx
0x804a7b0:   0f b6 c0                        	movzx eax, al
0x804a7b3:   8d 50 ff                        	lea edx, [eax - 1]
0x804a7b6:   0f be 45 b7                     	movsx eax, byte ptr [ebp - 0x49]
0x804a7ba:   39 c2                           	cmp edx, eax
0x804a7bc:   0f be 45 df                     	movsx eax, byte ptr [ebp - 0x21]
0x804a7c0:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a7c3:   0f 94 c0                        	sete al
0x804a7c6:   0f b6 c0                        	movzx eax, al
0x804a7c9:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a7cc:   66 83 7d c2 00                  	cmp word ptr [ebp - 0x3e], 0
0x804a7d1:   74 21                           	je 0x804a7f4 <func_1+0x1067>
0x804a7d3:   e9 01 03 00 00                  	jmp 0x804aad9 <func_1+0x134c>
0x804a7d8:   81 b5 14 ff ff ff 53 e2 82 6a   	xor dword ptr [ebp - 0xec], 0x6a82e253
0x804a7e2:   0f be 45 d1                     	movsx eax, byte ptr [ebp - 0x2f]
0x804a7e6:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a7e9:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a7ed:   74 06                           	je 0x804a7f5 <func_1+0x1068>
0x804a7ef:   e9 2b f4 ff ff                  	jmp 0x8049c1f <func_1+0x492>
0x804a7f4:   90                              	nop 
0x804a7f5:   c6 45 b7 e4                     	mov byte ptr [ebp - 0x49], 0xe4
0x804a7f9:   80 7d b7 e3                     	cmp byte ptr [ebp - 0x49], 0xe3
0x804a7fd:   0f 85 27 01 00 00               	jne 0x804a92a <func_1+0x119d>
0x804a803:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a809:   89 85 14 ff ff ff               	mov dword ptr [ebp - 0xec], eax
0x804a80f:   0f b7 55 c4                     	movzx edx, word ptr [ebp - 0x3c]
0x804a813:   0f b6 5d c7                     	movzx ebx, byte ptr [ebp - 0x39]
0x804a817:   0f b7 7d c8                     	movzx edi, word ptr [ebp - 0x38]
0x804a81b:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804a81f:   89 85 90 fe ff ff               	mov dword ptr [ebp - 0x170], eax
0x804a825:   0f be 75 d1                     	movsx esi, byte ptr [ebp - 0x2f]
0x804a829:   89 b5 8c fe ff ff               	mov dword ptr [ebp - 0x174], esi
0x804a82f:   0f b7 4d d2                     	movzx ecx, word ptr [ebp - 0x2e]
0x804a833:   89 8d 88 fe ff ff               	mov dword ptr [ebp - 0x178], ecx
0x804a839:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804a83d:   89 85 84 fe ff ff               	mov dword ptr [ebp - 0x17c], eax
0x804a843:   0f bf 75 dc                     	movsx esi, word ptr [ebp - 0x24]
0x804a847:   0f be 4d df                     	movsx ecx, byte ptr [ebp - 0x21]
0x804a84b:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x804a84f:   52                              	push edx
0x804a850:   53                              	push ebx
0x804a851:   57                              	push edi
0x804a852:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a858:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a85b:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a861:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a867:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a86a:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a86d:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a873:   56                              	push esi
0x804a874:   51                              	push ecx
0x804a875:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a878:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a87b:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a87e:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a881:   50                              	push eax
0x804a882:   e8 cd ed ff ff                  	call 0x8049654 <set_var>
0x804a887:   83 c4 44                        	add esp, 0x44
0x804a88a:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804a88e:   e9 e0 02 00 00                  	jmp 0x804ab73 <func_1+0x13e6>
0x804a893:   c6 85 d7 fe ff ff 06            	mov byte ptr [ebp - 0x129], 6
0x804a89a:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a89e:   8d 50 ff                        	lea edx, [eax - 1]
0x804a8a1:   88 55 c7                        	mov byte ptr [ebp - 0x39], dl
0x804a8a4:   0f b6 c8                        	movzx ecx, al
0x804a8a7:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x804a8ab:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a8ae:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a8b1:   01 c0                           	add eax, eax
0x804a8b3:   83 e8 17                        	sub eax, 0x17
0x804a8b6:   0f b6 d0                        	movzx edx, al
0x804a8b9:   89 d0                           	mov eax, edx
0x804a8bb:   c1 e0 08                        	shl eax, 8
0x804a8be:   29 d0                           	sub eax, edx
0x804a8c0:   85 c0                           	test eax, eax
0x804a8c2:   0f 94 c0                        	sete al
0x804a8c5:   0f b6 c0                        	movzx eax, al
0x804a8c8:   23 45 98                        	and eax, dword ptr [ebp - 0x68]
0x804a8cb:   09 c1                           	or ecx, eax
0x804a8cd:   89 ca                           	mov edx, ecx
0x804a8cf:   0f be 45 d1                     	movsx eax, byte ptr [ebp - 0x2f]
0x804a8d3:   39 c2                           	cmp edx, eax
0x804a8d5:   0f 9f c0                        	setg al
0x804a8d8:   0f b6 c0                        	movzx eax, al
0x804a8db:   09 45 d4                        	or dword ptr [ebp - 0x2c], eax
0x804a8de:   0f b7 85 10 ff ff ff            	movzx eax, word ptr [ebp - 0xf0]
0x804a8e5:   0f be d0                        	movsx edx, al
0x804a8e8:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a8eb:   89 c6                           	mov esi, eax
0x804a8ed:   0f b6 85 d7 fe ff ff            	movzx eax, byte ptr [ebp - 0x129]
0x804a8f4:   0f b6 d8                        	movzx ebx, al
0x804a8f7:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x804a8fd:   0f b6 c0                        	movzx eax, al
0x804a900:   89 c1                           	mov ecx, eax
0x804a902:   d3 fb                           	sar ebx, cl
0x804a904:   89 d8                           	mov eax, ebx
0x804a906:   85 c0                           	test eax, eax
0x804a908:   75 09                           	jne 0x804a913 <func_1+0x1186>
0x804a90a:   83 bd 70 ff ff ff 00            	cmp dword ptr [ebp - 0x90], 0
0x804a911:   74 07                           	je 0x804a91a <func_1+0x118d>
0x804a913:   b8 01 00 00 00                  	mov eax, 1
0x804a918:   eb 05                           	jmp 0x804a91f <func_1+0x1192>
0x804a91a:   b8 00 00 00 00                  	mov eax, 0
0x804a91f:   21 f0                           	and eax, esi
0x804a921:   0f be c0                        	movsx eax, al
0x804a924:   0f af c2                        	imul eax, edx
0x804a927:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804a92a:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804a92e:   30 45 c7                        	xor byte ptr [ebp - 0x39], al
0x804a931:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804a935:   98                              	cwde 
0x804a936:   c1 e0 07                        	shl eax, 7
0x804a939:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x804a93d:   0f bf 4d dc                     	movsx ecx, word ptr [ebp - 0x24]
0x804a941:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a944:   89 c3                           	mov ebx, eax
0x804a946:   66 0f be d3                     	movsx dx, bl
0x804a94a:   89 d0                           	mov eax, edx
0x804a94c:   c1 e0 03                        	shl eax, 3
0x804a94f:   29 d0                           	sub eax, edx
0x804a951:   c1 e0 03                        	shl eax, 3
0x804a954:   01 d0                           	add eax, edx
0x804a956:   66 c1 e8 08                     	shr ax, 8
0x804a95a:   c0 f8 04                        	sar al, 4
0x804a95d:   c0 fb 07                        	sar bl, 7
0x804a960:   89 da                           	mov edx, ebx
0x804a962:   29 c2                           	sub edx, eax
0x804a964:   89 d0                           	mov eax, edx
0x804a966:   66 98                           	cbw 
0x804a968:   0f b7 d0                        	movzx edx, ax
0x804a96b:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a96e:   0f b7 c0                        	movzx eax, ax
0x804a971:   0f af c2                        	imul eax, edx
0x804a974:   39 c1                           	cmp ecx, eax
0x804a976:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x804a97a:   b8 01 00 00 00                  	mov eax, 1
0x804a97f:   89 c2                           	mov edx, eax
0x804a981:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a984:   01 d0                           	add eax, edx
0x804a986:   66 c1 e8 04                     	shr ax, 4
0x804a98a:   0f b7 c0                        	movzx eax, ax
0x804a98d:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a990:   c7 85 14 ff ff ff ec e3 2f ff   	mov dword ptr [ebp - 0xec], 0xff2fe3ec
0x804a99a:   c6 45 df 00                     	mov byte ptr [ebp - 0x21], 0
0x804a99e:   e9 2c 01 00 00                  	jmp 0x804aacf <func_1+0x1342>
0x804a9a3:   66 c7 45 da fa ff               	mov word ptr [ebp - 0x26], 0xfffa
0x804a9a9:   e9 fd 00 00 00                  	jmp 0x804aaab <func_1+0x131e>
0x804a9ae:   c7 85 ac fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x154], 4
0x804a9b8:   c7 85 78 ff ff ff e8 ff ff ff   	mov dword ptr [ebp - 0x88], 0xffffffe8
0x804a9c2:   83 bd 78 ff ff ff 29            	cmp dword ptr [ebp - 0x88], 0x29
0x804a9c9:   0f 86 ab 00 00 00               	jbe 0x804aa7a <func_1+0x12ed>
0x804a9cf:   c7 85 a8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x158], 0
0x804a9d9:   c7 85 1c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe4], 0
0x804a9e3:   83 bd a8 fe ff ff 00            	cmp dword ptr [ebp - 0x158], 0
0x804a9ea:   0f 94 c0                        	sete al
0x804a9ed:   0f b6 c0                        	movzx eax, al
0x804a9f0:   89 85 ac fe ff ff               	mov dword ptr [ebp - 0x154], eax
0x804a9f6:   0f b7 55 c4                     	movzx edx, word ptr [ebp - 0x3c]
0x804a9fa:   0f b6 5d c7                     	movzx ebx, byte ptr [ebp - 0x39]
0x804a9fe:   0f b7 7d c8                     	movzx edi, word ptr [ebp - 0x38]
0x804aa02:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804aa06:   89 85 90 fe ff ff               	mov dword ptr [ebp - 0x170], eax
0x804aa0c:   0f be 75 d1                     	movsx esi, byte ptr [ebp - 0x2f]
0x804aa10:   89 b5 8c fe ff ff               	mov dword ptr [ebp - 0x174], esi
0x804aa16:   0f b7 4d d2                     	movzx ecx, word ptr [ebp - 0x2e]
0x804aa1a:   89 8d 88 fe ff ff               	mov dword ptr [ebp - 0x178], ecx
0x804aa20:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804aa24:   89 85 84 fe ff ff               	mov dword ptr [ebp - 0x17c], eax
0x804aa2a:   0f bf 75 dc                     	movsx esi, word ptr [ebp - 0x24]
0x804aa2e:   0f be 4d df                     	movsx ecx, byte ptr [ebp - 0x21]
0x804aa32:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x804aa36:   52                              	push edx
0x804aa37:   53                              	push ebx
0x804aa38:   57                              	push edi
0x804aa39:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804aa3f:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804aa42:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804aa48:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804aa4e:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804aa51:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804aa54:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804aa5a:   56                              	push esi
0x804aa5b:   51                              	push ecx
0x804aa5c:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804aa5f:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804aa62:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804aa65:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804aa68:   50                              	push eax
0x804aa69:   e8 e6 eb ff ff                  	call 0x8049654 <set_var>
0x804aa6e:   83 c4 44                        	add esp, 0x44
0x804aa71:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804aa75:   e9 f9 00 00 00                  	jmp 0x804ab73 <func_1+0x13e6>
0x804aa7a:   0f b7 85 10 ff ff ff            	movzx eax, word ptr [ebp - 0xf0]
0x804aa81:   0f be c0                        	movsx eax, al
0x804aa84:   ba d8 ff ff ff                  	mov edx, 0xffffffd8
0x804aa89:   89 c1                           	mov ecx, eax
0x804aa8b:   d3 fa                           	sar edx, cl
0x804aa8d:   89 d0                           	mov eax, edx
0x804aa8f:   98                              	cwde 
0x804aa90:   f7 d8                           	neg eax
0x804aa92:   85 c0                           	test eax, eax
0x804aa94:   0f 95 c0                        	setne al
0x804aa97:   0f b6 c0                        	movzx eax, al
0x804aa9a:   8b 95 ac fe ff ff               	mov edx, dword ptr [ebp - 0x154]
0x804aaa0:   21 d0                           	and eax, edx
0x804aaa2:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x804aaa6:   66 83 45 da 01                  	add word ptr [ebp - 0x26], 1
0x804aaab:   66 83 7d da 30                  	cmp word ptr [ebp - 0x26], 0x30
0x804aab0:   0f 85 f8 fe ff ff               	jne 0x804a9ae <func_1+0x1221>
0x804aab6:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804aab9:   f7 d0                           	not eax
0x804aabb:   83 e0 0a                        	and eax, 0xa
0x804aabe:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804aac1:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x804aac5:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x804aac9:   83 e8 05                        	sub eax, 5
0x804aacc:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x804aacf:   80 7d df f9                     	cmp byte ptr [ebp - 0x21], 0xf9
0x804aad3:   0f 8d ca fe ff ff               	jge 0x804a9a3 <func_1+0x1216>
0x804aad9:   83 6d bc 08                     	sub dword ptr [ebp - 0x44], 8
0x804aadd:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x804aae1:   0f 84 8c f4 ff ff               	je 0x8049f73 <func_1+0x7e6>
0x804aae7:   eb 04                           	jmp 0x804aaed <func_1+0x1360>
0x804aae9:   90                              	nop 
0x804aaea:   eb 01                           	jmp 0x804aaed <func_1+0x1360>
0x804aaec:   90                              	nop 
0x804aaed:   c7 45 bc 19 26 b0 9d            	mov dword ptr [ebp - 0x44], 0x9db02619
0x804aaf4:   0f b7 55 c4                     	movzx edx, word ptr [ebp - 0x3c]
0x804aaf8:   0f b6 5d c7                     	movzx ebx, byte ptr [ebp - 0x39]
0x804aafc:   0f b7 7d c8                     	movzx edi, word ptr [ebp - 0x38]
0x804ab00:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804ab04:   89 85 90 fe ff ff               	mov dword ptr [ebp - 0x170], eax
0x804ab0a:   0f be 75 d1                     	movsx esi, byte ptr [ebp - 0x2f]
0x804ab0e:   89 b5 8c fe ff ff               	mov dword ptr [ebp - 0x174], esi
0x804ab14:   0f b7 4d d2                     	movzx ecx, word ptr [ebp - 0x2e]
0x804ab18:   89 8d 88 fe ff ff               	mov dword ptr [ebp - 0x178], ecx
0x804ab1e:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804ab22:   89 85 84 fe ff ff               	mov dword ptr [ebp - 0x17c], eax
0x804ab28:   0f bf 75 dc                     	movsx esi, word ptr [ebp - 0x24]
0x804ab2c:   0f be 4d df                     	movsx ecx, byte ptr [ebp - 0x21]
0x804ab30:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x804ab34:   52                              	push edx
0x804ab35:   53                              	push ebx
0x804ab36:   57                              	push edi
0x804ab37:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804ab3d:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804ab40:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804ab46:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804ab4c:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804ab4f:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804ab52:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804ab58:   56                              	push esi
0x804ab59:   51                              	push ecx
0x804ab5a:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804ab5d:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804ab60:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804ab63:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804ab66:   50                              	push eax
0x804ab67:   e8 e8 ea ff ff                  	call 0x8049654 <set_var>
0x804ab6c:   83 c4 44                        	add esp, 0x44
0x804ab6f:   0f b6 45 c1                     	movzx eax, byte ptr [ebp - 0x3f]
0x804ab73:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804ab76:   5b                              	pop ebx
0x804ab77:   5e                              	pop esi
0x804ab78:   5f                              	pop edi
0x804ab79:   5d                              	pop ebp
0x804ab7a:   c3                              	ret 
; function: main at 0x804ab7b -- 0x804ae05
0x804ab7b:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804ab7f:   83 e4 f0                        	and esp, 0xfffffff0
0x804ab82:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804ab85:   55                              	push ebp
0x804ab86:   89 e5                           	mov ebp, esp
0x804ab88:   53                              	push ebx
0x804ab89:   51                              	push ecx
0x804ab8a:   83 ec 10                        	sub esp, 0x10
0x804ab8d:   e8 fe d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ab92:   81 c3 6e 24 00 00               	add ebx, 0x246e
0x804ab98:   89 c8                           	mov eax, ecx
0x804ab9a:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804aba1:   83 38 02                        	cmp dword ptr [eax], 2
0x804aba4:   75 26                           	jne 0x804abcc <main+0x51>
0x804aba6:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804aba9:   83 c0 04                        	add eax, 4
0x804abac:   8b 00                           	mov eax, dword ptr [eax]
0x804abae:   83 ec 08                        	sub esp, 8
0x804abb1:   8d 93 ec de ff ff               	lea edx, [ebx - 0x2114]
0x804abb7:   52                              	push edx
0x804abb8:   50                              	push eax
0x804abb9:   e8 42 d7 ff ff                  	call 0x8048300 <strcmp>
0x804abbe:   83 c4 10                        	add esp, 0x10
0x804abc1:   85 c0                           	test eax, eax
0x804abc3:   75 07                           	jne 0x804abcc <main+0x51>
0x804abc5:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804abcc:   e8 85 d8 ff ff                  	call 0x8048456 <platform_main_begin>
0x804abd1:   e8 95 e8 ff ff                  	call 0x804946b <crc32_gentab>
0x804abd6:   e8 b2 eb ff ff                  	call 0x804978d <func_1>
0x804abdb:   0f b7 83 24 00 00 00            	movzx eax, word ptr [ebx + 0x24]
0x804abe2:   98                              	cwde 
0x804abe3:   83 ec 04                        	sub esp, 4
0x804abe6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abe9:   8d 93 ee de ff ff               	lea edx, [ebx - 0x2112]
0x804abef:   52                              	push edx
0x804abf0:   50                              	push eax
0x804abf1:   e8 81 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abf6:   83 c4 10                        	add esp, 0x10
0x804abf9:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804abff:   89 c2                           	mov edx, eax
0x804ac01:   83 ec 04                        	sub esp, 4
0x804ac04:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac07:   8d 83 f2 de ff ff               	lea eax, [ebx - 0x210e]
0x804ac0d:   50                              	push eax
0x804ac0e:   52                              	push edx
0x804ac0f:   e8 63 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac14:   83 c4 10                        	add esp, 0x10
0x804ac17:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804ac1d:   83 ec 04                        	sub esp, 4
0x804ac20:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac23:   8d 93 f7 de ff ff               	lea edx, [ebx - 0x2109]
0x804ac29:   52                              	push edx
0x804ac2a:   50                              	push eax
0x804ac2b:   e8 47 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac30:   83 c4 10                        	add esp, 0x10
0x804ac33:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804ac39:   83 ec 04                        	sub esp, 4
0x804ac3c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac3f:   8d 93 fc de ff ff               	lea edx, [ebx - 0x2104]
0x804ac45:   52                              	push edx
0x804ac46:   50                              	push eax
0x804ac47:   e8 2b e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac4c:   83 c4 10                        	add esp, 0x10
0x804ac4f:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804ac55:   83 ec 04                        	sub esp, 4
0x804ac58:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac5b:   8d 93 01 df ff ff               	lea edx, [ebx - 0x20ff]
0x804ac61:   52                              	push edx
0x804ac62:   50                              	push eax
0x804ac63:   e8 0f e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac68:   83 c4 10                        	add esp, 0x10
0x804ac6b:   0f b6 83 38 00 00 00            	movzx eax, byte ptr [ebx + 0x38]
0x804ac72:   0f be c0                        	movsx eax, al
0x804ac75:   83 ec 04                        	sub esp, 4
0x804ac78:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac7b:   8d 93 06 df ff ff               	lea edx, [ebx - 0x20fa]
0x804ac81:   52                              	push edx
0x804ac82:   50                              	push eax
0x804ac83:   e8 ef e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac88:   83 c4 10                        	add esp, 0x10
0x804ac8b:   0f b7 83 3a 00 00 00            	movzx eax, word ptr [ebx + 0x3a]
0x804ac92:   98                              	cwde 
0x804ac93:   83 ec 04                        	sub esp, 4
0x804ac96:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac99:   8d 93 0c df ff ff               	lea edx, [ebx - 0x20f4]
0x804ac9f:   52                              	push edx
0x804aca0:   50                              	push eax
0x804aca1:   e8 d1 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804aca6:   83 c4 10                        	add esp, 0x10
0x804aca9:   0f b7 83 3c 00 00 00            	movzx eax, word ptr [ebx + 0x3c]
0x804acb0:   0f b7 c0                        	movzx eax, ax
0x804acb3:   83 ec 04                        	sub esp, 4
0x804acb6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acb9:   8d 93 12 df ff ff               	lea edx, [ebx - 0x20ee]
0x804acbf:   52                              	push edx
0x804acc0:   50                              	push eax
0x804acc1:   e8 b1 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acc6:   83 c4 10                        	add esp, 0x10
0x804acc9:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804accf:   89 c2                           	mov edx, eax
0x804acd1:   83 ec 04                        	sub esp, 4
0x804acd4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acd7:   8d 83 18 df ff ff               	lea eax, [ebx - 0x20e8]
0x804acdd:   50                              	push eax
0x804acde:   52                              	push edx
0x804acdf:   e8 93 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ace4:   83 c4 10                        	add esp, 0x10
0x804ace7:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804aced:   83 ec 04                        	sub esp, 4
0x804acf0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acf3:   8d 93 1e df ff ff               	lea edx, [ebx - 0x20e2]
0x804acf9:   52                              	push edx
0x804acfa:   50                              	push eax
0x804acfb:   e8 77 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad00:   83 c4 10                        	add esp, 0x10
0x804ad03:   0f b7 83 48 00 00 00            	movzx eax, word ptr [ebx + 0x48]
0x804ad0a:   0f b7 c0                        	movzx eax, ax
0x804ad0d:   83 ec 04                        	sub esp, 4
0x804ad10:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad13:   8d 93 24 df ff ff               	lea edx, [ebx - 0x20dc]
0x804ad19:   52                              	push edx
0x804ad1a:   50                              	push eax
0x804ad1b:   e8 57 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad20:   83 c4 10                        	add esp, 0x10
0x804ad23:   0f b6 83 4a 00 00 00            	movzx eax, byte ptr [ebx + 0x4a]
0x804ad2a:   0f be c0                        	movsx eax, al
0x804ad2d:   83 ec 04                        	sub esp, 4
0x804ad30:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad33:   8d 93 2a df ff ff               	lea edx, [ebx - 0x20d6]
0x804ad39:   52                              	push edx
0x804ad3a:   50                              	push eax
0x804ad3b:   e8 37 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad40:   83 c4 10                        	add esp, 0x10
0x804ad43:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804ad49:   83 ec 04                        	sub esp, 4
0x804ad4c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad4f:   8d 93 30 df ff ff               	lea edx, [ebx - 0x20d0]
0x804ad55:   52                              	push edx
0x804ad56:   50                              	push eax
0x804ad57:   e8 1b e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad5c:   83 c4 10                        	add esp, 0x10
0x804ad5f:   0f b7 83 84 04 00 00            	movzx eax, word ptr [ebx + 0x484]
0x804ad66:   0f b7 c0                        	movzx eax, ax
0x804ad69:   83 ec 04                        	sub esp, 4
0x804ad6c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad6f:   8d 93 36 df ff ff               	lea edx, [ebx - 0x20ca]
0x804ad75:   52                              	push edx
0x804ad76:   50                              	push eax
0x804ad77:   e8 fb e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad7c:   83 c4 10                        	add esp, 0x10
0x804ad7f:   0f b7 83 50 00 00 00            	movzx eax, word ptr [ebx + 0x50]
0x804ad86:   0f b7 c0                        	movzx eax, ax
0x804ad89:   83 ec 04                        	sub esp, 4
0x804ad8c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad8f:   8d 93 3c df ff ff               	lea edx, [ebx - 0x20c4]
0x804ad95:   52                              	push edx
0x804ad96:   50                              	push eax
0x804ad97:   e8 db e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad9c:   83 c4 10                        	add esp, 0x10
0x804ad9f:   0f b6 83 52 00 00 00            	movzx eax, byte ptr [ebx + 0x52]
0x804ada6:   0f b6 c0                        	movzx eax, al
0x804ada9:   83 ec 04                        	sub esp, 4
0x804adac:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adaf:   8d 93 42 df ff ff               	lea edx, [ebx - 0x20be]
0x804adb5:   52                              	push edx
0x804adb6:   50                              	push eax
0x804adb7:   e8 bb e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adbc:   83 c4 10                        	add esp, 0x10
0x804adbf:   0f b7 83 54 00 00 00            	movzx eax, word ptr [ebx + 0x54]
0x804adc6:   0f b7 c0                        	movzx eax, ax
0x804adc9:   83 ec 04                        	sub esp, 4
0x804adcc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adcf:   8d 93 48 df ff ff               	lea edx, [ebx - 0x20b8]
0x804add5:   52                              	push edx
0x804add6:   50                              	push eax
0x804add7:   e8 9b e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804addc:   83 c4 10                        	add esp, 0x10
0x804addf:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ade5:   f7 d0                           	not eax
0x804ade7:   83 ec 08                        	sub esp, 8
0x804adea:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aded:   50                              	push eax
0x804adee:   e8 73 d6 ff ff                  	call 0x8048466 <platform_main_end>
0x804adf3:   83 c4 10                        	add esp, 0x10
0x804adf6:   b8 00 00 00 00                  	mov eax, 0
0x804adfb:   8d 65 f8                        	lea esp, [ebp - 8]
0x804adfe:   59                              	pop ecx
0x804adff:   5b                              	pop ebx
0x804ae00:   5d                              	pop ebp
0x804ae01:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ae04:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ae05 -- 0x804ae09
0x804ae05:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ae08:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804ae09 -- 0x804ae0d
0x804ae09:   8b 14 24                        	mov edx, dword ptr [esp]
0x804ae0c:   c3                              	ret 
; data inside code section at 0x804ae0d -- 0x804ae10
0x804ae0d:   66 90 90                                           |f..             |
; function: __libc_csu_init at 0x804ae10 -- 0x804ae6d
0x804ae10:   55                              	push ebp
0x804ae11:   57                              	push edi
0x804ae12:   56                              	push esi
0x804ae13:   53                              	push ebx
0x804ae14:   e8 77 d5 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ae19:   81 c3 e7 21 00 00               	add ebx, 0x21e7
0x804ae1f:   83 ec 0c                        	sub esp, 0xc
0x804ae22:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ae26:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ae2c:   e8 9b d4 ff ff                  	call 0x80482cc <_init>
0x804ae31:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804ae37:   29 c6                           	sub esi, eax
0x804ae39:   c1 fe 02                        	sar esi, 2
0x804ae3c:   85 f6                           	test esi, esi
0x804ae3e:   74 25                           	je 0x804ae65 <__libc_csu_init+0x55>
0x804ae40:   31 ff                           	xor edi, edi
0x804ae42:   8d b6 00 00 00 00               	lea esi, [esi]
0x804ae48:   83 ec 04                        	sub esp, 4
0x804ae4b:   55                              	push ebp
0x804ae4c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ae50:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ae54:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804ae5b:   83 c7 01                        	add edi, 1
0x804ae5e:   83 c4 10                        	add esp, 0x10
0x804ae61:   39 fe                           	cmp esi, edi
0x804ae63:   75 e3                           	jne 0x804ae48 <__libc_csu_init+0x38>
0x804ae65:   83 c4 0c                        	add esp, 0xc
0x804ae68:   5b                              	pop ebx
0x804ae69:   5e                              	pop esi
0x804ae6a:   5f                              	pop edi
0x804ae6b:   5d                              	pop ebp
0x804ae6c:   c3                              	ret 
; data inside code section at 0x804ae6d -- 0x804ae70
0x804ae6d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804ae70 -- 0x804ae72
0x804ae70:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804ae74 -- 0x804ae88
0x804ae74:   53                              	push ebx
0x804ae75:   83 ec 08                        	sub esp, 8
0x804ae78:   e8 13 d5 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ae7d:   81 c3 83 21 00 00               	add ebx, 0x2183
0x804ae83:   83 c4 08                        	add esp, 8
0x804ae86:   5b                              	pop ebx
0x804ae87:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 8c ae 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804ae88:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804ae98:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804aea8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804aeb8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804aec8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804aed8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804aee8:   25 64 0a 00 31 00 67 5f  32 00 67 5f 32 35 00 67   |%d..1.g_2.g_25.g|
0x804aef8:   5f 37 33 00 67 5f 37 35  00 67 5f 37 36 00 67 5f   |_73.g_75.g_76.g_|
0x804af08:   31 31 31 00 67 5f 31 35  37 00 67 5f 32 30 31 00   |111.g_157.g_201.|
0x804af18:   67 5f 32 31 33 00 67 5f  32 34 36 00 67 5f 32 38   |g_213.g_246.g_28|
0x804af28:   30 00 67 5f 33 32 35 00  67 5f 33 32 36 00 67 5f   |0.g_325.g_326.g_|
0x804af38:   33 32 39 00 67 5f 33 36  30 00 67 5f 33 39 30 00   |329.g_360.g_390.|
0x804af48:   67 5f 35 30 39 00 00 00  00 00 00 3f ff ff ff 7e   |g_509......?...~|
0x804af58:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x804af68:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x804af78:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804af88:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804af98:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804afa8:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804afb8:   01                                                 |.               |
; section: .eh_frame_hdr
0x804afb8:   01 1b 03 3b c0 02 00 00  57 00 00 00 38 d3 ff ff   |...;....W...8...|
0x804afc8:   f0 02 00 00 78 d3 ff ff  14 03 00 00 c8 d3 ff ff   |....x...........|
0x804afd8:   dc 02 00 00 9e d4 ff ff  28 03 00 00 ae d4 ff ff   |........(.......|
0x804afe8:   48 03 00 00 dc d4 ff ff  6c 03 00 00 fa d4 ff ff   |H.......l.......|
0x804aff8:   8c 03 00 00 22 d5 ff ff  ac 03 00 00 4c d5 ff ff   |....".......L...|
0x804b008:   cc 03 00 00 75 d5 ff ff  ec 03 00 00 b8 d5 ff ff   |....u...........|
0x804b018:   0c 04 00 00 f9 d5 ff ff  2c 04 00 00 51 d6 ff ff   |........,...Q...|
0x804b028:   50 04 00 00 a3 d6 ff ff  74 04 00 00 e0 d6 ff ff   |P.......t.......|
0x804b038:   94 04 00 00 17 d7 ff ff  b4 04 00 00 36 d7 ff ff   |............6...|
0x804b048:   d4 04 00 00 60 d7 ff ff  f4 04 00 00 8c d7 ff ff   |....`...........|
0x804b058:   14 05 00 00 b7 d7 ff ff  34 05 00 00 00 d8 ff ff   |........4.......|
0x804b068:   54 05 00 00 47 d8 ff ff  74 05 00 00 a1 d8 ff ff   |T...G...t.......|
0x804b078:   98 05 00 00 f5 d8 ff ff  bc 05 00 00 34 d9 ff ff   |............4...|
0x804b088:   dc 05 00 00 6d d9 ff ff  fc 05 00 00 8f d9 ff ff   |....m...........|
0x804b098:   1c 06 00 00 dd d9 ff ff  3c 06 00 00 19 da ff ff   |........<.......|
0x804b0a8:   5c 06 00 00 a2 da ff ff  7c 06 00 00 d4 da ff ff   |\.......|.......|
0x804b0b8:   9c 06 00 00 04 db ff ff  bc 06 00 00 49 db ff ff   |............I...|
0x804b0c8:   dc 06 00 00 88 db ff ff  fc 06 00 00 ba db ff ff   |................|
0x804b0d8:   1c 07 00 00 e6 db ff ff  3c 07 00 00 04 dc ff ff   |........<.......|
0x804b0e8:   5c 07 00 00 2c dc ff ff  7c 07 00 00 51 dc ff ff   |\...,...|...Q...|
0x804b0f8:   9c 07 00 00 76 dc ff ff  bc 07 00 00 ad dc ff ff   |....v...........|
0x804b108:   dc 07 00 00 e1 dc ff ff  fc 07 00 00 33 dd ff ff   |............3...|
0x804b118:   20 08 00 00 7f dd ff ff  44 08 00 00 b6 dd ff ff   | .......D.......|
0x804b128:   64 08 00 00 e7 dd ff ff  84 08 00 00 06 de ff ff   |d...............|
0x804b138:   a4 08 00 00 30 de ff ff  c4 08 00 00 58 de ff ff   |....0.......X...|
0x804b148:   e4 08 00 00 81 de ff ff  04 09 00 00 bd de ff ff   |................|
0x804b158:   24 09 00 00 f7 de ff ff  44 09 00 00 4a df ff ff   |$.......D...J...|
0x804b168:   68 09 00 00 97 df ff ff  8c 09 00 00 cf df ff ff   |h...............|
0x804b178:   ac 09 00 00 01 e0 ff ff  cc 09 00 00 15 e0 ff ff   |................|
0x804b188:   ec 09 00 00 2c e0 ff ff  0c 0a 00 00 41 e0 ff ff   |....,.......A...|
0x804b198:   2c 0a 00 00 57 e0 ff ff  4c 0a 00 00 7e e0 ff ff   |,...W...L...~...|
0x804b1a8:   6c 0a 00 00 a3 e0 ff ff  8c 0a 00 00 e2 e0 ff ff   |l...............|
0x804b1b8:   ac 0a 00 00 1b e1 ff ff  cc 0a 00 00 47 e1 ff ff   |............G...|
0x804b1c8:   ec 0a 00 00 6d e1 ff ff  0c 0b 00 00 af e1 ff ff   |....m...........|
0x804b1d8:   2c 0b 00 00 f1 e1 ff ff  4c 0b 00 00 33 e2 ff ff   |,.......L...3...|
0x804b1e8:   6c 0b 00 00 a8 e2 ff ff  8c 0b 00 00 05 e3 ff ff   |l...............|
0x804b1f8:   ac 0b 00 00 62 e3 ff ff  cc 0b 00 00 bf e3 ff ff   |....b...........|
0x804b208:   ec 0b 00 00 4f e4 ff ff  0c 0c 00 00 b3 e4 ff ff   |....O...........|
0x804b218:   2c 0c 00 00 23 e5 ff ff  4c 0c 00 00 6a e5 ff ff   |,...#...L...j...|
0x804b228:   70 0c 00 00 bf e5 ff ff  90 0c 00 00 06 e6 ff ff   |p...............|
0x804b238:   b4 0c 00 00 6e e6 ff ff  d8 0c 00 00 9c e6 ff ff   |....n...........|
0x804b248:   fc 0c 00 00 d5 e7 ff ff  2c 0d 00 00 c3 fb ff ff   |........,.......|
0x804b258:   5c 0d 00 00 4d fe ff ff  94 0d 00 00 51 fe ff ff   |\...M.......Q...|
0x804b268:   a8 0d 00 00 58 fe ff ff  bc 0d 00 00 b8 fe ff ff   |....X...........|
0x804b278:   08 0e 00 00 14                                     |.....           |
; section: .eh_frame
0x804b27c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b28c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b29c:   e4 d0 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b2ac:   30 00 00 00 40 d0 ff ff  40 00 00 00 00 0e 08 46   |0...@...@......F|
0x804b2bc:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b2cc:   10 00 00 00 54 00 00 00  5c d0 ff ff 08 00 00 00   |....T...\.......|
0x804b2dc:   00 00 00 00 1c 00 00 00  68 00 00 00 6e d1 ff ff   |........h...n...|
0x804b2ec:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b2fc:   04 04 00 00 20 00 00 00  88 00 00 00 5e d1 ff ff   |.... .......^...|
0x804b30c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b31c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b32c:   68 d1 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |h........A....B.|
0x804b33c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b34c:   66 d1 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |f...(....A....B.|
0x804b35c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b36c:   6e d1 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |n...*....A....B.|
0x804b37c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b38c:   78 d1 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |x...)....A....B.|
0x804b39c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b3ac:   81 d1 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b3bc:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b3cc:   a4 d1 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b3dc:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b3ec:   c5 d1 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b3fc:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b40c:   90 01 00 00 f9 d1 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b41c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b42c:   1c 00 00 00 b4 01 00 00  27 d2 ff ff 3d 00 00 00   |........'...=...|
0x804b43c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b44c:   1c 00 00 00 d4 01 00 00  44 d2 ff ff 37 00 00 00   |........D...7...|
0x804b45c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b46c:   1c 00 00 00 f4 01 00 00  5b d2 ff ff 1f 00 00 00   |........[.......|
0x804b47c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b48c:   1c 00 00 00 14 02 00 00  5a d2 ff ff 2a 00 00 00   |........Z...*...|
0x804b49c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b4ac:   1c 00 00 00 34 02 00 00  64 d2 ff ff 2c 00 00 00   |....4...d...,...|
0x804b4bc:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b4cc:   1c 00 00 00 54 02 00 00  70 d2 ff ff 2b 00 00 00   |....T...p...+...|
0x804b4dc:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b4ec:   1c 00 00 00 74 02 00 00  7b d2 ff ff 49 00 00 00   |....t...{...I...|
0x804b4fc:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b50c:   1c 00 00 00 94 02 00 00  a4 d2 ff ff 47 00 00 00   |............G...|
0x804b51c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b52c:   20 00 00 00 b4 02 00 00  cb d2 ff ff 5a 00 00 00   | ...........Z...|
0x804b53c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b54c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 01 d3 ff ff   |.... ...........|
0x804b55c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b56c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b57c:   31 d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |1...?....A....B.|
0x804b58c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b59c:   50 d3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |P...9....A....B.|
0x804b5ac:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b5bc:   69 d3 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |i..."....A....B.|
0x804b5cc:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b5dc:   6b d3 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |k...N....A....B.|
0x804b5ec:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b5fc:   99 d3 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b60c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b61c:   b5 d3 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b62c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b63c:   1e d4 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b64c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b65c:   30 d4 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |0...0....A....B.|
0x804b66c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b67c:   40 d4 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |@...E....A....B.|
0x804b68c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b69c:   65 d4 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |e...?....A....B.|
0x804b6ac:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b6bc:   84 d4 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b6cc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b6dc:   96 d4 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b6ec:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b6fc:   a2 d4 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b70c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b71c:   a0 d4 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b72c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b73c:   a8 d4 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b74c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b75c:   ad d4 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b76c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b77c:   b2 d4 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b78c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b79c:   c9 d4 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b7ac:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b7bc:   dd d4 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b7cc:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b7dc:   60 05 00 00 0b d5 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b7ec:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b7fc:   1c 00 00 00 84 05 00 00  33 d5 ff ff 37 00 00 00   |........3...7...|
0x804b80c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b81c:   1c 00 00 00 a4 05 00 00  4a d5 ff ff 31 00 00 00   |........J...1...|
0x804b82c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b83c:   1c 00 00 00 c4 05 00 00  5b d5 ff ff 1f 00 00 00   |........[.......|
0x804b84c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b85c:   1c 00 00 00 e4 05 00 00  5a d5 ff ff 2a 00 00 00   |........Z...*...|
0x804b86c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b87c:   1c 00 00 00 04 06 00 00  64 d5 ff ff 28 00 00 00   |........d...(...|
0x804b88c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b89c:   1c 00 00 00 24 06 00 00  6c d5 ff ff 29 00 00 00   |....$...l...)...|
0x804b8ac:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b8bc:   1c 00 00 00 44 06 00 00  75 d5 ff ff 3c 00 00 00   |....D...u...<...|
0x804b8cc:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b8dc:   1c 00 00 00 64 06 00 00  91 d5 ff ff 3a 00 00 00   |....d.......:...|
0x804b8ec:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b8fc:   20 00 00 00 84 06 00 00  ab d5 ff ff 53 00 00 00   | ...........S...|
0x804b90c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b91c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 da d5 ff ff   |.... ...........|
0x804b92c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b93c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b94c:   03 d6 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b95c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b96c:   1b d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b97c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b98c:   2d d6 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |-........A....B.|
0x804b99c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b9ac:   21 d6 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |!........A....B.|
0x804b9bc:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b9cc:   18 d6 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b9dc:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b9ec:   0d d6 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b9fc:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804ba0c:   03 d6 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804ba1c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804ba2c:   0a d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ba3c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804ba4c:   0f d6 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804ba5c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804ba6c:   2e d6 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804ba7c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804ba8c:   47 d6 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |G...,....A....B.|
0x804ba9c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804baac:   53 d6 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |S...&....A....B.|
0x804babc:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bacc:   59 d6 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |Y...B....A....B.|
0x804badc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804baec:   7b d6 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |{...B....A....B.|
0x804bafc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bb0c:   9d d6 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bb1c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bb2c:   bf d6 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804bb3c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bb4c:   14 d7 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bb5c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bb6c:   51 d7 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |Q...]....A....B.|
0x804bb7c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bb8c:   8e d7 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bb9c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bbac:   cb d7 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bbbc:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804bbcc:   3b d8 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |;...d....A....B.|
0x804bbdc:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bbec:   7f d8 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804bbfc:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bc0c:   cf d8 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804bc1c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bc2c:   b0 09 00 00 f2 d8 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804bc3c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bc4c:   d0 09 00 00 27 d9 ff ff  47 00 00 00 00 41 0e 08   |....'...G....A..|
0x804bc5c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bc6c:   20 00 00 00 f4 09 00 00  4a d9 ff ff 68 00 00 00   | .......J...h...|
0x804bc7c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bc8c:   0c 04 04 00 20 00 00 00  18 0a 00 00 8e d9 ff ff   |.... ...........|
0x804bc9c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804bcac:   66 c5 c3 0c 04 04 00 00  2c 00 00 00 3c 0a 00 00   |f.......,...<...|
0x804bcbc:   98 d9 ff ff 39 01 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bccc:   05 46 87 03 86 04 83 05  03 2c 01 c3 41 c6 41 c7   |.F.......,..A.A.|
0x804bcdc:   41 c5 0c 04 04 00 00 00  2c 00 00 00 6c 0a 00 00   |A.......,...l...|
0x804bcec:   a1 da ff ff ee 13 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bcfc:   05 49 87 03 86 04 83 05  03 de 13 c3 41 c6 41 c7   |.I..........A.A.|
0x804bd0c:   41 c5 0c 04 04 00 00 00  34 00 00 00 9c 0a 00 00   |A.......4.......|
0x804bd1c:   5f ee ff ff 8a 02 00 00  00 44 0c 01 00 47 10 05   |_........D...G..|
0x804bd2c:   02 75 00 44 0f 03 75 78  06 10 03 02 75 7c 03 75   |.u.D..ux....u|.u|
0x804bd3c:   02 c1 0c 01 00 41 c3 41  c5 43 0c 04 04 00 00 00   |.....A.A.C......|
0x804bd4c:   10 00 00 00 d4 0a 00 00  b1 f0 ff ff 04 00 00 00   |................|
0x804bd5c:   00 00 00 00 10 00 00 00  e8 0a 00 00 a1 f0 ff ff   |................|
0x804bd6c:   04 00 00 00 00 00 00 00  48 00 00 00 fc 0a 00 00   |........H.......|
0x804bd7c:   94 f0 ff ff 5d 00 00 00  00 41 0e 08 85 02 41 0e   |....]....A....A.|
0x804bd8c:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 4e 0e 20   |...A....A....N. |
0x804bd9c:   69 0e 24 41 0e 28 44 0e  2c 44 0e 30 4d 0e 20 47   |i.$A.(D.,D.0M. G|
0x804bdac:   0e 14 41 c3 0e 10 41 c6  0e 0c 41 c7 0e 08 41 c5   |..A...A...A...A.|
0x804bdbc:   0e 04 00 00 10 00 00 00  48 0b 00 00 a8 f0 ff ff   |........H.......|
0x804bdcc:   02 00 00 00 00 00 00 00  00 00 00 00 ??            |............?   |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 74 ae 04 08  19 00 00 00 0c cf 04 08   |....t...........|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff ff ff 00 00   |................|
0x804d028:   bc df f0 d1 5d f3 f4 dd  f8 ff ff ff ff ff ff ff   |....]...........|
0x804d038:   6c 00 c0 60 c5 c9 00 00  29 c5 97 69 06 00 00 00   |l..`....)..i....|
0x804d048:   7d e7 ff 00 9e d7 f8 60  03 2d f8 00 06 00 ??      |}......`.-....? |
