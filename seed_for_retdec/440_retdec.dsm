;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:24:42
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 e0 db ff ff               	lea eax, [ebx - 0x2420]
0x804835c:   50                              	push eax
0x804835d:   8d 83 80 db ff ff               	lea eax, [ebx - 0x2480]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 31 a7 04 08               	mov eax, 0x804a731
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 78 d0 04 08                  	mov eax, 0x804d078
0x80483a5:   3d 78 d0 04 08                  	cmp eax, 0x804d078
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 78 d0 04 08                  	push 0x804d078
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 78 d0 04 08                  	mov eax, 0x804d078
0x80483e5:   2d 78 d0 04 08                  	sub eax, 0x804d078
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 78 d0 04 08                  	push 0x804d078
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 0b 27 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 f7 26 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 00 dc ff ff               	lea edx, [eax - 0x2400]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 ca 26 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 ac 26 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 84 26 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 5a 26 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 31 26 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 ee 25 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 ac 25 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 54 25 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 03 25 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 c6 24 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 8f 24 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 70 24 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 46 24 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 1a 24 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 ef 23 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 a6 23 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 5e 23 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 04 23 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 b1 22 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 72 22 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 3c 22 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 1a 22 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 cc 21 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 90 21 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 07 21 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 d5 20 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 a5 20 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 60 20 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 21 20 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 ef 1f 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 c0 1f 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 a2 1f 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 7a 1f 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 55 1f 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 30 1f 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 f9 1e 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 c4 1e 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 72 1e 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 27 1e 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 f0 1d 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 bf 1d 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 a0 1d 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 76 1d 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 4e 1d 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 25 1d 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 e9 1c 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 ae 1c 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 5b 1c 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 0f 1c 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 d7 1b 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 a8 1b 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 94 1b 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 7d 1b 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 68 1b 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 52 1b 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 2b 1b 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 06 1b 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 c7 1a 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 8e 1a 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 62 1a 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 3c 1a 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 0c dd ff ff               	fld dword ptr [eax - 0x22f4]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 0c dd ff ff               	fld dword ptr [eax - 0x22f4]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 10 dd ff ff               	fld dword ptr [eax - 0x22f0]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 fa 19 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 0c dd ff ff               	fld dword ptr [eax - 0x22f4]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 0c dd ff ff               	fld dword ptr [eax - 0x22f4]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 10 dd ff ff               	fld dword ptr [eax - 0x22f0]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 b8 19 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 14 dd ff ff               	fld dword ptr [eax - 0x22ec]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 18 dd ff ff               	fld dword ptr [eax - 0x22e8]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 1c dd ff ff               	fld dword ptr [eax - 0x22e4]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 76 19 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 20 dd ff ff               	fld dword ptr [eax - 0x22e0]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 24 dd ff ff               	fld dword ptr [eax - 0x22dc]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 28 dd ff ff               	fld dword ptr [eax - 0x22d8]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 fe 18 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 30 dd ff ff               	fld qword ptr [eax - 0x22d0]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 30 dd ff ff               	fld qword ptr [eax - 0x22d0]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 38 dd ff ff               	fld qword ptr [eax - 0x22c8]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 a1 18 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 30 dd ff ff               	fld qword ptr [eax - 0x22d0]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 30 dd ff ff               	fld qword ptr [eax - 0x22d0]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 38 dd ff ff               	fld qword ptr [eax - 0x22c8]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 44 18 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 40 dd ff ff               	fld qword ptr [eax - 0x22c0]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 48 dd ff ff               	fld qword ptr [eax - 0x22b8]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 50 dd ff ff               	fld qword ptr [eax - 0x22b0]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 e7 17 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 58 dd ff ff               	fld qword ptr [eax - 0x22a8]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 60 dd ff ff               	fld qword ptr [eax - 0x22a0]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 68 dd ff ff               	fld qword ptr [eax - 0x2298]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 57 17 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 70 dd ff ff               	fld dword ptr [eax - 0x2290]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 74 dd ff ff               	fld dword ptr [eax - 0x228c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 f3 16 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 82 16 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 3f 16 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 10 dc ff ff               	lea eax, [ebx - 0x23f0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 34 dc ff ff               	lea eax, [ebx - 0x23cc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804986f
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 c4 80                        	add esp, -0x80
0x804962f:   e8 39 15 00 00                  	call 0x804ab6d <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 39 00 00               	add edx, 0x39cc
0x804963a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804963d:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049640:   8b 4d 0c                        	mov ecx, dword ptr [ebp + 0xc]
0x8049643:   8b 5d 10                        	mov ebx, dword ptr [ebp + 0x10]
0x8049646:   8b 75 14                        	mov esi, dword ptr [ebp + 0x14]
0x8049649:   8b 7d 1c                        	mov edi, dword ptr [ebp + 0x1c]
0x804964c:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x804964f:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049652:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x8049655:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049658:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x804965b:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804965e:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x8049661:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049664:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049667:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804966a:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x804966d:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049670:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049673:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049676:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049679:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804967c:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x804967f:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049682:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x8049685:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x8049688:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x804968b:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x8049691:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x8049694:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804969a:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x804969d:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x80496a3:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80496a7:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x80496aa:   89 c8                           	mov eax, ecx
0x80496ac:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x80496b0:   89 d8                           	mov eax, ebx
0x80496b2:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x80496b5:   89 f0                           	mov eax, esi
0x80496b7:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496ba:   89 f8                           	mov eax, edi
0x80496bc:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x80496c0:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80496c4:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496c8:   0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x80496cc:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x80496cf:   0f b6 45 9c                     	movzx eax, byte ptr [ebp - 0x64]
0x80496d3:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496d6:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x80496da:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496de:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x80496e2:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496e5:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x80496e9:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x80496ed:   0f b7 45 8c                     	movzx eax, word ptr [ebp - 0x74]
0x80496f1:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496f5:   0f b7 45 88                     	movzx eax, word ptr [ebp - 0x78]
0x80496f9:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x80496fd:   0f b6 45 84                     	movzx eax, byte ptr [ebp - 0x7c]
0x8049701:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x8049704:   0f b6 45 80                     	movzx eax, byte ptr [ebp - 0x80]
0x8049708:   88 45 b8                        	mov byte ptr [ebp - 0x48], al
0x804970b:   0f b7 85 7c ff ff ff            	movzx eax, word ptr [ebp - 0x84]
0x8049712:   66 89 45 b4                     	mov word ptr [ebp - 0x4c], ax
0x8049716:   0f b7 85 78 ff ff ff            	movzx eax, word ptr [ebp - 0x88]
0x804971d:   66 89 45 b0                     	mov word ptr [ebp - 0x50], ax
0x8049721:   0f b7 85 74 ff ff ff            	movzx eax, word ptr [ebp - 0x8c]
0x8049728:   66 89 45 ac                     	mov word ptr [ebp - 0x54], ax
0x804972c:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x8049730:   88 82 24 00 00 00               	mov byte ptr [edx + 0x24], al
0x8049736:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x804973a:   66 89 82 a4 04 00 00            	mov word ptr [edx + 0x4a4], ax
0x8049741:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x8049745:   88 82 25 00 00 00               	mov byte ptr [edx + 0x25], al
0x804974b:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x804974f:   88 82 26 00 00 00               	mov byte ptr [edx + 0x26], al
0x8049755:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x8049758:   89 82 a8 04 00 00               	mov dword ptr [edx + 0x4a8], eax
0x804975e:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x8049762:   66 89 82 28 00 00 00            	mov word ptr [edx + 0x28], ax
0x8049769:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x804976c:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x8049772:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x8049775:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x804977b:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x804977e:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x8049784:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049788:   66 89 82 ac 04 00 00            	mov word ptr [edx + 0x4ac], ax
0x804978f:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049792:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x8049798:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x804979c:   88 82 3c 00 00 00               	mov byte ptr [edx + 0x3c], al
0x80497a2:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x80497a5:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x80497ab:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x80497af:   88 82 44 00 00 00               	mov byte ptr [edx + 0x44], al
0x80497b5:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x80497b9:   66 89 82 46 00 00 00            	mov word ptr [edx + 0x46], ax
0x80497c0:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x80497c3:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x80497c9:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x80497cd:   88 82 4c 00 00 00               	mov byte ptr [edx + 0x4c], al
0x80497d3:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x80497d7:   66 89 82 4e 00 00 00            	mov word ptr [edx + 0x4e], ax
0x80497de:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80497e2:   66 89 82 50 00 00 00            	mov word ptr [edx + 0x50], ax
0x80497e9:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x80497ed:   66 89 82 52 00 00 00            	mov word ptr [edx + 0x52], ax
0x80497f4:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x80497f7:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x80497fd:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x8049801:   88 82 58 00 00 00               	mov byte ptr [edx + 0x58], al
0x8049807:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x804980b:   88 82 59 00 00 00               	mov byte ptr [edx + 0x59], al
0x8049811:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x8049814:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x804981a:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x804981e:   66 89 82 60 00 00 00            	mov word ptr [edx + 0x60], ax
0x8049825:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x8049828:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x804982e:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x8049831:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x8049837:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x804983a:   89 82 6c 00 00 00               	mov dword ptr [edx + 0x6c], eax
0x8049840:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x8049844:   66 89 82 70 00 00 00            	mov word ptr [edx + 0x70], ax
0x804984b:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x804984f:   66 89 82 72 00 00 00            	mov word ptr [edx + 0x72], ax
0x8049856:   8b 85 80 00 00 00               	mov eax, dword ptr [ebp + 0x80]
0x804985c:   89 82 74 00 00 00               	mov dword ptr [edx + 0x74], eax
0x8049862:   b8 00 00 00 00                  	mov eax, 0
0x8049867:   83 ec 80                        	sub esp, -0x80
0x804986a:   5b                              	pop ebx
0x804986b:   5e                              	pop esi
0x804986c:   5f                              	pop edi
0x804986d:   5d                              	pop ebp
0x804986e:   c3                              	ret 
; function: func_1 at 0x804986f -- 0x804a731
0x804986f:   55                              	push ebp
0x8049870:   89 e5                           	mov ebp, esp
0x8049872:   57                              	push edi
0x8049873:   56                              	push esi
0x8049874:   53                              	push ebx
0x8049875:   81 ec 40 01 00 00               	sub esp, 0x140
0x804987b:   e8 e9 12 00 00                  	call 0x804ab69 <__x86.get_pc_thunk.ax>
0x8049880:   05 80 37 00 00                  	add eax, 0x3780
0x8049885:   c6 45 83 48                     	mov byte ptr [ebp - 0x7d], 0x48
0x8049889:   66 c7 45 80 00 00               	mov word ptr [ebp - 0x80], 0
0x804988f:   c6 85 7f ff ff ff 92            	mov byte ptr [ebp - 0x81], 0x92
0x8049896:   c6 45 ef e0                     	mov byte ptr [ebp - 0x11], 0xe0
0x804989a:   c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x80498a1:   66 c7 45 e6 2a ae               	mov word ptr [ebp - 0x1a], 0xae2a
0x80498a7:   c7 45 e0 3e 3b 8d 25            	mov dword ptr [ebp - 0x20], 0x258d3b3e
0x80498ae:   c7 45 a8 08 00 00 00            	mov dword ptr [ebp - 0x58], 8
0x80498b5:   c7 45 a4 67 63 2b 3f            	mov dword ptr [ebp - 0x5c], 0x3f2b6367
0x80498bc:   66 c7 45 de 00 00               	mov word ptr [ebp - 0x22], 0
0x80498c2:   c7 45 d8 09 00 00 00            	mov dword ptr [ebp - 0x28], 9
0x80498c9:   c6 45 a3 49                     	mov byte ptr [ebp - 0x5d], 0x49
0x80498cd:   c7 45 9c 9e 5b e2 d6            	mov dword ptr [ebp - 0x64], 0xd6e25b9e
0x80498d4:   c6 45 d7 05                     	mov byte ptr [ebp - 0x29], 5
0x80498d8:   66 c7 45 9a b8 80               	mov word ptr [ebp - 0x66], 0x80b8
0x80498de:   c7 45 d0 f7 ff ff ff            	mov dword ptr [ebp - 0x30], 0xfffffff7
0x80498e5:   c6 45 cf 88                     	mov byte ptr [ebp - 0x31], 0x88
0x80498e9:   66 c7 45 98 ff ff               	mov word ptr [ebp - 0x68], 0xffff
0x80498ef:   66 c7 45 96 07 00               	mov word ptr [ebp - 0x6a], 7
0x80498f5:   66 c7 45 94 a7 de               	mov word ptr [ebp - 0x6c], 0xdea7
0x80498fb:   c7 45 90 de fc be f9            	mov dword ptr [ebp - 0x70], 0xf9befcde
0x8049902:   c6 45 ce 01                     	mov byte ptr [ebp - 0x32], 1
0x8049906:   c6 45 cd 0a                     	mov byte ptr [ebp - 0x33], 0xa
0x804990a:   c7 45 8c 2d 81 b2 c9            	mov dword ptr [ebp - 0x74], 0xc9b2812d
0x8049911:   66 c7 45 8a d7 5e               	mov word ptr [ebp - 0x76], 0x5ed7
0x8049917:   c7 45 b4 c2 5c 77 69            	mov dword ptr [ebp - 0x4c], 0x69775cc2
0x804991e:   c7 45 f0 ed 01 75 90            	mov dword ptr [ebp - 0x10], 0x907501ed
0x8049925:   c7 45 c8 fc ff ff ff            	mov dword ptr [ebp - 0x38], 0xfffffffc
0x804992c:   66 c7 85 76 ff ff ff ae e0      	mov word ptr [ebp - 0x8a], 0xe0ae
0x8049935:   66 c7 85 74 ff ff ff d4 a2      	mov word ptr [ebp - 0x8c], 0xa2d4
0x804993e:   c7 45 c4 06 00 00 00            	mov dword ptr [ebp - 0x3c], 6
0x8049945:   c7 85 70 ff ff ff a1 42 69 87   	mov dword ptr [ebp - 0x90], 0x876942a1
0x804994f:   c7 45 c0 7a 59 47 d9            	mov dword ptr [ebp - 0x40], 0xd947597a
0x8049956:   c6 85 6f ff ff ff 7c            	mov byte ptr [ebp - 0x91], 0x7c
0x804995d:   66 c7 85 6c ff ff ff 01 00      	mov word ptr [ebp - 0x94], 1
0x8049966:   c7 85 68 ff ff ff 0e 12 1b 55   	mov dword ptr [ebp - 0x98], 0x551b120e
0x8049970:   c6 85 67 ff ff ff 87            	mov byte ptr [ebp - 0x99], 0x87
0x8049977:   c7 45 bc 2e ae 89 db            	mov dword ptr [ebp - 0x44], 0xdb89ae2e
0x804997e:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x8049985:   c7 45 ac 09 00 00 00            	mov dword ptr [ebp - 0x54], 9
0x804998c:   c7 85 60 ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0xa0], 8
0x8049996:   c7 85 5c ff ff ff 67 0b 66 07   	mov dword ptr [ebp - 0xa4], 0x7660b67
0x80499a0:   83 85 70 ff ff ff 01            	add dword ptr [ebp - 0x90], 1
0x80499a7:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x80499ad:   0f b7 c0                        	movzx eax, ax
0x80499b0:   d1 f8                           	sar eax, 1
0x80499b2:   3d 4e f3 00 00                  	cmp eax, 0xf34e
0x80499b7:   66 83 7d 80 00                  	cmp word ptr [ebp - 0x80], 0
0x80499bc:   0f 84 15 0c 00 00               	je 0x804a5d7 <func_1+0xd68>
0x80499c2:   c7 85 4c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xb4], 1
0x80499cc:   c7 85 48 ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0xb8], 6
0x80499d6:   c7 45 b0 00 00 00 00            	mov dword ptr [ebp - 0x50], 0
0x80499dd:   c7 85 78 ff ff ff a1 30 39 50   	mov dword ptr [ebp - 0x88], 0x503930a1
0x80499e7:   c7 85 44 ff ff ff 31 8f 6a e3   	mov dword ptr [ebp - 0xbc], 0xe36a8f31
0x80499f1:   c7 85 40 ff ff ff 56 6a 6d 38   	mov dword ptr [ebp - 0xc0], 0x386d6a56
0x80499fb:   66 c7 85 3e ff ff ff 01 00      	mov word ptr [ebp - 0xc2], 1
0x8049a04:   c6 45 89 b5                     	mov byte ptr [ebp - 0x77], 0xb5
0x8049a08:   66 c7 85 3c ff ff ff 8d 31      	mov word ptr [ebp - 0xc4], 0x318d
0x8049a11:   c7 85 38 ff ff ff b6 37 38 ca   	mov dword ptr [ebp - 0xc8], 0xca3837b6
0x8049a1b:   66 c7 85 36 ff ff ff 01 00      	mov word ptr [ebp - 0xca], 1
0x8049a24:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x8049a2a:   0f b6 55 83                     	movzx edx, byte ptr [ebp - 0x7d]
0x8049a2e:   0f af c2                        	imul eax, edx
0x8049a31:   88 85 7f ff ff ff               	mov byte ptr [ebp - 0x81], al
0x8049a37:   c6 85 7f ff ff ff 0e            	mov byte ptr [ebp - 0x81], 0xe
0x8049a3e:   80 bd 7f ff ff ff 0c            	cmp byte ptr [ebp - 0x81], 0xc
0x8049a45:   0f 86 3e 01 00 00               	jbe 0x8049b89 <func_1+0x31a>
0x8049a4b:   0f be 45 83                     	movsx eax, byte ptr [ebp - 0x7d]
0x8049a4f:   8b 55 c0                        	mov edx, dword ptr [ebp - 0x40]
0x8049a52:   0f b6 d2                        	movzx edx, dl
0x8049a55:   c1 e2 04                        	shl edx, 4
0x8049a58:   39 d0                           	cmp eax, edx
0x8049a5a:   0f 9d c0                        	setge al
0x8049a5d:   88 45 ef                        	mov byte ptr [ebp - 0x11], al
0x8049a60:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x8049a64:   0f be c0                        	movsx eax, al
0x8049a67:   09 45 e8                        	or dword ptr [ebp - 0x18], eax
0x8049a6a:   0f bf 85 74 ff ff ff            	movsx eax, word ptr [ebp - 0x8c]
0x8049a71:   0f b7 95 76 ff ff ff            	movzx edx, word ptr [ebp - 0x8a]
0x8049a78:   0f b7 4d 8a                     	movzx ecx, word ptr [ebp - 0x76]
0x8049a7c:   0f be 75 cd                     	movsx esi, byte ptr [ebp - 0x33]
0x8049a80:   0f be 7d ce                     	movsx edi, byte ptr [ebp - 0x32]
0x8049a84:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x8049a8a:   0f b7 5d 94                     	movzx ebx, word ptr [ebp - 0x6c]
0x8049a8e:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x8049a94:   0f bf 7d 96                     	movsx edi, word ptr [ebp - 0x6a]
0x8049a98:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x8049a9e:   0f bf 5d 98                     	movsx ebx, word ptr [ebp - 0x68]
0x8049aa2:   89 9d d4 fe ff ff               	mov dword ptr [ebp - 0x12c], ebx
0x8049aa8:   0f b6 7d cf                     	movzx edi, byte ptr [ebp - 0x31]
0x8049aac:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x8049ab2:   0f b7 5d 9a                     	movzx ebx, word ptr [ebp - 0x66]
0x8049ab6:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x8049abc:   0f be 7d d7                     	movsx edi, byte ptr [ebp - 0x29]
0x8049ac0:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x8049ac6:   0f be 5d a3                     	movsx ebx, byte ptr [ebp - 0x5d]
0x8049aca:   89 9d c4 fe ff ff               	mov dword ptr [ebp - 0x13c], ebx
0x8049ad0:   0f b7 7d de                     	movzx edi, word ptr [ebp - 0x22]
0x8049ad4:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x8049ada:   0f bf 5d e6                     	movsx ebx, word ptr [ebp - 0x1a]
0x8049ade:   89 9d bc fe ff ff               	mov dword ptr [ebp - 0x144], ebx
0x8049ae4:   0f be 7d ef                     	movsx edi, byte ptr [ebp - 0x11]
0x8049ae8:   89 bd b8 fe ff ff               	mov dword ptr [ebp - 0x148], edi
0x8049aee:   0f b6 9d 7f ff ff ff            	movzx ebx, byte ptr [ebp - 0x81]
0x8049af5:   89 9d b4 fe ff ff               	mov dword ptr [ebp - 0x14c], ebx
0x8049afb:   0f b7 7d 80                     	movzx edi, word ptr [ebp - 0x80]
0x8049aff:   0f be 5d 83                     	movsx ebx, byte ptr [ebp - 0x7d]
0x8049b03:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049b06:   50                              	push eax
0x8049b07:   52                              	push edx
0x8049b08:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049b0b:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049b0e:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049b11:   51                              	push ecx
0x8049b12:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049b15:   56                              	push esi
0x8049b16:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x8049b1c:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049b1f:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x8049b25:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x8049b2b:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x8049b31:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x8049b37:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049b3a:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x8049b40:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x8049b46:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x8049b49:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x8049b4f:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049b52:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x8049b58:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x8049b5b:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x8049b5e:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049b61:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x8049b67:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049b6a:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x8049b70:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x8049b76:   57                              	push edi
0x8049b77:   53                              	push ebx
0x8049b78:   e8 a9 fa ff ff                  	call 0x8049626 <set_var>
0x8049b7d:   83 c4 7c                        	add esp, 0x7c
0x8049b80:   0f be 45 83                     	movsx eax, byte ptr [ebp - 0x7d]
0x8049b84:   e9 a0 0b 00 00                  	jmp 0x804a729 <func_1+0xeba>
0x8049b89:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x8049b90:   0f 84 03 01 00 00               	je 0x8049c99 <func_1+0x42a>
0x8049b96:   66 c7 85 fe fe ff ff 00 00      	mov word ptr [ebp - 0x102], 0
0x8049b9f:   66 c7 85 fc fe ff ff ff ff      	mov word ptr [ebp - 0x104], 0xffff
0x8049ba8:   c6 85 fb fe ff ff a6            	mov byte ptr [ebp - 0x105], 0xa6
0x8049baf:   c7 85 f4 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x10c], 0xffffffff
0x8049bb9:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x8049bbe:   ba 00 00 00 00                  	mov edx, 0
0x8049bc3:   66 f7 b5 fe fe ff ff            	div word ptr [ebp - 0x102]
0x8049bca:   89 d0                           	mov eax, edx
0x8049bcc:   66 c1 f8 0e                     	sar ax, 0xe
0x8049bd0:   66 85 c0                        	test ax, ax
0x8049bd3:   74 38                           	je 0x8049c0d <func_1+0x39e>
0x8049bd5:   0f b6 85 7f ff ff ff            	movzx eax, byte ptr [ebp - 0x81]
0x8049bdc:   32 45 83                        	xor al, byte ptr [ebp - 0x7d]
0x8049bdf:   88 85 7f ff ff ff               	mov byte ptr [ebp - 0x81], al
0x8049be5:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049be9:   ba 6a 00 00 00                  	mov edx, 0x6a
0x8049bee:   29 c2                           	sub edx, eax
0x8049bf0:   89 d0                           	mov eax, edx
0x8049bf2:   0f be d0                        	movsx edx, al
0x8049bf5:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049bf9:   0f be c0                        	movsx eax, al
0x8049bfc:   89 c1                           	mov ecx, eax
0x8049bfe:   d3 fa                           	sar edx, cl
0x8049c00:   89 d0                           	mov eax, edx
0x8049c02:   85 c0                           	test eax, eax
0x8049c04:   74 07                           	je 0x8049c0d <func_1+0x39e>
0x8049c06:   b8 01 00 00 00                  	mov eax, 1
0x8049c0b:   eb 05                           	jmp 0x8049c12 <func_1+0x3a3>
0x8049c0d:   b8 00 00 00 00                  	mov eax, 0
0x8049c12:   66 09 85 fc fe ff ff            	or word ptr [ebp - 0x104], ax
0x8049c19:   0f b7 55 80                     	movzx edx, word ptr [ebp - 0x80]
0x8049c1d:   0f be 45 83                     	movsx eax, byte ptr [ebp - 0x7d]
0x8049c21:   39 c2                           	cmp edx, eax
0x8049c23:   0f 95 c0                        	setne al
0x8049c26:   0f b6 c0                        	movzx eax, al
0x8049c29:   89 c1                           	mov ecx, eax
0x8049c2b:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x8049c31:   83 c8 51                        	or eax, 0x51
0x8049c34:   89 c2                           	mov edx, eax
0x8049c36:   89 c8                           	mov eax, ecx
0x8049c38:   0f af c2                        	imul eax, edx
0x8049c3b:   83 c0 01                        	add eax, 1
0x8049c3e:   0f be c0                        	movsx eax, al
0x8049c41:   0f b6 95 7f ff ff ff            	movzx edx, byte ptr [ebp - 0x81]
0x8049c48:   0f be f2                        	movsx esi, dl
0x8049c4b:   99                              	cdq 
0x8049c4c:   f7 fe                           	idiv esi
0x8049c4e:   85 c0                           	test eax, eax
0x8049c50:   75 0a                           	jne 0x8049c5c <func_1+0x3ed>
0x8049c52:   66 83 bd fe fe ff ff 00         	cmp word ptr [ebp - 0x102], 0
0x8049c5a:   74 07                           	je 0x8049c63 <func_1+0x3f4>
0x8049c5c:   b8 01 00 00 00                  	mov eax, 1
0x8049c61:   eb 05                           	jmp 0x8049c68 <func_1+0x3f9>
0x8049c63:   b8 00 00 00 00                  	mov eax, 0
0x8049c68:   89 c2                           	mov edx, eax
0x8049c6a:   0f b7 45 80                     	movzx eax, word ptr [ebp - 0x80]
0x8049c6e:   29 d0                           	sub eax, edx
0x8049c70:   0f b7 d0                        	movzx edx, ax
0x8049c73:   66 0f be 45 ef                  	movsx ax, byte ptr [ebp - 0x11]
0x8049c78:   0f b7 c0                        	movzx eax, ax
0x8049c7b:   29 c2                           	sub edx, eax
0x8049c7d:   89 d0                           	mov eax, edx
0x8049c7f:   09 45 e0                        	or dword ptr [ebp - 0x20], eax
0x8049c82:   66 83 45 de 01                  	add word ptr [ebp - 0x22], 1
0x8049c87:   0f b6 85 fb fe ff ff            	movzx eax, byte ptr [ebp - 0x105]
0x8049c8e:   89 85 f4 fe ff ff               	mov dword ptr [ebp - 0x10c], eax
0x8049c94:   e9 94 08 00 00                  	jmp 0x804a52d <func_1+0xcbe>
0x8049c99:   66 c7 85 34 ff ff ff 6a bb      	mov word ptr [ebp - 0xcc], 0xbb6a
0x8049ca2:   c6 85 33 ff ff ff f9            	mov byte ptr [ebp - 0xcd], 0xf9
0x8049ca9:   c7 85 2c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xd4], 0xffffffff
0x8049cb3:   c7 85 28 ff ff ff ef 93 1a 90   	mov dword ptr [ebp - 0xd8], 0x901a93ef
0x8049cbd:   c7 45 84 3f 39 36 d8            	mov dword ptr [ebp - 0x7c], 0xd836393f
0x8049cc4:   66 c7 85 26 ff ff ff ff ff      	mov word ptr [ebp - 0xda], 0xffff
0x8049ccd:   66 83 7d de 00                  	cmp word ptr [ebp - 0x22], 0
0x8049cd2:   0f b7 95 34 ff ff ff            	movzx edx, word ptr [ebp - 0xcc]
0x8049cd9:   0f be 85 6f ff ff ff            	movsx eax, byte ptr [ebp - 0x91]
0x8049ce0:   21 d0                           	and eax, edx
0x8049ce2:   8b 4d e0                        	mov ecx, dword ptr [ebp - 0x20]
0x8049ce5:   ba 00 00 00 00                  	mov edx, 0
0x8049cea:   f7 f1                           	div ecx
0x8049cec:   8b 85 48 ff ff ff               	mov eax, dword ptr [ebp - 0xb8]
0x8049cf2:   39 c2                           	cmp edx, eax
0x8049cf4:   66 c7 85 24 ff ff ff c1 70      	mov word ptr [ebp - 0xdc], 0x70c1
0x8049cfd:   c7 85 20 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe0], 0
0x8049d07:   c7 85 1c ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0xe4], 0xfffffffe
0x8049d11:   66 c7 85 1a ff ff ff 61 5d      	mov word ptr [ebp - 0xe6], 0x5d61
0x8049d1a:   83 45 d8 01                     	add dword ptr [ebp - 0x28], 1
0x8049d1e:   0f b7 95 24 ff ff ff            	movzx edx, word ptr [ebp - 0xdc]
0x8049d25:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x8049d2b:   0f b7 c0                        	movzx eax, ax
0x8049d2e:   bb 15 cc 00 00                  	mov ebx, 0xcc15
0x8049d33:   89 c1                           	mov ecx, eax
0x8049d35:   d3 e3                           	shl ebx, cl
0x8049d37:   89 d8                           	mov eax, ebx
0x8049d39:   89 c1                           	mov ecx, eax
0x8049d3b:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049d3e:   31 c8                           	xor eax, ecx
0x8049d40:   0f b6 c8                        	movzx ecx, al
0x8049d43:   0f b6 85 33 ff ff ff            	movzx eax, byte ptr [ebp - 0xcd]
0x8049d4a:   0f af c1                        	imul eax, ecx
0x8049d4d:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049d50:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x8049d56:   84 c0                           	test al, al
0x8049d58:   0f 9e c0                        	setle al
0x8049d5b:   89 c1                           	mov ecx, eax
0x8049d5d:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x8049d63:   29 c1                           	sub ecx, eax
0x8049d65:   89 c8                           	mov eax, ecx
0x8049d67:   d0 f8                           	sar al, 1
0x8049d69:   83 e0 d8                        	and eax, 0xffffffd8
0x8049d6c:   0f be c0                        	movsx eax, al
0x8049d6f:   89 85 20 ff ff ff               	mov dword ptr [ebp - 0xe0], eax
0x8049d75:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x8049d7b:   0b 45 e0                        	or eax, dword ptr [ebp - 0x20]
0x8049d7e:   85 c0                           	test eax, eax
0x8049d80:   0f 94 c0                        	sete al
0x8049d83:   88 45 ef                        	mov byte ptr [ebp - 0x11], al
0x8049d86:   0f be 45 ef                     	movsx eax, byte ptr [ebp - 0x11]
0x8049d8a:   39 45 a8                        	cmp dword ptr [ebp - 0x58], eax
0x8049d8d:   7f 06                           	jg 0x8049d95 <func_1+0x526>
0x8049d8f:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x8049d93:   74 07                           	je 0x8049d9c <func_1+0x52d>
0x8049d95:   b8 01 00 00 00                  	mov eax, 1
0x8049d9a:   eb 05                           	jmp 0x8049da1 <func_1+0x532>
0x8049d9c:   b8 00 00 00 00                  	mov eax, 0
0x8049da1:   39 d0                           	cmp eax, edx
0x8049da3:   0f 94 c0                        	sete al
0x8049da6:   0f b6 c0                        	movzx eax, al
0x8049da9:   8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x8049dac:   0f b7 f2                        	movzx esi, dx
0x8049daf:   99                              	cdq 
0x8049db0:   f7 fe                           	idiv esi
0x8049db2:   89 c2                           	mov edx, eax
0x8049db4:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x8049db8:   39 c2                           	cmp edx, eax
0x8049dba:   74 07                           	je 0x8049dc3 <func_1+0x554>
0x8049dbc:   b8 01 00 00 00                  	mov eax, 1
0x8049dc1:   eb 05                           	jmp 0x8049dc8 <func_1+0x559>
0x8049dc3:   b8 00 00 00 00                  	mov eax, 0
0x8049dc8:   3b 45 c0                        	cmp eax, dword ptr [ebp - 0x40]
0x8049dcb:   7f 07                           	jg 0x8049dd4 <func_1+0x565>
0x8049dcd:   83 bd 2c ff ff ff 00            	cmp dword ptr [ebp - 0xd4], 0
0x8049dd4:   0f b7 85 24 ff ff ff            	movzx eax, word ptr [ebp - 0xdc]
0x8049ddb:   0f b6 d8                        	movzx ebx, al
0x8049dde:   0f b7 85 34 ff ff ff            	movzx eax, word ptr [ebp - 0xcc]
0x8049de5:   39 85 4c ff ff ff               	cmp dword ptr [ebp - 0xb4], eax
0x8049deb:   0f 92 c0                        	setb al
0x8049dee:   0f b6 c0                        	movzx eax, al
0x8049df1:   39 85 1c ff ff ff               	cmp dword ptr [ebp - 0xe4], eax
0x8049df7:   0f 95 c0                        	setne al
0x8049dfa:   0f b6 c0                        	movzx eax, al
0x8049dfd:   0f b7 95 24 ff ff ff            	movzx edx, word ptr [ebp - 0xdc]
0x8049e04:   0f bf ca                        	movsx ecx, dx
0x8049e07:   99                              	cdq 
0x8049e08:   f7 f9                           	idiv ecx
0x8049e0a:   89 d0                           	mov eax, edx
0x8049e0c:   89 c2                           	mov edx, eax
0x8049e0e:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049e11:   21 d0                           	and eax, edx
0x8049e13:   c1 e0 07                        	shl eax, 7
0x8049e16:   0f b6 c0                        	movzx eax, al
0x8049e19:   89 c1                           	mov ecx, eax
0x8049e1b:   d3 e3                           	shl ebx, cl
0x8049e1d:   89 d8                           	mov eax, ebx
0x8049e1f:   09 45 b0                        	or dword ptr [ebp - 0x50], eax
0x8049e22:   66 83 ad 1a ff ff ff 01         	sub word ptr [ebp - 0xe6], 1
0x8049e2a:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049e2d:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x8049e30:   c6 45 cf 1c                     	mov byte ptr [ebp - 0x31], 0x1c
0x8049e34:   e9 ab 04 00 00                  	jmp 0x804a2e4 <func_1+0xa75>
0x8049e39:   66 c7 85 12 ff ff ff d7 96      	mov word ptr [ebp - 0xee], 0x96d7
0x8049e42:   83 75 84 07                     	xor dword ptr [ebp - 0x7c], 7
0x8049e46:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049e49:   89 c2                           	mov edx, eax
0x8049e4b:   0f b6 45 89                     	movzx eax, byte ptr [ebp - 0x77]
0x8049e4f:   21 d0                           	and eax, edx
0x8049e51:   88 45 89                        	mov byte ptr [ebp - 0x77], al
0x8049e54:   0f b6 85 33 ff ff ff            	movzx eax, byte ptr [ebp - 0xcd]
0x8049e5b:   89 85 28 ff ff ff               	mov dword ptr [ebp - 0xd8], eax
0x8049e61:   c6 45 89 02                     	mov byte ptr [ebp - 0x77], 2
0x8049e65:   eb 15                           	jmp 0x8049e7c <func_1+0x60d>
0x8049e67:   c7 85 00 ff ff ff 9b b6 3c b2   	mov dword ptr [ebp - 0x100], 0xb23cb69b
0x8049e71:   83 ad 00 ff ff ff 01            	sub dword ptr [ebp - 0x100], 1
0x8049e78:   80 45 89 02                     	add byte ptr [ebp - 0x77], 2
0x8049e7c:   80 7d 89 1b                     	cmp byte ptr [ebp - 0x77], 0x1b
0x8049e80:   77 e5                           	ja 0x8049e67 <func_1+0x5f8>
0x8049e82:   66 c7 45 e6 00 00               	mov word ptr [ebp - 0x1a], 0
0x8049e88:   e9 ed 02 00 00                  	jmp 0x804a17a <func_1+0x90b>
0x8049e8d:   c7 85 0c ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xf4], 0xfffffffc
0x8049e97:   f7 95 78 ff ff ff               	not dword ptr [ebp - 0x88]
0x8049e9d:   0f be 45 cd                     	movsx eax, byte ptr [ebp - 0x33]
0x8049ea1:   39 85 78 ff ff ff               	cmp dword ptr [ebp - 0x88], eax
0x8049ea7:   0f 9d c0                        	setge al
0x8049eaa:   0f b6 c0                        	movzx eax, al
0x8049ead:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x8049eb0:   0f 84 83 00 00 00               	je 0x8049f39 <func_1+0x6ca>
0x8049eb6:   c7 85 08 ff ff ff 1a dc c6 63   	mov dword ptr [ebp - 0xf8], 0x63c6dc1a
0x8049ec0:   80 bd 7f ff ff ff 00            	cmp byte ptr [ebp - 0x81], 0
0x8049ec7:   0f 85 ba 02 00 00               	jne 0x804a187 <func_1+0x918>
0x8049ecd:   83 bd 08 ff ff ff 00            	cmp dword ptr [ebp - 0xf8], 0
0x8049ed4:   0f 85 b0 02 00 00               	jne 0x804a18a <func_1+0x91b>
0x8049eda:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x8049ede:   0f 85 a9 02 00 00               	jne 0x804a18d <func_1+0x91e>
0x8049ee4:   0f b7 45 9a                     	movzx eax, word ptr [ebp - 0x66]
0x8049ee8:   39 85 38 ff ff ff               	cmp dword ptr [ebp - 0xc8], eax
0x8049eee:   0f 95 c0                        	setne al
0x8049ef1:   0f b6 c0                        	movzx eax, al
0x8049ef4:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x8049ef7:   0f b7 85 12 ff ff ff            	movzx eax, word ptr [ebp - 0xee]
0x8049efe:   f7 d8                           	neg eax
0x8049f00:   0f b7 c0                        	movzx eax, ax
0x8049f03:   c1 e0 04                        	shl eax, 4
0x8049f06:   89 c2                           	mov edx, eax
0x8049f08:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x8049f0f:   39 c2                           	cmp edx, eax
0x8049f11:   0f 9f c0                        	setg al
0x8049f14:   0f b6 c0                        	movzx eax, al
0x8049f17:   09 45 d0                        	or dword ptr [ebp - 0x30], eax
0x8049f1a:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x8049f20:   0f bf d0                        	movsx edx, ax
0x8049f23:   0f b6 85 7f ff ff ff            	movzx eax, byte ptr [ebp - 0x81]
0x8049f2a:   01 d0                           	add eax, edx
0x8049f2c:   85 c0                           	test eax, eax
0x8049f2e:   0f 84 b1 01 00 00               	je 0x804a0e5 <func_1+0x876>
0x8049f34:   e9 2c 01 00 00                  	jmp 0x804a065 <func_1+0x7f6>
0x8049f39:   0f b7 45 8a                     	movzx eax, word ptr [ebp - 0x76]
0x8049f3d:   83 c0 01                        	add eax, 1
0x8049f40:   66 89 45 8a                     	mov word ptr [ebp - 0x76], ax
0x8049f44:   0f bf 85 74 ff ff ff            	movsx eax, word ptr [ebp - 0x8c]
0x8049f4b:   0f b7 95 76 ff ff ff            	movzx edx, word ptr [ebp - 0x8a]
0x8049f52:   0f b7 4d 8a                     	movzx ecx, word ptr [ebp - 0x76]
0x8049f56:   0f be 75 cd                     	movsx esi, byte ptr [ebp - 0x33]
0x8049f5a:   0f be 7d ce                     	movsx edi, byte ptr [ebp - 0x32]
0x8049f5e:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x8049f64:   0f b7 5d 94                     	movzx ebx, word ptr [ebp - 0x6c]
0x8049f68:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x8049f6e:   0f bf 7d 96                     	movsx edi, word ptr [ebp - 0x6a]
0x8049f72:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x8049f78:   0f bf 5d 98                     	movsx ebx, word ptr [ebp - 0x68]
0x8049f7c:   89 9d d4 fe ff ff               	mov dword ptr [ebp - 0x12c], ebx
0x8049f82:   0f b6 7d cf                     	movzx edi, byte ptr [ebp - 0x31]
0x8049f86:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x8049f8c:   0f b7 5d 9a                     	movzx ebx, word ptr [ebp - 0x66]
0x8049f90:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x8049f96:   0f be 7d d7                     	movsx edi, byte ptr [ebp - 0x29]
0x8049f9a:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x8049fa0:   0f be 5d a3                     	movsx ebx, byte ptr [ebp - 0x5d]
0x8049fa4:   89 9d c4 fe ff ff               	mov dword ptr [ebp - 0x13c], ebx
0x8049faa:   0f b7 7d de                     	movzx edi, word ptr [ebp - 0x22]
0x8049fae:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x8049fb4:   0f bf 5d e6                     	movsx ebx, word ptr [ebp - 0x1a]
0x8049fb8:   89 9d bc fe ff ff               	mov dword ptr [ebp - 0x144], ebx
0x8049fbe:   0f be 7d ef                     	movsx edi, byte ptr [ebp - 0x11]
0x8049fc2:   89 bd b8 fe ff ff               	mov dword ptr [ebp - 0x148], edi
0x8049fc8:   0f b6 9d 7f ff ff ff            	movzx ebx, byte ptr [ebp - 0x81]
0x8049fcf:   89 9d b4 fe ff ff               	mov dword ptr [ebp - 0x14c], ebx
0x8049fd5:   0f b7 7d 80                     	movzx edi, word ptr [ebp - 0x80]
0x8049fd9:   0f be 5d 83                     	movsx ebx, byte ptr [ebp - 0x7d]
0x8049fdd:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049fe0:   50                              	push eax
0x8049fe1:   52                              	push edx
0x8049fe2:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049fe5:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049fe8:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049feb:   51                              	push ecx
0x8049fec:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049fef:   56                              	push esi
0x8049ff0:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x8049ff6:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049ff9:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x8049fff:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a005:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a00b:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a011:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a014:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a01a:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a020:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a023:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a029:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a02c:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a032:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a035:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a038:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a03b:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a041:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a044:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a04a:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a050:   57                              	push edi
0x804a051:   53                              	push ebx
0x804a052:   e8 cf f5 ff ff                  	call 0x8049626 <set_var>
0x804a057:   83 c4 7c                        	add esp, 0x7c
0x804a05a:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x804a060:   e9 c4 06 00 00                  	jmp 0x804a729 <func_1+0xeba>
0x804a065:   c6 85 06 ff ff ff fd            	mov byte ptr [ebp - 0xfa], 0xfd
0x804a06c:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804a070:   74 05                           	je 0x804a077 <func_1+0x808>
0x804a072:   e9 ad f9 ff ff                  	jmp 0x8049a24 <func_1+0x1b5>
0x804a077:   0f be 95 6f ff ff ff            	movsx edx, byte ptr [ebp - 0x91]
0x804a07e:   0f b7 8d 12 ff ff ff            	movzx ecx, word ptr [ebp - 0xee]
0x804a085:   0f b6 85 06 ff ff ff            	movzx eax, byte ptr [ebp - 0xfa]
0x804a08c:   21 c8                           	and eax, ecx
0x804a08e:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a091:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x804a095:   75 06                           	jne 0x804a09d <func_1+0x82e>
0x804a097:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x804a09b:   74 07                           	je 0x804a0a4 <func_1+0x835>
0x804a09d:   b8 01 00 00 00                  	mov eax, 1
0x804a0a2:   eb 05                           	jmp 0x804a0a9 <func_1+0x83a>
0x804a0a4:   b8 00 00 00 00                  	mov eax, 0
0x804a0a9:   0f b6 c0                        	movzx eax, al
0x804a0ac:   bb 03 00 00 00                  	mov ebx, 3
0x804a0b1:   89 c1                           	mov ecx, eax
0x804a0b3:   d3 e3                           	shl ebx, cl
0x804a0b5:   89 d8                           	mov eax, ebx
0x804a0b7:   0f be c0                        	movsx eax, al
0x804a0ba:   29 c2                           	sub edx, eax
0x804a0bc:   0f b6 85 7f ff ff ff            	movzx eax, byte ptr [ebp - 0x81]
0x804a0c3:   39 c2                           	cmp edx, eax
0x804a0c5:   0f 94 c0                        	sete al
0x804a0c8:   0f b6 d0                        	movzx edx, al
0x804a0cb:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a0ce:   0f b6 c0                        	movzx eax, al
0x804a0d1:   01 d0                           	add eax, edx
0x804a0d3:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a0d6:   80 7d d7 00                     	cmp byte ptr [ebp - 0x29], 0
0x804a0da:   0f 84 8f 00 00 00               	je 0x804a16f <func_1+0x900>
0x804a0e0:   e9 3f f9 ff ff                  	jmp 0x8049a24 <func_1+0x1b5>
0x804a0e5:   c6 85 07 ff ff ff 01            	mov byte ptr [ebp - 0xf9], 1
0x804a0ec:   66 83 45 80 01                  	add word ptr [ebp - 0x80], 1
0x804a0f1:   0f b7 45 80                     	movzx eax, word ptr [ebp - 0x80]
0x804a0f5:   0f b7 c0                        	movzx eax, ax
0x804a0f8:   31 45 b4                        	xor dword ptr [ebp - 0x4c], eax
0x804a0fb:   83 7d b4 00                     	cmp dword ptr [ebp - 0x4c], 0
0x804a0ff:   74 44                           	je 0x804a145 <func_1+0x8d6>
0x804a101:   0f b6 85 7f ff ff ff            	movzx eax, byte ptr [ebp - 0x81]
0x804a108:   39 45 b4                        	cmp dword ptr [ebp - 0x4c], eax
0x804a10b:   73 10                           	jae 0x804a11d <func_1+0x8ae>
0x804a10d:   83 bd 0c ff ff ff 00            	cmp dword ptr [ebp - 0xf4], 0
0x804a114:   74 07                           	je 0x804a11d <func_1+0x8ae>
0x804a116:   b8 01 00 00 00                  	mov eax, 1
0x804a11b:   eb 05                           	jmp 0x804a122 <func_1+0x8b3>
0x804a11d:   b8 00 00 00 00                  	mov eax, 0
0x804a122:   0f be d0                        	movsx edx, al
0x804a125:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x804a12b:   0f be c0                        	movsx eax, al
0x804a12e:   29 c2                           	sub edx, eax
0x804a130:   89 d0                           	mov eax, edx
0x804a132:   0b 85 0c ff ff ff               	or eax, dword ptr [ebp - 0xf4]
0x804a138:   89 c2                           	mov edx, eax
0x804a13a:   0f be 85 6f ff ff ff            	movsx eax, byte ptr [ebp - 0x91]
0x804a141:   21 d0                           	and eax, edx
0x804a143:   85 c0                           	test eax, eax
0x804a145:   0f b7 45 9a                     	movzx eax, word ptr [ebp - 0x66]
0x804a149:   89 c2                           	mov edx, eax
0x804a14b:   0f b7 85 12 ff ff ff            	movzx eax, word ptr [ebp - 0xee]
0x804a152:   01 d0                           	add eax, edx
0x804a154:   0f be d0                        	movsx edx, al
0x804a157:   0f be 45 cd                     	movsx eax, byte ptr [ebp - 0x33]
0x804a15b:   0f af c2                        	imul eax, edx
0x804a15e:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a161:   0f bf 45 96                     	movsx eax, word ptr [ebp - 0x6a]
0x804a165:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a168:   80 bd 07 ff ff ff 00            	cmp byte ptr [ebp - 0xf9], 0
0x804a16f:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a173:   83 c0 01                        	add eax, 1
0x804a176:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x804a17a:   66 83 7d e6 1a                  	cmp word ptr [ebp - 0x1a], 0x1a
0x804a17f:   0f 85 08 fd ff ff               	jne 0x8049e8d <func_1+0x61e>
0x804a185:   eb 07                           	jmp 0x804a18e <func_1+0x91f>
0x804a187:   90                              	nop 
0x804a188:   eb 04                           	jmp 0x804a18e <func_1+0x91f>
0x804a18a:   90                              	nop 
0x804a18b:   eb 01                           	jmp 0x804a18e <func_1+0x91f>
0x804a18d:   90                              	nop 
0x804a18e:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x804a195:   0f be d0                        	movsx edx, al
0x804a198:   0f b7 85 12 ff ff ff            	movzx eax, word ptr [ebp - 0xee]
0x804a19f:   89 c3                           	mov ebx, eax
0x804a1a1:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x804a1a8:   75 09                           	jne 0x804a1b3 <func_1+0x944>
0x804a1aa:   80 bd 6f ff ff ff 00            	cmp byte ptr [ebp - 0x91], 0
0x804a1b1:   74 06                           	je 0x804a1b9 <func_1+0x94a>
0x804a1b3:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x804a1b7:   75 09                           	jne 0x804a1c2 <func_1+0x953>
0x804a1b9:   80 bd 7f ff ff ff 00            	cmp byte ptr [ebp - 0x81], 0
0x804a1c0:   74 10                           	je 0x804a1d2 <func_1+0x963>
0x804a1c2:   83 bd 48 ff ff ff 00            	cmp dword ptr [ebp - 0xb8], 0
0x804a1c9:   74 07                           	je 0x804a1d2 <func_1+0x963>
0x804a1cb:   b8 01 00 00 00                  	mov eax, 1
0x804a1d0:   eb 05                           	jmp 0x804a1d7 <func_1+0x968>
0x804a1d2:   b8 00 00 00 00                  	mov eax, 0
0x804a1d7:   b9 00 d4 09 c8                  	mov ecx, 0xc809d400
0x804a1dc:   29 c1                           	sub ecx, eax
0x804a1de:   89 c8                           	mov eax, ecx
0x804a1e0:   25 ca 00 00 00                  	and eax, 0xca
0x804a1e5:   85 c0                           	test eax, eax
0x804a1e7:   75 07                           	jne 0x804a1f0 <func_1+0x981>
0x804a1e9:   66 83 7d 9a 00                  	cmp word ptr [ebp - 0x66], 0
0x804a1ee:   74 07                           	je 0x804a1f7 <func_1+0x988>
0x804a1f0:   b8 01 00 00 00                  	mov eax, 1
0x804a1f5:   eb 05                           	jmp 0x804a1fc <func_1+0x98d>
0x804a1f7:   b8 00 00 00 00                  	mov eax, 0
0x804a1fc:   66 c1 e8 04                     	shr ax, 4
0x804a200:   88 85 e0 fe ff ff               	mov byte ptr [ebp - 0x120], al
0x804a206:   0f b7 85 12 ff ff ff            	movzx eax, word ptr [ebp - 0xee]
0x804a20d:   89 c1                           	mov ecx, eax
0x804a20f:   0f b6 85 e0 fe ff ff            	movzx eax, byte ptr [ebp - 0x120]
0x804a216:   0f af c1                        	imul eax, ecx
0x804a219:   89 c1                           	mov ecx, eax
0x804a21b:   89 d8                           	mov eax, ebx
0x804a21d:   0f af c1                        	imul eax, ecx
0x804a220:   0f be c8                        	movsx ecx, al
0x804a223:   89 d0                           	mov eax, edx
0x804a225:   99                              	cdq 
0x804a226:   f7 f9                           	idiv ecx
0x804a228:   89 d0                           	mov eax, edx
0x804a22a:   0f be c0                        	movsx eax, al
0x804a22d:   0f be 75 cd                     	movsx esi, byte ptr [ebp - 0x33]
0x804a231:   99                              	cdq 
0x804a232:   f7 fe                           	idiv esi
0x804a234:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x804a237:   0f 9d c0                        	setge al
0x804a23a:   0f b6 c0                        	movzx eax, al
0x804a23d:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a240:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a243:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a246:   0f be 55 a3                     	movsx edx, byte ptr [ebp - 0x5d]
0x804a24a:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a24d:   30 45 cd                        	xor byte ptr [ebp - 0x33], al
0x804a250:   80 7d cd 00                     	cmp byte ptr [ebp - 0x33], 0
0x804a254:   74 15                           	je 0x804a26b <func_1+0x9fc>
0x804a256:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a259:   83 f0 52                        	xor eax, 0x52
0x804a25c:   39 85 44 ff ff ff               	cmp dword ptr [ebp - 0xbc], eax
0x804a262:   72 07                           	jb 0x804a26b <func_1+0x9fc>
0x804a264:   b8 01 00 00 00                  	mov eax, 1
0x804a269:   eb 05                           	jmp 0x804a270 <func_1+0xa01>
0x804a26b:   b8 00 00 00 00                  	mov eax, 0
0x804a270:   66 89 45 80                     	mov word ptr [ebp - 0x80], ax
0x804a274:   0f b7 85 12 ff ff ff            	movzx eax, word ptr [ebp - 0xee]
0x804a27b:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804a27e:   81 7d 84 23 75 00 00            	cmp dword ptr [ebp - 0x7c], 0x7523
0x804a285:   0f 9e c0                        	setle al
0x804a288:   0f b6 c0                        	movzx eax, al
0x804a28b:   39 85 68 ff ff ff               	cmp dword ptr [ebp - 0x98], eax
0x804a291:   0f 9e c0                        	setle al
0x804a294:   0f b6 c0                        	movzx eax, al
0x804a297:   8b 4d f0                        	mov ecx, dword ptr [ebp - 0x10]
0x804a29a:   09 c8                           	or eax, ecx
0x804a29c:   0f b7 c8                        	movzx ecx, ax
0x804a29f:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x804a2a5:   0f b7 c0                        	movzx eax, ax
0x804a2a8:   01 c8                           	add eax, ecx
0x804a2aa:   83 f8 ff                        	cmp eax, -1
0x804a2ad:   0f 9c c0                        	setl al
0x804a2b0:   0f b6 c0                        	movzx eax, al
0x804a2b3:   31 d0                           	xor eax, edx
0x804a2b5:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804a2b8:   7f 07                           	jg 0x804a2c1 <func_1+0xa52>
0x804a2ba:   ba 24 00 00 00                  	mov edx, 0x24
0x804a2bf:   eb 05                           	jmp 0x804a2c6 <func_1+0xa57>
0x804a2c1:   ba 23 00 00 00                  	mov edx, 0x23
0x804a2c6:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a2c9:   0f b6 c0                        	movzx eax, al
0x804a2cc:   0f af c2                        	imul eax, edx
0x804a2cf:   66 89 85 36 ff ff ff            	mov word ptr [ebp - 0xca], ax
0x804a2d6:   0f b7 85 36 ff ff ff            	movzx eax, word ptr [ebp - 0xca]
0x804a2dd:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a2e0:   80 6d cf 08                     	sub byte ptr [ebp - 0x31], 8
0x804a2e4:   80 7d cf 09                     	cmp byte ptr [ebp - 0x31], 9
0x804a2e8:   0f 87 4b fb ff ff               	ja 0x8049e39 <func_1+0x5ca>
0x804a2ee:   c6 45 ce f0                     	mov byte ptr [ebp - 0x32], 0xf0
0x804a2f2:   e9 2c 02 00 00                  	jmp 0x804a523 <func_1+0xcb4>
0x804a2f7:   66 c7 85 18 ff ff ff 21 ca      	mov word ptr [ebp - 0xe8], 0xca21
0x804a300:   c7 85 14 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xec], 1
0x804a30a:   66 83 7d 98 01                  	cmp word ptr [ebp - 0x68], 1
0x804a30f:   75 07                           	jne 0x804a318 <func_1+0xaa9>
0x804a311:   66 83 7d 9a 00                  	cmp word ptr [ebp - 0x66], 0
0x804a316:   74 07                           	je 0x804a31f <func_1+0xab0>
0x804a318:   b8 01 00 00 00                  	mov eax, 1
0x804a31d:   eb 05                           	jmp 0x804a324 <func_1+0xab5>
0x804a31f:   b8 00 00 00 00                  	mov eax, 0
0x804a324:   0f be 4d cd                     	movsx ecx, byte ptr [ebp - 0x33]
0x804a328:   ba 00 00 00 00                  	mov edx, 0
0x804a32d:   f7 f1                           	div ecx
0x804a32f:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a332:   39 c2                           	cmp edx, eax
0x804a334:   0f 92 c0                        	setb al
0x804a337:   0f b6 d0                        	movzx edx, al
0x804a33a:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a33d:   0f b7 c0                        	movzx eax, ax
0x804a340:   0f af c2                        	imul eax, edx
0x804a343:   85 c0                           	test eax, eax
0x804a345:   0f 84 1e 01 00 00               	je 0x804a469 <func_1+0xbfa>
0x804a34b:   0f bf 85 74 ff ff ff            	movsx eax, word ptr [ebp - 0x8c]
0x804a352:   0f b7 95 76 ff ff ff            	movzx edx, word ptr [ebp - 0x8a]
0x804a359:   0f b7 4d 8a                     	movzx ecx, word ptr [ebp - 0x76]
0x804a35d:   0f be 75 cd                     	movsx esi, byte ptr [ebp - 0x33]
0x804a361:   0f be 7d ce                     	movsx edi, byte ptr [ebp - 0x32]
0x804a365:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x804a36b:   0f b7 5d 94                     	movzx ebx, word ptr [ebp - 0x6c]
0x804a36f:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x804a375:   0f bf 7d 96                     	movsx edi, word ptr [ebp - 0x6a]
0x804a379:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x804a37f:   0f bf 5d 98                     	movsx ebx, word ptr [ebp - 0x68]
0x804a383:   89 9d d4 fe ff ff               	mov dword ptr [ebp - 0x12c], ebx
0x804a389:   0f b6 7d cf                     	movzx edi, byte ptr [ebp - 0x31]
0x804a38d:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x804a393:   0f b7 5d 9a                     	movzx ebx, word ptr [ebp - 0x66]
0x804a397:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x804a39d:   0f be 7d d7                     	movsx edi, byte ptr [ebp - 0x29]
0x804a3a1:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x804a3a7:   0f be 5d a3                     	movsx ebx, byte ptr [ebp - 0x5d]
0x804a3ab:   89 9d c4 fe ff ff               	mov dword ptr [ebp - 0x13c], ebx
0x804a3b1:   0f b7 7d de                     	movzx edi, word ptr [ebp - 0x22]
0x804a3b5:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x804a3bb:   0f bf 5d e6                     	movsx ebx, word ptr [ebp - 0x1a]
0x804a3bf:   89 9d bc fe ff ff               	mov dword ptr [ebp - 0x144], ebx
0x804a3c5:   0f be 7d ef                     	movsx edi, byte ptr [ebp - 0x11]
0x804a3c9:   89 bd b8 fe ff ff               	mov dword ptr [ebp - 0x148], edi
0x804a3cf:   0f b6 9d 7f ff ff ff            	movzx ebx, byte ptr [ebp - 0x81]
0x804a3d6:   89 9d b4 fe ff ff               	mov dword ptr [ebp - 0x14c], ebx
0x804a3dc:   0f b7 7d 80                     	movzx edi, word ptr [ebp - 0x80]
0x804a3e0:   0f be 5d 83                     	movsx ebx, byte ptr [ebp - 0x7d]
0x804a3e4:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a3e7:   50                              	push eax
0x804a3e8:   52                              	push edx
0x804a3e9:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a3ec:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a3ef:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a3f2:   51                              	push ecx
0x804a3f3:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a3f6:   56                              	push esi
0x804a3f7:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a3fd:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a400:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a406:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a40c:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a412:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a418:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a41b:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a421:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a427:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a42a:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a430:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a433:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a439:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a43c:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a43f:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a442:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a448:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a44b:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a451:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a457:   57                              	push edi
0x804a458:   53                              	push ebx
0x804a459:   e8 c8 f1 ff ff                  	call 0x8049626 <set_var>
0x804a45e:   83 c4 7c                        	add esp, 0x7c
0x804a461:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a464:   e9 c0 02 00 00                  	jmp 0x804a729 <func_1+0xeba>
0x804a469:   80 7d ef 00                     	cmp byte ptr [ebp - 0x11], 0
0x804a46d:   74 05                           	je 0x804a474 <func_1+0xc05>
0x804a46f:   e9 b6 f9 ff ff                  	jmp 0x8049e2a <func_1+0x5bb>
0x804a474:   83 45 c8 01                     	add dword ptr [ebp - 0x38], 1
0x804a478:   83 bd 44 ff ff ff 00            	cmp dword ptr [ebp - 0xbc], 0
0x804a47f:   74 05                           	je 0x804a486 <func_1+0xc17>
0x804a481:   e9 aa f9 ff ff                  	jmp 0x8049e30 <func_1+0x5c1>
0x804a486:   c6 45 d7 ff                     	mov byte ptr [ebp - 0x29], 0xff
0x804a48a:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a48d:   83 e8 01                        	sub eax, 1
0x804a490:   0f b6 d0                        	movzx edx, al
0x804a493:   0f b7 85 6c ff ff ff            	movzx eax, word ptr [ebp - 0x94]
0x804a49a:   0f b6 c0                        	movzx eax, al
0x804a49d:   89 c1                           	mov ecx, eax
0x804a49f:   d3 e2                           	shl edx, cl
0x804a4a1:   89 d0                           	mov eax, edx
0x804a4a3:   0f be d0                        	movsx edx, al
0x804a4a6:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a4a9:   0f be c0                        	movsx eax, al
0x804a4ac:   01 d0                           	add eax, edx
0x804a4ae:   83 f8 01                        	cmp eax, 1
0x804a4b1:   77 07                           	ja 0x804a4ba <func_1+0xc4b>
0x804a4b3:   b8 05 00 00 00                  	mov eax, 5
0x804a4b8:   eb 05                           	jmp 0x804a4bf <func_1+0xc50>
0x804a4ba:   b8 04 00 00 00                  	mov eax, 4
0x804a4bf:   66 33 85 18 ff ff ff            	xor ax, word ptr [ebp - 0xe8]
0x804a4c6:   66 89 45 80                     	mov word ptr [ebp - 0x80], ax
0x804a4ca:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x804a4ce:   0f bf d0                        	movsx edx, ax
0x804a4d1:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a4d4:   98                              	cwde 
0x804a4d5:   0f af c2                        	imul eax, edx
0x804a4d8:   85 c0                           	test eax, eax
0x804a4da:   75 06                           	jne 0x804a4e2 <func_1+0xc73>
0x804a4dc:   80 7d d7 00                     	cmp byte ptr [ebp - 0x29], 0
0x804a4e0:   74 07                           	je 0x804a4e9 <func_1+0xc7a>
0x804a4e2:   b8 01 00 00 00                  	mov eax, 1
0x804a4e7:   eb 05                           	jmp 0x804a4ee <func_1+0xc7f>
0x804a4e9:   b8 00 00 00 00                  	mov eax, 0
0x804a4ee:   89 c1                           	mov ecx, eax
0x804a4f0:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x804a4f7:   89 c2                           	mov edx, eax
0x804a4f9:   0f b6 c1                        	movzx eax, cl
0x804a4fc:   f6 f2                           	div dl
0x804a4fe:   0f b6 c4                        	movzx eax, ah
0x804a501:   38 85 33 ff ff ff               	cmp byte ptr [ebp - 0xcd], al
0x804a507:   0f 94 c0                        	sete al
0x804a50a:   0f b6 c0                        	movzx eax, al
0x804a50d:   21 85 14 ff ff ff               	and dword ptr [ebp - 0xec], eax
0x804a513:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a516:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a519:   0f b6 45 ce                     	movzx eax, byte ptr [ebp - 0x32]
0x804a51d:   83 c0 07                        	add eax, 7
0x804a520:   88 45 ce                        	mov byte ptr [ebp - 0x32], al
0x804a523:   80 7d ce 16                     	cmp byte ptr [ebp - 0x32], 0x16
0x804a527:   0f 8e ca fd ff ff               	jle 0x804a2f7 <func_1+0xa88>
0x804a52d:   c7 45 bc 00 00 00 00            	mov dword ptr [ebp - 0x44], 0
0x804a534:   e9 92 00 00 00                  	jmp 0x804a5cb <func_1+0xd5c>
0x804a539:   c6 85 f3 fe ff ff 00            	mov byte ptr [ebp - 0x10d], 0
0x804a540:   66 83 7d 80 00                  	cmp word ptr [ebp - 0x80], 0
0x804a545:   0f 85 af 00 00 00               	jne 0x804a5fa <func_1+0xd8b>
0x804a54b:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a551:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a554:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a557:   09 45 b8                        	or dword ptr [ebp - 0x48], eax
0x804a55a:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a55d:   0f b7 d0                        	movzx edx, ax
0x804a560:   0f be 85 67 ff ff ff            	movsx eax, byte ptr [ebp - 0x99]
0x804a567:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a56a:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a56d:   0f b7 c0                        	movzx eax, ax
0x804a570:   0f af c2                        	imul eax, edx
0x804a573:   85 c0                           	test eax, eax
0x804a575:   74 25                           	je 0x804a59c <func_1+0xd2d>
0x804a577:   0f b6 85 f3 fe ff ff            	movzx eax, byte ptr [ebp - 0x10d]
0x804a57e:   88 45 ce                        	mov byte ptr [ebp - 0x32], al
0x804a581:   0f be 55 ce                     	movsx edx, byte ptr [ebp - 0x32]
0x804a585:   83 7d d0 04                     	cmp dword ptr [ebp - 0x30], 4
0x804a589:   0f 95 c0                        	setne al
0x804a58c:   0f b6 c0                        	movzx eax, al
0x804a58f:   01 d0                           	add eax, edx
0x804a591:   85 c0                           	test eax, eax
0x804a593:   74 07                           	je 0x804a59c <func_1+0xd2d>
0x804a595:   ba 01 00 00 00                  	mov edx, 1
0x804a59a:   eb 05                           	jmp 0x804a5a1 <func_1+0xd32>
0x804a59c:   ba 00 00 00 00                  	mov edx, 0
0x804a5a1:   0f be 45 cd                     	movsx eax, byte ptr [ebp - 0x33]
0x804a5a5:   39 c2                           	cmp edx, eax
0x804a5a7:   0f 95 c0                        	setne al
0x804a5aa:   0f b6 c0                        	movzx eax, al
0x804a5ad:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a5b0:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a5b6:   0f b7 c0                        	movzx eax, ax
0x804a5b9:   ba 00 04 00 00                  	mov edx, 0x400
0x804a5be:   89 c1                           	mov ecx, eax
0x804a5c0:   d3 fa                           	sar edx, cl
0x804a5c2:   89 d0                           	mov eax, edx
0x804a5c4:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a5c7:   83 45 bc 08                     	add dword ptr [ebp - 0x44], 8
0x804a5cb:   83 7d bc 06                     	cmp dword ptr [ebp - 0x44], 6
0x804a5cf:   0f 86 64 ff ff ff               	jbe 0x804a539 <func_1+0xcca>
0x804a5d5:   eb 24                           	jmp 0x804a5fb <func_1+0xd8c>
0x804a5d7:   66 c7 85 5a ff ff ff 00 00      	mov word ptr [ebp - 0xa6], 0
0x804a5e0:   c7 85 54 ff ff ff f4 9a fb 2f   	mov dword ptr [ebp - 0xac], 0x2ffb9af4
0x804a5ea:   c7 85 50 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xb0], 1
0x804a5f4:   83 6d c4 01                     	sub dword ptr [ebp - 0x3c], 1
0x804a5f8:   eb 01                           	jmp 0x804a5fb <func_1+0xd8c>
0x804a5fa:   90                              	nop 
0x804a5fb:   0f b7 45 80                     	movzx eax, word ptr [ebp - 0x80]
0x804a5ff:   88 45 cf                        	mov byte ptr [ebp - 0x31], al
0x804a602:   80 7d cf cf                     	cmp byte ptr [ebp - 0x31], 0xcf
0x804a606:   0f 95 c0                        	setne al
0x804a609:   0f b6 c0                        	movzx eax, al
0x804a60c:   09 45 ac                        	or dword ptr [ebp - 0x54], eax
0x804a60f:   0f bf 85 74 ff ff ff            	movsx eax, word ptr [ebp - 0x8c]
0x804a616:   0f b7 95 76 ff ff ff            	movzx edx, word ptr [ebp - 0x8a]
0x804a61d:   0f b7 4d 8a                     	movzx ecx, word ptr [ebp - 0x76]
0x804a621:   0f be 75 cd                     	movsx esi, byte ptr [ebp - 0x33]
0x804a625:   0f be 7d ce                     	movsx edi, byte ptr [ebp - 0x32]
0x804a629:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x804a62f:   0f b7 5d 94                     	movzx ebx, word ptr [ebp - 0x6c]
0x804a633:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x804a639:   0f bf 7d 96                     	movsx edi, word ptr [ebp - 0x6a]
0x804a63d:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x804a643:   0f bf 5d 98                     	movsx ebx, word ptr [ebp - 0x68]
0x804a647:   89 9d d4 fe ff ff               	mov dword ptr [ebp - 0x12c], ebx
0x804a64d:   0f b6 7d cf                     	movzx edi, byte ptr [ebp - 0x31]
0x804a651:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x804a657:   0f b7 5d 9a                     	movzx ebx, word ptr [ebp - 0x66]
0x804a65b:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x804a661:   0f be 7d d7                     	movsx edi, byte ptr [ebp - 0x29]
0x804a665:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x804a66b:   0f be 5d a3                     	movsx ebx, byte ptr [ebp - 0x5d]
0x804a66f:   89 9d c4 fe ff ff               	mov dword ptr [ebp - 0x13c], ebx
0x804a675:   0f b7 7d de                     	movzx edi, word ptr [ebp - 0x22]
0x804a679:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x804a67f:   0f bf 5d e6                     	movsx ebx, word ptr [ebp - 0x1a]
0x804a683:   89 9d bc fe ff ff               	mov dword ptr [ebp - 0x144], ebx
0x804a689:   0f be 7d ef                     	movsx edi, byte ptr [ebp - 0x11]
0x804a68d:   89 bd b8 fe ff ff               	mov dword ptr [ebp - 0x148], edi
0x804a693:   0f b6 9d 7f ff ff ff            	movzx ebx, byte ptr [ebp - 0x81]
0x804a69a:   89 9d b4 fe ff ff               	mov dword ptr [ebp - 0x14c], ebx
0x804a6a0:   0f b7 7d 80                     	movzx edi, word ptr [ebp - 0x80]
0x804a6a4:   0f be 5d 83                     	movsx ebx, byte ptr [ebp - 0x7d]
0x804a6a8:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a6ab:   50                              	push eax
0x804a6ac:   52                              	push edx
0x804a6ad:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a6b0:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a6b3:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a6b6:   51                              	push ecx
0x804a6b7:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a6ba:   56                              	push esi
0x804a6bb:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a6c1:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a6c4:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a6ca:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a6d0:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a6d6:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a6dc:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a6df:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a6e5:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a6eb:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a6ee:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a6f4:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a6f7:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a6fd:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a700:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a703:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a706:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a70c:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a70f:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a715:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a71b:   57                              	push edi
0x804a71c:   53                              	push ebx
0x804a71d:   e8 04 ef ff ff                  	call 0x8049626 <set_var>
0x804a722:   83 c4 7c                        	add esp, 0x7c
0x804a725:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x804a729:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a72c:   5b                              	pop ebx
0x804a72d:   5e                              	pop esi
0x804a72e:   5f                              	pop edi
0x804a72f:   5d                              	pop ebp
0x804a730:   c3                              	ret 
; function: main at 0x804a731 -- 0x804ab69
0x804a731:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a735:   83 e4 f0                        	and esp, 0xfffffff0
0x804a738:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a73b:   55                              	push ebp
0x804a73c:   89 e5                           	mov ebp, esp
0x804a73e:   53                              	push ebx
0x804a73f:   51                              	push ecx
0x804a740:   83 ec 10                        	sub esp, 0x10
0x804a743:   e8 48 dc ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a748:   81 c3 b8 28 00 00               	add ebx, 0x28b8
0x804a74e:   89 c8                           	mov eax, ecx
0x804a750:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a757:   83 38 02                        	cmp dword ptr [eax], 2
0x804a75a:   75 26                           	jne 0x804a782 <main+0x51>
0x804a75c:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a75f:   83 c0 04                        	add eax, 4
0x804a762:   8b 00                           	mov eax, dword ptr [eax]
0x804a764:   83 ec 08                        	sub esp, 8
0x804a767:   8d 93 58 dc ff ff               	lea edx, [ebx - 0x23a8]
0x804a76d:   52                              	push edx
0x804a76e:   50                              	push eax
0x804a76f:   e8 8c db ff ff                  	call 0x8048300 <strcmp>
0x804a774:   83 c4 10                        	add esp, 0x10
0x804a777:   85 c0                           	test eax, eax
0x804a779:   75 07                           	jne 0x804a782 <main+0x51>
0x804a77b:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a782:   e8 cf dc ff ff                  	call 0x8048456 <platform_main_begin>
0x804a787:   e8 df ec ff ff                  	call 0x804946b <crc32_gentab>
0x804a78c:   e8 de f0 ff ff                  	call 0x804986f <func_1>
0x804a791:   0f b6 83 24 00 00 00            	movzx eax, byte ptr [ebx + 0x24]
0x804a798:   0f be c0                        	movsx eax, al
0x804a79b:   83 ec 04                        	sub esp, 4
0x804a79e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7a1:   8d 93 5a dc ff ff               	lea edx, [ebx - 0x23a6]
0x804a7a7:   52                              	push edx
0x804a7a8:   50                              	push eax
0x804a7a9:   e8 c9 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7ae:   83 c4 10                        	add esp, 0x10
0x804a7b1:   0f b7 83 a4 04 00 00            	movzx eax, word ptr [ebx + 0x4a4]
0x804a7b8:   0f b7 c0                        	movzx eax, ax
0x804a7bb:   83 ec 04                        	sub esp, 4
0x804a7be:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7c1:   8d 93 5f dc ff ff               	lea edx, [ebx - 0x23a1]
0x804a7c7:   52                              	push edx
0x804a7c8:   50                              	push eax
0x804a7c9:   e8 a9 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7ce:   83 c4 10                        	add esp, 0x10
0x804a7d1:   0f b6 83 25 00 00 00            	movzx eax, byte ptr [ebx + 0x25]
0x804a7d8:   0f b6 c0                        	movzx eax, al
0x804a7db:   83 ec 04                        	sub esp, 4
0x804a7de:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7e1:   8d 93 64 dc ff ff               	lea edx, [ebx - 0x239c]
0x804a7e7:   52                              	push edx
0x804a7e8:   50                              	push eax
0x804a7e9:   e8 89 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7ee:   83 c4 10                        	add esp, 0x10
0x804a7f1:   0f b6 83 26 00 00 00            	movzx eax, byte ptr [ebx + 0x26]
0x804a7f8:   0f be c0                        	movsx eax, al
0x804a7fb:   83 ec 04                        	sub esp, 4
0x804a7fe:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a801:   8d 93 69 dc ff ff               	lea edx, [ebx - 0x2397]
0x804a807:   52                              	push edx
0x804a808:   50                              	push eax
0x804a809:   e8 69 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a80e:   83 c4 10                        	add esp, 0x10
0x804a811:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804a817:   83 ec 04                        	sub esp, 4
0x804a81a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a81d:   8d 93 6e dc ff ff               	lea edx, [ebx - 0x2392]
0x804a823:   52                              	push edx
0x804a824:   50                              	push eax
0x804a825:   e8 4d ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a82a:   83 c4 10                        	add esp, 0x10
0x804a82d:   0f b7 83 28 00 00 00            	movzx eax, word ptr [ebx + 0x28]
0x804a834:   98                              	cwde 
0x804a835:   83 ec 04                        	sub esp, 4
0x804a838:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a83b:   8d 93 73 dc ff ff               	lea edx, [ebx - 0x238d]
0x804a841:   52                              	push edx
0x804a842:   50                              	push eax
0x804a843:   e8 2f ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a848:   83 c4 10                        	add esp, 0x10
0x804a84b:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a851:   89 c2                           	mov edx, eax
0x804a853:   83 ec 04                        	sub esp, 4
0x804a856:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a859:   8d 83 78 dc ff ff               	lea eax, [ebx - 0x2388]
0x804a85f:   50                              	push eax
0x804a860:   52                              	push edx
0x804a861:   e8 11 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a866:   83 c4 10                        	add esp, 0x10
0x804a869:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804a86f:   89 c2                           	mov edx, eax
0x804a871:   83 ec 04                        	sub esp, 4
0x804a874:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a877:   8d 83 7d dc ff ff               	lea eax, [ebx - 0x2383]
0x804a87d:   50                              	push eax
0x804a87e:   52                              	push edx
0x804a87f:   e8 f3 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a884:   83 c4 10                        	add esp, 0x10
0x804a887:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a88d:   89 c2                           	mov edx, eax
0x804a88f:   83 ec 04                        	sub esp, 4
0x804a892:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a895:   8d 83 82 dc ff ff               	lea eax, [ebx - 0x237e]
0x804a89b:   50                              	push eax
0x804a89c:   52                              	push edx
0x804a89d:   e8 d5 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8a2:   83 c4 10                        	add esp, 0x10
0x804a8a5:   0f b7 83 ac 04 00 00            	movzx eax, word ptr [ebx + 0x4ac]
0x804a8ac:   0f b7 c0                        	movzx eax, ax
0x804a8af:   83 ec 04                        	sub esp, 4
0x804a8b2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8b5:   8d 93 87 dc ff ff               	lea edx, [ebx - 0x2379]
0x804a8bb:   52                              	push edx
0x804a8bc:   50                              	push eax
0x804a8bd:   e8 b5 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8c2:   83 c4 10                        	add esp, 0x10
0x804a8c5:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804a8cb:   83 ec 04                        	sub esp, 4
0x804a8ce:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8d1:   8d 93 8c dc ff ff               	lea edx, [ebx - 0x2374]
0x804a8d7:   52                              	push edx
0x804a8d8:   50                              	push eax
0x804a8d9:   e8 99 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8de:   83 c4 10                        	add esp, 0x10
0x804a8e1:   0f b6 83 3c 00 00 00            	movzx eax, byte ptr [ebx + 0x3c]
0x804a8e8:   0f be c0                        	movsx eax, al
0x804a8eb:   83 ec 04                        	sub esp, 4
0x804a8ee:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8f1:   8d 93 91 dc ff ff               	lea edx, [ebx - 0x236f]
0x804a8f7:   52                              	push edx
0x804a8f8:   50                              	push eax
0x804a8f9:   e8 79 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8fe:   83 c4 10                        	add esp, 0x10
0x804a901:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804a907:   89 c2                           	mov edx, eax
0x804a909:   83 ec 04                        	sub esp, 4
0x804a90c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a90f:   8d 83 97 dc ff ff               	lea eax, [ebx - 0x2369]
0x804a915:   50                              	push eax
0x804a916:   52                              	push edx
0x804a917:   e8 5b ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a91c:   83 c4 10                        	add esp, 0x10
0x804a91f:   0f b6 83 44 00 00 00            	movzx eax, byte ptr [ebx + 0x44]
0x804a926:   0f be c0                        	movsx eax, al
0x804a929:   83 ec 04                        	sub esp, 4
0x804a92c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a92f:   8d 93 9d dc ff ff               	lea edx, [ebx - 0x2363]
0x804a935:   52                              	push edx
0x804a936:   50                              	push eax
0x804a937:   e8 3b ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a93c:   83 c4 10                        	add esp, 0x10
0x804a93f:   0f b7 83 46 00 00 00            	movzx eax, word ptr [ebx + 0x46]
0x804a946:   0f b7 c0                        	movzx eax, ax
0x804a949:   83 ec 04                        	sub esp, 4
0x804a94c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a94f:   8d 93 a3 dc ff ff               	lea edx, [ebx - 0x235d]
0x804a955:   52                              	push edx
0x804a956:   50                              	push eax
0x804a957:   e8 1b ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a95c:   83 c4 10                        	add esp, 0x10
0x804a95f:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804a965:   89 c2                           	mov edx, eax
0x804a967:   83 ec 04                        	sub esp, 4
0x804a96a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a96d:   8d 83 a9 dc ff ff               	lea eax, [ebx - 0x2357]
0x804a973:   50                              	push eax
0x804a974:   52                              	push edx
0x804a975:   e8 fd eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a97a:   83 c4 10                        	add esp, 0x10
0x804a97d:   0f b6 83 4c 00 00 00            	movzx eax, byte ptr [ebx + 0x4c]
0x804a984:   0f b6 c0                        	movzx eax, al
0x804a987:   83 ec 04                        	sub esp, 4
0x804a98a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a98d:   8d 93 af dc ff ff               	lea edx, [ebx - 0x2351]
0x804a993:   52                              	push edx
0x804a994:   50                              	push eax
0x804a995:   e8 dd eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a99a:   83 c4 10                        	add esp, 0x10
0x804a99d:   0f b7 83 4e 00 00 00            	movzx eax, word ptr [ebx + 0x4e]
0x804a9a4:   98                              	cwde 
0x804a9a5:   83 ec 04                        	sub esp, 4
0x804a9a8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9ab:   8d 93 b5 dc ff ff               	lea edx, [ebx - 0x234b]
0x804a9b1:   52                              	push edx
0x804a9b2:   50                              	push eax
0x804a9b3:   e8 bf eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9b8:   83 c4 10                        	add esp, 0x10
0x804a9bb:   0f b7 83 50 00 00 00            	movzx eax, word ptr [ebx + 0x50]
0x804a9c2:   98                              	cwde 
0x804a9c3:   83 ec 04                        	sub esp, 4
0x804a9c6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9c9:   8d 93 bb dc ff ff               	lea edx, [ebx - 0x2345]
0x804a9cf:   52                              	push edx
0x804a9d0:   50                              	push eax
0x804a9d1:   e8 a1 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9d6:   83 c4 10                        	add esp, 0x10
0x804a9d9:   0f b7 83 52 00 00 00            	movzx eax, word ptr [ebx + 0x52]
0x804a9e0:   0f b7 c0                        	movzx eax, ax
0x804a9e3:   83 ec 04                        	sub esp, 4
0x804a9e6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9e9:   8d 93 c1 dc ff ff               	lea edx, [ebx - 0x233f]
0x804a9ef:   52                              	push edx
0x804a9f0:   50                              	push eax
0x804a9f1:   e8 81 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9f6:   83 c4 10                        	add esp, 0x10
0x804a9f9:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804a9ff:   89 c2                           	mov edx, eax
0x804aa01:   83 ec 04                        	sub esp, 4
0x804aa04:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa07:   8d 83 c7 dc ff ff               	lea eax, [ebx - 0x2339]
0x804aa0d:   50                              	push eax
0x804aa0e:   52                              	push edx
0x804aa0f:   e8 63 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa14:   83 c4 10                        	add esp, 0x10
0x804aa17:   0f b6 83 58 00 00 00            	movzx eax, byte ptr [ebx + 0x58]
0x804aa1e:   0f be c0                        	movsx eax, al
0x804aa21:   83 ec 04                        	sub esp, 4
0x804aa24:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa27:   8d 93 cd dc ff ff               	lea edx, [ebx - 0x2333]
0x804aa2d:   52                              	push edx
0x804aa2e:   50                              	push eax
0x804aa2f:   e8 43 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa34:   83 c4 10                        	add esp, 0x10
0x804aa37:   0f b6 83 59 00 00 00            	movzx eax, byte ptr [ebx + 0x59]
0x804aa3e:   0f be c0                        	movsx eax, al
0x804aa41:   83 ec 04                        	sub esp, 4
0x804aa44:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa47:   8d 93 d3 dc ff ff               	lea edx, [ebx - 0x232d]
0x804aa4d:   52                              	push edx
0x804aa4e:   50                              	push eax
0x804aa4f:   e8 23 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa54:   83 c4 10                        	add esp, 0x10
0x804aa57:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804aa5d:   83 ec 04                        	sub esp, 4
0x804aa60:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa63:   8d 93 d9 dc ff ff               	lea edx, [ebx - 0x2327]
0x804aa69:   52                              	push edx
0x804aa6a:   50                              	push eax
0x804aa6b:   e8 07 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa70:   83 c4 10                        	add esp, 0x10
0x804aa73:   0f b7 83 60 00 00 00            	movzx eax, word ptr [ebx + 0x60]
0x804aa7a:   0f b7 c0                        	movzx eax, ax
0x804aa7d:   83 ec 04                        	sub esp, 4
0x804aa80:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa83:   8d 93 df dc ff ff               	lea edx, [ebx - 0x2321]
0x804aa89:   52                              	push edx
0x804aa8a:   50                              	push eax
0x804aa8b:   e8 e7 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa90:   83 c4 10                        	add esp, 0x10
0x804aa93:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804aa99:   83 ec 04                        	sub esp, 4
0x804aa9c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa9f:   8d 93 e5 dc ff ff               	lea edx, [ebx - 0x231b]
0x804aaa5:   52                              	push edx
0x804aaa6:   50                              	push eax
0x804aaa7:   e8 cb ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaac:   83 c4 10                        	add esp, 0x10
0x804aaaf:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804aab5:   89 c2                           	mov edx, eax
0x804aab7:   83 ec 04                        	sub esp, 4
0x804aaba:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aabd:   8d 83 eb dc ff ff               	lea eax, [ebx - 0x2315]
0x804aac3:   50                              	push eax
0x804aac4:   52                              	push edx
0x804aac5:   e8 ad ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaca:   83 c4 10                        	add esp, 0x10
0x804aacd:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804aad3:   83 ec 04                        	sub esp, 4
0x804aad6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aad9:   8d 93 f1 dc ff ff               	lea edx, [ebx - 0x230f]
0x804aadf:   52                              	push edx
0x804aae0:   50                              	push eax
0x804aae1:   e8 91 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aae6:   83 c4 10                        	add esp, 0x10
0x804aae9:   0f b7 83 70 00 00 00            	movzx eax, word ptr [ebx + 0x70]
0x804aaf0:   0f b7 c0                        	movzx eax, ax
0x804aaf3:   83 ec 04                        	sub esp, 4
0x804aaf6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaf9:   8d 93 f7 dc ff ff               	lea edx, [ebx - 0x2309]
0x804aaff:   52                              	push edx
0x804ab00:   50                              	push eax
0x804ab01:   e8 71 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab06:   83 c4 10                        	add esp, 0x10
0x804ab09:   0f b7 83 72 00 00 00            	movzx eax, word ptr [ebx + 0x72]
0x804ab10:   98                              	cwde 
0x804ab11:   83 ec 04                        	sub esp, 4
0x804ab14:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab17:   8d 93 fd dc ff ff               	lea edx, [ebx - 0x2303]
0x804ab1d:   52                              	push edx
0x804ab1e:   50                              	push eax
0x804ab1f:   e8 53 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab24:   83 c4 10                        	add esp, 0x10
0x804ab27:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804ab2d:   83 ec 04                        	sub esp, 4
0x804ab30:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab33:   8d 93 03 dd ff ff               	lea edx, [ebx - 0x22fd]
0x804ab39:   52                              	push edx
0x804ab3a:   50                              	push eax
0x804ab3b:   e8 37 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab40:   83 c4 10                        	add esp, 0x10
0x804ab43:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ab49:   f7 d0                           	not eax
0x804ab4b:   83 ec 08                        	sub esp, 8
0x804ab4e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab51:   50                              	push eax
0x804ab52:   e8 0f d9 ff ff                  	call 0x8048466 <platform_main_end>
0x804ab57:   83 c4 10                        	add esp, 0x10
0x804ab5a:   b8 00 00 00 00                  	mov eax, 0
0x804ab5f:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ab62:   59                              	pop ecx
0x804ab63:   5b                              	pop ebx
0x804ab64:   5d                              	pop ebp
0x804ab65:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ab68:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ab69 -- 0x804ab6d
0x804ab69:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ab6c:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804ab6d -- 0x804ab71
0x804ab6d:   8b 14 24                        	mov edx, dword ptr [esp]
0x804ab70:   c3                              	ret 
; data inside code section at 0x804ab71 -- 0x804ab80
0x804ab71:   66 90 66 90 66 90 66 90  66 90 66 90 66 90 90      |f.f.f.f.f.f.f.. |
; function: __libc_csu_init at 0x804ab80 -- 0x804abdd
0x804ab80:   55                              	push ebp
0x804ab81:   57                              	push edi
0x804ab82:   56                              	push esi
0x804ab83:   53                              	push ebx
0x804ab84:   e8 07 d8 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ab89:   81 c3 77 24 00 00               	add ebx, 0x2477
0x804ab8f:   83 ec 0c                        	sub esp, 0xc
0x804ab92:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ab96:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ab9c:   e8 2b d7 ff ff                  	call 0x80482cc <_init>
0x804aba1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804aba7:   29 c6                           	sub esi, eax
0x804aba9:   c1 fe 02                        	sar esi, 2
0x804abac:   85 f6                           	test esi, esi
0x804abae:   74 25                           	je 0x804abd5 <__libc_csu_init+0x55>
0x804abb0:   31 ff                           	xor edi, edi
0x804abb2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804abb8:   83 ec 04                        	sub esp, 4
0x804abbb:   55                              	push ebp
0x804abbc:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804abc0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804abc4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804abcb:   83 c7 01                        	add edi, 1
0x804abce:   83 c4 10                        	add esp, 0x10
0x804abd1:   39 fe                           	cmp esi, edi
0x804abd3:   75 e3                           	jne 0x804abb8 <__libc_csu_init+0x38>
0x804abd5:   83 c4 0c                        	add esp, 0xc
0x804abd8:   5b                              	pop ebx
0x804abd9:   5e                              	pop esi
0x804abda:   5f                              	pop edi
0x804abdb:   5d                              	pop ebp
0x804abdc:   c3                              	ret 
; data inside code section at 0x804abdd -- 0x804abe0
0x804abdd:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804abe0 -- 0x804abe2
0x804abe0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804abe4 -- 0x804abf8
0x804abe4:   53                              	push ebx
0x804abe5:   83 ec 08                        	sub esp, 8
0x804abe8:   e8 a3 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804abed:   81 c3 13 24 00 00               	add ebx, 0x2413
0x804abf3:   83 c4 08                        	add esp, 8
0x804abf6:   5b                              	pop ebx
0x804abf7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 fc ab 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804abf8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804ac08:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804ac18:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804ac28:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804ac38:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ac48:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ac58:   31 00 67 5f 31 35 00 67  5f 31 38 00 67 5f 32 38   |1.g_15.g_18.g_28|
0x804ac68:   00 67 5f 33 33 00 67 5f  33 34 00 67 5f 34 34 00   |.g_33.g_34.g_44.|
0x804ac78:   67 5f 35 36 00 67 5f 35  37 00 67 5f 35 38 00 67   |g_56.g_57.g_58.g|
0x804ac88:   5f 35 39 00 67 5f 37 35  00 67 5f 31 30 36 00 67   |_59.g_75.g_106.g|
0x804ac98:   5f 31 30 38 00 67 5f 31  30 39 00 67 5f 31 33 38   |_108.g_109.g_138|
0x804aca8:   00 67 5f 31 34 30 00 67  5f 31 39 39 00 67 5f 32   |.g_140.g_199.g_2|
0x804acb8:   34 37 00 67 5f 32 35 30  00 67 5f 32 35 31 00 67   |47.g_250.g_251.g|
0x804acc8:   5f 32 37 35 00 67 5f 32  37 36 00 67 5f 32 37 37   |_275.g_276.g_277|
0x804acd8:   00 67 5f 32 37 38 00 67  5f 33 30 33 00 67 5f 33   |.g_278.g_303.g_3|
0x804ace8:   33 36 00 67 5f 33 35 32  00 67 5f 33 37 36 00 67   |36.g_352.g_376.g|
0x804acf8:   5f 33 39 33 00 67 5f 34  31 33 00 67 5f 34 31 37   |_393.g_413.g_417|
0x804ad08:   00 00 00 00 00 00 00 3f  ff ff ff 7e 00 00 80 0d   |.......?...~....|
0x804ad18:   00 00 80 31 ff ff 7f 3f  00 00 00 27 00 00 80 71   |...1...?...'...q|
0x804ad28:   ff ff ff 34 00 00 00 00  00 00 00 00 00 00 e0 3f   |...4...........?|
0x804ad38:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804ad48:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804ad58:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804ad68:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804ad78:   01                                                 |.               |
; section: .eh_frame_hdr
0x804ad78:   01 1b 03 3b b8 02 00 00  56 00 00 00 78 d5 ff ff   |...;....V...x...|
0x804ad88:   e8 02 00 00 b8 d5 ff ff  0c 03 00 00 08 d6 ff ff   |................|
0x804ad98:   d4 02 00 00 de d6 ff ff  20 03 00 00 ee d6 ff ff   |........ .......|
0x804ada8:   40 03 00 00 1c d7 ff ff  64 03 00 00 3a d7 ff ff   |@.......d...:...|
0x804adb8:   84 03 00 00 62 d7 ff ff  a4 03 00 00 8c d7 ff ff   |....b...........|
0x804adc8:   c4 03 00 00 b5 d7 ff ff  e4 03 00 00 f8 d7 ff ff   |................|
0x804add8:   04 04 00 00 39 d8 ff ff  24 04 00 00 91 d8 ff ff   |....9...$.......|
0x804ade8:   48 04 00 00 e3 d8 ff ff  6c 04 00 00 20 d9 ff ff   |H.......l... ...|
0x804adf8:   8c 04 00 00 57 d9 ff ff  ac 04 00 00 76 d9 ff ff   |....W.......v...|
0x804ae08:   cc 04 00 00 a0 d9 ff ff  ec 04 00 00 cc d9 ff ff   |................|
0x804ae18:   0c 05 00 00 f7 d9 ff ff  2c 05 00 00 40 da ff ff   |........,...@...|
0x804ae28:   4c 05 00 00 87 da ff ff  6c 05 00 00 e1 da ff ff   |L.......l.......|
0x804ae38:   90 05 00 00 35 db ff ff  b4 05 00 00 74 db ff ff   |....5.......t...|
0x804ae48:   d4 05 00 00 ad db ff ff  f4 05 00 00 cf db ff ff   |................|
0x804ae58:   14 06 00 00 1d dc ff ff  34 06 00 00 59 dc ff ff   |........4...Y...|
0x804ae68:   54 06 00 00 e2 dc ff ff  74 06 00 00 14 dd ff ff   |T.......t.......|
0x804ae78:   94 06 00 00 44 dd ff ff  b4 06 00 00 89 dd ff ff   |....D...........|
0x804ae88:   d4 06 00 00 c8 dd ff ff  f4 06 00 00 fa dd ff ff   |................|
0x804ae98:   14 07 00 00 26 de ff ff  34 07 00 00 44 de ff ff   |....&...4...D...|
0x804aea8:   54 07 00 00 6c de ff ff  74 07 00 00 91 de ff ff   |T...l...t.......|
0x804aeb8:   94 07 00 00 b6 de ff ff  b4 07 00 00 ed de ff ff   |................|
0x804aec8:   d4 07 00 00 21 df ff ff  f4 07 00 00 73 df ff ff   |....!.......s...|
0x804aed8:   18 08 00 00 bf df ff ff  3c 08 00 00 f6 df ff ff   |........<.......|
0x804aee8:   5c 08 00 00 27 e0 ff ff  7c 08 00 00 46 e0 ff ff   |\...'...|...F...|
0x804aef8:   9c 08 00 00 70 e0 ff ff  bc 08 00 00 98 e0 ff ff   |....p...........|
0x804af08:   dc 08 00 00 c1 e0 ff ff  fc 08 00 00 fd e0 ff ff   |................|
0x804af18:   1c 09 00 00 37 e1 ff ff  3c 09 00 00 8a e1 ff ff   |....7...<.......|
0x804af28:   60 09 00 00 d7 e1 ff ff  84 09 00 00 0f e2 ff ff   |`...............|
0x804af38:   a4 09 00 00 41 e2 ff ff  c4 09 00 00 55 e2 ff ff   |....A.......U...|
0x804af48:   e4 09 00 00 6c e2 ff ff  04 0a 00 00 81 e2 ff ff   |....l...........|
0x804af58:   24 0a 00 00 97 e2 ff ff  44 0a 00 00 be e2 ff ff   |$.......D.......|
0x804af68:   64 0a 00 00 e3 e2 ff ff  84 0a 00 00 22 e3 ff ff   |d..........."...|
0x804af78:   a4 0a 00 00 5b e3 ff ff  c4 0a 00 00 87 e3 ff ff   |....[...........|
0x804af88:   e4 0a 00 00 ad e3 ff ff  04 0b 00 00 ef e3 ff ff   |................|
0x804af98:   24 0b 00 00 31 e4 ff ff  44 0b 00 00 73 e4 ff ff   |$...1...D...s...|
0x804afa8:   64 0b 00 00 e8 e4 ff ff  84 0b 00 00 45 e5 ff ff   |d...........E...|
0x804afb8:   a4 0b 00 00 a2 e5 ff ff  c4 0b 00 00 ff e5 ff ff   |................|
0x804afc8:   e4 0b 00 00 8f e6 ff ff  04 0c 00 00 f3 e6 ff ff   |................|
0x804afd8:   24 0c 00 00 63 e7 ff ff  44 0c 00 00 aa e7 ff ff   |$...c...D.......|
0x804afe8:   68 0c 00 00 ff e7 ff ff  88 0c 00 00 46 e8 ff ff   |h...........F...|
0x804aff8:   ac 0c 00 00 ae e8 ff ff  d0 0c 00 00 f7 ea ff ff   |................|
0x804b008:   00 0d 00 00 b9 f9 ff ff  30 0d 00 00 f1 fd ff ff   |........0.......|
0x804b018:   68 0d 00 00 f5 fd ff ff  7c 0d 00 00 08 fe ff ff   |h.......|.......|
0x804b028:   90 0d 00 00 68 fe ff ff  dc 0d 00 00 14            |....h........   |
; section: .eh_frame
0x804b034:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b044:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b054:   2c d3 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |,........... ...|
0x804b064:   30 00 00 00 88 d2 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b074:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b084:   10 00 00 00 54 00 00 00  a4 d2 ff ff 08 00 00 00   |....T...........|
0x804b094:   00 00 00 00 1c 00 00 00  68 00 00 00 b6 d3 ff ff   |........h.......|
0x804b0a4:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b0b4:   04 04 00 00 20 00 00 00  88 00 00 00 a6 d3 ff ff   |.... ...........|
0x804b0c4:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b0d4:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b0e4:   b0 d3 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b0f4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b104:   ae d3 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b114:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b124:   b6 d3 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b134:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b144:   c0 d3 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b154:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b164:   c9 d3 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b174:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b184:   ec d3 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b194:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b1a4:   0d d4 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b1b4:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b1c4:   90 01 00 00 41 d4 ff ff  52 00 00 00 00 41 0e 08   |....A...R....A..|
0x804b1d4:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b1e4:   1c 00 00 00 b4 01 00 00  6f d4 ff ff 3d 00 00 00   |........o...=...|
0x804b1f4:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b204:   1c 00 00 00 d4 01 00 00  8c d4 ff ff 37 00 00 00   |............7...|
0x804b214:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b224:   1c 00 00 00 f4 01 00 00  a3 d4 ff ff 1f 00 00 00   |................|
0x804b234:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b244:   1c 00 00 00 14 02 00 00  a2 d4 ff ff 2a 00 00 00   |............*...|
0x804b254:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b264:   1c 00 00 00 34 02 00 00  ac d4 ff ff 2c 00 00 00   |....4.......,...|
0x804b274:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b284:   1c 00 00 00 54 02 00 00  b8 d4 ff ff 2b 00 00 00   |....T.......+...|
0x804b294:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b2a4:   1c 00 00 00 74 02 00 00  c3 d4 ff ff 49 00 00 00   |....t.......I...|
0x804b2b4:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b2c4:   1c 00 00 00 94 02 00 00  ec d4 ff ff 47 00 00 00   |............G...|
0x804b2d4:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b2e4:   20 00 00 00 b4 02 00 00  13 d5 ff ff 5a 00 00 00   | ...........Z...|
0x804b2f4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b304:   c5 0c 04 04 20 00 00 00  d8 02 00 00 49 d5 ff ff   |.... .......I...|
0x804b314:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b324:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b334:   79 d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |y...?....A....B.|
0x804b344:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b354:   98 d5 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b364:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b374:   b1 d5 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b384:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b394:   b3 d5 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b3a4:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b3b4:   e1 d5 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b3c4:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b3d4:   fd d5 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b3e4:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b3f4:   66 d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |f...2....A....B.|
0x804b404:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b414:   78 d6 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |x...0....A....B.|
0x804b424:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b434:   88 d6 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b444:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b454:   ad d6 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b464:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b474:   cc d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b484:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b494:   de d6 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b4a4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b4b4:   ea d6 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b4c4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b4d4:   e8 d6 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b4e4:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b4f4:   f0 d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b504:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b514:   f5 d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b524:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b534:   fa d6 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b544:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b554:   11 d7 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b564:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b574:   25 d7 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |%...R....A....B.|
0x804b584:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b594:   60 05 00 00 53 d7 ff ff  4c 00 00 00 00 41 0e 08   |`...S...L....A..|
0x804b5a4:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b5b4:   1c 00 00 00 84 05 00 00  7b d7 ff ff 37 00 00 00   |........{...7...|
0x804b5c4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b5d4:   1c 00 00 00 a4 05 00 00  92 d7 ff ff 31 00 00 00   |............1...|
0x804b5e4:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b5f4:   1c 00 00 00 c4 05 00 00  a3 d7 ff ff 1f 00 00 00   |................|
0x804b604:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b614:   1c 00 00 00 e4 05 00 00  a2 d7 ff ff 2a 00 00 00   |............*...|
0x804b624:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b634:   1c 00 00 00 04 06 00 00  ac d7 ff ff 28 00 00 00   |............(...|
0x804b644:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b654:   1c 00 00 00 24 06 00 00  b4 d7 ff ff 29 00 00 00   |....$.......)...|
0x804b664:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b674:   1c 00 00 00 44 06 00 00  bd d7 ff ff 3c 00 00 00   |....D.......<...|
0x804b684:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b694:   1c 00 00 00 64 06 00 00  d9 d7 ff ff 3a 00 00 00   |....d.......:...|
0x804b6a4:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b6b4:   20 00 00 00 84 06 00 00  f3 d7 ff ff 53 00 00 00   | ...........S...|
0x804b6c4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b6d4:   c5 0c 04 04 20 00 00 00  a8 06 00 00 22 d8 ff ff   |.... ......."...|
0x804b6e4:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b6f4:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b704:   4b d8 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |K...8....A....B.|
0x804b714:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b724:   63 d8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |c...2....A....B.|
0x804b734:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b744:   75 d8 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |u........A....B.|
0x804b754:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b764:   69 d8 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |i........A....B.|
0x804b774:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b784:   60 d8 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |`........A....B.|
0x804b794:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b7a4:   55 d8 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |U........A....B.|
0x804b7b4:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b7c4:   4b d8 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |K...'....A....B.|
0x804b7d4:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b7e4:   52 d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |R...%....A....B.|
0x804b7f4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b804:   57 d8 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |W...?....A....B.|
0x804b814:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b824:   76 d8 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |v...9....A....B.|
0x804b834:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b844:   8f d8 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b854:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b864:   9b d8 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804b874:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b884:   a1 d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b894:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b8a4:   c3 d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b8b4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b8c4:   e5 d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b8d4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b8e4:   07 d9 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804b8f4:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b904:   5c d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |\...]....A....B.|
0x804b914:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b924:   99 d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b934:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b944:   d6 d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b954:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b964:   13 da ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b974:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b984:   83 da ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804b994:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b9a4:   c7 da ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804b9b4:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b9c4:   17 db ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b9d4:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b9e4:   b0 09 00 00 3a db ff ff  55 00 00 00 00 41 0e 08   |....:...U....A..|
0x804b9f4:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804ba04:   d0 09 00 00 6f db ff ff  47 00 00 00 00 41 0e 08   |....o...G....A..|
0x804ba14:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804ba24:   20 00 00 00 f4 09 00 00  92 db ff ff 68 00 00 00   | ...........h...|
0x804ba34:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804ba44:   0c 04 04 00 2c 00 00 00  18 0a 00 00 d6 db ff ff   |....,...........|
0x804ba54:   49 02 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |I....A....B..F..|
0x804ba64:   86 04 83 05 03 3c 02 c3  41 c6 41 c7 41 c5 0c 04   |.....<..A.A.A...|
0x804ba74:   04 00 00 00 2c 00 00 00  48 0a 00 00 ef dd ff ff   |....,...H.......|
0x804ba84:   c2 0e 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804ba94:   86 04 83 05 03 b2 0e c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804baa4:   04 00 00 00 34 00 00 00  78 0a 00 00 81 ec ff ff   |....4...x.......|
0x804bab4:   38 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |8....D...G...u.D|
0x804bac4:   0f 03 75 78 06 10 03 02  75 7c 03 23 04 c1 0c 01   |..ux....u|.#....|
0x804bad4:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bae4:   b0 0a 00 00 81 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804baf4:   10 00 00 00 c4 0a 00 00  71 f0 ff ff 04 00 00 00   |........q.......|
0x804bb04:   00 00 00 00 48 00 00 00  d8 0a 00 00 70 f0 ff ff   |....H.......p...|
0x804bb14:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bb24:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bb34:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bb44:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bb54:   10 00 00 00 24 0b 00 00  84 f0 ff ff 02 00 00 00   |....$...........|
0x804bb64:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 e4 ab 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff 48 92 e0 00   |............H...|
0x804d028:   2a ae 00 00 3e 3b 8d 25  08 00 00 00 67 63 2b 3f   |*...>;.%....gc+?|
0x804d038:   09 00 00 00 49 00 00 00  9e 5b e2 d6 05 00 b8 80   |....I....[......|
0x804d048:   f7 ff ff ff 88 00 ff ff  07 00 a7 de de fc be f9   |................|
0x804d058:   01 0a 00 00 2d 81 b2 c9  d7 5e 00 00 c2 5c 77 69   |....-....^...\wi|
0x804d068:   ed 01 75 90 fc ff ff ff  ae e0 d4 a2 06 00 00 00   |..u.............|
0x804d078:   ??                                                 |?               |
