;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 17:01:45
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 b0 db ff ff               	lea eax, [ebx - 0x2450]
0x804835c:   50                              	push eax
0x804835d:   8d 83 50 db ff ff               	lea eax, [ebx - 0x24b0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 d4 a7 04 08               	mov eax, 0x804a7d4
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 78 d0 04 08                  	mov eax, 0x804d078
0x80483a5:   3d 78 d0 04 08                  	cmp eax, 0x804d078
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 78 d0 04 08                  	push 0x804d078
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 78 d0 04 08                  	mov eax, 0x804d078
0x80483e5:   2d 78 d0 04 08                  	sub eax, 0x804d078
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 78 d0 04 08                  	push 0x804d078
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 ec 26 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 d8 26 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 d0 db ff ff               	lea edx, [eax - 0x2430]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 ab 26 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 8d 26 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 65 26 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 3b 26 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 12 26 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 cf 25 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 8d 25 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 35 25 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 e4 24 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 a7 24 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 70 24 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 51 24 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 27 24 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 fb 23 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 d0 23 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 87 23 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 3f 23 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 e5 22 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 92 22 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 53 22 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 1d 22 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 fb 21 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 ad 21 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 71 21 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 e8 20 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 b6 20 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 86 20 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 41 20 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 02 20 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 d0 1f 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 a1 1f 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 83 1f 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 5b 1f 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 36 1f 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 11 1f 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 da 1e 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 a5 1e 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 53 1e 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 08 1e 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 d1 1d 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 a0 1d 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 81 1d 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 57 1d 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 2f 1d 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 06 1d 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 ca 1c 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 8f 1c 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 3c 1c 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 f0 1b 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 b8 1b 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 89 1b 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 75 1b 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 5e 1b 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 49 1b 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 33 1b 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 0c 1b 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 e7 1a 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 a8 1a 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 6f 1a 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 43 1a 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 1d 1a 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 b0 dc ff ff               	fld dword ptr [eax - 0x2350]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 b0 dc ff ff               	fld dword ptr [eax - 0x2350]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 b4 dc ff ff               	fld dword ptr [eax - 0x234c]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 db 19 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 b0 dc ff ff               	fld dword ptr [eax - 0x2350]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 b0 dc ff ff               	fld dword ptr [eax - 0x2350]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 b4 dc ff ff               	fld dword ptr [eax - 0x234c]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 99 19 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 b8 dc ff ff               	fld dword ptr [eax - 0x2348]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 bc dc ff ff               	fld dword ptr [eax - 0x2344]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 c0 dc ff ff               	fld dword ptr [eax - 0x2340]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 57 19 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 c4 dc ff ff               	fld dword ptr [eax - 0x233c]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 c8 dc ff ff               	fld dword ptr [eax - 0x2338]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 cc dc ff ff               	fld dword ptr [eax - 0x2334]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 df 18 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 d0 dc ff ff               	fld qword ptr [eax - 0x2330]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 d0 dc ff ff               	fld qword ptr [eax - 0x2330]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 d8 dc ff ff               	fld qword ptr [eax - 0x2328]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 82 18 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 d0 dc ff ff               	fld qword ptr [eax - 0x2330]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 d0 dc ff ff               	fld qword ptr [eax - 0x2330]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 d8 dc ff ff               	fld qword ptr [eax - 0x2328]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 25 18 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 e0 dc ff ff               	fld qword ptr [eax - 0x2320]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 e8 dc ff ff               	fld qword ptr [eax - 0x2318]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 f0 dc ff ff               	fld qword ptr [eax - 0x2310]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 c8 17 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 f8 dc ff ff               	fld qword ptr [eax - 0x2308]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 00 dd ff ff               	fld qword ptr [eax - 0x2300]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 08 dd ff ff               	fld qword ptr [eax - 0x22f8]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 38 17 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 10 dd ff ff               	fld dword ptr [eax - 0x22f0]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 14 dd ff ff               	fld dword ptr [eax - 0x22ec]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 d4 16 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 63 16 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 20 16 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 e0 db ff ff               	lea eax, [ebx - 0x2420]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 04 dc ff ff               	lea eax, [ebx - 0x23fc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x8049786
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 2c                        	sub esp, 0x2c
0x804962f:   e8 16 15 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8049634:   05 cc 39 00 00                  	add eax, 0x39cc
0x8049639:   8b 55 28                        	mov edx, dword ptr [ebp + 0x28]
0x804963c:   8b 4d 34                        	mov ecx, dword ptr [ebp + 0x34]
0x804963f:   8b 7d 38                        	mov edi, dword ptr [ebp + 0x38]
0x8049642:   8b 5d 40                        	mov ebx, dword ptr [ebp + 0x40]
0x8049645:   89 5d d0                        	mov dword ptr [ebp - 0x30], ebx
0x8049648:   8b 75 4c                        	mov esi, dword ptr [ebp + 0x4c]
0x804964b:   89 75 cc                        	mov dword ptr [ebp - 0x34], esi
0x804964e:   8b 5d 50                        	mov ebx, dword ptr [ebp + 0x50]
0x8049651:   89 5d c8                        	mov dword ptr [ebp - 0x38], ebx
0x8049654:   8b 75 54                        	mov esi, dword ptr [ebp + 0x54]
0x8049657:   8b 5d 64                        	mov ebx, dword ptr [ebp + 0x64]
0x804965a:   88 55 f0                        	mov byte ptr [ebp - 0x10], dl
0x804965d:   89 ca                           	mov edx, ecx
0x804965f:   66 89 55 ec                     	mov word ptr [ebp - 0x14], dx
0x8049663:   89 fa                           	mov edx, edi
0x8049665:   66 89 55 e8                     	mov word ptr [ebp - 0x18], dx
0x8049669:   0f b7 55 d0                     	movzx edx, word ptr [ebp - 0x30]
0x804966d:   66 89 55 e4                     	mov word ptr [ebp - 0x1c], dx
0x8049671:   0f b7 55 cc                     	movzx edx, word ptr [ebp - 0x34]
0x8049675:   66 89 55 e0                     	mov word ptr [ebp - 0x20], dx
0x8049679:   0f b6 55 c8                     	movzx edx, byte ptr [ebp - 0x38]
0x804967d:   88 55 dc                        	mov byte ptr [ebp - 0x24], dl
0x8049680:   89 f2                           	mov edx, esi
0x8049682:   88 55 d8                        	mov byte ptr [ebp - 0x28], dl
0x8049685:   89 da                           	mov edx, ebx
0x8049687:   66 89 55 d4                     	mov word ptr [ebp - 0x2c], dx
0x804968b:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804968e:   89 90 24 00 00 00               	mov dword ptr [eax + 0x24], edx
0x8049694:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049697:   89 90 28 00 00 00               	mov dword ptr [eax + 0x28], edx
0x804969d:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80496a0:   89 90 2c 00 00 00               	mov dword ptr [eax + 0x2c], edx
0x80496a6:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80496a9:   89 90 30 00 00 00               	mov dword ptr [eax + 0x30], edx
0x80496af:   8b 55 18                        	mov edx, dword ptr [ebp + 0x18]
0x80496b2:   89 90 34 00 00 00               	mov dword ptr [eax + 0x34], edx
0x80496b8:   8b 55 1c                        	mov edx, dword ptr [ebp + 0x1c]
0x80496bb:   89 90 38 00 00 00               	mov dword ptr [eax + 0x38], edx
0x80496c1:   8b 55 20                        	mov edx, dword ptr [ebp + 0x20]
0x80496c4:   89 90 3c 00 00 00               	mov dword ptr [eax + 0x3c], edx
0x80496ca:   8b 55 24                        	mov edx, dword ptr [ebp + 0x24]
0x80496cd:   89 90 40 00 00 00               	mov dword ptr [eax + 0x40], edx
0x80496d3:   0f b6 55 f0                     	movzx edx, byte ptr [ebp - 0x10]
0x80496d7:   88 90 44 00 00 00               	mov byte ptr [eax + 0x44], dl
0x80496dd:   8b 55 2c                        	mov edx, dword ptr [ebp + 0x2c]
0x80496e0:   89 90 48 00 00 00               	mov dword ptr [eax + 0x48], edx
0x80496e6:   8b 55 30                        	mov edx, dword ptr [ebp + 0x30]
0x80496e9:   89 90 4c 00 00 00               	mov dword ptr [eax + 0x4c], edx
0x80496ef:   0f b7 55 ec                     	movzx edx, word ptr [ebp - 0x14]
0x80496f3:   66 89 90 50 00 00 00            	mov word ptr [eax + 0x50], dx
0x80496fa:   0f b7 55 e8                     	movzx edx, word ptr [ebp - 0x18]
0x80496fe:   66 89 90 52 00 00 00            	mov word ptr [eax + 0x52], dx
0x8049705:   8b 55 3c                        	mov edx, dword ptr [ebp + 0x3c]
0x8049708:   89 90 54 00 00 00               	mov dword ptr [eax + 0x54], edx
0x804970e:   0f b7 55 e4                     	movzx edx, word ptr [ebp - 0x1c]
0x8049712:   66 89 90 58 00 00 00            	mov word ptr [eax + 0x58], dx
0x8049719:   8b 55 44                        	mov edx, dword ptr [ebp + 0x44]
0x804971c:   89 90 5c 00 00 00               	mov dword ptr [eax + 0x5c], edx
0x8049722:   8b 55 48                        	mov edx, dword ptr [ebp + 0x48]
0x8049725:   89 90 60 00 00 00               	mov dword ptr [eax + 0x60], edx
0x804972b:   0f b7 55 e0                     	movzx edx, word ptr [ebp - 0x20]
0x804972f:   66 89 90 a4 04 00 00            	mov word ptr [eax + 0x4a4], dx
0x8049736:   0f b6 55 dc                     	movzx edx, byte ptr [ebp - 0x24]
0x804973a:   88 90 a6 04 00 00               	mov byte ptr [eax + 0x4a6], dl
0x8049740:   0f b6 55 d8                     	movzx edx, byte ptr [ebp - 0x28]
0x8049744:   88 90 a7 04 00 00               	mov byte ptr [eax + 0x4a7], dl
0x804974a:   8b 55 58                        	mov edx, dword ptr [ebp + 0x58]
0x804974d:   89 90 64 00 00 00               	mov dword ptr [eax + 0x64], edx
0x8049753:   8b 55 5c                        	mov edx, dword ptr [ebp + 0x5c]
0x8049756:   89 90 68 00 00 00               	mov dword ptr [eax + 0x68], edx
0x804975c:   8b 55 60                        	mov edx, dword ptr [ebp + 0x60]
0x804975f:   89 90 6c 00 00 00               	mov dword ptr [eax + 0x6c], edx
0x8049765:   0f b7 55 d4                     	movzx edx, word ptr [ebp - 0x2c]
0x8049769:   66 89 90 70 00 00 00            	mov word ptr [eax + 0x70], dx
0x8049770:   8b 55 68                        	mov edx, dword ptr [ebp + 0x68]
0x8049773:   89 90 74 00 00 00               	mov dword ptr [eax + 0x74], edx
0x8049779:   b8 00 00 00 00                  	mov eax, 0
0x804977e:   83 c4 2c                        	add esp, 0x2c
0x8049781:   5b                              	pop ebx
0x8049782:   5e                              	pop esi
0x8049783:   5f                              	pop edi
0x8049784:   5d                              	pop ebp
0x8049785:   c3                              	ret 
; function: func_1 at 0x8049786 -- 0x804a7d4
0x8049786:   55                              	push ebp
0x8049787:   89 e5                           	mov ebp, esp
0x8049789:   57                              	push edi
0x804978a:   56                              	push esi
0x804978b:   53                              	push ebx
0x804978c:   81 ec 58 01 00 00               	sub esp, 0x158
0x8049792:   e8 b3 13 00 00                  	call 0x804ab4a <__x86.get_pc_thunk.ax>
0x8049797:   05 69 38 00 00                  	add eax, 0x3869
0x804979c:   c7 45 f0 a8 98 31 9b            	mov dword ptr [ebp - 0x10], 0x9b3198a8
0x80497a3:   c7 45 ec 94 80 5c 90            	mov dword ptr [ebp - 0x14], 0x905c8094
0x80497aa:   c7 45 e8 1b 6f 5c 88            	mov dword ptr [ebp - 0x18], 0x885c6f1b
0x80497b1:   c7 45 80 ce b0 60 6e            	mov dword ptr [ebp - 0x80], 0x6e60b0ce
0x80497b8:   c7 45 e4 36 5f fe 94            	mov dword ptr [ebp - 0x1c], 0x94fe5f36
0x80497bf:   c7 45 e0 fb ff ff ff            	mov dword ptr [ebp - 0x20], 0xfffffffb
0x80497c6:   c7 45 dc 20 4a 05 ef            	mov dword ptr [ebp - 0x24], 0xef054a20
0x80497cd:   c7 45 d8 ff ff ff ff            	mov dword ptr [ebp - 0x28], 0xffffffff
0x80497d4:   c6 45 d7 09                     	mov byte ptr [ebp - 0x29], 9
0x80497d8:   c7 45 d0 05 ad 7d dc            	mov dword ptr [ebp - 0x30], 0xdc7dad05
0x80497df:   c7 45 cc 0a 49 88 f6            	mov dword ptr [ebp - 0x34], 0xf688490a
0x80497e6:   66 c7 45 ca 05 00               	mov word ptr [ebp - 0x36], 5
0x80497ec:   66 c7 45 c8 01 00               	mov word ptr [ebp - 0x38], 1
0x80497f2:   c7 45 c4 fa ff ff ff            	mov dword ptr [ebp - 0x3c], 0xfffffffa
0x80497f9:   66 c7 85 7e ff ff ff 06 00      	mov word ptr [ebp - 0x82], 6
0x8049802:   c7 85 78 ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0x88], 6
0x804980c:   c7 45 c0 01 00 00 00            	mov dword ptr [ebp - 0x40], 1
0x8049813:   66 c7 45 be 00 00               	mov word ptr [ebp - 0x42], 0
0x8049819:   c6 45 bd 00                     	mov byte ptr [ebp - 0x43], 0
0x804981d:   c6 45 bc 00                     	mov byte ptr [ebp - 0x44], 0
0x8049821:   c7 45 b8 f8 ff ff ff            	mov dword ptr [ebp - 0x48], 0xfffffff8
0x8049828:   c7 45 b4 fc ff ff ff            	mov dword ptr [ebp - 0x4c], 0xfffffffc
0x804982f:   c7 85 74 ff ff ff 5b 0f 14 ad   	mov dword ptr [ebp - 0x8c], 0xad140f5b
0x8049839:   66 c7 45 b2 25 da               	mov word ptr [ebp - 0x4e], 0xda25
0x804983f:   c7 45 ac fa ff ff ff            	mov dword ptr [ebp - 0x54], 0xfffffffa
0x8049846:   66 c7 85 72 ff ff ff 01 00      	mov word ptr [ebp - 0x8e], 1
0x804984f:   c6 85 71 ff ff ff 07            	mov byte ptr [ebp - 0x8f], 7
0x8049856:   c7 45 a8 06 00 00 00            	mov dword ptr [ebp - 0x58], 6
0x804985d:   c6 85 70 ff ff ff d1            	mov byte ptr [ebp - 0x90], 0xd1
0x8049864:   66 c7 45 a6 7f c2               	mov word ptr [ebp - 0x5a], 0xc27f
0x804986a:   c7 85 6c ff ff ff 2b e2 ae a3   	mov dword ptr [ebp - 0x94], 0xa3aee22b
0x8049874:   c6 85 6b ff ff ff 00            	mov byte ptr [ebp - 0x95], 0
0x804987b:   c7 85 64 ff ff ff 03 00 00 00   	mov dword ptr [ebp - 0x9c], 3
0x8049885:   c7 85 60 ff ff ff df 89 5c d8   	mov dword ptr [ebp - 0xa0], 0xd85c89df
0x804988f:   c7 85 5c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa4], 0
0x8049899:   c7 85 58 ff ff ff 22 68 99 bd   	mov dword ptr [ebp - 0xa8], 0xbd996822
0x80498a3:   66 c7 45 a4 05 00               	mov word ptr [ebp - 0x5c], 5
0x80498a9:   c7 45 e4 f4 ff ff ff            	mov dword ptr [ebp - 0x1c], 0xfffffff4
0x80498b0:   e9 dc 0d 00 00                  	jmp 0x804a691 <func_1+0xf0b>
0x80498b5:   66 c7 85 44 ff ff ff 83 2b      	mov word ptr [ebp - 0xbc], 0x2b83
0x80498be:   c7 45 a0 34 0a 39 58            	mov dword ptr [ebp - 0x60], 0x58390a34
0x80498c5:   66 c7 85 42 ff ff ff 5a 89      	mov word ptr [ebp - 0xbe], 0x895a
0x80498ce:   c7 45 9c 09 22 31 21            	mov dword ptr [ebp - 0x64], 0x21312209
0x80498d5:   66 c7 85 40 ff ff ff 43 9f      	mov word ptr [ebp - 0xc0], 0x9f43
0x80498de:   66 c7 85 3e ff ff ff 8d 91      	mov word ptr [ebp - 0xc2], 0x918d
0x80498e7:   c7 85 38 ff ff ff 0a c8 32 db   	mov dword ptr [ebp - 0xc8], 0xdb32c80a
0x80498f1:   c7 85 34 ff ff ff 55 c9 bc 99   	mov dword ptr [ebp - 0xcc], 0x99bcc955
0x80498fb:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x8049902:   e9 35 0c 00 00                  	jmp 0x804a53c <func_1+0xdb6>
0x8049907:   c7 45 98 7a 83 c3 8c            	mov dword ptr [ebp - 0x68], 0x8cc3837a
0x804990e:   c7 45 94 45 8c 45 3e            	mov dword ptr [ebp - 0x6c], 0x3e458c45
0x8049915:   c7 45 90 f0 87 24 4b            	mov dword ptr [ebp - 0x70], 0x4b2487f0
0x804991c:   c7 85 30 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd0], 0
0x8049926:   66 c7 85 2e ff ff ff f2 15      	mov word ptr [ebp - 0xd2], 0x15f2
0x804992f:   66 c7 85 2c ff ff ff 01 00      	mov word ptr [ebp - 0xd4], 1
0x8049938:   c6 85 2b ff ff ff 0a            	mov byte ptr [ebp - 0xd5], 0xa
0x804993f:   c7 85 24 ff ff ff 3e e2 5b ef   	mov dword ptr [ebp - 0xdc], 0xef5be23e
0x8049949:   c7 45 dc f0 ff ff ff            	mov dword ptr [ebp - 0x24], 0xfffffff0
0x8049950:   e9 cf 00 00 00                  	jmp 0x8049a24 <func_1+0x29e>
0x8049955:   c7 85 20 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xe0], 0xffffffff
0x804995f:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049962:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049965:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049968:   66 85 c0                        	test ax, ax
0x804996b:   74 0d                           	je 0x804997a <func_1+0x1f4>
0x804996d:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049971:   74 07                           	je 0x804997a <func_1+0x1f4>
0x8049973:   b8 01 00 00 00                  	mov eax, 1
0x8049978:   eb 05                           	jmp 0x804997f <func_1+0x1f9>
0x804997a:   b8 00 00 00 00                  	mov eax, 0
0x804997f:   0b 45 94                        	or eax, dword ptr [ebp - 0x6c]
0x8049982:   85 c0                           	test eax, eax
0x8049984:   74 11                           	je 0x8049997 <func_1+0x211>
0x8049986:   66 83 bd 44 ff ff ff 00         	cmp word ptr [ebp - 0xbc], 0
0x804998e:   74 07                           	je 0x8049997 <func_1+0x211>
0x8049990:   b8 01 00 00 00                  	mov eax, 1
0x8049995:   eb 05                           	jmp 0x804999c <func_1+0x216>
0x8049997:   b8 00 00 00 00                  	mov eax, 0
0x804999c:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804999f:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x80499a3:   0f 85 87 00 00 00               	jne 0x8049a30 <func_1+0x2aa>
0x80499a9:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x80499ad:   0f 9f c0                        	setg al
0x80499b0:   0f b6 d0                        	movzx edx, al
0x80499b3:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x80499b6:   29 c2                           	sub edx, eax
0x80499b8:   89 d0                           	mov eax, edx
0x80499ba:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x80499bd:   c7 45 94 05 00 00 00            	mov dword ptr [ebp - 0x6c], 5
0x80499c4:   eb 54                           	jmp 0x8049a1a <func_1+0x294>
0x80499c6:   c7 85 1c ff ff ff f9 ff ff ff   	mov dword ptr [ebp - 0xe4], 0xfffffff9
0x80499d0:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x80499d3:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x80499d6:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x80499d9:   3b 45 94                        	cmp eax, dword ptr [ebp - 0x6c]
0x80499dc:   0f b7 95 72 ff ff ff            	movzx edx, word ptr [ebp - 0x8e]
0x80499e3:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x80499e6:   3b 85 1c ff ff ff               	cmp eax, dword ptr [ebp - 0xe4]
0x80499ec:   0f 9f c0                        	setg al
0x80499ef:   0f b6 c0                        	movzx eax, al
0x80499f2:   39 c2                           	cmp edx, eax
0x80499f4:   0f 9f c0                        	setg al
0x80499f7:   0f b6 c0                        	movzx eax, al
0x80499fa:   f7 d8                           	neg eax
0x80499fc:   98                              	cwde 
0x80499fd:   c1 e0 07                        	shl eax, 7
0x8049a00:   83 f0 e1                        	xor eax, 0xffffffe1
0x8049a03:   88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x8049a06:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x8049a0a:   33 45 e0                        	xor eax, dword ptr [ebp - 0x20]
0x8049a0d:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049a10:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049a13:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049a16:   83 6d 94 01                     	sub dword ptr [ebp - 0x6c], 1
0x8049a1a:   83 7d 94 f9                     	cmp dword ptr [ebp - 0x6c], -7
0x8049a1e:   7d a6                           	jge 0x80499c6 <func_1+0x240>
0x8049a20:   83 45 dc 01                     	add dword ptr [ebp - 0x24], 1
0x8049a24:   83 7d dc f7                     	cmp dword ptr [ebp - 0x24], -9
0x8049a28:   0f 8c 27 ff ff ff               	jl 0x8049955 <func_1+0x1cf>
0x8049a2e:   eb 01                           	jmp 0x8049a31 <func_1+0x2ab>
0x8049a30:   90                              	nop 
0x8049a31:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049a34:   8d 50 ff                        	lea edx, [eax - 1]
0x8049a37:   89 55 d0                        	mov dword ptr [ebp - 0x30], edx
0x8049a3a:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x8049a3d:   0f 94 c0                        	sete al
0x8049a40:   0f b6 c0                        	movzx eax, al
0x8049a43:   23 45 e0                        	and eax, dword ptr [ebp - 0x20]
0x8049a46:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049a49:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049a4c:   23 45 cc                        	and eax, dword ptr [ebp - 0x34]
0x8049a4f:   89 c2                           	mov edx, eax
0x8049a51:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049a54:   09 c2                           	or edx, eax
0x8049a56:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049a59:   21 d0                           	and eax, edx
0x8049a5b:   85 c0                           	test eax, eax
0x8049a5d:   0f 84 68 01 00 00               	je 0x8049bcb <func_1+0x445>
0x8049a63:   c7 85 c4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x13c], 0
0x8049a6d:   66 c7 85 c2 fe ff ff 05 00      	mov word ptr [ebp - 0x13e], 5
0x8049a76:   c7 85 bc fe ff ff 05 00 00 00   	mov dword ptr [ebp - 0x144], 5
0x8049a80:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049a83:   09 45 d8                        	or dword ptr [ebp - 0x28], eax
0x8049a86:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049a89:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049a8c:   8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x8049a92:   66 89 45 ca                     	mov word ptr [ebp - 0x36], ax
0x8049a96:   66 83 bd c2 fe ff ff 00         	cmp word ptr [ebp - 0x13e], 0
0x8049a9e:   0f 9f c0                        	setg al
0x8049aa1:   0f b6 c0                        	movzx eax, al
0x8049aa4:   39 45 cc                        	cmp dword ptr [ebp - 0x34], eax
0x8049aa7:   0f 97 c0                        	seta al
0x8049aaa:   0f b6 c0                        	movzx eax, al
0x8049aad:   89 85 bc fe ff ff               	mov dword ptr [ebp - 0x144], eax
0x8049ab3:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x8049ab7:   39 85 bc fe ff ff               	cmp dword ptr [ebp - 0x144], eax
0x8049abd:   0f 9e c0                        	setle al
0x8049ac0:   0f b6 c0                        	movzx eax, al
0x8049ac3:   89 c2                           	mov edx, eax
0x8049ac5:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x8049ac9:   09 d0                           	or eax, edx
0x8049acb:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x8049acf:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x8049ad3:   66 3b 85 72 ff ff ff            	cmp ax, word ptr [ebp - 0x8e]
0x8049ada:   0f 93 c0                        	setae al
0x8049add:   0f b6 c0                        	movzx eax, al
0x8049ae0:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x8049ae3:   0f 96 c0                        	setbe al
0x8049ae6:   0f b6 d0                        	movzx edx, al
0x8049ae9:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049aec:   0f b7 c0                        	movzx eax, ax
0x8049aef:   29 c2                           	sub edx, eax
0x8049af1:   89 d0                           	mov eax, edx
0x8049af3:   21 45 dc                        	and dword ptr [ebp - 0x24], eax
0x8049af6:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049af9:   0f be d0                        	movsx edx, al
0x8049afc:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049aff:   0f be c0                        	movsx eax, al
0x8049b02:   89 c1                           	mov ecx, eax
0x8049b04:   d3 fa                           	sar edx, cl
0x8049b06:   89 d0                           	mov eax, edx
0x8049b08:   f7 d0                           	not eax
0x8049b0a:   66 89 85 42 ff ff ff            	mov word ptr [ebp - 0xbe], ax
0x8049b11:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049b14:   0f b7 c0                        	movzx eax, ax
0x8049b17:   ba eb fb 00 00                  	mov edx, 0xfbeb
0x8049b1c:   89 c1                           	mov ecx, eax
0x8049b1e:   d3 fa                           	sar edx, cl
0x8049b20:   89 d0                           	mov eax, edx
0x8049b22:   83 c8 fb                        	or eax, 0xfffffffb
0x8049b25:   0f b7 d0                        	movzx edx, ax
0x8049b28:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x8049b2c:   0f b7 c0                        	movzx eax, ax
0x8049b2f:   89 c1                           	mov ecx, eax
0x8049b31:   d3 fa                           	sar edx, cl
0x8049b33:   89 d0                           	mov eax, edx
0x8049b35:   ba c0 8d 2b 31                  	mov edx, 0x312b8dc0
0x8049b3a:   29 c2                           	sub edx, eax
0x8049b3c:   89 d0                           	mov eax, edx
0x8049b3e:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049b41:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x8049b45:   0f be 75 bc                     	movsx esi, byte ptr [ebp - 0x44]
0x8049b49:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x8049b4f:   0f be 7d bd                     	movsx edi, byte ptr [ebp - 0x43]
0x8049b53:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x8049b59:   0f bf 7d be                     	movsx edi, word ptr [ebp - 0x42]
0x8049b5d:   0f bf b5 7e ff ff ff            	movsx esi, word ptr [ebp - 0x82]
0x8049b64:   0f b7 5d c8                     	movzx ebx, word ptr [ebp - 0x38]
0x8049b68:   0f bf 4d ca                     	movsx ecx, word ptr [ebp - 0x36]
0x8049b6c:   0f be 55 d7                     	movsx edx, byte ptr [ebp - 0x29]
0x8049b70:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x8049b73:   50                              	push eax
0x8049b74:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049b7a:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049b7d:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049b80:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049b86:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049b8c:   57                              	push edi
0x8049b8d:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049b90:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049b96:   56                              	push esi
0x8049b97:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049b9a:   53                              	push ebx
0x8049b9b:   51                              	push ecx
0x8049b9c:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049b9f:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049ba2:   52                              	push edx
0x8049ba3:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049ba6:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049ba9:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049bac:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049baf:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049bb2:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049bb5:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049bb8:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049bbb:   e8 66 fa ff ff                  	call 0x8049626 <set_var>
0x8049bc0:   83 c4 64                        	add esp, 0x64
0x8049bc3:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049bc6:   e9 01 0c 00 00                  	jmp 0x804a7cc <func_1+0x1046>
0x8049bcb:   c7 45 8c 3e 4d 58 51            	mov dword ptr [ebp - 0x74], 0x51584d3e
0x8049bd2:   c7 85 18 ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0xe8], 0xfffffffb
0x8049bdc:   c7 45 88 3a cf fb d1            	mov dword ptr [ebp - 0x78], 0xd1fbcf3a
0x8049be3:   c7 85 14 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xec], 0
0x8049bed:   c6 85 13 ff ff ff ae            	mov byte ptr [ebp - 0xed], 0xae
0x8049bf4:   66 c7 45 c8 0a 00               	mov word ptr [ebp - 0x38], 0xa
0x8049bfa:   eb 71                           	jmp 0x8049c6d <func_1+0x4e7>
0x8049bfc:   c7 85 d0 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x130], 0xffffffff
0x8049c06:   c7 85 cc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x134], 0
0x8049c10:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049c13:   33 45 90                        	xor eax, dword ptr [ebp - 0x70]
0x8049c16:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049c19:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049c1c:   21 45 dc                        	and dword ptr [ebp - 0x24], eax
0x8049c1f:   83 85 d0 fe ff ff 01            	add dword ptr [ebp - 0x130], 1
0x8049c26:   83 45 8c 01                     	add dword ptr [ebp - 0x74], 1
0x8049c2a:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049c2d:   84 c0                           	test al, al
0x8049c2f:   0f 94 c0                        	sete al
0x8049c32:   0f b6 c0                        	movzx eax, al
0x8049c35:   39 45 a8                        	cmp dword ptr [ebp - 0x58], eax
0x8049c38:   7d 17                           	jge 0x8049c51 <func_1+0x4cb>
0x8049c3a:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049c3d:   89 85 18 ff ff ff               	mov dword ptr [ebp - 0xe8], eax
0x8049c43:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049c46:   83 e0 3d                        	and eax, 0x3d
0x8049c49:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x8049c4f:   eb 11                           	jmp 0x8049c62 <func_1+0x4dc>
0x8049c51:   c7 85 c8 fe ff ff f9 ff ff ff   	mov dword ptr [ebp - 0x138], 0xfffffff9
0x8049c5b:   83 85 c8 fe ff ff 01            	add dword ptr [ebp - 0x138], 1
0x8049c62:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x8049c66:   83 c0 01                        	add eax, 1
0x8049c69:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x8049c6d:   66 83 7d c8 2f                  	cmp word ptr [ebp - 0x38], 0x2f
0x8049c72:   76 88                           	jbe 0x8049bfc <func_1+0x476>
0x8049c74:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x8049c77:   83 e8 01                        	sub eax, 1
0x8049c7a:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x8049c7d:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x8049c81:   74 0e                           	je 0x8049c91 <func_1+0x50b>
0x8049c83:   66 83 7d ca 00                  	cmp word ptr [ebp - 0x36], 0
0x8049c88:   74 07                           	je 0x8049c91 <func_1+0x50b>
0x8049c8a:   b8 01 00 00 00                  	mov eax, 1
0x8049c8f:   eb 05                           	jmp 0x8049c96 <func_1+0x510>
0x8049c91:   b8 00 00 00 00                  	mov eax, 0
0x8049c96:   85 c0                           	test eax, eax
0x8049c98:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049c9b:   0f b7 c0                        	movzx eax, ax
0x8049c9e:   ba ff ff 00 00                  	mov edx, 0xffff
0x8049ca3:   29 c2                           	sub edx, eax
0x8049ca5:   89 d0                           	mov eax, edx
0x8049ca7:   89 85 18 ff ff ff               	mov dword ptr [ebp - 0xe8], eax
0x8049cad:   0f bf 85 2e ff ff ff            	movsx eax, word ptr [ebp - 0xd2]
0x8049cb4:   23 85 18 ff ff ff               	and eax, dword ptr [ebp - 0xe8]
0x8049cba:   3d 50 72 00 00                  	cmp eax, 0x7250
0x8049cbf:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049cc2:   0f b6 f0                        	movzx esi, al
0x8049cc5:   b8 01 00 00 00                  	mov eax, 1
0x8049cca:   99                              	cdq 
0x8049ccb:   f7 fe                           	idiv esi
0x8049ccd:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049cd0:   0f b6 85 71 ff ff ff            	movzx eax, byte ptr [ebp - 0x8f]
0x8049cd7:   66 39 85 42 ff ff ff            	cmp word ptr [ebp - 0xbe], ax
0x8049cde:   81 7d ec 13 b1 00 00            	cmp dword ptr [ebp - 0x14], 0xb113
0x8049ce5:   0f 9e c0                        	setle al
0x8049ce8:   0f b6 c0                        	movzx eax, al
0x8049ceb:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049cee:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049cf1:   3d 87 7b 74 aa                  	cmp eax, 0xaa747b87
0x8049cf6:   0f 97 c0                        	seta al
0x8049cf9:   0f b6 c0                        	movzx eax, al
0x8049cfc:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049cff:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049d02:   89 c3                           	mov ebx, eax
0x8049d04:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049d07:   3b 45 ec                        	cmp eax, dword ptr [ebp - 0x14]
0x8049d0a:   0f 94 c0                        	sete al
0x8049d0d:   0f b6 d0                        	movzx edx, al
0x8049d10:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x8049d14:   29 c2                           	sub edx, eax
0x8049d16:   89 d0                           	mov eax, edx
0x8049d18:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x8049d1b:   72 10                           	jb 0x8049d2d <func_1+0x5a7>
0x8049d1d:   83 bd 78 ff ff ff 00            	cmp dword ptr [ebp - 0x88], 0
0x8049d24:   74 07                           	je 0x8049d2d <func_1+0x5a7>
0x8049d26:   b8 01 00 00 00                  	mov eax, 1
0x8049d2b:   eb 05                           	jmp 0x8049d32 <func_1+0x5ac>
0x8049d2d:   b8 00 00 00 00                  	mov eax, 0
0x8049d32:   3d bb 62 d5 85                  	cmp eax, 0x85d562bb
0x8049d37:   74 10                           	je 0x8049d49 <func_1+0x5c3>
0x8049d39:   80 bd 70 ff ff ff 00            	cmp byte ptr [ebp - 0x90], 0
0x8049d40:   74 07                           	je 0x8049d49 <func_1+0x5c3>
0x8049d42:   b8 01 00 00 00                  	mov eax, 1
0x8049d47:   eb 05                           	jmp 0x8049d4e <func_1+0x5c8>
0x8049d49:   b8 00 00 00 00                  	mov eax, 0
0x8049d4e:   83 f8 01                        	cmp eax, 1
0x8049d51:   0f 94 c0                        	sete al
0x8049d54:   0f b6 d0                        	movzx edx, al
0x8049d57:   0f b7 85 44 ff ff ff            	movzx eax, word ptr [ebp - 0xbc]
0x8049d5e:   39 c2                           	cmp edx, eax
0x8049d60:   0f 94 c0                        	sete al
0x8049d63:   0f b6 d0                        	movzx edx, al
0x8049d66:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049d69:   98                              	cwde 
0x8049d6a:   89 c1                           	mov ecx, eax
0x8049d6c:   d3 e2                           	shl edx, cl
0x8049d6e:   89 d0                           	mov eax, edx
0x8049d70:   31 d8                           	xor eax, ebx
0x8049d72:   0f bf d0                        	movsx edx, ax
0x8049d75:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x8049d7b:   98                              	cwde 
0x8049d7c:   89 c1                           	mov ecx, eax
0x8049d7e:   d3 fa                           	sar edx, cl
0x8049d80:   89 d0                           	mov eax, edx
0x8049d82:   85 c0                           	test eax, eax
0x8049d84:   0f 84 66 02 00 00               	je 0x8049ff0 <func_1+0x86a>
0x8049d8a:   c7 85 fc fe ff ff fe ff ff ff   	mov dword ptr [ebp - 0x104], 0xfffffffe
0x8049d94:   c7 85 f8 fe ff ff c0 9e 41 49   	mov dword ptr [ebp - 0x108], 0x49419ec0
0x8049d9e:   c6 85 f7 fe ff ff 00            	mov byte ptr [ebp - 0x109], 0
0x8049da5:   c7 85 f0 fe ff ff b0 c8 14 d8   	mov dword ptr [ebp - 0x110], 0xd814c8b0
0x8049daf:   c7 85 ec fe ff ff 62 34 43 d0   	mov dword ptr [ebp - 0x114], 0xd0433462
0x8049db9:   c7 85 e8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x118], 0
0x8049dc3:   0f b7 85 44 ff ff ff            	movzx eax, word ptr [ebp - 0xbc]
0x8049dca:   0b 45 98                        	or eax, dword ptr [ebp - 0x68]
0x8049dcd:   23 85 78 ff ff ff               	and eax, dword ptr [ebp - 0x88]
0x8049dd3:   83 f8 65                        	cmp eax, 0x65
0x8049dd6:   0f 9f c0                        	setg al
0x8049dd9:   0f b6 c0                        	movzx eax, al
0x8049ddc:   39 85 fc fe ff ff               	cmp dword ptr [ebp - 0x104], eax
0x8049de2:   77 07                           	ja 0x8049deb <func_1+0x665>
0x8049de4:   ba ac ff ff ff                  	mov edx, 0xffffffac
0x8049de9:   eb 05                           	jmp 0x8049df0 <func_1+0x66a>
0x8049deb:   ba ad ff ff ff                  	mov edx, 0xffffffad
0x8049df0:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x8049df4:   0f af c2                        	imul eax, edx
0x8049df7:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049dfa:   66 83 bd 44 ff ff ff 00         	cmp word ptr [ebp - 0xbc], 0
0x8049e02:   0f 85 40 07 00 00               	jne 0x804a548 <func_1+0xdc2>
0x8049e08:   83 7d 80 00                     	cmp dword ptr [ebp - 0x80], 0
0x8049e0c:   74 4a                           	je 0x8049e58 <func_1+0x6d2>
0x8049e0e:   c6 85 e7 fe ff ff 83            	mov byte ptr [ebp - 0x119], 0x83
0x8049e15:   83 bd 30 ff ff ff 00            	cmp dword ptr [ebp - 0xd0], 0
0x8049e1c:   75 06                           	jne 0x8049e24 <func_1+0x69e>
0x8049e1e:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049e22:   74 07                           	je 0x8049e2b <func_1+0x6a5>
0x8049e24:   b8 01 00 00 00                  	mov eax, 1
0x8049e29:   eb 05                           	jmp 0x8049e30 <func_1+0x6aa>
0x8049e2b:   b8 00 00 00 00                  	mov eax, 0
0x8049e30:   88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x8049e33:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x8049e37:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049e3a:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049e3d:   83 f8 01                        	cmp eax, 1
0x8049e40:   0f 96 c0                        	setbe al
0x8049e43:   0f b6 c0                        	movzx eax, al
0x8049e46:   89 85 f8 fe ff ff               	mov dword ptr [ebp - 0x108], eax
0x8049e4c:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x8049e53:   e9 89 01 00 00                  	jmp 0x8049fe1 <func_1+0x85b>
0x8049e58:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x8049e5c:   0f be 75 bc                     	movsx esi, byte ptr [ebp - 0x44]
0x8049e60:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x8049e66:   0f be 7d bd                     	movsx edi, byte ptr [ebp - 0x43]
0x8049e6a:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x8049e70:   0f bf 7d be                     	movsx edi, word ptr [ebp - 0x42]
0x8049e74:   0f bf b5 7e ff ff ff            	movsx esi, word ptr [ebp - 0x82]
0x8049e7b:   0f b7 5d c8                     	movzx ebx, word ptr [ebp - 0x38]
0x8049e7f:   0f bf 4d ca                     	movsx ecx, word ptr [ebp - 0x36]
0x8049e83:   0f be 55 d7                     	movsx edx, byte ptr [ebp - 0x29]
0x8049e87:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x8049e8a:   50                              	push eax
0x8049e8b:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049e91:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049e94:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049e97:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049e9d:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049ea3:   57                              	push edi
0x8049ea4:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049ea7:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049ead:   56                              	push esi
0x8049eae:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049eb1:   53                              	push ebx
0x8049eb2:   51                              	push ecx
0x8049eb3:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049eb6:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049eb9:   52                              	push edx
0x8049eba:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049ebd:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049ec0:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049ec3:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049ec6:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049ec9:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049ecc:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049ecf:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049ed2:   e8 4f f7 ff ff                  	call 0x8049626 <set_var>
0x8049ed7:   83 c4 64                        	add esp, 0x64
0x8049eda:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049edd:   e9 ea 08 00 00                  	jmp 0x804a7cc <func_1+0x1046>
0x8049ee2:   c6 85 da fe ff ff ff            	mov byte ptr [ebp - 0x126], 0xff
0x8049ee9:   c7 85 d4 fe ff ff 69 fa 3e fc   	mov dword ptr [ebp - 0x12c], 0xfc3efa69
0x8049ef3:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049ef6:   88 85 f7 fe ff ff               	mov byte ptr [ebp - 0x109], al
0x8049efc:   c6 85 da fe ff ff b7            	mov byte ptr [ebp - 0x126], 0xb7
0x8049f03:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049f06:   0f be c0                        	movsx eax, al
0x8049f09:   83 e8 49                        	sub eax, 0x49
0x8049f0c:   85 c0                           	test eax, eax
0x8049f0e:   0f 9e c0                        	setle al
0x8049f11:   88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x8049f14:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x8049f18:   c1 e0 05                        	shl eax, 5
0x8049f1b:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049f1e:   0f b6 85 f7 fe ff ff            	movzx eax, byte ptr [ebp - 0x109]
0x8049f25:   0f b6 d8                        	movzx ebx, al
0x8049f28:   66 83 7d c8 00                  	cmp word ptr [ebp - 0x38], 0
0x8049f2d:   74 3c                           	je 0x8049f6b <func_1+0x7e5>
0x8049f2f:   66 c7 45 be 40 af               	mov word ptr [ebp - 0x42], 0xaf40
0x8049f35:   0f bf 45 be                     	movsx eax, word ptr [ebp - 0x42]
0x8049f39:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049f3c:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049f3f:   89 c2                           	mov edx, eax
0x8049f41:   8b 85 f0 fe ff ff               	mov eax, dword ptr [ebp - 0x110]
0x8049f47:   89 c1                           	mov ecx, eax
0x8049f49:   89 d0                           	mov eax, edx
0x8049f4b:   ba 00 00 00 00                  	mov edx, 0
0x8049f50:   66 f7 f1                        	div cx
0x8049f53:   83 c8 02                        	or eax, 2
0x8049f56:   89 c2                           	mov edx, eax
0x8049f58:   0f b7 85 40 ff ff ff            	movzx eax, word ptr [ebp - 0xc0]
0x8049f5f:   66 39 c2                        	cmp dx, ax
0x8049f62:   74 07                           	je 0x8049f6b <func_1+0x7e5>
0x8049f64:   b8 01 00 00 00                  	mov eax, 1
0x8049f69:   eb 05                           	jmp 0x8049f70 <func_1+0x7ea>
0x8049f6b:   b8 00 00 00 00                  	mov eax, 0
0x8049f70:   89 c1                           	mov ecx, eax
0x8049f72:   0f b7 85 2e ff ff ff            	movzx eax, word ptr [ebp - 0xd2]
0x8049f79:   89 c2                           	mov edx, eax
0x8049f7b:   0f b6 c1                        	movzx eax, cl
0x8049f7e:   f6 f2                           	div dl
0x8049f80:   0f b6 c4                        	movzx eax, ah
0x8049f83:   88 45 bd                        	mov byte ptr [ebp - 0x43], al
0x8049f86:   0f be 45 bd                     	movsx eax, byte ptr [ebp - 0x43]
0x8049f8a:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049f8d:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049f90:   30 45 bc                        	xor byte ptr [ebp - 0x44], al
0x8049f93:   0f be 45 bc                     	movsx eax, byte ptr [ebp - 0x44]
0x8049f97:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049f9a:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049f9d:   89 c2                           	mov edx, eax
0x8049f9f:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049fa2:   29 c2                           	sub edx, eax
0x8049fa4:   89 d0                           	mov eax, edx
0x8049fa6:   0f b6 c0                        	movzx eax, al
0x8049fa9:   89 c1                           	mov ecx, eax
0x8049fab:   d3 e3                           	shl ebx, cl
0x8049fad:   89 d8                           	mov eax, ebx
0x8049faf:   89 85 18 ff ff ff               	mov dword ptr [ebp - 0xe8], eax
0x8049fb5:   b8 01 00 00 00                  	mov eax, 1
0x8049fba:   89 c2                           	mov edx, eax
0x8049fbc:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x8049fc0:   01 d0                           	add eax, edx
0x8049fc2:   0f be d0                        	movsx edx, al
0x8049fc5:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049fc8:   0f be c0                        	movsx eax, al
0x8049fcb:   29 c2                           	sub edx, eax
0x8049fcd:   89 d0                           	mov eax, edx
0x8049fcf:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049fd2:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049fd5:   09 45 a0                        	or dword ptr [ebp - 0x60], eax
0x8049fd8:   66 83 6d b2 01                  	sub word ptr [ebp - 0x4e], 1
0x8049fdd:   83 45 90 04                     	add dword ptr [ebp - 0x70], 4
0x8049fe1:   83 7d 90 2e                     	cmp dword ptr [ebp - 0x70], 0x2e
0x8049fe5:   0f 86 f7 fe ff ff               	jbe 0x8049ee2 <func_1+0x75c>
0x8049feb:   e9 8e 01 00 00                  	jmp 0x804a17e <func_1+0x9f8>
0x8049ff0:   66 c7 45 86 f0 ed               	mov word ptr [ebp - 0x7a], 0xedf0
0x8049ff6:   c7 85 0c ff ff ff fd ff ff ff   	mov dword ptr [ebp - 0xf4], 0xfffffffd
0x804a000:   c7 85 08 ff ff ff a8 4b 49 47   	mov dword ptr [ebp - 0xf8], 0x47494ba8
0x804a00a:   c7 45 cc f4 ff ff ff            	mov dword ptr [ebp - 0x34], 0xfffffff4
0x804a011:   e9 ae 00 00 00                  	jmp 0x804a0c4 <func_1+0x93e>
0x804a016:   c7 85 04 ff ff ff 44 12 c8 83   	mov dword ptr [ebp - 0xfc], 0x83c81244
0x804a020:   c7 85 00 ff ff ff 91 03 71 6d   	mov dword ptr [ebp - 0x100], 0x6d710391
0x804a02a:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a02d:   0f be d0                        	movsx edx, al
0x804a030:   0f b6 85 70 ff ff ff            	movzx eax, byte ptr [ebp - 0x90]
0x804a037:   0f be c0                        	movsx eax, al
0x804a03a:   29 c2                           	sub edx, eax
0x804a03c:   89 d0                           	mov eax, edx
0x804a03e:   89 85 04 ff ff ff               	mov dword ptr [ebp - 0xfc], eax
0x804a044:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x804a04a:   66 c1 e8 09                     	shr ax, 9
0x804a04e:   83 c8 01                        	or eax, 1
0x804a051:   89 c1                           	mov ecx, eax
0x804a053:   80 f9 f7                        	cmp cl, 0xf7
0x804a056:   0f 93 c2                        	setae dl
0x804a059:   89 d0                           	mov eax, edx
0x804a05b:   c1 e0 03                        	shl eax, 3
0x804a05e:   01 d0                           	add eax, edx
0x804a060:   f7 d8                           	neg eax
0x804a062:   29 c1                           	sub ecx, eax
0x804a064:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a068:   8d 50 ff                        	lea edx, [eax - 1]
0x804a06b:   66 89 55 b2                     	mov word ptr [ebp - 0x4e], dx
0x804a06f:   0f b7 d0                        	movzx edx, ax
0x804a072:   81 7d b8 54 b4 ea 04            	cmp dword ptr [ebp - 0x48], 0x4eab454
0x804a079:   0f 95 c0                        	setne al
0x804a07c:   89 c1                           	mov ecx, eax
0x804a07e:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a081:   29 c1                           	sub ecx, eax
0x804a083:   89 c8                           	mov eax, ecx
0x804a085:   0f be c0                        	movsx eax, al
0x804a088:   6b c0 ef                        	imul eax, eax, -0x11
0x804a08b:   39 85 00 ff ff ff               	cmp dword ptr [ebp - 0x100], eax
0x804a091:   0f 9e c0                        	setle al
0x804a094:   0f b6 c0                        	movzx eax, al
0x804a097:   09 d0                           	or eax, edx
0x804a099:   33 45 8c                        	xor eax, dword ptr [ebp - 0x74]
0x804a09c:   89 85 00 ff ff ff               	mov dword ptr [ebp - 0x100], eax
0x804a0a2:   0f b7 45 86                     	movzx eax, word ptr [ebp - 0x7a]
0x804a0a6:   83 e8 01                        	sub eax, 1
0x804a0a9:   66 89 45 86                     	mov word ptr [ebp - 0x7a], ax
0x804a0ad:   0f b7 55 86                     	movzx edx, word ptr [ebp - 0x7a]
0x804a0b1:   0f be 45 bc                     	movsx eax, byte ptr [ebp - 0x44]
0x804a0b5:   39 c2                           	cmp edx, eax
0x804a0b7:   0f 9f c0                        	setg al
0x804a0ba:   0f b6 c0                        	movzx eax, al
0x804a0bd:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a0c0:   83 45 cc 01                     	add dword ptr [ebp - 0x34], 1
0x804a0c4:   83 7d cc 1e                     	cmp dword ptr [ebp - 0x34], 0x1e
0x804a0c8:   0f 86 48 ff ff ff               	jbe 0x804a016 <func_1+0x890>
0x804a0ce:   ba 4e 49 73 29                  	mov edx, 0x2973494e
0x804a0d3:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x804a0d9:   39 c2                           	cmp edx, eax
0x804a0db:   0f 92 c0                        	setb al
0x804a0de:   0f b6 c0                        	movzx eax, al
0x804a0e1:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x804a0e4:   0f 9f c0                        	setg al
0x804a0e7:   0f b6 c0                        	movzx eax, al
0x804a0ea:   09 85 08 ff ff ff               	or dword ptr [ebp - 0xf8], eax
0x804a0f0:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a0f4:   0f be 75 bc                     	movsx esi, byte ptr [ebp - 0x44]
0x804a0f8:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a0fe:   0f be 7d bd                     	movsx edi, byte ptr [ebp - 0x43]
0x804a102:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x804a108:   0f bf 7d be                     	movsx edi, word ptr [ebp - 0x42]
0x804a10c:   0f bf b5 7e ff ff ff            	movsx esi, word ptr [ebp - 0x82]
0x804a113:   0f b7 5d c8                     	movzx ebx, word ptr [ebp - 0x38]
0x804a117:   0f bf 4d ca                     	movsx ecx, word ptr [ebp - 0x36]
0x804a11b:   0f be 55 d7                     	movsx edx, byte ptr [ebp - 0x29]
0x804a11f:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a122:   50                              	push eax
0x804a123:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a129:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a12c:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a12f:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a135:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a13b:   57                              	push edi
0x804a13c:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a13f:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a145:   56                              	push esi
0x804a146:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a149:   53                              	push ebx
0x804a14a:   51                              	push ecx
0x804a14b:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a14e:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a151:   52                              	push edx
0x804a152:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a155:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a158:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a15b:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a15e:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a161:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a164:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a167:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a16a:   e8 b7 f4 ff ff                  	call 0x8049626 <set_var>
0x804a16f:   83 c4 64                        	add esp, 0x64
0x804a172:   0f b7 85 40 ff ff ff            	movzx eax, word ptr [ebp - 0xc0]
0x804a179:   e9 4e 06 00 00                  	jmp 0x804a7cc <func_1+0x1046>
0x804a17e:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x804a182:   0f 84 bf 00 00 00               	je 0x804a247 <func_1+0xac1>
0x804a188:   0f b7 85 44 ff ff ff            	movzx eax, word ptr [ebp - 0xbc]
0x804a18f:   0b 45 90                        	or eax, dword ptr [ebp - 0x70]
0x804a192:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a195:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a198:   66 89 85 3e ff ff ff            	mov word ptr [ebp - 0xc2], ax
0x804a19f:   0f bf 45 be                     	movsx eax, word ptr [ebp - 0x42]
0x804a1a3:   31 45 c4                        	xor dword ptr [ebp - 0x3c], eax
0x804a1a6:   8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x804a1a9:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a1ac:   01 c2                           	add edx, eax
0x804a1ae:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a1b4:   21 d0                           	and eax, edx
0x804a1b6:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804a1bc:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a1c0:   0f be 75 bc                     	movsx esi, byte ptr [ebp - 0x44]
0x804a1c4:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a1ca:   0f be 7d bd                     	movsx edi, byte ptr [ebp - 0x43]
0x804a1ce:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x804a1d4:   0f bf 7d be                     	movsx edi, word ptr [ebp - 0x42]
0x804a1d8:   0f bf b5 7e ff ff ff            	movsx esi, word ptr [ebp - 0x82]
0x804a1df:   0f b7 5d c8                     	movzx ebx, word ptr [ebp - 0x38]
0x804a1e3:   0f bf 4d ca                     	movsx ecx, word ptr [ebp - 0x36]
0x804a1e7:   0f be 55 d7                     	movsx edx, byte ptr [ebp - 0x29]
0x804a1eb:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a1ee:   50                              	push eax
0x804a1ef:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a1f5:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a1f8:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a1fb:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a201:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a207:   57                              	push edi
0x804a208:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a20b:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a211:   56                              	push esi
0x804a212:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a215:   53                              	push ebx
0x804a216:   51                              	push ecx
0x804a217:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a21a:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a21d:   52                              	push edx
0x804a21e:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a221:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a224:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a227:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a22a:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a22d:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a230:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a233:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a236:   e8 eb f3 ff ff                  	call 0x8049626 <set_var>
0x804a23b:   83 c4 64                        	add esp, 0x64
0x804a23e:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x804a242:   e9 85 05 00 00                  	jmp 0x804a7cc <func_1+0x1046>
0x804a247:   c6 85 e6 fe ff ff 08            	mov byte ptr [ebp - 0x11a], 8
0x804a24e:   c7 85 e0 fe ff ff c8 9a ee c5   	mov dword ptr [ebp - 0x120], 0xc5ee9ac8
0x804a258:   c7 85 dc fe ff ff fc ff ff ff   	mov dword ptr [ebp - 0x124], 0xfffffffc
0x804a262:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a268:   66 98                           	cbw 
0x804a26a:   c1 e0 04                        	shl eax, 4
0x804a26d:   0f b7 d0                        	movzx edx, ax
0x804a270:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a273:   0f b7 c0                        	movzx eax, ax
0x804a276:   0f af c2                        	imul eax, edx
0x804a279:   85 c0                           	test eax, eax
0x804a27b:   0f 84 8f 00 00 00               	je 0x804a310 <func_1+0xb8a>
0x804a281:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a285:   0f 95 c0                        	setne al
0x804a288:   0f b6 d0                        	movzx edx, al
0x804a28b:   83 bd 78 ff ff ff 00            	cmp dword ptr [ebp - 0x88], 0
0x804a292:   75 09                           	jne 0x804a29d <func_1+0xb17>
0x804a294:   83 bd 14 ff ff ff 00            	cmp dword ptr [ebp - 0xec], 0
0x804a29b:   74 07                           	je 0x804a2a4 <func_1+0xb1e>
0x804a29d:   b9 01 00 00 00                  	mov ecx, 1
0x804a2a2:   eb 05                           	jmp 0x804a2a9 <func_1+0xb23>
0x804a2a4:   b9 00 00 00 00                  	mov ecx, 0
0x804a2a9:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x804a2ad:   39 c1                           	cmp ecx, eax
0x804a2af:   0f 9f c0                        	setg al
0x804a2b2:   0f b6 c0                        	movzx eax, al
0x804a2b5:   33 45 e0                        	xor eax, dword ptr [ebp - 0x20]
0x804a2b8:   89 c1                           	mov ecx, eax
0x804a2ba:   0f be 85 e6 fe ff ff            	movsx eax, byte ptr [ebp - 0x11a]
0x804a2c1:   39 c1                           	cmp ecx, eax
0x804a2c3:   0f 9f c0                        	setg al
0x804a2c6:   0f b6 c8                        	movzx ecx, al
0x804a2c9:   0f b7 85 3e ff ff ff            	movzx eax, word ptr [ebp - 0xc2]
0x804a2d0:   98                              	cwde 
0x804a2d1:   0f af c1                        	imul eax, ecx
0x804a2d4:   39 c2                           	cmp edx, eax
0x804a2d6:   0f 9e c0                        	setle al
0x804a2d9:   0f b6 d0                        	movzx edx, al
0x804a2dc:   0f b7 85 2c ff ff ff            	movzx eax, word ptr [ebp - 0xd4]
0x804a2e3:   89 c1                           	mov ecx, eax
0x804a2e5:   d3 fa                           	sar edx, cl
0x804a2e7:   89 d0                           	mov eax, edx
0x804a2e9:   0f b7 d0                        	movzx edx, ax
0x804a2ec:   0f b7 85 7e ff ff ff            	movzx eax, word ptr [ebp - 0x82]
0x804a2f3:   0f b7 c0                        	movzx eax, ax
0x804a2f6:   89 c1                           	mov ecx, eax
0x804a2f8:   d3 fa                           	sar edx, cl
0x804a2fa:   89 d0                           	mov eax, edx
0x804a2fc:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a2ff:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a302:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a305:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a308:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a30b:   e9 d8 01 00 00                  	jmp 0x804a4e8 <func_1+0xd62>
0x804a310:   c6 85 db fe ff ff 26            	mov byte ptr [ebp - 0x125], 0x26
0x804a317:   0f b7 85 2c ff ff ff            	movzx eax, word ptr [ebp - 0xd4]
0x804a31e:   66 3b 45 b2                     	cmp ax, word ptr [ebp - 0x4e]
0x804a322:   0f 97 c0                        	seta al
0x804a325:   0f b6 c0                        	movzx eax, al
0x804a328:   09 45 a8                        	or dword ptr [ebp - 0x58], eax
0x804a32b:   81 7d a8 83 0f 00 00            	cmp dword ptr [ebp - 0x58], 0xf83
0x804a332:   0f 94 c0                        	sete al
0x804a335:   0f b6 c0                        	movzx eax, al
0x804a338:   31 45 a0                        	xor dword ptr [ebp - 0x60], eax
0x804a33b:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a33e:   0f b6 c0                        	movzx eax, al
0x804a341:   0f b7 55 a6                     	movzx edx, word ptr [ebp - 0x5a]
0x804a345:   0f b6 ca                        	movzx ecx, dl
0x804a348:   99                              	cdq 
0x804a349:   f7 f9                           	idiv ecx
0x804a34b:   89 d0                           	mov eax, edx
0x804a34d:   85 c0                           	test eax, eax
0x804a34f:   75 07                           	jne 0x804a358 <func_1+0xbd2>
0x804a351:   b8 f9 ff ff ff                  	mov eax, 0xfffffff9
0x804a356:   eb 05                           	jmp 0x804a35d <func_1+0xbd7>
0x804a358:   b8 f8 ff ff ff                  	mov eax, 0xfffffff8
0x804a35d:   8b 95 78 ff ff ff               	mov edx, dword ptr [ebp - 0x88]
0x804a363:   0f be ca                        	movsx ecx, dl
0x804a366:   99                              	cdq 
0x804a367:   f7 f9                           	idiv ecx
0x804a369:   89 95 6c ff ff ff               	mov dword ptr [ebp - 0x94], edx
0x804a36f:   83 bd 78 ff ff ff 01            	cmp dword ptr [ebp - 0x88], 1
0x804a376:   b8 e3 a7 e7 5c                  	mov eax, 0x5ce7a7e3
0x804a37b:   09 45 e8                        	or dword ptr [ebp - 0x18], eax
0x804a37e:   0f be 85 e6 fe ff ff            	movsx eax, byte ptr [ebp - 0x11a]
0x804a385:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a388:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a38c:   0f b6 d0                        	movzx edx, al
0x804a38f:   0f bf 85 40 ff ff ff            	movsx eax, word ptr [ebp - 0xc0]
0x804a396:   39 85 14 ff ff ff               	cmp dword ptr [ebp - 0xec], eax
0x804a39c:   0f 94 c0                        	sete al
0x804a39f:   0f b6 c0                        	movzx eax, al
0x804a3a2:   89 c1                           	mov ecx, eax
0x804a3a4:   d3 fa                           	sar edx, cl
0x804a3a6:   89 d0                           	mov eax, edx
0x804a3a8:   85 c0                           	test eax, eax
0x804a3aa:   0f 95 c0                        	setne al
0x804a3ad:   0f b6 c0                        	movzx eax, al
0x804a3b0:   33 45 a0                        	xor eax, dword ptr [ebp - 0x60]
0x804a3b3:   09 45 88                        	or dword ptr [ebp - 0x78], eax
0x804a3b6:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a3b9:   89 c3                           	mov ebx, eax
0x804a3bb:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a3be:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x804a3c4:   0f b6 85 e6 fe ff ff            	movzx eax, byte ptr [ebp - 0x11a]
0x804a3cb:   3a 85 db fe ff ff               	cmp al, byte ptr [ebp - 0x125]
0x804a3d1:   0f 9e c0                        	setle al
0x804a3d4:   0f b6 c0                        	movzx eax, al
0x804a3d7:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a3da:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804a3de:   74 04                           	je 0x804a3e4 <func_1+0xc5e>
0x804a3e0:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804a3e4:   66 0f be 85 2b ff ff ff         	movsx ax, byte ptr [ebp - 0xd5]
0x804a3ec:   0f b7 c0                        	movzx eax, ax
0x804a3ef:   83 e0 01                        	and eax, 1
0x804a3f2:   89 c2                           	mov edx, eax
0x804a3f4:   0f b7 85 7e ff ff ff            	movzx eax, word ptr [ebp - 0x82]
0x804a3fb:   0f b7 c0                        	movzx eax, ax
0x804a3fe:   89 c1                           	mov ecx, eax
0x804a400:   d3 fa                           	sar edx, cl
0x804a402:   89 d0                           	mov eax, edx
0x804a404:   83 f8 f9                        	cmp eax, -7
0x804a407:   0f 97 c0                        	seta al
0x804a40a:   0f b6 c0                        	movzx eax, al
0x804a40d:   89 85 18 ff ff ff               	mov dword ptr [ebp - 0xe8], eax
0x804a413:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x804a419:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a41c:   81 7d cc 0d 59 a3 56            	cmp dword ptr [ebp - 0x34], 0x56a3590d
0x804a423:   0f b7 85 44 ff ff ff            	movzx eax, word ptr [ebp - 0xbc]
0x804a42a:   83 e0 01                        	and eax, 1
0x804a42d:   89 85 dc fe ff ff               	mov dword ptr [ebp - 0x124], eax
0x804a433:   8b 85 dc fe ff ff               	mov eax, dword ptr [ebp - 0x124]
0x804a439:   89 c1                           	mov ecx, eax
0x804a43b:   80 f9 fc                        	cmp cl, 0xfc
0x804a43e:   0f 93 c2                        	setae dl
0x804a441:   b8 00 00 00 00                  	mov eax, 0
0x804a446:   29 d0                           	sub eax, edx
0x804a448:   c1 e0 02                        	shl eax, 2
0x804a44b:   29 c1                           	sub ecx, eax
0x804a44d:   89 ca                           	mov edx, ecx
0x804a44f:   0f b6 c2                        	movzx eax, dl
0x804a452:   0f b7 bd 2c ff ff ff            	movzx edi, word ptr [ebp - 0xd4]
0x804a459:   99                              	cdq 
0x804a45a:   f7 ff                           	idiv edi
0x804a45c:   39 85 e0 fe ff ff               	cmp dword ptr [ebp - 0x120], eax
0x804a462:   0f 95 c0                        	setne al
0x804a465:   89 c2                           	mov edx, eax
0x804a467:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a46a:   09 d0                           	or eax, edx
0x804a46c:   0f b6 d0                        	movzx edx, al
0x804a46f:   0f b7 85 40 ff ff ff            	movzx eax, word ptr [ebp - 0xc0]
0x804a476:   0f b6 c0                        	movzx eax, al
0x804a479:   0f af c2                        	imul eax, edx
0x804a47c:   3d aa 0c 45 1d                  	cmp eax, 0x1d450caa
0x804a481:   0f 9e c0                        	setle al
0x804a484:   0f b6 d0                        	movzx edx, al
0x804a487:   0f be 45 bd                     	movsx eax, byte ptr [ebp - 0x43]
0x804a48b:   39 c2                           	cmp edx, eax
0x804a48d:   0f 9d c0                        	setge al
0x804a490:   0f b6 c0                        	movzx eax, al
0x804a493:   29 c3                           	sub ebx, eax
0x804a495:   89 d8                           	mov eax, ebx
0x804a497:   66 25 a2 00                     	and ax, 0xa2
0x804a49b:   89 c2                           	mov edx, eax
0x804a49d:   66 0f be 45 d7                  	movsx ax, byte ptr [ebp - 0x29]
0x804a4a2:   01 d0                           	add eax, edx
0x804a4a4:   0f bf d0                        	movsx edx, ax
0x804a4a7:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a4aa:   98                              	cwde 
0x804a4ab:   0f af c2                        	imul eax, edx
0x804a4ae:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a4b1:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a4b4:   0f b6 c0                        	movzx eax, al
0x804a4b7:   83 e8 07                        	sub eax, 7
0x804a4ba:   0c fe                           	or al, 0xfe
0x804a4bc:   83 f8 1b                        	cmp eax, 0x1b
0x804a4bf:   0f 97 c0                        	seta al
0x804a4c2:   0f b6 c0                        	movzx eax, al
0x804a4c5:   8b 95 6c ff ff ff               	mov edx, dword ptr [ebp - 0x94]
0x804a4cb:   29 d0                           	sub eax, edx
0x804a4cd:   89 c1                           	mov ecx, eax
0x804a4cf:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x804a4d5:   89 c2                           	mov edx, eax
0x804a4d7:   89 c8                           	mov eax, ecx
0x804a4d9:   0f af c2                        	imul eax, edx
0x804a4dc:   88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x804a4df:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x804a4e3:   f7 d8                           	neg eax
0x804a4e5:   21 45 d8                        	and dword ptr [ebp - 0x28], eax
0x804a4e8:   0f b7 9d 3e ff ff ff            	movzx ebx, word ptr [ebp - 0xc2]
0x804a4ef:   0f b6 85 13 ff ff ff            	movzx eax, byte ptr [ebp - 0xed]
0x804a4f6:   39 45 80                        	cmp dword ptr [ebp - 0x80], eax
0x804a4f9:   0f 9d c0                        	setge al
0x804a4fc:   0f b6 d0                        	movzx edx, al
0x804a4ff:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x804a505:   98                              	cwde 
0x804a506:   89 c1                           	mov ecx, eax
0x804a508:   d3 e2                           	shl edx, cl
0x804a50a:   89 d0                           	mov eax, edx
0x804a50c:   0f be c0                        	movsx eax, al
0x804a50f:   0f b7 95 2e ff ff ff            	movzx edx, word ptr [ebp - 0xd2]
0x804a516:   0f be ca                        	movsx ecx, dl
0x804a519:   99                              	cdq 
0x804a51a:   f7 f9                           	idiv ecx
0x804a51c:   89 d0                           	mov eax, edx
0x804a51e:   8b 4d dc                        	mov ecx, dword ptr [ebp - 0x24]
0x804a521:   ba 00 00 00 00                  	mov edx, 0
0x804a526:   f7 f1                           	div ecx
0x804a528:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a52b:   39 c2                           	cmp edx, eax
0x804a52d:   0f 92 c0                        	setb al
0x804a530:   0f b6 c0                        	movzx eax, al
0x804a533:   31 d8                           	xor eax, ebx
0x804a535:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a538:   83 45 e0 09                     	add dword ptr [ebp - 0x20], 9
0x804a53c:   83 7d e0 16                     	cmp dword ptr [ebp - 0x20], 0x16
0x804a540:   0f 8f c1 f3 ff ff               	jg 0x8049907 <func_1+0x181>
0x804a546:   eb 01                           	jmp 0x804a549 <func_1+0xdc3>
0x804a548:   90                              	nop 
0x804a549:   c7 45 b4 c8 08 a4 13            	mov dword ptr [ebp - 0x4c], 0x13a408c8
0x804a550:   c7 45 c4 f2 ff ff ff            	mov dword ptr [ebp - 0x3c], 0xfffffff2
0x804a557:   e9 27 01 00 00                  	jmp 0x804a683 <func_1+0xefd>
0x804a55c:   c6 85 bb fe ff ff 86            	mov byte ptr [ebp - 0x145], 0x86
0x804a563:   c7 85 b4 fe ff ff b5 c8 88 85   	mov dword ptr [ebp - 0x14c], 0x8588c8b5
0x804a56d:   66 c7 85 b2 fe ff ff 01 00      	mov word ptr [ebp - 0x14e], 1
0x804a576:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x804a57d:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a580:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x804a586:   0f b6 85 6b ff ff ff            	movzx eax, byte ptr [ebp - 0x95]
0x804a58d:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x804a593:   0f 9d c0                        	setge al
0x804a596:   0f b6 c0                        	movzx eax, al
0x804a599:   33 45 dc                        	xor eax, dword ptr [ebp - 0x24]
0x804a59c:   f7 d0                           	not eax
0x804a59e:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x804a5a1:   c7 85 38 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xc8], 1
0x804a5ab:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804a5b1:   21 85 b4 fe ff ff               	and dword ptr [ebp - 0x14c], eax
0x804a5b7:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a5bb:   75 12                           	jne 0x804a5cf <func_1+0xe49>
0x804a5bd:   0f bf 85 b2 fe ff ff            	movsx eax, word ptr [ebp - 0x14e]
0x804a5c4:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a5c7:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a5ca:   3b 45 dc                        	cmp eax, dword ptr [ebp - 0x24]
0x804a5cd:   7d 11                           	jge 0x804a5e0 <func_1+0xe5a>
0x804a5cf:   66 83 bd 40 ff ff ff 00         	cmp word ptr [ebp - 0xc0], 0
0x804a5d7:   74 07                           	je 0x804a5e0 <func_1+0xe5a>
0x804a5d9:   b8 01 00 00 00                  	mov eax, 1
0x804a5de:   eb 05                           	jmp 0x804a5e5 <func_1+0xe5f>
0x804a5e0:   b8 00 00 00 00                  	mov eax, 0
0x804a5e5:   0f b7 4d ca                     	movzx ecx, word ptr [ebp - 0x36]
0x804a5e9:   ba 00 00 00 00                  	mov edx, 0
0x804a5ee:   66 f7 f1                        	div cx
0x804a5f1:   89 d0                           	mov eax, edx
0x804a5f3:   66 85 c0                        	test ax, ax
0x804a5f6:   75 06                           	jne 0x804a5fe <func_1+0xe78>
0x804a5f8:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a5fc:   74 07                           	je 0x804a605 <func_1+0xe7f>
0x804a5fe:   b8 01 00 00 00                  	mov eax, 1
0x804a603:   eb 05                           	jmp 0x804a60a <func_1+0xe84>
0x804a605:   b8 00 00 00 00                  	mov eax, 0
0x804a60a:   0f be d0                        	movsx edx, al
0x804a60d:   0f b6 85 6b ff ff ff            	movzx eax, byte ptr [ebp - 0x95]
0x804a614:   0f be c0                        	movsx eax, al
0x804a617:   89 c1                           	mov ecx, eax
0x804a619:   d3 fa                           	sar edx, cl
0x804a61b:   89 d0                           	mov eax, edx
0x804a61d:   66 89 45 ca                     	mov word ptr [ebp - 0x36], ax
0x804a621:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804a625:   66 0f af 85 44 ff ff ff         	imul ax, word ptr [ebp - 0xbc]
0x804a62d:   0f b7 b5 40 ff ff ff            	movzx esi, word ptr [ebp - 0xc0]
0x804a634:   ba 00 00 00 00                  	mov edx, 0
0x804a639:   66 f7 f6                        	div si
0x804a63c:   83 f0 02                        	xor eax, 2
0x804a63f:   0f b7 c0                        	movzx eax, ax
0x804a642:   0b 85 b4 fe ff ff               	or eax, dword ptr [ebp - 0x14c]
0x804a648:   85 c0                           	test eax, eax
0x804a64a:   75 06                           	jne 0x804a652 <func_1+0xecc>
0x804a64c:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a650:   74 07                           	je 0x804a659 <func_1+0xed3>
0x804a652:   b8 01 00 00 00                  	mov eax, 1
0x804a657:   eb 05                           	jmp 0x804a65e <func_1+0xed8>
0x804a659:   b8 00 00 00 00                  	mov eax, 0
0x804a65e:   39 85 34 ff ff ff               	cmp dword ptr [ebp - 0xcc], eax
0x804a664:   0f 93 c0                        	setae al
0x804a667:   0f b6 d0                        	movzx edx, al
0x804a66a:   0f b7 85 72 ff ff ff            	movzx eax, word ptr [ebp - 0x8e]
0x804a671:   39 c2                           	cmp edx, eax
0x804a673:   0f 9c c0                        	setl al
0x804a676:   0f b6 c0                        	movzx eax, al
0x804a679:   31 85 6c ff ff ff               	xor dword ptr [ebp - 0x94], eax
0x804a67f:   83 45 c4 01                     	add dword ptr [ebp - 0x3c], 1
0x804a683:   83 7d c4 1d                     	cmp dword ptr [ebp - 0x3c], 0x1d
0x804a687:   0f 84 cf fe ff ff               	je 0x804a55c <func_1+0xdd6>
0x804a68d:   83 45 e4 01                     	add dword ptr [ebp - 0x1c], 1
0x804a691:   83 7d e4 13                     	cmp dword ptr [ebp - 0x1c], 0x13
0x804a695:   0f 85 1a f2 ff ff               	jne 0x80498b5 <func_1+0x12f>
0x804a69b:   c7 85 6c ff ff ff 3b 05 dd 78   	mov dword ptr [ebp - 0x94], 0x78dd053b
0x804a6a5:   66 c7 45 a6 18 00               	mov word ptr [ebp - 0x5a], 0x18
0x804a6ab:   e9 8c 00 00 00                  	jmp 0x804a73c <func_1+0xfb6>
0x804a6b0:   c7 85 54 ff ff ff 5e 80 29 89   	mov dword ptr [ebp - 0xac], 0x8929805e
0x804a6ba:   c7 85 50 ff ff ff e5 dc bc b3   	mov dword ptr [ebp - 0xb0], 0xb3bcdce5
0x804a6c4:   c7 85 4c ff ff ff 7e a1 06 d0   	mov dword ptr [ebp - 0xb4], 0xd006a17e
0x804a6ce:   c7 85 48 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xb8], 1
0x804a6d8:   c6 85 47 ff ff ff 00            	mov byte ptr [ebp - 0xb9], 0
0x804a6df:   80 bd 70 ff ff ff 00            	cmp byte ptr [ebp - 0x90], 0
0x804a6e6:   74 05                           	je 0x804a6ed <func_1+0xf67>
0x804a6e8:   e9 bc f1 ff ff                  	jmp 0x80498a9 <func_1+0x123>
0x804a6ed:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x804a6f1:   8d 50 ff                        	lea edx, [eax - 1]
0x804a6f4:   66 89 55 c8                     	mov word ptr [ebp - 0x38], dx
0x804a6f8:   66 31 45 b2                     	xor word ptr [ebp - 0x4e], ax
0x804a6fc:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a700:   8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x804a703:   0f b7 d2                        	movzx edx, dx
0x804a706:   c1 e2 04                        	shl edx, 4
0x804a709:   85 d2                           	test edx, edx
0x804a70b:   0f 94 c2                        	sete dl
0x804a70e:   0f b6 d2                        	movzx edx, dl
0x804a711:   89 95 54 ff ff ff               	mov dword ptr [ebp - 0xac], edx
0x804a717:   39 85 54 ff ff ff               	cmp dword ptr [ebp - 0xac], eax
0x804a71d:   0f 92 c0                        	setb al
0x804a720:   0f b6 c0                        	movzx eax, al
0x804a723:   2b 45 e4                        	sub eax, dword ptr [ebp - 0x1c]
0x804a726:   89 85 50 ff ff ff               	mov dword ptr [ebp - 0xb0], eax
0x804a72c:   66 83 6d a4 01                  	sub word ptr [ebp - 0x5c], 1
0x804a731:   0f b7 45 a6                     	movzx eax, word ptr [ebp - 0x5a]
0x804a735:   83 e8 06                        	sub eax, 6
0x804a738:   66 89 45 a6                     	mov word ptr [ebp - 0x5a], ax
0x804a73c:   66 83 7d a6 0d                  	cmp word ptr [ebp - 0x5a], 0xd
0x804a741:   0f 84 69 ff ff ff               	je 0x804a6b0 <func_1+0xf2a>
0x804a747:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a74b:   0f be 75 bc                     	movsx esi, byte ptr [ebp - 0x44]
0x804a74f:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a755:   0f be 7d bd                     	movsx edi, byte ptr [ebp - 0x43]
0x804a759:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x804a75f:   0f bf 7d be                     	movsx edi, word ptr [ebp - 0x42]
0x804a763:   0f bf b5 7e ff ff ff            	movsx esi, word ptr [ebp - 0x82]
0x804a76a:   0f b7 5d c8                     	movzx ebx, word ptr [ebp - 0x38]
0x804a76e:   0f bf 4d ca                     	movsx ecx, word ptr [ebp - 0x36]
0x804a772:   0f be 55 d7                     	movsx edx, byte ptr [ebp - 0x29]
0x804a776:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a779:   50                              	push eax
0x804a77a:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a780:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a783:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a786:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a78c:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a792:   57                              	push edi
0x804a793:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a796:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a79c:   56                              	push esi
0x804a79d:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a7a0:   53                              	push ebx
0x804a7a1:   51                              	push ecx
0x804a7a2:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a7a5:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a7a8:   52                              	push edx
0x804a7a9:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a7ac:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a7af:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a7b2:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a7b5:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a7b8:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a7bb:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a7be:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a7c1:   e8 60 ee ff ff                  	call 0x8049626 <set_var>
0x804a7c6:   83 c4 64                        	add esp, 0x64
0x804a7c9:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a7cc:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a7cf:   5b                              	pop ebx
0x804a7d0:   5e                              	pop esi
0x804a7d1:   5f                              	pop edi
0x804a7d2:   5d                              	pop ebp
0x804a7d3:   c3                              	ret 
; function: main at 0x804a7d4 -- 0x804ab4a
0x804a7d4:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a7d8:   83 e4 f0                        	and esp, 0xfffffff0
0x804a7db:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a7de:   55                              	push ebp
0x804a7df:   89 e5                           	mov ebp, esp
0x804a7e1:   53                              	push ebx
0x804a7e2:   51                              	push ecx
0x804a7e3:   83 ec 10                        	sub esp, 0x10
0x804a7e6:   e8 a5 db ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a7eb:   81 c3 15 28 00 00               	add ebx, 0x2815
0x804a7f1:   89 c8                           	mov eax, ecx
0x804a7f3:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a7fa:   83 38 02                        	cmp dword ptr [eax], 2
0x804a7fd:   75 26                           	jne 0x804a825 <main+0x51>
0x804a7ff:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a802:   83 c0 04                        	add eax, 4
0x804a805:   8b 00                           	mov eax, dword ptr [eax]
0x804a807:   83 ec 08                        	sub esp, 8
0x804a80a:   8d 93 28 dc ff ff               	lea edx, [ebx - 0x23d8]
0x804a810:   52                              	push edx
0x804a811:   50                              	push eax
0x804a812:   e8 e9 da ff ff                  	call 0x8048300 <strcmp>
0x804a817:   83 c4 10                        	add esp, 0x10
0x804a81a:   85 c0                           	test eax, eax
0x804a81c:   75 07                           	jne 0x804a825 <main+0x51>
0x804a81e:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a825:   e8 2c dc ff ff                  	call 0x8048456 <platform_main_begin>
0x804a82a:   e8 3c ec ff ff                  	call 0x804946b <crc32_gentab>
0x804a82f:   e8 52 ef ff ff                  	call 0x8049786 <func_1>
0x804a834:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804a83a:   89 c2                           	mov edx, eax
0x804a83c:   83 ec 04                        	sub esp, 4
0x804a83f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a842:   8d 83 2a dc ff ff               	lea eax, [ebx - 0x23d6]
0x804a848:   50                              	push eax
0x804a849:   52                              	push edx
0x804a84a:   e8 28 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a84f:   83 c4 10                        	add esp, 0x10
0x804a852:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a858:   89 c2                           	mov edx, eax
0x804a85a:   83 ec 04                        	sub esp, 4
0x804a85d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a860:   8d 83 2e dc ff ff               	lea eax, [ebx - 0x23d2]
0x804a866:   50                              	push eax
0x804a867:   52                              	push edx
0x804a868:   e8 0a ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a86d:   83 c4 10                        	add esp, 0x10
0x804a870:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a876:   89 c2                           	mov edx, eax
0x804a878:   83 ec 04                        	sub esp, 4
0x804a87b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a87e:   8d 83 32 dc ff ff               	lea eax, [ebx - 0x23ce]
0x804a884:   50                              	push eax
0x804a885:   52                              	push edx
0x804a886:   e8 ec ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a88b:   83 c4 10                        	add esp, 0x10
0x804a88e:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804a894:   89 c2                           	mov edx, eax
0x804a896:   83 ec 04                        	sub esp, 4
0x804a899:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a89c:   8d 83 36 dc ff ff               	lea eax, [ebx - 0x23ca]
0x804a8a2:   50                              	push eax
0x804a8a3:   52                              	push edx
0x804a8a4:   e8 ce ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8a9:   83 c4 10                        	add esp, 0x10
0x804a8ac:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a8b2:   89 c2                           	mov edx, eax
0x804a8b4:   83 ec 04                        	sub esp, 4
0x804a8b7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8ba:   8d 83 3a dc ff ff               	lea eax, [ebx - 0x23c6]
0x804a8c0:   50                              	push eax
0x804a8c1:   52                              	push edx
0x804a8c2:   e8 b0 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8c7:   83 c4 10                        	add esp, 0x10
0x804a8ca:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804a8d0:   89 c2                           	mov edx, eax
0x804a8d2:   83 ec 04                        	sub esp, 4
0x804a8d5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8d8:   8d 83 3e dc ff ff               	lea eax, [ebx - 0x23c2]
0x804a8de:   50                              	push eax
0x804a8df:   52                              	push edx
0x804a8e0:   e8 92 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8e5:   83 c4 10                        	add esp, 0x10
0x804a8e8:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804a8ee:   89 c2                           	mov edx, eax
0x804a8f0:   83 ec 04                        	sub esp, 4
0x804a8f3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8f6:   8d 83 42 dc ff ff               	lea eax, [ebx - 0x23be]
0x804a8fc:   50                              	push eax
0x804a8fd:   52                              	push edx
0x804a8fe:   e8 74 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a903:   83 c4 10                        	add esp, 0x10
0x804a906:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804a90c:   89 c2                           	mov edx, eax
0x804a90e:   83 ec 04                        	sub esp, 4
0x804a911:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a914:   8d 83 47 dc ff ff               	lea eax, [ebx - 0x23b9]
0x804a91a:   50                              	push eax
0x804a91b:   52                              	push edx
0x804a91c:   e8 56 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a921:   83 c4 10                        	add esp, 0x10
0x804a924:   0f b6 83 44 00 00 00            	movzx eax, byte ptr [ebx + 0x44]
0x804a92b:   0f be c0                        	movsx eax, al
0x804a92e:   83 ec 04                        	sub esp, 4
0x804a931:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a934:   8d 93 4c dc ff ff               	lea edx, [ebx - 0x23b4]
0x804a93a:   52                              	push edx
0x804a93b:   50                              	push eax
0x804a93c:   e8 36 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a941:   83 c4 10                        	add esp, 0x10
0x804a944:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804a94a:   83 ec 04                        	sub esp, 4
0x804a94d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a950:   8d 93 51 dc ff ff               	lea edx, [ebx - 0x23af]
0x804a956:   52                              	push edx
0x804a957:   50                              	push eax
0x804a958:   e8 1a ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a95d:   83 c4 10                        	add esp, 0x10
0x804a960:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804a966:   83 ec 04                        	sub esp, 4
0x804a969:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a96c:   8d 93 56 dc ff ff               	lea edx, [ebx - 0x23aa]
0x804a972:   52                              	push edx
0x804a973:   50                              	push eax
0x804a974:   e8 fe eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a979:   83 c4 10                        	add esp, 0x10
0x804a97c:   0f b7 83 50 00 00 00            	movzx eax, word ptr [ebx + 0x50]
0x804a983:   98                              	cwde 
0x804a984:   83 ec 04                        	sub esp, 4
0x804a987:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a98a:   8d 93 5b dc ff ff               	lea edx, [ebx - 0x23a5]
0x804a990:   52                              	push edx
0x804a991:   50                              	push eax
0x804a992:   e8 e0 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a997:   83 c4 10                        	add esp, 0x10
0x804a99a:   0f b7 83 52 00 00 00            	movzx eax, word ptr [ebx + 0x52]
0x804a9a1:   0f b7 c0                        	movzx eax, ax
0x804a9a4:   83 ec 04                        	sub esp, 4
0x804a9a7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9aa:   8d 93 61 dc ff ff               	lea edx, [ebx - 0x239f]
0x804a9b0:   52                              	push edx
0x804a9b1:   50                              	push eax
0x804a9b2:   e8 c0 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9b7:   83 c4 10                        	add esp, 0x10
0x804a9ba:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804a9c0:   89 c2                           	mov edx, eax
0x804a9c2:   83 ec 04                        	sub esp, 4
0x804a9c5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9c8:   8d 83 67 dc ff ff               	lea eax, [ebx - 0x2399]
0x804a9ce:   50                              	push eax
0x804a9cf:   52                              	push edx
0x804a9d0:   e8 a2 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9d5:   83 c4 10                        	add esp, 0x10
0x804a9d8:   0f b7 83 58 00 00 00            	movzx eax, word ptr [ebx + 0x58]
0x804a9df:   98                              	cwde 
0x804a9e0:   83 ec 04                        	sub esp, 4
0x804a9e3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9e6:   8d 93 6d dc ff ff               	lea edx, [ebx - 0x2393]
0x804a9ec:   52                              	push edx
0x804a9ed:   50                              	push eax
0x804a9ee:   e8 84 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9f3:   83 c4 10                        	add esp, 0x10
0x804a9f6:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804a9fc:   89 c2                           	mov edx, eax
0x804a9fe:   83 ec 04                        	sub esp, 4
0x804aa01:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa04:   8d 83 73 dc ff ff               	lea eax, [ebx - 0x238d]
0x804aa0a:   50                              	push eax
0x804aa0b:   52                              	push edx
0x804aa0c:   e8 66 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa11:   83 c4 10                        	add esp, 0x10
0x804aa14:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804aa1a:   83 ec 04                        	sub esp, 4
0x804aa1d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa20:   8d 93 79 dc ff ff               	lea edx, [ebx - 0x2387]
0x804aa26:   52                              	push edx
0x804aa27:   50                              	push eax
0x804aa28:   e8 4a eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa2d:   83 c4 10                        	add esp, 0x10
0x804aa30:   0f b7 83 a4 04 00 00            	movzx eax, word ptr [ebx + 0x4a4]
0x804aa37:   98                              	cwde 
0x804aa38:   83 ec 04                        	sub esp, 4
0x804aa3b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa3e:   8d 93 7f dc ff ff               	lea edx, [ebx - 0x2381]
0x804aa44:   52                              	push edx
0x804aa45:   50                              	push eax
0x804aa46:   e8 2c eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa4b:   83 c4 10                        	add esp, 0x10
0x804aa4e:   0f b6 83 a6 04 00 00            	movzx eax, byte ptr [ebx + 0x4a6]
0x804aa55:   0f be c0                        	movsx eax, al
0x804aa58:   83 ec 04                        	sub esp, 4
0x804aa5b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa5e:   8d 93 85 dc ff ff               	lea edx, [ebx - 0x237b]
0x804aa64:   52                              	push edx
0x804aa65:   50                              	push eax
0x804aa66:   e8 0c eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa6b:   83 c4 10                        	add esp, 0x10
0x804aa6e:   0f b6 83 a7 04 00 00            	movzx eax, byte ptr [ebx + 0x4a7]
0x804aa75:   0f be c0                        	movsx eax, al
0x804aa78:   83 ec 04                        	sub esp, 4
0x804aa7b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa7e:   8d 93 8b dc ff ff               	lea edx, [ebx - 0x2375]
0x804aa84:   52                              	push edx
0x804aa85:   50                              	push eax
0x804aa86:   e8 ec ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa8b:   83 c4 10                        	add esp, 0x10
0x804aa8e:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804aa94:   89 c2                           	mov edx, eax
0x804aa96:   83 ec 04                        	sub esp, 4
0x804aa99:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa9c:   8d 83 91 dc ff ff               	lea eax, [ebx - 0x236f]
0x804aaa2:   50                              	push eax
0x804aaa3:   52                              	push edx
0x804aaa4:   e8 ce ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaa9:   83 c4 10                        	add esp, 0x10
0x804aaac:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804aab2:   89 c2                           	mov edx, eax
0x804aab4:   83 ec 04                        	sub esp, 4
0x804aab7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaba:   8d 83 97 dc ff ff               	lea eax, [ebx - 0x2369]
0x804aac0:   50                              	push eax
0x804aac1:   52                              	push edx
0x804aac2:   e8 b0 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aac7:   83 c4 10                        	add esp, 0x10
0x804aaca:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804aad0:   89 c2                           	mov edx, eax
0x804aad2:   83 ec 04                        	sub esp, 4
0x804aad5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aad8:   8d 83 9d dc ff ff               	lea eax, [ebx - 0x2363]
0x804aade:   50                              	push eax
0x804aadf:   52                              	push edx
0x804aae0:   e8 92 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aae5:   83 c4 10                        	add esp, 0x10
0x804aae8:   0f b7 83 70 00 00 00            	movzx eax, word ptr [ebx + 0x70]
0x804aaef:   0f b7 c0                        	movzx eax, ax
0x804aaf2:   83 ec 04                        	sub esp, 4
0x804aaf5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaf8:   8d 93 a3 dc ff ff               	lea edx, [ebx - 0x235d]
0x804aafe:   52                              	push edx
0x804aaff:   50                              	push eax
0x804ab00:   e8 72 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab05:   83 c4 10                        	add esp, 0x10
0x804ab08:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804ab0e:   83 ec 04                        	sub esp, 4
0x804ab11:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab14:   8d 93 a9 dc ff ff               	lea edx, [ebx - 0x2357]
0x804ab1a:   52                              	push edx
0x804ab1b:   50                              	push eax
0x804ab1c:   e8 56 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab21:   83 c4 10                        	add esp, 0x10
0x804ab24:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ab2a:   f7 d0                           	not eax
0x804ab2c:   83 ec 08                        	sub esp, 8
0x804ab2f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab32:   50                              	push eax
0x804ab33:   e8 2e d9 ff ff                  	call 0x8048466 <platform_main_end>
0x804ab38:   83 c4 10                        	add esp, 0x10
0x804ab3b:   b8 00 00 00 00                  	mov eax, 0
0x804ab40:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ab43:   59                              	pop ecx
0x804ab44:   5b                              	pop ebx
0x804ab45:   5d                              	pop ebp
0x804ab46:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ab49:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ab4a -- 0x804ab4e
0x804ab4a:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ab4d:   c3                              	ret 
; data inside code section at 0x804ab4e -- 0x804ab50
0x804ab4e:   66 90                                              |f.              |
; function: __libc_csu_init at 0x804ab50 -- 0x804abad
0x804ab50:   55                              	push ebp
0x804ab51:   57                              	push edi
0x804ab52:   56                              	push esi
0x804ab53:   53                              	push ebx
0x804ab54:   e8 37 d8 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ab59:   81 c3 a7 24 00 00               	add ebx, 0x24a7
0x804ab5f:   83 ec 0c                        	sub esp, 0xc
0x804ab62:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ab66:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ab6c:   e8 5b d7 ff ff                  	call 0x80482cc <_init>
0x804ab71:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804ab77:   29 c6                           	sub esi, eax
0x804ab79:   c1 fe 02                        	sar esi, 2
0x804ab7c:   85 f6                           	test esi, esi
0x804ab7e:   74 25                           	je 0x804aba5 <__libc_csu_init+0x55>
0x804ab80:   31 ff                           	xor edi, edi
0x804ab82:   8d b6 00 00 00 00               	lea esi, [esi]
0x804ab88:   83 ec 04                        	sub esp, 4
0x804ab8b:   55                              	push ebp
0x804ab8c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ab90:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ab94:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804ab9b:   83 c7 01                        	add edi, 1
0x804ab9e:   83 c4 10                        	add esp, 0x10
0x804aba1:   39 fe                           	cmp esi, edi
0x804aba3:   75 e3                           	jne 0x804ab88 <__libc_csu_init+0x38>
0x804aba5:   83 c4 0c                        	add esp, 0xc
0x804aba8:   5b                              	pop ebx
0x804aba9:   5e                              	pop esi
0x804abaa:   5f                              	pop edi
0x804abab:   5d                              	pop ebp
0x804abac:   c3                              	ret 
; data inside code section at 0x804abad -- 0x804abb0
0x804abad:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804abb0 -- 0x804abb2
0x804abb0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804abb4 -- 0x804abc8
0x804abb4:   53                              	push ebx
0x804abb5:   83 ec 08                        	sub esp, 8
0x804abb8:   e8 d3 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804abbd:   81 c3 43 24 00 00               	add ebx, 0x2443
0x804abc3:   83 c4 08                        	add esp, 8
0x804abc6:   5b                              	pop ebx
0x804abc7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 cc ab 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804abc8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804abd8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804abe8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804abf8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804ac08:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ac18:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ac28:   31 00 67 5f 32 00 67 5f  33 00 67 5f 34 00 67 5f   |1.g_2.g_3.g_4.g_|
0x804ac38:   35 00 67 5f 36 00 67 5f  39 00 67 5f 31 32 00 67   |5.g_6.g_9.g_12.g|
0x804ac48:   5f 35 30 00 67 5f 35 34  00 67 5f 37 33 00 67 5f   |_50.g_54.g_73.g_|
0x804ac58:   38 35 00 67 5f 31 30 35  00 67 5f 31 30 38 00 67   |85.g_105.g_108.g|
0x804ac68:   5f 31 32 37 00 67 5f 31  36 38 00 67 5f 31 36 39   |_127.g_168.g_169|
0x804ac78:   00 67 5f 31 37 30 00 67  5f 32 32 35 00 67 5f 32   |.g_170.g_225.g_2|
0x804ac88:   32 39 00 67 5f 32 33 30  00 67 5f 32 33 31 00 67   |29.g_230.g_231.g|
0x804ac98:   5f 32 33 32 00 67 5f 32  33 34 00 67 5f 32 33 37   |_232.g_234.g_237|
0x804aca8:   00 67 5f 33 35 31 00 00  00 00 00 3f ff ff ff 7e   |.g_351.....?...~|
0x804acb8:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x804acc8:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x804acd8:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804ace8:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804acf8:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804ad08:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804ad18:   01                                                 |.               |
; section: .eh_frame_hdr
0x804ad18:   01 1b 03 3b b0 02 00 00  55 00 00 00 d8 d5 ff ff   |...;....U.......|
0x804ad28:   e0 02 00 00 18 d6 ff ff  04 03 00 00 68 d6 ff ff   |............h...|
0x804ad38:   cc 02 00 00 3e d7 ff ff  18 03 00 00 4e d7 ff ff   |....>.......N...|
0x804ad48:   38 03 00 00 7c d7 ff ff  5c 03 00 00 9a d7 ff ff   |8...|...\.......|
0x804ad58:   7c 03 00 00 c2 d7 ff ff  9c 03 00 00 ec d7 ff ff   ||...............|
0x804ad68:   bc 03 00 00 15 d8 ff ff  dc 03 00 00 58 d8 ff ff   |............X...|
0x804ad78:   fc 03 00 00 99 d8 ff ff  1c 04 00 00 f1 d8 ff ff   |................|
0x804ad88:   40 04 00 00 43 d9 ff ff  64 04 00 00 80 d9 ff ff   |@...C...d.......|
0x804ad98:   84 04 00 00 b7 d9 ff ff  a4 04 00 00 d6 d9 ff ff   |................|
0x804ada8:   c4 04 00 00 00 da ff ff  e4 04 00 00 2c da ff ff   |............,...|
0x804adb8:   04 05 00 00 57 da ff ff  24 05 00 00 a0 da ff ff   |....W...$.......|
0x804adc8:   44 05 00 00 e7 da ff ff  64 05 00 00 41 db ff ff   |D.......d...A...|
0x804add8:   88 05 00 00 95 db ff ff  ac 05 00 00 d4 db ff ff   |................|
0x804ade8:   cc 05 00 00 0d dc ff ff  ec 05 00 00 2f dc ff ff   |............/...|
0x804adf8:   0c 06 00 00 7d dc ff ff  2c 06 00 00 b9 dc ff ff   |....}...,.......|
0x804ae08:   4c 06 00 00 42 dd ff ff  6c 06 00 00 74 dd ff ff   |L...B...l...t...|
0x804ae18:   8c 06 00 00 a4 dd ff ff  ac 06 00 00 e9 dd ff ff   |................|
0x804ae28:   cc 06 00 00 28 de ff ff  ec 06 00 00 5a de ff ff   |....(.......Z...|
0x804ae38:   0c 07 00 00 86 de ff ff  2c 07 00 00 a4 de ff ff   |........,.......|
0x804ae48:   4c 07 00 00 cc de ff ff  6c 07 00 00 f1 de ff ff   |L.......l.......|
0x804ae58:   8c 07 00 00 16 df ff ff  ac 07 00 00 4d df ff ff   |............M...|
0x804ae68:   cc 07 00 00 81 df ff ff  ec 07 00 00 d3 df ff ff   |................|
0x804ae78:   10 08 00 00 1f e0 ff ff  34 08 00 00 56 e0 ff ff   |........4...V...|
0x804ae88:   54 08 00 00 87 e0 ff ff  74 08 00 00 a6 e0 ff ff   |T.......t.......|
0x804ae98:   94 08 00 00 d0 e0 ff ff  b4 08 00 00 f8 e0 ff ff   |................|
0x804aea8:   d4 08 00 00 21 e1 ff ff  f4 08 00 00 5d e1 ff ff   |....!.......]...|
0x804aeb8:   14 09 00 00 97 e1 ff ff  34 09 00 00 ea e1 ff ff   |........4.......|
0x804aec8:   58 09 00 00 37 e2 ff ff  7c 09 00 00 6f e2 ff ff   |X...7...|...o...|
0x804aed8:   9c 09 00 00 a1 e2 ff ff  bc 09 00 00 b5 e2 ff ff   |................|
0x804aee8:   dc 09 00 00 cc e2 ff ff  fc 09 00 00 e1 e2 ff ff   |................|
0x804aef8:   1c 0a 00 00 f7 e2 ff ff  3c 0a 00 00 1e e3 ff ff   |........<.......|
0x804af08:   5c 0a 00 00 43 e3 ff ff  7c 0a 00 00 82 e3 ff ff   |\...C...|.......|
0x804af18:   9c 0a 00 00 bb e3 ff ff  bc 0a 00 00 e7 e3 ff ff   |................|
0x804af28:   dc 0a 00 00 0d e4 ff ff  fc 0a 00 00 4f e4 ff ff   |............O...|
0x804af38:   1c 0b 00 00 91 e4 ff ff  3c 0b 00 00 d3 e4 ff ff   |........<.......|
0x804af48:   5c 0b 00 00 48 e5 ff ff  7c 0b 00 00 a5 e5 ff ff   |\...H...|.......|
0x804af58:   9c 0b 00 00 02 e6 ff ff  bc 0b 00 00 5f e6 ff ff   |............_...|
0x804af68:   dc 0b 00 00 ef e6 ff ff  fc 0b 00 00 53 e7 ff ff   |............S...|
0x804af78:   1c 0c 00 00 c3 e7 ff ff  3c 0c 00 00 0a e8 ff ff   |........<.......|
0x804af88:   60 0c 00 00 5f e8 ff ff  80 0c 00 00 a6 e8 ff ff   |`..._...........|
0x804af98:   a4 0c 00 00 0e e9 ff ff  c8 0c 00 00 6e ea ff ff   |............n...|
0x804afa8:   f8 0c 00 00 bc fa ff ff  28 0d 00 00 32 fe ff ff   |........(...2...|
0x804afb8:   60 0d 00 00 38 fe ff ff  74 0d 00 00 98 fe ff ff   |`...8...t.......|
0x804afc8:   c0 0d 00 00 14                                     |.....           |
; section: .eh_frame
0x804afcc:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804afdc:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804afec:   94 d3 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804affc:   30 00 00 00 f0 d2 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b00c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b01c:   10 00 00 00 54 00 00 00  0c d3 ff ff 08 00 00 00   |....T...........|
0x804b02c:   00 00 00 00 1c 00 00 00  68 00 00 00 1e d4 ff ff   |........h.......|
0x804b03c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b04c:   04 04 00 00 20 00 00 00  88 00 00 00 0e d4 ff ff   |.... ...........|
0x804b05c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b06c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b07c:   18 d4 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b08c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b09c:   16 d4 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b0ac:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b0bc:   1e d4 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b0cc:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b0dc:   28 d4 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |(...)....A....B.|
0x804b0ec:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b0fc:   31 d4 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |1...C....A....B.|
0x804b10c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b11c:   54 d4 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |T...A....A....B.|
0x804b12c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b13c:   75 d4 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |u...X....A....B.|
0x804b14c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b15c:   90 01 00 00 a9 d4 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b16c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b17c:   1c 00 00 00 b4 01 00 00  d7 d4 ff ff 3d 00 00 00   |............=...|
0x804b18c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b19c:   1c 00 00 00 d4 01 00 00  f4 d4 ff ff 37 00 00 00   |............7...|
0x804b1ac:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b1bc:   1c 00 00 00 f4 01 00 00  0b d5 ff ff 1f 00 00 00   |................|
0x804b1cc:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b1dc:   1c 00 00 00 14 02 00 00  0a d5 ff ff 2a 00 00 00   |............*...|
0x804b1ec:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b1fc:   1c 00 00 00 34 02 00 00  14 d5 ff ff 2c 00 00 00   |....4.......,...|
0x804b20c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b21c:   1c 00 00 00 54 02 00 00  20 d5 ff ff 2b 00 00 00   |....T... ...+...|
0x804b22c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b23c:   1c 00 00 00 74 02 00 00  2b d5 ff ff 49 00 00 00   |....t...+...I...|
0x804b24c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b25c:   1c 00 00 00 94 02 00 00  54 d5 ff ff 47 00 00 00   |........T...G...|
0x804b26c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b27c:   20 00 00 00 b4 02 00 00  7b d5 ff ff 5a 00 00 00   | .......{...Z...|
0x804b28c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b29c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 b1 d5 ff ff   |.... ...........|
0x804b2ac:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b2bc:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b2cc:   e1 d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b2dc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b2ec:   00 d6 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b2fc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b30c:   19 d6 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b31c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b32c:   1b d6 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b33c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b34c:   49 d6 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |I...<....A....B.|
0x804b35c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b36c:   65 d6 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |e........A....B.|
0x804b37c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b38c:   ce d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b39c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b3ac:   e0 d6 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b3bc:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b3cc:   f0 d6 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b3dc:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b3ec:   15 d7 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b3fc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b40c:   34 d7 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |4...2....A....B.|
0x804b41c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b42c:   46 d7 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |F...,....A....B.|
0x804b43c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b44c:   52 d7 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |R........A....B.|
0x804b45c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b46c:   50 d7 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |P...(....A....B.|
0x804b47c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b48c:   58 d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |X...%....A....B.|
0x804b49c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b4ac:   5d d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |]...%....A....B.|
0x804b4bc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b4cc:   62 d7 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |b...7....A....B.|
0x804b4dc:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b4ec:   79 d7 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |y...4....A....B.|
0x804b4fc:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b50c:   8d d7 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b51c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b52c:   60 05 00 00 bb d7 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b53c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b54c:   1c 00 00 00 84 05 00 00  e3 d7 ff ff 37 00 00 00   |............7...|
0x804b55c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b56c:   1c 00 00 00 a4 05 00 00  fa d7 ff ff 31 00 00 00   |............1...|
0x804b57c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b58c:   1c 00 00 00 c4 05 00 00  0b d8 ff ff 1f 00 00 00   |................|
0x804b59c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b5ac:   1c 00 00 00 e4 05 00 00  0a d8 ff ff 2a 00 00 00   |............*...|
0x804b5bc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b5cc:   1c 00 00 00 04 06 00 00  14 d8 ff ff 28 00 00 00   |............(...|
0x804b5dc:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b5ec:   1c 00 00 00 24 06 00 00  1c d8 ff ff 29 00 00 00   |....$.......)...|
0x804b5fc:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b60c:   1c 00 00 00 44 06 00 00  25 d8 ff ff 3c 00 00 00   |....D...%...<...|
0x804b61c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b62c:   1c 00 00 00 64 06 00 00  41 d8 ff ff 3a 00 00 00   |....d...A...:...|
0x804b63c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b64c:   20 00 00 00 84 06 00 00  5b d8 ff ff 53 00 00 00   | .......[...S...|
0x804b65c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b66c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 8a d8 ff ff   |.... ...........|
0x804b67c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b68c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b69c:   b3 d8 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b6ac:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b6bc:   cb d8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b6cc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b6dc:   dd d8 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b6ec:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b6fc:   d1 d8 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b70c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b71c:   c8 d8 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b72c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b73c:   bd d8 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b74c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b75c:   b3 d8 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b76c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b77c:   ba d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b78c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b79c:   bf d8 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b7ac:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b7bc:   de d8 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b7cc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b7dc:   f7 d8 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b7ec:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b7fc:   03 d9 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804b80c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b81c:   09 d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b82c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b83c:   2b d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |+...B....A....B.|
0x804b84c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b85c:   4d d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |M...B....A....B.|
0x804b86c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b87c:   6f d9 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |o...u....A....B.|
0x804b88c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b89c:   c4 d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b8ac:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b8bc:   01 da ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b8cc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b8dc:   3e da ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |>...]....A....B.|
0x804b8ec:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b8fc:   7b da ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |{........A....B.|
0x804b90c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b91c:   eb da ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804b92c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b93c:   2f db ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |/...p....A....B.|
0x804b94c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b95c:   7f db ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b96c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b97c:   b0 09 00 00 a2 db ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804b98c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b99c:   d0 09 00 00 d7 db ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804b9ac:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b9bc:   20 00 00 00 f4 09 00 00  fa db ff ff 68 00 00 00   | ...........h...|
0x804b9cc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b9dc:   0c 04 04 00 2c 00 00 00  18 0a 00 00 3e dc ff ff   |....,.......>...|
0x804b9ec:   60 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |`....A....B..F..|
0x804b9fc:   86 04 83 05 03 53 01 c3  41 c6 41 c7 41 c5 0c 04   |.....S..A.A.A...|
0x804ba0c:   04 00 00 00 2c 00 00 00  48 0a 00 00 6e dd ff ff   |....,...H...n...|
0x804ba1c:   4e 10 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |N....A....B..I..|
0x804ba2c:   86 04 83 05 03 3e 10 c3  41 c6 41 c7 41 c5 0c 04   |.....>..A.A.A...|
0x804ba3c:   04 00 00 00 34 00 00 00  78 0a 00 00 8c ed ff ff   |....4...x.......|
0x804ba4c:   76 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |v....D...G...u.D|
0x804ba5c:   0f 03 75 78 06 10 03 02  75 7c 03 61 03 c1 0c 01   |..ux....u|.a....|
0x804ba6c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804ba7c:   b0 0a 00 00 ca f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804ba8c:   48 00 00 00 c4 0a 00 00  bc f0 ff ff 5d 00 00 00   |H...........]...|
0x804ba9c:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x804baac:   41 0e 14 83 05 4e 0e 20  69 0e 24 41 0e 28 44 0e   |A....N. i.$A.(D.|
0x804babc:   2c 44 0e 30 4d 0e 20 47  0e 14 41 c3 0e 10 41 c6   |,D.0M. G..A...A.|
0x804bacc:   0e 0c 41 c7 0e 08 41 c5  0e 04 00 00 10 00 00 00   |..A...A.........|
0x804badc:   10 0b 00 00 d0 f0 ff ff  02 00 00 00 00 00 00 00   |................|
0x804baec:   00 00 00 00 ??                                     |....?           |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 b4 ab 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff a8 98 31 9b   |..............1.|
0x804d028:   94 80 5c 90 1b 6f 5c 88  ce b0 60 6e 36 5f fe 94   |..\..o\...`n6_..|
0x804d038:   fb ff ff ff 20 4a 05 ef  ff ff ff ff 09 00 00 00   |.... J..........|
0x804d048:   05 ad 7d dc 0a 49 88 f6  05 00 01 00 fa ff ff ff   |..}..I..........|
0x804d058:   06 00 00 00 06 00 00 00  01 00 00 00 f8 ff ff ff   |................|
0x804d068:   fc ff ff ff 5b 0f 14 ad  25 da 00 00 fa ff ff ff   |....[...%.......|
0x804d078:   ??                                                 |?               |
