;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:04:56
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 d0 cf ff ff               	lea eax, [ebx - 0x3030]
0x804835c:   50                              	push eax
0x804835d:   8d 83 70 cf ff ff               	lea eax, [ebx - 0x3090]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 7f aa 04 08               	mov eax, 0x804aa7f
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 98 e0 04 08                  	mov eax, 0x804e098
0x80483a5:   3d 98 e0 04 08                  	cmp eax, 0x804e098
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 98 e0 04 08                  	push 0x804e098
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 98 e0 04 08                  	mov eax, 0x804e098
0x80483e5:   2d 98 e0 04 08                  	sub eax, 0x804e098
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 98 e0 04 08                  	push 0x804e098
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d a0 e0 04 08 00            	cmp byte ptr [0x804e0a0], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 a0 e0 04 08 01            	mov byte ptr [0x804e0a0], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 05 2b 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 f1 2a 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 f0 cf ff ff               	lea edx, [eax - 0x3010]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 c4 2a 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 a6 2a 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 7e 2a 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 54 2a 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 2b 2a 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 e8 29 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 a6 29 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 4e 29 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 fd 28 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 c0 28 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 89 28 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 6a 28 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 40 28 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 14 28 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 e9 27 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 a0 27 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 58 27 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 fe 26 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 ab 26 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 6c 26 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 36 26 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 14 26 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 c6 25 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 8a 25 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 01 25 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 cf 24 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 9f 24 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 5a 24 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 1b 24 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 e9 23 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 ba 23 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 9c 23 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 74 23 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 4f 23 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 2a 23 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 f3 22 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 be 22 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 6c 22 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 21 22 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 ea 21 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 b9 21 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 9a 21 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 70 21 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 48 21 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 1f 21 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 e3 20 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 a8 20 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 55 20 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 09 20 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 d1 1f 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 a2 1f 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 8e 1f 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 77 1f 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 62 1f 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 4c 1f 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 25 1f 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 00 1f 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 c1 1e 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 88 1e 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 5c 1e 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 36 1e 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 20 d1 ff ff               	fld dword ptr [eax - 0x2ee0]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 20 d1 ff ff               	fld dword ptr [eax - 0x2ee0]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 24 d1 ff ff               	fld dword ptr [eax - 0x2edc]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 f4 1d 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 20 d1 ff ff               	fld dword ptr [eax - 0x2ee0]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 20 d1 ff ff               	fld dword ptr [eax - 0x2ee0]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 24 d1 ff ff               	fld dword ptr [eax - 0x2edc]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 b2 1d 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 28 d1 ff ff               	fld dword ptr [eax - 0x2ed8]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 2c d1 ff ff               	fld dword ptr [eax - 0x2ed4]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 30 d1 ff ff               	fld dword ptr [eax - 0x2ed0]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 70 1d 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 34 d1 ff ff               	fld dword ptr [eax - 0x2ecc]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 38 d1 ff ff               	fld dword ptr [eax - 0x2ec8]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 3c d1 ff ff               	fld dword ptr [eax - 0x2ec4]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 f8 1c 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 40 d1 ff ff               	fld qword ptr [eax - 0x2ec0]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 40 d1 ff ff               	fld qword ptr [eax - 0x2ec0]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 48 d1 ff ff               	fld qword ptr [eax - 0x2eb8]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 9b 1c 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 40 d1 ff ff               	fld qword ptr [eax - 0x2ec0]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 40 d1 ff ff               	fld qword ptr [eax - 0x2ec0]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 48 d1 ff ff               	fld qword ptr [eax - 0x2eb8]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 3e 1c 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 50 d1 ff ff               	fld qword ptr [eax - 0x2eb0]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 58 d1 ff ff               	fld qword ptr [eax - 0x2ea8]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 60 d1 ff ff               	fld qword ptr [eax - 0x2ea0]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 e1 1b 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 68 d1 ff ff               	fld qword ptr [eax - 0x2e98]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 70 d1 ff ff               	fld qword ptr [eax - 0x2e90]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 78 d1 ff ff               	fld qword ptr [eax - 0x2e88]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 51 1b 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 80 d1 ff ff               	fld dword ptr [eax - 0x2e80]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 84 d1 ff ff               	fld dword ptr [eax - 0x2e7c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 ed 1a 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 c0 00 00 00            	mov dword ptr [eax + edx*4 + 0xc0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 7c 1a 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 c0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xc0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 39 1a 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 00 d0 ff ff               	lea eax, [ebx - 0x3000]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 24 d0 ff ff               	lea eax, [ebx - 0x2fdc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80498f5
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   81 ec 90 00 00 00               	sub esp, 0x90
0x8049632:   e8 30 19 00 00                  	call 0x804af67 <__x86.get_pc_thunk.dx>
0x8049637:   81 c2 c9 49 00 00               	add edx, 0x49c9
0x804963d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049640:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049643:   8b 4d 10                        	mov ecx, dword ptr [ebp + 0x10]
0x8049646:   8b 5d 18                        	mov ebx, dword ptr [ebp + 0x18]
0x8049649:   8b 75 1c                        	mov esi, dword ptr [ebp + 0x1c]
0x804964c:   8b 7d 20                        	mov edi, dword ptr [ebp + 0x20]
0x804964f:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x8049652:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049655:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x8049658:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804965b:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x804965e:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049661:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049664:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049667:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x804966a:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804966d:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x8049670:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049673:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x8049676:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049679:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x804967c:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804967f:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x8049682:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x8049688:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x804968b:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x8049691:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x8049694:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804969a:   8b 85 84 00 00 00               	mov eax, dword ptr [ebp + 0x84]
0x80496a0:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x80496a6:   8b 85 90 00 00 00               	mov eax, dword ptr [ebp + 0x90]
0x80496ac:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x80496b2:   8b 85 94 00 00 00               	mov eax, dword ptr [ebp + 0x94]
0x80496b8:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x80496be:   8b 85 98 00 00 00               	mov eax, dword ptr [ebp + 0x98]
0x80496c4:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x80496ca:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496ce:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x80496d2:   89 c8                           	mov eax, ecx
0x80496d4:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x80496d7:   89 d8                           	mov eax, ebx
0x80496d9:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x80496dd:   89 f0                           	mov eax, esi
0x80496df:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x80496e3:   89 f8                           	mov eax, edi
0x80496e5:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x80496e8:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x80496ec:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496f0:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x80496f4:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496f8:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x80496fc:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496ff:   0f b6 45 90                     	movzx eax, byte ptr [ebp - 0x70]
0x8049703:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x8049706:   0f b6 45 8c                     	movzx eax, byte ptr [ebp - 0x74]
0x804970a:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x804970d:   0f b7 45 88                     	movzx eax, word ptr [ebp - 0x78]
0x8049711:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x8049715:   0f b7 45 84                     	movzx eax, word ptr [ebp - 0x7c]
0x8049719:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x804971d:   0f b7 45 80                     	movzx eax, word ptr [ebp - 0x80]
0x8049721:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x8049725:   0f b7 85 7c ff ff ff            	movzx eax, word ptr [ebp - 0x84]
0x804972c:   66 89 45 bc                     	mov word ptr [ebp - 0x44], ax
0x8049730:   0f b7 85 78 ff ff ff            	movzx eax, word ptr [ebp - 0x88]
0x8049737:   66 89 45 b8                     	mov word ptr [ebp - 0x48], ax
0x804973b:   0f b6 85 74 ff ff ff            	movzx eax, byte ptr [ebp - 0x8c]
0x8049742:   88 45 b4                        	mov byte ptr [ebp - 0x4c], al
0x8049745:   0f b6 85 70 ff ff ff            	movzx eax, byte ptr [ebp - 0x90]
0x804974c:   88 45 b0                        	mov byte ptr [ebp - 0x50], al
0x804974f:   0f b7 85 6c ff ff ff            	movzx eax, word ptr [ebp - 0x94]
0x8049756:   66 89 45 ac                     	mov word ptr [ebp - 0x54], ax
0x804975a:   0f b7 85 68 ff ff ff            	movzx eax, word ptr [ebp - 0x98]
0x8049761:   66 89 45 a8                     	mov word ptr [ebp - 0x58], ax
0x8049765:   0f b6 85 64 ff ff ff            	movzx eax, byte ptr [ebp - 0x9c]
0x804976c:   88 45 a4                        	mov byte ptr [ebp - 0x5c], al
0x804976f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049772:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x8049778:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804977c:   66 89 82 28 00 00 00            	mov word ptr [edx + 0x28], ax
0x8049783:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x8049787:   88 82 2a 00 00 00               	mov byte ptr [edx + 0x2a], al
0x804978d:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x8049790:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x8049796:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x804979a:   66 89 82 30 00 00 00            	mov word ptr [edx + 0x30], ax
0x80497a1:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x80497a5:   66 89 82 c4 04 00 00            	mov word ptr [edx + 0x4c4], ax
0x80497ac:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x80497b0:   88 82 32 00 00 00               	mov byte ptr [edx + 0x32], al
0x80497b6:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x80497ba:   66 89 82 34 00 00 00            	mov word ptr [edx + 0x34], ax
0x80497c1:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x80497c4:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x80497ca:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x80497ce:   66 89 82 3c 00 00 00            	mov word ptr [edx + 0x3c], ax
0x80497d5:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x80497d9:   88 82 3e 00 00 00               	mov byte ptr [edx + 0x3e], al
0x80497df:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x80497e2:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x80497e8:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x80497ec:   88 82 44 00 00 00               	mov byte ptr [edx + 0x44], al
0x80497f2:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x80497f5:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x80497fb:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x80497fe:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x8049804:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049807:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x804980d:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x8049811:   88 82 c6 04 00 00               	mov byte ptr [edx + 0x4c6], al
0x8049817:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x804981b:   66 89 82 54 00 00 00            	mov word ptr [edx + 0x54], ax
0x8049822:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049825:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x804982b:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x804982e:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x8049834:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x8049837:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x804983d:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x8049841:   66 89 82 64 00 00 00            	mov word ptr [edx + 0x64], ax
0x8049848:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x804984b:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x8049851:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x8049855:   66 89 82 6c 00 00 00            	mov word ptr [edx + 0x6c], ax
0x804985c:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x8049860:   66 89 82 6e 00 00 00            	mov word ptr [edx + 0x6e], ax
0x8049867:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x804986b:   66 89 82 70 00 00 00            	mov word ptr [edx + 0x70], ax
0x8049872:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x8049875:   89 82 74 00 00 00               	mov dword ptr [edx + 0x74], eax
0x804987b:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x804987f:   88 82 78 00 00 00               	mov byte ptr [edx + 0x78], al
0x8049885:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x8049888:   89 82 7c 00 00 00               	mov dword ptr [edx + 0x7c], eax
0x804988e:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x8049891:   89 82 80 00 00 00               	mov dword ptr [edx + 0x80], eax
0x8049897:   8b 85 80 00 00 00               	mov eax, dword ptr [ebp + 0x80]
0x804989d:   89 82 84 00 00 00               	mov dword ptr [edx + 0x84], eax
0x80498a3:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x80498a7:   88 82 88 00 00 00               	mov byte ptr [edx + 0x88], al
0x80498ad:   8b 85 88 00 00 00               	mov eax, dword ptr [ebp + 0x88]
0x80498b3:   89 82 8c 00 00 00               	mov dword ptr [edx + 0x8c], eax
0x80498b9:   8b 85 8c 00 00 00               	mov eax, dword ptr [ebp + 0x8c]
0x80498bf:   89 82 90 00 00 00               	mov dword ptr [edx + 0x90], eax
0x80498c5:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x80498c9:   66 89 82 94 00 00 00            	mov word ptr [edx + 0x94], ax
0x80498d0:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80498d4:   66 89 82 c8 04 00 00            	mov word ptr [edx + 0x4c8], ax
0x80498db:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x80498df:   88 82 96 00 00 00               	mov byte ptr [edx + 0x96], al
0x80498e5:   b8 00 00 00 00                  	mov eax, 0
0x80498ea:   81 c4 90 00 00 00               	add esp, 0x90
0x80498f0:   5b                              	pop ebx
0x80498f1:   5e                              	pop esi
0x80498f2:   5f                              	pop edi
0x80498f3:   5d                              	pop ebp
0x80498f4:   c3                              	ret 
; function: func_1 at 0x80498f5 -- 0x804aa7f
0x80498f5:   55                              	push ebp
0x80498f6:   89 e5                           	mov ebp, esp
0x80498f8:   57                              	push edi
0x80498f9:   56                              	push esi
0x80498fa:   53                              	push ebx
0x80498fb:   81 ec 78 01 00 00               	sub esp, 0x178
0x8049901:   e8 5d 16 00 00                  	call 0x804af63 <__x86.get_pc_thunk.ax>
0x8049906:   05 fa 46 00 00                  	add eax, 0x46fa
0x804990b:   c7 45 f0 fe ff ff ff            	mov dword ptr [ebp - 0x10], 0xfffffffe
0x8049912:   66 c7 45 ee 37 07               	mov word ptr [ebp - 0x12], 0x737
0x8049918:   c6 45 ed 01                     	mov byte ptr [ebp - 0x13], 1
0x804991c:   c7 45 e8 01 00 00 00            	mov dword ptr [ebp - 0x18], 1
0x8049923:   66 c7 45 e6 07 00               	mov word ptr [ebp - 0x1a], 7
0x8049929:   66 c7 45 e4 00 00               	mov word ptr [ebp - 0x1c], 0
0x804992f:   c6 45 a3 06                     	mov byte ptr [ebp - 0x5d], 6
0x8049933:   66 c7 45 a0 c5 13               	mov word ptr [ebp - 0x60], 0x13c5
0x8049939:   c7 45 e0 29 1f de 36            	mov dword ptr [ebp - 0x20], 0x36de1f29
0x8049940:   66 c7 45 9e 02 00               	mov word ptr [ebp - 0x62], 2
0x8049946:   c6 45 9d 3e                     	mov byte ptr [ebp - 0x63], 0x3e
0x804994a:   c7 45 98 f9 42 2a 52            	mov dword ptr [ebp - 0x68], 0x522a42f9
0x8049951:   c6 45 97 a1                     	mov byte ptr [ebp - 0x69], 0xa1
0x8049955:   c7 45 dc 04 00 00 00            	mov dword ptr [ebp - 0x24], 4
0x804995c:   c7 45 90 80 97 2c f7            	mov dword ptr [ebp - 0x70], 0xf72c9780
0x8049963:   c7 45 8c 04 00 00 00            	mov dword ptr [ebp - 0x74], 4
0x804996a:   c6 45 db 00                     	mov byte ptr [ebp - 0x25], 0
0x804996e:   66 c7 45 8a 03 00               	mov word ptr [ebp - 0x76], 3
0x8049974:   c7 45 84 01 00 00 00            	mov dword ptr [ebp - 0x7c], 1
0x804997b:   c7 45 d4 fd ff ff ff            	mov dword ptr [ebp - 0x2c], 0xfffffffd
0x8049982:   c7 45 80 2e 68 72 0f            	mov dword ptr [ebp - 0x80], 0xf72682e
0x8049989:   66 c7 85 7e ff ff ff b0 da      	mov word ptr [ebp - 0x82], 0xdab0
0x8049992:   c7 85 78 ff ff ff 39 86 29 c1   	mov dword ptr [ebp - 0x88], 0xc1298639
0x804999c:   66 c7 85 76 ff ff ff 13 79      	mov word ptr [ebp - 0x8a], 0x7913
0x80499a5:   66 c7 85 74 ff ff ff 5f 5f      	mov word ptr [ebp - 0x8c], 0x5f5f
0x80499ae:   66 c7 45 d2 fb ff               	mov word ptr [ebp - 0x2e], 0xfffb
0x80499b4:   c7 85 48 ff ff ff 11 55 47 73   	mov dword ptr [ebp - 0xb8], 0x73475511
0x80499be:   c6 45 d1 be                     	mov byte ptr [ebp - 0x2f], 0xbe
0x80499c2:   c7 45 cc a6 14 e1 2b            	mov dword ptr [ebp - 0x34], 0x2be114a6
0x80499c9:   c7 45 c8 09 00 00 00            	mov dword ptr [ebp - 0x38], 9
0x80499d0:   c7 45 c4 8e 83 2d 1b            	mov dword ptr [ebp - 0x3c], 0x1b2d838e
0x80499d7:   c6 45 c3 67                     	mov byte ptr [ebp - 0x3d], 0x67
0x80499db:   c7 85 70 ff ff ff 99 33 81 76   	mov dword ptr [ebp - 0x90], 0x76813399
0x80499e5:   c7 85 44 ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xbc], 0xfffffffc
0x80499ef:   66 c7 85 6e ff ff ff fb ff      	mov word ptr [ebp - 0x92], 0xfffb
0x80499f8:   66 c7 85 42 ff ff ff 00 00      	mov word ptr [ebp - 0xbe], 0
0x8049a01:   c6 45 c2 fb                     	mov byte ptr [ebp - 0x3e], 0xfb
0x8049a05:   c7 85 3c ff ff ff e2 fd e2 ee   	mov dword ptr [ebp - 0xc4], 0xeee2fde2
0x8049a0f:   c7 45 bc fb ff ff ff            	mov dword ptr [ebp - 0x44], 0xfffffffb
0x8049a16:   c7 45 b8 06 00 00 00            	mov dword ptr [ebp - 0x48], 6
0x8049a1d:   c7 85 60 ff ff ff a6 f2 cd 5d   	mov dword ptr [ebp - 0xa0], 0x5dcdf2a6
0x8049a27:   c7 85 5c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xa4], 1
0x8049a31:   66 c7 85 5a ff ff ff 01 00      	mov word ptr [ebp - 0xa6], 1
0x8049a3a:   c7 85 54 ff ff ff bb 7f 2d 38   	mov dword ptr [ebp - 0xac], 0x382d7fbb
0x8049a44:   c7 45 b4 01 00 00 00            	mov dword ptr [ebp - 0x4c], 1
0x8049a4b:   c7 45 f0 15 00 00 00            	mov dword ptr [ebp - 0x10], 0x15
0x8049a52:   83 7d f0 15                     	cmp dword ptr [ebp - 0x10], 0x15
0x8049a56:   0f 8e 4a 03 00 00               	jle 0x8049da6 <func_1+0x4b1>
0x8049a5c:   c7 85 e4 fe ff ff f8 08 b1 a8   	mov dword ptr [ebp - 0x11c], 0xa8b108f8
0x8049a66:   c7 85 e0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x120], 1
0x8049a70:   c7 85 dc fe ff ff 1e 31 41 57   	mov dword ptr [ebp - 0x124], 0x5741311e
0x8049a7a:   c7 85 d8 fe ff ff 8e b3 17 67   	mov dword ptr [ebp - 0x128], 0x6717b38e
0x8049a84:   c7 85 d4 fe ff ff 63 6f fa f1   	mov dword ptr [ebp - 0x12c], 0xf1fa6f63
0x8049a8e:   c7 85 d0 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x130], 0xffffffff
0x8049a98:   66 c7 85 ce fe ff ff d8 bf      	mov word ptr [ebp - 0x132], 0xbfd8
0x8049aa1:   83 ad e4 fe ff ff 01            	sub dword ptr [ebp - 0x11c], 1
0x8049aa8:   83 ad 3c ff ff ff 01            	sub dword ptr [ebp - 0xc4], 1
0x8049aaf:   66 c7 85 cc fe ff ff 04 00      	mov word ptr [ebp - 0x134], 4
0x8049ab8:   c7 85 c8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x138], 0xffffffff
0x8049ac2:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049ac5:   66 89 85 cc fe ff ff            	mov word ptr [ebp - 0x134], ax
0x8049acc:   0f bf 85 cc fe ff ff            	movsx eax, word ptr [ebp - 0x134]
0x8049ad3:   8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x8049ad6:   0f b7 ca                        	movzx ecx, dx
0x8049ad9:   8b 95 e0 fe ff ff               	mov edx, dword ptr [ebp - 0x120]
0x8049adf:   0f b7 d2                        	movzx edx, dx
0x8049ae2:   29 d1                           	sub ecx, edx
0x8049ae4:   89 ca                           	mov edx, ecx
0x8049ae6:   0b 95 dc fe ff ff               	or edx, dword ptr [ebp - 0x124]
0x8049aec:   89 d1                           	mov ecx, edx
0x8049aee:   83 c9 06                        	or ecx, 6
0x8049af1:   8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x8049af4:   31 ca                           	xor edx, ecx
0x8049af6:   39 d0                           	cmp eax, edx
0x8049af8:   83 bd 3c ff ff ff 00            	cmp dword ptr [ebp - 0xc4], 0
0x8049aff:   74 31                           	je 0x8049b32 <func_1+0x23d>
0x8049b01:   c7 85 b4 fe ff ff 7b af b4 09   	mov dword ptr [ebp - 0x14c], 0x9b4af7b
0x8049b0b:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049b0e:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x8049b11:   8b 85 b4 fe ff ff               	mov eax, dword ptr [ebp - 0x14c]
0x8049b17:   23 85 3c ff ff ff               	and eax, dword ptr [ebp - 0xc4]
0x8049b1d:   89 85 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], eax
0x8049b23:   8b 85 b4 fe ff ff               	mov eax, dword ptr [ebp - 0x14c]
0x8049b29:   66 89 45 ee                     	mov word ptr [ebp - 0x12], ax
0x8049b2d:   e9 11 01 00 00                  	jmp 0x8049c43 <func_1+0x34e>
0x8049b32:   c7 85 c4 fe ff ff d3 b9 ae c9   	mov dword ptr [ebp - 0x13c], 0xc9aeb9d3
0x8049b3c:   c7 85 c0 fe ff ff 33 7b e6 d3   	mov dword ptr [ebp - 0x140], 0xd3e67b33
0x8049b46:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x8049b4a:   31 85 d4 fe ff ff               	xor dword ptr [ebp - 0x12c], eax
0x8049b50:   81 bd d4 fe ff ff 5e 1b 00 00   	cmp dword ptr [ebp - 0x12c], 0x1b5e
0x8049b5a:   0f 9f c0                        	setg al
0x8049b5d:   0f b6 d0                        	movzx edx, al
0x8049b60:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049b63:   01 d0                           	add eax, edx
0x8049b65:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x8049b6b:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049b6f:   0f 8f ce 00 00 00               	jg 0x8049c43 <func_1+0x34e>
0x8049b75:   66 c7 85 be fe ff ff 20 e5      	mov word ptr [ebp - 0x142], 0xe520
0x8049b7e:   c7 85 b8 fe ff ff b5 58 b0 48   	mov dword ptr [ebp - 0x148], 0x48b058b5
0x8049b88:   66 c7 85 be fe ff ff b3 52      	mov word ptr [ebp - 0x142], 0x52b3
0x8049b91:   66 83 bd cc fe ff ff 00         	cmp word ptr [ebp - 0x134], 0
0x8049b99:   75 07                           	jne 0x8049ba2 <func_1+0x2ad>
0x8049b9b:   83 bd c4 fe ff ff 00            	cmp dword ptr [ebp - 0x13c], 0
0x8049ba2:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x8049ba6:   0f b6 d0                        	movzx edx, al
0x8049ba9:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049bac:   0f b6 c0                        	movzx eax, al
0x8049baf:   29 c2                           	sub edx, eax
0x8049bb1:   89 d0                           	mov eax, edx
0x8049bb3:   0f b7 d0                        	movzx edx, ax
0x8049bb6:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049bb9:   0f b7 c0                        	movzx eax, ax
0x8049bbc:   29 c2                           	sub edx, eax
0x8049bbe:   89 d0                           	mov eax, edx
0x8049bc0:   89 c2                           	mov edx, eax
0x8049bc2:   0f b6 45 ed                     	movzx eax, byte ptr [ebp - 0x13]
0x8049bc6:   09 d0                           	or eax, edx
0x8049bc8:   88 45 ed                        	mov byte ptr [ebp - 0x13], al
0x8049bcb:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x8049bd1:   f7 d8                           	neg eax
0x8049bd3:   89 c2                           	mov edx, eax
0x8049bd5:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x8049bd9:   89 c1                           	mov ecx, eax
0x8049bdb:   0f b6 c2                        	movzx eax, dl
0x8049bde:   f6 f1                           	div cl
0x8049be0:   0f b6 c0                        	movzx eax, al
0x8049be3:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049be6:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049be9:   66 09 45 e6                     	or word ptr [ebp - 0x1a], ax
0x8049bed:   8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x8049bf3:   0f b7 c0                        	movzx eax, ax
0x8049bf6:   69 c0 47 67 00 00               	imul eax, eax, 0x6747
0x8049bfc:   89 85 c8 fe ff ff               	mov dword ptr [ebp - 0x138], eax
0x8049c02:   8b 85 c8 fe ff ff               	mov eax, dword ptr [ebp - 0x138]
0x8049c08:   3b 45 f0                        	cmp eax, dword ptr [ebp - 0x10]
0x8049c0b:   0f 9e c0                        	setle al
0x8049c0e:   0f b6 d0                        	movzx edx, al
0x8049c11:   0f b7 85 cc fe ff ff            	movzx eax, word ptr [ebp - 0x134]
0x8049c18:   0f be c0                        	movsx eax, al
0x8049c1b:   01 d0                           	add eax, edx
0x8049c1d:   85 c0                           	test eax, eax
0x8049c1f:   74 0d                           	je 0x8049c2e <func_1+0x339>
0x8049c21:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x8049c25:   74 07                           	je 0x8049c2e <func_1+0x339>
0x8049c27:   b8 01 00 00 00                  	mov eax, 1
0x8049c2c:   eb 05                           	jmp 0x8049c33 <func_1+0x33e>
0x8049c2e:   b8 00 00 00 00                  	mov eax, 0
0x8049c33:   89 85 b8 fe ff ff               	mov dword ptr [ebp - 0x148], eax
0x8049c39:   c7 85 c0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x140], 1
0x8049c43:   0f b6 45 c2                     	movzx eax, byte ptr [ebp - 0x3e]
0x8049c47:   89 85 b0 fe ff ff               	mov dword ptr [ebp - 0x150], eax
0x8049c4d:   0f bf 85 42 ff ff ff            	movsx eax, word ptr [ebp - 0xbe]
0x8049c54:   89 85 ac fe ff ff               	mov dword ptr [ebp - 0x154], eax
0x8049c5a:   0f b7 85 6e ff ff ff            	movzx eax, word ptr [ebp - 0x92]
0x8049c61:   89 85 a8 fe ff ff               	mov dword ptr [ebp - 0x158], eax
0x8049c67:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x8049c6b:   89 85 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], eax
0x8049c71:   0f be 45 d1                     	movsx eax, byte ptr [ebp - 0x2f]
0x8049c75:   89 85 a0 fe ff ff               	mov dword ptr [ebp - 0x160], eax
0x8049c7b:   0f bf 45 d2                     	movsx eax, word ptr [ebp - 0x2e]
0x8049c7f:   89 85 9c fe ff ff               	mov dword ptr [ebp - 0x164], eax
0x8049c85:   0f bf 85 74 ff ff ff            	movsx eax, word ptr [ebp - 0x8c]
0x8049c8c:   89 85 98 fe ff ff               	mov dword ptr [ebp - 0x168], eax
0x8049c92:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x8049c99:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x8049c9f:   0f bf 95 7e ff ff ff            	movsx edx, word ptr [ebp - 0x82]
0x8049ca6:   89 95 90 fe ff ff               	mov dword ptr [ebp - 0x170], edx
0x8049cac:   0f bf 55 8a                     	movsx edx, word ptr [ebp - 0x76]
0x8049cb0:   0f be 4d db                     	movsx ecx, byte ptr [ebp - 0x25]
0x8049cb4:   89 8d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ecx
0x8049cba:   0f b6 4d 97                     	movzx ecx, byte ptr [ebp - 0x69]
0x8049cbe:   0f be 5d 9d                     	movsx ebx, byte ptr [ebp - 0x63]
0x8049cc2:   89 9d 88 fe ff ff               	mov dword ptr [ebp - 0x178], ebx
0x8049cc8:   0f b7 5d 9e                     	movzx ebx, word ptr [ebp - 0x62]
0x8049ccc:   0f bf 75 a0                     	movsx esi, word ptr [ebp - 0x60]
0x8049cd0:   89 b5 84 fe ff ff               	mov dword ptr [ebp - 0x17c], esi
0x8049cd6:   0f be 75 a3                     	movsx esi, byte ptr [ebp - 0x5d]
0x8049cda:   0f bf 7d e4                     	movsx edi, word ptr [ebp - 0x1c]
0x8049cde:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x8049ce4:   0f b7 7d e6                     	movzx edi, word ptr [ebp - 0x1a]
0x8049ce8:   0f b6 45 ed                     	movzx eax, byte ptr [ebp - 0x13]
0x8049cec:   89 85 7c fe ff ff               	mov dword ptr [ebp - 0x184], eax
0x8049cf2:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x8049cf6:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x8049cfc:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x8049d02:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x8049d08:   ff b5 44 ff ff ff               	push dword ptr [ebp - 0xbc]
0x8049d0e:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049d14:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x8049d1a:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049d1d:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049d20:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049d23:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049d29:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x8049d2f:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049d35:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x8049d3b:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x8049d41:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049d47:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x8049d4d:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049d50:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049d53:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049d56:   52                              	push edx
0x8049d57:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x8049d5d:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049d60:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049d63:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049d66:   51                              	push ecx
0x8049d67:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x8049d6a:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x8049d70:   53                              	push ebx
0x8049d71:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049d74:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x8049d7a:   56                              	push esi
0x8049d7b:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x8049d81:   57                              	push edi
0x8049d82:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049d85:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x8049d8b:   50                              	push eax
0x8049d8c:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049d8f:   e8 92 f8 ff ff                  	call 0x8049626 <set_var>
0x8049d94:   81 c4 94 00 00 00               	add esp, 0x94
0x8049d9a:   0f bf 85 cc fe ff ff            	movsx eax, word ptr [ebp - 0x134]
0x8049da1:   e9 d1 0c 00 00                  	jmp 0x804aa77 <func_1+0x1182>
0x8049da6:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049da9:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x8049dac:   0f b7 4d 9e                     	movzx ecx, word ptr [ebp - 0x62]
0x8049db0:   b8 03 00 00 00                  	mov eax, 3
0x8049db5:   99                              	cdq 
0x8049db6:   f7 f9                           	idiv ecx
0x8049db8:   89 d0                           	mov eax, edx
0x8049dba:   39 85 60 ff ff ff               	cmp dword ptr [ebp - 0xa0], eax
0x8049dc0:   0f b6 4d 97                     	movzx ecx, byte ptr [ebp - 0x69]
0x8049dc4:   ba 13 40 50 36                  	mov edx, 0x36504013
0x8049dc9:   89 c8                           	mov eax, ecx
0x8049dcb:   f7 ea                           	imul edx
0x8049dcd:   89 d0                           	mov eax, edx
0x8049dcf:   c1 f8 0c                        	sar eax, 0xc
0x8049dd2:   c1 f9 1f                        	sar ecx, 0x1f
0x8049dd5:   89 ca                           	mov edx, ecx
0x8049dd7:   29 c2                           	sub edx, eax
0x8049dd9:   89 d0                           	mov eax, edx
0x8049ddb:   f7 d8                           	neg eax
0x8049ddd:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049de0:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x8049de4:   0f 84 05 0b 00 00               	je 0x804a8ef <func_1+0xffa>
0x8049dea:   c6 85 19 ff ff ff f9            	mov byte ptr [ebp - 0xe7], 0xf9
0x8049df1:   c7 45 b0 d1 82 76 74            	mov dword ptr [ebp - 0x50], 0x747682d1
0x8049df8:   c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0x8049dff:   c7 45 a8 b2 c0 7b 73            	mov dword ptr [ebp - 0x58], 0x737bc0b2
0x8049e06:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x8049e0c:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049e0f:   80 bd 19 ff ff ff 00            	cmp byte ptr [ebp - 0xe7], 0
0x8049e16:   74 22                           	je 0x8049e3a <func_1+0x545>
0x8049e18:   66 c7 85 16 ff ff ff 01 00      	mov word ptr [ebp - 0xea], 1
0x8049e21:   c7 85 10 ff ff ff 01 e2 4c 0d   	mov dword ptr [ebp - 0xf0], 0xd4ce201
0x8049e2b:   0f bf 85 16 ff ff ff            	movsx eax, word ptr [ebp - 0xea]
0x8049e32:   89 85 10 ff ff ff               	mov dword ptr [ebp - 0xf0], eax
0x8049e38:   eb 07                           	jmp 0x8049e41 <func_1+0x54c>
0x8049e3a:   81 65 b8 b9 eb d6 d3            	and dword ptr [ebp - 0x48], 0xd3d6ebb9
0x8049e41:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x8049e45:   0f 94 c0                        	sete al
0x8049e48:   0f b6 c0                        	movzx eax, al
0x8049e4b:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049e4e:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049e51:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049e54:   b8 03 00 00 00                  	mov eax, 3
0x8049e59:   08 45 db                        	or byte ptr [ebp - 0x25], al
0x8049e5c:   80 7d db 2c                     	cmp byte ptr [ebp - 0x25], 0x2c
0x8049e60:   0f 94 c0                        	sete al
0x8049e63:   0f b6 c0                        	movzx eax, al
0x8049e66:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x8049e6a:   0f bf 55 e4                     	movsx edx, word ptr [ebp - 0x1c]
0x8049e6e:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x8049e74:   98                              	cwde 
0x8049e75:   89 c1                           	mov ecx, eax
0x8049e77:   d3 fa                           	sar edx, cl
0x8049e79:   89 d0                           	mov eax, edx
0x8049e7b:   85 c0                           	test eax, eax
0x8049e7d:   b8 00 00 00 00                  	mov eax, 0
0x8049e82:   09 45 b0                        	or dword ptr [ebp - 0x50], eax
0x8049e85:   c7 45 b0 8a 5b 00 00            	mov dword ptr [ebp - 0x50], 0x5b8a
0x8049e8c:   66 c7 45 d2 8a 5b               	mov word ptr [ebp - 0x2e], 0x5b8a
0x8049e92:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049e96:   0f be d0                        	movsx edx, al
0x8049e99:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x8049ea0:   8d 88 8c e8 3b 3d               	lea ecx, [eax + 0x3d3be88c]
0x8049ea6:   0f bf 85 74 ff ff ff            	movsx eax, word ptr [ebp - 0x8c]
0x8049ead:   39 c1                           	cmp ecx, eax
0x8049eaf:   0f 9f c0                        	setg al
0x8049eb2:   0f b6 c0                        	movzx eax, al
0x8049eb5:   29 c2                           	sub edx, eax
0x8049eb7:   89 d0                           	mov eax, edx
0x8049eb9:   0b 85 5c ff ff ff               	or eax, dword ptr [ebp - 0xa4]
0x8049ebf:   89 c2                           	mov edx, eax
0x8049ec1:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049ec4:   39 c2                           	cmp edx, eax
0x8049ec6:   0f 84 ce 09 00 00               	je 0x804a89a <func_1+0xfa5>
0x8049ecc:   c6 85 3b ff ff ff 00            	mov byte ptr [ebp - 0xc5], 0
0x8049ed3:   c7 85 34 ff ff ff f7 ff ff ff   	mov dword ptr [ebp - 0xcc], 0xfffffff7
0x8049edd:   c6 85 33 ff ff ff ff            	mov byte ptr [ebp - 0xcd], 0xff
0x8049ee4:   c7 85 2c ff ff ff 1b 1f d4 de   	mov dword ptr [ebp - 0xd4], 0xded41f1b
0x8049eee:   c7 85 28 ff ff ff 04 00 00 00   	mov dword ptr [ebp - 0xd8], 4
0x8049ef8:   66 c7 85 26 ff ff ff 8d 40      	mov word ptr [ebp - 0xda], 0x408d
0x8049f01:   c7 45 a4 f9 ed d4 ef            	mov dword ptr [ebp - 0x5c], 0xefd4edf9
0x8049f08:   c7 85 64 ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0x9c], 6
0x8049f12:   66 c7 85 24 ff ff ff 06 00      	mov word ptr [ebp - 0xdc], 6
0x8049f1b:   c7 45 f0 fd ff ff ff            	mov dword ptr [ebp - 0x10], 0xfffffffd
0x8049f22:   e9 c2 05 00 00                  	jmp 0x804a4e9 <func_1+0xbf4>
0x8049f27:   c7 85 20 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe0], 0
0x8049f31:   c7 85 1c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xe4], 0xffffffff
0x8049f3b:   80 bd 3b ff ff ff 00            	cmp byte ptr [ebp - 0xc5], 0
0x8049f42:   0f 84 16 01 00 00               	je 0x804a05e <func_1+0x769>
0x8049f48:   c7 85 f4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x10c], 0
0x8049f52:   c7 85 f0 fe ff ff 14 7d 5d 94   	mov dword ptr [ebp - 0x110], 0x945d7d14
0x8049f5c:   c7 45 b8 ff ff ff ff            	mov dword ptr [ebp - 0x48], 0xffffffff
0x8049f63:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x8049f67:   0f 95 c0                        	setne al
0x8049f6a:   0f b6 c0                        	movzx eax, al
0x8049f6d:   0f b6 d0                        	movzx edx, al
0x8049f70:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049f73:   0f b6 c0                        	movzx eax, al
0x8049f76:   0f af c2                        	imul eax, edx
0x8049f79:   89 c2                           	mov edx, eax
0x8049f7b:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049f7e:   01 d0                           	add eax, edx
0x8049f80:   2d ae ca 72 45                  	sub eax, 0x4572caae
0x8049f85:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x8049f8b:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x8049f91:   0f b6 8d 19 ff ff ff            	movzx ecx, byte ptr [ebp - 0xe7]
0x8049f98:   0f be 95 3b ff ff ff            	movsx edx, byte ptr [ebp - 0xc5]
0x8049f9f:   39 d1                           	cmp ecx, edx
0x8049fa1:   0f 94 c2                        	sete dl
0x8049fa4:   0f b6 d2                        	movzx edx, dl
0x8049fa7:   31 45 bc                        	xor dword ptr [ebp - 0x44], eax
0x8049faa:   0f bf 45 d2                     	movsx eax, word ptr [ebp - 0x2e]
0x8049fae:   39 45 bc                        	cmp dword ptr [ebp - 0x44], eax
0x8049fb1:   0f 95 c0                        	setne al
0x8049fb4:   0f b6 c0                        	movzx eax, al
0x8049fb7:   39 c2                           	cmp edx, eax
0x8049fb9:   0f 9f c0                        	setg al
0x8049fbc:   88 45 d1                        	mov byte ptr [ebp - 0x2f], al
0x8049fbf:   c7 45 d4 00 00 00 00            	mov dword ptr [ebp - 0x2c], 0
0x8049fc6:   e9 84 00 00 00                  	jmp 0x804a04f <func_1+0x75a>
0x8049fcb:   c7 85 ec fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x114], 0xffffffff
0x8049fd5:   83 6d cc 01                     	sub dword ptr [ebp - 0x34], 1
0x8049fd9:   0f b6 45 ed                     	movzx eax, byte ptr [ebp - 0x13]
0x8049fdd:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x8049fe3:   8b 85 f0 fe ff ff               	mov eax, dword ptr [ebp - 0x110]
0x8049fe9:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049fec:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049fef:   21 45 c4                        	and dword ptr [ebp - 0x3c], eax
0x8049ff2:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x8049ff6:   c0 e8 07                        	shr al, 7
0x8049ff9:   0f b6 d0                        	movzx edx, al
0x8049ffc:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x804a000:   39 c2                           	cmp edx, eax
0x804a002:   7d 07                           	jge 0x804a00b <func_1+0x716>
0x804a004:   b8 01 00 00 00                  	mov eax, 1
0x804a009:   eb 05                           	jmp 0x804a010 <func_1+0x71b>
0x804a00b:   b8 00 00 00 00                  	mov eax, 0
0x804a010:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x804a013:   0f 97 c0                        	seta al
0x804a016:   0f b6 c0                        	movzx eax, al
0x804a019:   0f b7 55 e4                     	movzx edx, word ptr [ebp - 0x1c]
0x804a01d:   0f be ca                        	movsx ecx, dl
0x804a020:   99                              	cdq 
0x804a021:   f7 f9                           	idiv ecx
0x804a023:   89 d0                           	mov eax, edx
0x804a025:   0f bf d0                        	movsx edx, ax
0x804a028:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x804a02e:   98                              	cwde 
0x804a02f:   29 c2                           	sub edx, eax
0x804a031:   89 d0                           	mov eax, edx
0x804a033:   89 85 2c ff ff ff               	mov dword ptr [ebp - 0xd4], eax
0x804a039:   c6 45 c3 01                     	mov byte ptr [ebp - 0x3d], 1
0x804a03d:   83 bd 20 ff ff ff 00            	cmp dword ptr [ebp - 0xe0], 0
0x804a044:   c7 45 b0 a9 2b 00 00            	mov dword ptr [ebp - 0x50], 0x2ba9
0x804a04b:   83 45 d4 01                     	add dword ptr [ebp - 0x2c], 1
0x804a04f:   83 7d d4 2b                     	cmp dword ptr [ebp - 0x2c], 0x2b
0x804a053:   0f 87 72 ff ff ff               	ja 0x8049fcb <func_1+0x6d6>
0x804a059:   e9 87 04 00 00                  	jmp 0x804a4e5 <func_1+0xbf0>
0x804a05e:   66 c7 85 1a ff ff ff 4e e2      	mov word ptr [ebp - 0xe6], 0xe24e
0x804a067:   c7 85 68 ff ff ff f4 b2 25 da   	mov dword ptr [ebp - 0x98], 0xda25b2f4
0x804a071:   c6 45 ed 01                     	mov byte ptr [ebp - 0x13], 1
0x804a075:   0f b6 95 19 ff ff ff            	movzx edx, byte ptr [ebp - 0xe7]
0x804a07c:   80 bd 19 ff ff ff 01            	cmp byte ptr [ebp - 0xe7], 1
0x804a083:   0f 96 c0                        	setbe al
0x804a086:   0f b6 c0                        	movzx eax, al
0x804a089:   39 c2                           	cmp edx, eax
0x804a08b:   7c 4f                           	jl 0x804a0dc <func_1+0x7e7>
0x804a08d:   c6 85 07 ff ff ff f4            	mov byte ptr [ebp - 0xf9], 0xf4
0x804a094:   c7 85 00 ff ff ff 67 2a bd 3d   	mov dword ptr [ebp - 0x100], 0x3dbd2a67
0x804a09e:   0f be 85 07 ff ff ff            	movsx eax, byte ptr [ebp - 0xf9]
0x804a0a5:   39 85 28 ff ff ff               	cmp dword ptr [ebp - 0xd8], eax
0x804a0ab:   0f 9f c0                        	setg al
0x804a0ae:   0f b6 c0                        	movzx eax, al
0x804a0b1:   0f bf d0                        	movsx edx, ax
0x804a0b4:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x804a0b8:   29 c2                           	sub edx, eax
0x804a0ba:   89 d0                           	mov eax, edx
0x804a0bc:   f7 d8                           	neg eax
0x804a0be:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x804a0c4:   0f be 85 3b ff ff ff            	movsx eax, byte ptr [ebp - 0xc5]
0x804a0cb:   09 85 00 ff ff ff               	or dword ptr [ebp - 0x100], eax
0x804a0d1:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x804a0d7:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a0da:   eb 6a                           	jmp 0x804a146 <func_1+0x851>
0x804a0dc:   c7 85 08 ff ff ff 4b 2d 73 7f   	mov dword ptr [ebp - 0xf8], 0x7f732d4b
0x804a0e6:   80 bd 33 ff ff ff 00            	cmp byte ptr [ebp - 0xcd], 0
0x804a0ed:   74 45                           	je 0x804a134 <func_1+0x83f>
0x804a0ef:   80 bd 3b ff ff ff 00            	cmp byte ptr [ebp - 0xc5], 0
0x804a0f6:   74 07                           	je 0x804a0ff <func_1+0x80a>
0x804a0f8:   b8 01 00 00 00                  	mov eax, 1
0x804a0fd:   eb 05                           	jmp 0x804a104 <func_1+0x80f>
0x804a0ff:   b8 00 00 00 00                  	mov eax, 0
0x804a104:   0f bf d0                        	movsx edx, ax
0x804a107:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a10a:   98                              	cwde 
0x804a10b:   89 c1                           	mov ecx, eax
0x804a10d:   d3 fa                           	sar edx, cl
0x804a10f:   89 d0                           	mov eax, edx
0x804a111:   85 c0                           	test eax, eax
0x804a113:   74 06                           	je 0x804a11b <func_1+0x826>
0x804a115:   80 7d 9d 00                     	cmp byte ptr [ebp - 0x63], 0
0x804a119:   75 07                           	jne 0x804a122 <func_1+0x82d>
0x804a11b:   b8 01 00 00 00                  	mov eax, 1
0x804a120:   eb 05                           	jmp 0x804a127 <func_1+0x832>
0x804a122:   b8 00 00 00 00                  	mov eax, 0
0x804a127:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x804a12d:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x804a134:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a138:   0f b6 c0                        	movzx eax, al
0x804a13b:   05 93 00 00 00                  	add eax, 0x93
0x804a140:   89 85 08 ff ff ff               	mov dword ptr [ebp - 0xf8], eax
0x804a146:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x804a14d:   eb 74                           	jmp 0x804a1c3 <func_1+0x8ce>
0x804a14f:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a152:   3b 45 90                        	cmp eax, dword ptr [ebp - 0x70]
0x804a155:   0f 9d c2                        	setge dl
0x804a158:   81 7d f0 d8 92 00 00            	cmp dword ptr [ebp - 0x10], 0x92d8
0x804a15f:   0f 94 c0                        	sete al
0x804a162:   31 d0                           	xor eax, edx
0x804a164:   0f b6 c0                        	movzx eax, al
0x804a167:   39 85 20 ff ff ff               	cmp dword ptr [ebp - 0xe0], eax
0x804a16d:   0f 95 c0                        	setne al
0x804a170:   0f b6 c0                        	movzx eax, al
0x804a173:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x804a179:   66 83 7d e6 00                  	cmp word ptr [ebp - 0x1a], 0
0x804a17e:   75 2a                           	jne 0x804a1aa <func_1+0x8b5>
0x804a180:   81 7d b8 f9 8e 90 5c            	cmp dword ptr [ebp - 0x48], 0x5c908ef9
0x804a187:   0f 9f c0                        	setg al
0x804a18a:   0f b6 c0                        	movzx eax, al
0x804a18d:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x804a193:   0f b7 b5 26 ff ff ff            	movzx esi, word ptr [ebp - 0xda]
0x804a19a:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x804a1a0:   99                              	cdq 
0x804a1a1:   f7 fe                           	idiv esi
0x804a1a3:   0b 45 e0                        	or eax, dword ptr [ebp - 0x20]
0x804a1a6:   85 c0                           	test eax, eax
0x804a1a8:   74 06                           	je 0x804a1b0 <func_1+0x8bb>
0x804a1aa:   80 7d c3 00                     	cmp byte ptr [ebp - 0x3d], 0
0x804a1ae:   75 07                           	jne 0x804a1b7 <func_1+0x8c2>
0x804a1b0:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x804a1b7:   90                              	nop 
0x804a1b8:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x804a1bf:   83 45 e0 04                     	add dword ptr [ebp - 0x20], 4
0x804a1c3:   83 7d e0 30                     	cmp dword ptr [ebp - 0x20], 0x30
0x804a1c7:   75 86                           	jne 0x804a14f <func_1+0x85a>
0x804a1c9:   c7 45 b0 00 00 00 00            	mov dword ptr [ebp - 0x50], 0
0x804a1d0:   83 7d b0 fa                     	cmp dword ptr [ebp - 0x50], -6
0x804a1d4:   0f 8c 68 01 00 00               	jl 0x804a342 <func_1+0xa4d>
0x804a1da:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a1dd:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x804a1e3:   0f b6 45 c2                     	movzx eax, byte ptr [ebp - 0x3e]
0x804a1e7:   89 85 b0 fe ff ff               	mov dword ptr [ebp - 0x150], eax
0x804a1ed:   0f bf 85 42 ff ff ff            	movsx eax, word ptr [ebp - 0xbe]
0x804a1f4:   89 85 ac fe ff ff               	mov dword ptr [ebp - 0x154], eax
0x804a1fa:   0f b7 85 6e ff ff ff            	movzx eax, word ptr [ebp - 0x92]
0x804a201:   89 85 a8 fe ff ff               	mov dword ptr [ebp - 0x158], eax
0x804a207:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x804a20b:   89 85 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], eax
0x804a211:   0f be 45 d1                     	movsx eax, byte ptr [ebp - 0x2f]
0x804a215:   89 85 a0 fe ff ff               	mov dword ptr [ebp - 0x160], eax
0x804a21b:   0f bf 45 d2                     	movsx eax, word ptr [ebp - 0x2e]
0x804a21f:   89 85 9c fe ff ff               	mov dword ptr [ebp - 0x164], eax
0x804a225:   0f bf 85 74 ff ff ff            	movsx eax, word ptr [ebp - 0x8c]
0x804a22c:   89 85 98 fe ff ff               	mov dword ptr [ebp - 0x168], eax
0x804a232:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x804a239:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x804a23f:   0f bf 95 7e ff ff ff            	movsx edx, word ptr [ebp - 0x82]
0x804a246:   89 95 90 fe ff ff               	mov dword ptr [ebp - 0x170], edx
0x804a24c:   0f bf 55 8a                     	movsx edx, word ptr [ebp - 0x76]
0x804a250:   0f be 4d db                     	movsx ecx, byte ptr [ebp - 0x25]
0x804a254:   89 8d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ecx
0x804a25a:   0f b6 4d 97                     	movzx ecx, byte ptr [ebp - 0x69]
0x804a25e:   0f be 5d 9d                     	movsx ebx, byte ptr [ebp - 0x63]
0x804a262:   89 9d 88 fe ff ff               	mov dword ptr [ebp - 0x178], ebx
0x804a268:   0f b7 5d 9e                     	movzx ebx, word ptr [ebp - 0x62]
0x804a26c:   0f bf 75 a0                     	movsx esi, word ptr [ebp - 0x60]
0x804a270:   89 b5 84 fe ff ff               	mov dword ptr [ebp - 0x17c], esi
0x804a276:   0f be 75 a3                     	movsx esi, byte ptr [ebp - 0x5d]
0x804a27a:   0f bf 7d e4                     	movsx edi, word ptr [ebp - 0x1c]
0x804a27e:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a284:   0f b7 7d e6                     	movzx edi, word ptr [ebp - 0x1a]
0x804a288:   0f b6 45 ed                     	movzx eax, byte ptr [ebp - 0x13]
0x804a28c:   89 85 7c fe ff ff               	mov dword ptr [ebp - 0x184], eax
0x804a292:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x804a296:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a29c:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a2a2:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a2a8:   ff b5 44 ff ff ff               	push dword ptr [ebp - 0xbc]
0x804a2ae:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a2b4:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a2ba:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a2bd:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a2c0:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a2c3:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a2c9:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x804a2cf:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a2d5:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a2db:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a2e1:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a2e7:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a2ed:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a2f0:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a2f3:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a2f6:   52                              	push edx
0x804a2f7:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a2fd:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a300:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a303:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a306:   51                              	push ecx
0x804a307:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a30a:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a310:   53                              	push ebx
0x804a311:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a314:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a31a:   56                              	push esi
0x804a31b:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a321:   57                              	push edi
0x804a322:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a325:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a32b:   50                              	push eax
0x804a32c:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a32f:   e8 f2 f2 ff ff                  	call 0x8049626 <set_var>
0x804a334:   81 c4 94 00 00 00               	add esp, 0x94
0x804a33a:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a33d:   e9 35 07 00 00                  	jmp 0x804aa77 <func_1+0x1182>
0x804a342:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x804a346:   74 39                           	je 0x804a381 <func_1+0xa8c>
0x804a348:   c7 85 f8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x108], 0
0x804a352:   83 bd 20 ff ff ff 00            	cmp dword ptr [ebp - 0xe0], 0
0x804a359:   0f 85 96 01 00 00               	jne 0x804a4f5 <func_1+0xc00>
0x804a35f:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a362:   88 45 db                        	mov byte ptr [ebp - 0x25], al
0x804a365:   b8 00 00 00 00                  	mov eax, 0
0x804a36a:   09 85 70 ff ff ff               	or dword ptr [ebp - 0x90], eax
0x804a370:   66 83 85 6e ff ff ff 01         	add word ptr [ebp - 0x92], 1
0x804a378:   80 6d c2 01                     	sub byte ptr [ebp - 0x3e], 1
0x804a37c:   e9 64 01 00 00                  	jmp 0x804a4e5 <func_1+0xbf0>
0x804a381:   c7 85 fc fe ff ff 40 73 c1 52   	mov dword ptr [ebp - 0x104], 0x52c17340
0x804a38b:   83 4d e0 fb                     	or dword ptr [ebp - 0x20], 0xfffffffb
0x804a38f:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a392:   89 85 fc fe ff ff               	mov dword ptr [ebp - 0x104], eax
0x804a398:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a39e:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x804a3a4:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x804a3ab:   0f 94 c0                        	sete al
0x804a3ae:   0f b6 d0                        	movzx edx, al
0x804a3b1:   0f b7 85 42 ff ff ff            	movzx eax, word ptr [ebp - 0xbe]
0x804a3b8:   0f b7 c0                        	movzx eax, ax
0x804a3bb:   89 c1                           	mov ecx, eax
0x804a3bd:   d3 fa                           	sar edx, cl
0x804a3bf:   89 d0                           	mov eax, edx
0x804a3c1:   3d f5 00 00 00                  	cmp eax, 0xf5
0x804a3c6:   0f 97 c0                        	seta al
0x804a3c9:   0f b6 c0                        	movzx eax, al
0x804a3cc:   0f bf 7d e4                     	movsx edi, word ptr [ebp - 0x1c]
0x804a3d0:   99                              	cdq 
0x804a3d1:   f7 ff                           	idiv edi
0x804a3d3:   0f b7 c0                        	movzx eax, ax
0x804a3d6:   8d 14 c5 00 00 00 00            	lea edx, [eax*8]
0x804a3dd:   0f b7 85 5a ff ff ff            	movzx eax, word ptr [ebp - 0xa6]
0x804a3e4:   39 c2                           	cmp edx, eax
0x804a3e6:   c7 85 64 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x9c], 0xffffffff
0x804a3f0:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a3f6:   0f be d0                        	movsx edx, al
0x804a3f9:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a3fc:   0f be c0                        	movsx eax, al
0x804a3ff:   01 d0                           	add eax, edx
0x804a401:   85 c0                           	test eax, eax
0x804a403:   74 07                           	je 0x804a40c <func_1+0xb17>
0x804a405:   b8 01 00 00 00                  	mov eax, 1
0x804a40a:   eb 05                           	jmp 0x804a411 <func_1+0xb1c>
0x804a40c:   b8 00 00 00 00                  	mov eax, 0
0x804a411:   8d 50 01                        	lea edx, [eax + 1]
0x804a414:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x804a41b:   09 d0                           	or eax, edx
0x804a41d:   85 c0                           	test eax, eax
0x804a41f:   75 06                           	jne 0x804a427 <func_1+0xb32>
0x804a421:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x804a425:   74 07                           	je 0x804a42e <func_1+0xb39>
0x804a427:   b8 01 00 00 00                  	mov eax, 1
0x804a42c:   eb 05                           	jmp 0x804a433 <func_1+0xb3e>
0x804a42e:   b8 00 00 00 00                  	mov eax, 0
0x804a433:   89 85 1c ff ff ff               	mov dword ptr [ebp - 0xe4], eax
0x804a439:   c7 85 1c ff ff ff 0c 00 00 00   	mov dword ptr [ebp - 0xe4], 0xc
0x804a443:   0f be 45 9d                     	movsx eax, byte ptr [ebp - 0x63]
0x804a447:   83 e8 0a                        	sub eax, 0xa
0x804a44a:   31 45 b0                        	xor dword ptr [ebp - 0x50], eax
0x804a44d:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a450:   66 05 55 1e                     	add ax, 0x1e55
0x804a454:   0f b7 c0                        	movzx eax, ax
0x804a457:   05 ff ff 00 00                  	add eax, 0xffff
0x804a45c:   39 85 64 ff ff ff               	cmp dword ptr [ebp - 0x9c], eax
0x804a462:   0f 9e c0                        	setle al
0x804a465:   0f b6 d0                        	movzx edx, al
0x804a468:   0f bf 45 e4                     	movsx eax, word ptr [ebp - 0x1c]
0x804a46c:   39 c2                           	cmp edx, eax
0x804a46e:   0f 9f c0                        	setg al
0x804a471:   0f b6 d0                        	movzx edx, al
0x804a474:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x804a478:   39 c2                           	cmp edx, eax
0x804a47a:   0f 94 c0                        	sete al
0x804a47d:   0f b6 c8                        	movzx ecx, al
0x804a480:   0f b7 85 42 ff ff ff            	movzx eax, word ptr [ebp - 0xbe]
0x804a487:   0f be d0                        	movsx edx, al
0x804a48a:   89 d0                           	mov eax, edx
0x804a48c:   c1 e0 03                        	shl eax, 3
0x804a48f:   29 d0                           	sub eax, edx
0x804a491:   85 c0                           	test eax, eax
0x804a493:   0f 94 c0                        	sete al
0x804a496:   0f b6 d0                        	movzx edx, al
0x804a499:   31 4d b8                        	xor dword ptr [ebp - 0x48], ecx
0x804a49c:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a49f:   0b 85 64 ff ff ff               	or eax, dword ptr [ebp - 0x9c]
0x804a4a5:   21 d0                           	and eax, edx
0x804a4a7:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x804a4ad:   7c 0d                           	jl 0x804a4bc <func_1+0xbc7>
0x804a4af:   80 7d c3 00                     	cmp byte ptr [ebp - 0x3d], 0
0x804a4b3:   74 07                           	je 0x804a4bc <func_1+0xbc7>
0x804a4b5:   b8 01 00 00 00                  	mov eax, 1
0x804a4ba:   eb 05                           	jmp 0x804a4c1 <func_1+0xbcc>
0x804a4bc:   b8 00 00 00 00                  	mov eax, 0
0x804a4c1:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x804a4c7:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x804a4cd:   3b 85 fc fe ff ff               	cmp eax, dword ptr [ebp - 0x104]
0x804a4d3:   0f 94 c0                        	sete al
0x804a4d6:   0f b6 d0                        	movzx edx, al
0x804a4d9:   0f b7 85 6e ff ff ff            	movzx eax, word ptr [ebp - 0x92]
0x804a4e0:   21 d0                           	and eax, edx
0x804a4e2:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804a4e5:   83 45 f0 01                     	add dword ptr [ebp - 0x10], 1
0x804a4e9:   83 7d f0 12                     	cmp dword ptr [ebp - 0x10], 0x12
0x804a4ed:   0f 8e 34 fa ff ff               	jle 0x8049f27 <func_1+0x632>
0x804a4f3:   eb 01                           	jmp 0x804a4f6 <func_1+0xc01>
0x804a4f5:   90                              	nop 
0x804a4f6:   c7 85 64 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x9c], 0
0x804a500:   eb 65                           	jmp 0x804a567 <func_1+0xc72>
0x804a502:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x804a508:   89 c2                           	mov edx, eax
0x804a50a:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x804a50e:   0f 95 c0                        	setne al
0x804a511:   89 c1                           	mov ecx, eax
0x804a513:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a516:   01 c8                           	add eax, ecx
0x804a518:   01 d0                           	add eax, edx
0x804a51a:   f7 d0                           	not eax
0x804a51c:   89 c2                           	mov edx, eax
0x804a51e:   b9 eb ff ff ff                  	mov ecx, 0xffffffeb
0x804a523:   89 c8                           	mov eax, ecx
0x804a525:   f6 ea                           	imul dl
0x804a527:   66 c1 e8 08                     	shr ax, 8
0x804a52b:   01 d0                           	add eax, edx
0x804a52d:   c0 f8 05                        	sar al, 5
0x804a530:   89 c1                           	mov ecx, eax
0x804a532:   89 d0                           	mov eax, edx
0x804a534:   c0 f8 07                        	sar al, 7
0x804a537:   29 c1                           	sub ecx, eax
0x804a539:   89 c8                           	mov eax, ecx
0x804a53b:   0f b6 d0                        	movzx edx, al
0x804a53e:   0f b7 85 24 ff ff ff            	movzx eax, word ptr [ebp - 0xdc]
0x804a545:   0f b6 c0                        	movzx eax, al
0x804a548:   29 c2                           	sub edx, eax
0x804a54a:   89 d0                           	mov eax, edx
0x804a54c:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x804a54f:   74 07                           	je 0x804a558 <func_1+0xc63>
0x804a551:   b8 79 00 00 00                  	mov eax, 0x79
0x804a556:   eb 05                           	jmp 0x804a55d <func_1+0xc68>
0x804a558:   b8 00 00 00 00                  	mov eax, 0
0x804a55d:   31 45 a8                        	xor dword ptr [ebp - 0x58], eax
0x804a560:   83 85 64 ff ff ff 01            	add dword ptr [ebp - 0x9c], 1
0x804a567:   83 bd 64 ff ff ff 08            	cmp dword ptr [ebp - 0x9c], 8
0x804a56e:   75 92                           	jne 0x804a502 <func_1+0xc0d>
0x804a570:   c6 45 d1 00                     	mov byte ptr [ebp - 0x2f], 0
0x804a574:   e9 f1 02 00 00                  	jmp 0x804a86a <func_1+0xf75>
0x804a579:   66 c7 85 ea fe ff ff ff ff      	mov word ptr [ebp - 0x116], 0xffff
0x804a582:   83 4d a8 34                     	or dword ptr [ebp - 0x58], 0x34
0x804a586:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a589:   98                              	cwde 
0x804a58a:   0f b7 95 ea fe ff ff            	movzx edx, word ptr [ebp - 0x116]
0x804a591:   0f bf da                        	movsx ebx, dx
0x804a594:   99                              	cdq 
0x804a595:   f7 fb                           	idiv ebx
0x804a597:   89 c2                           	mov edx, eax
0x804a599:   0f bf 85 7e ff ff ff            	movsx eax, word ptr [ebp - 0x82]
0x804a5a0:   89 d1                           	mov ecx, edx
0x804a5a2:   31 c1                           	xor ecx, eax
0x804a5a4:   ba b1 36 11 15                  	mov edx, 0x151136b1
0x804a5a9:   89 c8                           	mov eax, ecx
0x804a5ab:   f7 ea                           	imul edx
0x804a5ad:   c1 fa 1b                        	sar edx, 0x1b
0x804a5b0:   89 c8                           	mov eax, ecx
0x804a5b2:   c1 f8 1f                        	sar eax, 0x1f
0x804a5b5:   29 c2                           	sub edx, eax
0x804a5b7:   89 d0                           	mov eax, edx
0x804a5b9:   69 c0 11 69 36 61               	imul eax, eax, 0x61366911
0x804a5bf:   29 c1                           	sub ecx, eax
0x804a5c1:   89 c8                           	mov eax, ecx
0x804a5c3:   83 f8 fc                        	cmp eax, -4
0x804a5c6:   81 7d b0 fe 00 00 00            	cmp dword ptr [ebp - 0x50], 0xfe
0x804a5cd:   0f 84 ee 01 00 00               	je 0x804a7c1 <func_1+0xecc>
0x804a5d3:   66 83 bd 24 ff ff ff 00         	cmp word ptr [ebp - 0xdc], 0
0x804a5db:   75 52                           	jne 0x804a62f <func_1+0xd3a>
0x804a5dd:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x804a5e1:   74 06                           	je 0x804a5e9 <func_1+0xcf4>
0x804a5e3:   80 4d c3 b6                     	or byte ptr [ebp - 0x3d], 0xb6
0x804a5e7:   eb 46                           	jmp 0x804a62f <func_1+0xd3a>
0x804a5e9:   83 7d a4 2b                     	cmp dword ptr [ebp - 0x5c], 0x2b
0x804a5ed:   7f 09                           	jg 0x804a5f8 <func_1+0xd03>
0x804a5ef:   80 bd 19 ff ff ff 00            	cmp byte ptr [ebp - 0xe7], 0
0x804a5f6:   74 07                           	je 0x804a5ff <func_1+0xd0a>
0x804a5f8:   b8 01 00 00 00                  	mov eax, 1
0x804a5fd:   eb 05                           	jmp 0x804a604 <func_1+0xd0f>
0x804a5ff:   b8 00 00 00 00                  	mov eax, 0
0x804a604:   3b 45 8c                        	cmp eax, dword ptr [ebp - 0x74]
0x804a607:   74 11                           	je 0x804a61a <func_1+0xd25>
0x804a609:   66 83 bd ea fe ff ff 00         	cmp word ptr [ebp - 0x116], 0
0x804a611:   74 07                           	je 0x804a61a <func_1+0xd25>
0x804a613:   b8 01 00 00 00                  	mov eax, 1
0x804a618:   eb 05                           	jmp 0x804a61f <func_1+0xd2a>
0x804a61a:   b8 00 00 00 00                  	mov eax, 0
0x804a61f:   3d 75 6b 00 00                  	cmp eax, 0x6b75
0x804a624:   0f 9f c0                        	setg al
0x804a627:   0f b6 c0                        	movzx eax, al
0x804a62a:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804a62d:   7d 07                           	jge 0x804a636 <func_1+0xd41>
0x804a62f:   b9 01 00 00 00                  	mov ecx, 1
0x804a634:   eb 05                           	jmp 0x804a63b <func_1+0xd46>
0x804a636:   b9 00 00 00 00                  	mov ecx, 0
0x804a63b:   ba 7b 31 ba 04                  	mov edx, 0x4ba317b
0x804a640:   89 c8                           	mov eax, ecx
0x804a642:   f7 ea                           	imul edx
0x804a644:   89 d0                           	mov eax, edx
0x804a646:   c1 f8 19                        	sar eax, 0x19
0x804a649:   c1 f9 1f                        	sar ecx, 0x1f
0x804a64c:   89 ca                           	mov edx, ecx
0x804a64e:   29 c2                           	sub edx, eax
0x804a650:   0f be 45 d1                     	movsx eax, byte ptr [ebp - 0x2f]
0x804a654:   39 c2                           	cmp edx, eax
0x804a656:   0f 84 5f 01 00 00               	je 0x804a7bb <func_1+0xec6>
0x804a65c:   0f b6 45 c2                     	movzx eax, byte ptr [ebp - 0x3e]
0x804a660:   89 85 b0 fe ff ff               	mov dword ptr [ebp - 0x150], eax
0x804a666:   0f bf 85 42 ff ff ff            	movsx eax, word ptr [ebp - 0xbe]
0x804a66d:   89 85 ac fe ff ff               	mov dword ptr [ebp - 0x154], eax
0x804a673:   0f b7 85 6e ff ff ff            	movzx eax, word ptr [ebp - 0x92]
0x804a67a:   89 85 a8 fe ff ff               	mov dword ptr [ebp - 0x158], eax
0x804a680:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x804a684:   89 85 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], eax
0x804a68a:   0f be 45 d1                     	movsx eax, byte ptr [ebp - 0x2f]
0x804a68e:   89 85 a0 fe ff ff               	mov dword ptr [ebp - 0x160], eax
0x804a694:   0f bf 45 d2                     	movsx eax, word ptr [ebp - 0x2e]
0x804a698:   89 85 9c fe ff ff               	mov dword ptr [ebp - 0x164], eax
0x804a69e:   0f bf 85 74 ff ff ff            	movsx eax, word ptr [ebp - 0x8c]
0x804a6a5:   89 85 98 fe ff ff               	mov dword ptr [ebp - 0x168], eax
0x804a6ab:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x804a6b2:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x804a6b8:   0f bf 95 7e ff ff ff            	movsx edx, word ptr [ebp - 0x82]
0x804a6bf:   89 95 90 fe ff ff               	mov dword ptr [ebp - 0x170], edx
0x804a6c5:   0f bf 55 8a                     	movsx edx, word ptr [ebp - 0x76]
0x804a6c9:   0f be 4d db                     	movsx ecx, byte ptr [ebp - 0x25]
0x804a6cd:   89 8d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ecx
0x804a6d3:   0f b6 4d 97                     	movzx ecx, byte ptr [ebp - 0x69]
0x804a6d7:   0f be 5d 9d                     	movsx ebx, byte ptr [ebp - 0x63]
0x804a6db:   89 9d 88 fe ff ff               	mov dword ptr [ebp - 0x178], ebx
0x804a6e1:   0f b7 5d 9e                     	movzx ebx, word ptr [ebp - 0x62]
0x804a6e5:   0f bf 75 a0                     	movsx esi, word ptr [ebp - 0x60]
0x804a6e9:   89 b5 84 fe ff ff               	mov dword ptr [ebp - 0x17c], esi
0x804a6ef:   0f be 75 a3                     	movsx esi, byte ptr [ebp - 0x5d]
0x804a6f3:   0f bf 7d e4                     	movsx edi, word ptr [ebp - 0x1c]
0x804a6f7:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a6fd:   0f b7 7d e6                     	movzx edi, word ptr [ebp - 0x1a]
0x804a701:   0f b6 45 ed                     	movzx eax, byte ptr [ebp - 0x13]
0x804a705:   89 85 7c fe ff ff               	mov dword ptr [ebp - 0x184], eax
0x804a70b:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x804a70f:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a715:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a71b:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a721:   ff b5 44 ff ff ff               	push dword ptr [ebp - 0xbc]
0x804a727:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a72d:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a733:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a736:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a739:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a73c:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a742:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x804a748:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a74e:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a754:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a75a:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a760:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a766:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a769:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a76c:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a76f:   52                              	push edx
0x804a770:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a776:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a779:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a77c:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a77f:   51                              	push ecx
0x804a780:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a783:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a789:   53                              	push ebx
0x804a78a:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a78d:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a793:   56                              	push esi
0x804a794:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a79a:   57                              	push edi
0x804a79b:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a79e:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a7a4:   50                              	push eax
0x804a7a5:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a7a8:   e8 79 ee ff ff                  	call 0x8049626 <set_var>
0x804a7ad:   81 c4 94 00 00 00               	add esp, 0x94
0x804a7b3:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a7b6:   e9 bc 02 00 00                  	jmp 0x804aa77 <func_1+0x1182>
0x804a7bb:   83 6d b4 01                     	sub dword ptr [ebp - 0x4c], 1
0x804a7bf:   eb 0a                           	jmp 0x804a7cb <func_1+0xed6>
0x804a7c1:   c7 85 70 ff ff ff 4e 6d 22 86   	mov dword ptr [ebp - 0x90], 0x86226d4e
0x804a7cb:   66 83 7d 9e 00                  	cmp word ptr [ebp - 0x62], 0
0x804a7d0:   0f 85 a0 00 00 00               	jne 0x804a876 <func_1+0xf81>
0x804a7d6:   0f b7 4d 9e                     	movzx ecx, word ptr [ebp - 0x62]
0x804a7da:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a7dd:   21 45 ac                        	and dword ptr [ebp - 0x54], eax
0x804a7e0:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a7e3:   0f b7 5d e6                     	movzx ebx, word ptr [ebp - 0x1a]
0x804a7e7:   ba 00 00 00 00                  	mov edx, 0
0x804a7ec:   f7 f3                           	div ebx
0x804a7ee:   89 d0                           	mov eax, edx
0x804a7f0:   98                              	cwde 
0x804a7f1:   69 c0 70 8f ff ff               	imul eax, eax, 0xffff8f70
0x804a7f7:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x804a7fd:   0f bf 85 42 ff ff ff            	movsx eax, word ptr [ebp - 0xbe]
0x804a804:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x804a80a:   0f 95 c0                        	setne al
0x804a80d:   0f b6 c0                        	movzx eax, al
0x804a810:   89 c2                           	mov edx, eax
0x804a812:   89 d0                           	mov eax, edx
0x804a814:   c1 e0 03                        	shl eax, 3
0x804a817:   29 d0                           	sub eax, edx
0x804a819:   0f b6 55 d1                     	movzx edx, byte ptr [ebp - 0x2f]
0x804a81d:   0f b6 c0                        	movzx eax, al
0x804a820:   f6 f2                           	div dl
0x804a822:   84 c0                           	test al, al
0x804a824:   74 0d                           	je 0x804a833 <func_1+0xf3e>
0x804a826:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x804a82a:   74 07                           	je 0x804a833 <func_1+0xf3e>
0x804a82c:   b8 01 00 00 00                  	mov eax, 1
0x804a831:   eb 05                           	jmp 0x804a838 <func_1+0xf43>
0x804a833:   b8 00 00 00 00                  	mov eax, 0
0x804a838:   39 c8                           	cmp eax, ecx
0x804a83a:   0f 94 c0                        	sete al
0x804a83d:   0f b6 d0                        	movzx edx, al
0x804a840:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a843:   0f b6 c0                        	movzx eax, al
0x804a846:   0f af c2                        	imul eax, edx
0x804a849:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a84c:   0f b6 45 97                     	movzx eax, byte ptr [ebp - 0x69]
0x804a850:   83 45 e0 01                     	add dword ptr [ebp - 0x20], 1
0x804a854:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a857:   0f 95 c0                        	setne al
0x804a85a:   0f b6 c0                        	movzx eax, al
0x804a85d:   21 45 bc                        	and dword ptr [ebp - 0x44], eax
0x804a860:   0f b6 45 d1                     	movzx eax, byte ptr [ebp - 0x2f]
0x804a864:   83 c0 09                        	add eax, 9
0x804a867:   88 45 d1                        	mov byte ptr [ebp - 0x2f], al
0x804a86a:   80 7d d1 00                     	cmp byte ptr [ebp - 0x2f], 0
0x804a86e:   0f 85 05 fd ff ff               	jne 0x804a579 <func_1+0xc84>
0x804a874:   eb 01                           	jmp 0x804a877 <func_1+0xf82>
0x804a876:   90                              	nop 
0x804a877:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x804a87b:   75 09                           	jne 0x804a886 <func_1+0xf91>
0x804a87d:   83 bd 54 ff ff ff 00            	cmp dword ptr [ebp - 0xac], 0
0x804a884:   74 07                           	je 0x804a88d <func_1+0xf98>
0x804a886:   b8 01 00 00 00                  	mov eax, 1
0x804a88b:   eb 05                           	jmp 0x804a892 <func_1+0xf9d>
0x804a88d:   b8 00 00 00 00                  	mov eax, 0
0x804a892:   09 45 f0                        	or dword ptr [ebp - 0x10], eax
0x804a895:   e9 82 00 00 00                  	jmp 0x804a91c <func_1+0x1027>
0x804a89a:   c6 85 0f ff ff ff 03            	mov byte ptr [ebp - 0xf1], 3
0x804a8a1:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a8a5:   88 85 0f ff ff ff               	mov byte ptr [ebp - 0xf1], al
0x804a8ab:   0f b6 85 0f ff ff ff            	movzx eax, byte ptr [ebp - 0xf1]
0x804a8b2:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a8b5:   0f be 45 d1                     	movsx eax, byte ptr [ebp - 0x2f]
0x804a8b9:   39 85 60 ff ff ff               	cmp dword ptr [ebp - 0xa0], eax
0x804a8bf:   0f 9d c0                        	setge al
0x804a8c2:   0f b6 d0                        	movzx edx, al
0x804a8c5:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a8c8:   0f b6 c8                        	movzx ecx, al
0x804a8cb:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a8ce:   0f b6 c0                        	movzx eax, al
0x804a8d1:   0f af c1                        	imul eax, ecx
0x804a8d4:   0f b7 c0                        	movzx eax, ax
0x804a8d7:   01 d0                           	add eax, edx
0x804a8d9:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a8dc:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a8df:   0f bf d0                        	movsx edx, ax
0x804a8e2:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a8e5:   98                              	cwde 
0x804a8e6:   29 c2                           	sub edx, eax
0x804a8e8:   89 d0                           	mov eax, edx
0x804a8ea:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a8ed:   eb 2d                           	jmp 0x804a91c <func_1+0x1027>
0x804a8ef:   c6 85 53 ff ff ff a1            	mov byte ptr [ebp - 0xad], 0xa1
0x804a8f6:   c7 85 4c ff ff ff b8 21 39 3b   	mov dword ptr [ebp - 0xb4], 0x3b3921b8
0x804a900:   0f be 95 53 ff ff ff            	movsx edx, byte ptr [ebp - 0xad]
0x804a907:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x804a90b:   0f 95 c0                        	setne al
0x804a90e:   0f b6 c0                        	movzx eax, al
0x804a911:   39 c2                           	cmp edx, eax
0x804a913:   0f 9d c0                        	setge al
0x804a916:   0f b6 c0                        	movzx eax, al
0x804a919:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a91c:   0f b6 45 c2                     	movzx eax, byte ptr [ebp - 0x3e]
0x804a920:   89 85 b0 fe ff ff               	mov dword ptr [ebp - 0x150], eax
0x804a926:   0f bf 85 42 ff ff ff            	movsx eax, word ptr [ebp - 0xbe]
0x804a92d:   89 85 ac fe ff ff               	mov dword ptr [ebp - 0x154], eax
0x804a933:   0f b7 85 6e ff ff ff            	movzx eax, word ptr [ebp - 0x92]
0x804a93a:   89 85 a8 fe ff ff               	mov dword ptr [ebp - 0x158], eax
0x804a940:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x804a944:   89 85 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], eax
0x804a94a:   0f be 45 d1                     	movsx eax, byte ptr [ebp - 0x2f]
0x804a94e:   89 85 a0 fe ff ff               	mov dword ptr [ebp - 0x160], eax
0x804a954:   0f bf 45 d2                     	movsx eax, word ptr [ebp - 0x2e]
0x804a958:   89 85 9c fe ff ff               	mov dword ptr [ebp - 0x164], eax
0x804a95e:   0f bf 85 74 ff ff ff            	movsx eax, word ptr [ebp - 0x8c]
0x804a965:   89 85 98 fe ff ff               	mov dword ptr [ebp - 0x168], eax
0x804a96b:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x804a972:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x804a978:   0f bf 95 7e ff ff ff            	movsx edx, word ptr [ebp - 0x82]
0x804a97f:   89 95 90 fe ff ff               	mov dword ptr [ebp - 0x170], edx
0x804a985:   0f bf 55 8a                     	movsx edx, word ptr [ebp - 0x76]
0x804a989:   0f be 4d db                     	movsx ecx, byte ptr [ebp - 0x25]
0x804a98d:   89 8d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ecx
0x804a993:   0f b6 4d 97                     	movzx ecx, byte ptr [ebp - 0x69]
0x804a997:   0f be 5d 9d                     	movsx ebx, byte ptr [ebp - 0x63]
0x804a99b:   89 9d 88 fe ff ff               	mov dword ptr [ebp - 0x178], ebx
0x804a9a1:   0f b7 5d 9e                     	movzx ebx, word ptr [ebp - 0x62]
0x804a9a5:   0f bf 75 a0                     	movsx esi, word ptr [ebp - 0x60]
0x804a9a9:   89 b5 84 fe ff ff               	mov dword ptr [ebp - 0x17c], esi
0x804a9af:   0f be 75 a3                     	movsx esi, byte ptr [ebp - 0x5d]
0x804a9b3:   0f bf 7d e4                     	movsx edi, word ptr [ebp - 0x1c]
0x804a9b7:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a9bd:   0f b7 7d e6                     	movzx edi, word ptr [ebp - 0x1a]
0x804a9c1:   0f b6 45 ed                     	movzx eax, byte ptr [ebp - 0x13]
0x804a9c5:   89 85 7c fe ff ff               	mov dword ptr [ebp - 0x184], eax
0x804a9cb:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x804a9cf:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a9d5:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a9db:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a9e1:   ff b5 44 ff ff ff               	push dword ptr [ebp - 0xbc]
0x804a9e7:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a9ed:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a9f3:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a9f6:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a9f9:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a9fc:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804aa02:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x804aa08:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804aa0e:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804aa14:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804aa1a:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804aa20:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804aa26:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804aa29:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804aa2c:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804aa2f:   52                              	push edx
0x804aa30:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804aa36:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804aa39:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804aa3c:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804aa3f:   51                              	push ecx
0x804aa40:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804aa43:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804aa49:   53                              	push ebx
0x804aa4a:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804aa4d:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804aa53:   56                              	push esi
0x804aa54:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804aa5a:   57                              	push edi
0x804aa5b:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804aa5e:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804aa64:   50                              	push eax
0x804aa65:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804aa68:   e8 b9 eb ff ff                  	call 0x8049626 <set_var>
0x804aa6d:   81 c4 94 00 00 00               	add esp, 0x94
0x804aa73:   0f be 45 d1                     	movsx eax, byte ptr [ebp - 0x2f]
0x804aa77:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804aa7a:   5b                              	pop ebx
0x804aa7b:   5e                              	pop esi
0x804aa7c:   5f                              	pop edi
0x804aa7d:   5d                              	pop ebp
0x804aa7e:   c3                              	ret 
; function: main at 0x804aa7f -- 0x804af63
0x804aa7f:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804aa83:   83 e4 f0                        	and esp, 0xfffffff0
0x804aa86:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804aa89:   55                              	push ebp
0x804aa8a:   89 e5                           	mov ebp, esp
0x804aa8c:   53                              	push ebx
0x804aa8d:   51                              	push ecx
0x804aa8e:   83 ec 10                        	sub esp, 0x10
0x804aa91:   e8 fa d8 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aa96:   81 c3 6a 35 00 00               	add ebx, 0x356a
0x804aa9c:   89 c8                           	mov eax, ecx
0x804aa9e:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804aaa5:   83 38 02                        	cmp dword ptr [eax], 2
0x804aaa8:   75 26                           	jne 0x804aad0 <main+0x51>
0x804aaaa:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804aaad:   83 c0 04                        	add eax, 4
0x804aab0:   8b 00                           	mov eax, dword ptr [eax]
0x804aab2:   83 ec 08                        	sub esp, 8
0x804aab5:   8d 93 48 d0 ff ff               	lea edx, [ebx - 0x2fb8]
0x804aabb:   52                              	push edx
0x804aabc:   50                              	push eax
0x804aabd:   e8 3e d8 ff ff                  	call 0x8048300 <strcmp>
0x804aac2:   83 c4 10                        	add esp, 0x10
0x804aac5:   85 c0                           	test eax, eax
0x804aac7:   75 07                           	jne 0x804aad0 <main+0x51>
0x804aac9:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804aad0:   e8 81 d9 ff ff                  	call 0x8048456 <platform_main_begin>
0x804aad5:   e8 91 e9 ff ff                  	call 0x804946b <crc32_gentab>
0x804aada:   e8 16 ee ff ff                  	call 0x80498f5 <func_1>
0x804aadf:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804aae5:   89 c2                           	mov edx, eax
0x804aae7:   83 ec 04                        	sub esp, 4
0x804aaea:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaed:   8d 83 4a d0 ff ff               	lea eax, [ebx - 0x2fb6]
0x804aaf3:   50                              	push eax
0x804aaf4:   52                              	push edx
0x804aaf5:   e8 7d ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aafa:   83 c4 10                        	add esp, 0x10
0x804aafd:   0f b7 83 28 00 00 00            	movzx eax, word ptr [ebx + 0x28]
0x804ab04:   0f b7 c0                        	movzx eax, ax
0x804ab07:   83 ec 04                        	sub esp, 4
0x804ab0a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab0d:   8d 93 4e d0 ff ff               	lea edx, [ebx - 0x2fb2]
0x804ab13:   52                              	push edx
0x804ab14:   50                              	push eax
0x804ab15:   e8 5d ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab1a:   83 c4 10                        	add esp, 0x10
0x804ab1d:   0f b6 83 2a 00 00 00            	movzx eax, byte ptr [ebx + 0x2a]
0x804ab24:   0f b6 c0                        	movzx eax, al
0x804ab27:   83 ec 04                        	sub esp, 4
0x804ab2a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab2d:   8d 93 53 d0 ff ff               	lea edx, [ebx - 0x2fad]
0x804ab33:   52                              	push edx
0x804ab34:   50                              	push eax
0x804ab35:   e8 3d ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab3a:   83 c4 10                        	add esp, 0x10
0x804ab3d:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804ab43:   83 ec 04                        	sub esp, 4
0x804ab46:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab49:   8d 93 58 d0 ff ff               	lea edx, [ebx - 0x2fa8]
0x804ab4f:   52                              	push edx
0x804ab50:   50                              	push eax
0x804ab51:   e8 21 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab56:   83 c4 10                        	add esp, 0x10
0x804ab59:   0f b7 83 30 00 00 00            	movzx eax, word ptr [ebx + 0x30]
0x804ab60:   0f b7 c0                        	movzx eax, ax
0x804ab63:   83 ec 04                        	sub esp, 4
0x804ab66:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab69:   8d 93 5d d0 ff ff               	lea edx, [ebx - 0x2fa3]
0x804ab6f:   52                              	push edx
0x804ab70:   50                              	push eax
0x804ab71:   e8 01 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab76:   83 c4 10                        	add esp, 0x10
0x804ab79:   0f b7 83 c4 04 00 00            	movzx eax, word ptr [ebx + 0x4c4]
0x804ab80:   98                              	cwde 
0x804ab81:   83 ec 04                        	sub esp, 4
0x804ab84:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab87:   8d 93 62 d0 ff ff               	lea edx, [ebx - 0x2f9e]
0x804ab8d:   52                              	push edx
0x804ab8e:   50                              	push eax
0x804ab8f:   e8 e3 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab94:   83 c4 10                        	add esp, 0x10
0x804ab97:   0f b6 83 32 00 00 00            	movzx eax, byte ptr [ebx + 0x32]
0x804ab9e:   0f be c0                        	movsx eax, al
0x804aba1:   83 ec 04                        	sub esp, 4
0x804aba4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aba7:   8d 93 67 d0 ff ff               	lea edx, [ebx - 0x2f99]
0x804abad:   52                              	push edx
0x804abae:   50                              	push eax
0x804abaf:   e8 c3 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abb4:   83 c4 10                        	add esp, 0x10
0x804abb7:   0f b7 83 34 00 00 00            	movzx eax, word ptr [ebx + 0x34]
0x804abbe:   98                              	cwde 
0x804abbf:   83 ec 04                        	sub esp, 4
0x804abc2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abc5:   8d 93 6c d0 ff ff               	lea edx, [ebx - 0x2f94]
0x804abcb:   52                              	push edx
0x804abcc:   50                              	push eax
0x804abcd:   e8 a5 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abd2:   83 c4 10                        	add esp, 0x10
0x804abd5:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804abdb:   83 ec 04                        	sub esp, 4
0x804abde:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abe1:   8d 93 71 d0 ff ff               	lea edx, [ebx - 0x2f8f]
0x804abe7:   52                              	push edx
0x804abe8:   50                              	push eax
0x804abe9:   e8 89 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abee:   83 c4 10                        	add esp, 0x10
0x804abf1:   0f b7 83 3c 00 00 00            	movzx eax, word ptr [ebx + 0x3c]
0x804abf8:   0f b7 c0                        	movzx eax, ax
0x804abfb:   83 ec 04                        	sub esp, 4
0x804abfe:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac01:   8d 93 76 d0 ff ff               	lea edx, [ebx - 0x2f8a]
0x804ac07:   52                              	push edx
0x804ac08:   50                              	push eax
0x804ac09:   e8 69 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac0e:   83 c4 10                        	add esp, 0x10
0x804ac11:   0f b6 83 3e 00 00 00            	movzx eax, byte ptr [ebx + 0x3e]
0x804ac18:   0f be c0                        	movsx eax, al
0x804ac1b:   83 ec 04                        	sub esp, 4
0x804ac1e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac21:   8d 93 7c d0 ff ff               	lea edx, [ebx - 0x2f84]
0x804ac27:   52                              	push edx
0x804ac28:   50                              	push eax
0x804ac29:   e8 49 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac2e:   83 c4 10                        	add esp, 0x10
0x804ac31:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804ac37:   89 c2                           	mov edx, eax
0x804ac39:   83 ec 04                        	sub esp, 4
0x804ac3c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac3f:   8d 83 82 d0 ff ff               	lea eax, [ebx - 0x2f7e]
0x804ac45:   50                              	push eax
0x804ac46:   52                              	push edx
0x804ac47:   e8 2b e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac4c:   83 c4 10                        	add esp, 0x10
0x804ac4f:   0f b6 83 44 00 00 00            	movzx eax, byte ptr [ebx + 0x44]
0x804ac56:   0f b6 c0                        	movzx eax, al
0x804ac59:   83 ec 04                        	sub esp, 4
0x804ac5c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac5f:   8d 93 88 d0 ff ff               	lea edx, [ebx - 0x2f78]
0x804ac65:   52                              	push edx
0x804ac66:   50                              	push eax
0x804ac67:   e8 0b e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac6c:   83 c4 10                        	add esp, 0x10
0x804ac6f:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804ac75:   83 ec 04                        	sub esp, 4
0x804ac78:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac7b:   8d 93 8e d0 ff ff               	lea edx, [ebx - 0x2f72]
0x804ac81:   52                              	push edx
0x804ac82:   50                              	push eax
0x804ac83:   e8 ef e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac88:   83 c4 10                        	add esp, 0x10
0x804ac8b:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804ac91:   89 c2                           	mov edx, eax
0x804ac93:   83 ec 04                        	sub esp, 4
0x804ac96:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac99:   8d 83 94 d0 ff ff               	lea eax, [ebx - 0x2f6c]
0x804ac9f:   50                              	push eax
0x804aca0:   52                              	push edx
0x804aca1:   e8 d1 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804aca6:   83 c4 10                        	add esp, 0x10
0x804aca9:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804acaf:   89 c2                           	mov edx, eax
0x804acb1:   83 ec 04                        	sub esp, 4
0x804acb4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acb7:   8d 83 9a d0 ff ff               	lea eax, [ebx - 0x2f66]
0x804acbd:   50                              	push eax
0x804acbe:   52                              	push edx
0x804acbf:   e8 b3 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acc4:   83 c4 10                        	add esp, 0x10
0x804acc7:   0f b6 83 c6 04 00 00            	movzx eax, byte ptr [ebx + 0x4c6]
0x804acce:   0f be c0                        	movsx eax, al
0x804acd1:   83 ec 04                        	sub esp, 4
0x804acd4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acd7:   8d 93 a0 d0 ff ff               	lea edx, [ebx - 0x2f60]
0x804acdd:   52                              	push edx
0x804acde:   50                              	push eax
0x804acdf:   e8 93 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ace4:   83 c4 10                        	add esp, 0x10
0x804ace7:   0f b7 83 54 00 00 00            	movzx eax, word ptr [ebx + 0x54]
0x804acee:   98                              	cwde 
0x804acef:   83 ec 04                        	sub esp, 4
0x804acf2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acf5:   8d 93 a6 d0 ff ff               	lea edx, [ebx - 0x2f5a]
0x804acfb:   52                              	push edx
0x804acfc:   50                              	push eax
0x804acfd:   e8 75 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad02:   83 c4 10                        	add esp, 0x10
0x804ad05:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804ad0b:   83 ec 04                        	sub esp, 4
0x804ad0e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad11:   8d 93 ac d0 ff ff               	lea edx, [ebx - 0x2f54]
0x804ad17:   52                              	push edx
0x804ad18:   50                              	push eax
0x804ad19:   e8 59 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad1e:   83 c4 10                        	add esp, 0x10
0x804ad21:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804ad27:   83 ec 04                        	sub esp, 4
0x804ad2a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad2d:   8d 93 b2 d0 ff ff               	lea edx, [ebx - 0x2f4e]
0x804ad33:   52                              	push edx
0x804ad34:   50                              	push eax
0x804ad35:   e8 3d e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad3a:   83 c4 10                        	add esp, 0x10
0x804ad3d:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804ad43:   89 c2                           	mov edx, eax
0x804ad45:   83 ec 04                        	sub esp, 4
0x804ad48:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad4b:   8d 83 b8 d0 ff ff               	lea eax, [ebx - 0x2f48]
0x804ad51:   50                              	push eax
0x804ad52:   52                              	push edx
0x804ad53:   e8 1f e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad58:   83 c4 10                        	add esp, 0x10
0x804ad5b:   0f b7 83 64 00 00 00            	movzx eax, word ptr [ebx + 0x64]
0x804ad62:   98                              	cwde 
0x804ad63:   83 ec 04                        	sub esp, 4
0x804ad66:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad69:   8d 93 be d0 ff ff               	lea edx, [ebx - 0x2f42]
0x804ad6f:   52                              	push edx
0x804ad70:   50                              	push eax
0x804ad71:   e8 01 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad76:   83 c4 10                        	add esp, 0x10
0x804ad79:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804ad7f:   83 ec 04                        	sub esp, 4
0x804ad82:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad85:   8d 93 c4 d0 ff ff               	lea edx, [ebx - 0x2f3c]
0x804ad8b:   52                              	push edx
0x804ad8c:   50                              	push eax
0x804ad8d:   e8 e5 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad92:   83 c4 10                        	add esp, 0x10
0x804ad95:   0f b7 83 6c 00 00 00            	movzx eax, word ptr [ebx + 0x6c]
0x804ad9c:   0f b7 c0                        	movzx eax, ax
0x804ad9f:   83 ec 04                        	sub esp, 4
0x804ada2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ada5:   8d 93 ca d0 ff ff               	lea edx, [ebx - 0x2f36]
0x804adab:   52                              	push edx
0x804adac:   50                              	push eax
0x804adad:   e8 c5 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adb2:   83 c4 10                        	add esp, 0x10
0x804adb5:   0f b7 83 6e 00 00 00            	movzx eax, word ptr [ebx + 0x6e]
0x804adbc:   98                              	cwde 
0x804adbd:   83 ec 04                        	sub esp, 4
0x804adc0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adc3:   8d 93 d0 d0 ff ff               	lea edx, [ebx - 0x2f30]
0x804adc9:   52                              	push edx
0x804adca:   50                              	push eax
0x804adcb:   e8 a7 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804add0:   83 c4 10                        	add esp, 0x10
0x804add3:   0f b7 83 70 00 00 00            	movzx eax, word ptr [ebx + 0x70]
0x804adda:   98                              	cwde 
0x804addb:   83 ec 04                        	sub esp, 4
0x804adde:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ade1:   8d 93 d6 d0 ff ff               	lea edx, [ebx - 0x2f2a]
0x804ade7:   52                              	push edx
0x804ade8:   50                              	push eax
0x804ade9:   e8 89 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adee:   83 c4 10                        	add esp, 0x10
0x804adf1:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804adf7:   89 c2                           	mov edx, eax
0x804adf9:   83 ec 04                        	sub esp, 4
0x804adfc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adff:   8d 83 dc d0 ff ff               	lea eax, [ebx - 0x2f24]
0x804ae05:   50                              	push eax
0x804ae06:   52                              	push edx
0x804ae07:   e8 6b e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae0c:   83 c4 10                        	add esp, 0x10
0x804ae0f:   0f b6 83 78 00 00 00            	movzx eax, byte ptr [ebx + 0x78]
0x804ae16:   0f be c0                        	movsx eax, al
0x804ae19:   83 ec 04                        	sub esp, 4
0x804ae1c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae1f:   8d 93 e2 d0 ff ff               	lea edx, [ebx - 0x2f1e]
0x804ae25:   52                              	push edx
0x804ae26:   50                              	push eax
0x804ae27:   e8 4b e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae2c:   83 c4 10                        	add esp, 0x10
0x804ae2f:   8b 83 7c 00 00 00               	mov eax, dword ptr [ebx + 0x7c]
0x804ae35:   83 ec 04                        	sub esp, 4
0x804ae38:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae3b:   8d 93 e8 d0 ff ff               	lea edx, [ebx - 0x2f18]
0x804ae41:   52                              	push edx
0x804ae42:   50                              	push eax
0x804ae43:   e8 2f e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae48:   83 c4 10                        	add esp, 0x10
0x804ae4b:   8b 83 80 00 00 00               	mov eax, dword ptr [ebx + 0x80]
0x804ae51:   83 ec 04                        	sub esp, 4
0x804ae54:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae57:   8d 93 ee d0 ff ff               	lea edx, [ebx - 0x2f12]
0x804ae5d:   52                              	push edx
0x804ae5e:   50                              	push eax
0x804ae5f:   e8 13 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae64:   83 c4 10                        	add esp, 0x10
0x804ae67:   8b 83 84 00 00 00               	mov eax, dword ptr [ebx + 0x84]
0x804ae6d:   83 ec 04                        	sub esp, 4
0x804ae70:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae73:   8d 93 f4 d0 ff ff               	lea edx, [ebx - 0x2f0c]
0x804ae79:   52                              	push edx
0x804ae7a:   50                              	push eax
0x804ae7b:   e8 f7 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae80:   83 c4 10                        	add esp, 0x10
0x804ae83:   0f b6 83 88 00 00 00            	movzx eax, byte ptr [ebx + 0x88]
0x804ae8a:   0f b6 c0                        	movzx eax, al
0x804ae8d:   83 ec 04                        	sub esp, 4
0x804ae90:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae93:   8d 93 fa d0 ff ff               	lea edx, [ebx - 0x2f06]
0x804ae99:   52                              	push edx
0x804ae9a:   50                              	push eax
0x804ae9b:   e8 d7 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aea0:   83 c4 10                        	add esp, 0x10
0x804aea3:   8b 83 8c 00 00 00               	mov eax, dword ptr [ebx + 0x8c]
0x804aea9:   89 c2                           	mov edx, eax
0x804aeab:   83 ec 04                        	sub esp, 4
0x804aeae:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aeb1:   8d 83 00 d1 ff ff               	lea eax, [ebx - 0x2f00]
0x804aeb7:   50                              	push eax
0x804aeb8:   52                              	push edx
0x804aeb9:   e8 b9 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aebe:   83 c4 10                        	add esp, 0x10
0x804aec1:   8b 83 90 00 00 00               	mov eax, dword ptr [ebx + 0x90]
0x804aec7:   89 c2                           	mov edx, eax
0x804aec9:   83 ec 04                        	sub esp, 4
0x804aecc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aecf:   8d 83 06 d1 ff ff               	lea eax, [ebx - 0x2efa]
0x804aed5:   50                              	push eax
0x804aed6:   52                              	push edx
0x804aed7:   e8 9b e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aedc:   83 c4 10                        	add esp, 0x10
0x804aedf:   0f b7 83 94 00 00 00            	movzx eax, word ptr [ebx + 0x94]
0x804aee6:   0f b7 c0                        	movzx eax, ax
0x804aee9:   83 ec 04                        	sub esp, 4
0x804aeec:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aeef:   8d 93 0c d1 ff ff               	lea edx, [ebx - 0x2ef4]
0x804aef5:   52                              	push edx
0x804aef6:   50                              	push eax
0x804aef7:   e8 7b e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aefc:   83 c4 10                        	add esp, 0x10
0x804aeff:   0f b7 83 c8 04 00 00            	movzx eax, word ptr [ebx + 0x4c8]
0x804af06:   98                              	cwde 
0x804af07:   83 ec 04                        	sub esp, 4
0x804af0a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af0d:   8d 93 12 d1 ff ff               	lea edx, [ebx - 0x2eee]
0x804af13:   52                              	push edx
0x804af14:   50                              	push eax
0x804af15:   e8 5d e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af1a:   83 c4 10                        	add esp, 0x10
0x804af1d:   0f b6 83 96 00 00 00            	movzx eax, byte ptr [ebx + 0x96]
0x804af24:   0f b6 c0                        	movzx eax, al
0x804af27:   83 ec 04                        	sub esp, 4
0x804af2a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af2d:   8d 93 18 d1 ff ff               	lea edx, [ebx - 0x2ee8]
0x804af33:   52                              	push edx
0x804af34:   50                              	push eax
0x804af35:   e8 3d e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af3a:   83 c4 10                        	add esp, 0x10
0x804af3d:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804af43:   f7 d0                           	not eax
0x804af45:   83 ec 08                        	sub esp, 8
0x804af48:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af4b:   50                              	push eax
0x804af4c:   e8 15 d5 ff ff                  	call 0x8048466 <platform_main_end>
0x804af51:   83 c4 10                        	add esp, 0x10
0x804af54:   b8 00 00 00 00                  	mov eax, 0
0x804af59:   8d 65 f8                        	lea esp, [ebp - 8]
0x804af5c:   59                              	pop ecx
0x804af5d:   5b                              	pop ebx
0x804af5e:   5d                              	pop ebp
0x804af5f:   8d 61 fc                        	lea esp, [ecx - 4]
0x804af62:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804af63 -- 0x804af67
0x804af63:   8b 04 24                        	mov eax, dword ptr [esp]
0x804af66:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804af67 -- 0x804af6b
0x804af67:   8b 14 24                        	mov edx, dword ptr [esp]
0x804af6a:   c3                              	ret 
; data inside code section at 0x804af6b -- 0x804af70
0x804af6b:   66 90 66 90 90                                     |f.f..           |
; function: __libc_csu_init at 0x804af70 -- 0x804afcd
0x804af70:   55                              	push ebp
0x804af71:   57                              	push edi
0x804af72:   56                              	push esi
0x804af73:   53                              	push ebx
0x804af74:   e8 17 d4 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804af79:   81 c3 87 30 00 00               	add ebx, 0x3087
0x804af7f:   83 ec 0c                        	sub esp, 0xc
0x804af82:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804af86:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804af8c:   e8 3b d3 ff ff                  	call 0x80482cc <_init>
0x804af91:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804af97:   29 c6                           	sub esi, eax
0x804af99:   c1 fe 02                        	sar esi, 2
0x804af9c:   85 f6                           	test esi, esi
0x804af9e:   74 25                           	je 0x804afc5 <__libc_csu_init+0x55>
0x804afa0:   31 ff                           	xor edi, edi
0x804afa2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804afa8:   83 ec 04                        	sub esp, 4
0x804afab:   55                              	push ebp
0x804afac:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804afb0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804afb4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804afbb:   83 c7 01                        	add edi, 1
0x804afbe:   83 c4 10                        	add esp, 0x10
0x804afc1:   39 fe                           	cmp esi, edi
0x804afc3:   75 e3                           	jne 0x804afa8 <__libc_csu_init+0x38>
0x804afc5:   83 c4 0c                        	add esp, 0xc
0x804afc8:   5b                              	pop ebx
0x804afc9:   5e                              	pop esi
0x804afca:   5f                              	pop edi
0x804afcb:   5d                              	pop ebp
0x804afcc:   c3                              	ret 
; data inside code section at 0x804afcd -- 0x804afd0
0x804afcd:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804afd0 -- 0x804afd2
0x804afd0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804afd4 -- 0x804afe8
0x804afd4:   53                              	push ebx
0x804afd5:   83 ec 08                        	sub esp, 8
0x804afd8:   e8 b3 d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804afdd:   81 c3 23 30 00 00               	add ebx, 0x3023
0x804afe3:   83 c4 08                        	add esp, 8
0x804afe6:   5b                              	pop ebx
0x804afe7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 ec af 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804afe8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804aff8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b008:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b018:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b028:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b038:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b048:   31 00 67 5f 32 00 67 5f  32 33 00 67 5f 33 39 00   |1.g_2.g_23.g_39.|
0x804b058:   67 5f 34 39 00 67 5f 35  30 00 67 5f 36 34 00 67   |g_49.g_50.g_64.g|
0x804b068:   5f 36 35 00 67 5f 36 36  00 67 5f 36 37 00 67 5f   |_65.g_66.g_67.g_|
0x804b078:   31 34 36 00 67 5f 31 35  30 00 67 5f 31 35 33 00   |146.g_150.g_153.|
0x804b088:   67 5f 31 35 37 00 67 5f  31 36 30 00 67 5f 31 37   |g_157.g_160.g_17|
0x804b098:   32 00 67 5f 31 37 34 00  67 5f 31 37 35 00 67 5f   |2.g_174.g_175.g_|
0x804b0a8:   31 37 36 00 67 5f 31 37  37 00 67 5f 31 38 30 00   |176.g_177.g_180.|
0x804b0b8:   67 5f 32 32 31 00 67 5f  32 32 34 00 67 5f 32 33   |g_221.g_224.g_23|
0x804b0c8:   39 00 67 5f 32 34 30 00  67 5f 32 34 33 00 67 5f   |9.g_240.g_243.g_|
0x804b0d8:   32 35 31 00 67 5f 32 35  32 00 67 5f 32 39 31 00   |251.g_252.g_291.|
0x804b0e8:   67 5f 32 39 35 00 67 5f  33 30 36 00 67 5f 33 30   |g_295.g_306.g_30|
0x804b0f8:   37 00 67 5f 33 32 39 00  67 5f 33 35 37 00 67 5f   |7.g_329.g_357.g_|
0x804b108:   33 39 30 00 67 5f 33 39  31 00 67 5f 33 39 34 00   |390.g_391.g_394.|
0x804b118:   67 5f 33 39 38 00 00 00  00 00 00 3f ff ff ff 7e   |g_398......?...~|
0x804b128:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x804b138:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x804b148:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804b158:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804b168:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804b178:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804b188:   01                                                 |.               |
; section: .eh_frame_hdr
0x804b188:   01 1b 03 3b b8 02 00 00  56 00 00 00 68 d1 ff ff   |...;....V...h...|
0x804b198:   e8 02 00 00 a8 d1 ff ff  0c 03 00 00 f8 d1 ff ff   |................|
0x804b1a8:   d4 02 00 00 ce d2 ff ff  20 03 00 00 de d2 ff ff   |........ .......|
0x804b1b8:   40 03 00 00 0c d3 ff ff  64 03 00 00 2a d3 ff ff   |@.......d...*...|
0x804b1c8:   84 03 00 00 52 d3 ff ff  a4 03 00 00 7c d3 ff ff   |....R.......|...|
0x804b1d8:   c4 03 00 00 a5 d3 ff ff  e4 03 00 00 e8 d3 ff ff   |................|
0x804b1e8:   04 04 00 00 29 d4 ff ff  24 04 00 00 81 d4 ff ff   |....)...$.......|
0x804b1f8:   48 04 00 00 d3 d4 ff ff  6c 04 00 00 10 d5 ff ff   |H.......l.......|
0x804b208:   8c 04 00 00 47 d5 ff ff  ac 04 00 00 66 d5 ff ff   |....G.......f...|
0x804b218:   cc 04 00 00 90 d5 ff ff  ec 04 00 00 bc d5 ff ff   |................|
0x804b228:   0c 05 00 00 e7 d5 ff ff  2c 05 00 00 30 d6 ff ff   |........,...0...|
0x804b238:   4c 05 00 00 77 d6 ff ff  6c 05 00 00 d1 d6 ff ff   |L...w...l.......|
0x804b248:   90 05 00 00 25 d7 ff ff  b4 05 00 00 64 d7 ff ff   |....%.......d...|
0x804b258:   d4 05 00 00 9d d7 ff ff  f4 05 00 00 bf d7 ff ff   |................|
0x804b268:   14 06 00 00 0d d8 ff ff  34 06 00 00 49 d8 ff ff   |........4...I...|
0x804b278:   54 06 00 00 d2 d8 ff ff  74 06 00 00 04 d9 ff ff   |T.......t.......|
0x804b288:   94 06 00 00 34 d9 ff ff  b4 06 00 00 79 d9 ff ff   |....4.......y...|
0x804b298:   d4 06 00 00 b8 d9 ff ff  f4 06 00 00 ea d9 ff ff   |................|
0x804b2a8:   14 07 00 00 16 da ff ff  34 07 00 00 34 da ff ff   |........4...4...|
0x804b2b8:   54 07 00 00 5c da ff ff  74 07 00 00 81 da ff ff   |T...\...t.......|
0x804b2c8:   94 07 00 00 a6 da ff ff  b4 07 00 00 dd da ff ff   |................|
0x804b2d8:   d4 07 00 00 11 db ff ff  f4 07 00 00 63 db ff ff   |............c...|
0x804b2e8:   18 08 00 00 af db ff ff  3c 08 00 00 e6 db ff ff   |........<.......|
0x804b2f8:   5c 08 00 00 17 dc ff ff  7c 08 00 00 36 dc ff ff   |\.......|...6...|
0x804b308:   9c 08 00 00 60 dc ff ff  bc 08 00 00 88 dc ff ff   |....`...........|
0x804b318:   dc 08 00 00 b1 dc ff ff  fc 08 00 00 ed dc ff ff   |................|
0x804b328:   1c 09 00 00 27 dd ff ff  3c 09 00 00 7a dd ff ff   |....'...<...z...|
0x804b338:   60 09 00 00 c7 dd ff ff  84 09 00 00 ff dd ff ff   |`...............|
0x804b348:   a4 09 00 00 31 de ff ff  c4 09 00 00 45 de ff ff   |....1.......E...|
0x804b358:   e4 09 00 00 5c de ff ff  04 0a 00 00 71 de ff ff   |....\.......q...|
0x804b368:   24 0a 00 00 87 de ff ff  44 0a 00 00 ae de ff ff   |$.......D.......|
0x804b378:   64 0a 00 00 d3 de ff ff  84 0a 00 00 12 df ff ff   |d...............|
0x804b388:   a4 0a 00 00 4b df ff ff  c4 0a 00 00 77 df ff ff   |....K.......w...|
0x804b398:   e4 0a 00 00 9d df ff ff  04 0b 00 00 df df ff ff   |................|
0x804b3a8:   24 0b 00 00 21 e0 ff ff  44 0b 00 00 63 e0 ff ff   |$...!...D...c...|
0x804b3b8:   64 0b 00 00 d8 e0 ff ff  84 0b 00 00 35 e1 ff ff   |d...........5...|
0x804b3c8:   a4 0b 00 00 92 e1 ff ff  c4 0b 00 00 ef e1 ff ff   |................|
0x804b3d8:   e4 0b 00 00 7f e2 ff ff  04 0c 00 00 e3 e2 ff ff   |................|
0x804b3e8:   24 0c 00 00 53 e3 ff ff  44 0c 00 00 9a e3 ff ff   |$...S...D.......|
0x804b3f8:   68 0c 00 00 ef e3 ff ff  88 0c 00 00 36 e4 ff ff   |h...........6...|
0x804b408:   ac 0c 00 00 9e e4 ff ff  d0 0c 00 00 6d e7 ff ff   |............m...|
0x804b418:   00 0d 00 00 f7 f8 ff ff  30 0d 00 00 db fd ff ff   |........0.......|
0x804b428:   68 0d 00 00 df fd ff ff  7c 0d 00 00 e8 fd ff ff   |h.......|.......|
0x804b438:   90 0d 00 00 48 fe ff ff  dc 0d 00 00 14            |....H........   |
; section: .eh_frame
0x804b444:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b454:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b464:   1c cf ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b474:   30 00 00 00 78 ce ff ff  40 00 00 00 00 0e 08 46   |0...x...@......F|
0x804b484:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b494:   10 00 00 00 54 00 00 00  94 ce ff ff 08 00 00 00   |....T...........|
0x804b4a4:   00 00 00 00 1c 00 00 00  68 00 00 00 a6 cf ff ff   |........h.......|
0x804b4b4:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b4c4:   04 04 00 00 20 00 00 00  88 00 00 00 96 cf ff ff   |.... ...........|
0x804b4d4:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b4e4:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b4f4:   a0 cf ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b504:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b514:   9e cf ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b524:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b534:   a6 cf ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b544:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b554:   b0 cf ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b564:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b574:   b9 cf ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b584:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b594:   dc cf ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b5a4:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b5b4:   fd cf ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b5c4:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b5d4:   90 01 00 00 31 d0 ff ff  52 00 00 00 00 41 0e 08   |....1...R....A..|
0x804b5e4:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b5f4:   1c 00 00 00 b4 01 00 00  5f d0 ff ff 3d 00 00 00   |........_...=...|
0x804b604:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b614:   1c 00 00 00 d4 01 00 00  7c d0 ff ff 37 00 00 00   |........|...7...|
0x804b624:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b634:   1c 00 00 00 f4 01 00 00  93 d0 ff ff 1f 00 00 00   |................|
0x804b644:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b654:   1c 00 00 00 14 02 00 00  92 d0 ff ff 2a 00 00 00   |............*...|
0x804b664:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b674:   1c 00 00 00 34 02 00 00  9c d0 ff ff 2c 00 00 00   |....4.......,...|
0x804b684:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b694:   1c 00 00 00 54 02 00 00  a8 d0 ff ff 2b 00 00 00   |....T.......+...|
0x804b6a4:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b6b4:   1c 00 00 00 74 02 00 00  b3 d0 ff ff 49 00 00 00   |....t.......I...|
0x804b6c4:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b6d4:   1c 00 00 00 94 02 00 00  dc d0 ff ff 47 00 00 00   |............G...|
0x804b6e4:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b6f4:   20 00 00 00 b4 02 00 00  03 d1 ff ff 5a 00 00 00   | ...........Z...|
0x804b704:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b714:   c5 0c 04 04 20 00 00 00  d8 02 00 00 39 d1 ff ff   |.... .......9...|
0x804b724:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b734:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b744:   69 d1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |i...?....A....B.|
0x804b754:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b764:   88 d1 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b774:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b784:   a1 d1 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b794:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b7a4:   a3 d1 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b7b4:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b7c4:   d1 d1 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b7d4:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b7e4:   ed d1 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b7f4:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b804:   56 d2 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |V...2....A....B.|
0x804b814:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b824:   68 d2 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |h...0....A....B.|
0x804b834:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b844:   78 d2 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |x...E....A....B.|
0x804b854:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b864:   9d d2 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b874:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b884:   bc d2 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b894:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b8a4:   ce d2 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b8b4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b8c4:   da d2 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b8d4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b8e4:   d8 d2 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b8f4:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b904:   e0 d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b914:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b924:   e5 d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b934:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b944:   ea d2 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b954:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b964:   01 d3 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b974:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b984:   15 d3 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b994:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b9a4:   60 05 00 00 43 d3 ff ff  4c 00 00 00 00 41 0e 08   |`...C...L....A..|
0x804b9b4:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b9c4:   1c 00 00 00 84 05 00 00  6b d3 ff ff 37 00 00 00   |........k...7...|
0x804b9d4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b9e4:   1c 00 00 00 a4 05 00 00  82 d3 ff ff 31 00 00 00   |............1...|
0x804b9f4:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804ba04:   1c 00 00 00 c4 05 00 00  93 d3 ff ff 1f 00 00 00   |................|
0x804ba14:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804ba24:   1c 00 00 00 e4 05 00 00  92 d3 ff ff 2a 00 00 00   |............*...|
0x804ba34:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804ba44:   1c 00 00 00 04 06 00 00  9c d3 ff ff 28 00 00 00   |............(...|
0x804ba54:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804ba64:   1c 00 00 00 24 06 00 00  a4 d3 ff ff 29 00 00 00   |....$.......)...|
0x804ba74:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804ba84:   1c 00 00 00 44 06 00 00  ad d3 ff ff 3c 00 00 00   |....D.......<...|
0x804ba94:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804baa4:   1c 00 00 00 64 06 00 00  c9 d3 ff ff 3a 00 00 00   |....d.......:...|
0x804bab4:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bac4:   20 00 00 00 84 06 00 00  e3 d3 ff ff 53 00 00 00   | ...........S...|
0x804bad4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bae4:   c5 0c 04 04 20 00 00 00  a8 06 00 00 12 d4 ff ff   |.... ...........|
0x804baf4:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bb04:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bb14:   3b d4 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |;...8....A....B.|
0x804bb24:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bb34:   53 d4 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |S...2....A....B.|
0x804bb44:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bb54:   65 d4 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |e........A....B.|
0x804bb64:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bb74:   59 d4 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |Y........A....B.|
0x804bb84:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bb94:   50 d4 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |P........A....B.|
0x804bba4:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bbb4:   45 d4 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |E........A....B.|
0x804bbc4:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bbd4:   3b d4 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |;...'....A....B.|
0x804bbe4:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bbf4:   42 d4 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |B...%....A....B.|
0x804bc04:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bc14:   47 d4 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |G...?....A....B.|
0x804bc24:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bc34:   66 d4 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |f...9....A....B.|
0x804bc44:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bc54:   7f d4 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bc64:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bc74:   8b d4 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804bc84:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bc94:   91 d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bca4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bcb4:   b3 d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bcc4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bcd4:   d5 d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bce4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bcf4:   f7 d4 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804bd04:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bd14:   4c d5 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |L...]....A....B.|
0x804bd24:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bd34:   89 d5 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bd44:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bd54:   c6 d5 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bd64:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bd74:   03 d6 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bd84:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804bd94:   73 d6 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |s...d....A....B.|
0x804bda4:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bdb4:   b7 d6 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804bdc4:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bdd4:   07 d7 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804bde4:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bdf4:   b0 09 00 00 2a d7 ff ff  55 00 00 00 00 41 0e 08   |....*...U....A..|
0x804be04:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804be14:   d0 09 00 00 5f d7 ff ff  47 00 00 00 00 41 0e 08   |...._...G....A..|
0x804be24:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804be34:   20 00 00 00 f4 09 00 00  82 d7 ff ff 68 00 00 00   | ...........h...|
0x804be44:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804be54:   0c 04 04 00 2c 00 00 00  18 0a 00 00 c6 d7 ff ff   |....,...........|
0x804be64:   cf 02 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804be74:   86 04 83 05 03 bf 02 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804be84:   04 00 00 00 2c 00 00 00  48 0a 00 00 65 da ff ff   |....,...H...e...|
0x804be94:   8a 11 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804bea4:   86 04 83 05 03 7a 11 c3  41 c6 41 c7 41 c5 0c 04   |.....z..A.A.A...|
0x804beb4:   04 00 00 00 34 00 00 00  78 0a 00 00 bf eb ff ff   |....4...x.......|
0x804bec4:   e4 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804bed4:   0f 03 75 78 06 10 03 02  75 7c 03 cf 04 c1 0c 01   |..ux....u|......|
0x804bee4:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bef4:   b0 0a 00 00 6b f0 ff ff  04 00 00 00 00 00 00 00   |....k...........|
0x804bf04:   10 00 00 00 c4 0a 00 00  5b f0 ff ff 04 00 00 00   |........[.......|
0x804bf14:   00 00 00 00 48 00 00 00  d8 0a 00 00 50 f0 ff ff   |....H.......P...|
0x804bf24:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bf34:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bf44:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bf54:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bf64:   10 00 00 00 24 0b 00 00  64 f0 ff ff 02 00 00 00   |....$...d.......|
0x804bf74:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 d4 af 04 08  19 00 00 00 0c df 04 08   |................|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff fe ff ff ff   |................|
0x804e028:   37 07 01 00 01 00 00 00  07 00 06 00 c5 13 00 00   |7...............|
0x804e038:   29 1f de 36 02 00 3e 00  f9 42 2a 52 a1 00 00 00   |)..6..>..B*R....|
0x804e048:   04 00 00 00 80 97 2c f7  04 00 00 00 03 00 00 00   |......,.........|
0x804e058:   01 00 00 00 fd ff ff ff  2e 68 72 0f b0 da 00 00   |.........hr.....|
0x804e068:   39 86 29 c1 13 79 5f 5f  fb ff 00 00 11 55 47 73   |9.)..y__.....UGs|
0x804e078:   be 00 00 00 a6 14 e1 2b  09 00 00 00 8e 83 2d 1b   |.......+......-.|
0x804e088:   67 00 00 00 99 33 81 76  fc ff ff ff fb ff fb ??   |g....3.v.......?|
