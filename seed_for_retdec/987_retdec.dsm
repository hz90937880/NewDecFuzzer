;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 10:33:29
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 20 d9 ff ff               	lea eax, [ebx - 0x26e0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 c0 d8 ff ff               	lea eax, [ebx - 0x2740]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 de a4 04 08               	mov eax, 0x804a4de
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 70 d0 04 08                  	mov eax, 0x804d070
0x80483a5:   3d 70 d0 04 08                  	cmp eax, 0x804d070
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 70 d0 04 08                  	push 0x804d070
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 70 d0 04 08                  	mov eax, 0x804d070
0x80483e5:   2d 70 d0 04 08                  	sub eax, 0x804d070
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 70 d0 04 08                  	push 0x804d070
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 58 24 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 44 24 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 40 d9 ff ff               	lea edx, [eax - 0x26c0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 17 24 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 f9 23 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 d1 23 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 a7 23 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 7e 23 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 3b 23 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 f9 22 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 a1 22 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 50 22 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 13 22 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 dc 21 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 bd 21 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 93 21 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 67 21 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 3c 21 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 f3 20 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 ab 20 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 51 20 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 fe 1f 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 bf 1f 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 89 1f 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 67 1f 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 19 1f 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 dd 1e 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 54 1e 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 22 1e 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 f2 1d 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 ad 1d 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 6e 1d 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 3c 1d 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 0d 1d 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 ef 1c 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 c7 1c 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 a2 1c 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 7d 1c 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 46 1c 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 11 1c 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 bf 1b 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 74 1b 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 3d 1b 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 0c 1b 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 ed 1a 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 c3 1a 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 9b 1a 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 72 1a 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 36 1a 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 fb 19 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 a8 19 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 5c 19 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 24 19 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 f5 18 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 e1 18 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 ca 18 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 b5 18 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 9f 18 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 78 18 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 53 18 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 14 18 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 db 17 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 af 17 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 89 17 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 3c da ff ff               	fld dword ptr [eax - 0x25c4]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 3c da ff ff               	fld dword ptr [eax - 0x25c4]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 40 da ff ff               	fld dword ptr [eax - 0x25c0]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 47 17 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 3c da ff ff               	fld dword ptr [eax - 0x25c4]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 3c da ff ff               	fld dword ptr [eax - 0x25c4]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 40 da ff ff               	fld dword ptr [eax - 0x25c0]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 05 17 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 44 da ff ff               	fld dword ptr [eax - 0x25bc]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 48 da ff ff               	fld dword ptr [eax - 0x25b8]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 4c da ff ff               	fld dword ptr [eax - 0x25b4]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 c3 16 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 50 da ff ff               	fld dword ptr [eax - 0x25b0]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 54 da ff ff               	fld dword ptr [eax - 0x25ac]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 58 da ff ff               	fld dword ptr [eax - 0x25a8]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 4b 16 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 60 da ff ff               	fld qword ptr [eax - 0x25a0]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 60 da ff ff               	fld qword ptr [eax - 0x25a0]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 68 da ff ff               	fld qword ptr [eax - 0x2598]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 ee 15 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 60 da ff ff               	fld qword ptr [eax - 0x25a0]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 60 da ff ff               	fld qword ptr [eax - 0x25a0]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 68 da ff ff               	fld qword ptr [eax - 0x2598]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 91 15 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 70 da ff ff               	fld qword ptr [eax - 0x2590]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 78 da ff ff               	fld qword ptr [eax - 0x2588]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 80 da ff ff               	fld qword ptr [eax - 0x2580]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 34 15 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 88 da ff ff               	fld qword ptr [eax - 0x2578]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 90 da ff ff               	fld qword ptr [eax - 0x2570]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 98 da ff ff               	fld qword ptr [eax - 0x2568]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 a4 14 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 a0 da ff ff               	fld dword ptr [eax - 0x2560]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 a4 da ff ff               	fld dword ptr [eax - 0x255c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 40 14 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 cf 13 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 8c 13 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 50 d9 ff ff               	lea eax, [ebx - 0x26b0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 74 d9 ff ff               	lea eax, [ebx - 0x268c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: packed_printf at 0x8049626 -- 0x8049654
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   53                              	push ebx
0x804962a:   83 ec 04                        	sub esp, 4
0x804962d:   e8 84 12 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8049632:   05 ce 39 00 00                  	add eax, 0x39ce
0x8049637:   83 ec 08                        	sub esp, 8
0x804963a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804963d:   8d 90 98 d9 ff ff               	lea edx, [eax - 0x2668]
0x8049643:   52                              	push edx
0x8049644:   89 c3                           	mov ebx, eax
0x8049646:   e8 c5 ec ff ff                  	call 0x8048310 <printf>
0x804964b:   83 c4 10                        	add esp, 0x10
0x804964e:   90                              	nop 
0x804964f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049652:   c9                              	leave 
0x8049653:   c3                              	ret 
; function: set_var at 0x8049654 -- 0x8049827
0x8049654:   55                              	push ebp
0x8049655:   89 e5                           	mov ebp, esp
0x8049657:   57                              	push edi
0x8049658:   56                              	push esi
0x8049659:   53                              	push ebx
0x804965a:   83 ec 60                        	sub esp, 0x60
0x804965d:   e8 58 12 00 00                  	call 0x804a8ba <__x86.get_pc_thunk.dx>
0x8049662:   81 c2 9e 39 00 00               	add edx, 0x399e
0x8049668:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804966b:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804966e:   8b 4d 0c                        	mov ecx, dword ptr [ebp + 0xc]
0x8049671:   8b 5d 24                        	mov ebx, dword ptr [ebp + 0x24]
0x8049674:   8b 75 28                        	mov esi, dword ptr [ebp + 0x28]
0x8049677:   8b 7d 2c                        	mov edi, dword ptr [ebp + 0x2c]
0x804967a:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x804967d:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049680:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049683:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049686:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x8049689:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804968c:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x804968f:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049692:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049695:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049698:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x804969b:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804969e:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x80496a1:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x80496a4:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x80496a7:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x80496aa:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x80496ad:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x80496b0:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x80496b4:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x80496b7:   89 c8                           	mov eax, ecx
0x80496b9:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x80496bc:   89 d8                           	mov eax, ebx
0x80496be:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x80496c1:   89 f0                           	mov eax, esi
0x80496c3:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496c6:   89 f8                           	mov eax, edi
0x80496c8:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x80496cb:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x80496cf:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496d3:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x80496d7:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x80496da:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x80496de:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496e1:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80496e5:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496e8:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x80496ec:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496ef:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496f3:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x80496f7:   0f b6 45 9c                     	movzx eax, byte ptr [ebp - 0x64]
0x80496fb:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x80496fe:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x8049702:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x8049706:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x804970a:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x804970d:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x8049711:   88 82 24 00 00 00               	mov byte ptr [edx + 0x24], al
0x8049717:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x804971b:   88 82 25 00 00 00               	mov byte ptr [edx + 0x25], al
0x8049721:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x8049724:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x804972a:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x804972d:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x8049733:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x8049736:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x804973c:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x804973f:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x8049745:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x8049748:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x804974e:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x8049752:   88 82 3c 00 00 00               	mov byte ptr [edx + 0x3c], al
0x8049758:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x804975c:   88 82 3d 00 00 00               	mov byte ptr [edx + 0x3d], al
0x8049762:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049766:   88 82 3e 00 00 00               	mov byte ptr [edx + 0x3e], al
0x804976c:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049770:   66 89 82 40 00 00 00            	mov word ptr [edx + 0x40], ax
0x8049777:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x804977a:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x8049780:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x8049784:   88 82 48 00 00 00               	mov byte ptr [edx + 0x48], al
0x804978a:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x804978e:   88 82 49 00 00 00               	mov byte ptr [edx + 0x49], al
0x8049794:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x8049798:   88 82 4a 00 00 00               	mov byte ptr [edx + 0x4a], al
0x804979e:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x80497a2:   88 82 4b 00 00 00               	mov byte ptr [edx + 0x4b], al
0x80497a8:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x80497ac:   66 89 82 4c 00 00 00            	mov word ptr [edx + 0x4c], ax
0x80497b3:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x80497b6:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x80497bc:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x80497bf:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x80497c5:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x80497c8:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x80497ce:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x80497d1:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x80497d7:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x80497da:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x80497e0:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x80497e4:   88 82 a4 04 00 00               	mov byte ptr [edx + 0x4a4], al
0x80497ea:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x80497ed:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x80497f3:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x80497f7:   66 89 82 a6 04 00 00            	mov word ptr [edx + 0x4a6], ax
0x80497fe:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x8049801:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x8049807:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x804980a:   89 82 a8 04 00 00               	mov dword ptr [edx + 0x4a8], eax
0x8049810:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x8049814:   88 82 6c 00 00 00               	mov byte ptr [edx + 0x6c], al
0x804981a:   b8 00 00 00 00                  	mov eax, 0
0x804981f:   83 c4 60                        	add esp, 0x60
0x8049822:   5b                              	pop ebx
0x8049823:   5e                              	pop esi
0x8049824:   5f                              	pop edi
0x8049825:   5d                              	pop ebp
0x8049826:   c3                              	ret 
; function: func_1 at 0x8049827 -- 0x804a4de
0x8049827:   55                              	push ebp
0x8049828:   89 e5                           	mov ebp, esp
0x804982a:   57                              	push edi
0x804982b:   56                              	push esi
0x804982c:   53                              	push ebx
0x804982d:   81 ec 40 01 00 00               	sub esp, 0x140
0x8049833:   e8 7e 10 00 00                  	call 0x804a8b6 <__x86.get_pc_thunk.ax>
0x8049838:   05 c8 37 00 00                  	add eax, 0x37c8
0x804983d:   c6 45 e8 05                     	mov byte ptr [ebp - 0x18], 5
0x8049841:   c6 45 e7 01                     	mov byte ptr [ebp - 0x19], 1
0x8049845:   c7 45 e0 32 31 40 d9            	mov dword ptr [ebp - 0x20], 0xd9403132
0x804984c:   c7 45 dc 03 00 00 00            	mov dword ptr [ebp - 0x24], 3
0x8049853:   c7 45 d8 d5 b2 ac ae            	mov dword ptr [ebp - 0x28], 0xaeacb2d5
0x804985a:   c7 45 f0 af 67 63 2b            	mov dword ptr [ebp - 0x10], 0x2b6367af
0x8049861:   c7 45 ec ff ff ff ff            	mov dword ptr [ebp - 0x14], 0xffffffff
0x8049868:   c6 45 eb a3                     	mov byte ptr [ebp - 0x15], 0xa3
0x804986c:   c6 45 ea fb                     	mov byte ptr [ebp - 0x16], 0xfb
0x8049870:   c6 45 e9 4a                     	mov byte ptr [ebp - 0x17], 0x4a
0x8049874:   66 c7 45 d6 01 00               	mov word ptr [ebp - 0x2a], 1
0x804987a:   c7 45 d0 30 73 9e bc            	mov dword ptr [ebp - 0x30], 0xbc9e7330
0x8049881:   c6 45 cf fc                     	mov byte ptr [ebp - 0x31], 0xfc
0x8049885:   c6 45 87 7f                     	mov byte ptr [ebp - 0x79], 0x7f
0x8049889:   c6 45 86 01                     	mov byte ptr [ebp - 0x7a], 1
0x804988d:   c6 45 ce 06                     	mov byte ptr [ebp - 0x32], 6
0x8049891:   66 c7 45 84 9a f8               	mov word ptr [ebp - 0x7c], 0xf89a
0x8049897:   c7 45 80 c8 fb 61 1f            	mov dword ptr [ebp - 0x80], 0x1f61fbc8
0x804989e:   c7 45 c8 62 28 8e 55            	mov dword ptr [ebp - 0x38], 0x558e2862
0x80498a5:   c7 85 7c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x84], 1
0x80498af:   c7 45 c4 ff ff ff ff            	mov dword ptr [ebp - 0x3c], 0xffffffff
0x80498b6:   c7 45 c0 3b c7 42 0a            	mov dword ptr [ebp - 0x40], 0xa42c73b
0x80498bd:   c6 85 7b ff ff ff 00            	mov byte ptr [ebp - 0x85], 0
0x80498c4:   c7 85 74 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x8c], 0xffffffff
0x80498ce:   66 c7 45 be 00 00               	mov word ptr [ebp - 0x42], 0
0x80498d4:   c7 85 70 ff ff ff c2 5c 77 69   	mov dword ptr [ebp - 0x90], 0x69775cc2
0x80498de:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x80498e5:   c6 45 b7 60                     	mov byte ptr [ebp - 0x49], 0x60
0x80498e9:   c7 85 6c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x94], 1
0x80498f3:   c7 45 b0 01 00 00 00            	mov dword ptr [ebp - 0x50], 1
0x80498fa:   c7 45 ac 51 f4 59 14            	mov dword ptr [ebp - 0x54], 0x1459f451
0x8049901:   c7 85 68 ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0x98], 5
0x804990b:   c7 45 a8 00 00 00 00            	mov dword ptr [ebp - 0x58], 0
0x8049912:   c7 45 a4 fe ff ff ff            	mov dword ptr [ebp - 0x5c], 0xfffffffe
0x8049919:   c7 45 a0 6a 09 79 e8            	mov dword ptr [ebp - 0x60], 0xe879096a
0x8049920:   c7 85 64 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x9c], 0xffffffff
0x804992a:   c6 85 63 ff ff ff 05            	mov byte ptr [ebp - 0x9d], 5
0x8049931:   66 c7 85 60 ff ff ff 1e 97      	mov word ptr [ebp - 0xa0], 0x971e
0x804993a:   c7 85 5c ff ff ff 79 ce 38 24   	mov dword ptr [ebp - 0xa4], 0x2438ce79
0x8049944:   c7 85 58 ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0xa8], 0xfffffffa
0x804994e:   80 7d e8 00                     	cmp byte ptr [ebp - 0x18], 0
0x8049952:   75 09                           	jne 0x804995d <func_1+0x136>
0x8049954:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x804995b:   74 07                           	je 0x8049964 <func_1+0x13d>
0x804995d:   b8 01 00 00 00                  	mov eax, 1
0x8049962:   eb 05                           	jmp 0x8049969 <func_1+0x142>
0x8049964:   b8 00 00 00 00                  	mov eax, 0
0x8049969:   88 45 e7                        	mov byte ptr [ebp - 0x19], al
0x804996c:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049972:   0f b7 d0                        	movzx edx, ax
0x8049975:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x8049979:   89 c1                           	mov ecx, eax
0x804997b:   d3 fa                           	sar edx, cl
0x804997d:   89 d0                           	mov eax, edx
0x804997f:   85 c0                           	test eax, eax
0x8049981:   74 6f                           	je 0x80499f2 <func_1+0x1cb>
0x8049983:   83 65 b0 03                     	and dword ptr [ebp - 0x50], 3
0x8049987:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804998a:   0f b6 55 e7                     	movzx edx, byte ptr [ebp - 0x19]
0x804998e:   0f b6 c0                        	movzx eax, al
0x8049991:   f6 f2                           	div dl
0x8049993:   0f b6 c0                        	movzx eax, al
0x8049996:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049999:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804999d:   75 09                           	jne 0x80499a8 <func_1+0x181>
0x804999f:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x80499a6:   74 07                           	je 0x80499af <func_1+0x188>
0x80499a8:   ba 01 00 00 00                  	mov edx, 1
0x80499ad:   eb 05                           	jmp 0x80499b4 <func_1+0x18d>
0x80499af:   ba 00 00 00 00                  	mov edx, 0
0x80499b4:   0f be 45 e7                     	movsx eax, byte ptr [ebp - 0x19]
0x80499b8:   39 c2                           	cmp edx, eax
0x80499ba:   0f 9c c0                        	setl al
0x80499bd:   0f b6 d0                        	movzx edx, al
0x80499c0:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x80499c6:   0f be c0                        	movsx eax, al
0x80499c9:   29 c2                           	sub edx, eax
0x80499cb:   89 d0                           	mov eax, edx
0x80499cd:   83 e8 09                        	sub eax, 9
0x80499d0:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x80499d3:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x80499d6:   0f bf d0                        	movsx edx, ax
0x80499d9:   0f be 45 e7                     	movsx eax, byte ptr [ebp - 0x19]
0x80499dd:   29 c2                           	sub edx, eax
0x80499df:   89 d0                           	mov eax, edx
0x80499e1:   21 45 dc                        	and dword ptr [ebp - 0x24], eax
0x80499e4:   81 7d dc 4c 2b 00 00            	cmp dword ptr [ebp - 0x24], 0x2b4c
0x80499eb:   b8 01 00 00 00                  	mov eax, 1
0x80499f0:   eb 05                           	jmp 0x80499f7 <func_1+0x1d0>
0x80499f2:   b8 00 00 00 00                  	mov eax, 0
0x80499f7:   31 45 a4                        	xor dword ptr [ebp - 0x5c], eax
0x80499fa:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x80499fd:   0f bf c8                        	movsx ecx, ax
0x8049a00:   ba 67 66 66 66                  	mov edx, 0x66666667
0x8049a05:   89 c8                           	mov eax, ecx
0x8049a07:   f7 ea                           	imul edx
0x8049a09:   c1 fa 02                        	sar edx, 2
0x8049a0c:   89 c8                           	mov eax, ecx
0x8049a0e:   c1 f8 1f                        	sar eax, 0x1f
0x8049a11:   29 c2                           	sub edx, eax
0x8049a13:   89 d0                           	mov eax, edx
0x8049a15:   c1 e0 02                        	shl eax, 2
0x8049a18:   01 d0                           	add eax, edx
0x8049a1a:   01 c0                           	add eax, eax
0x8049a1c:   29 c1                           	sub ecx, eax
0x8049a1e:   89 ca                           	mov edx, ecx
0x8049a20:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x8049a24:   09 55 d8                        	or dword ptr [ebp - 0x28], edx
0x8049a27:   2b 45 d8                        	sub eax, dword ptr [ebp - 0x28]
0x8049a2a:   89 c2                           	mov edx, eax
0x8049a2c:   0f be 45 e7                     	movsx eax, byte ptr [ebp - 0x19]
0x8049a30:   21 c2                           	and edx, eax
0x8049a32:   0f be 45 e7                     	movsx eax, byte ptr [ebp - 0x19]
0x8049a36:   39 c2                           	cmp edx, eax
0x8049a38:   0f 93 c0                        	setae al
0x8049a3b:   0f b6 c0                        	movzx eax, al
0x8049a3e:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049a41:   83 7d a4 01                     	cmp dword ptr [ebp - 0x5c], 1
0x8049a45:   83 7d a0 01                     	cmp dword ptr [ebp - 0x60], 1
0x8049a49:   0f 8e d0 06 00 00               	jle 0x804a11f <func_1+0x8f8>
0x8049a4f:   66 c7 85 26 ff ff ff 01 00      	mov word ptr [ebp - 0xda], 1
0x8049a58:   66 c7 85 24 ff ff ff 01 00      	mov word ptr [ebp - 0xdc], 1
0x8049a61:   c7 85 20 ff ff ff 40 61 a0 69   	mov dword ptr [ebp - 0xe0], 0x69a06140
0x8049a6b:   c7 85 1c ff ff ff 04 00 00 00   	mov dword ptr [ebp - 0xe4], 4
0x8049a75:   c7 85 18 ff ff ff ea 4e 8f f7   	mov dword ptr [ebp - 0xe8], 0xf78f4eea
0x8049a7f:   c7 45 a8 00 00 00 00            	mov dword ptr [ebp - 0x58], 0
0x8049a86:   e9 44 05 00 00                  	jmp 0x8049fcf <func_1+0x7a8>
0x8049a8b:   c6 85 17 ff ff ff 00            	mov byte ptr [ebp - 0xe9], 0
0x8049a92:   c7 45 9c 0b 6c d9 ed            	mov dword ptr [ebp - 0x64], 0xedd96c0b
0x8049a99:   c7 85 10 ff ff ff 55 fc bc cc   	mov dword ptr [ebp - 0xf0], 0xccbcfc55
0x8049aa3:   c7 45 98 f8 ff ff ff            	mov dword ptr [ebp - 0x68], 0xfffffff8
0x8049aaa:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x8049ab1:   eb 32                           	jmp 0x8049ae5 <func_1+0x2be>
0x8049ab3:   c6 45 e7 38                     	mov byte ptr [ebp - 0x19], 0x38
0x8049ab7:   c7 45 f0 00 0e 00 00            	mov dword ptr [ebp - 0x10], 0xe00
0x8049abe:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049ac1:   0f be c0                        	movsx eax, al
0x8049ac4:   8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x8049ac7:   83 e2 b8                        	and edx, 0xffffffb8
0x8049aca:   0f be fa                        	movsx edi, dl
0x8049acd:   99                              	cdq 
0x8049ace:   f7 ff                           	idiv edi
0x8049ad0:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049ad3:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049ad6:   89 c2                           	mov edx, eax
0x8049ad8:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049adc:   09 d0                           	or eax, edx
0x8049ade:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x8049ae1:   83 45 a0 01                     	add dword ptr [ebp - 0x60], 1
0x8049ae5:   83 7d a0 0c                     	cmp dword ptr [ebp - 0x60], 0xc
0x8049ae9:   74 c8                           	je 0x8049ab3 <func_1+0x28c>
0x8049aeb:   c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0x8049af2:   e9 c7 04 00 00                  	jmp 0x8049fbe <func_1+0x797>
0x8049af7:   c6 85 0f ff ff ff 01            	mov byte ptr [ebp - 0xf1], 1
0x8049afe:   c7 45 94 ff ff ff ff            	mov dword ptr [ebp - 0x6c], 0xffffffff
0x8049b05:   c6 45 93 55                     	mov byte ptr [ebp - 0x6d], 0x55
0x8049b09:   c7 85 08 ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0xf8], 0xfffffffa
0x8049b13:   c7 85 04 ff ff ff 47 e1 0a 3a   	mov dword ptr [ebp - 0xfc], 0x3a0ae147
0x8049b1d:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x8049b21:   0f 84 b0 02 00 00               	je 0x8049dd7 <func_1+0x5b0>
0x8049b27:   66 c7 85 ee fe ff ff f9 ff      	mov word ptr [ebp - 0x112], 0xfff9
0x8049b30:   c7 45 8c ff ff ff ff            	mov dword ptr [ebp - 0x74], 0xffffffff
0x8049b37:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x8049b3b:   83 e8 01                        	sub eax, 1
0x8049b3e:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x8049b41:   c6 45 ea 00                     	mov byte ptr [ebp - 0x16], 0
0x8049b45:   0f b6 45 ea                     	movzx eax, byte ptr [ebp - 0x16]
0x8049b49:   88 45 e9                        	mov byte ptr [ebp - 0x17], al
0x8049b4c:   83 7d e0 fc                     	cmp dword ptr [ebp - 0x20], -4
0x8049b50:   0f 94 c0                        	sete al
0x8049b53:   0f b6 d0                        	movzx edx, al
0x8049b56:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049b59:   0f b6 c0                        	movzx eax, al
0x8049b5c:   89 c1                           	mov ecx, eax
0x8049b5e:   d3 e2                           	shl edx, cl
0x8049b60:   89 d0                           	mov eax, edx
0x8049b62:   89 c3                           	mov ebx, eax
0x8049b64:   0f b7 85 ee fe ff ff            	movzx eax, word ptr [ebp - 0x112]
0x8049b6b:   ba 00 00 00 00                  	mov edx, 0
0x8049b70:   66 f7 f3                        	div bx
0x8049b73:   89 c2                           	mov edx, eax
0x8049b75:   0f bf c2                        	movsx eax, dx
0x8049b78:   69 c0 8b 08 00 00               	imul eax, eax, 0x88b
0x8049b7e:   c1 e8 10                        	shr eax, 0x10
0x8049b81:   89 c1                           	mov ecx, eax
0x8049b83:   66 c1 f9 0a                     	sar cx, 0xa
0x8049b87:   89 d0                           	mov eax, edx
0x8049b89:   66 c1 f8 0f                     	sar ax, 0xf
0x8049b8d:   29 c1                           	sub ecx, eax
0x8049b8f:   89 c8                           	mov eax, ecx
0x8049b91:   66 69 c0 de 77                  	imul ax, ax, 0x77de
0x8049b96:   29 c2                           	sub edx, eax
0x8049b98:   89 d0                           	mov eax, edx
0x8049b9a:   66 0f be 95 0f ff ff ff         	movsx dx, byte ptr [ebp - 0xf1]
0x8049ba2:   66 39 d0                        	cmp ax, dx
0x8049ba5:   0f 9c c0                        	setl al
0x8049ba8:   0f b6 d0                        	movzx edx, al
0x8049bab:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x8049bb2:   89 c1                           	mov ecx, eax
0x8049bb4:   d3 e2                           	shl edx, cl
0x8049bb6:   89 d0                           	mov eax, edx
0x8049bb8:   98                              	cwde 
0x8049bb9:   c1 e0 06                        	shl eax, 6
0x8049bbc:   89 c2                           	mov edx, eax
0x8049bbe:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x8049bc5:   39 c2                           	cmp edx, eax
0x8049bc7:   0f 95 c0                        	setne al
0x8049bca:   0f b6 d0                        	movzx edx, al
0x8049bcd:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x8049bd4:   01 d0                           	add eax, edx
0x8049bd6:   66 89 45 d6                     	mov word ptr [ebp - 0x2a], ax
0x8049bda:   0f bf 55 d6                     	movsx edx, word ptr [ebp - 0x2a]
0x8049bde:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x8049be5:   39 c2                           	cmp edx, eax
0x8049be7:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049bea:   88 45 e7                        	mov byte ptr [ebp - 0x19], al
0x8049bed:   0f be 45 e7                     	movsx eax, byte ptr [ebp - 0x19]
0x8049bf1:   8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x8049bf4:   0f be ca                        	movsx ecx, dl
0x8049bf7:   99                              	cdq 
0x8049bf8:   f7 f9                           	idiv ecx
0x8049bfa:   89 d0                           	mov eax, edx
0x8049bfc:   0f b6 c0                        	movzx eax, al
0x8049bff:   c1 f8 05                        	sar eax, 5
0x8049c02:   83 e0 04                        	and eax, 4
0x8049c05:   3d 4b af af 3e                  	cmp eax, 0x3eafaf4b
0x8049c0a:   0f 9f c0                        	setg al
0x8049c0d:   0f b6 c0                        	movzx eax, al
0x8049c10:   33 45 dc                        	xor eax, dword ptr [ebp - 0x24]
0x8049c13:   89 c1                           	mov ecx, eax
0x8049c15:   ba 41 76 20 33                  	mov edx, 0x33207641
0x8049c1a:   89 c8                           	mov eax, ecx
0x8049c1c:   f7 ea                           	imul edx
0x8049c1e:   c1 fa 1c                        	sar edx, 0x1c
0x8049c21:   89 c8                           	mov eax, ecx
0x8049c23:   c1 f8 1f                        	sar eax, 0x1f
0x8049c26:   29 c2                           	sub edx, eax
0x8049c28:   89 d0                           	mov eax, edx
0x8049c2a:   69 c0 f6 51 1d 50               	imul eax, eax, 0x501d51f6
0x8049c30:   29 c1                           	sub ecx, eax
0x8049c32:   c7 45 f0 ef 75 51 a8            	mov dword ptr [ebp - 0x10], 0xa85175ef
0x8049c39:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049c3c:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049c3f:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049c42:   83 e0 01                        	and eax, 1
0x8049c45:   66 89 45 d6                     	mov word ptr [ebp - 0x2a], ax
0x8049c49:   0f bf 55 d6                     	movsx edx, word ptr [ebp - 0x2a]
0x8049c4d:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x8049c54:   98                              	cwde 
0x8049c55:   0f af c2                        	imul eax, edx
0x8049c58:   85 c0                           	test eax, eax
0x8049c5a:   74 0b                           	je 0x8049c67 <func_1+0x440>
0x8049c5c:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x8049c60:   74 75                           	je 0x8049cd7 <func_1+0x4b0>
0x8049c62:   e9 e7 fc ff ff                  	jmp 0x804994e <func_1+0x127>
0x8049c67:   c6 85 ed fe ff ff ac            	mov byte ptr [ebp - 0x113], 0xac
0x8049c6e:   c7 85 e8 fe ff ff 49 36 b9 6c   	mov dword ptr [ebp - 0x118], 0x6cb93649
0x8049c78:   0f be 95 17 ff ff ff            	movsx edx, byte ptr [ebp - 0xe9]
0x8049c7f:   81 4d d0 f7 ff 00 00            	or dword ptr [ebp - 0x30], 0xfff7
0x8049c86:   0f b6 85 ed fe ff ff            	movzx eax, byte ptr [ebp - 0x113]
0x8049c8d:   22 85 0f ff ff ff               	and al, byte ptr [ebp - 0xf1]
0x8049c93:   c1 e0 04                        	shl eax, 4
0x8049c96:   88 45 cf                        	mov byte ptr [ebp - 0x31], al
0x8049c99:   80 7d cf 00                     	cmp byte ptr [ebp - 0x31], 0
0x8049c9d:   74 07                           	je 0x8049ca6 <func_1+0x47f>
0x8049c9f:   b8 01 00 00 00                  	mov eax, 1
0x8049ca4:   eb 05                           	jmp 0x8049cab <func_1+0x484>
0x8049ca6:   b8 00 00 00 00                  	mov eax, 0
0x8049cab:   39 d0                           	cmp eax, edx
0x8049cad:   0f 9f c0                        	setg al
0x8049cb0:   0f b6 d0                        	movzx edx, al
0x8049cb3:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x8049cba:   31 d0                           	xor eax, edx
0x8049cbc:   31 45 8c                        	xor dword ptr [ebp - 0x74], eax
0x8049cbf:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x8049cc3:   0f 85 01 03 00 00               	jne 0x8049fca <func_1+0x7a3>
0x8049cc9:   80 45 ce 01                     	add byte ptr [ebp - 0x32], 1
0x8049ccd:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049cd0:   98                              	cwde 
0x8049cd1:   c1 e0 0d                        	shl eax, 0xd
0x8049cd4:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049cd7:   0f b7 95 26 ff ff ff            	movzx edx, word ptr [ebp - 0xda]
0x8049cde:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x8049ce2:   74 0d                           	je 0x8049cf1 <func_1+0x4ca>
0x8049ce4:   80 7d 86 00                     	cmp byte ptr [ebp - 0x7a], 0
0x8049ce8:   74 07                           	je 0x8049cf1 <func_1+0x4ca>
0x8049cea:   b9 01 00 00 00                  	mov ecx, 1
0x8049cef:   eb 05                           	jmp 0x8049cf6 <func_1+0x4cf>
0x8049cf1:   b9 00 00 00 00                  	mov ecx, 0
0x8049cf6:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x8049cfa:   39 c1                           	cmp ecx, eax
0x8049cfc:   0f 95 c0                        	setne al
0x8049cff:   0f b6 c8                        	movzx ecx, al
0x8049d02:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049d05:   01 c1                           	add ecx, eax
0x8049d07:   0f b6 45 ce                     	movzx eax, byte ptr [ebp - 0x32]
0x8049d0b:   39 c1                           	cmp ecx, eax
0x8049d0d:   0f 9c c0                        	setl al
0x8049d10:   0f b6 c0                        	movzx eax, al
0x8049d13:   39 c2                           	cmp edx, eax
0x8049d15:   0f 9c c0                        	setl al
0x8049d18:   0f b6 c0                        	movzx eax, al
0x8049d1b:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049d1e:   c7 85 e4 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x11c], 1
0x8049d28:   c7 85 e0 fe ff ff 33 b5 92 32   	mov dword ptr [ebp - 0x120], 0x3292b533
0x8049d32:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x8049d36:   74 21                           	je 0x8049d59 <func_1+0x532>
0x8049d38:   0f bf 85 24 ff ff ff            	movsx eax, word ptr [ebp - 0xdc]
0x8049d3f:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049d42:   81 7d b0 bd d6 03 6f            	cmp dword ptr [ebp - 0x50], 0x6f03d6bd
0x8049d49:   0f 9f c0                        	setg al
0x8049d4c:   0f b6 d0                        	movzx edx, al
0x8049d4f:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x8049d56:   98                              	cwde 
0x8049d57:   39 c2                           	cmp edx, eax
0x8049d59:   c7 85 e4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x11c], 0
0x8049d63:   83 bd e4 fe ff ff 01            	cmp dword ptr [ebp - 0x11c], 1
0x8049d6a:   0f 9f c0                        	setg al
0x8049d6d:   0f b6 c0                        	movzx eax, al
0x8049d70:   89 85 08 ff ff ff               	mov dword ptr [ebp - 0xf8], eax
0x8049d76:   0f bf 45 d6                     	movsx eax, word ptr [ebp - 0x2a]
0x8049d7a:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049d7d:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049d80:   0b 45 d0                        	or eax, dword ptr [ebp - 0x30]
0x8049d83:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049d86:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049d89:   0b 85 e0 fe ff ff               	or eax, dword ptr [ebp - 0x120]
0x8049d8f:   31 85 08 ff ff ff               	xor dword ptr [ebp - 0xf8], eax
0x8049d95:   83 bd 08 ff ff ff 00            	cmp dword ptr [ebp - 0xf8], 0
0x8049d9c:   75 04                           	jne 0x8049da2 <func_1+0x57b>
0x8049d9e:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049da2:   80 6d cf 01                     	sub byte ptr [ebp - 0x31], 1
0x8049da6:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x8049daa:   80 7d ea 01                     	cmp byte ptr [ebp - 0x16], 1
0x8049dae:   0f 9e c2                        	setle dl
0x8049db1:   0f b6 ca                        	movzx ecx, dl
0x8049db4:   0f b6 55 93                     	movzx edx, byte ptr [ebp - 0x6d]
0x8049db8:   21 ca                           	and edx, ecx
0x8049dba:   39 d0                           	cmp eax, edx
0x8049dbc:   0f 95 c0                        	setne al
0x8049dbf:   0f b6 c0                        	movzx eax, al
0x8049dc2:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049dc5:   83 bd 04 ff ff ff 00            	cmp dword ptr [ebp - 0xfc], 0
0x8049dcc:   0f 84 e8 01 00 00               	je 0x8049fba <func_1+0x793>
0x8049dd2:   e9 f4 01 00 00                  	jmp 0x8049fcb <func_1+0x7a4>
0x8049dd7:   c7 85 00 ff ff ff e2 9a b8 4d   	mov dword ptr [ebp - 0x100], 0x4db89ae2
0x8049de1:   c7 85 fc fe ff ff 77 12 15 a6   	mov dword ptr [ebp - 0x104], 0xa6151277
0x8049deb:   c7 45 88 06 00 00 00            	mov dword ptr [ebp - 0x78], 6
0x8049df2:   80 7d e9 00                     	cmp byte ptr [ebp - 0x17], 0
0x8049df6:   74 30                           	je 0x8049e28 <func_1+0x601>
0x8049df8:   0f be 85 17 ff ff ff            	movsx eax, byte ptr [ebp - 0xe9]
0x8049dff:   33 45 b0                        	xor eax, dword ptr [ebp - 0x50]
0x8049e02:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049e05:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x8049e09:   75 06                           	jne 0x8049e11 <func_1+0x5ea>
0x8049e0b:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x8049e0f:   74 07                           	je 0x8049e18 <func_1+0x5f1>
0x8049e11:   b8 01 00 00 00                  	mov eax, 1
0x8049e16:   eb 05                           	jmp 0x8049e1d <func_1+0x5f6>
0x8049e18:   b8 00 00 00 00                  	mov eax, 0
0x8049e1d:   85 c0                           	test eax, eax
0x8049e1f:   74 07                           	je 0x8049e28 <func_1+0x601>
0x8049e21:   b8 01 00 00 00                  	mov eax, 1
0x8049e26:   eb 05                           	jmp 0x8049e2d <func_1+0x606>
0x8049e28:   b8 00 00 00 00                  	mov eax, 0
0x8049e2d:   0b 45 b0                        	or eax, dword ptr [ebp - 0x50]
0x8049e30:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049e33:   0f 9c c0                        	setl al
0x8049e36:   0f b6 c0                        	movzx eax, al
0x8049e39:   f7 d0                           	not eax
0x8049e3b:   0f b7 d0                        	movzx edx, ax
0x8049e3e:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049e41:   0f b7 c0                        	movzx eax, ax
0x8049e44:   29 c2                           	sub edx, eax
0x8049e46:   89 d0                           	mov eax, edx
0x8049e48:   83 f8 08                        	cmp eax, 8
0x8049e4b:   0f 95 c0                        	setne al
0x8049e4e:   0f b6 d0                        	movzx edx, al
0x8049e51:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049e54:   0f b6 c0                        	movzx eax, al
0x8049e57:   89 c1                           	mov ecx, eax
0x8049e59:   d3 e2                           	shl edx, cl
0x8049e5b:   89 d0                           	mov eax, edx
0x8049e5d:   85 c0                           	test eax, eax
0x8049e5f:   75 06                           	jne 0x8049e67 <func_1+0x640>
0x8049e61:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x8049e65:   74 07                           	je 0x8049e6e <func_1+0x647>
0x8049e67:   b8 01 00 00 00                  	mov eax, 1
0x8049e6c:   eb 05                           	jmp 0x8049e73 <func_1+0x64c>
0x8049e6e:   b8 00 00 00 00                  	mov eax, 0
0x8049e73:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049e76:   83 bd 04 ff ff ff f7            	cmp dword ptr [ebp - 0xfc], -9
0x8049e7d:   0f 96 c0                        	setbe al
0x8049e80:   0f b6 c0                        	movzx eax, al
0x8049e83:   09 85 00 ff ff ff               	or dword ptr [ebp - 0x100], eax
0x8049e89:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x8049e8f:   89 c1                           	mov ecx, eax
0x8049e91:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x8049e95:   ba 17 ca 00 00                  	mov edx, 0xca17
0x8049e9a:   29 c2                           	sub edx, eax
0x8049e9c:   89 d0                           	mov eax, edx
0x8049e9e:   33 85 10 ff ff ff               	xor eax, dword ptr [ebp - 0xf0]
0x8049ea4:   89 c2                           	mov edx, eax
0x8049ea6:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x8049eaa:   39 c2                           	cmp edx, eax
0x8049eac:   0f 9d c0                        	setge al
0x8049eaf:   0f b6 d0                        	movzx edx, al
0x8049eb2:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x8049eb6:   39 c2                           	cmp edx, eax
0x8049eb8:   0f 94 c0                        	sete al
0x8049ebb:   31 c1                           	xor ecx, eax
0x8049ebd:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049ec0:   89 c2                           	mov edx, eax
0x8049ec2:   0f b6 c1                        	movzx eax, cl
0x8049ec5:   f6 f2                           	div dl
0x8049ec7:   0f b6 c4                        	movzx eax, ah
0x8049eca:   0f be d0                        	movsx edx, al
0x8049ecd:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049ed0:   0f be c0                        	movsx eax, al
0x8049ed3:   89 c1                           	mov ecx, eax
0x8049ed5:   d3 fa                           	sar edx, cl
0x8049ed7:   89 d0                           	mov eax, edx
0x8049ed9:   21 45 98                        	and dword ptr [ebp - 0x68], eax
0x8049edc:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049edf:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049ee2:   c7 45 94 00 00 00 00            	mov dword ptr [ebp - 0x6c], 0
0x8049ee9:   eb 77                           	jmp 0x8049f62 <func_1+0x73b>
0x8049eeb:   c7 85 f0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x110], 1
0x8049ef5:   83 bd f0 fe ff ff 01            	cmp dword ptr [ebp - 0x110], 1
0x8049efc:   0f 9f c0                        	setg al
0x8049eff:   0f b6 c0                        	movzx eax, al
0x8049f02:   89 85 fc fe ff ff               	mov dword ptr [ebp - 0x104], eax
0x8049f08:   81 bd fc fe ff ff 69 f5 00 00   	cmp dword ptr [ebp - 0x104], 0xf569
0x8049f12:   0f 9e c0                        	setle al
0x8049f15:   0f b6 c0                        	movzx eax, al
0x8049f18:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049f1b:   75 06                           	jne 0x8049f23 <func_1+0x6fc>
0x8049f1d:   80 7d ea 00                     	cmp byte ptr [ebp - 0x16], 0
0x8049f21:   74 07                           	je 0x8049f2a <func_1+0x703>
0x8049f23:   b8 01 00 00 00                  	mov eax, 1
0x8049f28:   eb 05                           	jmp 0x8049f2f <func_1+0x708>
0x8049f2a:   b8 00 00 00 00                  	mov eax, 0
0x8049f2f:   0f b7 d0                        	movzx edx, ax
0x8049f32:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x8049f36:   89 c1                           	mov ecx, eax
0x8049f38:   d3 fa                           	sar edx, cl
0x8049f3a:   89 d0                           	mov eax, edx
0x8049f3c:   21 45 b0                        	and dword ptr [ebp - 0x50], eax
0x8049f3f:   0f be 45 87                     	movsx eax, byte ptr [ebp - 0x79]
0x8049f43:   8d 50 fe                        	lea edx, [eax - 2]
0x8049f46:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049f49:   09 d0                           	or eax, edx
0x8049f4b:   0c fa                           	or al, 0xfa
0x8049f4d:   89 c2                           	mov edx, eax
0x8049f4f:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049f52:   09 d0                           	or eax, edx
0x8049f54:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049f57:   83 8d fc fe ff ff fb            	or dword ptr [ebp - 0x104], 0xfffffffb
0x8049f5e:   83 6d 94 01                     	sub dword ptr [ebp - 0x6c], 1
0x8049f62:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x8049f66:   78 83                           	js 0x8049eeb <func_1+0x6c4>
0x8049f68:   83 6d c4 01                     	sub dword ptr [ebp - 0x3c], 1
0x8049f6c:   c6 45 93 1d                     	mov byte ptr [ebp - 0x6d], 0x1d
0x8049f70:   eb 42                           	jmp 0x8049fb4 <func_1+0x78d>
0x8049f72:   c6 85 fb fe ff ff d7            	mov byte ptr [ebp - 0x105], 0xd7
0x8049f79:   c7 85 f4 fe ff ff 09 00 00 00   	mov dword ptr [ebp - 0x10c], 9
0x8049f83:   0f be 85 fb fe ff ff            	movsx eax, byte ptr [ebp - 0x105]
0x8049f8a:   39 85 7c ff ff ff               	cmp dword ptr [ebp - 0x84], eax
0x8049f90:   0f 9e c0                        	setle al
0x8049f93:   0f b6 c0                        	movzx eax, al
0x8049f96:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049f99:   83 45 c0 01                     	add dword ptr [ebp - 0x40], 1
0x8049f9d:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x8049fa3:   89 85 08 ff ff ff               	mov dword ptr [ebp - 0xf8], eax
0x8049fa9:   0f be 45 e7                     	movsx eax, byte ptr [ebp - 0x19]
0x8049fad:   31 45 a0                        	xor dword ptr [ebp - 0x60], eax
0x8049fb0:   80 45 93 03                     	add byte ptr [ebp - 0x6d], 3
0x8049fb4:   80 7d 93 23                     	cmp byte ptr [ebp - 0x6d], 0x23
0x8049fb8:   76 b8                           	jbe 0x8049f72 <func_1+0x74b>
0x8049fba:   83 45 ac 01                     	add dword ptr [ebp - 0x54], 1
0x8049fbe:   83 7d ac 13                     	cmp dword ptr [ebp - 0x54], 0x13
0x8049fc2:   0f 8f 2f fb ff ff               	jg 0x8049af7 <func_1+0x2d0>
0x8049fc8:   eb 01                           	jmp 0x8049fcb <func_1+0x7a4>
0x8049fca:   90                              	nop 
0x8049fcb:   83 45 a8 02                     	add dword ptr [ebp - 0x58], 2
0x8049fcf:   83 7d a8 0a                     	cmp dword ptr [ebp - 0x58], 0xa
0x8049fd3:   0f 85 b2 fa ff ff               	jne 0x8049a8b <func_1+0x264>
0x8049fd9:   66 0f be 45 86                  	movsx ax, byte ptr [ebp - 0x7a]
0x8049fde:   8b 55 a0                        	mov edx, dword ptr [ebp - 0x60]
0x8049fe1:   31 d0                           	xor eax, edx
0x8049fe3:   89 c2                           	mov edx, eax
0x8049fe5:   0f b7 c2                        	movzx eax, dx
0x8049fe8:   69 c0 d9 8f 00 00               	imul eax, eax, 0x8fd9
0x8049fee:   c1 e8 10                        	shr eax, 0x10
0x8049ff1:   66 c1 e8 0e                     	shr ax, 0xe
0x8049ff5:   66 69 c0 e6 71                  	imul ax, ax, 0x71e6
0x8049ffa:   29 c2                           	sub edx, eax
0x8049ffc:   89 d0                           	mov eax, edx
0x8049ffe:   0f b7 c0                        	movzx eax, ax
0x804a001:   09 45 b0                        	or dword ptr [ebp - 0x50], eax
0x804a004:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a008:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a00e:   23 45 d0                        	and eax, dword ptr [ebp - 0x30]
0x804a011:   0d 56 66 51 b8                  	or eax, 0xb8516656
0x804a016:   39 85 68 ff ff ff               	cmp dword ptr [ebp - 0x98], eax
0x804a01c:   0f 95 c0                        	setne al
0x804a01f:   0f b6 c0                        	movzx eax, al
0x804a022:   0f bf 8d 24 ff ff ff            	movsx ecx, word ptr [ebp - 0xdc]
0x804a029:   99                              	cdq 
0x804a02a:   f7 f9                           	idiv ecx
0x804a02c:   89 d0                           	mov eax, edx
0x804a02e:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x804a031:   0f 95 c0                        	setne al
0x804a034:   88 85 63 ff ff ff               	mov byte ptr [ebp - 0x9d], al
0x804a03a:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a03e:   0f b7 55 be                     	movzx edx, word ptr [ebp - 0x42]
0x804a042:   0f b6 8d 7b ff ff ff            	movzx ecx, byte ptr [ebp - 0x85]
0x804a049:   0f bf 75 84                     	movsx esi, word ptr [ebp - 0x7c]
0x804a04d:   89 b5 d0 fe ff ff               	mov dword ptr [ebp - 0x130], esi
0x804a053:   0f b6 7d ce                     	movzx edi, byte ptr [ebp - 0x32]
0x804a057:   89 bd cc fe ff ff               	mov dword ptr [ebp - 0x134], edi
0x804a05d:   0f be 5d 86                     	movsx ebx, byte ptr [ebp - 0x7a]
0x804a061:   89 9d c8 fe ff ff               	mov dword ptr [ebp - 0x138], ebx
0x804a067:   0f be 75 87                     	movsx esi, byte ptr [ebp - 0x79]
0x804a06b:   89 b5 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], esi
0x804a071:   0f b6 7d cf                     	movzx edi, byte ptr [ebp - 0x31]
0x804a075:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x804a07b:   0f bf 5d d6                     	movsx ebx, word ptr [ebp - 0x2a]
0x804a07f:   89 9d bc fe ff ff               	mov dword ptr [ebp - 0x144], ebx
0x804a085:   0f be 75 e9                     	movsx esi, byte ptr [ebp - 0x17]
0x804a089:   89 b5 b8 fe ff ff               	mov dword ptr [ebp - 0x148], esi
0x804a08f:   0f be 7d ea                     	movsx edi, byte ptr [ebp - 0x16]
0x804a093:   89 bd b4 fe ff ff               	mov dword ptr [ebp - 0x14c], edi
0x804a099:   0f be 7d eb                     	movsx edi, byte ptr [ebp - 0x15]
0x804a09d:   0f be 75 e7                     	movsx esi, byte ptr [ebp - 0x19]
0x804a0a1:   0f b6 5d e8                     	movzx ebx, byte ptr [ebp - 0x18]
0x804a0a5:   50                              	push eax
0x804a0a6:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a0a9:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a0af:   52                              	push edx
0x804a0b0:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a0b6:   51                              	push ecx
0x804a0b7:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a0ba:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a0bd:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a0c3:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a0c6:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a0c9:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a0cf:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a0d5:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a0db:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a0e1:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a0e7:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a0ea:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a0f0:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a0f6:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a0fc:   57                              	push edi
0x804a0fd:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a100:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a103:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a106:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a109:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a10c:   56                              	push esi
0x804a10d:   53                              	push ebx
0x804a10e:   e8 41 f5 ff ff                  	call 0x8049654 <set_var>
0x804a113:   83 c4 70                        	add esp, 0x70
0x804a116:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x804a11a:   e9 b7 03 00 00                  	jmp 0x804a4d6 <func_1+0xcaf>
0x804a11f:   c7 85 54 ff ff ff 18 2a 96 35   	mov dword ptr [ebp - 0xac], 0x35962a18
0x804a129:   c7 85 50 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xb0], 0xffffffff
0x804a133:   c7 85 4c ff ff ff ce b7 65 d6   	mov dword ptr [ebp - 0xb4], 0xd665b7ce
0x804a13d:   66 c7 85 4a ff ff ff fa ff      	mov word ptr [ebp - 0xb6], 0xfffa
0x804a146:   c7 85 44 ff ff ff d6 b0 7d e7   	mov dword ptr [ebp - 0xbc], 0xe77db0d6
0x804a150:   66 c7 85 42 ff ff ff 09 00      	mov word ptr [ebp - 0xbe], 9
0x804a159:   c7 85 3c ff ff ff 7e 9f e7 46   	mov dword ptr [ebp - 0xc4], 0x46e79f7e
0x804a163:   80 7d ea 00                     	cmp byte ptr [ebp - 0x16], 0
0x804a167:   0f 9f c0                        	setg al
0x804a16a:   0f b6 c0                        	movzx eax, al
0x804a16d:   89 85 54 ff ff ff               	mov dword ptr [ebp - 0xac], eax
0x804a173:   66 83 bd 42 ff ff ff 00         	cmp word ptr [ebp - 0xbe], 0
0x804a17b:   0f 94 c0                        	sete al
0x804a17e:   0f b6 c0                        	movzx eax, al
0x804a181:   21 85 3c ff ff ff               	and dword ptr [ebp - 0xc4], eax
0x804a187:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a18d:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a190:   0f b7 85 60 ff ff ff            	movzx eax, word ptr [ebp - 0xa0]
0x804a197:   66 35 22 8b                     	xor ax, 0x8b22
0x804a19b:   66 89 85 60 ff ff ff            	mov word ptr [ebp - 0xa0], ax
0x804a1a2:   0f b7 85 60 ff ff ff            	movzx eax, word ptr [ebp - 0xa0]
0x804a1a9:   0f be 55 eb                     	movsx edx, byte ptr [ebp - 0x15]
0x804a1ad:   89 d6                           	mov esi, edx
0x804a1af:   81 e6 2b 9f 6e 28               	and esi, 0x286e9f2b
0x804a1b5:   ba 00 00 00 00                  	mov edx, 0
0x804a1ba:   f7 f6                           	div esi
0x804a1bc:   89 85 44 ff ff ff               	mov dword ptr [ebp - 0xbc], eax
0x804a1c2:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a1c8:   0f be c0                        	movsx eax, al
0x804a1cb:   0f be 4d eb                     	movsx ecx, byte ptr [ebp - 0x15]
0x804a1cf:   99                              	cdq 
0x804a1d0:   f7 f9                           	idiv ecx
0x804a1d2:   0f b6 85 63 ff ff ff            	movzx eax, byte ptr [ebp - 0x9d]
0x804a1d9:   39 c2                           	cmp edx, eax
0x804a1db:   0f 9c c0                        	setl al
0x804a1de:   0f b6 d0                        	movzx edx, al
0x804a1e1:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a1e7:   0f b6 c0                        	movzx eax, al
0x804a1ea:   89 c1                           	mov ecx, eax
0x804a1ec:   d3 e2                           	shl edx, cl
0x804a1ee:   89 d0                           	mov eax, edx
0x804a1f0:   83 f8 2d                        	cmp eax, 0x2d
0x804a1f3:   75 07                           	jne 0x804a1fc <func_1+0x9d5>
0x804a1f5:   ba 03 00 00 00                  	mov edx, 3
0x804a1fa:   eb 05                           	jmp 0x804a201 <func_1+0x9da>
0x804a1fc:   ba 02 00 00 00                  	mov edx, 2
0x804a201:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a207:   39 c2                           	cmp edx, eax
0x804a209:   0f 97 c0                        	seta al
0x804a20c:   0f b6 c0                        	movzx eax, al
0x804a20f:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x804a212:   73 09                           	jae 0x804a21d <func_1+0x9f6>
0x804a214:   83 bd 44 ff ff ff 00            	cmp dword ptr [ebp - 0xbc], 0
0x804a21b:   74 07                           	je 0x804a224 <func_1+0x9fd>
0x804a21d:   ba 01 00 00 00                  	mov edx, 1
0x804a222:   eb 05                           	jmp 0x804a229 <func_1+0xa02>
0x804a224:   ba 00 00 00 00                  	mov edx, 0
0x804a229:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x804a22d:   39 c2                           	cmp edx, eax
0x804a22f:   0f 94 c0                        	sete al
0x804a232:   0f b6 c0                        	movzx eax, al
0x804a235:   89 85 54 ff ff ff               	mov dword ptr [ebp - 0xac], eax
0x804a23b:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a23e:   0f b6 d0                        	movzx edx, al
0x804a241:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a247:   0f b6 c0                        	movzx eax, al
0x804a24a:   29 c2                           	sub edx, eax
0x804a24c:   89 d0                           	mov eax, edx
0x804a24e:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a251:   0f be 55 e9                     	movsx edx, byte ptr [ebp - 0x17]
0x804a255:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x804a25c:   0f 95 c0                        	setne al
0x804a25f:   0f b6 c0                        	movzx eax, al
0x804a262:   0f bf c8                        	movsx ecx, ax
0x804a265:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a268:   98                              	cwde 
0x804a269:   0f af c1                        	imul eax, ecx
0x804a26c:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x804a26f:   0f 96 c0                        	setbe al
0x804a272:   0f b6 c0                        	movzx eax, al
0x804a275:   09 d0                           	or eax, edx
0x804a277:   31 45 a0                        	xor dword ptr [ebp - 0x60], eax
0x804a27a:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a27d:   3b 45 a0                        	cmp eax, dword ptr [ebp - 0x60]
0x804a280:   0f 9f c0                        	setg al
0x804a283:   0f b6 c0                        	movzx eax, al
0x804a286:   39 85 54 ff ff ff               	cmp dword ptr [ebp - 0xac], eax
0x804a28c:   0f 8d ac 00 00 00               	jge 0x804a33e <func_1+0xb17>
0x804a292:   c6 85 2f ff ff ff 26            	mov byte ptr [ebp - 0xd1], 0x26
0x804a299:   c7 85 28 ff ff ff 77 ac 11 09   	mov dword ptr [ebp - 0xd8], 0x911ac77
0x804a2a3:   0f b6 85 2f ff ff ff            	movzx eax, byte ptr [ebp - 0xd1]
0x804a2aa:   88 45 cf                        	mov byte ptr [ebp - 0x31], al
0x804a2ad:   0f b6 55 cf                     	movzx edx, byte ptr [ebp - 0x31]
0x804a2b1:   0f b7 85 60 ff ff ff            	movzx eax, word ptr [ebp - 0xa0]
0x804a2b8:   8b 4d c0                        	mov ecx, dword ptr [ebp - 0x40]
0x804a2bb:   0f be c9                        	movsx ecx, cl
0x804a2be:   8d 1c cd 00 00 00 00            	lea ebx, [ecx*8]
0x804a2c5:   0f b6 4d e8                     	movzx ecx, byte ptr [ebp - 0x18]
0x804a2c9:   31 d9                           	xor ecx, ebx
0x804a2cb:   39 c8                           	cmp eax, ecx
0x804a2cd:   0f 9c c0                        	setl al
0x804a2d0:   0f b6 c0                        	movzx eax, al
0x804a2d3:   39 c2                           	cmp edx, eax
0x804a2d5:   0f be 55 86                     	movsx edx, byte ptr [ebp - 0x7a]
0x804a2d9:   66 81 bd 4a ff ff ff fa 00      	cmp word ptr [ebp - 0xb6], 0xfa
0x804a2e2:   0f 94 c0                        	sete al
0x804a2e5:   0f b6 c8                        	movzx ecx, al
0x804a2e8:   0f b7 85 4a ff ff ff            	movzx eax, word ptr [ebp - 0xb6]
0x804a2ef:   39 c1                           	cmp ecx, eax
0x804a2f1:   0f 9d c0                        	setge al
0x804a2f4:   0f b6 c0                        	movzx eax, al
0x804a2f7:   01 d0                           	add eax, edx
0x804a2f9:   09 45 f0                        	or dword ptr [ebp - 0x10], eax
0x804a2fc:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a2ff:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a302:   66 83 6d be 01                  	sub word ptr [ebp - 0x42], 1
0x804a307:   c7 85 28 ff ff ff 9f 13 6c bb   	mov dword ptr [ebp - 0xd8], 0xbb6c139f
0x804a311:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a317:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a31a:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a31d:   89 85 54 ff ff ff               	mov dword ptr [ebp - 0xac], eax
0x804a323:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a329:   0f b7 c0                        	movzx eax, ax
0x804a32c:   f7 d8                           	neg eax
0x804a32e:   89 c2                           	mov edx, eax
0x804a330:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a334:   09 d0                           	or eax, edx
0x804a336:   88 45 b7                        	mov byte ptr [ebp - 0x49], al
0x804a339:   e9 b6 00 00 00                  	jmp 0x804a3f4 <func_1+0xbcd>
0x804a33e:   66 c7 85 3a ff ff ff d8 9d      	mov word ptr [ebp - 0xc6], 0x9dd8
0x804a347:   c7 85 34 ff ff ff ed 01 75 90   	mov dword ptr [ebp - 0xcc], 0x907501ed
0x804a351:   c7 85 30 ff ff ff 36 7d 0a 0a   	mov dword ptr [ebp - 0xd0], 0xa0a7d36
0x804a35b:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a35e:   0f b6 d0                        	movzx edx, al
0x804a361:   0f b6 85 63 ff ff ff            	movzx eax, byte ptr [ebp - 0x9d]
0x804a368:   f7 d0                           	not eax
0x804a36a:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804a36d:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a370:   0f b6 c0                        	movzx eax, al
0x804a373:   89 c1                           	mov ecx, eax
0x804a375:   d3 fa                           	sar edx, cl
0x804a377:   0f bf 85 3a ff ff ff            	movsx eax, word ptr [ebp - 0xc6]
0x804a37e:   39 c2                           	cmp edx, eax
0x804a380:   7f 07                           	jg 0x804a389 <func_1+0xb62>
0x804a382:   b8 01 00 00 00                  	mov eax, 1
0x804a387:   eb 05                           	jmp 0x804a38e <func_1+0xb67>
0x804a389:   b8 00 00 00 00                  	mov eax, 0
0x804a38e:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x804a394:   0f be 55 e9                     	movsx edx, byte ptr [ebp - 0x17]
0x804a398:   0f bf 45 d6                     	movsx eax, word ptr [ebp - 0x2a]
0x804a39c:   39 c2                           	cmp edx, eax
0x804a39e:   7d 0d                           	jge 0x804a3ad <func_1+0xb86>
0x804a3a0:   80 7d cf 00                     	cmp byte ptr [ebp - 0x31], 0
0x804a3a4:   74 07                           	je 0x804a3ad <func_1+0xb86>
0x804a3a6:   b8 01 00 00 00                  	mov eax, 1
0x804a3ab:   eb 05                           	jmp 0x804a3b2 <func_1+0xb8b>
0x804a3ad:   b8 00 00 00 00                  	mov eax, 0
0x804a3b2:   0f be d0                        	movsx edx, al
0x804a3b5:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a3b8:   0f be c0                        	movsx eax, al
0x804a3bb:   0f af c2                        	imul eax, edx
0x804a3be:   89 85 30 ff ff ff               	mov dword ptr [ebp - 0xd0], eax
0x804a3c4:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a3ca:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a3cd:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a3d0:   89 85 54 ff ff ff               	mov dword ptr [ebp - 0xac], eax
0x804a3d6:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804a3dc:   83 e8 09                        	sub eax, 9
0x804a3df:   0f b6 c0                        	movzx eax, al
0x804a3e2:   c1 e0 06                        	shl eax, 6
0x804a3e5:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x804a3eb:   0f 9c c0                        	setl al
0x804a3ee:   0f b6 c0                        	movzx eax, al
0x804a3f1:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a3f4:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a3f8:   0f b7 55 be                     	movzx edx, word ptr [ebp - 0x42]
0x804a3fc:   0f b6 8d 7b ff ff ff            	movzx ecx, byte ptr [ebp - 0x85]
0x804a403:   0f bf 5d 84                     	movsx ebx, word ptr [ebp - 0x7c]
0x804a407:   89 9d d0 fe ff ff               	mov dword ptr [ebp - 0x130], ebx
0x804a40d:   0f b6 75 ce                     	movzx esi, byte ptr [ebp - 0x32]
0x804a411:   89 b5 cc fe ff ff               	mov dword ptr [ebp - 0x134], esi
0x804a417:   0f be 7d 86                     	movsx edi, byte ptr [ebp - 0x7a]
0x804a41b:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x804a421:   0f be 5d 87                     	movsx ebx, byte ptr [ebp - 0x79]
0x804a425:   89 9d c4 fe ff ff               	mov dword ptr [ebp - 0x13c], ebx
0x804a42b:   0f b6 75 cf                     	movzx esi, byte ptr [ebp - 0x31]
0x804a42f:   89 b5 c0 fe ff ff               	mov dword ptr [ebp - 0x140], esi
0x804a435:   0f bf 7d d6                     	movsx edi, word ptr [ebp - 0x2a]
0x804a439:   89 bd bc fe ff ff               	mov dword ptr [ebp - 0x144], edi
0x804a43f:   0f be 5d e9                     	movsx ebx, byte ptr [ebp - 0x17]
0x804a443:   89 9d b8 fe ff ff               	mov dword ptr [ebp - 0x148], ebx
0x804a449:   0f be 75 ea                     	movsx esi, byte ptr [ebp - 0x16]
0x804a44d:   89 b5 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], esi
0x804a453:   0f be 7d eb                     	movsx edi, byte ptr [ebp - 0x15]
0x804a457:   0f be 75 e7                     	movsx esi, byte ptr [ebp - 0x19]
0x804a45b:   0f b6 5d e8                     	movzx ebx, byte ptr [ebp - 0x18]
0x804a45f:   50                              	push eax
0x804a460:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a463:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a469:   52                              	push edx
0x804a46a:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a470:   51                              	push ecx
0x804a471:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a474:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a477:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a47d:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a480:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a483:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a489:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a48f:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a495:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a49b:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a4a1:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a4a4:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a4aa:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a4b0:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a4b6:   57                              	push edi
0x804a4b7:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a4ba:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a4bd:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a4c0:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a4c3:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a4c6:   56                              	push esi
0x804a4c7:   53                              	push ebx
0x804a4c8:   e8 87 f1 ff ff                  	call 0x8049654 <set_var>
0x804a4cd:   83 c4 70                        	add esp, 0x70
0x804a4d0:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x804a4d6:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a4d9:   5b                              	pop ebx
0x804a4da:   5e                              	pop esi
0x804a4db:   5f                              	pop edi
0x804a4dc:   5d                              	pop ebp
0x804a4dd:   c3                              	ret 
; function: main at 0x804a4de -- 0x804a8b6
0x804a4de:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a4e2:   83 e4 f0                        	and esp, 0xfffffff0
0x804a4e5:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a4e8:   55                              	push ebp
0x804a4e9:   89 e5                           	mov ebp, esp
0x804a4eb:   53                              	push ebx
0x804a4ec:   51                              	push ecx
0x804a4ed:   83 ec 10                        	sub esp, 0x10
0x804a4f0:   e8 9b de ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a4f5:   81 c3 0b 2b 00 00               	add ebx, 0x2b0b
0x804a4fb:   89 c8                           	mov eax, ecx
0x804a4fd:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a504:   83 38 02                        	cmp dword ptr [eax], 2
0x804a507:   75 26                           	jne 0x804a52f <main+0x51>
0x804a509:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a50c:   83 c0 04                        	add eax, 4
0x804a50f:   8b 00                           	mov eax, dword ptr [eax]
0x804a511:   83 ec 08                        	sub esp, 8
0x804a514:   8d 93 9c d9 ff ff               	lea edx, [ebx - 0x2664]
0x804a51a:   52                              	push edx
0x804a51b:   50                              	push eax
0x804a51c:   e8 df dd ff ff                  	call 0x8048300 <strcmp>
0x804a521:   83 c4 10                        	add esp, 0x10
0x804a524:   85 c0                           	test eax, eax
0x804a526:   75 07                           	jne 0x804a52f <main+0x51>
0x804a528:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a52f:   e8 22 df ff ff                  	call 0x8048456 <platform_main_begin>
0x804a534:   e8 32 ef ff ff                  	call 0x804946b <crc32_gentab>
0x804a539:   e8 e9 f2 ff ff                  	call 0x8049827 <func_1>
0x804a53e:   0f b6 83 24 00 00 00            	movzx eax, byte ptr [ebx + 0x24]
0x804a545:   0f b6 c0                        	movzx eax, al
0x804a548:   83 ec 04                        	sub esp, 4
0x804a54b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a54e:   8d 93 9e d9 ff ff               	lea edx, [ebx - 0x2662]
0x804a554:   52                              	push edx
0x804a555:   50                              	push eax
0x804a556:   e8 1c f0 ff ff                  	call 0x8049577 <transparent_crc>
0x804a55b:   83 c4 10                        	add esp, 0x10
0x804a55e:   0f b6 83 25 00 00 00            	movzx eax, byte ptr [ebx + 0x25]
0x804a565:   0f be c0                        	movsx eax, al
0x804a568:   83 ec 04                        	sub esp, 4
0x804a56b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a56e:   8d 93 a2 d9 ff ff               	lea edx, [ebx - 0x265e]
0x804a574:   52                              	push edx
0x804a575:   50                              	push eax
0x804a576:   e8 fc ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a57b:   83 c4 10                        	add esp, 0x10
0x804a57e:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a584:   83 ec 04                        	sub esp, 4
0x804a587:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a58a:   8d 93 a6 d9 ff ff               	lea edx, [ebx - 0x265a]
0x804a590:   52                              	push edx
0x804a591:   50                              	push eax
0x804a592:   e8 e0 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a597:   83 c4 10                        	add esp, 0x10
0x804a59a:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a5a0:   83 ec 04                        	sub esp, 4
0x804a5a3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a5a6:   8d 93 ab d9 ff ff               	lea edx, [ebx - 0x2655]
0x804a5ac:   52                              	push edx
0x804a5ad:   50                              	push eax
0x804a5ae:   e8 c4 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a5b3:   83 c4 10                        	add esp, 0x10
0x804a5b6:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804a5bc:   83 ec 04                        	sub esp, 4
0x804a5bf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a5c2:   8d 93 b0 d9 ff ff               	lea edx, [ebx - 0x2650]
0x804a5c8:   52                              	push edx
0x804a5c9:   50                              	push eax
0x804a5ca:   e8 a8 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a5cf:   83 c4 10                        	add esp, 0x10
0x804a5d2:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a5d8:   89 c2                           	mov edx, eax
0x804a5da:   83 ec 04                        	sub esp, 4
0x804a5dd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a5e0:   8d 83 b5 d9 ff ff               	lea eax, [ebx - 0x264b]
0x804a5e6:   50                              	push eax
0x804a5e7:   52                              	push edx
0x804a5e8:   e8 8a ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a5ed:   83 c4 10                        	add esp, 0x10
0x804a5f0:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804a5f6:   83 ec 04                        	sub esp, 4
0x804a5f9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a5fc:   8d 93 ba d9 ff ff               	lea edx, [ebx - 0x2646]
0x804a602:   52                              	push edx
0x804a603:   50                              	push eax
0x804a604:   e8 6e ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a609:   83 c4 10                        	add esp, 0x10
0x804a60c:   0f b6 83 3c 00 00 00            	movzx eax, byte ptr [ebx + 0x3c]
0x804a613:   0f be c0                        	movsx eax, al
0x804a616:   83 ec 04                        	sub esp, 4
0x804a619:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a61c:   8d 93 bf d9 ff ff               	lea edx, [ebx - 0x2641]
0x804a622:   52                              	push edx
0x804a623:   50                              	push eax
0x804a624:   e8 4e ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a629:   83 c4 10                        	add esp, 0x10
0x804a62c:   0f b6 83 3d 00 00 00            	movzx eax, byte ptr [ebx + 0x3d]
0x804a633:   0f be c0                        	movsx eax, al
0x804a636:   83 ec 04                        	sub esp, 4
0x804a639:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a63c:   8d 93 c4 d9 ff ff               	lea edx, [ebx - 0x263c]
0x804a642:   52                              	push edx
0x804a643:   50                              	push eax
0x804a644:   e8 2e ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a649:   83 c4 10                        	add esp, 0x10
0x804a64c:   0f b6 83 3e 00 00 00            	movzx eax, byte ptr [ebx + 0x3e]
0x804a653:   0f be c0                        	movsx eax, al
0x804a656:   83 ec 04                        	sub esp, 4
0x804a659:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a65c:   8d 93 c9 d9 ff ff               	lea edx, [ebx - 0x2637]
0x804a662:   52                              	push edx
0x804a663:   50                              	push eax
0x804a664:   e8 0e ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a669:   83 c4 10                        	add esp, 0x10
0x804a66c:   0f b7 83 40 00 00 00            	movzx eax, word ptr [ebx + 0x40]
0x804a673:   98                              	cwde 
0x804a674:   83 ec 04                        	sub esp, 4
0x804a677:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a67a:   8d 93 ce d9 ff ff               	lea edx, [ebx - 0x2632]
0x804a680:   52                              	push edx
0x804a681:   50                              	push eax
0x804a682:   e8 f0 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a687:   83 c4 10                        	add esp, 0x10
0x804a68a:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804a690:   83 ec 04                        	sub esp, 4
0x804a693:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a696:   8d 93 d3 d9 ff ff               	lea edx, [ebx - 0x262d]
0x804a69c:   52                              	push edx
0x804a69d:   50                              	push eax
0x804a69e:   e8 d4 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6a3:   83 c4 10                        	add esp, 0x10
0x804a6a6:   0f b6 83 48 00 00 00            	movzx eax, byte ptr [ebx + 0x48]
0x804a6ad:   0f b6 c0                        	movzx eax, al
0x804a6b0:   83 ec 04                        	sub esp, 4
0x804a6b3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6b6:   8d 93 d9 d9 ff ff               	lea edx, [ebx - 0x2627]
0x804a6bc:   52                              	push edx
0x804a6bd:   50                              	push eax
0x804a6be:   e8 b4 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6c3:   83 c4 10                        	add esp, 0x10
0x804a6c6:   0f b6 83 49 00 00 00            	movzx eax, byte ptr [ebx + 0x49]
0x804a6cd:   0f be c0                        	movsx eax, al
0x804a6d0:   83 ec 04                        	sub esp, 4
0x804a6d3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6d6:   8d 93 df d9 ff ff               	lea edx, [ebx - 0x2621]
0x804a6dc:   52                              	push edx
0x804a6dd:   50                              	push eax
0x804a6de:   e8 94 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6e3:   83 c4 10                        	add esp, 0x10
0x804a6e6:   0f b6 83 4a 00 00 00            	movzx eax, byte ptr [ebx + 0x4a]
0x804a6ed:   0f be c0                        	movsx eax, al
0x804a6f0:   83 ec 04                        	sub esp, 4
0x804a6f3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6f6:   8d 93 e5 d9 ff ff               	lea edx, [ebx - 0x261b]
0x804a6fc:   52                              	push edx
0x804a6fd:   50                              	push eax
0x804a6fe:   e8 74 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a703:   83 c4 10                        	add esp, 0x10
0x804a706:   0f b6 83 4b 00 00 00            	movzx eax, byte ptr [ebx + 0x4b]
0x804a70d:   0f b6 c0                        	movzx eax, al
0x804a710:   83 ec 04                        	sub esp, 4
0x804a713:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a716:   8d 93 eb d9 ff ff               	lea edx, [ebx - 0x2615]
0x804a71c:   52                              	push edx
0x804a71d:   50                              	push eax
0x804a71e:   e8 54 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a723:   83 c4 10                        	add esp, 0x10
0x804a726:   0f b7 83 4c 00 00 00            	movzx eax, word ptr [ebx + 0x4c]
0x804a72d:   98                              	cwde 
0x804a72e:   83 ec 04                        	sub esp, 4
0x804a731:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a734:   8d 93 f1 d9 ff ff               	lea edx, [ebx - 0x260f]
0x804a73a:   52                              	push edx
0x804a73b:   50                              	push eax
0x804a73c:   e8 36 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a741:   83 c4 10                        	add esp, 0x10
0x804a744:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804a74a:   89 c2                           	mov edx, eax
0x804a74c:   83 ec 04                        	sub esp, 4
0x804a74f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a752:   8d 83 f7 d9 ff ff               	lea eax, [ebx - 0x2609]
0x804a758:   50                              	push eax
0x804a759:   52                              	push edx
0x804a75a:   e8 18 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a75f:   83 c4 10                        	add esp, 0x10
0x804a762:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804a768:   89 c2                           	mov edx, eax
0x804a76a:   83 ec 04                        	sub esp, 4
0x804a76d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a770:   8d 83 fd d9 ff ff               	lea eax, [ebx - 0x2603]
0x804a776:   50                              	push eax
0x804a777:   52                              	push edx
0x804a778:   e8 fa ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a77d:   83 c4 10                        	add esp, 0x10
0x804a780:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804a786:   89 c2                           	mov edx, eax
0x804a788:   83 ec 04                        	sub esp, 4
0x804a78b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a78e:   8d 83 03 da ff ff               	lea eax, [ebx - 0x25fd]
0x804a794:   50                              	push eax
0x804a795:   52                              	push edx
0x804a796:   e8 dc ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a79b:   83 c4 10                        	add esp, 0x10
0x804a79e:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804a7a4:   83 ec 04                        	sub esp, 4
0x804a7a7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7aa:   8d 93 09 da ff ff               	lea edx, [ebx - 0x25f7]
0x804a7b0:   52                              	push edx
0x804a7b1:   50                              	push eax
0x804a7b2:   e8 c0 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7b7:   83 c4 10                        	add esp, 0x10
0x804a7ba:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804a7c0:   83 ec 04                        	sub esp, 4
0x804a7c3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7c6:   8d 93 0f da ff ff               	lea edx, [ebx - 0x25f1]
0x804a7cc:   52                              	push edx
0x804a7cd:   50                              	push eax
0x804a7ce:   e8 a4 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7d3:   83 c4 10                        	add esp, 0x10
0x804a7d6:   0f b6 83 a4 04 00 00            	movzx eax, byte ptr [ebx + 0x4a4]
0x804a7dd:   0f b6 c0                        	movzx eax, al
0x804a7e0:   83 ec 04                        	sub esp, 4
0x804a7e3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7e6:   8d 93 15 da ff ff               	lea edx, [ebx - 0x25eb]
0x804a7ec:   52                              	push edx
0x804a7ed:   50                              	push eax
0x804a7ee:   e8 84 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7f3:   83 c4 10                        	add esp, 0x10
0x804a7f6:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804a7fc:   89 c2                           	mov edx, eax
0x804a7fe:   83 ec 04                        	sub esp, 4
0x804a801:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a804:   8d 83 1b da ff ff               	lea eax, [ebx - 0x25e5]
0x804a80a:   50                              	push eax
0x804a80b:   52                              	push edx
0x804a80c:   e8 66 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a811:   83 c4 10                        	add esp, 0x10
0x804a814:   0f b7 83 a6 04 00 00            	movzx eax, word ptr [ebx + 0x4a6]
0x804a81b:   0f b7 c0                        	movzx eax, ax
0x804a81e:   83 ec 04                        	sub esp, 4
0x804a821:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a824:   8d 93 21 da ff ff               	lea edx, [ebx - 0x25df]
0x804a82a:   52                              	push edx
0x804a82b:   50                              	push eax
0x804a82c:   e8 46 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a831:   83 c4 10                        	add esp, 0x10
0x804a834:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804a83a:   89 c2                           	mov edx, eax
0x804a83c:   83 ec 04                        	sub esp, 4
0x804a83f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a842:   8d 83 27 da ff ff               	lea eax, [ebx - 0x25d9]
0x804a848:   50                              	push eax
0x804a849:   52                              	push edx
0x804a84a:   e8 28 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a84f:   83 c4 10                        	add esp, 0x10
0x804a852:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804a858:   89 c2                           	mov edx, eax
0x804a85a:   83 ec 04                        	sub esp, 4
0x804a85d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a860:   8d 83 2d da ff ff               	lea eax, [ebx - 0x25d3]
0x804a866:   50                              	push eax
0x804a867:   52                              	push edx
0x804a868:   e8 0a ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a86d:   83 c4 10                        	add esp, 0x10
0x804a870:   0f b6 83 6c 00 00 00            	movzx eax, byte ptr [ebx + 0x6c]
0x804a877:   0f b6 c0                        	movzx eax, al
0x804a87a:   83 ec 04                        	sub esp, 4
0x804a87d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a880:   8d 93 33 da ff ff               	lea edx, [ebx - 0x25cd]
0x804a886:   52                              	push edx
0x804a887:   50                              	push eax
0x804a888:   e8 ea ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a88d:   83 c4 10                        	add esp, 0x10
0x804a890:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804a896:   f7 d0                           	not eax
0x804a898:   83 ec 08                        	sub esp, 8
0x804a89b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a89e:   50                              	push eax
0x804a89f:   e8 c2 db ff ff                  	call 0x8048466 <platform_main_end>
0x804a8a4:   83 c4 10                        	add esp, 0x10
0x804a8a7:   b8 00 00 00 00                  	mov eax, 0
0x804a8ac:   8d 65 f8                        	lea esp, [ebp - 8]
0x804a8af:   59                              	pop ecx
0x804a8b0:   5b                              	pop ebx
0x804a8b1:   5d                              	pop ebp
0x804a8b2:   8d 61 fc                        	lea esp, [ecx - 4]
0x804a8b5:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804a8b6 -- 0x804a8ba
0x804a8b6:   8b 04 24                        	mov eax, dword ptr [esp]
0x804a8b9:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804a8ba -- 0x804a8be
0x804a8ba:   8b 14 24                        	mov edx, dword ptr [esp]
0x804a8bd:   c3                              	ret 
; data inside code section at 0x804a8be -- 0x804a8c0
0x804a8be:   66 90                                              |f.              |
; function: __libc_csu_init at 0x804a8c0 -- 0x804a91d
0x804a8c0:   55                              	push ebp
0x804a8c1:   57                              	push edi
0x804a8c2:   56                              	push esi
0x804a8c3:   53                              	push ebx
0x804a8c4:   e8 c7 da ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a8c9:   81 c3 37 27 00 00               	add ebx, 0x2737
0x804a8cf:   83 ec 0c                        	sub esp, 0xc
0x804a8d2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804a8d6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804a8dc:   e8 eb d9 ff ff                  	call 0x80482cc <_init>
0x804a8e1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804a8e7:   29 c6                           	sub esi, eax
0x804a8e9:   c1 fe 02                        	sar esi, 2
0x804a8ec:   85 f6                           	test esi, esi
0x804a8ee:   74 25                           	je 0x804a915 <__libc_csu_init+0x55>
0x804a8f0:   31 ff                           	xor edi, edi
0x804a8f2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804a8f8:   83 ec 04                        	sub esp, 4
0x804a8fb:   55                              	push ebp
0x804a8fc:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a900:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a904:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804a90b:   83 c7 01                        	add edi, 1
0x804a90e:   83 c4 10                        	add esp, 0x10
0x804a911:   39 fe                           	cmp esi, edi
0x804a913:   75 e3                           	jne 0x804a8f8 <__libc_csu_init+0x38>
0x804a915:   83 c4 0c                        	add esp, 0xc
0x804a918:   5b                              	pop ebx
0x804a919:   5e                              	pop esi
0x804a91a:   5f                              	pop edi
0x804a91b:   5d                              	pop ebp
0x804a91c:   c3                              	ret 
; data inside code section at 0x804a91d -- 0x804a920
0x804a91d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804a920 -- 0x804a922
0x804a920:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804a924 -- 0x804a938
0x804a924:   53                              	push ebx
0x804a925:   83 ec 08                        	sub esp, 8
0x804a928:   e8 63 da ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a92d:   81 c3 d3 26 00 00               	add ebx, 0x26d3
0x804a933:   83 c4 08                        	add esp, 8
0x804a936:   5b                              	pop ebx
0x804a937:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 3c a9 04 08  04 00 00 00 11 00 10 00   |....<...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804a938:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804a948:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804a958:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804a968:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804a978:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804a988:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804a998:   25 64 0a 00 31 00 67 5f  38 00 67 5f 39 00 67 5f   |%d..1.g_8.g_9.g_|
0x804a9a8:   32 39 00 67 5f 33 31 00  67 5f 33 35 00 67 5f 34   |29.g_31.g_35.g_4|
0x804a9b8:   37 00 67 5f 34 38 00 67  5f 34 39 00 67 5f 37 30   |7.g_48.g_49.g_70|
0x804a9c8:   00 67 5f 37 31 00 67 5f  39 30 00 67 5f 31 30 36   |.g_71.g_90.g_106|
0x804a9d8:   00 67 5f 31 30 37 00 67  5f 31 30 38 00 67 5f 31   |.g_107.g_108.g_1|
0x804a9e8:   30 39 00 67 5f 31 31 31  00 67 5f 31 39 31 00 67   |09.g_111.g_191.g|
0x804a9f8:   5f 31 39 32 00 67 5f 31  39 33 00 67 5f 31 39 34   |_192.g_193.g_194|
0x804aa08:   00 67 5f 31 39 35 00 67  5f 32 30 33 00 67 5f 32   |.g_195.g_203.g_2|
0x804aa18:   33 37 00 67 5f 32 37 33  00 67 5f 32 37 34 00 67   |37.g_273.g_274.g|
0x804aa28:   5f 32 39 31 00 67 5f 32  39 37 00 67 5f 32 39 38   |_291.g_297.g_298|
0x804aa38:   00 00 00 00 00 00 00 3f  ff ff ff 7e 00 00 80 0d   |.......?...~....|
0x804aa48:   00 00 80 31 ff ff 7f 3f  00 00 00 27 00 00 80 71   |...1...?...'...q|
0x804aa58:   ff ff ff 34 00 00 00 00  00 00 00 00 00 00 e0 3f   |...4...........?|
0x804aa68:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804aa78:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804aa88:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804aa98:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804aaa8:   01                                                 |.               |
; section: .eh_frame_hdr
0x804aaa8:   01 1b 03 3b c0 02 00 00  57 00 00 00 48 d8 ff ff   |...;....W...H...|
0x804aab8:   f0 02 00 00 88 d8 ff ff  14 03 00 00 d8 d8 ff ff   |................|
0x804aac8:   dc 02 00 00 ae d9 ff ff  28 03 00 00 be d9 ff ff   |........(.......|
0x804aad8:   48 03 00 00 ec d9 ff ff  6c 03 00 00 0a da ff ff   |H.......l.......|
0x804aae8:   8c 03 00 00 32 da ff ff  ac 03 00 00 5c da ff ff   |....2.......\...|
0x804aaf8:   cc 03 00 00 85 da ff ff  ec 03 00 00 c8 da ff ff   |................|
0x804ab08:   0c 04 00 00 09 db ff ff  2c 04 00 00 61 db ff ff   |........,...a...|
0x804ab18:   50 04 00 00 b3 db ff ff  74 04 00 00 f0 db ff ff   |P.......t.......|
0x804ab28:   94 04 00 00 27 dc ff ff  b4 04 00 00 46 dc ff ff   |....'.......F...|
0x804ab38:   d4 04 00 00 70 dc ff ff  f4 04 00 00 9c dc ff ff   |....p...........|
0x804ab48:   14 05 00 00 c7 dc ff ff  34 05 00 00 10 dd ff ff   |........4.......|
0x804ab58:   54 05 00 00 57 dd ff ff  74 05 00 00 b1 dd ff ff   |T...W...t.......|
0x804ab68:   98 05 00 00 05 de ff ff  bc 05 00 00 44 de ff ff   |............D...|
0x804ab78:   dc 05 00 00 7d de ff ff  fc 05 00 00 9f de ff ff   |....}...........|
0x804ab88:   1c 06 00 00 ed de ff ff  3c 06 00 00 29 df ff ff   |........<...)...|
0x804ab98:   5c 06 00 00 b2 df ff ff  7c 06 00 00 e4 df ff ff   |\.......|.......|
0x804aba8:   9c 06 00 00 14 e0 ff ff  bc 06 00 00 59 e0 ff ff   |............Y...|
0x804abb8:   dc 06 00 00 98 e0 ff ff  fc 06 00 00 ca e0 ff ff   |................|
0x804abc8:   1c 07 00 00 f6 e0 ff ff  3c 07 00 00 14 e1 ff ff   |........<.......|
0x804abd8:   5c 07 00 00 3c e1 ff ff  7c 07 00 00 61 e1 ff ff   |\...<...|...a...|
0x804abe8:   9c 07 00 00 86 e1 ff ff  bc 07 00 00 bd e1 ff ff   |................|
0x804abf8:   dc 07 00 00 f1 e1 ff ff  fc 07 00 00 43 e2 ff ff   |............C...|
0x804ac08:   20 08 00 00 8f e2 ff ff  44 08 00 00 c6 e2 ff ff   | .......D.......|
0x804ac18:   64 08 00 00 f7 e2 ff ff  84 08 00 00 16 e3 ff ff   |d...............|
0x804ac28:   a4 08 00 00 40 e3 ff ff  c4 08 00 00 68 e3 ff ff   |....@.......h...|
0x804ac38:   e4 08 00 00 91 e3 ff ff  04 09 00 00 cd e3 ff ff   |................|
0x804ac48:   24 09 00 00 07 e4 ff ff  44 09 00 00 5a e4 ff ff   |$.......D...Z...|
0x804ac58:   68 09 00 00 a7 e4 ff ff  8c 09 00 00 df e4 ff ff   |h...............|
0x804ac68:   ac 09 00 00 11 e5 ff ff  cc 09 00 00 25 e5 ff ff   |............%...|
0x804ac78:   ec 09 00 00 3c e5 ff ff  0c 0a 00 00 51 e5 ff ff   |....<.......Q...|
0x804ac88:   2c 0a 00 00 67 e5 ff ff  4c 0a 00 00 8e e5 ff ff   |,...g...L.......|
0x804ac98:   6c 0a 00 00 b3 e5 ff ff  8c 0a 00 00 f2 e5 ff ff   |l...............|
0x804aca8:   ac 0a 00 00 2b e6 ff ff  cc 0a 00 00 57 e6 ff ff   |....+.......W...|
0x804acb8:   ec 0a 00 00 7d e6 ff ff  0c 0b 00 00 bf e6 ff ff   |....}...........|
0x804acc8:   2c 0b 00 00 01 e7 ff ff  4c 0b 00 00 43 e7 ff ff   |,.......L...C...|
0x804acd8:   6c 0b 00 00 b8 e7 ff ff  8c 0b 00 00 15 e8 ff ff   |l...............|
0x804ace8:   ac 0b 00 00 72 e8 ff ff  cc 0b 00 00 cf e8 ff ff   |....r...........|
0x804acf8:   ec 0b 00 00 5f e9 ff ff  0c 0c 00 00 c3 e9 ff ff   |...._...........|
0x804ad08:   2c 0c 00 00 33 ea ff ff  4c 0c 00 00 7a ea ff ff   |,...3...L...z...|
0x804ad18:   70 0c 00 00 cf ea ff ff  90 0c 00 00 16 eb ff ff   |p...............|
0x804ad28:   b4 0c 00 00 7e eb ff ff  d8 0c 00 00 ac eb ff ff   |....~...........|
0x804ad38:   fc 0c 00 00 7f ed ff ff  2c 0d 00 00 36 fa ff ff   |........,...6...|
0x804ad48:   5c 0d 00 00 0e fe ff ff  94 0d 00 00 12 fe ff ff   |\...............|
0x804ad58:   a8 0d 00 00 18 fe ff ff  bc 0d 00 00 78 fe ff ff   |............x...|
0x804ad68:   08 0e 00 00 14                                     |.....           |
; section: .eh_frame
0x804ad6c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804ad7c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804ad8c:   f4 d5 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804ad9c:   30 00 00 00 50 d5 ff ff  40 00 00 00 00 0e 08 46   |0...P...@......F|
0x804adac:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804adbc:   10 00 00 00 54 00 00 00  6c d5 ff ff 08 00 00 00   |....T...l.......|
0x804adcc:   00 00 00 00 1c 00 00 00  68 00 00 00 7e d6 ff ff   |........h...~...|
0x804addc:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804adec:   04 04 00 00 20 00 00 00  88 00 00 00 6e d6 ff ff   |.... .......n...|
0x804adfc:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804ae0c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804ae1c:   78 d6 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |x........A....B.|
0x804ae2c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804ae3c:   76 d6 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |v...(....A....B.|
0x804ae4c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804ae5c:   7e d6 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |~...*....A....B.|
0x804ae6c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804ae7c:   88 d6 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804ae8c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804ae9c:   91 d6 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804aeac:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804aebc:   b4 d6 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804aecc:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804aedc:   d5 d6 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804aeec:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804aefc:   90 01 00 00 09 d7 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804af0c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804af1c:   1c 00 00 00 b4 01 00 00  37 d7 ff ff 3d 00 00 00   |........7...=...|
0x804af2c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804af3c:   1c 00 00 00 d4 01 00 00  54 d7 ff ff 37 00 00 00   |........T...7...|
0x804af4c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804af5c:   1c 00 00 00 f4 01 00 00  6b d7 ff ff 1f 00 00 00   |........k.......|
0x804af6c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804af7c:   1c 00 00 00 14 02 00 00  6a d7 ff ff 2a 00 00 00   |........j...*...|
0x804af8c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804af9c:   1c 00 00 00 34 02 00 00  74 d7 ff ff 2c 00 00 00   |....4...t...,...|
0x804afac:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804afbc:   1c 00 00 00 54 02 00 00  80 d7 ff ff 2b 00 00 00   |....T.......+...|
0x804afcc:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804afdc:   1c 00 00 00 74 02 00 00  8b d7 ff ff 49 00 00 00   |....t.......I...|
0x804afec:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804affc:   1c 00 00 00 94 02 00 00  b4 d7 ff ff 47 00 00 00   |............G...|
0x804b00c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b01c:   20 00 00 00 b4 02 00 00  db d7 ff ff 5a 00 00 00   | ...........Z...|
0x804b02c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b03c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 11 d8 ff ff   |.... ...........|
0x804b04c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b05c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b06c:   41 d8 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |A...?....A....B.|
0x804b07c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b08c:   60 d8 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |`...9....A....B.|
0x804b09c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b0ac:   79 d8 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |y..."....A....B.|
0x804b0bc:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b0cc:   7b d8 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |{...N....A....B.|
0x804b0dc:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b0ec:   a9 d8 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b0fc:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b10c:   c5 d8 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b11c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b12c:   2e d9 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b13c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b14c:   40 d9 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |@...0....A....B.|
0x804b15c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b16c:   50 d9 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |P...E....A....B.|
0x804b17c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b18c:   75 d9 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |u...?....A....B.|
0x804b19c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b1ac:   94 d9 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b1bc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b1cc:   a6 d9 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b1dc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b1ec:   b2 d9 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b1fc:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b20c:   b0 d9 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b21c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b22c:   b8 d9 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b23c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b24c:   bd d9 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b25c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b26c:   c2 d9 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b27c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b28c:   d9 d9 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b29c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b2ac:   ed d9 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b2bc:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b2cc:   60 05 00 00 1b da ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b2dc:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b2ec:   1c 00 00 00 84 05 00 00  43 da ff ff 37 00 00 00   |........C...7...|
0x804b2fc:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b30c:   1c 00 00 00 a4 05 00 00  5a da ff ff 31 00 00 00   |........Z...1...|
0x804b31c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b32c:   1c 00 00 00 c4 05 00 00  6b da ff ff 1f 00 00 00   |........k.......|
0x804b33c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b34c:   1c 00 00 00 e4 05 00 00  6a da ff ff 2a 00 00 00   |........j...*...|
0x804b35c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b36c:   1c 00 00 00 04 06 00 00  74 da ff ff 28 00 00 00   |........t...(...|
0x804b37c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b38c:   1c 00 00 00 24 06 00 00  7c da ff ff 29 00 00 00   |....$...|...)...|
0x804b39c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b3ac:   1c 00 00 00 44 06 00 00  85 da ff ff 3c 00 00 00   |....D.......<...|
0x804b3bc:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b3cc:   1c 00 00 00 64 06 00 00  a1 da ff ff 3a 00 00 00   |....d.......:...|
0x804b3dc:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b3ec:   20 00 00 00 84 06 00 00  bb da ff ff 53 00 00 00   | ...........S...|
0x804b3fc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b40c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 ea da ff ff   |.... ...........|
0x804b41c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b42c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b43c:   13 db ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b44c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b45c:   2b db ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |+...2....A....B.|
0x804b46c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b47c:   3d db ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |=........A....B.|
0x804b48c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b49c:   31 db ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |1........A....B.|
0x804b4ac:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b4bc:   28 db ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |(........A....B.|
0x804b4cc:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b4dc:   1d db ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b4ec:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b4fc:   13 db ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b50c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b51c:   1a db ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b52c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b53c:   1f db ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b54c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b55c:   3e db ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |>...9....A....B.|
0x804b56c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b57c:   57 db ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |W...,....A....B.|
0x804b58c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b59c:   63 db ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |c...&....A....B.|
0x804b5ac:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b5bc:   69 db ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |i...B....A....B.|
0x804b5cc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b5dc:   8b db ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b5ec:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b5fc:   ad db ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b60c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b61c:   cf db ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804b62c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b63c:   24 dc ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |$...]....A....B.|
0x804b64c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b65c:   61 dc ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |a...]....A....B.|
0x804b66c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b67c:   9e dc ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b68c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b69c:   db dc ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b6ac:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b6bc:   4b dd ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |K...d....A....B.|
0x804b6cc:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b6dc:   8f dd ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804b6ec:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b6fc:   df dd ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b70c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b71c:   b0 09 00 00 02 de ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804b72c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b73c:   d0 09 00 00 37 de ff ff  47 00 00 00 00 41 0e 08   |....7...G....A..|
0x804b74c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b75c:   20 00 00 00 f4 09 00 00  5a de ff ff 68 00 00 00   | .......Z...h...|
0x804b76c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b77c:   0c 04 04 00 20 00 00 00  18 0a 00 00 9e de ff ff   |.... ...........|
0x804b78c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b79c:   66 c5 c3 0c 04 04 00 00  2c 00 00 00 3c 0a 00 00   |f.......,...<...|
0x804b7ac:   a8 de ff ff d3 01 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b7bc:   05 46 87 03 86 04 83 05  03 c6 01 c3 41 c6 41 c7   |.F..........A.A.|
0x804b7cc:   41 c5 0c 04 04 00 00 00  2c 00 00 00 6c 0a 00 00   |A.......,...l...|
0x804b7dc:   4b e0 ff ff b7 0c 00 00  00 41 0e 08 85 02 42 0d   |K........A....B.|
0x804b7ec:   05 49 87 03 86 04 83 05  03 a7 0c c3 41 c6 41 c7   |.I..........A.A.|
0x804b7fc:   41 c5 0c 04 04 00 00 00  34 00 00 00 9c 0a 00 00   |A.......4.......|
0x804b80c:   d2 ec ff ff d8 03 00 00  00 44 0c 01 00 47 10 05   |.........D...G..|
0x804b81c:   02 75 00 44 0f 03 75 78  06 10 03 02 75 7c 03 c3   |.u.D..ux....u|..|
0x804b82c:   03 c1 0c 01 00 41 c3 41  c5 43 0c 04 04 00 00 00   |.....A.A.C......|
0x804b83c:   10 00 00 00 d4 0a 00 00  72 f0 ff ff 04 00 00 00   |........r.......|
0x804b84c:   00 00 00 00 10 00 00 00  e8 0a 00 00 62 f0 ff ff   |............b...|
0x804b85c:   04 00 00 00 00 00 00 00  48 00 00 00 fc 0a 00 00   |........H.......|
0x804b86c:   54 f0 ff ff 5d 00 00 00  00 41 0e 08 85 02 41 0e   |T...]....A....A.|
0x804b87c:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 4e 0e 20   |...A....A....N. |
0x804b88c:   69 0e 24 41 0e 28 44 0e  2c 44 0e 30 4d 0e 20 47   |i.$A.(D.,D.0M. G|
0x804b89c:   0e 14 41 c3 0e 10 41 c6  0e 0c 41 c7 0e 08 41 c5   |..A...A...A...A.|
0x804b8ac:   0e 04 00 00 10 00 00 00  48 0b 00 00 68 f0 ff ff   |........H...h...|
0x804b8bc:   02 00 00 00 00 00 00 00  00 00 00 00 ??            |............?   |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 24 a9 04 08  19 00 00 00 0c cf 04 08   |....$...........|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff 05 01 00 00   |................|
0x804d028:   32 31 40 d9 03 00 00 00  d5 b2 ac ae af 67 63 2b   |21@..........gc+|
0x804d038:   ff ff ff ff a3 fb 4a 00  01 00 00 00 30 73 9e bc   |......J.....0s..|
0x804d048:   fc 7f 01 06 9a f8 00 00  c8 fb 61 1f 62 28 8e 55   |..........a.b(.U|
0x804d058:   01 00 00 00 ff ff ff ff  3b c7 42 0a ff ff ff ff   |........;.B.....|
0x804d068:   c2 5c 77 69 60 ??                                  |.\wi`?          |
