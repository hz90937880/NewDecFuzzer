;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:59:21
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 60 dc ff ff               	lea eax, [ebx - 0x23a0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 00 dc ff ff               	lea eax, [ebx - 0x2400]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 71 a8 04 08               	mov eax, 0x804a871
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 5c d0 04 08                  	mov eax, 0x804d05c
0x80483a5:   3d 5c d0 04 08                  	cmp eax, 0x804d05c
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 5c d0 04 08                  	push 0x804d05c
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 5c d0 04 08                  	mov eax, 0x804d05c
0x80483e5:   2d 5c d0 04 08                  	sub eax, 0x804d05c
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 5c d0 04 08                  	push 0x804d05c
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 60 d0 04 08 00            	cmp byte ptr [0x804d060], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 60 d0 04 08 01            	mov byte ptr [0x804d060], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 95 27 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 81 27 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 80 dc ff ff               	lea edx, [eax - 0x2380]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 54 27 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 36 27 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 0e 27 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 e4 26 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 bb 26 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 78 26 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 36 26 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 de 25 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 8d 25 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 50 25 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 19 25 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 fa 24 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 d0 24 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 a4 24 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 79 24 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 30 24 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 e8 23 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 8e 23 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 3b 23 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 fc 22 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 c6 22 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 a4 22 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 56 22 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 1a 22 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 91 21 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 5f 21 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 2f 21 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 ea 20 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 ab 20 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 79 20 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 4a 20 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 2c 20 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 04 20 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 df 1f 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 ba 1f 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 83 1f 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 4e 1f 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 fc 1e 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 b1 1e 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 7a 1e 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 49 1e 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 2a 1e 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 00 1e 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 d8 1d 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 af 1d 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 73 1d 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 38 1d 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 e5 1c 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 99 1c 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 61 1c 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 32 1c 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 1e 1c 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 07 1c 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 f2 1b 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 dc 1b 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 b5 1b 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 90 1b 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 51 1b 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 18 1b 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 ec 1a 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 c6 1a 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 60 dd ff ff               	fld dword ptr [eax - 0x22a0]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 60 dd ff ff               	fld dword ptr [eax - 0x22a0]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 64 dd ff ff               	fld dword ptr [eax - 0x229c]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 84 1a 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 60 dd ff ff               	fld dword ptr [eax - 0x22a0]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 60 dd ff ff               	fld dword ptr [eax - 0x22a0]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 64 dd ff ff               	fld dword ptr [eax - 0x229c]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 42 1a 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 68 dd ff ff               	fld dword ptr [eax - 0x2298]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 6c dd ff ff               	fld dword ptr [eax - 0x2294]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 70 dd ff ff               	fld dword ptr [eax - 0x2290]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 00 1a 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 74 dd ff ff               	fld dword ptr [eax - 0x228c]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 78 dd ff ff               	fld dword ptr [eax - 0x2288]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 7c dd ff ff               	fld dword ptr [eax - 0x2284]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 88 19 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 80 dd ff ff               	fld qword ptr [eax - 0x2280]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 80 dd ff ff               	fld qword ptr [eax - 0x2280]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 88 dd ff ff               	fld qword ptr [eax - 0x2278]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 2b 19 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 80 dd ff ff               	fld qword ptr [eax - 0x2280]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 80 dd ff ff               	fld qword ptr [eax - 0x2280]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 88 dd ff ff               	fld qword ptr [eax - 0x2278]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 ce 18 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 90 dd ff ff               	fld qword ptr [eax - 0x2270]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 98 dd ff ff               	fld qword ptr [eax - 0x2268]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 a0 dd ff ff               	fld qword ptr [eax - 0x2260]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 71 18 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 a8 dd ff ff               	fld qword ptr [eax - 0x2258]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 b0 dd ff ff               	fld qword ptr [eax - 0x2250]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 b8 dd ff ff               	fld qword ptr [eax - 0x2248]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 e1 17 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 c0 dd ff ff               	fld dword ptr [eax - 0x2240]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 c4 dd ff ff               	fld dword ptr [eax - 0x223c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 7d 17 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 80 00 00 00            	mov dword ptr [eax + edx*4 + 0x80], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 0c 17 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 80 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0x80]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 c9 16 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 90 dc ff ff               	lea eax, [ebx - 0x2370]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 b4 dc ff ff               	lea eax, [ebx - 0x234c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804981a
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 78                        	sub esp, 0x78
0x804962f:   e8 c3 15 00 00                  	call 0x804abf7 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 39 00 00               	add edx, 0x39cc
0x804963a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804963d:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049640:   8b 4d 0c                        	mov ecx, dword ptr [ebp + 0xc]
0x8049643:   8b 5d 10                        	mov ebx, dword ptr [ebp + 0x10]
0x8049646:   8b 75 14                        	mov esi, dword ptr [ebp + 0x14]
0x8049649:   8b 7d 18                        	mov edi, dword ptr [ebp + 0x18]
0x804964c:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x804964f:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049652:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x8049655:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049658:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x804965b:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804965e:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x8049661:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049664:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049667:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804966a:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x804966d:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049670:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049673:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049676:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x8049679:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804967c:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x804967f:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049682:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049685:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049688:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x804968b:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804968e:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x8049691:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x8049697:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x804969b:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x804969e:   89 c8                           	mov eax, ecx
0x80496a0:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x80496a3:   89 d8                           	mov eax, ebx
0x80496a5:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x80496a8:   89 f0                           	mov eax, esi
0x80496aa:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x80496ae:   89 f8                           	mov eax, edi
0x80496b0:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x80496b4:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80496b8:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496bb:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x80496bf:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x80496c2:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496c6:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496ca:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x80496ce:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496d2:   0f b6 45 98                     	movzx eax, byte ptr [ebp - 0x68]
0x80496d6:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496d9:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x80496dd:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496e0:   0f b6 45 90                     	movzx eax, byte ptr [ebp - 0x70]
0x80496e4:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x80496e7:   0f b7 45 8c                     	movzx eax, word ptr [ebp - 0x74]
0x80496eb:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x80496ef:   0f b7 45 88                     	movzx eax, word ptr [ebp - 0x78]
0x80496f3:   66 89 45 bc                     	mov word ptr [ebp - 0x44], ax
0x80496f7:   0f b7 45 84                     	movzx eax, word ptr [ebp - 0x7c]
0x80496fb:   66 89 45 b8                     	mov word ptr [ebp - 0x48], ax
0x80496ff:   0f b7 45 80                     	movzx eax, word ptr [ebp - 0x80]
0x8049703:   66 89 45 b4                     	mov word ptr [ebp - 0x4c], ax
0x8049707:   0f b7 85 7c ff ff ff            	movzx eax, word ptr [ebp - 0x84]
0x804970e:   66 89 45 b0                     	mov word ptr [ebp - 0x50], ax
0x8049712:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x8049716:   88 82 24 00 00 00               	mov byte ptr [edx + 0x24], al
0x804971c:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x8049720:   88 82 25 00 00 00               	mov byte ptr [edx + 0x25], al
0x8049726:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x804972a:   88 82 26 00 00 00               	mov byte ptr [edx + 0x26], al
0x8049730:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049734:   66 89 82 28 00 00 00            	mov word ptr [edx + 0x28], ax
0x804973b:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x804973f:   66 89 82 2a 00 00 00            	mov word ptr [edx + 0x2a], ax
0x8049746:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x804974a:   88 82 2c 00 00 00               	mov byte ptr [edx + 0x2c], al
0x8049750:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x8049753:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x8049759:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x804975d:   88 82 34 00 00 00               	mov byte ptr [edx + 0x34], al
0x8049763:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x8049767:   66 89 82 36 00 00 00            	mov word ptr [edx + 0x36], ax
0x804976e:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x8049772:   66 89 82 38 00 00 00            	mov word ptr [edx + 0x38], ax
0x8049779:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x804977d:   88 82 3a 00 00 00               	mov byte ptr [edx + 0x3a], al
0x8049783:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x8049787:   88 82 3b 00 00 00               	mov byte ptr [edx + 0x3b], al
0x804978d:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x8049791:   88 82 84 04 00 00               	mov byte ptr [edx + 0x484], al
0x8049797:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804979b:   66 89 82 3c 00 00 00            	mov word ptr [edx + 0x3c], ax
0x80497a2:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x80497a5:   89 82 88 04 00 00               	mov dword ptr [edx + 0x488], eax
0x80497ab:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x80497af:   66 89 82 3e 00 00 00            	mov word ptr [edx + 0x3e], ax
0x80497b6:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x80497ba:   66 89 82 8c 04 00 00            	mov word ptr [edx + 0x48c], ax
0x80497c1:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x80497c4:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x80497ca:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x80497cd:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x80497d3:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x80497d6:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x80497dc:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x80497df:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x80497e5:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x80497e8:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x80497ee:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x80497f2:   66 89 82 54 00 00 00            	mov word ptr [edx + 0x54], ax
0x80497f9:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x80497fd:   66 89 82 56 00 00 00            	mov word ptr [edx + 0x56], ax
0x8049804:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x8049807:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x804980d:   b8 00 00 00 00                  	mov eax, 0
0x8049812:   83 c4 78                        	add esp, 0x78
0x8049815:   5b                              	pop ebx
0x8049816:   5e                              	pop esi
0x8049817:   5f                              	pop edi
0x8049818:   5d                              	pop ebp
0x8049819:   c3                              	ret 
; function: func_1 at 0x804981a -- 0x804a871
0x804981a:   55                              	push ebp
0x804981b:   89 e5                           	mov ebp, esp
0x804981d:   57                              	push edi
0x804981e:   56                              	push esi
0x804981f:   53                              	push ebx
0x8049820:   81 ec 6c 01 00 00               	sub esp, 0x16c
0x8049826:   e8 c8 13 00 00                  	call 0x804abf3 <__x86.get_pc_thunk.ax>
0x804982b:   05 d5 37 00 00                  	add eax, 0x37d5
0x8049830:   c6 45 f3 63                     	mov byte ptr [ebp - 0xd], 0x63
0x8049834:   c6 45 f2 85                     	mov byte ptr [ebp - 0xe], 0x85
0x8049838:   c6 45 f1 f8                     	mov byte ptr [ebp - 0xf], 0xf8
0x804983c:   66 c7 45 ee 06 00               	mov word ptr [ebp - 0x12], 6
0x8049842:   66 c7 45 88 28 e0               	mov word ptr [ebp - 0x78], 0xe028
0x8049848:   c6 45 ed e4                     	mov byte ptr [ebp - 0x13], 0xe4
0x804984c:   c7 45 e8 fe ff ff ff            	mov dword ptr [ebp - 0x18], 0xfffffffe
0x8049853:   c6 45 e7 37                     	mov byte ptr [ebp - 0x19], 0x37
0x8049857:   66 c7 45 e4 04 00               	mov word ptr [ebp - 0x1c], 4
0x804985d:   66 c7 45 e2 07 eb               	mov word ptr [ebp - 0x1e], 0xeb07
0x8049863:   c6 45 87 f7                     	mov byte ptr [ebp - 0x79], 0xf7
0x8049867:   c6 45 86 01                     	mov byte ptr [ebp - 0x7a], 1
0x804986b:   c6 45 e1 00                     	mov byte ptr [ebp - 0x1f], 0
0x804986f:   66 c7 45 de a6 73               	mov word ptr [ebp - 0x22], 0x73a6
0x8049875:   c7 45 d8 00 00 00 00            	mov dword ptr [ebp - 0x28], 0
0x804987c:   66 c7 45 84 ff ff               	mov word ptr [ebp - 0x7c], 0xffff
0x8049882:   66 c7 45 d6 00 00               	mov word ptr [ebp - 0x2a], 0
0x8049888:   c7 45 d0 01 00 00 00            	mov dword ptr [ebp - 0x30], 1
0x804988f:   c7 45 cc 94 ca 73 d1            	mov dword ptr [ebp - 0x34], 0xd173ca94
0x8049896:   c7 45 80 18 ce 02 a4            	mov dword ptr [ebp - 0x80], 0xa402ce18
0x804989d:   c7 45 c8 74 b3 84 df            	mov dword ptr [ebp - 0x38], 0xdf84b374
0x80498a4:   c7 85 7c ff ff ff 03 00 00 00   	mov dword ptr [ebp - 0x84], 3
0x80498ae:   66 c7 45 c6 c8 31               	mov word ptr [ebp - 0x3a], 0x31c8
0x80498b4:   66 c7 45 c4 f7 ff               	mov word ptr [ebp - 0x3c], 0xfff7
0x80498ba:   c7 45 c0 fd ff ff ff            	mov dword ptr [ebp - 0x40], 0xfffffffd
0x80498c1:   c6 85 7b ff ff ff 53            	mov byte ptr [ebp - 0x85], 0x53
0x80498c8:   c7 45 bc 09 00 00 00            	mov dword ptr [ebp - 0x44], 9
0x80498cf:   66 c7 45 ba 6f df               	mov word ptr [ebp - 0x46], 0xdf6f
0x80498d5:   c7 45 b4 fe ff ff ff            	mov dword ptr [ebp - 0x4c], 0xfffffffe
0x80498dc:   c7 85 74 ff ff ff 86 b6 d4 f6   	mov dword ptr [ebp - 0x8c], 0xf6d4b686
0x80498e6:   66 c7 85 72 ff ff ff 00 00      	mov word ptr [ebp - 0x8e], 0
0x80498ef:   c6 85 71 ff ff ff 04            	mov byte ptr [ebp - 0x8f], 4
0x80498f6:   c7 85 6c ff ff ff 70 87 b7 3f   	mov dword ptr [ebp - 0x94], 0x3fb78770
0x8049900:   c7 45 b0 fd ff ff ff            	mov dword ptr [ebp - 0x50], 0xfffffffd
0x8049907:   c7 85 68 ff ff ff ff ca 64 df   	mov dword ptr [ebp - 0x98], 0xdf64caff
0x8049911:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049915:   88 45 f2                        	mov byte ptr [ebp - 0xe], al
0x8049918:   83 65 bc 01                     	and dword ptr [ebp - 0x44], 1
0x804991c:   c6 45 f3 f4                     	mov byte ptr [ebp - 0xd], 0xf4
0x8049920:   e9 40 0e 00 00                  	jmp 0x804a765 <func_1+0xf4b>
0x8049925:   66 c7 45 ae 4f 16               	mov word ptr [ebp - 0x52], 0x164f
0x804992b:   c7 45 a8 f6 ff ff ff            	mov dword ptr [ebp - 0x58], 0xfffffff6
0x8049932:   c7 45 a4 f9 ff ff ff            	mov dword ptr [ebp - 0x5c], 0xfffffff9
0x8049939:   c7 45 a0 27 8f f1 51            	mov dword ptr [ebp - 0x60], 0x51f18f27
0x8049940:   c6 85 67 ff ff ff b6            	mov byte ptr [ebp - 0x99], 0xb6
0x8049947:   c7 85 60 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xa0], 1
0x8049951:   c6 85 5f ff ff ff fb            	mov byte ptr [ebp - 0xa1], 0xfb
0x8049958:   c7 85 58 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa8], 0
0x8049962:   c7 85 54 ff ff ff 18 97 e5 e1   	mov dword ptr [ebp - 0xac], 0xe1e59718
0x804996c:   66 c7 85 52 ff ff ff 00 00      	mov word ptr [ebp - 0xae], 0
0x8049975:   c7 45 9c f9 ff ff ff            	mov dword ptr [ebp - 0x64], 0xfffffff9
0x804997c:   66 c7 85 50 ff ff ff f8 ff      	mov word ptr [ebp - 0xb0], 0xfff8
0x8049985:   c7 85 4c ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xb4], 0xfffffffc
0x804998f:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x8049992:   88 45 f1                        	mov byte ptr [ebp - 0xf], al
0x8049995:   0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x8049999:   66 89 45 ee                     	mov word ptr [ebp - 0x12], ax
0x804999d:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x80499a1:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x80499a4:   c6 45 f1 00                     	mov byte ptr [ebp - 0xf], 0
0x80499a8:   e9 b9 04 00 00                  	jmp 0x8049e66 <func_1+0x64c>
0x80499ad:   c7 85 48 ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0xb8], 6
0x80499b7:   c7 45 98 94 19 2c f0            	mov dword ptr [ebp - 0x68], 0xf02c1994
0x80499be:   c6 85 47 ff ff ff 01            	mov byte ptr [ebp - 0xb9], 1
0x80499c5:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x80499c9:   74 05                           	je 0x80499d0 <func_1+0x1b6>
0x80499cb:   e9 48 ff ff ff                  	jmp 0x8049918 <func_1+0xfe>
0x80499d0:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x80499d4:   0f 84 ac 03 00 00               	je 0x8049d86 <func_1+0x56c>
0x80499da:   c7 85 3c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xc4], 1
0x80499e4:   c7 45 94 f7 d2 71 89            	mov dword ptr [ebp - 0x6c], 0x8971d2f7
0x80499eb:   66 c7 85 3a ff ff ff 00 00      	mov word ptr [ebp - 0xc6], 0
0x80499f4:   c7 85 34 ff ff ff 42 d3 8e 64   	mov dword ptr [ebp - 0xcc], 0x648ed342
0x80499fe:   66 83 7d ba 00                  	cmp word ptr [ebp - 0x46], 0
0x8049a03:   0f 84 ee 00 00 00               	je 0x8049af7 <func_1+0x2dd>
0x8049a09:   c6 85 1c ff ff ff fd            	mov byte ptr [ebp - 0xe4], 0xfd
0x8049a10:   c7 85 18 ff ff ff b7 d1 e0 37   	mov dword ptr [ebp - 0xe8], 0x37e0d1b7
0x8049a1a:   c6 45 f2 fc                     	mov byte ptr [ebp - 0xe], 0xfc
0x8049a1e:   e9 a7 00 00 00                  	jmp 0x8049aca <func_1+0x2b0>
0x8049a23:   c7 85 14 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xec], 0xffffffff
0x8049a2d:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x8049a31:   83 c0 01                        	add eax, 1
0x8049a34:   66 89 45 ae                     	mov word ptr [ebp - 0x52], ax
0x8049a38:   66 0f be 45 ed                  	movsx ax, byte ptr [ebp - 0x13]
0x8049a3d:   0f b7 d8                        	movzx ebx, ax
0x8049a40:   0f b6 45 e7                     	movzx eax, byte ptr [ebp - 0x19]
0x8049a44:   8d 50 01                        	lea edx, [eax + 1]
0x8049a47:   88 55 e7                        	mov byte ptr [ebp - 0x19], dl
0x8049a4a:   c0 e8 03                        	shr al, 3
0x8049a4d:   0f b6 d0                        	movzx edx, al
0x8049a50:   66 83 7d ae 01                  	cmp word ptr [ebp - 0x52], 1
0x8049a55:   0f 94 c0                        	sete al
0x8049a58:   0f b6 c0                        	movzx eax, al
0x8049a5b:   39 c2                           	cmp edx, eax
0x8049a5d:   0f 9e c0                        	setle al
0x8049a60:   0f b6 c0                        	movzx eax, al
0x8049a63:   39 45 bc                        	cmp dword ptr [ebp - 0x44], eax
0x8049a66:   0f 9c c0                        	setl al
0x8049a69:   0f b6 d0                        	movzx edx, al
0x8049a6c:   0f bf 45 88                     	movsx eax, word ptr [ebp - 0x78]
0x8049a70:   39 c2                           	cmp edx, eax
0x8049a72:   0f 95 c0                        	setne al
0x8049a75:   0f b6 c0                        	movzx eax, al
0x8049a78:   89 c1                           	mov ecx, eax
0x8049a7a:   d3 fb                           	sar ebx, cl
0x8049a7c:   89 da                           	mov edx, ebx
0x8049a7e:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049a81:   01 d0                           	add eax, edx
0x8049a83:   39 85 3c ff ff ff               	cmp dword ptr [ebp - 0xc4], eax
0x8049a89:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x8049a8f:   89 c2                           	mov edx, eax
0x8049a91:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049a95:   31 d0                           	xor eax, edx
0x8049a97:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x8049a9b:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049a9f:   39 85 3c ff ff ff               	cmp dword ptr [ebp - 0xc4], eax
0x8049aa5:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x8049aab:   89 c2                           	mov edx, eax
0x8049aad:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049ab0:   29 c2                           	sub edx, eax
0x8049ab2:   89 d0                           	mov eax, edx
0x8049ab4:   0f be d0                        	movsx edx, al
0x8049ab7:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x8049abd:   0f be c0                        	movsx eax, al
0x8049ac0:   0f af c2                        	imul eax, edx
0x8049ac3:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049ac6:   80 45 f2 01                     	add byte ptr [ebp - 0xe], 1
0x8049aca:   80 7d f2 33                     	cmp byte ptr [ebp - 0xe], 0x33
0x8049ace:   0f 85 4f ff ff ff               	jne 0x8049a23 <func_1+0x209>
0x8049ad4:   66 c7 45 ba 00 00               	mov word ptr [ebp - 0x46], 0
0x8049ada:   eb 0f                           	jmp 0x8049aeb <func_1+0x2d1>
0x8049adc:   80 45 e1 01                     	add byte ptr [ebp - 0x1f], 1
0x8049ae0:   0f b7 45 ba                     	movzx eax, word ptr [ebp - 0x46]
0x8049ae4:   83 c0 01                        	add eax, 1
0x8049ae7:   66 89 45 ba                     	mov word ptr [ebp - 0x46], ax
0x8049aeb:   66 83 7d ba 1d                  	cmp word ptr [ebp - 0x46], 0x1d
0x8049af0:   7f ea                           	jg 0x8049adc <func_1+0x2c2>
0x8049af2:   e9 23 02 00 00                  	jmp 0x8049d1a <func_1+0x500>
0x8049af7:   c6 85 33 ff ff ff 31            	mov byte ptr [ebp - 0xcd], 0x31
0x8049afe:   c7 85 2c ff ff ff 4d a2 be 6e   	mov dword ptr [ebp - 0xd4], 0x6ebea24d
0x8049b08:   c7 85 28 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xd8], 0xffffffff
0x8049b12:   66 83 7d ae 00                  	cmp word ptr [ebp - 0x52], 0
0x8049b17:   0f 84 b3 00 00 00               	je 0x8049bd0 <func_1+0x3b6>
0x8049b1d:   c6 85 1d ff ff ff 95            	mov byte ptr [ebp - 0xe3], 0x95
0x8049b24:   66 83 7d e4 00                  	cmp word ptr [ebp - 0x1c], 0
0x8049b29:   0f 85 43 03 00 00               	jne 0x8049e72 <func_1+0x658>
0x8049b2f:   66 81 7d 88 d9 00               	cmp word ptr [ebp - 0x78], 0xd9
0x8049b35:   0f 95 c0                        	setne al
0x8049b38:   0f b6 c0                        	movzx eax, al
0x8049b3b:   0f b6 4d f3                     	movzx ecx, byte ptr [ebp - 0xd]
0x8049b3f:   0f b6 95 1d ff ff ff            	movzx edx, byte ptr [ebp - 0xe3]
0x8049b46:   3a 95 7b ff ff ff               	cmp dl, byte ptr [ebp - 0x85]
0x8049b4c:   73 0d                           	jae 0x8049b5b <func_1+0x341>
0x8049b4e:   83 7d b4 00                     	cmp dword ptr [ebp - 0x4c], 0
0x8049b52:   74 07                           	je 0x8049b5b <func_1+0x341>
0x8049b54:   ba 01 00 00 00                  	mov edx, 1
0x8049b59:   eb 05                           	jmp 0x8049b60 <func_1+0x346>
0x8049b5b:   ba 00 00 00 00                  	mov edx, 0
0x8049b60:   0f b7 d2                        	movzx edx, dx
0x8049b63:   0f af ca                        	imul ecx, edx
0x8049b66:   0f b6 55 e1                     	movzx edx, byte ptr [ebp - 0x1f]
0x8049b6a:   39 d1                           	cmp ecx, edx
0x8049b6c:   0f 9c c2                        	setl dl
0x8049b6f:   0f b6 d2                        	movzx edx, dl
0x8049b72:   89 55 b4                        	mov dword ptr [ebp - 0x4c], edx
0x8049b75:   39 45 b4                        	cmp dword ptr [ebp - 0x4c], eax
0x8049b78:   0f 9c c0                        	setl al
0x8049b7b:   0f b6 c0                        	movzx eax, al
0x8049b7e:   8b 55 bc                        	mov edx, dword ptr [ebp - 0x44]
0x8049b81:   0f be f2                        	movsx esi, dl
0x8049b84:   99                              	cdq 
0x8049b85:   f7 fe                           	idiv esi
0x8049b87:   2d 6c 6c 91 6a                  	sub eax, 0x6a916c6c
0x8049b8c:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049b8f:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x8049b93:   c0 e8 05                        	shr al, 5
0x8049b96:   0f b6 c0                        	movzx eax, al
0x8049b99:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049b9c:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049b9f:   89 c2                           	mov edx, eax
0x8049ba1:   0f b6 45 e7                     	movzx eax, byte ptr [ebp - 0x19]
0x8049ba5:   31 d0                           	xor eax, edx
0x8049ba7:   88 45 e7                        	mov byte ptr [ebp - 0x19], al
0x8049baa:   0f b6 45 e7                     	movzx eax, byte ptr [ebp - 0x19]
0x8049bae:   33 85 48 ff ff ff               	xor eax, dword ptr [ebp - 0xb8]
0x8049bb4:   0f b6 8d 47 ff ff ff            	movzx ecx, byte ptr [ebp - 0xb9]
0x8049bbb:   99                              	cdq 
0x8049bbc:   f7 f9                           	idiv ecx
0x8049bbe:   89 55 e8                        	mov dword ptr [ebp - 0x18], edx
0x8049bc1:   80 7d f1 00                     	cmp byte ptr [ebp - 0xf], 0
0x8049bc5:   0f 84 cf 00 00 00               	je 0x8049c9a <func_1+0x480>
0x8049bcb:   e9 92 02 00 00                  	jmp 0x8049e62 <func_1+0x648>
0x8049bd0:   c7 85 24 ff ff ff 52 9c b6 ad   	mov dword ptr [ebp - 0xdc], 0xadb69c52
0x8049bda:   c7 85 20 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe0], 0
0x8049be4:   66 c7 85 1e ff ff ff fb ff      	mov word ptr [ebp - 0xe2], 0xfffb
0x8049bed:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049bf0:   20 45 ed                        	and byte ptr [ebp - 0x13], al
0x8049bf3:   c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x8049bfa:   66 83 6d de 01                  	sub word ptr [ebp - 0x22], 1
0x8049bff:   83 bd 3c ff ff ff 00            	cmp dword ptr [ebp - 0xc4], 0
0x8049c06:   0f 94 c0                        	sete al
0x8049c09:   0f b6 c0                        	movzx eax, al
0x8049c0c:   39 85 3c ff ff ff               	cmp dword ptr [ebp - 0xc4], eax
0x8049c12:   0f 9d c0                        	setge al
0x8049c15:   0f b6 c0                        	movzx eax, al
0x8049c18:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049c1b:   80 7d 86 01                     	cmp byte ptr [ebp - 0x7a], 1
0x8049c1f:   0f 9e c0                        	setle al
0x8049c22:   0f b6 d0                        	movzx edx, al
0x8049c25:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x8049c29:   29 c2                           	sub edx, eax
0x8049c2b:   89 d0                           	mov eax, edx
0x8049c2d:   66 c1 e8 05                     	shr ax, 5
0x8049c31:   0f b7 c0                        	movzx eax, ax
0x8049c34:   69 c0 5d 06 00 00               	imul eax, eax, 0x65d
0x8049c3a:   c1 e8 10                        	shr eax, 0x10
0x8049c3d:   66 c1 e8 02                     	shr ax, 2
0x8049c41:   0f b7 c0                        	movzx eax, ax
0x8049c44:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049c47:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x8049c4b:   75 07                           	jne 0x8049c54 <func_1+0x43a>
0x8049c4d:   66 83 7d e4 00                  	cmp word ptr [ebp - 0x1c], 0
0x8049c52:   74 08                           	je 0x8049c5c <func_1+0x442>
0x8049c54:   66 83 bd 3a ff ff ff 00         	cmp word ptr [ebp - 0xc6], 0
0x8049c5c:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049c5f:   89 c2                           	mov edx, eax
0x8049c61:   0f b6 85 33 ff ff ff            	movzx eax, byte ptr [ebp - 0xcd]
0x8049c68:   09 d0                           	or eax, edx
0x8049c6a:   0f bf d0                        	movsx edx, ax
0x8049c6d:   0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x8049c71:   89 c1                           	mov ecx, eax
0x8049c73:   d3 e2                           	shl edx, cl
0x8049c75:   89 d0                           	mov eax, edx
0x8049c77:   85 c0                           	test eax, eax
0x8049c79:   74 07                           	je 0x8049c82 <func_1+0x468>
0x8049c7b:   b8 01 00 00 00                  	mov eax, 1
0x8049c80:   eb 05                           	jmp 0x8049c87 <func_1+0x46d>
0x8049c82:   b8 00 00 00 00                  	mov eax, 0
0x8049c87:   0f b6 4d e7                     	movzx ecx, byte ptr [ebp - 0x19]
0x8049c8b:   ba 00 00 00 00                  	mov edx, 0
0x8049c90:   f7 f1                           	div ecx
0x8049c92:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049c95:   21 d0                           	and eax, edx
0x8049c97:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049c9a:   80 7d e7 00                     	cmp byte ptr [ebp - 0x19], 0
0x8049c9e:   0f 85 bd 01 00 00               	jne 0x8049e61 <func_1+0x647>
0x8049ca4:   0f b6 85 7b ff ff ff            	movzx eax, byte ptr [ebp - 0x85]
0x8049cab:   31 45 98                        	xor dword ptr [ebp - 0x68], eax
0x8049cae:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x8049cb2:   74 07                           	je 0x8049cbb <func_1+0x4a1>
0x8049cb4:   b8 01 00 00 00                  	mov eax, 1
0x8049cb9:   eb 05                           	jmp 0x8049cc0 <func_1+0x4a6>
0x8049cbb:   b8 00 00 00 00                  	mov eax, 0
0x8049cc0:   0f b6 c0                        	movzx eax, al
0x8049cc3:   2d f7 00 00 00                  	sub eax, 0xf7
0x8049cc8:   89 85 2c ff ff ff               	mov dword ptr [ebp - 0xd4], eax
0x8049cce:   0f b6 45 e1                     	movzx eax, byte ptr [ebp - 0x1f]
0x8049cd2:   c0 e8 07                        	shr al, 7
0x8049cd5:   0f b6 d0                        	movzx edx, al
0x8049cd8:   0f b7 4d ae                     	movzx ecx, word ptr [ebp - 0x52]
0x8049cdc:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049cdf:   38 85 33 ff ff ff               	cmp byte ptr [ebp - 0xcd], al
0x8049ce5:   0f 94 c0                        	sete al
0x8049ce8:   0f b6 c0                        	movzx eax, al
0x8049ceb:   39 c1                           	cmp ecx, eax
0x8049ced:   0f 9c c0                        	setl al
0x8049cf0:   0f b6 c0                        	movzx eax, al
0x8049cf3:   39 85 34 ff ff ff               	cmp dword ptr [ebp - 0xcc], eax
0x8049cf9:   0f 92 c0                        	setb al
0x8049cfc:   0f b6 c0                        	movzx eax, al
0x8049cff:   89 c1                           	mov ecx, eax
0x8049d01:   0f b6 45 ed                     	movzx eax, byte ptr [ebp - 0x13]
0x8049d05:   0f b6 c0                        	movzx eax, al
0x8049d08:   0f af c1                        	imul eax, ecx
0x8049d0b:   0f b7 c0                        	movzx eax, ax
0x8049d0e:   89 c1                           	mov ecx, eax
0x8049d10:   d3 e2                           	shl edx, cl
0x8049d12:   89 d0                           	mov eax, edx
0x8049d14:   21 85 28 ff ff ff               	and dword ptr [ebp - 0xd8], eax
0x8049d1a:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049d1d:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049d20:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049d23:   89 c2                           	mov edx, eax
0x8049d25:   0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x8049d29:   31 d0                           	xor eax, edx
0x8049d2b:   88 45 f2                        	mov byte ptr [ebp - 0xe], al
0x8049d2e:   0f b6 55 f2                     	movzx edx, byte ptr [ebp - 0xe]
0x8049d32:   0f b7 4d ae                     	movzx ecx, word ptr [ebp - 0x52]
0x8049d36:   0f bf 5d 84                     	movsx ebx, word ptr [ebp - 0x7c]
0x8049d3a:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x8049d3e:   39 c3                           	cmp ebx, eax
0x8049d40:   0f 94 c0                        	sete al
0x8049d43:   0f b6 c0                        	movzx eax, al
0x8049d46:   39 c1                           	cmp ecx, eax
0x8049d48:   0f 9e c0                        	setle al
0x8049d4b:   0f b6 c0                        	movzx eax, al
0x8049d4e:   39 c2                           	cmp edx, eax
0x8049d50:   0f 9c c0                        	setl al
0x8049d53:   0f b6 d0                        	movzx edx, al
0x8049d56:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x8049d5a:   39 c2                           	cmp edx, eax
0x8049d5c:   0f 9d c0                        	setge al
0x8049d5f:   0f b6 c0                        	movzx eax, al
0x8049d62:   39 85 74 ff ff ff               	cmp dword ptr [ebp - 0x8c], eax
0x8049d68:   0f 9d c0                        	setge al
0x8049d6b:   0f b6 d0                        	movzx edx, al
0x8049d6e:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x8049d72:   89 c1                           	mov ecx, eax
0x8049d74:   d3 fa                           	sar edx, cl
0x8049d76:   89 d0                           	mov eax, edx
0x8049d78:   23 85 48 ff ff ff               	and eax, dword ptr [ebp - 0xb8]
0x8049d7e:   83 c0 04                        	add eax, 4
0x8049d81:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049d84:   eb 26                           	jmp 0x8049dac <func_1+0x592>
0x8049d86:   c7 85 40 ff ff ff d3 1b d2 64   	mov dword ptr [ebp - 0xc0], 0x64d21bd3
0x8049d90:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x8049d96:   0f be c8                        	movsx ecx, al
0x8049d99:   b8 01 00 00 00                  	mov eax, 1
0x8049d9e:   99                              	cdq 
0x8049d9f:   f7 f9                           	idiv ecx
0x8049da1:   89 d0                           	mov eax, edx
0x8049da3:   31 45 a8                        	xor dword ptr [ebp - 0x58], eax
0x8049da6:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049da9:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049dac:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049daf:   31 45 a8                        	xor dword ptr [ebp - 0x58], eax
0x8049db2:   66 c7 45 e2 0c 00               	mov word ptr [ebp - 0x1e], 0xc
0x8049db8:   e9 97 00 00 00                  	jmp 0x8049e54 <func_1+0x63a>
0x8049dbd:   c7 85 10 ff ff ff 94 8b 2a 5e   	mov dword ptr [ebp - 0xf0], 0x5e2a8b94
0x8049dc7:   c7 85 0c ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xf4], 2
0x8049dd1:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049dd4:   89 c3                           	mov ebx, eax
0x8049dd6:   0f b6 85 47 ff ff ff            	movzx eax, byte ptr [ebp - 0xb9]
0x8049ddd:   66 69 c0 e3 5c                  	imul ax, ax, 0x5ce3
0x8049de2:   98                              	cwde 
0x8049de3:   c1 e0 05                        	shl eax, 5
0x8049de6:   0f bf d0                        	movsx edx, ax
0x8049de9:   0f be 45 ed                     	movsx eax, byte ptr [ebp - 0x13]
0x8049ded:   89 c1                           	mov ecx, eax
0x8049def:   d3 fa                           	sar edx, cl
0x8049df1:   89 d0                           	mov eax, edx
0x8049df3:   98                              	cwde 
0x8049df4:   8b 95 10 ff ff ff               	mov edx, dword ptr [ebp - 0xf0]
0x8049dfa:   0f bf f2                        	movsx esi, dx
0x8049dfd:   99                              	cdq 
0x8049dfe:   f7 fe                           	idiv esi
0x8049e00:   89 c2                           	mov edx, eax
0x8049e02:   0f b6 c3                        	movzx eax, bl
0x8049e05:   f6 f2                           	div dl
0x8049e07:   0f b6 c4                        	movzx eax, ah
0x8049e0a:   83 c8 01                        	or eax, 1
0x8049e0d:   0f b6 c0                        	movzx eax, al
0x8049e10:   66 31 45 e4                     	xor word ptr [ebp - 0x1c], ax
0x8049e14:   0f b6 85 67 ff ff ff            	movzx eax, byte ptr [ebp - 0x99]
0x8049e1b:   66 39 45 e4                     	cmp word ptr [ebp - 0x1c], ax
0x8049e1f:   74 07                           	je 0x8049e28 <func_1+0x60e>
0x8049e21:   ba 3a 24 fa 5d                  	mov edx, 0x5dfa243a
0x8049e26:   eb 05                           	jmp 0x8049e2d <func_1+0x613>
0x8049e28:   ba 3b 24 fa 5d                  	mov edx, 0x5dfa243b
0x8049e2d:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x8049e30:   39 c2                           	cmp edx, eax
0x8049e32:   0f 96 c0                        	setbe al
0x8049e35:   0f b6 c0                        	movzx eax, al
0x8049e38:   66 89 45 d6                     	mov word ptr [ebp - 0x2a], ax
0x8049e3c:   0f b7 85 72 ff ff ff            	movzx eax, word ptr [ebp - 0x8e]
0x8049e43:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x8049e49:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x8049e4d:   83 c0 05                        	add eax, 5
0x8049e50:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x8049e54:   66 83 7d e2 1b                  	cmp word ptr [ebp - 0x1e], 0x1b
0x8049e59:   0f 85 5e ff ff ff               	jne 0x8049dbd <func_1+0x5a3>
0x8049e5f:   eb 01                           	jmp 0x8049e62 <func_1+0x648>
0x8049e61:   90                              	nop 
0x8049e62:   80 45 f1 09                     	add byte ptr [ebp - 0xf], 9
0x8049e66:   80 7d f1 09                     	cmp byte ptr [ebp - 0xf], 9
0x8049e6a:   0f 85 3d fb ff ff               	jne 0x80499ad <func_1+0x193>
0x8049e70:   eb 01                           	jmp 0x8049e73 <func_1+0x659>
0x8049e72:   90                              	nop 
0x8049e73:   80 bd 71 ff ff ff 00            	cmp byte ptr [ebp - 0x8f], 0
0x8049e7a:   0f 84 94 07 00 00               	je 0x804a614 <func_1+0xdfa>
0x8049e80:   66 c7 85 fe fe ff ff f7 ff      	mov word ptr [ebp - 0x102], 0xfff7
0x8049e89:   66 c7 45 92 ab 97               	mov word ptr [ebp - 0x6e], 0x97ab
0x8049e8f:   66 c7 85 fc fe ff ff 7a 31      	mov word ptr [ebp - 0x104], 0x317a
0x8049e98:   c7 45 8c da c5 05 19            	mov dword ptr [ebp - 0x74], 0x1905c5da
0x8049e9f:   c7 85 f8 fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x108], 2
0x8049ea9:   66 c7 85 f6 fe ff ff 08 00      	mov word ptr [ebp - 0x10a], 8
0x8049eb2:   83 6d d0 01                     	sub dword ptr [ebp - 0x30], 1
0x8049eb6:   c7 45 e8 5d b0 96 bd            	mov dword ptr [ebp - 0x18], 0xbd96b05d
0x8049ebd:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049ec0:   21 45 cc                        	and dword ptr [ebp - 0x34], eax
0x8049ec3:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049ec6:   89 c3                           	mov ebx, eax
0x8049ec8:   66 83 bd fe fe ff ff 00         	cmp word ptr [ebp - 0x102], 0
0x8049ed0:   0f 95 c0                        	setne al
0x8049ed3:   0f b6 d0                        	movzx edx, al
0x8049ed6:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x8049eda:   39 c2                           	cmp edx, eax
0x8049edc:   0f 9f c0                        	setg al
0x8049edf:   22 45 87                        	and al, byte ptr [ebp - 0x79]
0x8049ee2:   0f be d0                        	movsx edx, al
0x8049ee5:   0f b7 45 92                     	movzx eax, word ptr [ebp - 0x6e]
0x8049ee9:   0f be c0                        	movsx eax, al
0x8049eec:   89 c1                           	mov ecx, eax
0x8049eee:   d3 fa                           	sar edx, cl
0x8049ef0:   0f b6 85 67 ff ff ff            	movzx eax, byte ptr [ebp - 0x99]
0x8049ef7:   09 d0                           	or eax, edx
0x8049ef9:   ba 00 00 00 00                  	mov edx, 0
0x8049efe:   f7 b5 60 ff ff ff               	div dword ptr [ebp - 0xa0]
0x8049f04:   89 c2                           	mov edx, eax
0x8049f06:   0f b7 45 92                     	movzx eax, word ptr [ebp - 0x6e]
0x8049f0a:   09 d0                           	or eax, edx
0x8049f0c:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x8049f10:   0f b7 45 92                     	movzx eax, word ptr [ebp - 0x6e]
0x8049f14:   88 45 f2                        	mov byte ptr [ebp - 0xe], al
0x8049f17:   0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x8049f1b:   c0 e8 02                        	shr al, 2
0x8049f1e:   0f b6 d0                        	movzx edx, al
0x8049f21:   89 d0                           	mov eax, edx
0x8049f23:   01 c0                           	add eax, eax
0x8049f25:   01 d0                           	add eax, edx
0x8049f27:   c1 e0 04                        	shl eax, 4
0x8049f2a:   01 d0                           	add eax, edx
0x8049f2c:   66 c1 e8 08                     	shr ax, 8
0x8049f30:   c0 e8 02                        	shr al, 2
0x8049f33:   0f be d0                        	movsx edx, al
0x8049f36:   0f b7 45 ba                     	movzx eax, word ptr [ebp - 0x46]
0x8049f3a:   0f be c0                        	movsx eax, al
0x8049f3d:   01 d0                           	add eax, edx
0x8049f3f:   85 c0                           	test eax, eax
0x8049f41:   74 11                           	je 0x8049f54 <func_1+0x73a>
0x8049f43:   66 83 bd fc fe ff ff 00         	cmp word ptr [ebp - 0x104], 0
0x8049f4b:   74 07                           	je 0x8049f54 <func_1+0x73a>
0x8049f4d:   b8 01 00 00 00                  	mov eax, 1
0x8049f52:   eb 05                           	jmp 0x8049f59 <func_1+0x73f>
0x8049f54:   b8 00 00 00 00                  	mov eax, 0
0x8049f59:   01 d8                           	add eax, ebx
0x8049f5b:   0f b7 c0                        	movzx eax, ax
0x8049f5e:   8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x8049f61:   0f b7 f2                        	movzx esi, dx
0x8049f64:   99                              	cdq 
0x8049f65:   f7 fe                           	idiv esi
0x8049f67:   85 c0                           	test eax, eax
0x8049f69:   0f 84 5a 05 00 00               	je 0x804a4c9 <func_1+0xcaf>
0x8049f6f:   c6 85 ef fe ff ff 8f            	mov byte ptr [ebp - 0x111], 0x8f
0x8049f76:   c6 45 8b f8                     	mov byte ptr [ebp - 0x75], 0xf8
0x8049f7a:   c7 85 e8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x118], 0
0x8049f84:   66 c7 85 e6 fe ff ff 09 00      	mov word ptr [ebp - 0x11a], 9
0x8049f8d:   c7 85 e0 fe ff ff 89 04 c9 8d   	mov dword ptr [ebp - 0x120], 0x8dc90489
0x8049f97:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x8049f9b:   0f 84 2d 01 00 00               	je 0x804a0ce <func_1+0x8b4>
0x8049fa1:   c6 85 df fe ff ff ff            	mov byte ptr [ebp - 0x121], 0xff
0x8049fa8:   c7 85 d8 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x128], 1
0x8049fb2:   c6 85 df fe ff ff 74            	mov byte ptr [ebp - 0x121], 0x74
0x8049fb9:   80 bd 5f ff ff ff 00            	cmp byte ptr [ebp - 0xa1], 0
0x8049fc0:   0f 84 e1 00 00 00               	je 0x804a0a7 <func_1+0x88d>
0x8049fc6:   c7 85 d4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x12c], 0
0x8049fd0:   80 bd ef fe ff ff 00            	cmp byte ptr [ebp - 0x111], 0
0x8049fd7:   74 7d                           	je 0x804a056 <func_1+0x83c>
0x8049fd9:   8b 4d d8                        	mov ecx, dword ptr [ebp - 0x28]
0x8049fdc:   8d 41 ff                        	lea eax, [ecx - 1]
0x8049fdf:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049fe2:   0f bf 45 84                     	movsx eax, word ptr [ebp - 0x7c]
0x8049fe6:   0f b6 55 f3                     	movzx edx, byte ptr [ebp - 0xd]
0x8049fea:   39 55 cc                        	cmp dword ptr [ebp - 0x34], edx
0x8049fed:   73 0e                           	jae 0x8049ffd <func_1+0x7e3>
0x8049fef:   66 83 7d ee 00                  	cmp word ptr [ebp - 0x12], 0
0x8049ff4:   74 07                           	je 0x8049ffd <func_1+0x7e3>
0x8049ff6:   ba 01 00 00 00                  	mov edx, 1
0x8049ffb:   eb 05                           	jmp 0x804a002 <func_1+0x7e8>
0x8049ffd:   ba 00 00 00 00                  	mov edx, 0
0x804a002:   0f bf da                        	movsx ebx, dx
0x804a005:   99                              	cdq 
0x804a006:   f7 fb                           	idiv ebx
0x804a008:   89 d0                           	mov eax, edx
0x804a00a:   39 c1                           	cmp ecx, eax
0x804a00c:   74 07                           	je 0x804a015 <func_1+0x7fb>
0x804a00e:   ba f9 ff ff ff                  	mov edx, 0xfffffff9
0x804a013:   eb 05                           	jmp 0x804a01a <func_1+0x800>
0x804a015:   ba f8 ff ff ff                  	mov edx, 0xfffffff8
0x804a01a:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x804a01e:   31 d0                           	xor eax, edx
0x804a020:   0f b6 d0                        	movzx edx, al
0x804a023:   0f b7 85 fc fe ff ff            	movzx eax, word ptr [ebp - 0x104]
0x804a02a:   0f b6 c0                        	movzx eax, al
0x804a02d:   89 c1                           	mov ecx, eax
0x804a02f:   d3 e2                           	shl edx, cl
0x804a031:   89 d0                           	mov eax, edx
0x804a033:   89 c2                           	mov edx, eax
0x804a035:   0f b7 85 fe fe ff ff            	movzx eax, word ptr [ebp - 0x102]
0x804a03c:   31 d0                           	xor eax, edx
0x804a03e:   0f b7 c0                        	movzx eax, ax
0x804a041:   69 d0 e3 23 00 00               	imul edx, eax, 0x23e3
0x804a047:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a04b:   39 c2                           	cmp edx, eax
0x804a04d:   7e 07                           	jle 0x804a056 <func_1+0x83c>
0x804a04f:   b8 01 00 00 00                  	mov eax, 1
0x804a054:   eb 05                           	jmp 0x804a05b <func_1+0x841>
0x804a056:   b8 00 00 00 00                  	mov eax, 0
0x804a05b:   83 e0 3f                        	and eax, 0x3f
0x804a05e:   89 c2                           	mov edx, eax
0x804a060:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804a066:   01 d0                           	add eax, edx
0x804a068:   89 c2                           	mov edx, eax
0x804a06a:   0f b6 85 7b ff ff ff            	movzx eax, byte ptr [ebp - 0x85]
0x804a071:   09 d0                           	or eax, edx
0x804a073:   0f be d0                        	movsx edx, al
0x804a076:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a07a:   0f be c0                        	movsx eax, al
0x804a07d:   0f af d0                        	imul edx, eax
0x804a080:   0f bf 45 84                     	movsx eax, word ptr [ebp - 0x7c]
0x804a084:   21 c2                           	and edx, eax
0x804a086:   0f be 85 ef fe ff ff            	movsx eax, byte ptr [ebp - 0x111]
0x804a08d:   39 c2                           	cmp edx, eax
0x804a08f:   0f 9d c0                        	setge al
0x804a092:   0f b6 c0                        	movzx eax, al
0x804a095:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x804a09b:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a09f:   21 45 e8                        	and dword ptr [ebp - 0x18], eax
0x804a0a2:   e9 20 01 00 00                  	jmp 0x804a1c7 <func_1+0x9ad>
0x804a0a7:   0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x804a0ab:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a0ae:   0f 9e c0                        	setle al
0x804a0b1:   88 45 8b                        	mov byte ptr [ebp - 0x75], al
0x804a0b4:   c7 45 e8 09 00 00 00            	mov dword ptr [ebp - 0x18], 9
0x804a0bb:   c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x804a0c2:   c7 45 8c 00 00 00 00            	mov dword ptr [ebp - 0x74], 0
0x804a0c9:   e9 f9 00 00 00                  	jmp 0x804a1c7 <func_1+0x9ad>
0x804a0ce:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x804a0d2:   0f bf 55 c6                     	movsx edx, word ptr [ebp - 0x3a]
0x804a0d6:   0f b7 75 d6                     	movzx esi, word ptr [ebp - 0x2a]
0x804a0da:   0f bf 7d 84                     	movsx edi, word ptr [ebp - 0x7c]
0x804a0de:   89 bd b0 fe ff ff               	mov dword ptr [ebp - 0x150], edi
0x804a0e4:   0f b7 5d de                     	movzx ebx, word ptr [ebp - 0x22]
0x804a0e8:   89 9d ac fe ff ff               	mov dword ptr [ebp - 0x154], ebx
0x804a0ee:   0f b6 4d e1                     	movzx ecx, byte ptr [ebp - 0x1f]
0x804a0f2:   89 8d a8 fe ff ff               	mov dword ptr [ebp - 0x158], ecx
0x804a0f8:   0f be 7d 86                     	movsx edi, byte ptr [ebp - 0x7a]
0x804a0fc:   89 bd a4 fe ff ff               	mov dword ptr [ebp - 0x15c], edi
0x804a102:   0f be 5d 87                     	movsx ebx, byte ptr [ebp - 0x79]
0x804a106:   89 9d a0 fe ff ff               	mov dword ptr [ebp - 0x160], ebx
0x804a10c:   0f bf 4d e2                     	movsx ecx, word ptr [ebp - 0x1e]
0x804a110:   89 8d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ecx
0x804a116:   0f b7 7d e4                     	movzx edi, word ptr [ebp - 0x1c]
0x804a11a:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x804a120:   0f b6 5d e7                     	movzx ebx, byte ptr [ebp - 0x19]
0x804a124:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x804a12a:   0f be 4d ed                     	movsx ecx, byte ptr [ebp - 0x13]
0x804a12e:   89 8d 90 fe ff ff               	mov dword ptr [ebp - 0x170], ecx
0x804a134:   0f bf 7d 88                     	movsx edi, word ptr [ebp - 0x78]
0x804a138:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x804a13e:   0f b7 5d ee                     	movzx ebx, word ptr [ebp - 0x12]
0x804a142:   89 9d 88 fe ff ff               	mov dword ptr [ebp - 0x178], ebx
0x804a148:   0f b6 7d f1                     	movzx edi, byte ptr [ebp - 0xf]
0x804a14c:   0f b6 5d f2                     	movzx ebx, byte ptr [ebp - 0xe]
0x804a150:   0f b6 4d f3                     	movzx ecx, byte ptr [ebp - 0xd]
0x804a154:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a157:   50                              	push eax
0x804a158:   52                              	push edx
0x804a159:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a15f:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a162:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a165:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a168:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a16b:   56                              	push esi
0x804a16c:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a172:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a175:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a17b:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a181:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a187:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a18d:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a193:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a199:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a19f:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a1a2:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a1a8:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a1ae:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a1b4:   57                              	push edi
0x804a1b5:   53                              	push ebx
0x804a1b6:   51                              	push ecx
0x804a1b7:   e8 6a f4 ff ff                  	call 0x8049626 <set_var>
0x804a1bc:   83 c4 64                        	add esp, 0x64
0x804a1bf:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a1c2:   e9 a2 06 00 00                  	jmp 0x804a869 <func_1+0x104f>
0x804a1c7:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a1ca:   98                              	cwde 
0x804a1cb:   ba f8 ff ff ff                  	mov edx, 0xfffffff8
0x804a1d0:   89 c1                           	mov ecx, eax
0x804a1d2:   d3 fa                           	sar edx, cl
0x804a1d4:   89 d0                           	mov eax, edx
0x804a1d6:   85 c0                           	test eax, eax
0x804a1d8:   0f 84 84 02 00 00               	je 0x804a462 <func_1+0xc48>
0x804a1de:   c7 85 cc fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x134], 0xffffffff
0x804a1e8:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a1ee:   89 c1                           	mov ecx, eax
0x804a1f0:   0f b6 45 8b                     	movzx eax, byte ptr [ebp - 0x75]
0x804a1f4:   09 45 d8                        	or dword ptr [ebp - 0x28], eax
0x804a1f7:   b8 00 00 00 00                  	mov eax, 0
0x804a1fc:   89 c2                           	mov edx, eax
0x804a1fe:   0f b6 45 8b                     	movzx eax, byte ptr [ebp - 0x75]
0x804a202:   21 d0                           	and eax, edx
0x804a204:   89 c2                           	mov edx, eax
0x804a206:   0f b6 c1                        	movzx eax, cl
0x804a209:   f6 f2                           	div dl
0x804a20b:   0f b6 c4                        	movzx eax, ah
0x804a20e:   0f b6 c0                        	movzx eax, al
0x804a211:   69 c0 94 fc 00 00               	imul eax, eax, 0xfc94
0x804a217:   8d 50 f8                        	lea edx, [eax - 8]
0x804a21a:   0f bf 45 92                     	movsx eax, word ptr [ebp - 0x6e]
0x804a21e:   21 d0                           	and eax, edx
0x804a220:   85 c0                           	test eax, eax
0x804a222:   75 06                           	jne 0x804a22a <func_1+0xa10>
0x804a224:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x804a228:   74 07                           	je 0x804a231 <func_1+0xa17>
0x804a22a:   b8 01 00 00 00                  	mov eax, 1
0x804a22f:   eb 05                           	jmp 0x804a236 <func_1+0xa1c>
0x804a231:   b8 00 00 00 00                  	mov eax, 0
0x804a236:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a239:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x804a23d:   75 05                           	jne 0x804a244 <func_1+0xa2a>
0x804a23f:   66 83 7d ba 00                  	cmp word ptr [ebp - 0x46], 0
0x804a244:   80 7d e7 00                     	cmp byte ptr [ebp - 0x19], 0
0x804a248:   0f 84 b3 00 00 00               	je 0x804a301 <func_1+0xae7>
0x804a24e:   66 c7 85 c6 fe ff ff 4c 45      	mov word ptr [ebp - 0x13a], 0x454c
0x804a257:   0f b7 45 84                     	movzx eax, word ptr [ebp - 0x7c]
0x804a25b:   0f b7 c0                        	movzx eax, ax
0x804a25e:   69 d0 60 41 00 00               	imul edx, eax, 0x4160
0x804a264:   66 83 bd c6 fe ff ff 00         	cmp word ptr [ebp - 0x13a], 0
0x804a26c:   0f 94 c0                        	sete al
0x804a26f:   0f b6 c0                        	movzx eax, al
0x804a272:   09 85 54 ff ff ff               	or dword ptr [ebp - 0xac], eax
0x804a278:   83 bd 54 ff ff ff 00            	cmp dword ptr [ebp - 0xac], 0
0x804a27f:   74 0e                           	je 0x804a28f <func_1+0xa75>
0x804a281:   66 83 7d d6 00                  	cmp word ptr [ebp - 0x2a], 0
0x804a286:   75 07                           	jne 0x804a28f <func_1+0xa75>
0x804a288:   b8 01 00 00 00                  	mov eax, 1
0x804a28d:   eb 05                           	jmp 0x804a294 <func_1+0xa7a>
0x804a28f:   b8 00 00 00 00                  	mov eax, 0
0x804a294:   09 d0                           	or eax, edx
0x804a296:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a299:   0f be 95 5f ff ff ff            	movsx edx, byte ptr [ebp - 0xa1]
0x804a2a0:   66 83 7d e4 00                  	cmp word ptr [ebp - 0x1c], 0
0x804a2a5:   74 04                           	je 0x804a2ab <func_1+0xa91>
0x804a2a7:   80 7d f1 00                     	cmp byte ptr [ebp - 0xf], 0
0x804a2ab:   0f b7 85 fc fe ff ff            	movzx eax, word ptr [ebp - 0x104]
0x804a2b2:   66 c1 e8 0f                     	shr ax, 0xf
0x804a2b6:   0f b6 c0                        	movzx eax, al
0x804a2b9:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x804a2bf:   8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x804a2c5:   39 45 80                        	cmp dword ptr [ebp - 0x80], eax
0x804a2c8:   0f 95 c0                        	setne al
0x804a2cb:   0f b6 c0                        	movzx eax, al
0x804a2ce:   39 c2                           	cmp edx, eax
0x804a2d0:   0f 9c c0                        	setl al
0x804a2d3:   0f b6 c0                        	movzx eax, al
0x804a2d6:   0f b7 95 c6 fe ff ff            	movzx edx, word ptr [ebp - 0x13a]
0x804a2dd:   0f bf ca                        	movsx ecx, dx
0x804a2e0:   99                              	cdq 
0x804a2e1:   f7 f9                           	idiv ecx
0x804a2e3:   89 d0                           	mov eax, edx
0x804a2e5:   98                              	cwde 
0x804a2e6:   0f b7 55 ee                     	movzx edx, word ptr [ebp - 0x12]
0x804a2ea:   0f bf ca                        	movsx ecx, dx
0x804a2ed:   99                              	cdq 
0x804a2ee:   f7 f9                           	idiv ecx
0x804a2f0:   89 d0                           	mov eax, edx
0x804a2f2:   31 45 e8                        	xor dword ptr [ebp - 0x18], eax
0x804a2f5:   66 83 7d e4 00                  	cmp word ptr [ebp - 0x1c], 0
0x804a2fa:   74 56                           	je 0x804a352 <func_1+0xb38>
0x804a2fc:   e9 17 f6 ff ff                  	jmp 0x8049918 <func_1+0xfe>
0x804a301:   c7 85 c8 fe ff ff 08 28 d6 d3   	mov dword ptr [ebp - 0x138], 0xd3d62808
0x804a30b:   0f b6 55 f2                     	movzx edx, byte ptr [ebp - 0xe]
0x804a30f:   0f be 8d ef fe ff ff            	movsx ecx, byte ptr [ebp - 0x111]
0x804a316:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a31a:   39 c1                           	cmp ecx, eax
0x804a31c:   0f 9e c0                        	setle al
0x804a31f:   0f b6 c0                        	movzx eax, al
0x804a322:   39 c2                           	cmp edx, eax
0x804a324:   0f 9f c0                        	setg al
0x804a327:   0f b6 c0                        	movzx eax, al
0x804a32a:   f7 d0                           	not eax
0x804a32c:   89 c2                           	mov edx, eax
0x804a32e:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a332:   39 c2                           	cmp edx, eax
0x804a334:   7d 07                           	jge 0x804a33d <func_1+0xb23>
0x804a336:   b8 02 00 00 00                  	mov eax, 2
0x804a33b:   eb 05                           	jmp 0x804a342 <func_1+0xb28>
0x804a33d:   b8 01 00 00 00                  	mov eax, 1
0x804a342:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a345:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x804a349:   0f 94 c0                        	sete al
0x804a34c:   0f b6 c0                        	movzx eax, al
0x804a34f:   21 45 8c                        	and dword ptr [ebp - 0x74], eax
0x804a352:   66 c7 45 92 00 00               	mov word ptr [ebp - 0x6e], 0
0x804a358:   eb 74                           	jmp 0x804a3ce <func_1+0xbb4>
0x804a35a:   c7 85 c0 fe ff ff b0 82 60 58   	mov dword ptr [ebp - 0x140], 0x586082b0
0x804a364:   c7 85 bc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x144], 0
0x804a36e:   c7 85 c0 fe ff ff d6 b7 df 90   	mov dword ptr [ebp - 0x140], 0x90dfb7d6
0x804a378:   0f bf 55 e2                     	movsx edx, word ptr [ebp - 0x1e]
0x804a37c:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804a380:   7f 0d                           	jg 0x804a38f <func_1+0xb75>
0x804a382:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x804a386:   74 07                           	je 0x804a38f <func_1+0xb75>
0x804a388:   b8 01 00 00 00                  	mov eax, 1
0x804a38d:   eb 05                           	jmp 0x804a394 <func_1+0xb7a>
0x804a38f:   b8 00 00 00 00                  	mov eax, 0
0x804a394:   66 89 45 de                     	mov word ptr [ebp - 0x22], ax
0x804a398:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x804a39c:   39 c2                           	cmp edx, eax
0x804a39e:   7d 0e                           	jge 0x804a3ae <func_1+0xb94>
0x804a3a0:   66 83 7d 88 00                  	cmp word ptr [ebp - 0x78], 0
0x804a3a5:   74 07                           	je 0x804a3ae <func_1+0xb94>
0x804a3a7:   b8 01 00 00 00                  	mov eax, 1
0x804a3ac:   eb 05                           	jmp 0x804a3b3 <func_1+0xb99>
0x804a3ae:   b8 00 00 00 00                  	mov eax, 0
0x804a3b3:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a3b6:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a3b9:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a3bc:   83 8d bc fe ff ff 68            	or dword ptr [ebp - 0x144], 0x68
0x804a3c3:   0f b7 45 92                     	movzx eax, word ptr [ebp - 0x6e]
0x804a3c7:   83 e8 01                        	sub eax, 1
0x804a3ca:   66 89 45 92                     	mov word ptr [ebp - 0x6e], ax
0x804a3ce:   66 83 7d 92 e5                  	cmp word ptr [ebp - 0x6e], -0x1b
0x804a3d3:   74 85                           	je 0x804a35a <func_1+0xb40>
0x804a3d5:   80 7d ed 00                     	cmp byte ptr [ebp - 0x13], 0
0x804a3d9:   0f 85 92 03 00 00               	jne 0x804a771 <func_1+0xf57>
0x804a3df:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a3e3:   0f be d8                        	movsx ebx, al
0x804a3e6:   0f b6 85 ef fe ff ff            	movzx eax, byte ptr [ebp - 0x111]
0x804a3ed:   0f b6 f0                        	movzx esi, al
0x804a3f0:   0f bf 4d 84                     	movsx ecx, word ptr [ebp - 0x7c]
0x804a3f4:   ba 56 55 55 55                  	mov edx, 0x55555556
0x804a3f9:   89 c8                           	mov eax, ecx
0x804a3fb:   f7 ea                           	imul edx
0x804a3fd:   89 c8                           	mov eax, ecx
0x804a3ff:   c1 f8 1f                        	sar eax, 0x1f
0x804a402:   29 d0                           	sub eax, edx
0x804a404:   0f b6 c0                        	movzx eax, al
0x804a407:   01 f0                           	add eax, esi
0x804a409:   89 85 e8 fe ff ff               	mov dword ptr [ebp - 0x118], eax
0x804a40f:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x804a415:   39 45 cc                        	cmp dword ptr [ebp - 0x34], eax
0x804a418:   0f 97 c0                        	seta al
0x804a41b:   f7 d8                           	neg eax
0x804a41d:   89 c2                           	mov edx, eax
0x804a41f:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a425:   31 d0                           	xor eax, edx
0x804a427:   0f be c0                        	movsx eax, al
0x804a42a:   89 c1                           	mov ecx, eax
0x804a42c:   d3 fb                           	sar ebx, cl
0x804a42e:   89 da                           	mov edx, ebx
0x804a430:   0f b6 85 67 ff ff ff            	movzx eax, byte ptr [ebp - 0x99]
0x804a437:   39 c2                           	cmp edx, eax
0x804a439:   0f 94 c0                        	sete al
0x804a43c:   0f b6 d0                        	movzx edx, al
0x804a43f:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x804a443:   01 d0                           	add eax, edx
0x804a445:   8d 50 03                        	lea edx, [eax + 3]
0x804a448:   85 c0                           	test eax, eax
0x804a44a:   0f 48 c2                        	cmovs eax, edx
0x804a44d:   c1 f8 02                        	sar eax, 2
0x804a450:   f7 d8                           	neg eax
0x804a452:   89 c2                           	mov edx, eax
0x804a454:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a458:   21 d0                           	and eax, edx
0x804a45a:   89 85 f8 fe ff ff               	mov dword ptr [ebp - 0x108], eax
0x804a460:   eb 4f                           	jmp 0x804a4b1 <func_1+0xc97>
0x804a462:   c6 85 d3 fe ff ff ff            	mov byte ptr [ebp - 0x12d], 0xff
0x804a469:   0f b6 85 d3 fe ff ff            	movzx eax, byte ptr [ebp - 0x12d]
0x804a470:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a473:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a479:   33 45 cc                        	xor eax, dword ptr [ebp - 0x34]
0x804a47c:   89 c2                           	mov edx, eax
0x804a47e:   0f b7 85 f6 fe ff ff            	movzx eax, word ptr [ebp - 0x10a]
0x804a485:   39 c2                           	cmp edx, eax
0x804a487:   76 05                           	jbe 0x804a48e <func_1+0xc74>
0x804a489:   66 83 7d e4 00                  	cmp word ptr [ebp - 0x1c], 0
0x804a48e:   83 6d c8 01                     	sub dword ptr [ebp - 0x38], 1
0x804a492:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x804a496:   75 07                           	jne 0x804a49f <func_1+0xc85>
0x804a498:   b8 d4 7b 00 00                  	mov eax, 0x7bd4
0x804a49d:   eb 05                           	jmp 0x804a4a4 <func_1+0xc8a>
0x804a49f:   b8 00 00 00 00                  	mov eax, 0
0x804a4a4:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a4a7:   80 7d f2 00                     	cmp byte ptr [ebp - 0xe], 0
0x804a4ab:   0f 85 c3 02 00 00               	jne 0x804a774 <func_1+0xf5a>
0x804a4b1:   0f bf 45 ba                     	movsx eax, word ptr [ebp - 0x46]
0x804a4b5:   09 45 a8                        	or dword ptr [ebp - 0x58], eax
0x804a4b8:   0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x804a4bc:   0f be c0                        	movsx eax, al
0x804a4bf:   f7 d8                           	neg eax
0x804a4c1:   31 45 e8                        	xor dword ptr [ebp - 0x18], eax
0x804a4c4:   e9 ea 00 00 00                  	jmp 0x804a5b3 <func_1+0xd99>
0x804a4c9:   66 c7 85 f4 fe ff ff 3d 42      	mov word ptr [ebp - 0x10c], 0x423d
0x804a4d2:   c7 85 f0 fe ff ff f7 ff ff ff   	mov dword ptr [ebp - 0x110], 0xfffffff7
0x804a4dc:   0f b7 85 50 ff ff ff            	movzx eax, word ptr [ebp - 0xb0]
0x804a4e3:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a4e6:   0f 95 c0                        	setne al
0x804a4e9:   0f b6 d8                        	movzx ebx, al
0x804a4ec:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a4f2:   0f bf d0                        	movsx edx, ax
0x804a4f5:   0f bf 85 f4 fe ff ff            	movsx eax, word ptr [ebp - 0x10c]
0x804a4fc:   89 c1                           	mov ecx, eax
0x804a4fe:   d3 fa                           	sar edx, cl
0x804a500:   89 d0                           	mov eax, edx
0x804a502:   83 f8 fd                        	cmp eax, -3
0x804a505:   0f 9c c0                        	setl al
0x804a508:   30 45 ed                        	xor byte ptr [ebp - 0x13], al
0x804a50b:   0f be 45 ed                     	movsx eax, byte ptr [ebp - 0x13]
0x804a50f:   8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x804a512:   0f be f2                        	movsx esi, dl
0x804a515:   99                              	cdq 
0x804a516:   f7 fe                           	idiv esi
0x804a518:   99                              	cdq 
0x804a519:   f7 7d a0                        	idiv dword ptr [ebp - 0x60]
0x804a51c:   89 d0                           	mov eax, edx
0x804a51e:   39 c3                           	cmp ebx, eax
0x804a520:   0f 9c c0                        	setl al
0x804a523:   0f b6 c0                        	movzx eax, al
0x804a526:   23 45 b4                        	and eax, dword ptr [ebp - 0x4c]
0x804a529:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a52c:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a530:   0f be c0                        	movsx eax, al
0x804a533:   c1 f8 03                        	sar eax, 3
0x804a536:   0f b6 c0                        	movzx eax, al
0x804a539:   69 d0 a6 00 00 00               	imul edx, eax, 0xa6
0x804a53f:   0f b7 85 fe fe ff ff            	movzx eax, word ptr [ebp - 0x102]
0x804a546:   39 c2                           	cmp edx, eax
0x804a548:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a54c:   66 31 45 c6                     	xor word ptr [ebp - 0x3a], ax
0x804a550:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x804a557:   eb 54                           	jmp 0x804a5ad <func_1+0xd93>
0x804a559:   c7 45 9c fd ff ff ff            	mov dword ptr [ebp - 0x64], 0xfffffffd
0x804a560:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a563:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a566:   0f be 45 87                     	movsx eax, byte ptr [ebp - 0x79]
0x804a56a:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a56d:   80 4d ed 50                     	or byte ptr [ebp - 0x13], 0x50
0x804a571:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a574:   0f b7 d0                        	movzx edx, ax
0x804a577:   0f b6 5d e1                     	movzx ebx, byte ptr [ebp - 0x1f]
0x804a57b:   0f b7 45 84                     	movzx eax, word ptr [ebp - 0x7c]
0x804a57f:   0f b7 c0                        	movzx eax, ax
0x804a582:   89 c1                           	mov ecx, eax
0x804a584:   d3 fb                           	sar ebx, cl
0x804a586:   89 d8                           	mov eax, ebx
0x804a588:   0f b7 c0                        	movzx eax, ax
0x804a58b:   89 c1                           	mov ecx, eax
0x804a58d:   d3 e2                           	shl edx, cl
0x804a58f:   89 d0                           	mov eax, edx
0x804a591:   c1 e0 0b                        	shl eax, 0xb
0x804a594:   66 89 45 de                     	mov word ptr [ebp - 0x22], ax
0x804a598:   66 83 7d d6 20                  	cmp word ptr [ebp - 0x2a], 0x20
0x804a59d:   0f 94 c0                        	sete al
0x804a5a0:   0f b6 c0                        	movzx eax, al
0x804a5a3:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x804a5a9:   83 45 a0 01                     	add dword ptr [ebp - 0x60], 1
0x804a5ad:   83 7d a0 0f                     	cmp dword ptr [ebp - 0x60], 0xf
0x804a5b1:   7f a6                           	jg 0x804a559 <func_1+0xd3f>
0x804a5b3:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x804a5b7:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a5ba:   0f b6 45 e7                     	movzx eax, byte ptr [ebp - 0x19]
0x804a5be:   66 89 45 de                     	mov word ptr [ebp - 0x22], ax
0x804a5c2:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x804a5c6:   66 c1 e8 0b                     	shr ax, 0xb
0x804a5ca:   0f b7 c0                        	movzx eax, ax
0x804a5cd:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x804a5d1:   74 11                           	je 0x804a5e4 <func_1+0xdca>
0x804a5d3:   66 83 bd 72 ff ff ff 00         	cmp word ptr [ebp - 0x8e], 0
0x804a5db:   74 07                           	je 0x804a5e4 <func_1+0xdca>
0x804a5dd:   ba 01 00 00 00                  	mov edx, 1
0x804a5e2:   eb 05                           	jmp 0x804a5e9 <func_1+0xdcf>
0x804a5e4:   ba 00 00 00 00                  	mov edx, 0
0x804a5e9:   39 c2                           	cmp edx, eax
0x804a5eb:   0f 94 c0                        	sete al
0x804a5ee:   0f b6 d0                        	movzx edx, al
0x804a5f1:   0f b7 85 72 ff ff ff            	movzx eax, word ptr [ebp - 0x8e]
0x804a5f8:   39 c2                           	cmp edx, eax
0x804a5fa:   0f 9e c0                        	setle al
0x804a5fd:   0f b6 c0                        	movzx eax, al
0x804a600:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a603:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a606:   3b 45 a0                        	cmp eax, dword ptr [ebp - 0x60]
0x804a609:   66 c7 45 c4 35 b1               	mov word ptr [ebp - 0x3c], 0xb135
0x804a60f:   e9 4d 01 00 00                  	jmp 0x804a761 <func_1+0xf47>
0x804a614:   66 c7 85 0a ff ff ff 03 00      	mov word ptr [ebp - 0xf6], 3
0x804a61d:   c7 45 b0 04 00 00 00            	mov dword ptr [ebp - 0x50], 4
0x804a624:   e9 ea 00 00 00                  	jmp 0x804a713 <func_1+0xef9>
0x804a629:   c7 85 04 ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xfc], 0xfffffffc
0x804a633:   c7 85 00 ff ff ff d6 3c 20 6f   	mov dword ptr [ebp - 0x100], 0x6f203cd6
0x804a63d:   c7 45 b4 9e ff ff ff            	mov dword ptr [ebp - 0x4c], 0xffffff9e
0x804a644:   0f b7 45 88                     	movzx eax, word ptr [ebp - 0x78]
0x804a648:   0f b6 c0                        	movzx eax, al
0x804a64b:   83 c0 6e                        	add eax, 0x6e
0x804a64e:   0f b7 d0                        	movzx edx, ax
0x804a651:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a654:   0f b7 c8                        	movzx ecx, ax
0x804a657:   0f b6 45 e1                     	movzx eax, byte ptr [ebp - 0x1f]
0x804a65b:   0f af c1                        	imul eax, ecx
0x804a65e:   39 85 04 ff ff ff               	cmp dword ptr [ebp - 0xfc], eax
0x804a664:   0f 94 c0                        	sete al
0x804a667:   0f b6 c0                        	movzx eax, al
0x804a66a:   89 85 00 ff ff ff               	mov dword ptr [ebp - 0x100], eax
0x804a670:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a674:   39 85 00 ff ff ff               	cmp dword ptr [ebp - 0x100], eax
0x804a67a:   0f 9f c0                        	setg al
0x804a67d:   0f b6 c8                        	movzx ecx, al
0x804a680:   0f bf 85 0a ff ff ff            	movsx eax, word ptr [ebp - 0xf6]
0x804a687:   39 c1                           	cmp ecx, eax
0x804a689:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x804a68f:   98                              	cwde 
0x804a690:   05 cf 2e 00 00                  	add eax, 0x2ecf
0x804a695:   3d 9e 5d 00 00                  	cmp eax, 0x5d9e
0x804a69a:   77 06                           	ja 0x804a6a2 <func_1+0xe88>
0x804a69c:   80 7d f2 00                     	cmp byte ptr [ebp - 0xe], 0
0x804a6a0:   74 07                           	je 0x804a6a9 <func_1+0xe8f>
0x804a6a2:   b8 01 00 00 00                  	mov eax, 1
0x804a6a7:   eb 05                           	jmp 0x804a6ae <func_1+0xe94>
0x804a6a9:   b8 00 00 00 00                  	mov eax, 0
0x804a6ae:   3b 45 e8                        	cmp eax, dword ptr [ebp - 0x18]
0x804a6b1:   0f 95 c0                        	setne al
0x804a6b4:   0f b6 c0                        	movzx eax, al
0x804a6b7:   8b 4d cc                        	mov ecx, dword ptr [ebp - 0x34]
0x804a6ba:   31 c1                           	xor ecx, eax
0x804a6bc:   66 0f be 45 ed                  	movsx ax, byte ptr [ebp - 0x13]
0x804a6c1:   31 c8                           	xor eax, ecx
0x804a6c3:   0f b7 c0                        	movzx eax, ax
0x804a6c6:   0f af c2                        	imul eax, edx
0x804a6c9:   31 45 c0                        	xor dword ptr [ebp - 0x40], eax
0x804a6cc:   c7 45 c0 12 00 00 00            	mov dword ptr [ebp - 0x40], 0x12
0x804a6d3:   eb 34                           	jmp 0x804a709 <func_1+0xeef>
0x804a6d5:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a6d8:   0f b7 c0                        	movzx eax, ax
0x804a6db:   69 d0 32 c7 00 00               	imul edx, eax, 0xc732
0x804a6e1:   0f bf 45 84                     	movsx eax, word ptr [ebp - 0x7c]
0x804a6e5:   39 85 04 ff ff ff               	cmp dword ptr [ebp - 0xfc], eax
0x804a6eb:   0f 9f c0                        	setg al
0x804a6ee:   0f b6 c8                        	movzx ecx, al
0x804a6f1:   0f bf 85 0a ff ff ff            	movsx eax, word ptr [ebp - 0xf6]
0x804a6f8:   31 c8                           	xor eax, ecx
0x804a6fa:   39 c2                           	cmp edx, eax
0x804a6fc:   0f 9c c0                        	setl al
0x804a6ff:   0f b6 c0                        	movzx eax, al
0x804a702:   09 45 9c                        	or dword ptr [ebp - 0x64], eax
0x804a705:   83 6d c0 03                     	sub dword ptr [ebp - 0x40], 3
0x804a709:   83 7d c0 0b                     	cmp dword ptr [ebp - 0x40], 0xb
0x804a70d:   76 c6                           	jbe 0x804a6d5 <func_1+0xebb>
0x804a70f:   83 6d b0 01                     	sub dword ptr [ebp - 0x50], 1
0x804a713:   83 7d b0 f5                     	cmp dword ptr [ebp - 0x50], -0xb
0x804a717:   0f 84 0c ff ff ff               	je 0x804a629 <func_1+0xe0f>
0x804a71d:   0f b7 4d e4                     	movzx ecx, word ptr [ebp - 0x1c]
0x804a721:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a725:   0f be 55 87                     	movsx edx, byte ptr [ebp - 0x79]
0x804a729:   8d 5a 85                        	lea ebx, [edx - 0x7b]
0x804a72c:   99                              	cdq 
0x804a72d:   f7 fb                           	idiv ebx
0x804a72f:   0f b6 45 e1                     	movzx eax, byte ptr [ebp - 0x1f]
0x804a733:   39 c2                           	cmp edx, eax
0x804a735:   0f 9c c0                        	setl al
0x804a738:   0f b6 d0                        	movzx edx, al
0x804a73b:   0f bf 85 0a ff ff ff            	movsx eax, word ptr [ebp - 0xf6]
0x804a742:   39 c2                           	cmp edx, eax
0x804a744:   0f 95 c0                        	setne al
0x804a747:   0f b6 c0                        	movzx eax, al
0x804a74a:   39 c1                           	cmp ecx, eax
0x804a74c:   0f 9e c0                        	setle al
0x804a74f:   0f b6 d0                        	movzx edx, al
0x804a752:   0f b6 45 f1                     	movzx eax, byte ptr [ebp - 0xf]
0x804a756:   39 c2                           	cmp edx, eax
0x804a758:   0f 9d c0                        	setge al
0x804a75b:   0f b6 c0                        	movzx eax, al
0x804a75e:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a761:   80 45 f3 06                     	add byte ptr [ebp - 0xd], 6
0x804a765:   80 7d f3 07                     	cmp byte ptr [ebp - 0xd], 7
0x804a769:   0f 86 b6 f1 ff ff               	jbe 0x8049925 <func_1+0x10b>
0x804a76f:   eb 04                           	jmp 0x804a775 <func_1+0xf5b>
0x804a771:   90                              	nop 
0x804a772:   eb 01                           	jmp 0x804a775 <func_1+0xf5b>
0x804a774:   90                              	nop 
0x804a775:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x804a779:   0f bf 55 c6                     	movsx edx, word ptr [ebp - 0x3a]
0x804a77d:   0f b7 75 d6                     	movzx esi, word ptr [ebp - 0x2a]
0x804a781:   0f bf 7d 84                     	movsx edi, word ptr [ebp - 0x7c]
0x804a785:   89 bd b0 fe ff ff               	mov dword ptr [ebp - 0x150], edi
0x804a78b:   0f b7 5d de                     	movzx ebx, word ptr [ebp - 0x22]
0x804a78f:   89 9d ac fe ff ff               	mov dword ptr [ebp - 0x154], ebx
0x804a795:   0f b6 4d e1                     	movzx ecx, byte ptr [ebp - 0x1f]
0x804a799:   89 8d a8 fe ff ff               	mov dword ptr [ebp - 0x158], ecx
0x804a79f:   0f be 7d 86                     	movsx edi, byte ptr [ebp - 0x7a]
0x804a7a3:   89 bd a4 fe ff ff               	mov dword ptr [ebp - 0x15c], edi
0x804a7a9:   0f be 5d 87                     	movsx ebx, byte ptr [ebp - 0x79]
0x804a7ad:   89 9d a0 fe ff ff               	mov dword ptr [ebp - 0x160], ebx
0x804a7b3:   0f bf 4d e2                     	movsx ecx, word ptr [ebp - 0x1e]
0x804a7b7:   89 8d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ecx
0x804a7bd:   0f b7 7d e4                     	movzx edi, word ptr [ebp - 0x1c]
0x804a7c1:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x804a7c7:   0f b6 5d e7                     	movzx ebx, byte ptr [ebp - 0x19]
0x804a7cb:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x804a7d1:   0f be 4d ed                     	movsx ecx, byte ptr [ebp - 0x13]
0x804a7d5:   89 8d 90 fe ff ff               	mov dword ptr [ebp - 0x170], ecx
0x804a7db:   0f bf 7d 88                     	movsx edi, word ptr [ebp - 0x78]
0x804a7df:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x804a7e5:   0f b7 5d ee                     	movzx ebx, word ptr [ebp - 0x12]
0x804a7e9:   89 9d 88 fe ff ff               	mov dword ptr [ebp - 0x178], ebx
0x804a7ef:   0f b6 7d f1                     	movzx edi, byte ptr [ebp - 0xf]
0x804a7f3:   0f b6 5d f2                     	movzx ebx, byte ptr [ebp - 0xe]
0x804a7f7:   0f b6 4d f3                     	movzx ecx, byte ptr [ebp - 0xd]
0x804a7fb:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a7fe:   50                              	push eax
0x804a7ff:   52                              	push edx
0x804a800:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a806:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a809:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a80c:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a80f:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a812:   56                              	push esi
0x804a813:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a819:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a81c:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a822:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a828:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a82e:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a834:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a83a:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a840:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a846:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a849:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a84f:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a855:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a85b:   57                              	push edi
0x804a85c:   53                              	push ebx
0x804a85d:   51                              	push ecx
0x804a85e:   e8 c3 ed ff ff                  	call 0x8049626 <set_var>
0x804a863:   83 c4 64                        	add esp, 0x64
0x804a866:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a869:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a86c:   5b                              	pop ebx
0x804a86d:   5e                              	pop esi
0x804a86e:   5f                              	pop edi
0x804a86f:   5d                              	pop ebp
0x804a870:   c3                              	ret 
; function: main at 0x804a871 -- 0x804abf3
0x804a871:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a875:   83 e4 f0                        	and esp, 0xfffffff0
0x804a878:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a87b:   55                              	push ebp
0x804a87c:   89 e5                           	mov ebp, esp
0x804a87e:   53                              	push ebx
0x804a87f:   51                              	push ecx
0x804a880:   83 ec 10                        	sub esp, 0x10
0x804a883:   e8 08 db ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a888:   81 c3 78 27 00 00               	add ebx, 0x2778
0x804a88e:   89 c8                           	mov eax, ecx
0x804a890:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a897:   83 38 02                        	cmp dword ptr [eax], 2
0x804a89a:   75 26                           	jne 0x804a8c2 <main+0x51>
0x804a89c:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a89f:   83 c0 04                        	add eax, 4
0x804a8a2:   8b 00                           	mov eax, dword ptr [eax]
0x804a8a4:   83 ec 08                        	sub esp, 8
0x804a8a7:   8d 93 d8 dc ff ff               	lea edx, [ebx - 0x2328]
0x804a8ad:   52                              	push edx
0x804a8ae:   50                              	push eax
0x804a8af:   e8 4c da ff ff                  	call 0x8048300 <strcmp>
0x804a8b4:   83 c4 10                        	add esp, 0x10
0x804a8b7:   85 c0                           	test eax, eax
0x804a8b9:   75 07                           	jne 0x804a8c2 <main+0x51>
0x804a8bb:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a8c2:   e8 8f db ff ff                  	call 0x8048456 <platform_main_begin>
0x804a8c7:   e8 9f eb ff ff                  	call 0x804946b <crc32_gentab>
0x804a8cc:   e8 49 ef ff ff                  	call 0x804981a <func_1>
0x804a8d1:   0f b6 83 24 00 00 00            	movzx eax, byte ptr [ebx + 0x24]
0x804a8d8:   0f b6 c0                        	movzx eax, al
0x804a8db:   83 ec 04                        	sub esp, 4
0x804a8de:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8e1:   8d 93 da dc ff ff               	lea edx, [ebx - 0x2326]
0x804a8e7:   52                              	push edx
0x804a8e8:   50                              	push eax
0x804a8e9:   e8 89 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8ee:   83 c4 10                        	add esp, 0x10
0x804a8f1:   0f b6 83 25 00 00 00            	movzx eax, byte ptr [ebx + 0x25]
0x804a8f8:   0f b6 c0                        	movzx eax, al
0x804a8fb:   83 ec 04                        	sub esp, 4
0x804a8fe:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a901:   8d 93 de dc ff ff               	lea edx, [ebx - 0x2322]
0x804a907:   52                              	push edx
0x804a908:   50                              	push eax
0x804a909:   e8 69 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a90e:   83 c4 10                        	add esp, 0x10
0x804a911:   0f b6 83 26 00 00 00            	movzx eax, byte ptr [ebx + 0x26]
0x804a918:   0f b6 c0                        	movzx eax, al
0x804a91b:   83 ec 04                        	sub esp, 4
0x804a91e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a921:   8d 93 e2 dc ff ff               	lea edx, [ebx - 0x231e]
0x804a927:   52                              	push edx
0x804a928:   50                              	push eax
0x804a929:   e8 49 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a92e:   83 c4 10                        	add esp, 0x10
0x804a931:   0f b7 83 28 00 00 00            	movzx eax, word ptr [ebx + 0x28]
0x804a938:   0f b7 c0                        	movzx eax, ax
0x804a93b:   83 ec 04                        	sub esp, 4
0x804a93e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a941:   8d 93 e6 dc ff ff               	lea edx, [ebx - 0x231a]
0x804a947:   52                              	push edx
0x804a948:   50                              	push eax
0x804a949:   e8 29 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a94e:   83 c4 10                        	add esp, 0x10
0x804a951:   0f b7 83 2a 00 00 00            	movzx eax, word ptr [ebx + 0x2a]
0x804a958:   98                              	cwde 
0x804a959:   83 ec 04                        	sub esp, 4
0x804a95c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a95f:   8d 93 ea dc ff ff               	lea edx, [ebx - 0x2316]
0x804a965:   52                              	push edx
0x804a966:   50                              	push eax
0x804a967:   e8 0b ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a96c:   83 c4 10                        	add esp, 0x10
0x804a96f:   0f b6 83 2c 00 00 00            	movzx eax, byte ptr [ebx + 0x2c]
0x804a976:   0f be c0                        	movsx eax, al
0x804a979:   83 ec 04                        	sub esp, 4
0x804a97c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a97f:   8d 93 ef dc ff ff               	lea edx, [ebx - 0x2311]
0x804a985:   52                              	push edx
0x804a986:   50                              	push eax
0x804a987:   e8 eb eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a98c:   83 c4 10                        	add esp, 0x10
0x804a98f:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804a995:   89 c2                           	mov edx, eax
0x804a997:   83 ec 04                        	sub esp, 4
0x804a99a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a99d:   8d 83 f4 dc ff ff               	lea eax, [ebx - 0x230c]
0x804a9a3:   50                              	push eax
0x804a9a4:   52                              	push edx
0x804a9a5:   e8 cd eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9aa:   83 c4 10                        	add esp, 0x10
0x804a9ad:   0f b6 83 34 00 00 00            	movzx eax, byte ptr [ebx + 0x34]
0x804a9b4:   0f b6 c0                        	movzx eax, al
0x804a9b7:   83 ec 04                        	sub esp, 4
0x804a9ba:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9bd:   8d 93 f9 dc ff ff               	lea edx, [ebx - 0x2307]
0x804a9c3:   52                              	push edx
0x804a9c4:   50                              	push eax
0x804a9c5:   e8 ad eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9ca:   83 c4 10                        	add esp, 0x10
0x804a9cd:   0f b7 83 36 00 00 00            	movzx eax, word ptr [ebx + 0x36]
0x804a9d4:   0f b7 c0                        	movzx eax, ax
0x804a9d7:   83 ec 04                        	sub esp, 4
0x804a9da:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9dd:   8d 93 fe dc ff ff               	lea edx, [ebx - 0x2302]
0x804a9e3:   52                              	push edx
0x804a9e4:   50                              	push eax
0x804a9e5:   e8 8d eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9ea:   83 c4 10                        	add esp, 0x10
0x804a9ed:   0f b7 83 38 00 00 00            	movzx eax, word ptr [ebx + 0x38]
0x804a9f4:   98                              	cwde 
0x804a9f5:   83 ec 04                        	sub esp, 4
0x804a9f8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9fb:   8d 93 03 dd ff ff               	lea edx, [ebx - 0x22fd]
0x804aa01:   52                              	push edx
0x804aa02:   50                              	push eax
0x804aa03:   e8 6f eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa08:   83 c4 10                        	add esp, 0x10
0x804aa0b:   0f b6 83 3a 00 00 00            	movzx eax, byte ptr [ebx + 0x3a]
0x804aa12:   0f be c0                        	movsx eax, al
0x804aa15:   83 ec 04                        	sub esp, 4
0x804aa18:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa1b:   8d 93 08 dd ff ff               	lea edx, [ebx - 0x22f8]
0x804aa21:   52                              	push edx
0x804aa22:   50                              	push eax
0x804aa23:   e8 4f eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa28:   83 c4 10                        	add esp, 0x10
0x804aa2b:   0f b6 83 3b 00 00 00            	movzx eax, byte ptr [ebx + 0x3b]
0x804aa32:   0f be c0                        	movsx eax, al
0x804aa35:   83 ec 04                        	sub esp, 4
0x804aa38:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa3b:   8d 93 0d dd ff ff               	lea edx, [ebx - 0x22f3]
0x804aa41:   52                              	push edx
0x804aa42:   50                              	push eax
0x804aa43:   e8 2f eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa48:   83 c4 10                        	add esp, 0x10
0x804aa4b:   0f b6 83 84 04 00 00            	movzx eax, byte ptr [ebx + 0x484]
0x804aa52:   0f b6 c0                        	movzx eax, al
0x804aa55:   83 ec 04                        	sub esp, 4
0x804aa58:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa5b:   8d 93 12 dd ff ff               	lea edx, [ebx - 0x22ee]
0x804aa61:   52                              	push edx
0x804aa62:   50                              	push eax
0x804aa63:   e8 0f eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa68:   83 c4 10                        	add esp, 0x10
0x804aa6b:   0f b7 83 3c 00 00 00            	movzx eax, word ptr [ebx + 0x3c]
0x804aa72:   0f b7 c0                        	movzx eax, ax
0x804aa75:   83 ec 04                        	sub esp, 4
0x804aa78:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa7b:   8d 93 17 dd ff ff               	lea edx, [ebx - 0x22e9]
0x804aa81:   52                              	push edx
0x804aa82:   50                              	push eax
0x804aa83:   e8 ef ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa88:   83 c4 10                        	add esp, 0x10
0x804aa8b:   8b 83 88 04 00 00               	mov eax, dword ptr [ebx + 0x488]
0x804aa91:   83 ec 04                        	sub esp, 4
0x804aa94:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa97:   8d 93 1c dd ff ff               	lea edx, [ebx - 0x22e4]
0x804aa9d:   52                              	push edx
0x804aa9e:   50                              	push eax
0x804aa9f:   e8 d3 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaa4:   83 c4 10                        	add esp, 0x10
0x804aaa7:   0f b7 83 3e 00 00 00            	movzx eax, word ptr [ebx + 0x3e]
0x804aaae:   98                              	cwde 
0x804aaaf:   83 ec 04                        	sub esp, 4
0x804aab2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aab5:   8d 93 22 dd ff ff               	lea edx, [ebx - 0x22de]
0x804aabb:   52                              	push edx
0x804aabc:   50                              	push eax
0x804aabd:   e8 b5 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aac2:   83 c4 10                        	add esp, 0x10
0x804aac5:   0f b7 83 8c 04 00 00            	movzx eax, word ptr [ebx + 0x48c]
0x804aacc:   0f b7 c0                        	movzx eax, ax
0x804aacf:   83 ec 04                        	sub esp, 4
0x804aad2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aad5:   8d 93 28 dd ff ff               	lea edx, [ebx - 0x22d8]
0x804aadb:   52                              	push edx
0x804aadc:   50                              	push eax
0x804aadd:   e8 95 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aae2:   83 c4 10                        	add esp, 0x10
0x804aae5:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804aaeb:   83 ec 04                        	sub esp, 4
0x804aaee:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaf1:   8d 93 2e dd ff ff               	lea edx, [ebx - 0x22d2]
0x804aaf7:   52                              	push edx
0x804aaf8:   50                              	push eax
0x804aaf9:   e8 79 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aafe:   83 c4 10                        	add esp, 0x10
0x804ab01:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804ab07:   83 ec 04                        	sub esp, 4
0x804ab0a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab0d:   8d 93 34 dd ff ff               	lea edx, [ebx - 0x22cc]
0x804ab13:   52                              	push edx
0x804ab14:   50                              	push eax
0x804ab15:   e8 5d ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab1a:   83 c4 10                        	add esp, 0x10
0x804ab1d:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804ab23:   83 ec 04                        	sub esp, 4
0x804ab26:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab29:   8d 93 3a dd ff ff               	lea edx, [ebx - 0x22c6]
0x804ab2f:   52                              	push edx
0x804ab30:   50                              	push eax
0x804ab31:   e8 41 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab36:   83 c4 10                        	add esp, 0x10
0x804ab39:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804ab3f:   83 ec 04                        	sub esp, 4
0x804ab42:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab45:   8d 93 40 dd ff ff               	lea edx, [ebx - 0x22c0]
0x804ab4b:   52                              	push edx
0x804ab4c:   50                              	push eax
0x804ab4d:   e8 25 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab52:   83 c4 10                        	add esp, 0x10
0x804ab55:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804ab5b:   89 c2                           	mov edx, eax
0x804ab5d:   83 ec 04                        	sub esp, 4
0x804ab60:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab63:   8d 83 46 dd ff ff               	lea eax, [ebx - 0x22ba]
0x804ab69:   50                              	push eax
0x804ab6a:   52                              	push edx
0x804ab6b:   e8 07 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab70:   83 c4 10                        	add esp, 0x10
0x804ab73:   0f b7 83 54 00 00 00            	movzx eax, word ptr [ebx + 0x54]
0x804ab7a:   98                              	cwde 
0x804ab7b:   83 ec 04                        	sub esp, 4
0x804ab7e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab81:   8d 93 4c dd ff ff               	lea edx, [ebx - 0x22b4]
0x804ab87:   52                              	push edx
0x804ab88:   50                              	push eax
0x804ab89:   e8 e9 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab8e:   83 c4 10                        	add esp, 0x10
0x804ab91:   0f b7 83 56 00 00 00            	movzx eax, word ptr [ebx + 0x56]
0x804ab98:   0f b7 c0                        	movzx eax, ax
0x804ab9b:   83 ec 04                        	sub esp, 4
0x804ab9e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aba1:   8d 93 52 dd ff ff               	lea edx, [ebx - 0x22ae]
0x804aba7:   52                              	push edx
0x804aba8:   50                              	push eax
0x804aba9:   e8 c9 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abae:   83 c4 10                        	add esp, 0x10
0x804abb1:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804abb7:   83 ec 04                        	sub esp, 4
0x804abba:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abbd:   8d 93 58 dd ff ff               	lea edx, [ebx - 0x22a8]
0x804abc3:   52                              	push edx
0x804abc4:   50                              	push eax
0x804abc5:   e8 ad e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abca:   83 c4 10                        	add esp, 0x10
0x804abcd:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804abd3:   f7 d0                           	not eax
0x804abd5:   83 ec 08                        	sub esp, 8
0x804abd8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abdb:   50                              	push eax
0x804abdc:   e8 85 d8 ff ff                  	call 0x8048466 <platform_main_end>
0x804abe1:   83 c4 10                        	add esp, 0x10
0x804abe4:   b8 00 00 00 00                  	mov eax, 0
0x804abe9:   8d 65 f8                        	lea esp, [ebp - 8]
0x804abec:   59                              	pop ecx
0x804abed:   5b                              	pop ebx
0x804abee:   5d                              	pop ebp
0x804abef:   8d 61 fc                        	lea esp, [ecx - 4]
0x804abf2:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804abf3 -- 0x804abf7
0x804abf3:   8b 04 24                        	mov eax, dword ptr [esp]
0x804abf6:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804abf7 -- 0x804abfb
0x804abf7:   8b 14 24                        	mov edx, dword ptr [esp]
0x804abfa:   c3                              	ret 
; data inside code section at 0x804abfb -- 0x804ac00
0x804abfb:   66 90 66 90 90                                     |f.f..           |
; function: __libc_csu_init at 0x804ac00 -- 0x804ac5d
0x804ac00:   55                              	push ebp
0x804ac01:   57                              	push edi
0x804ac02:   56                              	push esi
0x804ac03:   53                              	push ebx
0x804ac04:   e8 87 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ac09:   81 c3 f7 23 00 00               	add ebx, 0x23f7
0x804ac0f:   83 ec 0c                        	sub esp, 0xc
0x804ac12:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ac16:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ac1c:   e8 ab d6 ff ff                  	call 0x80482cc <_init>
0x804ac21:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804ac27:   29 c6                           	sub esi, eax
0x804ac29:   c1 fe 02                        	sar esi, 2
0x804ac2c:   85 f6                           	test esi, esi
0x804ac2e:   74 25                           	je 0x804ac55 <__libc_csu_init+0x55>
0x804ac30:   31 ff                           	xor edi, edi
0x804ac32:   8d b6 00 00 00 00               	lea esi, [esi]
0x804ac38:   83 ec 04                        	sub esp, 4
0x804ac3b:   55                              	push ebp
0x804ac3c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ac40:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ac44:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804ac4b:   83 c7 01                        	add edi, 1
0x804ac4e:   83 c4 10                        	add esp, 0x10
0x804ac51:   39 fe                           	cmp esi, edi
0x804ac53:   75 e3                           	jne 0x804ac38 <__libc_csu_init+0x38>
0x804ac55:   83 c4 0c                        	add esp, 0xc
0x804ac58:   5b                              	pop ebx
0x804ac59:   5e                              	pop esi
0x804ac5a:   5f                              	pop edi
0x804ac5b:   5d                              	pop ebp
0x804ac5c:   c3                              	ret 
; data inside code section at 0x804ac5d -- 0x804ac60
0x804ac5d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804ac60 -- 0x804ac62
0x804ac60:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804ac64 -- 0x804ac78
0x804ac64:   53                              	push ebx
0x804ac65:   83 ec 08                        	sub esp, 8
0x804ac68:   e8 23 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ac6d:   81 c3 93 23 00 00               	add ebx, 0x2393
0x804ac73:   83 c4 08                        	add esp, 8
0x804ac76:   5b                              	pop ebx
0x804ac77:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 7c ac 04 08  04 00 00 00 11 00 10 00   |....|...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804ac78:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804ac88:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804ac98:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804aca8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804acb8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804acc8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804acd8:   31 00 67 5f 32 00 67 5f  34 00 67 5f 38 00 67 5f   |1.g_2.g_4.g_8.g_|
0x804ace8:   39 00 67 5f 31 36 00 67  5f 32 30 00 67 5f 33 38   |9.g_16.g_20.g_38|
0x804acf8:   00 67 5f 33 39 00 67 5f  34 33 00 67 5f 34 37 00   |.g_39.g_43.g_47.|
0x804ad08:   67 5f 34 38 00 67 5f 35  30 00 67 5f 35 33 00 67   |g_48.g_50.g_53.g|
0x804ad18:   5f 38 38 00 67 5f 31 31  30 00 67 5f 31 33 34 00   |_88.g_110.g_134.|
0x804ad28:   67 5f 31 35 36 00 67 5f  31 36 32 00 67 5f 31 36   |g_156.g_162.g_16|
0x804ad38:   39 00 67 5f 32 35 39 00  67 5f 32 38 36 00 67 5f   |9.g_259.g_286.g_|
0x804ad48:   33 33 37 00 67 5f 33 36  35 00 67 5f 33 38 32 00   |337.g_365.g_382.|
0x804ad58:   67 5f 33 39 39 00 00 00  00 00 00 3f ff ff ff 7e   |g_399......?...~|
0x804ad68:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x804ad78:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x804ad88:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804ad98:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804ada8:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804adb8:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804adc8:   01                                                 |.               |
; section: .eh_frame_hdr
0x804adc8:   01 1b 03 3b b8 02 00 00  56 00 00 00 28 d5 ff ff   |...;....V...(...|
0x804add8:   e8 02 00 00 68 d5 ff ff  0c 03 00 00 b8 d5 ff ff   |....h...........|
0x804ade8:   d4 02 00 00 8e d6 ff ff  20 03 00 00 9e d6 ff ff   |........ .......|
0x804adf8:   40 03 00 00 cc d6 ff ff  64 03 00 00 ea d6 ff ff   |@.......d.......|
0x804ae08:   84 03 00 00 12 d7 ff ff  a4 03 00 00 3c d7 ff ff   |............<...|
0x804ae18:   c4 03 00 00 65 d7 ff ff  e4 03 00 00 a8 d7 ff ff   |....e...........|
0x804ae28:   04 04 00 00 e9 d7 ff ff  24 04 00 00 41 d8 ff ff   |........$...A...|
0x804ae38:   48 04 00 00 93 d8 ff ff  6c 04 00 00 d0 d8 ff ff   |H.......l.......|
0x804ae48:   8c 04 00 00 07 d9 ff ff  ac 04 00 00 26 d9 ff ff   |............&...|
0x804ae58:   cc 04 00 00 50 d9 ff ff  ec 04 00 00 7c d9 ff ff   |....P.......|...|
0x804ae68:   0c 05 00 00 a7 d9 ff ff  2c 05 00 00 f0 d9 ff ff   |........,.......|
0x804ae78:   4c 05 00 00 37 da ff ff  6c 05 00 00 91 da ff ff   |L...7...l.......|
0x804ae88:   90 05 00 00 e5 da ff ff  b4 05 00 00 24 db ff ff   |............$...|
0x804ae98:   d4 05 00 00 5d db ff ff  f4 05 00 00 7f db ff ff   |....]...........|
0x804aea8:   14 06 00 00 cd db ff ff  34 06 00 00 09 dc ff ff   |........4.......|
0x804aeb8:   54 06 00 00 92 dc ff ff  74 06 00 00 c4 dc ff ff   |T.......t.......|
0x804aec8:   94 06 00 00 f4 dc ff ff  b4 06 00 00 39 dd ff ff   |............9...|
0x804aed8:   d4 06 00 00 78 dd ff ff  f4 06 00 00 aa dd ff ff   |....x...........|
0x804aee8:   14 07 00 00 d6 dd ff ff  34 07 00 00 f4 dd ff ff   |........4.......|
0x804aef8:   54 07 00 00 1c de ff ff  74 07 00 00 41 de ff ff   |T.......t...A...|
0x804af08:   94 07 00 00 66 de ff ff  b4 07 00 00 9d de ff ff   |....f...........|
0x804af18:   d4 07 00 00 d1 de ff ff  f4 07 00 00 23 df ff ff   |............#...|
0x804af28:   18 08 00 00 6f df ff ff  3c 08 00 00 a6 df ff ff   |....o...<.......|
0x804af38:   5c 08 00 00 d7 df ff ff  7c 08 00 00 f6 df ff ff   |\.......|.......|
0x804af48:   9c 08 00 00 20 e0 ff ff  bc 08 00 00 48 e0 ff ff   |.... .......H...|
0x804af58:   dc 08 00 00 71 e0 ff ff  fc 08 00 00 ad e0 ff ff   |....q...........|
0x804af68:   1c 09 00 00 e7 e0 ff ff  3c 09 00 00 3a e1 ff ff   |........<...:...|
0x804af78:   60 09 00 00 87 e1 ff ff  84 09 00 00 bf e1 ff ff   |`...............|
0x804af88:   a4 09 00 00 f1 e1 ff ff  c4 09 00 00 05 e2 ff ff   |................|
0x804af98:   e4 09 00 00 1c e2 ff ff  04 0a 00 00 31 e2 ff ff   |............1...|
0x804afa8:   24 0a 00 00 47 e2 ff ff  44 0a 00 00 6e e2 ff ff   |$...G...D...n...|
0x804afb8:   64 0a 00 00 93 e2 ff ff  84 0a 00 00 d2 e2 ff ff   |d...............|
0x804afc8:   a4 0a 00 00 0b e3 ff ff  c4 0a 00 00 37 e3 ff ff   |............7...|
0x804afd8:   e4 0a 00 00 5d e3 ff ff  04 0b 00 00 9f e3 ff ff   |....]...........|
0x804afe8:   24 0b 00 00 e1 e3 ff ff  44 0b 00 00 23 e4 ff ff   |$.......D...#...|
0x804aff8:   64 0b 00 00 98 e4 ff ff  84 0b 00 00 f5 e4 ff ff   |d...............|
0x804b008:   a4 0b 00 00 52 e5 ff ff  c4 0b 00 00 af e5 ff ff   |....R...........|
0x804b018:   e4 0b 00 00 3f e6 ff ff  04 0c 00 00 a3 e6 ff ff   |....?...........|
0x804b028:   24 0c 00 00 13 e7 ff ff  44 0c 00 00 5a e7 ff ff   |$.......D...Z...|
0x804b038:   68 0c 00 00 af e7 ff ff  88 0c 00 00 f6 e7 ff ff   |h...............|
0x804b048:   ac 0c 00 00 5e e8 ff ff  d0 0c 00 00 52 ea ff ff   |....^.......R...|
0x804b058:   00 0d 00 00 a9 fa ff ff  30 0d 00 00 2b fe ff ff   |........0...+...|
0x804b068:   68 0d 00 00 2f fe ff ff  7c 0d 00 00 38 fe ff ff   |h.../...|...8...|
0x804b078:   90 0d 00 00 98 fe ff ff  dc 0d 00 00 14            |.............   |
; section: .eh_frame
0x804b084:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b094:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b0a4:   dc d2 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b0b4:   30 00 00 00 38 d2 ff ff  40 00 00 00 00 0e 08 46   |0...8...@......F|
0x804b0c4:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b0d4:   10 00 00 00 54 00 00 00  54 d2 ff ff 08 00 00 00   |....T...T.......|
0x804b0e4:   00 00 00 00 1c 00 00 00  68 00 00 00 66 d3 ff ff   |........h...f...|
0x804b0f4:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b104:   04 04 00 00 20 00 00 00  88 00 00 00 56 d3 ff ff   |.... .......V...|
0x804b114:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b124:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b134:   60 d3 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |`........A....B.|
0x804b144:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b154:   5e d3 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |^...(....A....B.|
0x804b164:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b174:   66 d3 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |f...*....A....B.|
0x804b184:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b194:   70 d3 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |p...)....A....B.|
0x804b1a4:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b1b4:   79 d3 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |y...C....A....B.|
0x804b1c4:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b1d4:   9c d3 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b1e4:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b1f4:   bd d3 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b204:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b214:   90 01 00 00 f1 d3 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b224:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b234:   1c 00 00 00 b4 01 00 00  1f d4 ff ff 3d 00 00 00   |............=...|
0x804b244:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b254:   1c 00 00 00 d4 01 00 00  3c d4 ff ff 37 00 00 00   |........<...7...|
0x804b264:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b274:   1c 00 00 00 f4 01 00 00  53 d4 ff ff 1f 00 00 00   |........S.......|
0x804b284:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b294:   1c 00 00 00 14 02 00 00  52 d4 ff ff 2a 00 00 00   |........R...*...|
0x804b2a4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b2b4:   1c 00 00 00 34 02 00 00  5c d4 ff ff 2c 00 00 00   |....4...\...,...|
0x804b2c4:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b2d4:   1c 00 00 00 54 02 00 00  68 d4 ff ff 2b 00 00 00   |....T...h...+...|
0x804b2e4:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b2f4:   1c 00 00 00 74 02 00 00  73 d4 ff ff 49 00 00 00   |....t...s...I...|
0x804b304:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b314:   1c 00 00 00 94 02 00 00  9c d4 ff ff 47 00 00 00   |............G...|
0x804b324:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b334:   20 00 00 00 b4 02 00 00  c3 d4 ff ff 5a 00 00 00   | ...........Z...|
0x804b344:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b354:   c5 0c 04 04 20 00 00 00  d8 02 00 00 f9 d4 ff ff   |.... ...........|
0x804b364:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b374:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b384:   29 d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |)...?....A....B.|
0x804b394:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b3a4:   48 d5 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |H...9....A....B.|
0x804b3b4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b3c4:   61 d5 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |a..."....A....B.|
0x804b3d4:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b3e4:   63 d5 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |c...N....A....B.|
0x804b3f4:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b404:   91 d5 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b414:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b424:   ad d5 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b434:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b444:   16 d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b454:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b464:   28 d6 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |(...0....A....B.|
0x804b474:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b484:   38 d6 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |8...E....A....B.|
0x804b494:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b4a4:   5d d6 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |]...?....A....B.|
0x804b4b4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b4c4:   7c d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   ||...2....A....B.|
0x804b4d4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b4e4:   8e d6 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b4f4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b504:   9a d6 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b514:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b524:   98 d6 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b534:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b544:   a0 d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b554:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b564:   a5 d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b574:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b584:   aa d6 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b594:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b5a4:   c1 d6 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b5b4:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b5c4:   d5 d6 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b5d4:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b5e4:   60 05 00 00 03 d7 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b5f4:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b604:   1c 00 00 00 84 05 00 00  2b d7 ff ff 37 00 00 00   |........+...7...|
0x804b614:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b624:   1c 00 00 00 a4 05 00 00  42 d7 ff ff 31 00 00 00   |........B...1...|
0x804b634:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b644:   1c 00 00 00 c4 05 00 00  53 d7 ff ff 1f 00 00 00   |........S.......|
0x804b654:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b664:   1c 00 00 00 e4 05 00 00  52 d7 ff ff 2a 00 00 00   |........R...*...|
0x804b674:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b684:   1c 00 00 00 04 06 00 00  5c d7 ff ff 28 00 00 00   |........\...(...|
0x804b694:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b6a4:   1c 00 00 00 24 06 00 00  64 d7 ff ff 29 00 00 00   |....$...d...)...|
0x804b6b4:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b6c4:   1c 00 00 00 44 06 00 00  6d d7 ff ff 3c 00 00 00   |....D...m...<...|
0x804b6d4:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b6e4:   1c 00 00 00 64 06 00 00  89 d7 ff ff 3a 00 00 00   |....d.......:...|
0x804b6f4:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b704:   20 00 00 00 84 06 00 00  a3 d7 ff ff 53 00 00 00   | ...........S...|
0x804b714:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b724:   c5 0c 04 04 20 00 00 00  a8 06 00 00 d2 d7 ff ff   |.... ...........|
0x804b734:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b744:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b754:   fb d7 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b764:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b774:   13 d8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b784:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b794:   25 d8 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |%........A....B.|
0x804b7a4:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b7b4:   19 d8 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b7c4:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b7d4:   10 d8 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b7e4:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b7f4:   05 d8 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b804:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b814:   fb d7 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b824:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b834:   02 d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b844:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b854:   07 d8 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b864:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b874:   26 d8 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |&...9....A....B.|
0x804b884:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b894:   3f d8 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |?...,....A....B.|
0x804b8a4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b8b4:   4b d8 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |K...&....A....B.|
0x804b8c4:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b8d4:   51 d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |Q...B....A....B.|
0x804b8e4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b8f4:   73 d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |s...B....A....B.|
0x804b904:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b914:   95 d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b924:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b934:   b7 d8 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804b944:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b954:   0c d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b964:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b974:   49 d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |I...]....A....B.|
0x804b984:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b994:   86 d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b9a4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b9b4:   c3 d9 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b9c4:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b9d4:   33 da ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |3...d....A....B.|
0x804b9e4:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b9f4:   77 da ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |w...p....A....B.|
0x804ba04:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804ba14:   c7 da ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804ba24:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804ba34:   b0 09 00 00 ea da ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804ba44:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804ba54:   d0 09 00 00 1f db ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804ba64:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804ba74:   20 00 00 00 f4 09 00 00  42 db ff ff 68 00 00 00   | .......B...h...|
0x804ba84:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804ba94:   0c 04 04 00 2c 00 00 00  18 0a 00 00 86 db ff ff   |....,...........|
0x804baa4:   f4 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804bab4:   86 04 83 05 03 e7 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bac4:   04 00 00 00 2c 00 00 00  48 0a 00 00 4a dd ff ff   |....,...H...J...|
0x804bad4:   57 10 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |W....A....B..I..|
0x804bae4:   86 04 83 05 03 47 10 c3  41 c6 41 c7 41 c5 0c 04   |.....G..A.A.A...|
0x804baf4:   04 00 00 00 34 00 00 00  78 0a 00 00 71 ed ff ff   |....4...x...q...|
0x804bb04:   82 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804bb14:   0f 03 75 78 06 10 03 02  75 7c 03 6d 03 c1 0c 01   |..ux....u|.m....|
0x804bb24:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bb34:   b0 0a 00 00 bb f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804bb44:   10 00 00 00 c4 0a 00 00  ab f0 ff ff 04 00 00 00   |................|
0x804bb54:   00 00 00 00 48 00 00 00  d8 0a 00 00 a0 f0 ff ff   |....H...........|
0x804bb64:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bb74:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bb84:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bb94:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bba4:   10 00 00 00 24 0b 00 00  b4 f0 ff ff 02 00 00 00   |....$...........|
0x804bbb4:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 64 ac 04 08  19 00 00 00 0c cf 04 08   |....d...........|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff 63 85 f8 00   |............c...|
0x804d028:   06 00 28 e0 e4 00 00 00  fe ff ff ff 37 00 04 00   |..(.........7...|
0x804d038:   07 eb f7 01 a6 73 ff ff  01 00 00 00 94 ca 73 d1   |.....s........s.|
0x804d048:   18 ce 02 a4 74 b3 84 df  03 00 00 00 c8 31 f7 ff   |....t........1..|
0x804d058:   fd ff ff ff ??                                     |....?           |
