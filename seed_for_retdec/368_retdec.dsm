;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 16:58:06
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 c0 d0 ff ff               	lea eax, [ebx - 0x2f40]
0x804835c:   50                              	push eax
0x804835d:   8d 83 60 d0 ff ff               	lea eax, [ebx - 0x2fa0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 ad aa 04 08               	mov eax, 0x804aaad
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 c0 e0 04 08                  	mov eax, 0x804e0c0
0x80483a5:   3d c0 e0 04 08                  	cmp eax, 0x804e0c0
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 c0 e0 04 08                  	push 0x804e0c0
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 c0 e0 04 08                  	mov eax, 0x804e0c0
0x80483e5:   2d c0 e0 04 08                  	sub eax, 0x804e0c0
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 c0 e0 04 08                  	push 0x804e0c0
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d c0 e0 04 08 00            	cmp byte ptr [0x804e0c0], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 c0 e0 04 08 01            	mov byte ptr [0x804e0c0], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 f9 2b 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 e5 2b 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 e0 d0 ff ff               	lea edx, [eax - 0x2f20]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 b8 2b 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 9a 2b 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 72 2b 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 48 2b 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 1f 2b 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 dc 2a 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 9a 2a 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 42 2a 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 f1 29 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 b4 29 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 7d 29 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 5e 29 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 34 29 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 08 29 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 dd 28 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 94 28 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 4c 28 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 f2 27 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 9f 27 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 60 27 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 2a 27 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 08 27 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 ba 26 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 7e 26 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 f5 25 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 c3 25 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 93 25 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 4e 25 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 0f 25 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 dd 24 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 ae 24 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 90 24 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 68 24 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 43 24 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 1e 24 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 e7 23 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 b2 23 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 60 23 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 15 23 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 de 22 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 ad 22 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 8e 22 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 64 22 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 3c 22 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 13 22 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 d7 21 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 9c 21 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 49 21 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 fd 20 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 c5 20 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 96 20 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 82 20 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 6b 20 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 56 20 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 40 20 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 19 20 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 f4 1f 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 b5 1f 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 7c 1f 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 50 1f 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 2a 1f 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 38 d2 ff ff               	fld dword ptr [eax - 0x2dc8]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 38 d2 ff ff               	fld dword ptr [eax - 0x2dc8]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 3c d2 ff ff               	fld dword ptr [eax - 0x2dc4]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 e8 1e 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 38 d2 ff ff               	fld dword ptr [eax - 0x2dc8]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 38 d2 ff ff               	fld dword ptr [eax - 0x2dc8]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 3c d2 ff ff               	fld dword ptr [eax - 0x2dc4]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 a6 1e 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 40 d2 ff ff               	fld dword ptr [eax - 0x2dc0]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 44 d2 ff ff               	fld dword ptr [eax - 0x2dbc]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 48 d2 ff ff               	fld dword ptr [eax - 0x2db8]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 64 1e 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 4c d2 ff ff               	fld dword ptr [eax - 0x2db4]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 50 d2 ff ff               	fld dword ptr [eax - 0x2db0]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 54 d2 ff ff               	fld dword ptr [eax - 0x2dac]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 ec 1d 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 58 d2 ff ff               	fld qword ptr [eax - 0x2da8]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 58 d2 ff ff               	fld qword ptr [eax - 0x2da8]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 60 d2 ff ff               	fld qword ptr [eax - 0x2da0]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 8f 1d 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 58 d2 ff ff               	fld qword ptr [eax - 0x2da8]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 58 d2 ff ff               	fld qword ptr [eax - 0x2da8]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 60 d2 ff ff               	fld qword ptr [eax - 0x2da0]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 32 1d 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 68 d2 ff ff               	fld qword ptr [eax - 0x2d98]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 70 d2 ff ff               	fld qword ptr [eax - 0x2d90]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 78 d2 ff ff               	fld qword ptr [eax - 0x2d88]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 d5 1c 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 80 d2 ff ff               	fld qword ptr [eax - 0x2d80]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 88 d2 ff ff               	fld qword ptr [eax - 0x2d78]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 90 d2 ff ff               	fld qword ptr [eax - 0x2d70]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 45 1c 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 98 d2 ff ff               	fld dword ptr [eax - 0x2d68]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 9c d2 ff ff               	fld dword ptr [eax - 0x2d64]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 e1 1b 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 e0 00 00 00            	mov dword ptr [eax + edx*4 + 0xe0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 70 1b 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 e0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xe0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 2d 1b 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 f0 d0 ff ff               	lea eax, [ebx - 0x2f10]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 14 d1 ff ff               	lea eax, [ebx - 0x2eec]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80498bc
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 68                        	sub esp, 0x68
0x804962f:   e8 23 1a 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x8049634:   05 cc 49 00 00                  	add eax, 0x49cc
0x8049639:   8b 4d 18                        	mov ecx, dword ptr [ebp + 0x18]
0x804963c:   89 4d b4                        	mov dword ptr [ebp - 0x4c], ecx
0x804963f:   8b 4d 1c                        	mov ecx, dword ptr [ebp + 0x1c]
0x8049642:   8b 5d 28                        	mov ebx, dword ptr [ebp + 0x28]
0x8049645:   8b 75 48                        	mov esi, dword ptr [ebp + 0x48]
0x8049648:   8b 7d 50                        	mov edi, dword ptr [ebp + 0x50]
0x804964b:   8b 55 58                        	mov edx, dword ptr [ebp + 0x58]
0x804964e:   89 55 b0                        	mov dword ptr [ebp - 0x50], edx
0x8049651:   8b 55 5c                        	mov edx, dword ptr [ebp + 0x5c]
0x8049654:   89 55 ac                        	mov dword ptr [ebp - 0x54], edx
0x8049657:   8b 55 78                        	mov edx, dword ptr [ebp + 0x78]
0x804965a:   89 55 a8                        	mov dword ptr [ebp - 0x58], edx
0x804965d:   8b 95 84 00 00 00               	mov edx, dword ptr [ebp + 0x84]
0x8049663:   89 55 a4                        	mov dword ptr [ebp - 0x5c], edx
0x8049666:   8b 95 8c 00 00 00               	mov edx, dword ptr [ebp + 0x8c]
0x804966c:   89 55 a0                        	mov dword ptr [ebp - 0x60], edx
0x804966f:   8b 95 90 00 00 00               	mov edx, dword ptr [ebp + 0x90]
0x8049675:   89 55 9c                        	mov dword ptr [ebp - 0x64], edx
0x8049678:   8b 95 94 00 00 00               	mov edx, dword ptr [ebp + 0x94]
0x804967e:   89 55 98                        	mov dword ptr [ebp - 0x68], edx
0x8049681:   8b 95 a4 00 00 00               	mov edx, dword ptr [ebp + 0xa4]
0x8049687:   89 55 94                        	mov dword ptr [ebp - 0x6c], edx
0x804968a:   8b 95 a8 00 00 00               	mov edx, dword ptr [ebp + 0xa8]
0x8049690:   89 55 90                        	mov dword ptr [ebp - 0x70], edx
0x8049693:   8b 95 b0 00 00 00               	mov edx, dword ptr [ebp + 0xb0]
0x8049699:   89 55 8c                        	mov dword ptr [ebp - 0x74], edx
0x804969c:   0f b7 55 b4                     	movzx edx, word ptr [ebp - 0x4c]
0x80496a0:   66 89 55 f0                     	mov word ptr [ebp - 0x10], dx
0x80496a4:   89 ca                           	mov edx, ecx
0x80496a6:   88 55 ec                        	mov byte ptr [ebp - 0x14], dl
0x80496a9:   89 da                           	mov edx, ebx
0x80496ab:   66 89 55 e8                     	mov word ptr [ebp - 0x18], dx
0x80496af:   89 f2                           	mov edx, esi
0x80496b1:   66 89 55 e4                     	mov word ptr [ebp - 0x1c], dx
0x80496b5:   89 fa                           	mov edx, edi
0x80496b7:   88 55 e0                        	mov byte ptr [ebp - 0x20], dl
0x80496ba:   0f b6 55 b0                     	movzx edx, byte ptr [ebp - 0x50]
0x80496be:   88 55 dc                        	mov byte ptr [ebp - 0x24], dl
0x80496c1:   0f b6 55 ac                     	movzx edx, byte ptr [ebp - 0x54]
0x80496c5:   88 55 d8                        	mov byte ptr [ebp - 0x28], dl
0x80496c8:   0f b6 55 a8                     	movzx edx, byte ptr [ebp - 0x58]
0x80496cc:   88 55 d4                        	mov byte ptr [ebp - 0x2c], dl
0x80496cf:   0f b6 55 a4                     	movzx edx, byte ptr [ebp - 0x5c]
0x80496d3:   88 55 d0                        	mov byte ptr [ebp - 0x30], dl
0x80496d6:   0f b7 55 a0                     	movzx edx, word ptr [ebp - 0x60]
0x80496da:   66 89 55 cc                     	mov word ptr [ebp - 0x34], dx
0x80496de:   0f b6 55 9c                     	movzx edx, byte ptr [ebp - 0x64]
0x80496e2:   88 55 c8                        	mov byte ptr [ebp - 0x38], dl
0x80496e5:   0f b7 55 98                     	movzx edx, word ptr [ebp - 0x68]
0x80496e9:   66 89 55 c4                     	mov word ptr [ebp - 0x3c], dx
0x80496ed:   0f b7 55 94                     	movzx edx, word ptr [ebp - 0x6c]
0x80496f1:   66 89 55 c0                     	mov word ptr [ebp - 0x40], dx
0x80496f5:   0f b7 55 90                     	movzx edx, word ptr [ebp - 0x70]
0x80496f9:   66 89 55 bc                     	mov word ptr [ebp - 0x44], dx
0x80496fd:   0f b6 55 8c                     	movzx edx, byte ptr [ebp - 0x74]
0x8049701:   88 55 b8                        	mov byte ptr [ebp - 0x48], dl
0x8049704:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049707:   89 90 28 00 00 00               	mov dword ptr [eax + 0x28], edx
0x804970d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049710:   89 90 2c 00 00 00               	mov dword ptr [eax + 0x2c], edx
0x8049716:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049719:   89 90 30 00 00 00               	mov dword ptr [eax + 0x30], edx
0x804971f:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049722:   89 90 34 00 00 00               	mov dword ptr [eax + 0x34], edx
0x8049728:   0f b7 55 f0                     	movzx edx, word ptr [ebp - 0x10]
0x804972c:   66 89 90 38 00 00 00            	mov word ptr [eax + 0x38], dx
0x8049733:   0f b6 55 ec                     	movzx edx, byte ptr [ebp - 0x14]
0x8049737:   88 90 3a 00 00 00               	mov byte ptr [eax + 0x3a], dl
0x804973d:   8b 55 20                        	mov edx, dword ptr [ebp + 0x20]
0x8049740:   89 90 3c 00 00 00               	mov dword ptr [eax + 0x3c], edx
0x8049746:   8b 55 24                        	mov edx, dword ptr [ebp + 0x24]
0x8049749:   89 90 40 00 00 00               	mov dword ptr [eax + 0x40], edx
0x804974f:   0f b7 55 e8                     	movzx edx, word ptr [ebp - 0x18]
0x8049753:   66 89 90 44 00 00 00            	mov word ptr [eax + 0x44], dx
0x804975a:   8b 55 2c                        	mov edx, dword ptr [ebp + 0x2c]
0x804975d:   89 90 48 00 00 00               	mov dword ptr [eax + 0x48], edx
0x8049763:   8b 55 30                        	mov edx, dword ptr [ebp + 0x30]
0x8049766:   89 90 4c 00 00 00               	mov dword ptr [eax + 0x4c], edx
0x804976c:   8b 55 34                        	mov edx, dword ptr [ebp + 0x34]
0x804976f:   89 90 50 00 00 00               	mov dword ptr [eax + 0x50], edx
0x8049775:   8b 55 38                        	mov edx, dword ptr [ebp + 0x38]
0x8049778:   89 90 54 00 00 00               	mov dword ptr [eax + 0x54], edx
0x804977e:   8b 55 3c                        	mov edx, dword ptr [ebp + 0x3c]
0x8049781:   89 90 58 00 00 00               	mov dword ptr [eax + 0x58], edx
0x8049787:   8b 55 40                        	mov edx, dword ptr [ebp + 0x40]
0x804978a:   89 90 5c 00 00 00               	mov dword ptr [eax + 0x5c], edx
0x8049790:   8b 55 44                        	mov edx, dword ptr [ebp + 0x44]
0x8049793:   89 90 60 00 00 00               	mov dword ptr [eax + 0x60], edx
0x8049799:   0f b7 55 e4                     	movzx edx, word ptr [ebp - 0x1c]
0x804979d:   66 89 90 64 00 00 00            	mov word ptr [eax + 0x64], dx
0x80497a4:   8b 55 4c                        	mov edx, dword ptr [ebp + 0x4c]
0x80497a7:   89 90 68 00 00 00               	mov dword ptr [eax + 0x68], edx
0x80497ad:   0f b6 55 e0                     	movzx edx, byte ptr [ebp - 0x20]
0x80497b1:   88 90 e4 04 00 00               	mov byte ptr [eax + 0x4e4], dl
0x80497b7:   8b 55 54                        	mov edx, dword ptr [ebp + 0x54]
0x80497ba:   89 90 6c 00 00 00               	mov dword ptr [eax + 0x6c], edx
0x80497c0:   0f b6 55 dc                     	movzx edx, byte ptr [ebp - 0x24]
0x80497c4:   88 90 70 00 00 00               	mov byte ptr [eax + 0x70], dl
0x80497ca:   0f b6 55 d8                     	movzx edx, byte ptr [ebp - 0x28]
0x80497ce:   88 90 71 00 00 00               	mov byte ptr [eax + 0x71], dl
0x80497d4:   8b 55 60                        	mov edx, dword ptr [ebp + 0x60]
0x80497d7:   89 90 74 00 00 00               	mov dword ptr [eax + 0x74], edx
0x80497dd:   8b 55 64                        	mov edx, dword ptr [ebp + 0x64]
0x80497e0:   89 90 78 00 00 00               	mov dword ptr [eax + 0x78], edx
0x80497e6:   8b 55 68                        	mov edx, dword ptr [ebp + 0x68]
0x80497e9:   89 90 7c 00 00 00               	mov dword ptr [eax + 0x7c], edx
0x80497ef:   8b 55 6c                        	mov edx, dword ptr [ebp + 0x6c]
0x80497f2:   89 90 80 00 00 00               	mov dword ptr [eax + 0x80], edx
0x80497f8:   8b 55 70                        	mov edx, dword ptr [ebp + 0x70]
0x80497fb:   89 90 84 00 00 00               	mov dword ptr [eax + 0x84], edx
0x8049801:   8b 55 74                        	mov edx, dword ptr [ebp + 0x74]
0x8049804:   89 90 88 00 00 00               	mov dword ptr [eax + 0x88], edx
0x804980a:   0f b6 55 d4                     	movzx edx, byte ptr [ebp - 0x2c]
0x804980e:   88 90 8c 00 00 00               	mov byte ptr [eax + 0x8c], dl
0x8049814:   8b 55 7c                        	mov edx, dword ptr [ebp + 0x7c]
0x8049817:   89 90 90 00 00 00               	mov dword ptr [eax + 0x90], edx
0x804981d:   8b 95 80 00 00 00               	mov edx, dword ptr [ebp + 0x80]
0x8049823:   89 90 94 00 00 00               	mov dword ptr [eax + 0x94], edx
0x8049829:   0f b6 55 d0                     	movzx edx, byte ptr [ebp - 0x30]
0x804982d:   88 90 98 00 00 00               	mov byte ptr [eax + 0x98], dl
0x8049833:   8b 95 88 00 00 00               	mov edx, dword ptr [ebp + 0x88]
0x8049839:   89 90 9c 00 00 00               	mov dword ptr [eax + 0x9c], edx
0x804983f:   0f b7 55 cc                     	movzx edx, word ptr [ebp - 0x34]
0x8049843:   66 89 90 a0 00 00 00            	mov word ptr [eax + 0xa0], dx
0x804984a:   0f b6 55 c8                     	movzx edx, byte ptr [ebp - 0x38]
0x804984e:   88 90 a2 00 00 00               	mov byte ptr [eax + 0xa2], dl
0x8049854:   0f b7 55 c4                     	movzx edx, word ptr [ebp - 0x3c]
0x8049858:   66 89 90 a4 00 00 00            	mov word ptr [eax + 0xa4], dx
0x804985f:   8b 95 98 00 00 00               	mov edx, dword ptr [ebp + 0x98]
0x8049865:   89 90 a8 00 00 00               	mov dword ptr [eax + 0xa8], edx
0x804986b:   8b 95 9c 00 00 00               	mov edx, dword ptr [ebp + 0x9c]
0x8049871:   89 90 ac 00 00 00               	mov dword ptr [eax + 0xac], edx
0x8049877:   8b 95 a0 00 00 00               	mov edx, dword ptr [ebp + 0xa0]
0x804987d:   89 90 b0 00 00 00               	mov dword ptr [eax + 0xb0], edx
0x8049883:   0f b7 55 c0                     	movzx edx, word ptr [ebp - 0x40]
0x8049887:   66 89 90 b4 00 00 00            	mov word ptr [eax + 0xb4], dx
0x804988e:   0f b7 55 bc                     	movzx edx, word ptr [ebp - 0x44]
0x8049892:   66 89 90 b6 00 00 00            	mov word ptr [eax + 0xb6], dx
0x8049899:   8b 95 ac 00 00 00               	mov edx, dword ptr [ebp + 0xac]
0x804989f:   89 90 b8 00 00 00               	mov dword ptr [eax + 0xb8], edx
0x80498a5:   0f b6 55 b8                     	movzx edx, byte ptr [ebp - 0x48]
0x80498a9:   88 90 bc 00 00 00               	mov byte ptr [eax + 0xbc], dl
0x80498af:   b8 00 00 00 00                  	mov eax, 0
0x80498b4:   83 c4 68                        	add esp, 0x68
0x80498b7:   5b                              	pop ebx
0x80498b8:   5e                              	pop esi
0x80498b9:   5f                              	pop edi
0x80498ba:   5d                              	pop ebp
0x80498bb:   c3                              	ret 
; function: func_1 at 0x80498bc -- 0x804aaad
0x80498bc:   55                              	push ebp
0x80498bd:   89 e5                           	mov ebp, esp
0x80498bf:   57                              	push edi
0x80498c0:   56                              	push esi
0x80498c1:   53                              	push ebx
0x80498c2:   81 ec c4 01 00 00               	sub esp, 0x1c4
0x80498c8:   e8 8a 17 00 00                  	call 0x804b057 <__x86.get_pc_thunk.ax>
0x80498cd:   05 33 47 00 00                  	add eax, 0x4733
0x80498d2:   c7 85 98 fe ff ff cc 08 5e 56   	mov dword ptr [ebp - 0x168], 0x565e08cc
0x80498dc:   c7 85 94 fe ff ff c3 c9 4b 08   	mov dword ptr [ebp - 0x16c], 0x84bc9c3
0x80498e6:   c7 85 ac fe ff ff 9a f2 1f 98   	mov dword ptr [ebp - 0x154], 0x981ff29a
0x80498f0:   c7 45 f0 ff ff ff ff            	mov dword ptr [ebp - 0x10], 0xffffffff
0x80498f7:   c7 45 ec f6 ff ff ff            	mov dword ptr [ebp - 0x14], 0xfffffff6
0x80498fe:   66 c7 45 ea 65 5b               	mov word ptr [ebp - 0x16], 0x5b65
0x8049904:   c6 85 57 ff ff ff 5f            	mov byte ptr [ebp - 0xa9], 0x5f
0x804990b:   c7 85 90 fe ff ff c9 0e fe c2   	mov dword ptr [ebp - 0x170], 0xc2fe0ec9
0x8049915:   c7 85 8c fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x174], 0xffffffff
0x804991f:   66 c7 85 76 ff ff ff d7 e7      	mov word ptr [ebp - 0x8a], 0xe7d7
0x8049928:   c7 85 44 ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xbc], 0xfffffffc
0x8049932:   c7 45 b8 ff ff ff ff            	mov dword ptr [ebp - 0x48], 0xffffffff
0x8049939:   c7 85 40 ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0xc0], 8
0x8049943:   c7 45 e4 de fd b0 b9            	mov dword ptr [ebp - 0x1c], 0xb9b0fdde
0x804994a:   c7 85 4c ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xb4], 9
0x8049954:   c7 85 48 ff ff ff 75 b9 00 f4   	mov dword ptr [ebp - 0xb8], 0xf400b975
0x804995e:   c7 85 58 ff ff ff 78 46 59 e9   	mov dword ptr [ebp - 0xa8], 0xe9594678
0x8049968:   66 c7 85 3e ff ff ff 24 4e      	mov word ptr [ebp - 0xc2], 0x4e24
0x8049971:   c7 45 e0 86 28 9c af            	mov dword ptr [ebp - 0x20], 0xaf9c2886
0x8049978:   c6 45 df 00                     	mov byte ptr [ebp - 0x21], 0
0x804997c:   c7 45 d4 39 48 c0 ca            	mov dword ptr [ebp - 0x2c], 0xcac04839
0x8049983:   c6 85 3d ff ff ff 01            	mov byte ptr [ebp - 0xc3], 1
0x804998a:   c6 45 a7 45                     	mov byte ptr [ebp - 0x59], 0x45
0x804998e:   c7 45 a0 03 00 00 00            	mov dword ptr [ebp - 0x60], 3
0x8049995:   c7 45 9c 07 00 00 00            	mov dword ptr [ebp - 0x64], 7
0x804999c:   c7 45 98 51 5b 39 41            	mov dword ptr [ebp - 0x68], 0x41395b51
0x80499a3:   c7 45 94 19 04 48 bd            	mov dword ptr [ebp - 0x6c], 0xbd480419
0x80499aa:   c7 45 bc e6 00 9b 84            	mov dword ptr [ebp - 0x44], 0x849b00e6
0x80499b1:   c7 45 ac 41 ee 28 b3            	mov dword ptr [ebp - 0x54], 0xb328ee41
0x80499b8:   c6 45 93 04                     	mov byte ptr [ebp - 0x6d], 4
0x80499bc:   c7 45 8c 6e bf 2a 19            	mov dword ptr [ebp - 0x74], 0x192abf6e
0x80499c3:   c7 45 88 ff ff ff ff            	mov dword ptr [ebp - 0x78], 0xffffffff
0x80499ca:   c6 45 87 f9                     	mov byte ptr [ebp - 0x79], 0xf9
0x80499ce:   c7 45 80 8d b0 da 4c            	mov dword ptr [ebp - 0x80], 0x4cdab08d
0x80499d5:   66 c7 85 88 fe ff ff d1 27      	mov word ptr [ebp - 0x178], 0x27d1
0x80499de:   c6 45 b3 01                     	mov byte ptr [ebp - 0x4d], 1
0x80499e2:   66 c7 85 86 fe ff ff 06 00      	mov word ptr [ebp - 0x17a], 6
0x80499eb:   c7 85 80 fe ff ff f6 ff ff ff   	mov dword ptr [ebp - 0x180], 0xfffffff6
0x80499f5:   c7 85 7c fe ff ff 48 c9 b7 e2   	mov dword ptr [ebp - 0x184], 0xe2b7c948
0x80499ff:   c7 85 78 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x188], 0xffffffff
0x8049a09:   66 c7 85 76 fe ff ff 53 15      	mov word ptr [ebp - 0x18a], 0x1553
0x8049a12:   66 c7 85 74 fe ff ff bd 05      	mov word ptr [ebp - 0x18c], 0x5bd
0x8049a1b:   c7 85 dc fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x124], 4
0x8049a25:   c6 85 db fe ff ff c0            	mov byte ptr [ebp - 0x125], 0xc0
0x8049a2c:   c6 85 da fe ff ff f7            	mov byte ptr [ebp - 0x126], 0xf7
0x8049a33:   c7 45 c8 01 00 00 00            	mov dword ptr [ebp - 0x38], 1
0x8049a3a:   c7 85 18 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0xe8], 0xfffffffe
0x8049a44:   66 c7 45 aa 0d 90               	mov word ptr [ebp - 0x56], 0x900d
0x8049a4a:   c7 45 b4 fb ff ff ff            	mov dword ptr [ebp - 0x4c], 0xfffffffb
0x8049a51:   c7 85 d4 fe ff ff f6 ff ff ff   	mov dword ptr [ebp - 0x12c], 0xfffffff6
0x8049a5b:   66 c7 85 d2 fe ff ff ff ff      	mov word ptr [ebp - 0x12e], 0xffff
0x8049a64:   c7 85 cc fe ff ff 51 1f 6b 2b   	mov dword ptr [ebp - 0x134], 0x2b6b1f51
0x8049a6e:   66 c7 45 a8 f4 68               	mov word ptr [ebp - 0x58], 0x68f4
0x8049a74:   c7 85 c8 fe ff ff ac 77 b9 85   	mov dword ptr [ebp - 0x138], 0x85b977ac
0x8049a7e:   66 c7 85 c6 fe ff ff 01 00      	mov word ptr [ebp - 0x13a], 1
0x8049a87:   c7 85 c0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x140], 0
0x8049a91:   c7 85 2c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd4], 0
0x8049a9b:   c7 85 bc fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x144], 0xffffffff
0x8049aa5:   66 c7 85 ba fe ff ff 06 65      	mov word ptr [ebp - 0x146], 0x6506
0x8049aae:   c7 85 b4 fe ff ff 29 ed dd 03   	mov dword ptr [ebp - 0x14c], 0x3dded29
0x8049ab8:   c6 85 b3 fe ff ff 04            	mov byte ptr [ebp - 0x14d], 4
0x8049abf:   0f be 85 da fe ff ff            	movsx eax, byte ptr [ebp - 0x126]
0x8049ac6:   39 85 98 fe ff ff               	cmp dword ptr [ebp - 0x168], eax
0x8049acc:   0f 94 c0                        	sete al
0x8049acf:   0f b6 d8                        	movzx ebx, al
0x8049ad2:   0f be 85 da fe ff ff            	movsx eax, byte ptr [ebp - 0x126]
0x8049ad9:   ba 45 ad ea 96                  	mov edx, 0x96eaad45
0x8049ade:   f7 e2                           	mul edx
0x8049ae0:   89 d0                           	mov eax, edx
0x8049ae2:   c1 e8 1a                        	shr eax, 0x1a
0x8049ae5:   0f bf d0                        	movsx edx, ax
0x8049ae8:   8b 85 94 fe ff ff               	mov eax, dword ptr [ebp - 0x16c]
0x8049aee:   98                              	cwde 
0x8049aef:   89 c1                           	mov ecx, eax
0x8049af1:   d3 e2                           	shl edx, cl
0x8049af3:   89 d0                           	mov eax, edx
0x8049af5:   39 c3                           	cmp ebx, eax
0x8049af7:   75 07                           	jne 0x8049b00 <func_1+0x244>
0x8049af9:   b8 eb 82 61 3b                  	mov eax, 0x3b6182eb
0x8049afe:   eb 05                           	jmp 0x8049b05 <func_1+0x249>
0x8049b00:   b8 ea 82 61 3b                  	mov eax, 0x3b6182ea
0x8049b05:   89 85 ac fe ff ff               	mov dword ptr [ebp - 0x154], eax
0x8049b0b:   c7 45 f0 02 00 00 00            	mov dword ptr [ebp - 0x10], 2
0x8049b12:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049b15:   09 45 c8                        	or dword ptr [ebp - 0x38], eax
0x8049b18:   81 7d c8 22 b7 17 6b            	cmp dword ptr [ebp - 0x38], 0x6b17b722
0x8049b1f:   7f 0a                           	jg 0x8049b2b <func_1+0x26f>
0x8049b21:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049b25:   0f 84 50 04 00 00               	je 0x8049f7b <func_1+0x6bf>
0x8049b2b:   c6 85 1e ff ff ff 05            	mov byte ptr [ebp - 0xe2], 5
0x8049b32:   c7 85 64 ff ff ff 6e 01 26 1d   	mov dword ptr [ebp - 0x9c], 0x1d26016e
0x8049b3c:   c7 85 70 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x90], 1
0x8049b46:   66 c7 85 1c ff ff ff 00 00      	mov word ptr [ebp - 0xe4], 0
0x8049b4f:   83 6d ec 01                     	sub dword ptr [ebp - 0x14], 1
0x8049b53:   c7 85 18 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe8], 0
0x8049b5d:   81 7d ec af 8e 00 00            	cmp dword ptr [ebp - 0x14], 0x8eaf
0x8049b64:   0f 95 c0                        	setne al
0x8049b67:   0f b6 c0                        	movzx eax, al
0x8049b6a:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x8049b6e:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049b71:   0f b7 d0                        	movzx edx, ax
0x8049b74:   0f b6 85 1e ff ff ff            	movzx eax, byte ptr [ebp - 0xe2]
0x8049b7b:   01 d0                           	add eax, edx
0x8049b7d:   83 f8 72                        	cmp eax, 0x72
0x8049b80:   0f 9f c0                        	setg al
0x8049b83:   88 85 57 ff ff ff               	mov byte ptr [ebp - 0xa9], al
0x8049b89:   80 bd 57 ff ff ff 00            	cmp byte ptr [ebp - 0xa9], 0
0x8049b90:   0f 95 c0                        	setne al
0x8049b93:   0f b6 c0                        	movzx eax, al
0x8049b96:   09 45 c8                        	or dword ptr [ebp - 0x38], eax
0x8049b99:   66 c7 45 aa f8 ff               	mov word ptr [ebp - 0x56], 0xfff8
0x8049b9f:   66 c7 85 16 ff ff ff 5e 22      	mov word ptr [ebp - 0xea], 0x225e
0x8049ba8:   c7 85 10 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xf0], 0
0x8049bb2:   c7 85 0c ff ff ff 83 de 69 f5   	mov dword ptr [ebp - 0xf4], 0xf569de83
0x8049bbc:   66 c7 85 0a ff ff ff bf 74      	mov word ptr [ebp - 0xf6], 0x74bf
0x8049bc5:   c7 85 78 ff ff ff a4 15 f0 9f   	mov dword ptr [ebp - 0x88], 0x9ff015a4
0x8049bcf:   66 c7 85 76 ff ff ff 00 00      	mov word ptr [ebp - 0x8a], 0
0x8049bd8:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049bdc:   0f 9f c0                        	setg al
0x8049bdf:   0f b6 c0                        	movzx eax, al
0x8049be2:   39 85 d4 fe ff ff               	cmp dword ptr [ebp - 0x12c], eax
0x8049be8:   0f 94 c0                        	sete al
0x8049beb:   0f b6 d0                        	movzx edx, al
0x8049bee:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x8049bf4:   98                              	cwde 
0x8049bf5:   01 d0                           	add eax, edx
0x8049bf7:   83 f8 01                        	cmp eax, 1
0x8049bfa:   8b 85 94 fe ff ff               	mov eax, dword ptr [ebp - 0x16c]
0x8049c00:   8b 95 10 ff ff ff               	mov edx, dword ptr [ebp - 0xf0]
0x8049c06:   29 c2                           	sub edx, eax
0x8049c08:   89 d0                           	mov eax, edx
0x8049c0a:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x8049c10:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x8049c16:   3b 85 98 fe ff ff               	cmp eax, dword ptr [ebp - 0x168]
0x8049c1c:   83 bd 98 fe ff ff 00            	cmp dword ptr [ebp - 0x168], 0
0x8049c23:   0f b7 85 16 ff ff ff            	movzx eax, word ptr [ebp - 0xea]
0x8049c2a:   23 85 0c ff ff ff               	and eax, dword ptr [ebp - 0xf4]
0x8049c30:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049c33:   8b 85 10 ff ff ff               	mov eax, dword ptr [ebp - 0xf0]
0x8049c39:   0f b7 c0                        	movzx eax, ax
0x8049c3c:   c1 f8 08                        	sar eax, 8
0x8049c3f:   39 85 10 ff ff ff               	cmp dword ptr [ebp - 0xf0], eax
0x8049c45:   0f 9e c0                        	setle al
0x8049c48:   0f b6 c0                        	movzx eax, al
0x8049c4b:   8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x8049c4e:   0f bf ca                        	movsx ecx, dx
0x8049c51:   99                              	cdq 
0x8049c52:   f7 f9                           	idiv ecx
0x8049c54:   89 d0                           	mov eax, edx
0x8049c56:   39 85 64 ff ff ff               	cmp dword ptr [ebp - 0x9c], eax
0x8049c5c:   0f 9e c0                        	setle al
0x8049c5f:   0f b6 c0                        	movzx eax, al
0x8049c62:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x8049c65:   7e 07                           	jle 0x8049c6e <func_1+0x3b2>
0x8049c67:   b8 01 00 00 00                  	mov eax, 1
0x8049c6c:   eb 05                           	jmp 0x8049c73 <func_1+0x3b7>
0x8049c6e:   b8 00 00 00 00                  	mov eax, 0
0x8049c73:   88 85 57 ff ff ff               	mov byte ptr [ebp - 0xa9], al
0x8049c79:   8b 85 94 fe ff ff               	mov eax, dword ptr [ebp - 0x16c]
0x8049c7f:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049c82:   8b 85 8c fe ff ff               	mov eax, dword ptr [ebp - 0x174]
0x8049c88:   f7 d8                           	neg eax
0x8049c8a:   0f b7 c0                        	movzx eax, ax
0x8049c8d:   c1 f8 02                        	sar eax, 2
0x8049c90:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049c93:   0f 9e c0                        	setle al
0x8049c96:   0f b6 d0                        	movzx edx, al
0x8049c99:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049c9d:   31 d0                           	xor eax, edx
0x8049c9f:   66 89 85 0a ff ff ff            	mov word ptr [ebp - 0xf6], ax
0x8049ca6:   0f b7 85 0a ff ff ff            	movzx eax, word ptr [ebp - 0xf6]
0x8049cad:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x8049cb3:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x8049cb9:   21 85 48 ff ff ff               	and dword ptr [ebp - 0xb8], eax
0x8049cbf:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049cc2:   0f be c0                        	movsx eax, al
0x8049cc5:   8b 95 94 fe ff ff               	mov edx, dword ptr [ebp - 0x16c]
0x8049ccb:   83 ca 01                        	or edx, 1
0x8049cce:   0f be ca                        	movsx ecx, dl
0x8049cd1:   99                              	cdq 
0x8049cd2:   f7 f9                           	idiv ecx
0x8049cd4:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049cd8:   39 c2                           	cmp edx, eax
0x8049cda:   0f 94 c0                        	sete al
0x8049cdd:   0f b6 d0                        	movzx edx, al
0x8049ce0:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049ce3:   0f be c0                        	movsx eax, al
0x8049ce6:   0f af c2                        	imul eax, edx
0x8049ce9:   85 c0                           	test eax, eax
0x8049ceb:   0f 84 52 01 00 00               	je 0x8049e43 <func_1+0x587>
0x8049cf1:   c7 85 68 ff ff ff 96 5d 29 bd   	mov dword ptr [ebp - 0x98], 0xbd295d96
0x8049cfb:   c6 85 f6 fe ff ff fd            	mov byte ptr [ebp - 0x10a], 0xfd
0x8049d02:   c7 85 f0 fe ff ff b6 37 a9 8e   	mov dword ptr [ebp - 0x110], 0x8ea937b6
0x8049d0c:   c7 45 ec 18 00 00 00            	mov dword ptr [ebp - 0x14], 0x18
0x8049d13:   e9 12 01 00 00                  	jmp 0x8049e2a <func_1+0x56e>
0x8049d18:   c7 85 6c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x94], 0
0x8049d22:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x8049d28:   0f b6 c0                        	movzx eax, al
0x8049d2b:   66 83 7d aa 00                  	cmp word ptr [ebp - 0x56], 0
0x8049d30:   0f 9e c2                        	setle dl
0x8049d33:   0f b6 d2                        	movzx edx, dl
0x8049d36:   0f af c2                        	imul eax, edx
0x8049d39:   0f bf d0                        	movsx edx, ax
0x8049d3c:   8b 85 90 fe ff ff               	mov eax, dword ptr [ebp - 0x170]
0x8049d42:   98                              	cwde 
0x8049d43:   89 c1                           	mov ecx, eax
0x8049d45:   d3 e2                           	shl edx, cl
0x8049d47:   89 d0                           	mov eax, edx
0x8049d49:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x8049d4f:   c7 85 78 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x88], 0
0x8049d59:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x8049d5f:   21 85 64 ff ff ff               	and dword ptr [ebp - 0x9c], eax
0x8049d65:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x8049d6b:   0f b7 c0                        	movzx eax, ax
0x8049d6e:   c1 f8 0b                        	sar eax, 0xb
0x8049d71:   85 c0                           	test eax, eax
0x8049d73:   74 15                           	je 0x8049d8a <func_1+0x4ce>
0x8049d75:   66 c7 85 5e ff ff ff 80 41      	mov word ptr [ebp - 0xa2], 0x4180
0x8049d7e:   83 85 58 ff ff ff 01            	add dword ptr [ebp - 0xa8], 1
0x8049d85:   e9 9c 00 00 00                  	jmp 0x8049e26 <func_1+0x56a>
0x8049d8a:   c7 85 60 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xa0], 1
0x8049d94:   83 bd 6c ff ff ff 01            	cmp dword ptr [ebp - 0x94], 1
0x8049d9b:   0f 9e c0                        	setle al
0x8049d9e:   0f b6 c0                        	movzx eax, al
0x8049da1:   8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x8049da4:   0f b7 fa                        	movzx edi, dx
0x8049da7:   99                              	cdq 
0x8049da8:   f7 ff                           	idiv edi
0x8049daa:   0f b7 d0                        	movzx edx, ax
0x8049dad:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x8049db3:   0f b7 c0                        	movzx eax, ax
0x8049db6:   89 c1                           	mov ecx, eax
0x8049db8:   d3 e2                           	shl edx, cl
0x8049dba:   89 d0                           	mov eax, edx
0x8049dbc:   f7 d0                           	not eax
0x8049dbe:   39 85 4c ff ff ff               	cmp dword ptr [ebp - 0xb4], eax
0x8049dc4:   0f 95 c0                        	setne al
0x8049dc7:   0f b6 d0                        	movzx edx, al
0x8049dca:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x8049dd0:   98                              	cwde 
0x8049dd1:   29 c2                           	sub edx, eax
0x8049dd3:   89 d0                           	mov eax, edx
0x8049dd5:   83 f8 01                        	cmp eax, 1
0x8049dd8:   0f 9f c0                        	setg al
0x8049ddb:   0f b6 c0                        	movzx eax, al
0x8049dde:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049de1:   83 bd 8c fe ff ff 00            	cmp dword ptr [ebp - 0x174], 0
0x8049de8:   75 4c                           	jne 0x8049e36 <func_1+0x57a>
0x8049dea:   80 bd da fe ff ff 00            	cmp byte ptr [ebp - 0x126], 0
0x8049df1:   75 46                           	jne 0x8049e39 <func_1+0x57d>
0x8049df3:   b8 01 00 00 00                  	mov eax, 1
0x8049df8:   39 85 94 fe ff ff               	cmp dword ptr [ebp - 0x16c], eax
0x8049dfe:   0f 93 c0                        	setae al
0x8049e01:   0f b6 c0                        	movzx eax, al
0x8049e04:   66 89 45 a8                     	mov word ptr [ebp - 0x58], ax
0x8049e08:   0f bf 45 a8                     	movsx eax, word ptr [ebp - 0x58]
0x8049e0c:   39 85 60 ff ff ff               	cmp dword ptr [ebp - 0xa0], eax
0x8049e12:   0f be 85 f6 fe ff ff            	movsx eax, byte ptr [ebp - 0x10a]
0x8049e19:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049e1c:   c7 85 64 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x9c], 1
0x8049e26:   83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x8049e2a:   83 7d ec 1b                     	cmp dword ptr [ebp - 0x14], 0x1b
0x8049e2e:   0f 84 e4 fe ff ff               	je 0x8049d18 <func_1+0x45c>
0x8049e34:   eb 04                           	jmp 0x8049e3a <func_1+0x57e>
0x8049e36:   90                              	nop 
0x8049e37:   eb 01                           	jmp 0x8049e3a <func_1+0x57e>
0x8049e39:   90                              	nop 
0x8049e3a:   83 6d e0 01                     	sub dword ptr [ebp - 0x20], 1
0x8049e3e:   e9 f2 00 00 00                  	jmp 0x8049f35 <func_1+0x679>
0x8049e43:   c7 85 00 ff ff ff 1f 16 3f 4f   	mov dword ptr [ebp - 0x100], 0x4f3f161f
0x8049e4d:   c7 85 58 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa8], 0
0x8049e57:   e9 cc 00 00 00                  	jmp 0x8049f28 <func_1+0x66c>
0x8049e5c:   c7 85 fc fe ff ff f9 ff ff ff   	mov dword ptr [ebp - 0x104], 0xfffffff9
0x8049e66:   c7 85 f8 fe ff ff 34 c6 12 82   	mov dword ptr [ebp - 0x108], 0x8212c634
0x8049e70:   83 bd c8 fe ff ff 00            	cmp dword ptr [ebp - 0x138], 0
0x8049e77:   75 09                           	jne 0x8049e82 <func_1+0x5c6>
0x8049e79:   80 bd 57 ff ff ff 00            	cmp byte ptr [ebp - 0xa9], 0
0x8049e80:   74 0c                           	je 0x8049e8e <func_1+0x5d2>
0x8049e82:   83 ad fc fe ff ff 01            	sub dword ptr [ebp - 0x104], 1
0x8049e89:   e9 93 00 00 00                  	jmp 0x8049f21 <func_1+0x665>
0x8049e8e:   c6 85 f7 fe ff ff 9b            	mov byte ptr [ebp - 0x109], 0x9b
0x8049e95:   8b 7d e0                        	mov edi, dword ptr [ebp - 0x20]
0x8049e98:   b8 01 00 00 00                  	mov eax, 1
0x8049e9d:   99                              	cdq 
0x8049e9e:   f7 ff                           	idiv edi
0x8049ea0:   89 c2                           	mov edx, eax
0x8049ea2:   0f b6 85 57 ff ff ff            	movzx eax, byte ptr [ebp - 0xa9]
0x8049ea9:   31 d0                           	xor eax, edx
0x8049eab:   88 85 57 ff ff ff               	mov byte ptr [ebp - 0xa9], al
0x8049eb1:   0f b7 85 1c ff ff ff            	movzx eax, word ptr [ebp - 0xe4]
0x8049eb8:   89 85 f8 fe ff ff               	mov dword ptr [ebp - 0x108], eax
0x8049ebe:   8b 85 f8 fe ff ff               	mov eax, dword ptr [ebp - 0x108]
0x8049ec4:   2d c0 03 54 33                  	sub eax, 0x335403c0
0x8049ec9:   39 85 fc fe ff ff               	cmp dword ptr [ebp - 0x104], eax
0x8049ecf:   0f b7 85 1c ff ff ff            	movzx eax, word ptr [ebp - 0xe4]
0x8049ed6:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049ed9:   0f 9e c0                        	setle al
0x8049edc:   0f b6 c0                        	movzx eax, al
0x8049edf:   f7 d8                           	neg eax
0x8049ee1:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049ee4:   83 7d b4 00                     	cmp dword ptr [ebp - 0x4c], 0
0x8049ee8:   74 07                           	je 0x8049ef1 <func_1+0x635>
0x8049eea:   83 bd ac fe ff ff 00            	cmp dword ptr [ebp - 0x154], 0
0x8049ef1:   83 bd 78 ff ff ff 00            	cmp dword ptr [ebp - 0x88], 0
0x8049ef8:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x8049efe:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049f01:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049f05:   74 05                           	je 0x8049f0c <func_1+0x650>
0x8049f07:   e9 c3 fc ff ff                  	jmp 0x8049bcf <func_1+0x313>
0x8049f0c:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049f0f:   89 85 00 ff ff ff               	mov dword ptr [ebp - 0x100], eax
0x8049f15:   8b 85 fc fe ff ff               	mov eax, dword ptr [ebp - 0x104]
0x8049f1b:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x8049f21:   83 85 58 ff ff ff 01            	add dword ptr [ebp - 0xa8], 1
0x8049f28:   83 bd 58 ff ff ff 11            	cmp dword ptr [ebp - 0xa8], 0x11
0x8049f2f:   0f 87 27 ff ff ff               	ja 0x8049e5c <func_1+0x5a0>
0x8049f35:   83 bd 44 ff ff ff 54            	cmp dword ptr [ebp - 0xbc], 0x54
0x8049f3c:   0f 97 c0                        	seta al
0x8049f3f:   0f b6 c0                        	movzx eax, al
0x8049f42:   f7 d8                           	neg eax
0x8049f44:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x8049f47:   0f 93 c0                        	setae al
0x8049f4a:   89 c2                           	mov edx, eax
0x8049f4c:   0f b6 85 57 ff ff ff            	movzx eax, byte ptr [ebp - 0xa9]
0x8049f53:   09 d0                           	or eax, edx
0x8049f55:   88 85 57 ff ff ff               	mov byte ptr [ebp - 0xa9], al
0x8049f5b:   8b b5 cc fe ff ff               	mov esi, dword ptr [ebp - 0x134]
0x8049f61:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049f64:   99                              	cdq 
0x8049f65:   f7 fe                           	idiv esi
0x8049f67:   39 85 48 ff ff ff               	cmp dword ptr [ebp - 0xb8], eax
0x8049f6d:   0f 9e c0                        	setle al
0x8049f70:   0f b6 c0                        	movzx eax, al
0x8049f73:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049f76:   e9 3c 09 00 00                  	jmp 0x804a8b7 <func_1+0xffb>
0x8049f7b:   c7 85 a8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x158], 0xffffffff
0x8049f85:   c6 85 ef fe ff ff 01            	mov byte ptr [ebp - 0x111], 1
0x8049f8c:   c7 85 e8 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x118], 1
0x8049f96:   c7 45 cc f8 ff ff ff            	mov dword ptr [ebp - 0x34], 0xfffffff8
0x8049f9d:   c7 85 50 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xb0], 0xffffffff
0x8049fa7:   c6 85 e7 fe ff ff 44            	mov byte ptr [ebp - 0x119], 0x44
0x8049fae:   c7 85 e0 fe ff ff dc 9b 72 57   	mov dword ptr [ebp - 0x120], 0x57729bdc
0x8049fb8:   c7 85 38 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xc8], 0
0x8049fc2:   66 c7 85 36 ff ff ff 08 00      	mov word ptr [ebp - 0xca], 8
0x8049fcb:   8b 85 a8 fe ff ff               	mov eax, dword ptr [ebp - 0x158]
0x8049fd1:   83 c0 01                        	add eax, 1
0x8049fd4:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x8049fd7:   0f bf 45 aa                     	movsx eax, word ptr [ebp - 0x56]
0x8049fdb:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049fde:   7f 07                           	jg 0x8049fe7 <func_1+0x72b>
0x8049fe0:   b8 01 00 00 00                  	mov eax, 1
0x8049fe5:   eb 05                           	jmp 0x8049fec <func_1+0x730>
0x8049fe7:   b8 00 00 00 00                  	mov eax, 0
0x8049fec:   0f b6 d0                        	movzx edx, al
0x8049fef:   8b 85 a8 fe ff ff               	mov eax, dword ptr [ebp - 0x158]
0x8049ff5:   0f b6 c0                        	movzx eax, al
0x8049ff8:   89 c1                           	mov ecx, eax
0x8049ffa:   d3 e2                           	shl edx, cl
0x8049ffc:   89 d0                           	mov eax, edx
0x8049ffe:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804a001:   8b 85 a8 fe ff ff               	mov eax, dword ptr [ebp - 0x158]
0x804a007:   0f b6 c0                        	movzx eax, al
0x804a00a:   ba 08 00 00 00                  	mov edx, 8
0x804a00f:   89 c1                           	mov ecx, eax
0x804a011:   d3 e2                           	shl edx, cl
0x804a013:   89 d0                           	mov eax, edx
0x804a015:   85 c0                           	test eax, eax
0x804a017:   74 10                           	je 0x804a029 <func_1+0x76d>
0x804a019:   80 bd ef fe ff ff 00            	cmp byte ptr [ebp - 0x111], 0
0x804a020:   74 07                           	je 0x804a029 <func_1+0x76d>
0x804a022:   b8 01 00 00 00                  	mov eax, 1
0x804a027:   eb 05                           	jmp 0x804a02e <func_1+0x772>
0x804a029:   b8 00 00 00 00                  	mov eax, 0
0x804a02e:   3b 45 b8                        	cmp eax, dword ptr [ebp - 0x48]
0x804a031:   0f 9d c0                        	setge al
0x804a034:   0f b6 c0                        	movzx eax, al
0x804a037:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a03a:   c7 45 b4 00 00 00 00            	mov dword ptr [ebp - 0x4c], 0
0x804a041:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804a047:   0f b6 c0                        	movzx eax, al
0x804a04a:   c1 e0 03                        	shl eax, 3
0x804a04d:   23 45 f0                        	and eax, dword ptr [ebp - 0x10]
0x804a050:   83 f8 f6                        	cmp eax, -0xa
0x804a053:   0f 84 76 06 00 00               	je 0x804a6cf <func_1+0xe13>
0x804a059:   c7 85 28 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xd8], 0xffffffff
0x804a063:   c7 85 7c ff ff ff f9 f0 62 55   	mov dword ptr [ebp - 0x84], 0x5562f0f9
0x804a06d:   66 c7 85 26 ff ff ff 35 d7      	mov word ptr [ebp - 0xda], 0xd735
0x804a076:   c6 85 25 ff ff ff 70            	mov byte ptr [ebp - 0xdb], 0x70
0x804a07d:   c7 85 20 ff ff ff 2c da e4 be   	mov dword ptr [ebp - 0xe0], 0xbee4da2c
0x804a087:   c6 85 1f ff ff ff fe            	mov byte ptr [ebp - 0xe1], 0xfe
0x804a08e:   c6 85 56 ff ff ff ff            	mov byte ptr [ebp - 0xaa], 0xff
0x804a095:   8b 85 90 fe ff ff               	mov eax, dword ptr [ebp - 0x170]
0x804a09b:   0f be d0                        	movsx edx, al
0x804a09e:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a0a4:   0f be c0                        	movsx eax, al
0x804a0a7:   89 c1                           	mov ecx, eax
0x804a0a9:   d3 e2                           	shl edx, cl
0x804a0ab:   89 d0                           	mov eax, edx
0x804a0ad:   85 c0                           	test eax, eax
0x804a0af:   0f 94 c0                        	sete al
0x804a0b2:   0f b6 c0                        	movzx eax, al
0x804a0b5:   33 85 28 ff ff ff               	xor eax, dword ptr [ebp - 0xd8]
0x804a0bb:   89 85 50 ff ff ff               	mov dword ptr [ebp - 0xb0], eax
0x804a0c1:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x804a0c8:   74 08                           	je 0x804a0d2 <func_1+0x816>
0x804a0ca:   66 83 bd c6 fe ff ff 00         	cmp word ptr [ebp - 0x13a], 0
0x804a0d2:   8b 85 94 fe ff ff               	mov eax, dword ptr [ebp - 0x16c]
0x804a0d8:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804a0de:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a0e4:   09 45 b4                        	or dword ptr [ebp - 0x4c], eax
0x804a0e7:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a0ea:   39 85 a8 fe ff ff               	cmp dword ptr [ebp - 0x158], eax
0x804a0f0:   0f 94 c0                        	sete al
0x804a0f3:   0f b6 d0                        	movzx edx, al
0x804a0f6:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x804a0fd:   39 c2                           	cmp edx, eax
0x804a0ff:   66 c7 45 dc 03 00               	mov word ptr [ebp - 0x24], 3
0x804a105:   c7 45 d8 fb ff ff ff            	mov dword ptr [ebp - 0x28], 0xfffffffb
0x804a10c:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a110:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a113:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a119:   3b 45 f0                        	cmp eax, dword ptr [ebp - 0x10]
0x804a11c:   0f 9c c0                        	setl al
0x804a11f:   89 c2                           	mov edx, eax
0x804a121:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a124:   29 c2                           	sub edx, eax
0x804a126:   89 d0                           	mov eax, edx
0x804a128:   89 c2                           	mov edx, eax
0x804a12a:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x804a130:   21 d0                           	and eax, edx
0x804a132:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x804a135:   80 7d df 00                     	cmp byte ptr [ebp - 0x21], 0
0x804a139:   75 0a                           	jne 0x804a145 <func_1+0x889>
0x804a13b:   66 83 bd 26 ff ff ff 00         	cmp word ptr [ebp - 0xda], 0
0x804a143:   74 07                           	je 0x804a14c <func_1+0x890>
0x804a145:   b8 01 00 00 00                  	mov eax, 1
0x804a14a:   eb 05                           	jmp 0x804a151 <func_1+0x895>
0x804a14c:   b8 00 00 00 00                  	mov eax, 0
0x804a151:   83 c8 44                        	or eax, 0x44
0x804a154:   89 c2                           	mov edx, eax
0x804a156:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a15c:   89 c1                           	mov ecx, eax
0x804a15e:   89 d0                           	mov eax, edx
0x804a160:   ba 00 00 00 00                  	mov edx, 0
0x804a165:   66 f7 f1                        	div cx
0x804a168:   89 d0                           	mov eax, edx
0x804a16a:   0f b7 c0                        	movzx eax, ax
0x804a16d:   39 85 7c ff ff ff               	cmp dword ptr [ebp - 0x84], eax
0x804a173:   0f 94 c0                        	sete al
0x804a176:   0f b6 c0                        	movzx eax, al
0x804a179:   39 45 cc                        	cmp dword ptr [ebp - 0x34], eax
0x804a17c:   74 07                           	je 0x804a185 <func_1+0x8c9>
0x804a17e:   b8 20 00 00 00                  	mov eax, 0x20
0x804a183:   eb 05                           	jmp 0x804a18a <func_1+0x8ce>
0x804a185:   b8 00 00 00 00                  	mov eax, 0
0x804a18a:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a18d:   80 bd 57 ff ff ff 01            	cmp byte ptr [ebp - 0xa9], 1
0x804a194:   77 3b                           	ja 0x804a1d1 <func_1+0x915>
0x804a196:   66 83 7d dc 00                  	cmp word ptr [ebp - 0x24], 0
0x804a19b:   0f 95 c0                        	setne al
0x804a19e:   0f b6 c0                        	movzx eax, al
0x804a1a1:   0f b7 c0                        	movzx eax, ax
0x804a1a4:   c1 f8 05                        	sar eax, 5
0x804a1a7:   83 e0 05                        	and eax, 5
0x804a1aa:   99                              	cdq 
0x804a1ab:   f7 bd c8 fe ff ff               	idiv dword ptr [ebp - 0x138]
0x804a1b1:   39 85 58 ff ff ff               	cmp dword ptr [ebp - 0xa8], eax
0x804a1b7:   0f 96 c0                        	setbe al
0x804a1ba:   0f b6 d0                        	movzx edx, al
0x804a1bd:   0f be 85 e7 fe ff ff            	movsx eax, byte ptr [ebp - 0x119]
0x804a1c4:   39 c2                           	cmp edx, eax
0x804a1c6:   0f 95 c0                        	setne al
0x804a1c9:   0f b6 c0                        	movzx eax, al
0x804a1cc:   09 45 e4                        	or dword ptr [ebp - 0x1c], eax
0x804a1cf:   eb 78                           	jmp 0x804a249 <func_1+0x98d>
0x804a1d1:   c6 45 d3 03                     	mov byte ptr [ebp - 0x2d], 3
0x804a1d5:   66 83 7d dc 01                  	cmp word ptr [ebp - 0x24], 1
0x804a1da:   76 11                           	jbe 0x804a1ed <func_1+0x931>
0x804a1dc:   66 83 bd 3e ff ff ff 00         	cmp word ptr [ebp - 0xc2], 0
0x804a1e4:   74 07                           	je 0x804a1ed <func_1+0x931>
0x804a1e6:   b8 01 00 00 00                  	mov eax, 1
0x804a1eb:   eb 05                           	jmp 0x804a1f2 <func_1+0x936>
0x804a1ed:   b8 00 00 00 00                  	mov eax, 0
0x804a1f2:   f7 d0                           	not eax
0x804a1f4:   39 85 ac fe ff ff               	cmp dword ptr [ebp - 0x154], eax
0x804a1fa:   0f 95 c0                        	setne al
0x804a1fd:   0f b6 c0                        	movzx eax, al
0x804a200:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a203:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x804a207:   39 85 8c fe ff ff               	cmp dword ptr [ebp - 0x174], eax
0x804a20d:   0f 94 c0                        	sete al
0x804a210:   0f b6 c0                        	movzx eax, al
0x804a213:   31 45 e4                        	xor dword ptr [ebp - 0x1c], eax
0x804a216:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a21c:   0f be c0                        	movsx eax, al
0x804a21f:   05 42 9f 1b 4d                  	add eax, 0x4d1b9f42
0x804a224:   39 85 c8 fe ff ff               	cmp dword ptr [ebp - 0x138], eax
0x804a22a:   0f 9f c0                        	setg al
0x804a22d:   0f b6 c0                        	movzx eax, al
0x804a230:   39 85 4c ff ff ff               	cmp dword ptr [ebp - 0xb4], eax
0x804a236:   0f 9f c0                        	setg al
0x804a239:   0f b6 d0                        	movzx edx, al
0x804a23c:   0f be 85 3d ff ff ff            	movsx eax, byte ptr [ebp - 0xc3]
0x804a243:   0f af c2                        	imul eax, edx
0x804a246:   31 45 e4                        	xor dword ptr [ebp - 0x1c], eax
0x804a249:   83 bd 8c fe ff ff 00            	cmp dword ptr [ebp - 0x174], 0
0x804a250:   90                              	nop 
0x804a251:   8b 85 c0 fe ff ff               	mov eax, dword ptr [ebp - 0x140]
0x804a257:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a25a:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x804a261:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a264:   99                              	cdq 
0x804a265:   f7 7d d4                        	idiv dword ptr [ebp - 0x2c]
0x804a268:   39 85 98 fe ff ff               	cmp dword ptr [ebp - 0x168], eax
0x804a26e:   77 04                           	ja 0x804a274 <func_1+0x9b8>
0x804a270:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x804a274:   80 bd 57 ff ff ff 01            	cmp byte ptr [ebp - 0xa9], 1
0x804a27b:   0f 97 c0                        	seta al
0x804a27e:   0f b6 c0                        	movzx eax, al
0x804a281:   09 45 e4                        	or dword ptr [ebp - 0x1c], eax
0x804a284:   0f b7 85 3e ff ff ff            	movzx eax, word ptr [ebp - 0xc2]
0x804a28b:   f7 d0                           	not eax
0x804a28d:   98                              	cwde 
0x804a28e:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a291:   c7 45 f0 07 00 00 00            	mov dword ptr [ebp - 0x10], 7
0x804a298:   eb 51                           	jmp 0x804a2eb <func_1+0xa2f>
0x804a29a:   66 c7 85 a0 fe ff ff 01 00      	mov word ptr [ebp - 0x160], 1
0x804a2a3:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x804a2a9:   0b 85 58 ff ff ff               	or eax, dword ptr [ebp - 0xa8]
0x804a2af:   89 85 e8 fe ff ff               	mov dword ptr [ebp - 0x118], eax
0x804a2b5:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x804a2bb:   0f bf d0                        	movsx edx, ax
0x804a2be:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x804a2c2:   0f 95 c0                        	setne al
0x804a2c5:   0f b6 c8                        	movzx ecx, al
0x804a2c8:   0f b7 85 a0 fe ff ff            	movzx eax, word ptr [ebp - 0x160]
0x804a2cf:   39 c1                           	cmp ecx, eax
0x804a2d1:   0f 94 c0                        	sete al
0x804a2d4:   0f b6 c0                        	movzx eax, al
0x804a2d7:   01 d0                           	add eax, edx
0x804a2d9:   3d 75 66 00 00                  	cmp eax, 0x6675
0x804a2de:   0f 94 c0                        	sete al
0x804a2e1:   0f b6 c0                        	movzx eax, al
0x804a2e4:   21 45 d8                        	and dword ptr [ebp - 0x28], eax
0x804a2e7:   83 45 f0 05                     	add dword ptr [ebp - 0x10], 5
0x804a2eb:   83 7d f0 0f                     	cmp dword ptr [ebp - 0x10], 0xf
0x804a2ef:   7f a9                           	jg 0x804a29a <func_1+0x9de>
0x804a2f1:   c6 45 a7 00                     	mov byte ptr [ebp - 0x59], 0
0x804a2f5:   c7 85 e8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x118], 0
0x804a2ff:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x804a305:   0f be c0                        	movsx eax, al
0x804a308:   c1 e0 02                        	shl eax, 2
0x804a30b:   0f bf d0                        	movsx edx, ax
0x804a30e:   0f bf 85 3e ff ff ff            	movsx eax, word ptr [ebp - 0xc2]
0x804a315:   0f af c2                        	imul eax, edx
0x804a318:   83 f8 11                        	cmp eax, 0x11
0x804a31b:   c7 45 c8 01 00 00 00            	mov dword ptr [ebp - 0x38], 1
0x804a322:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a325:   98                              	cwde 
0x804a326:   0f b7 95 76 ff ff ff            	movzx edx, word ptr [ebp - 0x8a]
0x804a32d:   0f bf fa                        	movsx edi, dx
0x804a330:   99                              	cdq 
0x804a331:   f7 ff                           	idiv edi
0x804a333:   85 c0                           	test eax, eax
0x804a335:   0f 84 09 02 00 00               	je 0x804a544 <func_1+0xc88>
0x804a33b:   c6 85 62 fe ff ff ea            	mov byte ptr [ebp - 0x19e], 0xea
0x804a342:   c7 85 5c fe ff ff 83 c6 5f d6   	mov dword ptr [ebp - 0x1a4], 0xd65fc683
0x804a34c:   c7 85 58 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x1a8], 0
0x804a356:   c6 85 a2 fe ff ff 3a            	mov byte ptr [ebp - 0x15e], 0x3a
0x804a35d:   66 83 bd 3e ff ff ff 00         	cmp word ptr [ebp - 0xc2], 0
0x804a365:   0f 94 c2                        	sete dl
0x804a368:   8b 85 ac fe ff ff               	mov eax, dword ptr [ebp - 0x154]
0x804a36e:   66 3d f5 32                     	cmp ax, 0x32f5
0x804a372:   0f 97 c0                        	seta al
0x804a375:   09 d0                           	or eax, edx
0x804a377:   0f b6 c8                        	movzx ecx, al
0x804a37a:   ba 3f 06 e7 63                  	mov edx, 0x63e7063f
0x804a37f:   89 c8                           	mov eax, ecx
0x804a381:   f7 ea                           	imul edx
0x804a383:   c1 fa 04                        	sar edx, 4
0x804a386:   89 c8                           	mov eax, ecx
0x804a388:   c1 f8 1f                        	sar eax, 0x1f
0x804a38b:   29 c2                           	sub edx, eax
0x804a38d:   89 d0                           	mov eax, edx
0x804a38f:   c1 e0 02                        	shl eax, 2
0x804a392:   01 d0                           	add eax, edx
0x804a394:   c1 e0 03                        	shl eax, 3
0x804a397:   01 d0                           	add eax, edx
0x804a399:   29 c1                           	sub ecx, eax
0x804a39b:   89 ca                           	mov edx, ecx
0x804a39d:   89 d0                           	mov eax, edx
0x804a39f:   98                              	cwde 
0x804a3a0:   8d 90 4c 3c 00 00               	lea edx, [eax + 0x3c4c]
0x804a3a6:   0f be 85 62 fe ff ff            	movsx eax, byte ptr [ebp - 0x19e]
0x804a3ad:   39 c2                           	cmp edx, eax
0x804a3af:   0f 9e c0                        	setle al
0x804a3b2:   88 45 a7                        	mov byte ptr [ebp - 0x59], al
0x804a3b5:   83 bd a8 fe ff ff 00            	cmp dword ptr [ebp - 0x158], 0
0x804a3bc:   0f 95 c0                        	setne al
0x804a3bf:   0f b6 c0                        	movzx eax, al
0x804a3c2:   33 45 b8                        	xor eax, dword ptr [ebp - 0x48]
0x804a3c5:   09 85 e8 fe ff ff               	or dword ptr [ebp - 0x118], eax
0x804a3cb:   0f be 85 62 fe ff ff            	movsx eax, byte ptr [ebp - 0x19e]
0x804a3d2:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a3d5:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a3d8:   0f be d0                        	movsx edx, al
0x804a3db:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a3e1:   0f be c0                        	movsx eax, al
0x804a3e4:   0f af c2                        	imul eax, edx
0x804a3e7:   85 c0                           	test eax, eax
0x804a3e9:   75 06                           	jne 0x804a3f1 <func_1+0xb35>
0x804a3eb:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x804a3ef:   74 07                           	je 0x804a3f8 <func_1+0xb3c>
0x804a3f1:   b8 01 00 00 00                  	mov eax, 1
0x804a3f6:   eb 05                           	jmp 0x804a3fd <func_1+0xb41>
0x804a3f8:   b8 00 00 00 00                  	mov eax, 0
0x804a3fd:   83 f8 ff                        	cmp eax, -1
0x804a400:   0f 9c c0                        	setl al
0x804a403:   0f b6 c0                        	movzx eax, al
0x804a406:   0b 45 c8                        	or eax, dword ptr [ebp - 0x38]
0x804a409:   89 c2                           	mov edx, eax
0x804a40b:   0f be 85 e7 fe ff ff            	movsx eax, byte ptr [ebp - 0x119]
0x804a412:   09 d0                           	or eax, edx
0x804a414:   23 85 28 ff ff ff               	and eax, dword ptr [ebp - 0xd8]
0x804a41a:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a41d:   c7 45 cc 04 00 00 00            	mov dword ptr [ebp - 0x34], 4
0x804a424:   8b 95 8c fe ff ff               	mov edx, dword ptr [ebp - 0x174]
0x804a42a:   80 bd 62 fe ff ff 00            	cmp byte ptr [ebp - 0x19e], 0
0x804a431:   75 24                           	jne 0x804a457 <func_1+0xb9b>
0x804a433:   0f be 9d 25 ff ff ff            	movsx ebx, byte ptr [ebp - 0xdb]
0x804a43a:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a43e:   8d 48 01                        	lea ecx, [eax + 1]
0x804a441:   66 89 4d ea                     	mov word ptr [ebp - 0x16], cx
0x804a445:   66 89 85 76 ff ff ff            	mov word ptr [ebp - 0x8a], ax
0x804a44c:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x804a453:   39 c3                           	cmp ebx, eax
0x804a455:   74 07                           	je 0x804a45e <func_1+0xba2>
0x804a457:   b8 01 00 00 00                  	mov eax, 1
0x804a45c:   eb 05                           	jmp 0x804a463 <func_1+0xba7>
0x804a45e:   b8 00 00 00 00                  	mov eax, 0
0x804a463:   89 c1                           	mov ecx, eax
0x804a465:   89 d0                           	mov eax, edx
0x804a467:   ba 00 00 00 00                  	mov edx, 0
0x804a46c:   f7 f1                           	div ecx
0x804a46e:   89 d3                           	mov ebx, edx
0x804a470:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x804a476:   89 c2                           	mov edx, eax
0x804a478:   0f b7 c2                        	movzx eax, dx
0x804a47b:   69 c0 35 42 00 00               	imul eax, eax, 0x4235
0x804a481:   c1 e8 10                        	shr eax, 0x10
0x804a484:   89 d1                           	mov ecx, edx
0x804a486:   29 c1                           	sub ecx, eax
0x804a488:   66 d1 e9                        	shr cx, 1
0x804a48b:   01 c8                           	add eax, ecx
0x804a48d:   66 c1 e8 0e                     	shr ax, 0xe
0x804a491:   66 69 c0 b3 65                  	imul ax, ax, 0x65b3
0x804a496:   29 c2                           	sub edx, eax
0x804a498:   89 d0                           	mov eax, edx
0x804a49a:   0f b7 c0                        	movzx eax, ax
0x804a49d:   39 c3                           	cmp ebx, eax
0x804a49f:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x804a4a6:   0b 45 e4                        	or eax, dword ptr [ebp - 0x1c]
0x804a4a9:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a4ac:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a4af:   89 85 20 ff ff ff               	mov dword ptr [ebp - 0xe0], eax
0x804a4b5:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x804a4bb:   39 85 ac fe ff ff               	cmp dword ptr [ebp - 0x154], eax
0x804a4c1:   74 6b                           	je 0x804a52e <func_1+0xc72>
0x804a4c3:   c6 85 a3 fe ff ff 96            	mov byte ptr [ebp - 0x15d], 0x96
0x804a4ca:   83 6d 9c 01                     	sub dword ptr [ebp - 0x64], 1
0x804a4ce:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x804a4d4:   89 c2                           	mov edx, eax
0x804a4d6:   8b 85 ac fe ff ff               	mov eax, dword ptr [ebp - 0x154]
0x804a4dc:   29 c2                           	sub edx, eax
0x804a4de:   89 d0                           	mov eax, edx
0x804a4e0:   0f bf d0                        	movsx edx, ax
0x804a4e3:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a4e9:   98                              	cwde 
0x804a4ea:   29 c2                           	sub edx, eax
0x804a4ec:   0f b6 85 ef fe ff ff            	movzx eax, byte ptr [ebp - 0x111]
0x804a4f3:   39 c2                           	cmp edx, eax
0x804a4f5:   0f 94 c0                        	sete al
0x804a4f8:   0f b6 c0                        	movzx eax, al
0x804a4fb:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a4fe:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a501:   3d 80 5f 9d c1                  	cmp eax, 0xc19d5f80
0x804a506:   0f 97 c0                        	seta al
0x804a509:   0f b6 d0                        	movzx edx, al
0x804a50c:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x804a513:   39 c2                           	cmp edx, eax
0x804a515:   0f 9d c0                        	setge al
0x804a518:   88 85 a2 fe ff ff               	mov byte ptr [ebp - 0x15e], al
0x804a51e:   83 6d 94 01                     	sub dword ptr [ebp - 0x6c], 1
0x804a522:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x804a529:   e9 98 01 00 00                  	jmp 0x804a6c6 <func_1+0xe0a>
0x804a52e:   c7 85 a4 fe ff ff f9 ff ff ff   	mov dword ptr [ebp - 0x15c], 0xfffffff9
0x804a538:   83 ad a4 fe ff ff 01            	sub dword ptr [ebp - 0x15c], 1
0x804a53f:   e9 82 01 00 00                  	jmp 0x804a6c6 <func_1+0xe0a>
0x804a544:   c7 85 70 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x190], 0xffffffff
0x804a54e:   c7 85 6c fe ff ff 4f 82 8d e0   	mov dword ptr [ebp - 0x194], 0xe08d824f
0x804a558:   8b 85 48 ff ff ff               	mov eax, dword ptr [ebp - 0xb8]
0x804a55e:   0f be d0                        	movsx edx, al
0x804a561:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a564:   0f b6 d8                        	movzx ebx, al
0x804a567:   8b 85 48 ff ff ff               	mov eax, dword ptr [ebp - 0xb8]
0x804a56d:   0f b6 c0                        	movzx eax, al
0x804a570:   89 c1                           	mov ecx, eax
0x804a572:   d3 fb                           	sar ebx, cl
0x804a574:   89 d8                           	mov eax, ebx
0x804a576:   b9 fd ff ff ff                  	mov ecx, 0xfffffffd
0x804a57b:   29 c1                           	sub ecx, eax
0x804a57d:   89 c8                           	mov eax, ecx
0x804a57f:   0f be c0                        	movsx eax, al
0x804a582:   89 c1                           	mov ecx, eax
0x804a584:   d3 fa                           	sar edx, cl
0x804a586:   89 d0                           	mov eax, edx
0x804a588:   3d b6 00 00 00                  	cmp eax, 0xb6
0x804a58d:   0f 94 c0                        	sete al
0x804a590:   0f b6 c0                        	movzx eax, al
0x804a593:   8b 95 8c fe ff ff               	mov edx, dword ptr [ebp - 0x174]
0x804a599:   09 d0                           	or eax, edx
0x804a59b:   66 c1 f8 07                     	sar ax, 7
0x804a59f:   98                              	cwde 
0x804a5a0:   89 85 70 fe ff ff               	mov dword ptr [ebp - 0x190], eax
0x804a5a6:   c7 85 70 fe ff ff f6 ff ff ff   	mov dword ptr [ebp - 0x190], 0xfffffff6
0x804a5b0:   e9 01 01 00 00                  	jmp 0x804a6b6 <func_1+0xdfa>
0x804a5b5:   c6 85 6b fe ff ff 11            	mov byte ptr [ebp - 0x195], 0x11
0x804a5bc:   c7 85 64 fe ff ff 32 04 23 45   	mov dword ptr [ebp - 0x19c], 0x45230432
0x804a5c6:   c6 85 63 fe ff ff 07            	mov byte ptr [ebp - 0x19d], 7
0x804a5cd:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a5d1:   0f 85 ee 00 00 00               	jne 0x804a6c5 <func_1+0xe09>
0x804a5d7:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a5dd:   0f b7 d0                        	movzx edx, ax
0x804a5e0:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a5e3:   0f b7 c0                        	movzx eax, ax
0x804a5e6:   0f af c2                        	imul eax, edx
0x804a5e9:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a5ec:   0f b6 95 6b fe ff ff            	movzx edx, byte ptr [ebp - 0x195]
0x804a5f3:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a5f7:   0f 94 c0                        	sete al
0x804a5fa:   0f b6 c0                        	movzx eax, al
0x804a5fd:   31 d0                           	xor eax, edx
0x804a5ff:   0f bf d0                        	movsx edx, ax
0x804a602:   0f b6 85 56 ff ff ff            	movzx eax, byte ptr [ebp - 0xaa]
0x804a609:   89 c1                           	mov ecx, eax
0x804a60b:   89 d6                           	mov esi, edx
0x804a60d:   d3 e6                           	shl esi, cl
0x804a60f:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a612:   99                              	cdq 
0x804a613:   f7 fe                           	idiv esi
0x804a615:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x804a61b:   0f b7 85 3e ff ff ff            	movzx eax, word ptr [ebp - 0xc2]
0x804a622:   89 c2                           	mov edx, eax
0x804a624:   0f b6 85 63 fe ff ff            	movzx eax, byte ptr [ebp - 0x19d]
0x804a62b:   31 d0                           	xor eax, edx
0x804a62d:   88 85 63 fe ff ff               	mov byte ptr [ebp - 0x19d], al
0x804a633:   83 bd 64 fe ff ff 00            	cmp dword ptr [ebp - 0x19c], 0
0x804a63a:   74 19                           	je 0x804a655 <func_1+0xd99>
0x804a63c:   83 bd 70 fe ff ff 00            	cmp dword ptr [ebp - 0x190], 0
0x804a643:   74 10                           	je 0x804a655 <func_1+0xd99>
0x804a645:   83 bd 7c ff ff ff 00            	cmp dword ptr [ebp - 0x84], 0
0x804a64c:   74 07                           	je 0x804a655 <func_1+0xd99>
0x804a64e:   b8 01 00 00 00                  	mov eax, 1
0x804a653:   eb 05                           	jmp 0x804a65a <func_1+0xd9e>
0x804a655:   b8 00 00 00 00                  	mov eax, 0
0x804a65a:   3b 85 8c fe ff ff               	cmp eax, dword ptr [ebp - 0x174]
0x804a660:   0f 94 c0                        	sete al
0x804a663:   0f b6 c0                        	movzx eax, al
0x804a666:   39 85 a8 fe ff ff               	cmp dword ptr [ebp - 0x158], eax
0x804a66c:   76 0d                           	jbe 0x804a67b <func_1+0xdbf>
0x804a66e:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804a672:   74 07                           	je 0x804a67b <func_1+0xdbf>
0x804a674:   b8 01 00 00 00                  	mov eax, 1
0x804a679:   eb 05                           	jmp 0x804a680 <func_1+0xdc4>
0x804a67b:   b8 00 00 00 00                  	mov eax, 0
0x804a680:   0f b7 c0                        	movzx eax, ax
0x804a683:   ba d1 df 00 00                  	mov edx, 0xdfd1
0x804a688:   89 c1                           	mov ecx, eax
0x804a68a:   d3 fa                           	sar edx, cl
0x804a68c:   89 d0                           	mov eax, edx
0x804a68e:   33 45 ec                        	xor eax, dword ptr [ebp - 0x14]
0x804a691:   3d f9 54 00 00                  	cmp eax, 0x54f9
0x804a696:   0f 97 c0                        	seta al
0x804a699:   0f b6 d0                        	movzx edx, al
0x804a69c:   0f b6 85 6b fe ff ff            	movzx eax, byte ptr [ebp - 0x195]
0x804a6a3:   89 c1                           	mov ecx, eax
0x804a6a5:   d3 e2                           	shl edx, cl
0x804a6a7:   89 d0                           	mov eax, edx
0x804a6a9:   89 85 6c fe ff ff               	mov dword ptr [ebp - 0x194], eax
0x804a6af:   83 85 70 fe ff ff 09            	add dword ptr [ebp - 0x190], 9
0x804a6b6:   83 bd 70 fe ff ff 2e            	cmp dword ptr [ebp - 0x190], 0x2e
0x804a6bd:   0f 84 f2 fe ff ff               	je 0x804a5b5 <func_1+0xcf9>
0x804a6c3:   eb 01                           	jmp 0x804a6c6 <func_1+0xe0a>
0x804a6c5:   90                              	nop 
0x804a6c6:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x804a6cd:   eb 30                           	jmp 0x804a6ff <func_1+0xe43>
0x804a6cf:   c7 85 30 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0xd0], 0xfffffffe
0x804a6d9:   8b 85 90 fe ff ff               	mov eax, dword ptr [ebp - 0x170]
0x804a6df:   89 c1                           	mov ecx, eax
0x804a6e1:   0f b7 85 c6 fe ff ff            	movzx eax, word ptr [ebp - 0x13a]
0x804a6e8:   89 c2                           	mov edx, eax
0x804a6ea:   0f b6 c1                        	movzx eax, cl
0x804a6ed:   f6 f2                           	div dl
0x804a6ef:   0f b6 c0                        	movzx eax, al
0x804a6f2:   83 e0 01                        	and eax, 1
0x804a6f5:   89 85 2c ff ff ff               	mov dword ptr [ebp - 0xd4], eax
0x804a6fb:   83 45 ac 01                     	add dword ptr [ebp - 0x54], 1
0x804a6ff:   c7 45 94 e8 ff ff ff            	mov dword ptr [ebp - 0x6c], 0xffffffe8
0x804a706:   e9 a2 01 00 00                  	jmp 0x804a8ad <func_1+0xff1>
0x804a70b:   c6 85 9f fe ff ff fe            	mov byte ptr [ebp - 0x161], 0xfe
0x804a712:   c7 85 04 ff ff ff cf 76 c7 a7   	mov dword ptr [ebp - 0xfc], 0xa7c776cf
0x804a71c:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a71f:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x804a722:   80 bd e7 fe ff ff 00            	cmp byte ptr [ebp - 0x119], 0
0x804a729:   0f 84 5f 01 00 00               	je 0x804a88e <func_1+0xfd2>
0x804a72f:   83 6d 88 01                     	sub dword ptr [ebp - 0x78], 1
0x804a733:   0f be 85 db fe ff ff            	movsx eax, byte ptr [ebp - 0x125]
0x804a73a:   89 85 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], eax
0x804a740:   0f b7 85 74 fe ff ff            	movzx eax, word ptr [ebp - 0x18c]
0x804a747:   89 85 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], eax
0x804a74d:   0f b7 85 76 fe ff ff            	movzx eax, word ptr [ebp - 0x18a]
0x804a754:   89 85 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], eax
0x804a75a:   0f bf 85 86 fe ff ff            	movsx eax, word ptr [ebp - 0x17a]
0x804a761:   89 85 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], eax
0x804a767:   0f b6 45 b3                     	movzx eax, byte ptr [ebp - 0x4d]
0x804a76b:   89 85 40 fe ff ff               	mov dword ptr [ebp - 0x1c0], eax
0x804a771:   0f bf bd 88 fe ff ff            	movsx edi, word ptr [ebp - 0x178]
0x804a778:   0f be 45 87                     	movsx eax, byte ptr [ebp - 0x79]
0x804a77c:   89 85 3c fe ff ff               	mov dword ptr [ebp - 0x1c4], eax
0x804a782:   0f b6 45 93                     	movzx eax, byte ptr [ebp - 0x6d]
0x804a786:   0f b6 55 a7                     	movzx edx, byte ptr [ebp - 0x59]
0x804a78a:   89 95 38 fe ff ff               	mov dword ptr [ebp - 0x1c8], edx
0x804a790:   0f be 95 3d ff ff ff            	movsx edx, byte ptr [ebp - 0xc3]
0x804a797:   0f be 4d df                     	movsx ecx, byte ptr [ebp - 0x21]
0x804a79b:   89 8d 34 fe ff ff               	mov dword ptr [ebp - 0x1cc], ecx
0x804a7a1:   0f bf 8d 3e ff ff ff            	movsx ecx, word ptr [ebp - 0xc2]
0x804a7a8:   0f b7 9d 76 ff ff ff            	movzx ebx, word ptr [ebp - 0x8a]
0x804a7af:   89 9d 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], ebx
0x804a7b5:   0f b6 9d 57 ff ff ff            	movzx ebx, byte ptr [ebp - 0xa9]
0x804a7bc:   0f b7 75 ea                     	movzx esi, word ptr [ebp - 0x16]
0x804a7c0:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a7c6:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a7cc:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804a7d2:   ff b5 48 fe ff ff               	push dword ptr [ebp - 0x1b8]
0x804a7d8:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a7de:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a7e4:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a7ea:   ff b5 44 fe ff ff               	push dword ptr [ebp - 0x1bc]
0x804a7f0:   ff b5 40 fe ff ff               	push dword ptr [ebp - 0x1c0]
0x804a7f6:   57                              	push edi
0x804a7f7:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a7fa:   ff b5 3c fe ff ff               	push dword ptr [ebp - 0x1c4]
0x804a800:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a803:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a806:   50                              	push eax
0x804a807:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a80a:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a80d:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a810:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a813:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a816:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804a819:   ff b5 38 fe ff ff               	push dword ptr [ebp - 0x1c8]
0x804a81f:   52                              	push edx
0x804a820:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a823:   ff b5 34 fe ff ff               	push dword ptr [ebp - 0x1cc]
0x804a829:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a82c:   51                              	push ecx
0x804a82d:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804a833:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x804a839:   ff b5 4c ff ff ff               	push dword ptr [ebp - 0xb4]
0x804a83f:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a842:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x804a848:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a84b:   ff b5 44 ff ff ff               	push dword ptr [ebp - 0xbc]
0x804a851:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804a857:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a85d:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a863:   53                              	push ebx
0x804a864:   56                              	push esi
0x804a865:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a868:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a86b:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a871:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a877:   e8 aa ed ff ff                  	call 0x8049626 <set_var>
0x804a87c:   81 c4 ac 00 00 00               	add esp, 0xac
0x804a882:   0f b6 85 9f fe ff ff            	movzx eax, byte ptr [ebp - 0x161]
0x804a889:   e9 17 02 00 00                  	jmp 0x804aaa5 <func_1+0x11e9>
0x804a88e:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x804a894:   33 45 e0                        	xor eax, dword ptr [ebp - 0x20]
0x804a897:   89 85 04 ff ff ff               	mov dword ptr [ebp - 0xfc], eax
0x804a89d:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a8a3:   31 85 04 ff ff ff               	xor dword ptr [ebp - 0xfc], eax
0x804a8a9:   83 45 94 08                     	add dword ptr [ebp - 0x6c], 8
0x804a8ad:   83 7d 94 23                     	cmp dword ptr [ebp - 0x6c], 0x23
0x804a8b1:   0f 86 54 fe ff ff               	jbe 0x804a70b <func_1+0xe4f>
0x804a8b7:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a8ba:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a8bd:   66 83 7d aa 01                  	cmp word ptr [ebp - 0x56], 1
0x804a8c2:   83 bd 2c ff ff ff ff            	cmp dword ptr [ebp - 0xd4], -1
0x804a8c9:   66 0f be 45 87                  	movsx ax, byte ptr [ebp - 0x79]
0x804a8ce:   f7 d0                           	not eax
0x804a8d0:   0f b7 c0                        	movzx eax, ax
0x804a8d3:   69 c0 5c d8 00 00               	imul eax, eax, 0xd85c
0x804a8d9:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x804a8dc:   c7 45 c4 00 00 00 00            	mov dword ptr [ebp - 0x3c], 0
0x804a8e3:   c7 45 c0 01 00 00 00            	mov dword ptr [ebp - 0x40], 1
0x804a8ea:   c7 45 bc f7 ff ff ff            	mov dword ptr [ebp - 0x44], 0xfffffff7
0x804a8f1:   66 83 7d a8 00                  	cmp word ptr [ebp - 0x58], 0
0x804a8f6:   74 07                           	je 0x804a8ff <func_1+0x1043>
0x804a8f8:   b8 01 00 00 00                  	mov eax, 1
0x804a8fd:   eb 05                           	jmp 0x804a904 <func_1+0x1048>
0x804a8ff:   b8 00 00 00 00                  	mov eax, 0
0x804a904:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x804a907:   0f 97 c0                        	seta al
0x804a90a:   0f b6 c0                        	movzx eax, al
0x804a90d:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a910:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a913:   33 45 c4                        	xor eax, dword ptr [ebp - 0x3c]
0x804a916:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a919:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a91c:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a91f:   0f b6 45 b3                     	movzx eax, byte ptr [ebp - 0x4d]
0x804a923:   83 c0 01                        	add eax, 1
0x804a926:   88 45 b3                        	mov byte ptr [ebp - 0x4d], al
0x804a929:   c7 45 c8 00 00 00 00            	mov dword ptr [ebp - 0x38], 0
0x804a930:   eb 17                           	jmp 0x804a949 <func_1+0x108d>
0x804a932:   66 c7 85 8a fe ff ff 01 00      	mov word ptr [ebp - 0x176], 1
0x804a93b:   0f b7 85 8a fe ff ff            	movzx eax, word ptr [ebp - 0x176]
0x804a942:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a945:   83 6d c8 04                     	sub dword ptr [ebp - 0x38], 4
0x804a949:   83 7d c8 ee                     	cmp dword ptr [ebp - 0x38], -0x12
0x804a94d:   7c e3                           	jl 0x804a932 <func_1+0x1076>
0x804a94f:   0f be 85 db fe ff ff            	movsx eax, byte ptr [ebp - 0x125]
0x804a956:   89 85 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], eax
0x804a95c:   0f b7 85 74 fe ff ff            	movzx eax, word ptr [ebp - 0x18c]
0x804a963:   89 85 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], eax
0x804a969:   0f b7 85 76 fe ff ff            	movzx eax, word ptr [ebp - 0x18a]
0x804a970:   89 85 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], eax
0x804a976:   0f bf 85 86 fe ff ff            	movsx eax, word ptr [ebp - 0x17a]
0x804a97d:   89 85 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], eax
0x804a983:   0f b6 45 b3                     	movzx eax, byte ptr [ebp - 0x4d]
0x804a987:   89 85 40 fe ff ff               	mov dword ptr [ebp - 0x1c0], eax
0x804a98d:   0f bf bd 88 fe ff ff            	movsx edi, word ptr [ebp - 0x178]
0x804a994:   0f be 45 87                     	movsx eax, byte ptr [ebp - 0x79]
0x804a998:   89 85 3c fe ff ff               	mov dword ptr [ebp - 0x1c4], eax
0x804a99e:   0f b6 45 93                     	movzx eax, byte ptr [ebp - 0x6d]
0x804a9a2:   0f b6 55 a7                     	movzx edx, byte ptr [ebp - 0x59]
0x804a9a6:   89 95 38 fe ff ff               	mov dword ptr [ebp - 0x1c8], edx
0x804a9ac:   0f be 95 3d ff ff ff            	movsx edx, byte ptr [ebp - 0xc3]
0x804a9b3:   0f be 4d df                     	movsx ecx, byte ptr [ebp - 0x21]
0x804a9b7:   89 8d 34 fe ff ff               	mov dword ptr [ebp - 0x1cc], ecx
0x804a9bd:   0f bf 8d 3e ff ff ff            	movsx ecx, word ptr [ebp - 0xc2]
0x804a9c4:   0f b7 9d 76 ff ff ff            	movzx ebx, word ptr [ebp - 0x8a]
0x804a9cb:   89 9d 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], ebx
0x804a9d1:   0f b6 9d 57 ff ff ff            	movzx ebx, byte ptr [ebp - 0xa9]
0x804a9d8:   0f b7 75 ea                     	movzx esi, word ptr [ebp - 0x16]
0x804a9dc:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a9e2:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a9e8:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804a9ee:   ff b5 48 fe ff ff               	push dword ptr [ebp - 0x1b8]
0x804a9f4:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a9fa:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804aa00:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804aa06:   ff b5 44 fe ff ff               	push dword ptr [ebp - 0x1bc]
0x804aa0c:   ff b5 40 fe ff ff               	push dword ptr [ebp - 0x1c0]
0x804aa12:   57                              	push edi
0x804aa13:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804aa16:   ff b5 3c fe ff ff               	push dword ptr [ebp - 0x1c4]
0x804aa1c:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804aa1f:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804aa22:   50                              	push eax
0x804aa23:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804aa26:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804aa29:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804aa2c:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804aa2f:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804aa32:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804aa35:   ff b5 38 fe ff ff               	push dword ptr [ebp - 0x1c8]
0x804aa3b:   52                              	push edx
0x804aa3c:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804aa3f:   ff b5 34 fe ff ff               	push dword ptr [ebp - 0x1cc]
0x804aa45:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804aa48:   51                              	push ecx
0x804aa49:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804aa4f:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x804aa55:   ff b5 4c ff ff ff               	push dword ptr [ebp - 0xb4]
0x804aa5b:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804aa5e:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x804aa64:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804aa67:   ff b5 44 ff ff ff               	push dword ptr [ebp - 0xbc]
0x804aa6d:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804aa73:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804aa79:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804aa7f:   53                              	push ebx
0x804aa80:   56                              	push esi
0x804aa81:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804aa84:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804aa87:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804aa8d:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804aa93:   e8 8e eb ff ff                  	call 0x8049626 <set_var>
0x804aa98:   81 c4 ac 00 00 00               	add esp, 0xac
0x804aa9e:   0f b7 85 d2 fe ff ff            	movzx eax, word ptr [ebp - 0x12e]
0x804aaa5:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804aaa8:   5b                              	pop ebx
0x804aaa9:   5e                              	pop esi
0x804aaaa:   5f                              	pop edi
0x804aaab:   5d                              	pop ebp
0x804aaac:   c3                              	ret 
; function: main at 0x804aaad -- 0x804b057
0x804aaad:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804aab1:   83 e4 f0                        	and esp, 0xfffffff0
0x804aab4:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804aab7:   55                              	push ebp
0x804aab8:   89 e5                           	mov ebp, esp
0x804aaba:   53                              	push ebx
0x804aabb:   51                              	push ecx
0x804aabc:   83 ec 10                        	sub esp, 0x10
0x804aabf:   e8 cc d8 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aac4:   81 c3 3c 35 00 00               	add ebx, 0x353c
0x804aaca:   89 c8                           	mov eax, ecx
0x804aacc:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804aad3:   83 38 02                        	cmp dword ptr [eax], 2
0x804aad6:   75 26                           	jne 0x804aafe <main+0x51>
0x804aad8:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804aadb:   83 c0 04                        	add eax, 4
0x804aade:   8b 00                           	mov eax, dword ptr [eax]
0x804aae0:   83 ec 08                        	sub esp, 8
0x804aae3:   8d 93 38 d1 ff ff               	lea edx, [ebx - 0x2ec8]
0x804aae9:   52                              	push edx
0x804aaea:   50                              	push eax
0x804aaeb:   e8 10 d8 ff ff                  	call 0x8048300 <strcmp>
0x804aaf0:   83 c4 10                        	add esp, 0x10
0x804aaf3:   85 c0                           	test eax, eax
0x804aaf5:   75 07                           	jne 0x804aafe <main+0x51>
0x804aaf7:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804aafe:   e8 53 d9 ff ff                  	call 0x8048456 <platform_main_begin>
0x804ab03:   e8 63 e9 ff ff                  	call 0x804946b <crc32_gentab>
0x804ab08:   e8 af ed ff ff                  	call 0x80498bc <func_1>
0x804ab0d:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804ab13:   83 ec 04                        	sub esp, 4
0x804ab16:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab19:   8d 93 3a d1 ff ff               	lea edx, [ebx - 0x2ec6]
0x804ab1f:   52                              	push edx
0x804ab20:   50                              	push eax
0x804ab21:   e8 51 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab26:   83 c4 10                        	add esp, 0x10
0x804ab29:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804ab2f:   83 ec 04                        	sub esp, 4
0x804ab32:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab35:   8d 93 3e d1 ff ff               	lea edx, [ebx - 0x2ec2]
0x804ab3b:   52                              	push edx
0x804ab3c:   50                              	push eax
0x804ab3d:   e8 35 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab42:   83 c4 10                        	add esp, 0x10
0x804ab45:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804ab4b:   83 ec 04                        	sub esp, 4
0x804ab4e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab51:   8d 93 43 d1 ff ff               	lea edx, [ebx - 0x2ebd]
0x804ab57:   52                              	push edx
0x804ab58:   50                              	push eax
0x804ab59:   e8 19 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab5e:   83 c4 10                        	add esp, 0x10
0x804ab61:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804ab67:   89 c2                           	mov edx, eax
0x804ab69:   83 ec 04                        	sub esp, 4
0x804ab6c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab6f:   8d 83 48 d1 ff ff               	lea eax, [ebx - 0x2eb8]
0x804ab75:   50                              	push eax
0x804ab76:   52                              	push edx
0x804ab77:   e8 fb e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab7c:   83 c4 10                        	add esp, 0x10
0x804ab7f:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804ab85:   83 ec 04                        	sub esp, 4
0x804ab88:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab8b:   8d 93 4d d1 ff ff               	lea edx, [ebx - 0x2eb3]
0x804ab91:   52                              	push edx
0x804ab92:   50                              	push eax
0x804ab93:   e8 df e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab98:   83 c4 10                        	add esp, 0x10
0x804ab9b:   0f b7 83 38 00 00 00            	movzx eax, word ptr [ebx + 0x38]
0x804aba2:   0f b7 c0                        	movzx eax, ax
0x804aba5:   83 ec 04                        	sub esp, 4
0x804aba8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abab:   8d 93 52 d1 ff ff               	lea edx, [ebx - 0x2eae]
0x804abb1:   52                              	push edx
0x804abb2:   50                              	push eax
0x804abb3:   e8 bf e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abb8:   83 c4 10                        	add esp, 0x10
0x804abbb:   0f b6 83 3a 00 00 00            	movzx eax, byte ptr [ebx + 0x3a]
0x804abc2:   0f b6 c0                        	movzx eax, al
0x804abc5:   83 ec 04                        	sub esp, 4
0x804abc8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abcb:   8d 93 57 d1 ff ff               	lea edx, [ebx - 0x2ea9]
0x804abd1:   52                              	push edx
0x804abd2:   50                              	push eax
0x804abd3:   e8 9f e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abd8:   83 c4 10                        	add esp, 0x10
0x804abdb:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804abe1:   89 c2                           	mov edx, eax
0x804abe3:   83 ec 04                        	sub esp, 4
0x804abe6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abe9:   8d 83 5c d1 ff ff               	lea eax, [ebx - 0x2ea4]
0x804abef:   50                              	push eax
0x804abf0:   52                              	push edx
0x804abf1:   e8 81 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abf6:   83 c4 10                        	add esp, 0x10
0x804abf9:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804abff:   89 c2                           	mov edx, eax
0x804ac01:   83 ec 04                        	sub esp, 4
0x804ac04:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac07:   8d 83 61 d1 ff ff               	lea eax, [ebx - 0x2e9f]
0x804ac0d:   50                              	push eax
0x804ac0e:   52                              	push edx
0x804ac0f:   e8 63 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac14:   83 c4 10                        	add esp, 0x10
0x804ac17:   0f b7 83 44 00 00 00            	movzx eax, word ptr [ebx + 0x44]
0x804ac1e:   0f b7 c0                        	movzx eax, ax
0x804ac21:   83 ec 04                        	sub esp, 4
0x804ac24:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac27:   8d 93 66 d1 ff ff               	lea edx, [ebx - 0x2e9a]
0x804ac2d:   52                              	push edx
0x804ac2e:   50                              	push eax
0x804ac2f:   e8 43 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac34:   83 c4 10                        	add esp, 0x10
0x804ac37:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804ac3d:   83 ec 04                        	sub esp, 4
0x804ac40:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac43:   8d 93 6c d1 ff ff               	lea edx, [ebx - 0x2e94]
0x804ac49:   52                              	push edx
0x804ac4a:   50                              	push eax
0x804ac4b:   e8 27 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac50:   83 c4 10                        	add esp, 0x10
0x804ac53:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804ac59:   89 c2                           	mov edx, eax
0x804ac5b:   83 ec 04                        	sub esp, 4
0x804ac5e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac61:   8d 83 72 d1 ff ff               	lea eax, [ebx - 0x2e8e]
0x804ac67:   50                              	push eax
0x804ac68:   52                              	push edx
0x804ac69:   e8 09 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac6e:   83 c4 10                        	add esp, 0x10
0x804ac71:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804ac77:   89 c2                           	mov edx, eax
0x804ac79:   83 ec 04                        	sub esp, 4
0x804ac7c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac7f:   8d 83 78 d1 ff ff               	lea eax, [ebx - 0x2e88]
0x804ac85:   50                              	push eax
0x804ac86:   52                              	push edx
0x804ac87:   e8 eb e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac8c:   83 c4 10                        	add esp, 0x10
0x804ac8f:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804ac95:   89 c2                           	mov edx, eax
0x804ac97:   83 ec 04                        	sub esp, 4
0x804ac9a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac9d:   8d 83 7e d1 ff ff               	lea eax, [ebx - 0x2e82]
0x804aca3:   50                              	push eax
0x804aca4:   52                              	push edx
0x804aca5:   e8 cd e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acaa:   83 c4 10                        	add esp, 0x10
0x804acad:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804acb3:   89 c2                           	mov edx, eax
0x804acb5:   83 ec 04                        	sub esp, 4
0x804acb8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acbb:   8d 83 84 d1 ff ff               	lea eax, [ebx - 0x2e7c]
0x804acc1:   50                              	push eax
0x804acc2:   52                              	push edx
0x804acc3:   e8 af e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acc8:   83 c4 10                        	add esp, 0x10
0x804accb:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804acd1:   89 c2                           	mov edx, eax
0x804acd3:   83 ec 04                        	sub esp, 4
0x804acd6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acd9:   8d 83 8a d1 ff ff               	lea eax, [ebx - 0x2e76]
0x804acdf:   50                              	push eax
0x804ace0:   52                              	push edx
0x804ace1:   e8 91 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ace6:   83 c4 10                        	add esp, 0x10
0x804ace9:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804acef:   83 ec 04                        	sub esp, 4
0x804acf2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acf5:   8d 93 90 d1 ff ff               	lea edx, [ebx - 0x2e70]
0x804acfb:   52                              	push edx
0x804acfc:   50                              	push eax
0x804acfd:   e8 75 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad02:   83 c4 10                        	add esp, 0x10
0x804ad05:   0f b7 83 64 00 00 00            	movzx eax, word ptr [ebx + 0x64]
0x804ad0c:   98                              	cwde 
0x804ad0d:   83 ec 04                        	sub esp, 4
0x804ad10:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad13:   8d 93 96 d1 ff ff               	lea edx, [ebx - 0x2e6a]
0x804ad19:   52                              	push edx
0x804ad1a:   50                              	push eax
0x804ad1b:   e8 57 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad20:   83 c4 10                        	add esp, 0x10
0x804ad23:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804ad29:   83 ec 04                        	sub esp, 4
0x804ad2c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad2f:   8d 93 9c d1 ff ff               	lea edx, [ebx - 0x2e64]
0x804ad35:   52                              	push edx
0x804ad36:   50                              	push eax
0x804ad37:   e8 3b e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad3c:   83 c4 10                        	add esp, 0x10
0x804ad3f:   0f b6 83 e4 04 00 00            	movzx eax, byte ptr [ebx + 0x4e4]
0x804ad46:   0f be c0                        	movsx eax, al
0x804ad49:   83 ec 04                        	sub esp, 4
0x804ad4c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad4f:   8d 93 a2 d1 ff ff               	lea edx, [ebx - 0x2e5e]
0x804ad55:   52                              	push edx
0x804ad56:   50                              	push eax
0x804ad57:   e8 1b e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad5c:   83 c4 10                        	add esp, 0x10
0x804ad5f:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804ad65:   89 c2                           	mov edx, eax
0x804ad67:   83 ec 04                        	sub esp, 4
0x804ad6a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad6d:   8d 83 a8 d1 ff ff               	lea eax, [ebx - 0x2e58]
0x804ad73:   50                              	push eax
0x804ad74:   52                              	push edx
0x804ad75:   e8 fd e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad7a:   83 c4 10                        	add esp, 0x10
0x804ad7d:   0f b6 83 70 00 00 00            	movzx eax, byte ptr [ebx + 0x70]
0x804ad84:   0f be c0                        	movsx eax, al
0x804ad87:   83 ec 04                        	sub esp, 4
0x804ad8a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad8d:   8d 93 ae d1 ff ff               	lea edx, [ebx - 0x2e52]
0x804ad93:   52                              	push edx
0x804ad94:   50                              	push eax
0x804ad95:   e8 dd e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad9a:   83 c4 10                        	add esp, 0x10
0x804ad9d:   0f b6 83 71 00 00 00            	movzx eax, byte ptr [ebx + 0x71]
0x804ada4:   0f b6 c0                        	movzx eax, al
0x804ada7:   83 ec 04                        	sub esp, 4
0x804adaa:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adad:   8d 93 b4 d1 ff ff               	lea edx, [ebx - 0x2e4c]
0x804adb3:   52                              	push edx
0x804adb4:   50                              	push eax
0x804adb5:   e8 bd e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adba:   83 c4 10                        	add esp, 0x10
0x804adbd:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804adc3:   89 c2                           	mov edx, eax
0x804adc5:   83 ec 04                        	sub esp, 4
0x804adc8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adcb:   8d 83 ba d1 ff ff               	lea eax, [ebx - 0x2e46]
0x804add1:   50                              	push eax
0x804add2:   52                              	push edx
0x804add3:   e8 9f e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804add8:   83 c4 10                        	add esp, 0x10
0x804addb:   8b 83 78 00 00 00               	mov eax, dword ptr [ebx + 0x78]
0x804ade1:   83 ec 04                        	sub esp, 4
0x804ade4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ade7:   8d 93 c0 d1 ff ff               	lea edx, [ebx - 0x2e40]
0x804aded:   52                              	push edx
0x804adee:   50                              	push eax
0x804adef:   e8 83 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adf4:   83 c4 10                        	add esp, 0x10
0x804adf7:   8b 83 7c 00 00 00               	mov eax, dword ptr [ebx + 0x7c]
0x804adfd:   89 c2                           	mov edx, eax
0x804adff:   83 ec 04                        	sub esp, 4
0x804ae02:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae05:   8d 83 c6 d1 ff ff               	lea eax, [ebx - 0x2e3a]
0x804ae0b:   50                              	push eax
0x804ae0c:   52                              	push edx
0x804ae0d:   e8 65 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae12:   83 c4 10                        	add esp, 0x10
0x804ae15:   8b 83 80 00 00 00               	mov eax, dword ptr [ebx + 0x80]
0x804ae1b:   83 ec 04                        	sub esp, 4
0x804ae1e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae21:   8d 93 cc d1 ff ff               	lea edx, [ebx - 0x2e34]
0x804ae27:   52                              	push edx
0x804ae28:   50                              	push eax
0x804ae29:   e8 49 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae2e:   83 c4 10                        	add esp, 0x10
0x804ae31:   8b 83 84 00 00 00               	mov eax, dword ptr [ebx + 0x84]
0x804ae37:   89 c2                           	mov edx, eax
0x804ae39:   83 ec 04                        	sub esp, 4
0x804ae3c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae3f:   8d 83 d2 d1 ff ff               	lea eax, [ebx - 0x2e2e]
0x804ae45:   50                              	push eax
0x804ae46:   52                              	push edx
0x804ae47:   e8 2b e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae4c:   83 c4 10                        	add esp, 0x10
0x804ae4f:   8b 83 88 00 00 00               	mov eax, dword ptr [ebx + 0x88]
0x804ae55:   83 ec 04                        	sub esp, 4
0x804ae58:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae5b:   8d 93 d8 d1 ff ff               	lea edx, [ebx - 0x2e28]
0x804ae61:   52                              	push edx
0x804ae62:   50                              	push eax
0x804ae63:   e8 0f e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae68:   83 c4 10                        	add esp, 0x10
0x804ae6b:   0f b6 83 8c 00 00 00            	movzx eax, byte ptr [ebx + 0x8c]
0x804ae72:   0f b6 c0                        	movzx eax, al
0x804ae75:   83 ec 04                        	sub esp, 4
0x804ae78:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae7b:   8d 93 de d1 ff ff               	lea edx, [ebx - 0x2e22]
0x804ae81:   52                              	push edx
0x804ae82:   50                              	push eax
0x804ae83:   e8 ef e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae88:   83 c4 10                        	add esp, 0x10
0x804ae8b:   8b 83 90 00 00 00               	mov eax, dword ptr [ebx + 0x90]
0x804ae91:   89 c2                           	mov edx, eax
0x804ae93:   83 ec 04                        	sub esp, 4
0x804ae96:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae99:   8d 83 e4 d1 ff ff               	lea eax, [ebx - 0x2e1c]
0x804ae9f:   50                              	push eax
0x804aea0:   52                              	push edx
0x804aea1:   e8 d1 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aea6:   83 c4 10                        	add esp, 0x10
0x804aea9:   8b 83 94 00 00 00               	mov eax, dword ptr [ebx + 0x94]
0x804aeaf:   83 ec 04                        	sub esp, 4
0x804aeb2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aeb5:   8d 93 ea d1 ff ff               	lea edx, [ebx - 0x2e16]
0x804aebb:   52                              	push edx
0x804aebc:   50                              	push eax
0x804aebd:   e8 b5 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aec2:   83 c4 10                        	add esp, 0x10
0x804aec5:   0f b6 83 98 00 00 00            	movzx eax, byte ptr [ebx + 0x98]
0x804aecc:   0f be c0                        	movsx eax, al
0x804aecf:   83 ec 04                        	sub esp, 4
0x804aed2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aed5:   8d 93 f0 d1 ff ff               	lea edx, [ebx - 0x2e10]
0x804aedb:   52                              	push edx
0x804aedc:   50                              	push eax
0x804aedd:   e8 95 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aee2:   83 c4 10                        	add esp, 0x10
0x804aee5:   8b 83 9c 00 00 00               	mov eax, dword ptr [ebx + 0x9c]
0x804aeeb:   89 c2                           	mov edx, eax
0x804aeed:   83 ec 04                        	sub esp, 4
0x804aef0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aef3:   8d 83 f6 d1 ff ff               	lea eax, [ebx - 0x2e0a]
0x804aef9:   50                              	push eax
0x804aefa:   52                              	push edx
0x804aefb:   e8 77 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af00:   83 c4 10                        	add esp, 0x10
0x804af03:   0f b7 83 a0 00 00 00            	movzx eax, word ptr [ebx + 0xa0]
0x804af0a:   98                              	cwde 
0x804af0b:   83 ec 04                        	sub esp, 4
0x804af0e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af11:   8d 93 fc d1 ff ff               	lea edx, [ebx - 0x2e04]
0x804af17:   52                              	push edx
0x804af18:   50                              	push eax
0x804af19:   e8 59 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af1e:   83 c4 10                        	add esp, 0x10
0x804af21:   0f b6 83 a2 00 00 00            	movzx eax, byte ptr [ebx + 0xa2]
0x804af28:   0f b6 c0                        	movzx eax, al
0x804af2b:   83 ec 04                        	sub esp, 4
0x804af2e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af31:   8d 93 02 d2 ff ff               	lea edx, [ebx - 0x2dfe]
0x804af37:   52                              	push edx
0x804af38:   50                              	push eax
0x804af39:   e8 39 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af3e:   83 c4 10                        	add esp, 0x10
0x804af41:   0f b7 83 a4 00 00 00            	movzx eax, word ptr [ebx + 0xa4]
0x804af48:   98                              	cwde 
0x804af49:   83 ec 04                        	sub esp, 4
0x804af4c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af4f:   8d 93 08 d2 ff ff               	lea edx, [ebx - 0x2df8]
0x804af55:   52                              	push edx
0x804af56:   50                              	push eax
0x804af57:   e8 1b e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af5c:   83 c4 10                        	add esp, 0x10
0x804af5f:   8b 83 a8 00 00 00               	mov eax, dword ptr [ebx + 0xa8]
0x804af65:   83 ec 04                        	sub esp, 4
0x804af68:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af6b:   8d 93 0e d2 ff ff               	lea edx, [ebx - 0x2df2]
0x804af71:   52                              	push edx
0x804af72:   50                              	push eax
0x804af73:   e8 ff e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af78:   83 c4 10                        	add esp, 0x10
0x804af7b:   8b 83 ac 00 00 00               	mov eax, dword ptr [ebx + 0xac]
0x804af81:   83 ec 04                        	sub esp, 4
0x804af84:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af87:   8d 93 14 d2 ff ff               	lea edx, [ebx - 0x2dec]
0x804af8d:   52                              	push edx
0x804af8e:   50                              	push eax
0x804af8f:   e8 e3 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af94:   83 c4 10                        	add esp, 0x10
0x804af97:   8b 83 b0 00 00 00               	mov eax, dword ptr [ebx + 0xb0]
0x804af9d:   89 c2                           	mov edx, eax
0x804af9f:   83 ec 04                        	sub esp, 4
0x804afa2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afa5:   8d 83 1a d2 ff ff               	lea eax, [ebx - 0x2de6]
0x804afab:   50                              	push eax
0x804afac:   52                              	push edx
0x804afad:   e8 c5 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afb2:   83 c4 10                        	add esp, 0x10
0x804afb5:   0f b7 83 b4 00 00 00            	movzx eax, word ptr [ebx + 0xb4]
0x804afbc:   0f b7 c0                        	movzx eax, ax
0x804afbf:   83 ec 04                        	sub esp, 4
0x804afc2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afc5:   8d 93 20 d2 ff ff               	lea edx, [ebx - 0x2de0]
0x804afcb:   52                              	push edx
0x804afcc:   50                              	push eax
0x804afcd:   e8 a5 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afd2:   83 c4 10                        	add esp, 0x10
0x804afd5:   0f b7 83 b6 00 00 00            	movzx eax, word ptr [ebx + 0xb6]
0x804afdc:   0f b7 c0                        	movzx eax, ax
0x804afdf:   83 ec 04                        	sub esp, 4
0x804afe2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afe5:   8d 93 26 d2 ff ff               	lea edx, [ebx - 0x2dda]
0x804afeb:   52                              	push edx
0x804afec:   50                              	push eax
0x804afed:   e8 85 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804aff2:   83 c4 10                        	add esp, 0x10
0x804aff5:   8b 83 b8 00 00 00               	mov eax, dword ptr [ebx + 0xb8]
0x804affb:   83 ec 04                        	sub esp, 4
0x804affe:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b001:   8d 93 2c d2 ff ff               	lea edx, [ebx - 0x2dd4]
0x804b007:   52                              	push edx
0x804b008:   50                              	push eax
0x804b009:   e8 69 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b00e:   83 c4 10                        	add esp, 0x10
0x804b011:   0f b6 83 bc 00 00 00            	movzx eax, byte ptr [ebx + 0xbc]
0x804b018:   0f be c0                        	movsx eax, al
0x804b01b:   83 ec 04                        	sub esp, 4
0x804b01e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b021:   8d 93 32 d2 ff ff               	lea edx, [ebx - 0x2dce]
0x804b027:   52                              	push edx
0x804b028:   50                              	push eax
0x804b029:   e8 49 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b02e:   83 c4 10                        	add esp, 0x10
0x804b031:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b037:   f7 d0                           	not eax
0x804b039:   83 ec 08                        	sub esp, 8
0x804b03c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b03f:   50                              	push eax
0x804b040:   e8 21 d4 ff ff                  	call 0x8048466 <platform_main_end>
0x804b045:   83 c4 10                        	add esp, 0x10
0x804b048:   b8 00 00 00 00                  	mov eax, 0
0x804b04d:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b050:   59                              	pop ecx
0x804b051:   5b                              	pop ebx
0x804b052:   5d                              	pop ebp
0x804b053:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b056:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b057 -- 0x804b05b
0x804b057:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b05a:   c3                              	ret 
; data inside code section at 0x804b05b -- 0x804b060
0x804b05b:   66 90 66 90 90                                     |f.f..           |
; function: __libc_csu_init at 0x804b060 -- 0x804b0bd
0x804b060:   55                              	push ebp
0x804b061:   57                              	push edi
0x804b062:   56                              	push esi
0x804b063:   53                              	push ebx
0x804b064:   e8 27 d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b069:   81 c3 97 2f 00 00               	add ebx, 0x2f97
0x804b06f:   83 ec 0c                        	sub esp, 0xc
0x804b072:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b076:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b07c:   e8 4b d2 ff ff                  	call 0x80482cc <_init>
0x804b081:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b087:   29 c6                           	sub esi, eax
0x804b089:   c1 fe 02                        	sar esi, 2
0x804b08c:   85 f6                           	test esi, esi
0x804b08e:   74 25                           	je 0x804b0b5 <__libc_csu_init+0x55>
0x804b090:   31 ff                           	xor edi, edi
0x804b092:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b098:   83 ec 04                        	sub esp, 4
0x804b09b:   55                              	push ebp
0x804b09c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b0a0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b0a4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b0ab:   83 c7 01                        	add edi, 1
0x804b0ae:   83 c4 10                        	add esp, 0x10
0x804b0b1:   39 fe                           	cmp esi, edi
0x804b0b3:   75 e3                           	jne 0x804b098 <__libc_csu_init+0x38>
0x804b0b5:   83 c4 0c                        	add esp, 0xc
0x804b0b8:   5b                              	pop ebx
0x804b0b9:   5e                              	pop esi
0x804b0ba:   5f                              	pop edi
0x804b0bb:   5d                              	pop ebp
0x804b0bc:   c3                              	ret 
; data inside code section at 0x804b0bd -- 0x804b0c0
0x804b0bd:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b0c0 -- 0x804b0c2
0x804b0c0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b0c4 -- 0x804b0d8
0x804b0c4:   53                              	push ebx
0x804b0c5:   83 ec 08                        	sub esp, 8
0x804b0c8:   e8 c3 d2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b0cd:   81 c3 33 2f 00 00               	add ebx, 0x2f33
0x804b0d3:   83 c4 08                        	add esp, 8
0x804b0d6:   5b                              	pop ebx
0x804b0d7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 dc b0 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b0d8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b0e8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b0f8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b108:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b118:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b128:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b138:   31 00 67 5f 34 00 67 5f  31 30 00 67 5f 31 31 00   |1.g_4.g_10.g_11.|
0x804b148:   67 5f 31 32 00 67 5f 31  34 00 67 5f 32 38 00 67   |g_12.g_14.g_28.g|
0x804b158:   5f 33 30 00 67 5f 36 37  00 67 5f 39 37 00 67 5f   |_30.g_67.g_97.g_|
0x804b168:   31 30 39 00 67 5f 31 31  30 00 67 5f 31 32 33 00   |109.g_110.g_123.|
0x804b178:   67 5f 31 32 34 00 67 5f  31 38 35 00 67 5f 31 39   |g_124.g_185.g_19|
0x804b188:   35 00 67 5f 31 39 36 00  67 5f 32 33 35 00 67 5f   |5.g_196.g_235.g_|
0x804b198:   32 36 31 00 67 5f 32 36  32 00 67 5f 33 32 35 00   |261.g_262.g_325.|
0x804b1a8:   67 5f 33 34 39 00 67 5f  33 37 33 00 67 5f 34 31   |g_349.g_373.g_41|
0x804b1b8:   32 00 67 5f 34 35 36 00  67 5f 34 35 37 00 67 5f   |2.g_456.g_457.g_|
0x804b1c8:   34 37 30 00 67 5f 34 37  32 00 67 5f 35 33 32 00   |470.g_472.g_532.|
0x804b1d8:   67 5f 35 33 33 00 67 5f  35 35 36 00 67 5f 35 35   |g_533.g_556.g_55|
0x804b1e8:   38 00 67 5f 35 35 39 00  67 5f 35 36 37 00 67 5f   |8.g_559.g_567.g_|
0x804b1f8:   35 37 35 00 67 5f 35 37  36 00 67 5f 35 37 37 00   |575.g_576.g_577.|
0x804b208:   67 5f 35 39 37 00 67 5f  36 30 30 00 67 5f 36 33   |g_597.g_600.g_63|
0x804b218:   31 00 67 5f 36 33 36 00  67 5f 36 33 39 00 67 5f   |1.g_636.g_639.g_|
0x804b228:   36 34 33 00 67 5f 36 39  33 00 67 5f 37 34 34 00   |643.g_693.g_744.|
0x804b238:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804b248:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804b258:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804b268:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804b278:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804b288:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804b298:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804b2a0:   01 1b 03 3b b0 02 00 00  55 00 00 00 50 d0 ff ff   |...;....U...P...|
0x804b2b0:   e0 02 00 00 90 d0 ff ff  04 03 00 00 e0 d0 ff ff   |................|
0x804b2c0:   cc 02 00 00 b6 d1 ff ff  18 03 00 00 c6 d1 ff ff   |................|
0x804b2d0:   38 03 00 00 f4 d1 ff ff  5c 03 00 00 12 d2 ff ff   |8.......\.......|
0x804b2e0:   7c 03 00 00 3a d2 ff ff  9c 03 00 00 64 d2 ff ff   ||...:.......d...|
0x804b2f0:   bc 03 00 00 8d d2 ff ff  dc 03 00 00 d0 d2 ff ff   |................|
0x804b300:   fc 03 00 00 11 d3 ff ff  1c 04 00 00 69 d3 ff ff   |............i...|
0x804b310:   40 04 00 00 bb d3 ff ff  64 04 00 00 f8 d3 ff ff   |@.......d.......|
0x804b320:   84 04 00 00 2f d4 ff ff  a4 04 00 00 4e d4 ff ff   |..../.......N...|
0x804b330:   c4 04 00 00 78 d4 ff ff  e4 04 00 00 a4 d4 ff ff   |....x...........|
0x804b340:   04 05 00 00 cf d4 ff ff  24 05 00 00 18 d5 ff ff   |........$.......|
0x804b350:   44 05 00 00 5f d5 ff ff  64 05 00 00 b9 d5 ff ff   |D..._...d.......|
0x804b360:   88 05 00 00 0d d6 ff ff  ac 05 00 00 4c d6 ff ff   |............L...|
0x804b370:   cc 05 00 00 85 d6 ff ff  ec 05 00 00 a7 d6 ff ff   |................|
0x804b380:   0c 06 00 00 f5 d6 ff ff  2c 06 00 00 31 d7 ff ff   |........,...1...|
0x804b390:   4c 06 00 00 ba d7 ff ff  6c 06 00 00 ec d7 ff ff   |L.......l.......|
0x804b3a0:   8c 06 00 00 1c d8 ff ff  ac 06 00 00 61 d8 ff ff   |............a...|
0x804b3b0:   cc 06 00 00 a0 d8 ff ff  ec 06 00 00 d2 d8 ff ff   |................|
0x804b3c0:   0c 07 00 00 fe d8 ff ff  2c 07 00 00 1c d9 ff ff   |........,.......|
0x804b3d0:   4c 07 00 00 44 d9 ff ff  6c 07 00 00 69 d9 ff ff   |L...D...l...i...|
0x804b3e0:   8c 07 00 00 8e d9 ff ff  ac 07 00 00 c5 d9 ff ff   |................|
0x804b3f0:   cc 07 00 00 f9 d9 ff ff  ec 07 00 00 4b da ff ff   |............K...|
0x804b400:   10 08 00 00 97 da ff ff  34 08 00 00 ce da ff ff   |........4.......|
0x804b410:   54 08 00 00 ff da ff ff  74 08 00 00 1e db ff ff   |T.......t.......|
0x804b420:   94 08 00 00 48 db ff ff  b4 08 00 00 70 db ff ff   |....H.......p...|
0x804b430:   d4 08 00 00 99 db ff ff  f4 08 00 00 d5 db ff ff   |................|
0x804b440:   14 09 00 00 0f dc ff ff  34 09 00 00 62 dc ff ff   |........4...b...|
0x804b450:   58 09 00 00 af dc ff ff  7c 09 00 00 e7 dc ff ff   |X.......|.......|
0x804b460:   9c 09 00 00 19 dd ff ff  bc 09 00 00 2d dd ff ff   |............-...|
0x804b470:   dc 09 00 00 44 dd ff ff  fc 09 00 00 59 dd ff ff   |....D.......Y...|
0x804b480:   1c 0a 00 00 6f dd ff ff  3c 0a 00 00 96 dd ff ff   |....o...<.......|
0x804b490:   5c 0a 00 00 bb dd ff ff  7c 0a 00 00 fa dd ff ff   |\.......|.......|
0x804b4a0:   9c 0a 00 00 33 de ff ff  bc 0a 00 00 5f de ff ff   |....3......._...|
0x804b4b0:   dc 0a 00 00 85 de ff ff  fc 0a 00 00 c7 de ff ff   |................|
0x804b4c0:   1c 0b 00 00 09 df ff ff  3c 0b 00 00 4b df ff ff   |........<...K...|
0x804b4d0:   5c 0b 00 00 c0 df ff ff  7c 0b 00 00 1d e0 ff ff   |\.......|.......|
0x804b4e0:   9c 0b 00 00 7a e0 ff ff  bc 0b 00 00 d7 e0 ff ff   |....z...........|
0x804b4f0:   dc 0b 00 00 67 e1 ff ff  fc 0b 00 00 cb e1 ff ff   |....g...........|
0x804b500:   1c 0c 00 00 3b e2 ff ff  3c 0c 00 00 82 e2 ff ff   |....;...<.......|
0x804b510:   60 0c 00 00 d7 e2 ff ff  80 0c 00 00 1e e3 ff ff   |`...............|
0x804b520:   a4 0c 00 00 86 e3 ff ff  c8 0c 00 00 1c e6 ff ff   |................|
0x804b530:   f8 0c 00 00 0d f8 ff ff  28 0d 00 00 b7 fd ff ff   |........(.......|
0x804b540:   60 0d 00 00 c0 fd ff ff  74 0d 00 00 20 fe ff ff   |`.......t... ...|
0x804b550:   c0 0d 00 00 14                                     |.....           |
; section: .eh_frame
0x804b554:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b564:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b574:   0c ce ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b584:   30 00 00 00 68 cd ff ff  40 00 00 00 00 0e 08 46   |0...h...@......F|
0x804b594:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b5a4:   10 00 00 00 54 00 00 00  84 cd ff ff 08 00 00 00   |....T...........|
0x804b5b4:   00 00 00 00 1c 00 00 00  68 00 00 00 96 ce ff ff   |........h.......|
0x804b5c4:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b5d4:   04 04 00 00 20 00 00 00  88 00 00 00 86 ce ff ff   |.... ...........|
0x804b5e4:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b5f4:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b604:   90 ce ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b614:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b624:   8e ce ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b634:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b644:   96 ce ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b654:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b664:   a0 ce ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b674:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b684:   a9 ce ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b694:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b6a4:   cc ce ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b6b4:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b6c4:   ed ce ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b6d4:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b6e4:   90 01 00 00 21 cf ff ff  52 00 00 00 00 41 0e 08   |....!...R....A..|
0x804b6f4:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b704:   1c 00 00 00 b4 01 00 00  4f cf ff ff 3d 00 00 00   |........O...=...|
0x804b714:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b724:   1c 00 00 00 d4 01 00 00  6c cf ff ff 37 00 00 00   |........l...7...|
0x804b734:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b744:   1c 00 00 00 f4 01 00 00  83 cf ff ff 1f 00 00 00   |................|
0x804b754:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b764:   1c 00 00 00 14 02 00 00  82 cf ff ff 2a 00 00 00   |............*...|
0x804b774:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b784:   1c 00 00 00 34 02 00 00  8c cf ff ff 2c 00 00 00   |....4.......,...|
0x804b794:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b7a4:   1c 00 00 00 54 02 00 00  98 cf ff ff 2b 00 00 00   |....T.......+...|
0x804b7b4:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b7c4:   1c 00 00 00 74 02 00 00  a3 cf ff ff 49 00 00 00   |....t.......I...|
0x804b7d4:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b7e4:   1c 00 00 00 94 02 00 00  cc cf ff ff 47 00 00 00   |............G...|
0x804b7f4:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b804:   20 00 00 00 b4 02 00 00  f3 cf ff ff 5a 00 00 00   | ...........Z...|
0x804b814:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b824:   c5 0c 04 04 20 00 00 00  d8 02 00 00 29 d0 ff ff   |.... .......)...|
0x804b834:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b844:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b854:   59 d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |Y...?....A....B.|
0x804b864:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b874:   78 d0 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |x...9....A....B.|
0x804b884:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b894:   91 d0 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b8a4:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b8b4:   93 d0 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b8c4:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b8d4:   c1 d0 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b8e4:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b8f4:   dd d0 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b904:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b914:   46 d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |F...2....A....B.|
0x804b924:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b934:   58 d1 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |X...0....A....B.|
0x804b944:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b954:   68 d1 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |h...E....A....B.|
0x804b964:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b974:   8d d1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b984:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b994:   ac d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b9a4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b9b4:   be d1 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b9c4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b9d4:   ca d1 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b9e4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b9f4:   c8 d1 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804ba04:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804ba14:   d0 d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ba24:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804ba34:   d5 d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ba44:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804ba54:   da d1 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804ba64:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804ba74:   f1 d1 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804ba84:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804ba94:   05 d2 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804baa4:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804bab4:   60 05 00 00 33 d2 ff ff  4c 00 00 00 00 41 0e 08   |`...3...L....A..|
0x804bac4:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804bad4:   1c 00 00 00 84 05 00 00  5b d2 ff ff 37 00 00 00   |........[...7...|
0x804bae4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804baf4:   1c 00 00 00 a4 05 00 00  72 d2 ff ff 31 00 00 00   |........r...1...|
0x804bb04:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bb14:   1c 00 00 00 c4 05 00 00  83 d2 ff ff 1f 00 00 00   |................|
0x804bb24:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bb34:   1c 00 00 00 e4 05 00 00  82 d2 ff ff 2a 00 00 00   |............*...|
0x804bb44:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bb54:   1c 00 00 00 04 06 00 00  8c d2 ff ff 28 00 00 00   |............(...|
0x804bb64:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bb74:   1c 00 00 00 24 06 00 00  94 d2 ff ff 29 00 00 00   |....$.......)...|
0x804bb84:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bb94:   1c 00 00 00 44 06 00 00  9d d2 ff ff 3c 00 00 00   |....D.......<...|
0x804bba4:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bbb4:   1c 00 00 00 64 06 00 00  b9 d2 ff ff 3a 00 00 00   |....d.......:...|
0x804bbc4:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bbd4:   20 00 00 00 84 06 00 00  d3 d2 ff ff 53 00 00 00   | ...........S...|
0x804bbe4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bbf4:   c5 0c 04 04 20 00 00 00  a8 06 00 00 02 d3 ff ff   |.... ...........|
0x804bc04:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bc14:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bc24:   2b d3 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |+...8....A....B.|
0x804bc34:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bc44:   43 d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |C...2....A....B.|
0x804bc54:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bc64:   55 d3 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |U........A....B.|
0x804bc74:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bc84:   49 d3 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |I........A....B.|
0x804bc94:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bca4:   40 d3 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |@........A....B.|
0x804bcb4:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bcc4:   35 d3 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |5........A....B.|
0x804bcd4:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bce4:   2b d3 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |+...'....A....B.|
0x804bcf4:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bd04:   32 d3 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |2...%....A....B.|
0x804bd14:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bd24:   37 d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |7...?....A....B.|
0x804bd34:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bd44:   56 d3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |V...9....A....B.|
0x804bd54:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bd64:   6f d3 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |o...,....A....B.|
0x804bd74:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bd84:   7b d3 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |{...&....A....B.|
0x804bd94:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bda4:   81 d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bdb4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bdc4:   a3 d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bdd4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bde4:   c5 d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bdf4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804be04:   e7 d3 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804be14:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804be24:   3c d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |<...]....A....B.|
0x804be34:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804be44:   79 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |y...]....A....B.|
0x804be54:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804be64:   b6 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804be74:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804be84:   f3 d4 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804be94:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804bea4:   63 d5 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |c...d....A....B.|
0x804beb4:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bec4:   a7 d5 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804bed4:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bee4:   f7 d5 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804bef4:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bf04:   b0 09 00 00 1a d6 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804bf14:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bf24:   d0 09 00 00 4f d6 ff ff  47 00 00 00 00 41 0e 08   |....O...G....A..|
0x804bf34:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bf44:   20 00 00 00 f4 09 00 00  72 d6 ff ff 68 00 00 00   | .......r...h...|
0x804bf54:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bf64:   0c 04 04 00 2c 00 00 00  18 0a 00 00 b6 d6 ff ff   |....,...........|
0x804bf74:   96 02 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804bf84:   86 04 83 05 03 89 02 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bf94:   04 00 00 00 2c 00 00 00  48 0a 00 00 1c d9 ff ff   |....,...H.......|
0x804bfa4:   f1 11 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804bfb4:   86 04 83 05 03 e1 11 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bfc4:   04 00 00 00 34 00 00 00  78 0a 00 00 dd ea ff ff   |....4...x.......|
0x804bfd4:   aa 05 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804bfe4:   0f 03 75 78 06 10 03 02  75 7c 03 95 05 c1 0c 01   |..ux....u|......|
0x804bff4:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804c004:   b0 0a 00 00 4f f0 ff ff  04 00 00 00 00 00 00 00   |....O...........|
0x804c014:   48 00 00 00 c4 0a 00 00  44 f0 ff ff 5d 00 00 00   |H.......D...]...|
0x804c024:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x804c034:   41 0e 14 83 05 4e 0e 20  69 0e 24 41 0e 28 44 0e   |A....N. i.$A.(D.|
0x804c044:   2c 44 0e 30 4d 0e 20 47  0e 14 41 c3 0e 10 41 c6   |,D.0M. G..A...A.|
0x804c054:   0e 0c 41 c7 0e 08 41 c5  0e 04 00 00 10 00 00 00   |..A...A.........|
0x804c064:   10 0b 00 00 58 f0 ff ff  02 00 00 00 00 00 00 00   |....X...........|
0x804c074:   00 00 00 00 ??                                     |....?           |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 c4 b0 04 08  19 00 00 00 0c df 04 08   |................|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff cc 08 5e 56   |..............^V|
0x804e028:   c3 c9 4b 08 9a f2 1f 98  ff ff ff ff f6 ff ff ff   |..K.............|
0x804e038:   65 5b 5f 00 c9 0e fe c2  ff ff ff ff d7 e7 00 00   |e[_.............|
0x804e048:   fc ff ff ff ff ff ff ff  08 00 00 00 de fd b0 b9   |................|
0x804e058:   09 00 00 00 75 b9 00 f4  78 46 59 e9 24 4e 00 00   |....u...xFY.$N..|
0x804e068:   86 28 9c af 39 48 c0 ca  01 45 00 00 03 00 00 00   |.(..9H...E......|
0x804e078:   07 00 00 00 51 5b 39 41  19 04 48 bd e6 00 9b 84   |....Q[9A..H.....|
0x804e088:   41 ee 28 b3 04 00 00 00  6e bf 2a 19 ff ff ff ff   |A.(.....n.*.....|
0x804e098:   f9 00 00 00 8d b0 da 4c  d1 27 01 00 06 00 00 00   |.......L.'......|
0x804e0a8:   f6 ff ff ff 48 c9 b7 e2  ff ff ff ff 53 15 bd 05   |....H.......S...|
0x804e0b8:   04 00 00 00 c0 ??                                  |.....?          |
