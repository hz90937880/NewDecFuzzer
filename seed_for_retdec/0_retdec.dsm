;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 16:59:29
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 c0 dc ff ff               	lea eax, [ebx - 0x2340]
0x804835c:   50                              	push eax
0x804835d:   8d 83 60 dc ff ff               	lea eax, [ebx - 0x23a0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 85 a8 04 08               	mov eax, 0x804a885
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 84 d0 04 08                  	mov eax, 0x804d084
0x80483a5:   3d 84 d0 04 08                  	cmp eax, 0x804d084
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 84 d0 04 08                  	push 0x804d084
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 84 d0 04 08                  	mov eax, 0x804d084
0x80483e5:   2d 84 d0 04 08                  	sub eax, 0x804d084
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 84 d0 04 08                  	push 0x804d084
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d a0 d0 04 08 00            	cmp byte ptr [0x804d0a0], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 a0 d0 04 08 01            	mov byte ptr [0x804d0a0], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 f3 27 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 df 27 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 e0 dc ff ff               	lea edx, [eax - 0x2320]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 b2 27 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 94 27 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 6c 27 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 42 27 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 19 27 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 d6 26 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 94 26 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 3c 26 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 eb 25 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 ae 25 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 77 25 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 58 25 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 2e 25 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 02 25 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 d7 24 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 8e 24 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 46 24 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 ec 23 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 99 23 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 5a 23 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 24 23 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 02 23 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 b4 22 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 78 22 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 ef 21 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 bd 21 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 8d 21 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 48 21 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 09 21 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 d7 20 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 a8 20 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 8a 20 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 62 20 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 3d 20 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 18 20 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 e1 1f 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 ac 1f 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 5a 1f 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 0f 1f 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 d8 1e 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 a7 1e 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 88 1e 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 5e 1e 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 36 1e 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 0d 1e 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 d1 1d 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 96 1d 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 43 1d 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 f7 1c 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 bf 1c 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 90 1c 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 7c 1c 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 65 1c 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 50 1c 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 3a 1c 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 13 1c 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 ee 1b 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 af 1b 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 76 1b 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 4a 1b 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 24 1b 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 d8 dd ff ff               	fld dword ptr [eax - 0x2228]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 d8 dd ff ff               	fld dword ptr [eax - 0x2228]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 dc dd ff ff               	fld dword ptr [eax - 0x2224]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 e2 1a 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 d8 dd ff ff               	fld dword ptr [eax - 0x2228]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 d8 dd ff ff               	fld dword ptr [eax - 0x2228]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 dc dd ff ff               	fld dword ptr [eax - 0x2224]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 a0 1a 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 e0 dd ff ff               	fld dword ptr [eax - 0x2220]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 e4 dd ff ff               	fld dword ptr [eax - 0x221c]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 e8 dd ff ff               	fld dword ptr [eax - 0x2218]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 5e 1a 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 ec dd ff ff               	fld dword ptr [eax - 0x2214]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 f0 dd ff ff               	fld dword ptr [eax - 0x2210]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 f4 dd ff ff               	fld dword ptr [eax - 0x220c]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 e6 19 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 f8 dd ff ff               	fld qword ptr [eax - 0x2208]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 f8 dd ff ff               	fld qword ptr [eax - 0x2208]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 00 de ff ff               	fld qword ptr [eax - 0x2200]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 89 19 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 f8 dd ff ff               	fld qword ptr [eax - 0x2208]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 f8 dd ff ff               	fld qword ptr [eax - 0x2208]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 00 de ff ff               	fld qword ptr [eax - 0x2200]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 2c 19 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 08 de ff ff               	fld qword ptr [eax - 0x21f8]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 10 de ff ff               	fld qword ptr [eax - 0x21f0]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 18 de ff ff               	fld qword ptr [eax - 0x21e8]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 cf 18 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 20 de ff ff               	fld qword ptr [eax - 0x21e0]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 28 de ff ff               	fld qword ptr [eax - 0x21d8]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 30 de ff ff               	fld qword ptr [eax - 0x21d0]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 3f 18 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 38 de ff ff               	fld dword ptr [eax - 0x21c8]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 3c de ff ff               	fld dword ptr [eax - 0x21c4]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 db 17 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 c0 00 00 00            	mov dword ptr [eax + edx*4 + 0xc0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 6a 17 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 c0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xc0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 27 17 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 f0 dc ff ff               	lea eax, [ebx - 0x2310]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 14 dd ff ff               	lea eax, [ebx - 0x22ec]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80497ab
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 34                        	sub esp, 0x34
0x804962f:   e8 1d 16 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x8049634:   05 cc 39 00 00                  	add eax, 0x39cc
0x8049639:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804963c:   8b 4d 1c                        	mov ecx, dword ptr [ebp + 0x1c]
0x804963f:   8b 75 28                        	mov esi, dword ptr [ebp + 0x28]
0x8049642:   8b 5d 34                        	mov ebx, dword ptr [ebp + 0x34]
0x8049645:   89 5d cc                        	mov dword ptr [ebp - 0x34], ebx
0x8049648:   8b 7d 3c                        	mov edi, dword ptr [ebp + 0x3c]
0x804964b:   89 7d c8                        	mov dword ptr [ebp - 0x38], edi
0x804964e:   8b 5d 60                        	mov ebx, dword ptr [ebp + 0x60]
0x8049651:   89 5d c4                        	mov dword ptr [ebp - 0x3c], ebx
0x8049654:   8b 7d 68                        	mov edi, dword ptr [ebp + 0x68]
0x8049657:   89 7d c0                        	mov dword ptr [ebp - 0x40], edi
0x804965a:   8b 7d 6c                        	mov edi, dword ptr [ebp + 0x6c]
0x804965d:   8b 5d 74                        	mov ebx, dword ptr [ebp + 0x74]
0x8049660:   66 89 55 f0                     	mov word ptr [ebp - 0x10], dx
0x8049664:   89 ca                           	mov edx, ecx
0x8049666:   88 55 ec                        	mov byte ptr [ebp - 0x14], dl
0x8049669:   89 f2                           	mov edx, esi
0x804966b:   66 89 55 e8                     	mov word ptr [ebp - 0x18], dx
0x804966f:   0f b6 55 cc                     	movzx edx, byte ptr [ebp - 0x34]
0x8049673:   88 55 e4                        	mov byte ptr [ebp - 0x1c], dl
0x8049676:   0f b6 55 c8                     	movzx edx, byte ptr [ebp - 0x38]
0x804967a:   88 55 e0                        	mov byte ptr [ebp - 0x20], dl
0x804967d:   0f b6 55 c4                     	movzx edx, byte ptr [ebp - 0x3c]
0x8049681:   88 55 dc                        	mov byte ptr [ebp - 0x24], dl
0x8049684:   0f b7 55 c0                     	movzx edx, word ptr [ebp - 0x40]
0x8049688:   66 89 55 d8                     	mov word ptr [ebp - 0x28], dx
0x804968c:   89 fa                           	mov edx, edi
0x804968e:   88 55 d4                        	mov byte ptr [ebp - 0x2c], dl
0x8049691:   89 da                           	mov edx, ebx
0x8049693:   88 55 d0                        	mov byte ptr [ebp - 0x30], dl
0x8049696:   0f b7 55 f0                     	movzx edx, word ptr [ebp - 0x10]
0x804969a:   66 89 90 24 00 00 00            	mov word ptr [eax + 0x24], dx
0x80496a1:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80496a4:   89 90 28 00 00 00               	mov dword ptr [eax + 0x28], edx
0x80496aa:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80496ad:   89 90 2c 00 00 00               	mov dword ptr [eax + 0x2c], edx
0x80496b3:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80496b6:   89 90 30 00 00 00               	mov dword ptr [eax + 0x30], edx
0x80496bc:   8b 55 18                        	mov edx, dword ptr [ebp + 0x18]
0x80496bf:   89 90 34 00 00 00               	mov dword ptr [eax + 0x34], edx
0x80496c5:   0f b6 55 ec                     	movzx edx, byte ptr [ebp - 0x14]
0x80496c9:   88 90 c4 04 00 00               	mov byte ptr [eax + 0x4c4], dl
0x80496cf:   8b 55 20                        	mov edx, dword ptr [ebp + 0x20]
0x80496d2:   89 90 c8 04 00 00               	mov dword ptr [eax + 0x4c8], edx
0x80496d8:   8b 55 24                        	mov edx, dword ptr [ebp + 0x24]
0x80496db:   89 90 38 00 00 00               	mov dword ptr [eax + 0x38], edx
0x80496e1:   0f b7 55 e8                     	movzx edx, word ptr [ebp - 0x18]
0x80496e5:   66 89 90 3c 00 00 00            	mov word ptr [eax + 0x3c], dx
0x80496ec:   8b 55 2c                        	mov edx, dword ptr [ebp + 0x2c]
0x80496ef:   89 90 40 00 00 00               	mov dword ptr [eax + 0x40], edx
0x80496f5:   8b 55 30                        	mov edx, dword ptr [ebp + 0x30]
0x80496f8:   89 90 44 00 00 00               	mov dword ptr [eax + 0x44], edx
0x80496fe:   0f b6 55 e4                     	movzx edx, byte ptr [ebp - 0x1c]
0x8049702:   88 90 48 00 00 00               	mov byte ptr [eax + 0x48], dl
0x8049708:   8b 55 38                        	mov edx, dword ptr [ebp + 0x38]
0x804970b:   89 90 4c 00 00 00               	mov dword ptr [eax + 0x4c], edx
0x8049711:   0f b6 55 e0                     	movzx edx, byte ptr [ebp - 0x20]
0x8049715:   88 90 50 00 00 00               	mov byte ptr [eax + 0x50], dl
0x804971b:   8b 55 40                        	mov edx, dword ptr [ebp + 0x40]
0x804971e:   89 90 cc 04 00 00               	mov dword ptr [eax + 0x4cc], edx
0x8049724:   8b 55 44                        	mov edx, dword ptr [ebp + 0x44]
0x8049727:   89 90 54 00 00 00               	mov dword ptr [eax + 0x54], edx
0x804972d:   8b 55 48                        	mov edx, dword ptr [ebp + 0x48]
0x8049730:   89 90 58 00 00 00               	mov dword ptr [eax + 0x58], edx
0x8049736:   8b 55 4c                        	mov edx, dword ptr [ebp + 0x4c]
0x8049739:   89 90 5c 00 00 00               	mov dword ptr [eax + 0x5c], edx
0x804973f:   8b 55 50                        	mov edx, dword ptr [ebp + 0x50]
0x8049742:   89 90 60 00 00 00               	mov dword ptr [eax + 0x60], edx
0x8049748:   8b 55 54                        	mov edx, dword ptr [ebp + 0x54]
0x804974b:   89 90 64 00 00 00               	mov dword ptr [eax + 0x64], edx
0x8049751:   8b 55 58                        	mov edx, dword ptr [ebp + 0x58]
0x8049754:   89 90 68 00 00 00               	mov dword ptr [eax + 0x68], edx
0x804975a:   8b 55 5c                        	mov edx, dword ptr [ebp + 0x5c]
0x804975d:   89 90 6c 00 00 00               	mov dword ptr [eax + 0x6c], edx
0x8049763:   0f b6 55 dc                     	movzx edx, byte ptr [ebp - 0x24]
0x8049767:   88 90 70 00 00 00               	mov byte ptr [eax + 0x70], dl
0x804976d:   8b 55 64                        	mov edx, dword ptr [ebp + 0x64]
0x8049770:   89 90 74 00 00 00               	mov dword ptr [eax + 0x74], edx
0x8049776:   0f b7 55 d8                     	movzx edx, word ptr [ebp - 0x28]
0x804977a:   66 89 90 78 00 00 00            	mov word ptr [eax + 0x78], dx
0x8049781:   0f b6 55 d4                     	movzx edx, byte ptr [ebp - 0x2c]
0x8049785:   88 90 7a 00 00 00               	mov byte ptr [eax + 0x7a], dl
0x804978b:   8b 55 70                        	mov edx, dword ptr [ebp + 0x70]
0x804978e:   89 90 7c 00 00 00               	mov dword ptr [eax + 0x7c], edx
0x8049794:   0f b6 55 d0                     	movzx edx, byte ptr [ebp - 0x30]
0x8049798:   88 90 80 00 00 00               	mov byte ptr [eax + 0x80], dl
0x804979e:   b8 00 00 00 00                  	mov eax, 0
0x80497a3:   83 c4 34                        	add esp, 0x34
0x80497a6:   5b                              	pop ebx
0x80497a7:   5e                              	pop esi
0x80497a8:   5f                              	pop edi
0x80497a9:   5d                              	pop ebp
0x80497aa:   c3                              	ret 
; function: func_1 at 0x80497ab -- 0x804a885
0x80497ab:   55                              	push ebp
0x80497ac:   89 e5                           	mov ebp, esp
0x80497ae:   57                              	push edi
0x80497af:   56                              	push esi
0x80497b0:   53                              	push ebx
0x80497b1:   81 ec 7c 01 00 00               	sub esp, 0x17c
0x80497b7:   e8 95 14 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.ax>
0x80497bc:   05 44 38 00 00                  	add eax, 0x3844
0x80497c1:   66 c7 45 e6 05 00               	mov word ptr [ebp - 0x1a], 5
0x80497c7:   c7 45 dc 01 00 00 00            	mov dword ptr [ebp - 0x24], 1
0x80497ce:   c7 45 d8 23 5a 83 8a            	mov dword ptr [ebp - 0x28], 0x8a835a23
0x80497d5:   c7 45 d4 a2 95 45 1d            	mov dword ptr [ebp - 0x2c], 0x1d4595a2
0x80497dc:   c7 45 e0 a5 ce fc d7            	mov dword ptr [ebp - 0x20], 0xd7fccea5
0x80497e3:   c6 45 f1 00                     	mov byte ptr [ebp - 0xf], 0
0x80497e7:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x80497ee:   c7 45 e8 ff ff ff ff            	mov dword ptr [ebp - 0x18], 0xffffffff
0x80497f5:   66 c7 45 f2 62 79               	mov word ptr [ebp - 0xe], 0x7962
0x80497fb:   c7 45 d0 01 00 00 00            	mov dword ptr [ebp - 0x30], 1
0x8049802:   c7 45 84 09 00 00 00            	mov dword ptr [ebp - 0x7c], 9
0x8049809:   c6 45 cf f7                     	mov byte ptr [ebp - 0x31], 0xf7
0x804980d:   c7 45 80 20 c2 7c 61            	mov dword ptr [ebp - 0x80], 0x617cc220
0x8049814:   c6 45 ce d6                     	mov byte ptr [ebp - 0x32], 0xd6
0x8049818:   c7 45 c8 00 00 00 00            	mov dword ptr [ebp - 0x38], 0
0x804981f:   c7 85 7c ff ff ff d4 a8 0c 34   	mov dword ptr [ebp - 0x84], 0x340ca8d4
0x8049829:   c7 45 c4 e9 eb bd 0c            	mov dword ptr [ebp - 0x3c], 0xcbdebe9
0x8049830:   c7 45 c0 ff ff ff ff            	mov dword ptr [ebp - 0x40], 0xffffffff
0x8049837:   c7 85 78 ff ff ff e7 8d e4 bb   	mov dword ptr [ebp - 0x88], 0xbbe48de7
0x8049841:   c7 45 bc 21 21 05 67            	mov dword ptr [ebp - 0x44], 0x67052121
0x8049848:   c7 45 b8 ff ff ff ff            	mov dword ptr [ebp - 0x48], 0xffffffff
0x804984f:   c7 45 b4 31 39 eb 6e            	mov dword ptr [ebp - 0x4c], 0x6eeb3931
0x8049856:   c6 45 b3 ff                     	mov byte ptr [ebp - 0x4d], 0xff
0x804985a:   c7 85 74 ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0x8c], 5
0x8049864:   66 c7 85 72 ff ff ff 01 00      	mov word ptr [ebp - 0x8e], 1
0x804986d:   c6 85 71 ff ff ff 09            	mov byte ptr [ebp - 0x8f], 9
0x8049874:   c7 85 6c ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0x94], 2
0x804987e:   c6 45 b2 34                     	mov byte ptr [ebp - 0x4e], 0x34
0x8049882:   66 c7 85 6a ff ff ff 70 5f      	mov word ptr [ebp - 0x96], 0x5f70
0x804988b:   c7 45 ac 89 0f 02 f5            	mov dword ptr [ebp - 0x54], 0xf5020f89
0x8049892:   c7 45 a8 ab ff 32 8d            	mov dword ptr [ebp - 0x58], 0x8d32ffab
0x8049899:   c7 85 64 ff ff ff 11 0e b4 d1   	mov dword ptr [ebp - 0x9c], 0xd1b40e11
0x80498a3:   c7 85 60 ff ff ff 38 db 65 b8   	mov dword ptr [ebp - 0xa0], 0xb865db38
0x80498ad:   c7 45 a4 05 00 00 00            	mov dword ptr [ebp - 0x5c], 5
0x80498b4:   c7 85 5c ff ff ff c0 3f c2 3a   	mov dword ptr [ebp - 0xa4], 0x3ac23fc0
0x80498be:   c7 85 58 ff ff ff be 18 53 29   	mov dword ptr [ebp - 0xa8], 0x295318be
0x80498c8:   66 c7 85 56 ff ff ff b9 c5      	mov word ptr [ebp - 0xaa], 0xc5b9
0x80498d1:   66 c7 85 54 ff ff ff 00 00      	mov word ptr [ebp - 0xac], 0
0x80498da:   c6 45 a3 01                     	mov byte ptr [ebp - 0x5d], 1
0x80498de:   c7 85 50 ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0xb0], 5
0x80498e8:   66 83 bd 6a ff ff ff 00         	cmp word ptr [ebp - 0x96], 0
0x80498f0:   74 2b                           	je 0x804991d <func_1+0x172>
0x80498f2:   c7 85 18 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xe8], 0xffffffff
0x80498fc:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049900:   83 e8 01                        	sub eax, 1
0x8049903:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x8049907:   0f bf 85 6a ff ff ff            	movsx eax, word ptr [ebp - 0x96]
0x804990e:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049911:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049915:   31 45 d8                        	xor dword ptr [ebp - 0x28], eax
0x8049918:   e9 5a 04 00 00                  	jmp 0x8049d77 <func_1+0x5cc>
0x804991d:   66 c7 45 a0 ff ff               	mov word ptr [ebp - 0x60], 0xffff
0x8049923:   c7 85 4c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xb4], 0xffffffff
0x804992d:   c6 85 4b ff ff ff ff            	mov byte ptr [ebp - 0xb5], 0xff
0x8049934:   c7 85 44 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xbc], 1
0x804993e:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x8049942:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049945:   66 83 bd 6a ff ff ff 00         	cmp word ptr [ebp - 0x96], 0
0x804994d:   0f 95 c0                        	setne al
0x8049950:   0f b6 c0                        	movzx eax, al
0x8049953:   66 98                           	cbw 
0x8049955:   89 c2                           	mov edx, eax
0x8049957:   c1 e0 02                        	shl eax, 2
0x804995a:   29 c2                           	sub edx, eax
0x804995c:   89 d0                           	mov eax, edx
0x804995e:   89 c2                           	mov edx, eax
0x8049960:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x8049964:   31 d0                           	xor eax, edx
0x8049966:   66 25 42 96                     	and ax, 0x9642
0x804996a:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x804996e:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x8049972:   c1 f8 04                        	sar eax, 4
0x8049975:   85 c0                           	test eax, eax
0x8049977:   0f 84 ac 00 00 00               	je 0x8049a29 <func_1+0x27e>
0x804997d:   0f b6 45 b2                     	movzx eax, byte ptr [ebp - 0x4e]
0x8049981:   0f be 9d 71 ff ff ff            	movsx ebx, byte ptr [ebp - 0x8f]
0x8049988:   0f bf bd 72 ff ff ff            	movsx edi, word ptr [ebp - 0x8e]
0x804998f:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x8049995:   0f b6 75 b3                     	movzx esi, byte ptr [ebp - 0x4d]
0x8049999:   89 b5 7c fe ff ff               	mov dword ptr [ebp - 0x184], esi
0x804999f:   0f be 4d ce                     	movsx ecx, byte ptr [ebp - 0x32]
0x80499a3:   89 8d 78 fe ff ff               	mov dword ptr [ebp - 0x188], ecx
0x80499a9:   0f b6 7d cf                     	movzx edi, byte ptr [ebp - 0x31]
0x80499ad:   0f b7 75 f2                     	movzx esi, word ptr [ebp - 0xe]
0x80499b1:   0f b6 4d f1                     	movzx ecx, byte ptr [ebp - 0xf]
0x80499b5:   0f b7 55 e6                     	movzx edx, word ptr [ebp - 0x1a]
0x80499b9:   50                              	push eax
0x80499ba:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x80499c0:   53                              	push ebx
0x80499c1:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x80499c7:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x80499cd:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x80499d3:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x80499d6:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x80499d9:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x80499dc:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x80499e2:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x80499e5:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x80499e8:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x80499ee:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x80499f1:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x80499f7:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x80499fa:   57                              	push edi
0x80499fb:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x80499fe:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049a01:   56                              	push esi
0x8049a02:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049a05:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049a08:   51                              	push ecx
0x8049a09:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049a0c:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049a0f:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049a12:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049a15:   52                              	push edx
0x8049a16:   e8 0b fc ff ff                  	call 0x8049626 <set_var>
0x8049a1b:   83 c4 70                        	add esp, 0x70
0x8049a1e:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x8049a24:   e9 54 0e 00 00                  	jmp 0x804a87d <func_1+0x10d2>
0x8049a29:   66 c7 85 42 ff ff ff 02 00      	mov word ptr [ebp - 0xbe], 2
0x8049a32:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049a36:   66 89 85 42 ff ff ff            	mov word ptr [ebp - 0xbe], ax
0x8049a3d:   66 c7 45 e6 00 00               	mov word ptr [ebp - 0x1a], 0
0x8049a43:   66 83 7d e6 01                  	cmp word ptr [ebp - 0x1a], 1
0x8049a48:   0f 87 b6 00 00 00               	ja 0x8049b04 <func_1+0x359>
0x8049a4e:   66 c7 85 1c ff ff ff 00 00      	mov word ptr [ebp - 0xe4], 0
0x8049a57:   0f b6 45 b2                     	movzx eax, byte ptr [ebp - 0x4e]
0x8049a5b:   0f be 9d 71 ff ff ff            	movsx ebx, byte ptr [ebp - 0x8f]
0x8049a62:   0f bf bd 72 ff ff ff            	movsx edi, word ptr [ebp - 0x8e]
0x8049a69:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x8049a6f:   0f b6 75 b3                     	movzx esi, byte ptr [ebp - 0x4d]
0x8049a73:   89 b5 7c fe ff ff               	mov dword ptr [ebp - 0x184], esi
0x8049a79:   0f be 4d ce                     	movsx ecx, byte ptr [ebp - 0x32]
0x8049a7d:   89 8d 78 fe ff ff               	mov dword ptr [ebp - 0x188], ecx
0x8049a83:   0f b6 7d cf                     	movzx edi, byte ptr [ebp - 0x31]
0x8049a87:   0f b7 75 f2                     	movzx esi, word ptr [ebp - 0xe]
0x8049a8b:   0f b6 4d f1                     	movzx ecx, byte ptr [ebp - 0xf]
0x8049a8f:   0f b7 55 e6                     	movzx edx, word ptr [ebp - 0x1a]
0x8049a93:   50                              	push eax
0x8049a94:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049a9a:   53                              	push ebx
0x8049a9b:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x8049aa1:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049aa7:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x8049aad:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049ab0:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049ab3:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049ab6:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049abc:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049abf:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049ac2:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049ac8:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049acb:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x8049ad1:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049ad4:   57                              	push edi
0x8049ad5:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049ad8:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049adb:   56                              	push esi
0x8049adc:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049adf:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049ae2:   51                              	push ecx
0x8049ae3:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049ae6:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049ae9:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049aec:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049aef:   52                              	push edx
0x8049af0:   e8 31 fb ff ff                  	call 0x8049626 <set_var>
0x8049af5:   83 c4 70                        	add esp, 0x70
0x8049af8:   0f b7 85 1c ff ff ff            	movzx eax, word ptr [ebp - 0xe4]
0x8049aff:   e9 79 0d 00 00                  	jmp 0x804a87d <func_1+0x10d2>
0x8049b04:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049b07:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049b0a:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049b0d:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x8049b13:   c7 85 4c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xb4], 0
0x8049b1d:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x8049b21:   0f be c0                        	movsx eax, al
0x8049b24:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049b27:   66 83 bd 6a ff ff ff 00         	cmp word ptr [ebp - 0x96], 0
0x8049b2f:   0f 84 db 01 00 00               	je 0x8049d10 <func_1+0x565>
0x8049b35:   66 c7 85 3a ff ff ff 03 f9      	mov word ptr [ebp - 0xc6], 0xf903
0x8049b3e:   c7 85 34 ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0xcc], 0xfffffffa
0x8049b48:   c7 45 9c ff ff ff ff            	mov dword ptr [ebp - 0x64], 0xffffffff
0x8049b4f:   66 c7 45 a0 0c 00               	mov word ptr [ebp - 0x60], 0xc
0x8049b55:   e9 7c 01 00 00                  	jmp 0x8049cd6 <func_1+0x52b>
0x8049b5a:   c7 85 2c ff ff ff 21 de 06 5d   	mov dword ptr [ebp - 0xd4], 0x5d06de21
0x8049b64:   c7 45 ac ec ff ff ff            	mov dword ptr [ebp - 0x54], 0xffffffec
0x8049b6b:   e9 51 01 00 00                  	jmp 0x8049cc1 <func_1+0x516>
0x8049b70:   c7 85 28 ff ff ff 83 6a 4e 67   	mov dword ptr [ebp - 0xd8], 0x674e6a83
0x8049b7a:   c7 85 24 ff ff ff d7 d3 a0 2d   	mov dword ptr [ebp - 0xdc], 0x2da0d3d7
0x8049b84:   c6 85 23 ff ff ff 35            	mov byte ptr [ebp - 0xdd], 0x35
0x8049b8b:   c6 85 22 ff ff ff f0            	mov byte ptr [ebp - 0xde], 0xf0
0x8049b92:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049b95:   ba fd ff ff ff                  	mov edx, 0xfffffffd
0x8049b9a:   29 c2                           	sub edx, eax
0x8049b9c:   89 d0                           	mov eax, edx
0x8049b9e:   0f be c0                        	movsx eax, al
0x8049ba1:   8b 95 64 ff ff ff               	mov edx, dword ptr [ebp - 0x9c]
0x8049ba7:   0f be da                        	movsx ebx, dl
0x8049baa:   99                              	cdq 
0x8049bab:   f7 fb                           	idiv ebx
0x8049bad:   89 c2                           	mov edx, eax
0x8049baf:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049bb2:   29 c2                           	sub edx, eax
0x8049bb4:   89 d0                           	mov eax, edx
0x8049bb6:   83 c0 20                        	add eax, 0x20
0x8049bb9:   0f b6 d0                        	movzx edx, al
0x8049bbc:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049bbf:   0f b6 c0                        	movzx eax, al
0x8049bc2:   01 d0                           	add eax, edx
0x8049bc4:   0f b7 d0                        	movzx edx, ax
0x8049bc7:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x8049bcd:   0f b7 c0                        	movzx eax, ax
0x8049bd0:   89 c1                           	mov ecx, eax
0x8049bd2:   d3 e2                           	shl edx, cl
0x8049bd4:   89 d0                           	mov eax, edx
0x8049bd6:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049bd9:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049bdc:   88 45 f1                        	mov byte ptr [ebp - 0xf], al
0x8049bdf:   0f b6 45 f1                     	movzx eax, byte ptr [ebp - 0xf]
0x8049be3:   89 85 24 ff ff ff               	mov dword ptr [ebp - 0xdc], eax
0x8049be9:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x8049bef:   0f b6 d0                        	movzx edx, al
0x8049bf2:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049bf6:   0f b6 c0                        	movzx eax, al
0x8049bf9:   89 c1                           	mov ecx, eax
0x8049bfb:   d3 fa                           	sar edx, cl
0x8049bfd:   89 d0                           	mov eax, edx
0x8049bff:   0f b7 d0                        	movzx edx, ax
0x8049c02:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049c05:   0f b7 c0                        	movzx eax, ax
0x8049c08:   01 d0                           	add eax, edx
0x8049c0a:   85 c0                           	test eax, eax
0x8049c0c:   74 6a                           	je 0x8049c78 <func_1+0x4cd>
0x8049c0e:   66 c7 85 1e ff ff ff 00 00      	mov word ptr [ebp - 0xe2], 0
0x8049c17:   80 bd 23 ff ff ff 00            	cmp byte ptr [ebp - 0xdd], 0
0x8049c1e:   0f 85 a9 00 00 00               	jne 0x8049ccd <func_1+0x522>
0x8049c24:   0f b6 55 f1                     	movzx edx, byte ptr [ebp - 0xf]
0x8049c28:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x8049c2e:   0f b6 c0                        	movzx eax, al
0x8049c31:   29 c2                           	sub edx, eax
0x8049c33:   89 d0                           	mov eax, edx
0x8049c35:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x8049c39:   66 81 7d e6 88 93               	cmp word ptr [ebp - 0x1a], 0x9388
0x8049c3f:   0f 94 c0                        	sete al
0x8049c42:   0f b6 d0                        	movzx edx, al
0x8049c45:   0f b6 85 22 ff ff ff            	movzx eax, byte ptr [ebp - 0xde]
0x8049c4c:   21 d0                           	and eax, edx
0x8049c4e:   39 85 34 ff ff ff               	cmp dword ptr [ebp - 0xcc], eax
0x8049c54:   0f 9f c0                        	setg al
0x8049c57:   0f b6 d0                        	movzx edx, al
0x8049c5a:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049c5d:   0f be c0                        	movsx eax, al
0x8049c60:   29 c2                           	sub edx, eax
0x8049c62:   0f bf 85 3a ff ff ff            	movsx eax, word ptr [ebp - 0xc6]
0x8049c69:   09 55 9c                        	or dword ptr [ebp - 0x64], edx
0x8049c6c:   39 45 9c                        	cmp dword ptr [ebp - 0x64], eax
0x8049c6f:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x8049c76:   eb 1d                           	jmp 0x8049c95 <func_1+0x4ea>
0x8049c78:   66 c7 85 20 ff ff ff b7 1f      	mov word ptr [ebp - 0xe0], 0x1fb7
0x8049c81:   66 83 7d e6 00                  	cmp word ptr [ebp - 0x1a], 0
0x8049c86:   75 48                           	jne 0x8049cd0 <func_1+0x525>
0x8049c88:   0f bf 85 6a ff ff ff            	movsx eax, word ptr [ebp - 0x96]
0x8049c8f:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x8049c95:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x8049c9c:   eb 16                           	jmp 0x8049cb4 <func_1+0x509>
0x8049c9e:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049ca1:   c0 f8 05                        	sar al, 5
0x8049ca4:   0f be c0                        	movsx eax, al
0x8049ca7:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049caa:   80 7d f1 00                     	cmp byte ptr [ebp - 0xf], 0
0x8049cae:   75 0c                           	jne 0x8049cbc <func_1+0x511>
0x8049cb0:   83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x8049cb4:   83 7d ec 16                     	cmp dword ptr [ebp - 0x14], 0x16
0x8049cb8:   75 e4                           	jne 0x8049c9e <func_1+0x4f3>
0x8049cba:   eb 01                           	jmp 0x8049cbd <func_1+0x512>
0x8049cbc:   90                              	nop 
0x8049cbd:   83 6d ac 01                     	sub dword ptr [ebp - 0x54], 1
0x8049cc1:   83 7d ac e2                     	cmp dword ptr [ebp - 0x54], -0x1e
0x8049cc5:   0f 85 a5 fe ff ff               	jne 0x8049b70 <func_1+0x3c5>
0x8049ccb:   eb 04                           	jmp 0x8049cd1 <func_1+0x526>
0x8049ccd:   90                              	nop 
0x8049cce:   eb 01                           	jmp 0x8049cd1 <func_1+0x526>
0x8049cd0:   90                              	nop 
0x8049cd1:   66 83 6d a0 01                  	sub word ptr [ebp - 0x60], 1
0x8049cd6:   66 83 7d a0 04                  	cmp word ptr [ebp - 0x60], 4
0x8049cdb:   0f 87 79 fe ff ff               	ja 0x8049b5a <func_1+0x3af>
0x8049ce1:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x8049ce7:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049cea:   c7 45 ac 0c 00 00 00            	mov dword ptr [ebp - 0x54], 0xc
0x8049cf1:   eb 15                           	jmp 0x8049d08 <func_1+0x55d>
0x8049cf3:   c7 85 30 ff ff ff ef b1 ab 12   	mov dword ptr [ebp - 0xd0], 0x12abb1ef
0x8049cfd:   83 ad 30 ff ff ff 01            	sub dword ptr [ebp - 0xd0], 1
0x8049d04:   83 6d ac 01                     	sub dword ptr [ebp - 0x54], 1
0x8049d08:   83 7d ac fe                     	cmp dword ptr [ebp - 0x54], -2
0x8049d0c:   7c e5                           	jl 0x8049cf3 <func_1+0x548>
0x8049d0e:   eb 67                           	jmp 0x8049d77 <func_1+0x5cc>
0x8049d10:   c6 85 41 ff ff ff 77            	mov byte ptr [ebp - 0xbf], 0x77
0x8049d17:   c7 85 3c ff ff ff ea 51 34 79   	mov dword ptr [ebp - 0xc4], 0x793451ea
0x8049d21:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x8049d25:   75 2a                           	jne 0x8049d51 <func_1+0x5a6>
0x8049d27:   0f be 95 41 ff ff ff            	movsx edx, byte ptr [ebp - 0xbf]
0x8049d2e:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x8049d32:   66 c7 45 f2 01 00               	mov word ptr [ebp - 0xe], 1
0x8049d38:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049d3c:   0f be c0                        	movsx eax, al
0x8049d3f:   89 c1                           	mov ecx, eax
0x8049d41:   d3 e2                           	shl edx, cl
0x8049d43:   89 d0                           	mov eax, edx
0x8049d45:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x8049d48:   0f 96 c0                        	setbe al
0x8049d4b:   0f b6 c0                        	movzx eax, al
0x8049d4e:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x8049d51:   c7 85 3c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xc4], 0
0x8049d5b:   80 6d cf 01                     	sub byte ptr [ebp - 0x31], 1
0x8049d5f:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049d62:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x8049d65:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049d68:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x8049d6b:   0f 97 c0                        	seta al
0x8049d6e:   0f b6 c0                        	movzx eax, al
0x8049d71:   31 85 44 ff ff ff               	xor dword ptr [ebp - 0xbc], eax
0x8049d77:   c7 45 98 15 f4 76 ea            	mov dword ptr [ebp - 0x68], 0xea76f415
0x8049d7e:   c7 85 14 ff ff ff 50 25 ec 42   	mov dword ptr [ebp - 0xec], 0x42ec2550
0x8049d88:   c6 85 13 ff ff ff 85            	mov byte ptr [ebp - 0xed], 0x85
0x8049d8f:   c7 85 0c ff ff ff 4d cc 5e 9d   	mov dword ptr [ebp - 0xf4], 0x9d5ecc4d
0x8049d99:   c6 85 0b ff ff ff 12            	mov byte ptr [ebp - 0xf5], 0x12
0x8049da0:   c7 45 94 01 00 00 00            	mov dword ptr [ebp - 0x6c], 1
0x8049da7:   c7 45 90 ff 08 e2 46            	mov dword ptr [ebp - 0x70], 0x46e208ff
0x8049dae:   66 c7 45 8e 7a 1f               	mov word ptr [ebp - 0x72], 0x1f7a
0x8049db4:   c7 85 04 ff ff ff fd ff ff ff   	mov dword ptr [ebp - 0xfc], 0xfffffffd
0x8049dbe:   c7 85 00 ff ff ff d3 38 0a ec   	mov dword ptr [ebp - 0x100], 0xec0a38d3
0x8049dc8:   c7 85 fc fe ff ff 90 b1 f0 2b   	mov dword ptr [ebp - 0x104], 0x2bf0b190
0x8049dd2:   c7 85 f8 fe ff ff f9 ff ff ff   	mov dword ptr [ebp - 0x108], 0xfffffff9
0x8049ddc:   c6 85 f7 fe ff ff 59            	mov byte ptr [ebp - 0x109], 0x59
0x8049de3:   c7 45 ec e4 ff ff ff            	mov dword ptr [ebp - 0x14], 0xffffffe4
0x8049dea:   e9 44 09 00 00                  	jmp 0x804a733 <func_1+0xf88>
0x8049def:   c6 85 f6 fe ff ff 01            	mov byte ptr [ebp - 0x10a], 1
0x8049df6:   c7 45 88 eb 0f cc 23            	mov dword ptr [ebp - 0x78], 0x23cc0feb
0x8049dfd:   c7 85 f0 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x110], 0xffffffff
0x8049e07:   66 c7 85 ee fe ff ff a4 96      	mov word ptr [ebp - 0x112], 0x96a4
0x8049e10:   83 45 98 01                     	add dword ptr [ebp - 0x68], 1
0x8049e14:   66 c7 45 e6 ea ff               	mov word ptr [ebp - 0x1a], 0xffea
0x8049e1a:   66 83 7d e6 24                  	cmp word ptr [ebp - 0x1a], 0x24
0x8049e1f:   0f 87 eb 00 00 00               	ja 0x8049f10 <func_1+0x765>
0x8049e25:   83 6d dc 01                     	sub dword ptr [ebp - 0x24], 1
0x8049e29:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049e2c:   3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x8049e2f:   66 0f be 85 f6 fe ff ff         	movsx ax, byte ptr [ebp - 0x10a]
0x8049e37:   66 0d 2b 77                     	or ax, 0x772b
0x8049e3b:   98                              	cwde 
0x8049e3c:   c1 e0 02                        	shl eax, 2
0x8049e3f:   05 73 95 13 53                  	add eax, 0x53139573
0x8049e44:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x8049e47:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049e4a:   3b 85 14 ff ff ff               	cmp eax, dword ptr [ebp - 0xec]
0x8049e50:   0f 9f c0                        	setg al
0x8049e53:   0f b6 c0                        	movzx eax, al
0x8049e56:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049e59:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049e5d:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x8049e60:   c7 45 d0 62 cc 01 04            	mov dword ptr [ebp - 0x30], 0x401cc62
0x8049e67:   0f b6 45 b2                     	movzx eax, byte ptr [ebp - 0x4e]
0x8049e6b:   0f be 9d 71 ff ff ff            	movsx ebx, byte ptr [ebp - 0x8f]
0x8049e72:   0f bf bd 72 ff ff ff            	movsx edi, word ptr [ebp - 0x8e]
0x8049e79:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x8049e7f:   0f b6 75 b3                     	movzx esi, byte ptr [ebp - 0x4d]
0x8049e83:   89 b5 7c fe ff ff               	mov dword ptr [ebp - 0x184], esi
0x8049e89:   0f be 4d ce                     	movsx ecx, byte ptr [ebp - 0x32]
0x8049e8d:   89 8d 78 fe ff ff               	mov dword ptr [ebp - 0x188], ecx
0x8049e93:   0f b6 7d cf                     	movzx edi, byte ptr [ebp - 0x31]
0x8049e97:   0f b7 75 f2                     	movzx esi, word ptr [ebp - 0xe]
0x8049e9b:   0f b6 4d f1                     	movzx ecx, byte ptr [ebp - 0xf]
0x8049e9f:   0f b7 55 e6                     	movzx edx, word ptr [ebp - 0x1a]
0x8049ea3:   50                              	push eax
0x8049ea4:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049eaa:   53                              	push ebx
0x8049eab:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x8049eb1:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049eb7:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x8049ebd:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049ec0:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049ec3:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049ec6:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049ecc:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049ecf:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049ed2:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049ed8:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049edb:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x8049ee1:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049ee4:   57                              	push edi
0x8049ee5:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049ee8:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049eeb:   56                              	push esi
0x8049eec:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049eef:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049ef2:   51                              	push ecx
0x8049ef3:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049ef6:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049ef9:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049efc:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049eff:   52                              	push edx
0x8049f00:   e8 21 f7 ff ff                  	call 0x8049626 <set_var>
0x8049f05:   83 c4 70                        	add esp, 0x70
0x8049f08:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049f0b:   e9 6d 09 00 00                  	jmp 0x804a87d <func_1+0x10d2>
0x8049f10:   c7 45 ac f8 ff ff ff            	mov dword ptr [ebp - 0x54], 0xfffffff8
0x8049f17:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x8049f1b:   74 0d                           	je 0x8049f2a <func_1+0x77f>
0x8049f1d:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049f21:   74 07                           	je 0x8049f2a <func_1+0x77f>
0x8049f23:   b8 01 00 00 00                  	mov eax, 1
0x8049f28:   eb 05                           	jmp 0x8049f2f <func_1+0x784>
0x8049f2a:   b8 00 00 00 00                  	mov eax, 0
0x8049f2f:   0a 85 f6 fe ff ff               	or al, byte ptr [ebp - 0x10a]
0x8049f35:   66 0f be d0                     	movsx dx, al
0x8049f39:   66 0f be 85 f6 fe ff ff         	movsx ax, byte ptr [ebp - 0x10a]
0x8049f41:   29 c2                           	sub edx, eax
0x8049f43:   89 d0                           	mov eax, edx
0x8049f45:   98                              	cwde 
0x8049f46:   69 c0 ac 47 00 00               	imul eax, eax, 0x47ac
0x8049f4c:   85 c0                           	test eax, eax
0x8049f4e:   83 bd 60 ff ff ff 00            	cmp dword ptr [ebp - 0xa0], 0
0x8049f55:   7f 06                           	jg 0x8049f5d <func_1+0x7b2>
0x8049f57:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x8049f5b:   74 07                           	je 0x8049f64 <func_1+0x7b9>
0x8049f5d:   b8 01 00 00 00                  	mov eax, 1
0x8049f62:   eb 05                           	jmp 0x8049f69 <func_1+0x7be>
0x8049f64:   b8 00 00 00 00                  	mov eax, 0
0x8049f69:   88 45 ce                        	mov byte ptr [ebp - 0x32], al
0x8049f6c:   66 0f be 55 ce                  	movsx dx, byte ptr [ebp - 0x32]
0x8049f71:   0f b6 85 13 ff ff ff            	movzx eax, byte ptr [ebp - 0xed]
0x8049f78:   0f af c2                        	imul eax, edx
0x8049f7b:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x8049f7f:   66 83 7d e6 02                  	cmp word ptr [ebp - 0x1a], 2
0x8049f84:   0f 97 c0                        	seta al
0x8049f87:   0f b6 c0                        	movzx eax, al
0x8049f8a:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049f8d:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x8049f93:   89 c3                           	mov ebx, eax
0x8049f95:   8b 85 f0 fe ff ff               	mov eax, dword ptr [ebp - 0x110]
0x8049f9b:   89 c6                           	mov esi, eax
0x8049f9d:   0f b6 55 cf                     	movzx edx, byte ptr [ebp - 0x31]
0x8049fa1:   0f b6 c2                        	movzx eax, dl
0x8049fa4:   66 69 c0 8b 00                  	imul ax, ax, 0x8b
0x8049fa9:   66 c1 e8 08                     	shr ax, 8
0x8049fad:   c0 e8 05                        	shr al, 5
0x8049fb0:   b9 3b 00 00 00                  	mov ecx, 0x3b
0x8049fb5:   0f af c1                        	imul eax, ecx
0x8049fb8:   29 c2                           	sub edx, eax
0x8049fba:   89 d0                           	mov eax, edx
0x8049fbc:   0f be c0                        	movsx eax, al
0x8049fbf:   0f b7 55 e6                     	movzx edx, word ptr [ebp - 0x1a]
0x8049fc3:   0f be ca                        	movsx ecx, dl
0x8049fc6:   99                              	cdq 
0x8049fc7:   f7 f9                           	idiv ecx
0x8049fc9:   89 d0                           	mov eax, edx
0x8049fcb:   0f b7 d0                        	movzx edx, ax
0x8049fce:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x8049fd4:   0f b7 c0                        	movzx eax, ax
0x8049fd7:   89 c1                           	mov ecx, eax
0x8049fd9:   d3 fa                           	sar edx, cl
0x8049fdb:   0f b6 45 f1                     	movzx eax, byte ptr [ebp - 0xf]
0x8049fdf:   31 c2                           	xor edx, eax
0x8049fe1:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049fe5:   21 d0                           	and eax, edx
0x8049fe7:   83 f8 04                        	cmp eax, 4
0x8049fea:   0f 9e c0                        	setle al
0x8049fed:   0f b6 d0                        	movzx edx, al
0x8049ff0:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049ff4:   21 d0                           	and eax, edx
0x8049ff6:   89 c2                           	mov edx, eax
0x8049ff8:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x8049ffe:   09 d0                           	or eax, edx
0x804a000:   8d 0c 06                        	lea ecx, [esi + eax]
0x804a003:   89 d8                           	mov eax, ebx
0x804a005:   ba 00 00 00 00                  	mov edx, 0
0x804a00a:   66 f7 f1                        	div cx
0x804a00d:   89 d0                           	mov eax, edx
0x804a00f:   66 83 f8 06                     	cmp ax, 6
0x804a013:   0f 87 41 02 00 00               	ja 0x804a25a <func_1+0xaaf>
0x804a019:   c7 85 b8 fe ff ff 3c 42 0c b3   	mov dword ptr [ebp - 0x148], 0xb30c423c
0x804a023:   c7 85 b4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x14c], 0
0x804a02d:   c7 85 b0 fe ff ff a1 2b 33 c9   	mov dword ptr [ebp - 0x150], 0xc9332ba1
0x804a037:   c7 85 ac fe ff ff 57 29 0d 2e   	mov dword ptr [ebp - 0x154], 0x2e0d2957
0x804a041:   c7 85 a8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x158], 0xffffffff
0x804a04b:   0f b6 85 0b ff ff ff            	movzx eax, byte ptr [ebp - 0xf5]
0x804a052:   09 45 94                        	or dword ptr [ebp - 0x6c], eax
0x804a055:   8b 85 b4 fe ff ff               	mov eax, dword ptr [ebp - 0x14c]
0x804a05b:   0f b6 d0                        	movzx edx, al
0x804a05e:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a062:   0f b6 c0                        	movzx eax, al
0x804a065:   89 c1                           	mov ecx, eax
0x804a067:   d3 e2                           	shl edx, cl
0x804a069:   89 d0                           	mov eax, edx
0x804a06b:   85 c0                           	test eax, eax
0x804a06d:   75 0b                           	jne 0x804a07a <func_1+0x8cf>
0x804a06f:   8b 95 b0 fe ff ff               	mov edx, dword ptr [ebp - 0x150]
0x804a075:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a078:   39 c2                           	cmp edx, eax
0x804a07a:   0f b6 5d f1                     	movzx ebx, byte ptr [ebp - 0xf]
0x804a07e:   b8 01 00 00 00                  	mov eax, 1
0x804a083:   99                              	cdq 
0x804a084:   f7 fb                           	idiv ebx
0x804a086:   85 c0                           	test eax, eax
0x804a088:   74 0e                           	je 0x804a098 <func_1+0x8ed>
0x804a08a:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x804a08f:   74 07                           	je 0x804a098 <func_1+0x8ed>
0x804a091:   b8 01 00 00 00                  	mov eax, 1
0x804a096:   eb 05                           	jmp 0x804a09d <func_1+0x8f2>
0x804a098:   b8 00 00 00 00                  	mov eax, 0
0x804a09d:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a0a0:   c7 45 e0 e6 ff ff ff            	mov dword ptr [ebp - 0x20], 0xffffffe6
0x804a0a7:   e9 eb 00 00 00                  	jmp 0x804a197 <func_1+0x9ec>
0x804a0ac:   c7 85 a0 fe ff ff 96 9d 14 9d   	mov dword ptr [ebp - 0x160], 0x9d149d96
0x804a0b6:   c7 85 9c fe ff ff 99 1d 31 4d   	mov dword ptr [ebp - 0x164], 0x4d311d99
0x804a0c0:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x804a0c4:   75 11                           	jne 0x804a0d7 <func_1+0x92c>
0x804a0c6:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a0c9:   98                              	cwde 
0x804a0ca:   01 c0                           	add eax, eax
0x804a0cc:   f7 d0                           	not eax
0x804a0ce:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a0d1:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a0d5:   74 07                           	je 0x804a0de <func_1+0x933>
0x804a0d7:   b8 01 00 00 00                  	mov eax, 1
0x804a0dc:   eb 05                           	jmp 0x804a0e3 <func_1+0x938>
0x804a0de:   b8 00 00 00 00                  	mov eax, 0
0x804a0e3:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a0e6:   0f 92 c0                        	setb al
0x804a0e9:   0f b6 d0                        	movzx edx, al
0x804a0ec:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a0ef:   0f b7 c0                        	movzx eax, ax
0x804a0f2:   0f af c2                        	imul eax, edx
0x804a0f5:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a0f8:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a0fb:   8d 50 01                        	lea edx, [eax + 1]
0x804a0fe:   89 55 c8                        	mov dword ptr [ebp - 0x38], edx
0x804a101:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a104:   8b 85 b4 fe ff ff               	mov eax, dword ptr [ebp - 0x14c]
0x804a10a:   89 c2                           	mov edx, eax
0x804a10c:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a10f:   01 d0                           	add eax, edx
0x804a111:   0f b6 d0                        	movzx edx, al
0x804a114:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a11a:   0f b6 c0                        	movzx eax, al
0x804a11d:   89 c1                           	mov ecx, eax
0x804a11f:   d3 fa                           	sar edx, cl
0x804a121:   89 d0                           	mov eax, edx
0x804a123:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a126:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a12a:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a12d:   0f 95 c0                        	setne al
0x804a130:   0f b6 d0                        	movzx edx, al
0x804a133:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a137:   39 c2                           	cmp edx, eax
0x804a139:   7c 07                           	jl 0x804a142 <func_1+0x997>
0x804a13b:   ba 02 00 00 00                  	mov edx, 2
0x804a140:   eb 05                           	jmp 0x804a147 <func_1+0x99c>
0x804a142:   ba 01 00 00 00                  	mov edx, 1
0x804a147:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a14a:   98                              	cwde 
0x804a14b:   89 c1                           	mov ecx, eax
0x804a14d:   d3 fa                           	sar edx, cl
0x804a14f:   89 d0                           	mov eax, edx
0x804a151:   3d 10 ab 00 00                  	cmp eax, 0xab10
0x804a156:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a159:   0f be c0                        	movsx eax, al
0x804a15c:   f7 d8                           	neg eax
0x804a15e:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a161:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a164:   89 85 9c fe ff ff               	mov dword ptr [ebp - 0x164], eax
0x804a16a:   81 4d e8 91 50 1d 44            	or dword ptr [ebp - 0x18], 0x441d5091
0x804a171:   8b 85 f0 fe ff ff               	mov eax, dword ptr [ebp - 0x110]
0x804a177:   0f b7 d0                        	movzx edx, ax
0x804a17a:   66 0f be 45 ce                  	movsx ax, byte ptr [ebp - 0x32]
0x804a17f:   0f b7 c0                        	movzx eax, ax
0x804a182:   01 d0                           	add eax, edx
0x804a184:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x804a187:   0f 96 c0                        	setbe al
0x804a18a:   0f b6 c0                        	movzx eax, al
0x804a18d:   89 85 58 ff ff ff               	mov dword ptr [ebp - 0xa8], eax
0x804a193:   83 45 e0 02                     	add dword ptr [ebp - 0x20], 2
0x804a197:   83 7d e0 32                     	cmp dword ptr [ebp - 0x20], 0x32
0x804a19b:   0f 85 0b ff ff ff               	jne 0x804a0ac <func_1+0x901>
0x804a1a1:   c6 85 a7 fe ff ff 45            	mov byte ptr [ebp - 0x159], 0x45
0x804a1a8:   83 45 c0 01                     	add dword ptr [ebp - 0x40], 1
0x804a1ac:   0f b6 45 b2                     	movzx eax, byte ptr [ebp - 0x4e]
0x804a1b0:   0f be 9d 71 ff ff ff            	movsx ebx, byte ptr [ebp - 0x8f]
0x804a1b7:   0f bf bd 72 ff ff ff            	movsx edi, word ptr [ebp - 0x8e]
0x804a1be:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a1c4:   0f b6 75 b3                     	movzx esi, byte ptr [ebp - 0x4d]
0x804a1c8:   89 b5 7c fe ff ff               	mov dword ptr [ebp - 0x184], esi
0x804a1ce:   0f be 4d ce                     	movsx ecx, byte ptr [ebp - 0x32]
0x804a1d2:   89 8d 78 fe ff ff               	mov dword ptr [ebp - 0x188], ecx
0x804a1d8:   0f b6 7d cf                     	movzx edi, byte ptr [ebp - 0x31]
0x804a1dc:   0f b7 75 f2                     	movzx esi, word ptr [ebp - 0xe]
0x804a1e0:   0f b6 4d f1                     	movzx ecx, byte ptr [ebp - 0xf]
0x804a1e4:   0f b7 55 e6                     	movzx edx, word ptr [ebp - 0x1a]
0x804a1e8:   50                              	push eax
0x804a1e9:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a1ef:   53                              	push ebx
0x804a1f0:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a1f6:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a1fc:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a202:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a205:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a208:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a20b:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a211:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a214:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a217:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a21d:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a220:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a226:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a229:   57                              	push edi
0x804a22a:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a22d:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a230:   56                              	push esi
0x804a231:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a234:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a237:   51                              	push ecx
0x804a238:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a23b:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a23e:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a241:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a244:   52                              	push edx
0x804a245:   e8 dc f3 ff ff                  	call 0x8049626 <set_var>
0x804a24a:   83 c4 70                        	add esp, 0x70
0x804a24d:   66 0f be 85 a7 fe ff ff         	movsx ax, byte ptr [ebp - 0x159]
0x804a255:   e9 23 06 00 00                  	jmp 0x804a87d <func_1+0x10d2>
0x804a25a:   c7 85 e8 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x118], 1
0x804a264:   c7 85 e4 fe ff ff ca 11 16 91   	mov dword ptr [ebp - 0x11c], 0x911611ca
0x804a26e:   c6 85 e3 fe ff ff 15            	mov byte ptr [ebp - 0x11d], 0x15
0x804a275:   c7 85 dc fe ff ff ee 9e 89 c7   	mov dword ptr [ebp - 0x124], 0xc7899eee
0x804a27f:   83 bd e8 fe ff ff 00            	cmp dword ptr [ebp - 0x118], 0
0x804a286:   0f 84 e4 00 00 00               	je 0x804a370 <func_1+0xbc5>
0x804a28c:   c7 85 c0 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x140], 0xffffffff
0x804a296:   66 c7 85 be fe ff ff d2 58      	mov word ptr [ebp - 0x142], 0x58d2
0x804a29f:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a2a5:   89 85 e4 fe ff ff               	mov dword ptr [ebp - 0x11c], eax
0x804a2ab:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a2ae:   83 c8 59                        	or eax, 0x59
0x804a2b1:   0f be d0                        	movsx edx, al
0x804a2b4:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a2ba:   0f be c0                        	movsx eax, al
0x804a2bd:   89 c1                           	mov ecx, eax
0x804a2bf:   d3 fa                           	sar edx, cl
0x804a2c1:   0f be 85 e3 fe ff ff            	movsx eax, byte ptr [ebp - 0x11d]
0x804a2c8:   39 c2                           	cmp edx, eax
0x804a2ca:   0f 9c c0                        	setl al
0x804a2cd:   0f b6 d0                        	movzx edx, al
0x804a2d0:   0f be 45 ce                     	movsx eax, byte ptr [ebp - 0x32]
0x804a2d4:   39 c2                           	cmp edx, eax
0x804a2d6:   74 71                           	je 0x804a349 <func_1+0xb9e>
0x804a2d8:   66 c7 85 bc fe ff ff f2 f8      	mov word ptr [ebp - 0x144], 0xf8f2
0x804a2e1:   0f b6 45 a3                     	movzx eax, byte ptr [ebp - 0x5d]
0x804a2e5:   83 e8 01                        	sub eax, 1
0x804a2e8:   88 45 a3                        	mov byte ptr [ebp - 0x5d], al
0x804a2eb:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a2ef:   74 07                           	je 0x804a2f8 <func_1+0xb4d>
0x804a2f1:   b8 01 00 00 00                  	mov eax, 1
0x804a2f6:   eb 05                           	jmp 0x804a2fd <func_1+0xb52>
0x804a2f8:   b8 00 00 00 00                  	mov eax, 0
0x804a2fd:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a300:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a303:   0f bf d0                        	movsx edx, ax
0x804a306:   81 65 b8 b1 c9 00 00            	and dword ptr [ebp - 0x48], 0xc9b1
0x804a30d:   0f b6 45 f1                     	movzx eax, byte ptr [ebp - 0xf]
0x804a311:   0d f7 7a 97 65                  	or eax, 0x65977af7
0x804a316:   83 e0 06                        	and eax, 6
0x804a319:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x804a31c:   0f 97 c0                        	seta al
0x804a31f:   0f b6 c0                        	movzx eax, al
0x804a322:   89 c1                           	mov ecx, eax
0x804a324:   d3 e2                           	shl edx, cl
0x804a326:   89 d0                           	mov eax, edx
0x804a328:   0f b6 d0                        	movzx edx, al
0x804a32b:   8b 85 dc fe ff ff               	mov eax, dword ptr [ebp - 0x124]
0x804a331:   0f b6 c0                        	movzx eax, al
0x804a334:   0f af c2                        	imul eax, edx
0x804a337:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804a33a:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a33d:   31 45 94                        	xor dword ptr [ebp - 0x6c], eax
0x804a340:   83 6d b4 01                     	sub dword ptr [ebp - 0x4c], 1
0x804a344:   e9 d0 03 00 00                  	jmp 0x804a719 <func_1+0xf6e>
0x804a349:   c6 85 93 fe ff ff 01            	mov byte ptr [ebp - 0x16d], 1
0x804a350:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a353:   88 85 93 fe ff ff               	mov byte ptr [ebp - 0x16d], al
0x804a359:   66 83 ad be fe ff ff 01         	sub word ptr [ebp - 0x142], 1
0x804a361:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x804a365:   0f 84 ae 03 00 00               	je 0x804a719 <func_1+0xf6e>
0x804a36b:   e9 bf 03 00 00                  	jmp 0x804a72f <func_1+0xf84>
0x804a370:   c7 85 d8 fe ff ff e7 2e ee da   	mov dword ptr [ebp - 0x128], 0xdaee2ee7
0x804a37a:   c7 85 d4 fe ff ff c6 58 0c e7   	mov dword ptr [ebp - 0x12c], 0xe70c58c6
0x804a384:   c7 85 d0 fe ff ff 88 6f 9b f9   	mov dword ptr [ebp - 0x130], 0xf99b6f88
0x804a38e:   c7 45 a4 ea ff ff ff            	mov dword ptr [ebp - 0x5c], 0xffffffea
0x804a395:   83 7d a4 09                     	cmp dword ptr [ebp - 0x5c], 9
0x804a399:   0f 8f e7 00 00 00               	jg 0x804a486 <func_1+0xcdb>
0x804a39f:   66 c7 85 c6 fe ff ff 3a 2b      	mov word ptr [ebp - 0x13a], 0x2b3a
0x804a3a8:   0f be 45 ce                     	movsx eax, byte ptr [ebp - 0x32]
0x804a3ac:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804a3af:   83 7d 80 00                     	cmp dword ptr [ebp - 0x80], 0
0x804a3b3:   0f 95 c0                        	setne al
0x804a3b6:   0f b6 c0                        	movzx eax, al
0x804a3b9:   f7 d0                           	not eax
0x804a3bb:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804a3be:   72 04                           	jb 0x804a3c4 <func_1+0xc19>
0x804a3c0:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x804a3c4:   81 7d d8 39 b9 a2 ad            	cmp dword ptr [ebp - 0x28], 0xada2b939
0x804a3cb:   0f 96 c0                        	setbe al
0x804a3ce:   0f b6 c0                        	movzx eax, al
0x804a3d1:   09 45 c4                        	or dword ptr [ebp - 0x3c], eax
0x804a3d4:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a3d7:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a3da:   0f b6 45 b2                     	movzx eax, byte ptr [ebp - 0x4e]
0x804a3de:   0f be 9d 71 ff ff ff            	movsx ebx, byte ptr [ebp - 0x8f]
0x804a3e5:   0f bf bd 72 ff ff ff            	movsx edi, word ptr [ebp - 0x8e]
0x804a3ec:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a3f2:   0f b6 75 b3                     	movzx esi, byte ptr [ebp - 0x4d]
0x804a3f6:   89 b5 7c fe ff ff               	mov dword ptr [ebp - 0x184], esi
0x804a3fc:   0f be 4d ce                     	movsx ecx, byte ptr [ebp - 0x32]
0x804a400:   89 8d 78 fe ff ff               	mov dword ptr [ebp - 0x188], ecx
0x804a406:   0f b6 7d cf                     	movzx edi, byte ptr [ebp - 0x31]
0x804a40a:   0f b7 75 f2                     	movzx esi, word ptr [ebp - 0xe]
0x804a40e:   0f b6 4d f1                     	movzx ecx, byte ptr [ebp - 0xf]
0x804a412:   0f b7 55 e6                     	movzx edx, word ptr [ebp - 0x1a]
0x804a416:   50                              	push eax
0x804a417:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a41d:   53                              	push ebx
0x804a41e:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a424:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a42a:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a430:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a433:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a436:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a439:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a43f:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a442:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a445:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a44b:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a44e:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a454:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a457:   57                              	push edi
0x804a458:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a45b:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a45e:   56                              	push esi
0x804a45f:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a462:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a465:   51                              	push ecx
0x804a466:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a469:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a46c:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a46f:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a472:   52                              	push edx
0x804a473:   e8 ae f1 ff ff                  	call 0x8049626 <set_var>
0x804a478:   83 c4 70                        	add esp, 0x70
0x804a47b:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x804a481:   e9 f7 03 00 00                  	jmp 0x804a87d <func_1+0x10d2>
0x804a486:   66 83 7d 8e 00                  	cmp word ptr [ebp - 0x72], 0
0x804a48b:   0f 84 bf 01 00 00               	je 0x804a650 <func_1+0xea5>
0x804a491:   c7 85 cc fe ff ff 64 19 4f 41   	mov dword ptr [ebp - 0x134], 0x414f1964
0x804a49b:   c7 85 c8 fe ff ff 7f 60 68 90   	mov dword ptr [ebp - 0x138], 0x9068607f
0x804a4a5:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a4a8:   88 45 ce                        	mov byte ptr [ebp - 0x32], al
0x804a4ab:   0f b6 45 ce                     	movzx eax, byte ptr [ebp - 0x32]
0x804a4af:   f7 d0                           	not eax
0x804a4b1:   c0 e8 07                        	shr al, 7
0x804a4b4:   0f b6 c0                        	movzx eax, al
0x804a4b7:   0f be d0                        	movsx edx, al
0x804a4ba:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x804a4c0:   0f be c0                        	movsx eax, al
0x804a4c3:   89 c1                           	mov ecx, eax
0x804a4c5:   d3 fa                           	sar edx, cl
0x804a4c7:   89 d0                           	mov eax, edx
0x804a4c9:   85 c0                           	test eax, eax
0x804a4cb:   74 11                           	je 0x804a4de <func_1+0xd33>
0x804a4cd:   66 83 bd 6a ff ff ff 00         	cmp word ptr [ebp - 0x96], 0
0x804a4d5:   74 07                           	je 0x804a4de <func_1+0xd33>
0x804a4d7:   b8 01 00 00 00                  	mov eax, 1
0x804a4dc:   eb 05                           	jmp 0x804a4e3 <func_1+0xd38>
0x804a4de:   b8 00 00 00 00                  	mov eax, 0
0x804a4e3:   0f be d0                        	movsx edx, al
0x804a4e6:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x804a4ec:   0f be c0                        	movsx eax, al
0x804a4ef:   0f af c2                        	imul eax, edx
0x804a4f2:   ba 00 00 00 00                  	mov edx, 0
0x804a4f7:   f7 b5 7c ff ff ff               	div dword ptr [ebp - 0x84]
0x804a4fd:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x804a503:   66 83 45 f2 01                  	add word ptr [ebp - 0xe], 1
0x804a508:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x804a50d:   74 0d                           	je 0x804a51c <func_1+0xd71>
0x804a50f:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a515:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804a518:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x804a51c:   0f b6 55 f1                     	movzx edx, byte ptr [ebp - 0xf]
0x804a520:   8d 42 ff                        	lea eax, [edx - 1]
0x804a523:   88 45 f1                        	mov byte ptr [ebp - 0xf], al
0x804a526:   b8 07 00 00 00                  	mov eax, 7
0x804a52b:   0f b6 c0                        	movzx eax, al
0x804a52e:   f6 f2                           	div dl
0x804a530:   0f b6 c4                        	movzx eax, ah
0x804a533:   0f be c8                        	movsx ecx, al
0x804a536:   ba 67 66 66 66                  	mov edx, 0x66666667
0x804a53b:   89 c8                           	mov eax, ecx
0x804a53d:   f7 ea                           	imul edx
0x804a53f:   d1 fa                           	sar edx, 1
0x804a541:   89 c8                           	mov eax, ecx
0x804a543:   c1 f8 1f                        	sar eax, 0x1f
0x804a546:   29 c2                           	sub edx, eax
0x804a548:   89 d0                           	mov eax, edx
0x804a54a:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a54d:   8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x804a550:   89 d0                           	mov eax, edx
0x804a552:   c1 e0 02                        	shl eax, 2
0x804a555:   01 d0                           	add eax, edx
0x804a557:   29 c1                           	sub ecx, eax
0x804a559:   89 c8                           	mov eax, ecx
0x804a55b:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a55e:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a561:   89 c1                           	mov ecx, eax
0x804a563:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a566:   89 c2                           	mov edx, eax
0x804a568:   0f b6 c1                        	movzx eax, cl
0x804a56b:   f6 f2                           	div dl
0x804a56d:   0f b6 c4                        	movzx eax, ah
0x804a570:   0f b6 d0                        	movzx edx, al
0x804a573:   0f b7 4d f2                     	movzx ecx, word ptr [ebp - 0xe]
0x804a577:   8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x804a57d:   39 85 e8 fe ff ff               	cmp dword ptr [ebp - 0x118], eax
0x804a583:   0f 97 c0                        	seta al
0x804a586:   0f b6 c0                        	movzx eax, al
0x804a589:   39 85 78 ff ff ff               	cmp dword ptr [ebp - 0x88], eax
0x804a58f:   0f 9d c0                        	setge al
0x804a592:   0f b6 c0                        	movzx eax, al
0x804a595:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a598:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a59b:   0f b7 d8                        	movzx ebx, ax
0x804a59e:   8b 85 c8 fe ff ff               	mov eax, dword ptr [ebp - 0x138]
0x804a5a4:   0f b7 c0                        	movzx eax, ax
0x804a5a7:   0f af c3                        	imul eax, ebx
0x804a5aa:   39 45 a8                        	cmp dword ptr [ebp - 0x58], eax
0x804a5ad:   0f 9c c0                        	setl al
0x804a5b0:   0f b6 c0                        	movzx eax, al
0x804a5b3:   39 c1                           	cmp ecx, eax
0x804a5b5:   0f 95 c0                        	setne al
0x804a5b8:   0f b6 c0                        	movzx eax, al
0x804a5bb:   23 85 60 ff ff ff               	and eax, dword ptr [ebp - 0xa0]
0x804a5c1:   31 d0                           	xor eax, edx
0x804a5c3:   09 45 c4                        	or dword ptr [ebp - 0x3c], eax
0x804a5c6:   0f b6 45 f1                     	movzx eax, byte ptr [ebp - 0xf]
0x804a5ca:   c1 f8 08                        	sar eax, 8
0x804a5cd:   89 c1                           	mov ecx, eax
0x804a5cf:   83 bd cc fe ff ff 00            	cmp dword ptr [ebp - 0x134], 0
0x804a5d6:   75 15                           	jne 0x804a5ed <func_1+0xe42>
0x804a5d8:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a5db:   0f be d8                        	movsx ebx, al
0x804a5de:   b8 01 00 00 00                  	mov eax, 1
0x804a5e3:   99                              	cdq 
0x804a5e4:   f7 fb                           	idiv ebx
0x804a5e6:   0b 45 dc                        	or eax, dword ptr [ebp - 0x24]
0x804a5e9:   85 c0                           	test eax, eax
0x804a5eb:   75 07                           	jne 0x804a5f4 <func_1+0xe49>
0x804a5ed:   b8 01 00 00 00                  	mov eax, 1
0x804a5f2:   eb 05                           	jmp 0x804a5f9 <func_1+0xe4e>
0x804a5f4:   b8 00 00 00 00                  	mov eax, 0
0x804a5f9:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a5fc:   81 7d c0 62 d2 8c ae            	cmp dword ptr [ebp - 0x40], 0xae8cd262
0x804a603:   0f 95 c0                        	setne al
0x804a606:   0f b6 c0                        	movzx eax, al
0x804a609:   39 85 e4 fe ff ff               	cmp dword ptr [ebp - 0x11c], eax
0x804a60f:   0f b6 45 f1                     	movzx eax, byte ptr [ebp - 0xf]
0x804a613:   83 c8 01                        	or eax, 1
0x804a616:   0f b6 d0                        	movzx edx, al
0x804a619:   0f be 85 f6 fe ff ff            	movsx eax, byte ptr [ebp - 0x10a]
0x804a620:   39 c2                           	cmp edx, eax
0x804a622:   74 07                           	je 0x804a62b <func_1+0xe80>
0x804a624:   b8 01 00 00 00                  	mov eax, 1
0x804a629:   eb 05                           	jmp 0x804a630 <func_1+0xe85>
0x804a62b:   b8 00 00 00 00                  	mov eax, 0
0x804a630:   38 c1                           	cmp cl, al
0x804a632:   74 07                           	je 0x804a63b <func_1+0xe90>
0x804a634:   83 bd 7c ff ff ff 00            	cmp dword ptr [ebp - 0x84], 0
0x804a63b:   0f be 85 e3 fe ff ff            	movsx eax, byte ptr [ebp - 0x11d]
0x804a642:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a645:   66 c7 45 8e 00 00               	mov word ptr [ebp - 0x72], 0
0x804a64b:   e9 bb 00 00 00                  	jmp 0x804a70b <func_1+0xf60>
0x804a650:   0f b6 45 b2                     	movzx eax, byte ptr [ebp - 0x4e]
0x804a654:   0f be 9d 71 ff ff ff            	movsx ebx, byte ptr [ebp - 0x8f]
0x804a65b:   0f bf bd 72 ff ff ff            	movsx edi, word ptr [ebp - 0x8e]
0x804a662:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a668:   0f b6 75 b3                     	movzx esi, byte ptr [ebp - 0x4d]
0x804a66c:   89 b5 7c fe ff ff               	mov dword ptr [ebp - 0x184], esi
0x804a672:   0f be 4d ce                     	movsx ecx, byte ptr [ebp - 0x32]
0x804a676:   89 8d 78 fe ff ff               	mov dword ptr [ebp - 0x188], ecx
0x804a67c:   0f b6 7d cf                     	movzx edi, byte ptr [ebp - 0x31]
0x804a680:   0f b7 75 f2                     	movzx esi, word ptr [ebp - 0xe]
0x804a684:   0f b6 4d f1                     	movzx ecx, byte ptr [ebp - 0xf]
0x804a688:   0f b7 55 e6                     	movzx edx, word ptr [ebp - 0x1a]
0x804a68c:   50                              	push eax
0x804a68d:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a693:   53                              	push ebx
0x804a694:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a69a:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a6a0:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a6a6:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a6a9:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a6ac:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a6af:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a6b5:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a6b8:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a6bb:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a6c1:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a6c4:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a6ca:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a6cd:   57                              	push edi
0x804a6ce:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a6d1:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a6d4:   56                              	push esi
0x804a6d5:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a6d8:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a6db:   51                              	push ecx
0x804a6dc:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a6df:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a6e2:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a6e5:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a6e8:   52                              	push edx
0x804a6e9:   e8 38 ef ff ff                  	call 0x8049626 <set_var>
0x804a6ee:   83 c4 70                        	add esp, 0x70
0x804a6f1:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x804a6f7:   e9 81 01 00 00                  	jmp 0x804a87d <func_1+0x10d2>
0x804a6fc:   80 45 b3 01                     	add byte ptr [ebp - 0x4d], 1
0x804a700:   0f b7 45 8e                     	movzx eax, word ptr [ebp - 0x72]
0x804a704:   83 c0 02                        	add eax, 2
0x804a707:   66 89 45 8e                     	mov word ptr [ebp - 0x72], ax
0x804a70b:   66 83 7d 8e 00                  	cmp word ptr [ebp - 0x72], 0
0x804a710:   7e ea                           	jle 0x804a6fc <func_1+0xf51>
0x804a712:   c7 45 d0 00 00 00 00            	mov dword ptr [ebp - 0x30], 0
0x804a719:   83 bd 04 ff ff ff 00            	cmp dword ptr [ebp - 0xfc], 0
0x804a720:   75 0c                           	jne 0x804a72e <func_1+0xf83>
0x804a722:   83 7d 88 00                     	cmp dword ptr [ebp - 0x78], 0
0x804a726:   75 17                           	jne 0x804a73f <func_1+0xf94>
0x804a728:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x804a72c:   eb 01                           	jmp 0x804a72f <func_1+0xf84>
0x804a72e:   90                              	nop 
0x804a72f:   83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x804a733:   83 7d ec 2d                     	cmp dword ptr [ebp - 0x14], 0x2d
0x804a737:   0f 85 b2 f6 ff ff               	jne 0x8049def <func_1+0x644>
0x804a73d:   eb 01                           	jmp 0x804a740 <func_1+0xf95>
0x804a73f:   90                              	nop 
0x804a740:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x804a747:   e9 80 00 00 00                  	jmp 0x804a7cc <func_1+0x1021>
0x804a74c:   c6 85 9b fe ff ff ff            	mov byte ptr [ebp - 0x165], 0xff
0x804a753:   c7 85 94 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x16c], 0xffffffff
0x804a75d:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a760:   88 85 9b fe ff ff               	mov byte ptr [ebp - 0x165], al
0x804a766:   c7 45 d0 01 00 00 00            	mov dword ptr [ebp - 0x30], 1
0x804a76d:   c7 85 94 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x16c], 0
0x804a777:   8b 85 94 fe ff ff               	mov eax, dword ptr [ebp - 0x16c]
0x804a77d:   0f b7 d0                        	movzx edx, ax
0x804a780:   66 0f be 85 9b fe ff ff         	movsx ax, byte ptr [ebp - 0x165]
0x804a788:   0f b7 c0                        	movzx eax, ax
0x804a78b:   89 c1                           	mov ecx, eax
0x804a78d:   d3 e2                           	shl edx, cl
0x804a78f:   89 d0                           	mov eax, edx
0x804a791:   f7 d8                           	neg eax
0x804a793:   2b 45 ec                        	sub eax, dword ptr [ebp - 0x14]
0x804a796:   89 c2                           	mov edx, eax
0x804a798:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a79b:   21 d0                           	and eax, edx
0x804a79d:   85 c0                           	test eax, eax
0x804a79f:   83 bd f8 fe ff ff 00            	cmp dword ptr [ebp - 0x108], 0
0x804a7a6:   74 10                           	je 0x804a7b8 <func_1+0x100d>
0x804a7a8:   83 bd 14 ff ff ff 00            	cmp dword ptr [ebp - 0xec], 0
0x804a7af:   74 07                           	je 0x804a7b8 <func_1+0x100d>
0x804a7b1:   b8 01 00 00 00                  	mov eax, 1
0x804a7b6:   eb 05                           	jmp 0x804a7bd <func_1+0x1012>
0x804a7b8:   b8 00 00 00 00                  	mov eax, 0
0x804a7bd:   98                              	cwde 
0x804a7be:   c1 e0 0d                        	shl eax, 0xd
0x804a7c1:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a7c4:   80 45 b2 01                     	add byte ptr [ebp - 0x4e], 1
0x804a7c8:   83 6d 90 01                     	sub dword ptr [ebp - 0x70], 1
0x804a7cc:   83 7d 90 e3                     	cmp dword ptr [ebp - 0x70], -0x1d
0x804a7d0:   0f 8d 76 ff ff ff               	jge 0x804a74c <func_1+0xfa1>
0x804a7d6:   0f b6 45 b2                     	movzx eax, byte ptr [ebp - 0x4e]
0x804a7da:   0f be 9d 71 ff ff ff            	movsx ebx, byte ptr [ebp - 0x8f]
0x804a7e1:   0f bf bd 72 ff ff ff            	movsx edi, word ptr [ebp - 0x8e]
0x804a7e8:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a7ee:   0f b6 75 b3                     	movzx esi, byte ptr [ebp - 0x4d]
0x804a7f2:   89 b5 7c fe ff ff               	mov dword ptr [ebp - 0x184], esi
0x804a7f8:   0f be 4d ce                     	movsx ecx, byte ptr [ebp - 0x32]
0x804a7fc:   89 8d 78 fe ff ff               	mov dword ptr [ebp - 0x188], ecx
0x804a802:   0f b6 7d cf                     	movzx edi, byte ptr [ebp - 0x31]
0x804a806:   0f b7 75 f2                     	movzx esi, word ptr [ebp - 0xe]
0x804a80a:   0f b6 4d f1                     	movzx ecx, byte ptr [ebp - 0xf]
0x804a80e:   0f b7 55 e6                     	movzx edx, word ptr [ebp - 0x1a]
0x804a812:   50                              	push eax
0x804a813:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a819:   53                              	push ebx
0x804a81a:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a820:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a826:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a82c:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a82f:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a832:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a835:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a83b:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a83e:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a841:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a847:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a84a:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a850:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a853:   57                              	push edi
0x804a854:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a857:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a85a:   56                              	push esi
0x804a85b:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a85e:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a861:   51                              	push ecx
0x804a862:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a865:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a868:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a86b:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a86e:   52                              	push edx
0x804a86f:   e8 b2 ed ff ff                  	call 0x8049626 <set_var>
0x804a874:   83 c4 70                        	add esp, 0x70
0x804a877:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a87d:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a880:   5b                              	pop ebx
0x804a881:   5e                              	pop esi
0x804a882:   5f                              	pop edi
0x804a883:   5d                              	pop ebp
0x804a884:   c3                              	ret 
; function: main at 0x804a885 -- 0x804ac51
0x804a885:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a889:   83 e4 f0                        	and esp, 0xfffffff0
0x804a88c:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a88f:   55                              	push ebp
0x804a890:   89 e5                           	mov ebp, esp
0x804a892:   53                              	push ebx
0x804a893:   51                              	push ecx
0x804a894:   83 ec 10                        	sub esp, 0x10
0x804a897:   e8 f4 da ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a89c:   81 c3 64 27 00 00               	add ebx, 0x2764
0x804a8a2:   89 c8                           	mov eax, ecx
0x804a8a4:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a8ab:   83 38 02                        	cmp dword ptr [eax], 2
0x804a8ae:   75 26                           	jne 0x804a8d6 <main+0x51>
0x804a8b0:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a8b3:   83 c0 04                        	add eax, 4
0x804a8b6:   8b 00                           	mov eax, dword ptr [eax]
0x804a8b8:   83 ec 08                        	sub esp, 8
0x804a8bb:   8d 93 38 dd ff ff               	lea edx, [ebx - 0x22c8]
0x804a8c1:   52                              	push edx
0x804a8c2:   50                              	push eax
0x804a8c3:   e8 38 da ff ff                  	call 0x8048300 <strcmp>
0x804a8c8:   83 c4 10                        	add esp, 0x10
0x804a8cb:   85 c0                           	test eax, eax
0x804a8cd:   75 07                           	jne 0x804a8d6 <main+0x51>
0x804a8cf:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a8d6:   e8 7b db ff ff                  	call 0x8048456 <platform_main_begin>
0x804a8db:   e8 8b eb ff ff                  	call 0x804946b <crc32_gentab>
0x804a8e0:   e8 c6 ee ff ff                  	call 0x80497ab <func_1>
0x804a8e5:   0f b7 83 24 00 00 00            	movzx eax, word ptr [ebx + 0x24]
0x804a8ec:   0f b7 c0                        	movzx eax, ax
0x804a8ef:   83 ec 04                        	sub esp, 4
0x804a8f2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8f5:   8d 93 3a dd ff ff               	lea edx, [ebx - 0x22c6]
0x804a8fb:   52                              	push edx
0x804a8fc:   50                              	push eax
0x804a8fd:   e8 75 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a902:   83 c4 10                        	add esp, 0x10
0x804a905:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a90b:   83 ec 04                        	sub esp, 4
0x804a90e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a911:   8d 93 3e dd ff ff               	lea edx, [ebx - 0x22c2]
0x804a917:   52                              	push edx
0x804a918:   50                              	push eax
0x804a919:   e8 59 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a91e:   83 c4 10                        	add esp, 0x10
0x804a921:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a927:   83 ec 04                        	sub esp, 4
0x804a92a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a92d:   8d 93 42 dd ff ff               	lea edx, [ebx - 0x22be]
0x804a933:   52                              	push edx
0x804a934:   50                              	push eax
0x804a935:   e8 3d ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a93a:   83 c4 10                        	add esp, 0x10
0x804a93d:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804a943:   89 c2                           	mov edx, eax
0x804a945:   83 ec 04                        	sub esp, 4
0x804a948:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a94b:   8d 83 47 dd ff ff               	lea eax, [ebx - 0x22b9]
0x804a951:   50                              	push eax
0x804a952:   52                              	push edx
0x804a953:   e8 1f ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a958:   83 c4 10                        	add esp, 0x10
0x804a95b:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a961:   83 ec 04                        	sub esp, 4
0x804a964:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a967:   8d 93 4c dd ff ff               	lea edx, [ebx - 0x22b4]
0x804a96d:   52                              	push edx
0x804a96e:   50                              	push eax
0x804a96f:   e8 03 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a974:   83 c4 10                        	add esp, 0x10
0x804a977:   0f b6 83 c4 04 00 00            	movzx eax, byte ptr [ebx + 0x4c4]
0x804a97e:   0f b6 c0                        	movzx eax, al
0x804a981:   83 ec 04                        	sub esp, 4
0x804a984:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a987:   8d 93 51 dd ff ff               	lea edx, [ebx - 0x22af]
0x804a98d:   52                              	push edx
0x804a98e:   50                              	push eax
0x804a98f:   e8 e3 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a994:   83 c4 10                        	add esp, 0x10
0x804a997:   8b 83 c8 04 00 00               	mov eax, dword ptr [ebx + 0x4c8]
0x804a99d:   83 ec 04                        	sub esp, 4
0x804a9a0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9a3:   8d 93 56 dd ff ff               	lea edx, [ebx - 0x22aa]
0x804a9a9:   52                              	push edx
0x804a9aa:   50                              	push eax
0x804a9ab:   e8 c7 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9b0:   83 c4 10                        	add esp, 0x10
0x804a9b3:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804a9b9:   89 c2                           	mov edx, eax
0x804a9bb:   83 ec 04                        	sub esp, 4
0x804a9be:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9c1:   8d 83 5b dd ff ff               	lea eax, [ebx - 0x22a5]
0x804a9c7:   50                              	push eax
0x804a9c8:   52                              	push edx
0x804a9c9:   e8 a9 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9ce:   83 c4 10                        	add esp, 0x10
0x804a9d1:   0f b7 83 3c 00 00 00            	movzx eax, word ptr [ebx + 0x3c]
0x804a9d8:   0f b7 c0                        	movzx eax, ax
0x804a9db:   83 ec 04                        	sub esp, 4
0x804a9de:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9e1:   8d 93 60 dd ff ff               	lea edx, [ebx - 0x22a0]
0x804a9e7:   52                              	push edx
0x804a9e8:   50                              	push eax
0x804a9e9:   e8 89 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9ee:   83 c4 10                        	add esp, 0x10
0x804a9f1:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804a9f7:   89 c2                           	mov edx, eax
0x804a9f9:   83 ec 04                        	sub esp, 4
0x804a9fc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9ff:   8d 83 66 dd ff ff               	lea eax, [ebx - 0x229a]
0x804aa05:   50                              	push eax
0x804aa06:   52                              	push edx
0x804aa07:   e8 6b eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa0c:   83 c4 10                        	add esp, 0x10
0x804aa0f:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804aa15:   89 c2                           	mov edx, eax
0x804aa17:   83 ec 04                        	sub esp, 4
0x804aa1a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa1d:   8d 83 6c dd ff ff               	lea eax, [ebx - 0x2294]
0x804aa23:   50                              	push eax
0x804aa24:   52                              	push edx
0x804aa25:   e8 4d eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa2a:   83 c4 10                        	add esp, 0x10
0x804aa2d:   0f b6 83 48 00 00 00            	movzx eax, byte ptr [ebx + 0x48]
0x804aa34:   0f b6 c0                        	movzx eax, al
0x804aa37:   83 ec 04                        	sub esp, 4
0x804aa3a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa3d:   8d 93 72 dd ff ff               	lea edx, [ebx - 0x228e]
0x804aa43:   52                              	push edx
0x804aa44:   50                              	push eax
0x804aa45:   e8 2d eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa4a:   83 c4 10                        	add esp, 0x10
0x804aa4d:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804aa53:   89 c2                           	mov edx, eax
0x804aa55:   83 ec 04                        	sub esp, 4
0x804aa58:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa5b:   8d 83 78 dd ff ff               	lea eax, [ebx - 0x2288]
0x804aa61:   50                              	push eax
0x804aa62:   52                              	push edx
0x804aa63:   e8 0f eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa68:   83 c4 10                        	add esp, 0x10
0x804aa6b:   0f b6 83 50 00 00 00            	movzx eax, byte ptr [ebx + 0x50]
0x804aa72:   0f be c0                        	movsx eax, al
0x804aa75:   83 ec 04                        	sub esp, 4
0x804aa78:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa7b:   8d 93 7e dd ff ff               	lea edx, [ebx - 0x2282]
0x804aa81:   52                              	push edx
0x804aa82:   50                              	push eax
0x804aa83:   e8 ef ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa88:   83 c4 10                        	add esp, 0x10
0x804aa8b:   8b 83 cc 04 00 00               	mov eax, dword ptr [ebx + 0x4cc]
0x804aa91:   83 ec 04                        	sub esp, 4
0x804aa94:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa97:   8d 93 84 dd ff ff               	lea edx, [ebx - 0x227c]
0x804aa9d:   52                              	push edx
0x804aa9e:   50                              	push eax
0x804aa9f:   e8 d3 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaa4:   83 c4 10                        	add esp, 0x10
0x804aaa7:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804aaad:   83 ec 04                        	sub esp, 4
0x804aab0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aab3:   8d 93 8a dd ff ff               	lea edx, [ebx - 0x2276]
0x804aab9:   52                              	push edx
0x804aaba:   50                              	push eax
0x804aabb:   e8 b7 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aac0:   83 c4 10                        	add esp, 0x10
0x804aac3:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804aac9:   89 c2                           	mov edx, eax
0x804aacb:   83 ec 04                        	sub esp, 4
0x804aace:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aad1:   8d 83 90 dd ff ff               	lea eax, [ebx - 0x2270]
0x804aad7:   50                              	push eax
0x804aad8:   52                              	push edx
0x804aad9:   e8 99 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aade:   83 c4 10                        	add esp, 0x10
0x804aae1:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804aae7:   83 ec 04                        	sub esp, 4
0x804aaea:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaed:   8d 93 96 dd ff ff               	lea edx, [ebx - 0x226a]
0x804aaf3:   52                              	push edx
0x804aaf4:   50                              	push eax
0x804aaf5:   e8 7d ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aafa:   83 c4 10                        	add esp, 0x10
0x804aafd:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804ab03:   89 c2                           	mov edx, eax
0x804ab05:   83 ec 04                        	sub esp, 4
0x804ab08:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab0b:   8d 83 9c dd ff ff               	lea eax, [ebx - 0x2264]
0x804ab11:   50                              	push eax
0x804ab12:   52                              	push edx
0x804ab13:   e8 5f ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab18:   83 c4 10                        	add esp, 0x10
0x804ab1b:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804ab21:   89 c2                           	mov edx, eax
0x804ab23:   83 ec 04                        	sub esp, 4
0x804ab26:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab29:   8d 83 a2 dd ff ff               	lea eax, [ebx - 0x225e]
0x804ab2f:   50                              	push eax
0x804ab30:   52                              	push edx
0x804ab31:   e8 41 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab36:   83 c4 10                        	add esp, 0x10
0x804ab39:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804ab3f:   83 ec 04                        	sub esp, 4
0x804ab42:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab45:   8d 93 a8 dd ff ff               	lea edx, [ebx - 0x2258]
0x804ab4b:   52                              	push edx
0x804ab4c:   50                              	push eax
0x804ab4d:   e8 25 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab52:   83 c4 10                        	add esp, 0x10
0x804ab55:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804ab5b:   83 ec 04                        	sub esp, 4
0x804ab5e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab61:   8d 93 ae dd ff ff               	lea edx, [ebx - 0x2252]
0x804ab67:   52                              	push edx
0x804ab68:   50                              	push eax
0x804ab69:   e8 09 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab6e:   83 c4 10                        	add esp, 0x10
0x804ab71:   0f b6 83 70 00 00 00            	movzx eax, byte ptr [ebx + 0x70]
0x804ab78:   0f b6 c0                        	movzx eax, al
0x804ab7b:   83 ec 04                        	sub esp, 4
0x804ab7e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab81:   8d 93 b4 dd ff ff               	lea edx, [ebx - 0x224c]
0x804ab87:   52                              	push edx
0x804ab88:   50                              	push eax
0x804ab89:   e8 e9 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab8e:   83 c4 10                        	add esp, 0x10
0x804ab91:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804ab97:   89 c2                           	mov edx, eax
0x804ab99:   83 ec 04                        	sub esp, 4
0x804ab9c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab9f:   8d 83 ba dd ff ff               	lea eax, [ebx - 0x2246]
0x804aba5:   50                              	push eax
0x804aba6:   52                              	push edx
0x804aba7:   e8 cb e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abac:   83 c4 10                        	add esp, 0x10
0x804abaf:   0f b7 83 78 00 00 00            	movzx eax, word ptr [ebx + 0x78]
0x804abb6:   98                              	cwde 
0x804abb7:   83 ec 04                        	sub esp, 4
0x804abba:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abbd:   8d 93 c0 dd ff ff               	lea edx, [ebx - 0x2240]
0x804abc3:   52                              	push edx
0x804abc4:   50                              	push eax
0x804abc5:   e8 ad e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abca:   83 c4 10                        	add esp, 0x10
0x804abcd:   0f b6 83 7a 00 00 00            	movzx eax, byte ptr [ebx + 0x7a]
0x804abd4:   0f be c0                        	movsx eax, al
0x804abd7:   83 ec 04                        	sub esp, 4
0x804abda:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abdd:   8d 93 c6 dd ff ff               	lea edx, [ebx - 0x223a]
0x804abe3:   52                              	push edx
0x804abe4:   50                              	push eax
0x804abe5:   e8 8d e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abea:   83 c4 10                        	add esp, 0x10
0x804abed:   8b 83 7c 00 00 00               	mov eax, dword ptr [ebx + 0x7c]
0x804abf3:   89 c2                           	mov edx, eax
0x804abf5:   83 ec 04                        	sub esp, 4
0x804abf8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abfb:   8d 83 cc dd ff ff               	lea eax, [ebx - 0x2234]
0x804ac01:   50                              	push eax
0x804ac02:   52                              	push edx
0x804ac03:   e8 6f e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac08:   83 c4 10                        	add esp, 0x10
0x804ac0b:   0f b6 83 80 00 00 00            	movzx eax, byte ptr [ebx + 0x80]
0x804ac12:   0f b6 c0                        	movzx eax, al
0x804ac15:   83 ec 04                        	sub esp, 4
0x804ac18:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac1b:   8d 93 d2 dd ff ff               	lea edx, [ebx - 0x222e]
0x804ac21:   52                              	push edx
0x804ac22:   50                              	push eax
0x804ac23:   e8 4f e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac28:   83 c4 10                        	add esp, 0x10
0x804ac2b:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ac31:   f7 d0                           	not eax
0x804ac33:   83 ec 08                        	sub esp, 8
0x804ac36:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac39:   50                              	push eax
0x804ac3a:   e8 27 d8 ff ff                  	call 0x8048466 <platform_main_end>
0x804ac3f:   83 c4 10                        	add esp, 0x10
0x804ac42:   b8 00 00 00 00                  	mov eax, 0
0x804ac47:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ac4a:   59                              	pop ecx
0x804ac4b:   5b                              	pop ebx
0x804ac4c:   5d                              	pop ebp
0x804ac4d:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ac50:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ac51 -- 0x804ac55
0x804ac51:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ac54:   c3                              	ret 
; data inside code section at 0x804ac55 -- 0x804ac60
0x804ac55:   66 90 66 90 66 90 66 90  66 90 90                  |f.f.f.f.f..     |
; function: __libc_csu_init at 0x804ac60 -- 0x804acbd
0x804ac60:   55                              	push ebp
0x804ac61:   57                              	push edi
0x804ac62:   56                              	push esi
0x804ac63:   53                              	push ebx
0x804ac64:   e8 27 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ac69:   81 c3 97 23 00 00               	add ebx, 0x2397
0x804ac6f:   83 ec 0c                        	sub esp, 0xc
0x804ac72:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ac76:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ac7c:   e8 4b d6 ff ff                  	call 0x80482cc <_init>
0x804ac81:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804ac87:   29 c6                           	sub esi, eax
0x804ac89:   c1 fe 02                        	sar esi, 2
0x804ac8c:   85 f6                           	test esi, esi
0x804ac8e:   74 25                           	je 0x804acb5 <__libc_csu_init+0x55>
0x804ac90:   31 ff                           	xor edi, edi
0x804ac92:   8d b6 00 00 00 00               	lea esi, [esi]
0x804ac98:   83 ec 04                        	sub esp, 4
0x804ac9b:   55                              	push ebp
0x804ac9c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804aca0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804aca4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804acab:   83 c7 01                        	add edi, 1
0x804acae:   83 c4 10                        	add esp, 0x10
0x804acb1:   39 fe                           	cmp esi, edi
0x804acb3:   75 e3                           	jne 0x804ac98 <__libc_csu_init+0x38>
0x804acb5:   83 c4 0c                        	add esp, 0xc
0x804acb8:   5b                              	pop ebx
0x804acb9:   5e                              	pop esi
0x804acba:   5f                              	pop edi
0x804acbb:   5d                              	pop ebp
0x804acbc:   c3                              	ret 
; data inside code section at 0x804acbd -- 0x804acc0
0x804acbd:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804acc0 -- 0x804acc2
0x804acc0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804acc4 -- 0x804acd8
0x804acc4:   53                              	push ebx
0x804acc5:   83 ec 08                        	sub esp, 8
0x804acc8:   e8 c3 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804accd:   81 c3 33 23 00 00               	add ebx, 0x2333
0x804acd3:   83 c4 08                        	add esp, 8
0x804acd6:   5b                              	pop ebx
0x804acd7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 dc ac 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804acd8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804ace8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804acf8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804ad08:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804ad18:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ad28:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ad38:   31 00 67 5f 36 00 67 5f  39 00 67 5f 31 30 00 67   |1.g_6.g_9.g_10.g|
0x804ad48:   5f 32 36 00 67 5f 35 37  00 67 5f 35 38 00 67 5f   |_26.g_57.g_58.g_|
0x804ad58:   37 34 00 67 5f 38 32 00  67 5f 31 30 32 00 67 5f   |74.g_82.g_102.g_|
0x804ad68:   31 30 35 00 67 5f 31 30  36 00 67 5f 31 30 37 00   |105.g_106.g_107.|
0x804ad78:   67 5f 31 32 37 00 67 5f  31 35 39 00 67 5f 31 38   |g_127.g_159.g_18|
0x804ad88:   31 00 67 5f 32 32 39 00  67 5f 32 33 36 00 67 5f   |1.g_229.g_236.g_|
0x804ad98:   32 33 37 00 67 5f 32 36  32 00 67 5f 32 37 31 00   |237.g_262.g_271.|
0x804ada8:   67 5f 32 37 32 00 67 5f  32 37 36 00 67 5f 33 34   |g_272.g_276.g_34|
0x804adb8:   38 00 67 5f 33 39 31 00  67 5f 33 39 32 00 67 5f   |8.g_391.g_392.g_|
0x804adc8:   33 39 33 00 67 5f 33 39  34 00 67 5f 33 39 36 00   |393.g_394.g_396.|
0x804add8:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804ade8:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804adf8:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804ae08:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804ae18:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804ae28:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804ae38:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804ae40:   01 1b 03 3b b0 02 00 00  55 00 00 00 b0 d4 ff ff   |...;....U.......|
0x804ae50:   e0 02 00 00 f0 d4 ff ff  04 03 00 00 40 d5 ff ff   |............@...|
0x804ae60:   cc 02 00 00 16 d6 ff ff  18 03 00 00 26 d6 ff ff   |............&...|
0x804ae70:   38 03 00 00 54 d6 ff ff  5c 03 00 00 72 d6 ff ff   |8...T...\...r...|
0x804ae80:   7c 03 00 00 9a d6 ff ff  9c 03 00 00 c4 d6 ff ff   ||...............|
0x804ae90:   bc 03 00 00 ed d6 ff ff  dc 03 00 00 30 d7 ff ff   |............0...|
0x804aea0:   fc 03 00 00 71 d7 ff ff  1c 04 00 00 c9 d7 ff ff   |....q...........|
0x804aeb0:   40 04 00 00 1b d8 ff ff  64 04 00 00 58 d8 ff ff   |@.......d...X...|
0x804aec0:   84 04 00 00 8f d8 ff ff  a4 04 00 00 ae d8 ff ff   |................|
0x804aed0:   c4 04 00 00 d8 d8 ff ff  e4 04 00 00 04 d9 ff ff   |................|
0x804aee0:   04 05 00 00 2f d9 ff ff  24 05 00 00 78 d9 ff ff   |..../...$...x...|
0x804aef0:   44 05 00 00 bf d9 ff ff  64 05 00 00 19 da ff ff   |D.......d.......|
0x804af00:   88 05 00 00 6d da ff ff  ac 05 00 00 ac da ff ff   |....m...........|
0x804af10:   cc 05 00 00 e5 da ff ff  ec 05 00 00 07 db ff ff   |................|
0x804af20:   0c 06 00 00 55 db ff ff  2c 06 00 00 91 db ff ff   |....U...,.......|
0x804af30:   4c 06 00 00 1a dc ff ff  6c 06 00 00 4c dc ff ff   |L.......l...L...|
0x804af40:   8c 06 00 00 7c dc ff ff  ac 06 00 00 c1 dc ff ff   |....|...........|
0x804af50:   cc 06 00 00 00 dd ff ff  ec 06 00 00 32 dd ff ff   |............2...|
0x804af60:   0c 07 00 00 5e dd ff ff  2c 07 00 00 7c dd ff ff   |....^...,...|...|
0x804af70:   4c 07 00 00 a4 dd ff ff  6c 07 00 00 c9 dd ff ff   |L.......l.......|
0x804af80:   8c 07 00 00 ee dd ff ff  ac 07 00 00 25 de ff ff   |............%...|
0x804af90:   cc 07 00 00 59 de ff ff  ec 07 00 00 ab de ff ff   |....Y...........|
0x804afa0:   10 08 00 00 f7 de ff ff  34 08 00 00 2e df ff ff   |........4.......|
0x804afb0:   54 08 00 00 5f df ff ff  74 08 00 00 7e df ff ff   |T..._...t...~...|
0x804afc0:   94 08 00 00 a8 df ff ff  b4 08 00 00 d0 df ff ff   |................|
0x804afd0:   d4 08 00 00 f9 df ff ff  f4 08 00 00 35 e0 ff ff   |............5...|
0x804afe0:   14 09 00 00 6f e0 ff ff  34 09 00 00 c2 e0 ff ff   |....o...4.......|
0x804aff0:   58 09 00 00 0f e1 ff ff  7c 09 00 00 47 e1 ff ff   |X.......|...G...|
0x804b000:   9c 09 00 00 79 e1 ff ff  bc 09 00 00 8d e1 ff ff   |....y...........|
0x804b010:   dc 09 00 00 a4 e1 ff ff  fc 09 00 00 b9 e1 ff ff   |................|
0x804b020:   1c 0a 00 00 cf e1 ff ff  3c 0a 00 00 f6 e1 ff ff   |........<.......|
0x804b030:   5c 0a 00 00 1b e2 ff ff  7c 0a 00 00 5a e2 ff ff   |\.......|...Z...|
0x804b040:   9c 0a 00 00 93 e2 ff ff  bc 0a 00 00 bf e2 ff ff   |................|
0x804b050:   dc 0a 00 00 e5 e2 ff ff  fc 0a 00 00 27 e3 ff ff   |............'...|
0x804b060:   1c 0b 00 00 69 e3 ff ff  3c 0b 00 00 ab e3 ff ff   |....i...<.......|
0x804b070:   5c 0b 00 00 20 e4 ff ff  7c 0b 00 00 7d e4 ff ff   |\... ...|...}...|
0x804b080:   9c 0b 00 00 da e4 ff ff  bc 0b 00 00 37 e5 ff ff   |............7...|
0x804b090:   dc 0b 00 00 c7 e5 ff ff  fc 0b 00 00 2b e6 ff ff   |............+...|
0x804b0a0:   1c 0c 00 00 9b e6 ff ff  3c 0c 00 00 e2 e6 ff ff   |........<.......|
0x804b0b0:   60 0c 00 00 37 e7 ff ff  80 0c 00 00 7e e7 ff ff   |`...7.......~...|
0x804b0c0:   a4 0c 00 00 e6 e7 ff ff  c8 0c 00 00 6b e9 ff ff   |............k...|
0x804b0d0:   f8 0c 00 00 45 fa ff ff  28 0d 00 00 11 fe ff ff   |....E...(.......|
0x804b0e0:   60 0d 00 00 20 fe ff ff  74 0d 00 00 80 fe ff ff   |`... ...t.......|
0x804b0f0:   c0 0d 00 00 14                                     |.....           |
; section: .eh_frame
0x804b0f4:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b104:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b114:   6c d2 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |l........... ...|
0x804b124:   30 00 00 00 c8 d1 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b134:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b144:   10 00 00 00 54 00 00 00  e4 d1 ff ff 08 00 00 00   |....T...........|
0x804b154:   00 00 00 00 1c 00 00 00  68 00 00 00 f6 d2 ff ff   |........h.......|
0x804b164:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b174:   04 04 00 00 20 00 00 00  88 00 00 00 e6 d2 ff ff   |.... ...........|
0x804b184:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b194:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b1a4:   f0 d2 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b1b4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b1c4:   ee d2 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b1d4:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b1e4:   f6 d2 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b1f4:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b204:   00 d3 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b214:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b224:   09 d3 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b234:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b244:   2c d3 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |,...A....A....B.|
0x804b254:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b264:   4d d3 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |M...X....A....B.|
0x804b274:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b284:   90 01 00 00 81 d3 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b294:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b2a4:   1c 00 00 00 b4 01 00 00  af d3 ff ff 3d 00 00 00   |............=...|
0x804b2b4:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b2c4:   1c 00 00 00 d4 01 00 00  cc d3 ff ff 37 00 00 00   |............7...|
0x804b2d4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b2e4:   1c 00 00 00 f4 01 00 00  e3 d3 ff ff 1f 00 00 00   |................|
0x804b2f4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b304:   1c 00 00 00 14 02 00 00  e2 d3 ff ff 2a 00 00 00   |............*...|
0x804b314:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b324:   1c 00 00 00 34 02 00 00  ec d3 ff ff 2c 00 00 00   |....4.......,...|
0x804b334:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b344:   1c 00 00 00 54 02 00 00  f8 d3 ff ff 2b 00 00 00   |....T.......+...|
0x804b354:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b364:   1c 00 00 00 74 02 00 00  03 d4 ff ff 49 00 00 00   |....t.......I...|
0x804b374:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b384:   1c 00 00 00 94 02 00 00  2c d4 ff ff 47 00 00 00   |........,...G...|
0x804b394:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b3a4:   20 00 00 00 b4 02 00 00  53 d4 ff ff 5a 00 00 00   | .......S...Z...|
0x804b3b4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b3c4:   c5 0c 04 04 20 00 00 00  d8 02 00 00 89 d4 ff ff   |.... ...........|
0x804b3d4:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b3e4:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b3f4:   b9 d4 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b404:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b414:   d8 d4 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b424:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b434:   f1 d4 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b444:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b454:   f3 d4 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b464:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b474:   21 d5 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |!...<....A....B.|
0x804b484:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b494:   3d d5 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |=........A....B.|
0x804b4a4:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b4b4:   a6 d5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b4c4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b4d4:   b8 d5 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b4e4:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b4f4:   c8 d5 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b504:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b514:   ed d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b524:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b534:   0c d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b544:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b554:   1e d6 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b564:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b574:   2a d6 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |*........A....B.|
0x804b584:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b594:   28 d6 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |(...(....A....B.|
0x804b5a4:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b5b4:   30 d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |0...%....A....B.|
0x804b5c4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b5d4:   35 d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |5...%....A....B.|
0x804b5e4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b5f4:   3a d6 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |:...7....A....B.|
0x804b604:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b614:   51 d6 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |Q...4....A....B.|
0x804b624:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b634:   65 d6 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |e...R....A....B.|
0x804b644:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b654:   60 05 00 00 93 d6 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b664:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b674:   1c 00 00 00 84 05 00 00  bb d6 ff ff 37 00 00 00   |............7...|
0x804b684:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b694:   1c 00 00 00 a4 05 00 00  d2 d6 ff ff 31 00 00 00   |............1...|
0x804b6a4:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b6b4:   1c 00 00 00 c4 05 00 00  e3 d6 ff ff 1f 00 00 00   |................|
0x804b6c4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b6d4:   1c 00 00 00 e4 05 00 00  e2 d6 ff ff 2a 00 00 00   |............*...|
0x804b6e4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b6f4:   1c 00 00 00 04 06 00 00  ec d6 ff ff 28 00 00 00   |............(...|
0x804b704:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b714:   1c 00 00 00 24 06 00 00  f4 d6 ff ff 29 00 00 00   |....$.......)...|
0x804b724:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b734:   1c 00 00 00 44 06 00 00  fd d6 ff ff 3c 00 00 00   |....D.......<...|
0x804b744:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b754:   1c 00 00 00 64 06 00 00  19 d7 ff ff 3a 00 00 00   |....d.......:...|
0x804b764:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b774:   20 00 00 00 84 06 00 00  33 d7 ff ff 53 00 00 00   | .......3...S...|
0x804b784:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b794:   c5 0c 04 04 20 00 00 00  a8 06 00 00 62 d7 ff ff   |.... .......b...|
0x804b7a4:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b7b4:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b7c4:   8b d7 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b7d4:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b7e4:   a3 d7 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b7f4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b804:   b5 d7 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b814:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b824:   a9 d7 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b834:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b844:   a0 d7 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b854:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b864:   95 d7 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b874:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b884:   8b d7 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b894:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b8a4:   92 d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b8b4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b8c4:   97 d7 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b8d4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b8e4:   b6 d7 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b8f4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b904:   cf d7 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b914:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b924:   db d7 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804b934:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b944:   e1 d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b954:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b964:   03 d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b974:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b984:   25 d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |%...B....A....B.|
0x804b994:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b9a4:   47 d8 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |G...u....A....B.|
0x804b9b4:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b9c4:   9c d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b9d4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b9e4:   d9 d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b9f4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804ba04:   16 d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804ba14:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804ba24:   53 d9 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |S........A....B.|
0x804ba34:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804ba44:   c3 d9 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804ba54:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804ba64:   07 da ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804ba74:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804ba84:   57 da ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |W...G....A....B.|
0x804ba94:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804baa4:   b0 09 00 00 7a da ff ff  55 00 00 00 00 41 0e 08   |....z...U....A..|
0x804bab4:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bac4:   d0 09 00 00 af da ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804bad4:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bae4:   20 00 00 00 f4 09 00 00  d2 da ff ff 68 00 00 00   | ...........h...|
0x804baf4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bb04:   0c 04 04 00 2c 00 00 00  18 0a 00 00 16 db ff ff   |....,...........|
0x804bb14:   85 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804bb24:   86 04 83 05 03 78 01 c3  41 c6 41 c7 41 c5 0c 04   |.....x..A.A.A...|
0x804bb34:   04 00 00 00 2c 00 00 00  48 0a 00 00 6b dc ff ff   |....,...H...k...|
0x804bb44:   da 10 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804bb54:   86 04 83 05 03 ca 10 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bb64:   04 00 00 00 34 00 00 00  78 0a 00 00 15 ed ff ff   |....4...x.......|
0x804bb74:   cc 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804bb84:   0f 03 75 78 06 10 03 02  75 7c 03 b7 03 c1 0c 01   |..ux....u|......|
0x804bb94:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bba4:   b0 0a 00 00 a9 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804bbb4:   48 00 00 00 c4 0a 00 00  a4 f0 ff ff 5d 00 00 00   |H...........]...|
0x804bbc4:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x804bbd4:   41 0e 14 83 05 4e 0e 20  69 0e 24 41 0e 28 44 0e   |A....N. i.$A.(D.|
0x804bbe4:   2c 44 0e 30 4d 0e 20 47  0e 14 41 c3 0e 10 41 c6   |,D.0M. G..A...A.|
0x804bbf4:   0e 0c 41 c7 0e 08 41 c5  0e 04 00 00 10 00 00 00   |..A...A.........|
0x804bc04:   10 0b 00 00 b8 f0 ff ff  02 00 00 00 00 00 00 00   |................|
0x804bc14:   00 00 00 00 ??                                     |....?           |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 c4 ac 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff 05 00 00 00   |................|
0x804d028:   01 00 00 00 23 5a 83 8a  a2 95 45 1d a5 ce fc d7   |....#Z....E.....|
0x804d038:   ff ff ff ff 62 79 00 00  01 00 00 00 09 00 00 00   |....by..........|
0x804d048:   f7 00 00 00 20 c2 7c 61  d6 00 00 00 d4 a8 0c 34   |.... .|a.......4|
0x804d058:   e9 eb bd 0c ff ff ff ff  e7 8d e4 bb 21 21 05 67   |............!!.g|
0x804d068:   ff ff ff ff 31 39 eb 6e  ff 00 00 00 05 00 00 00   |....19.n........|
0x804d078:   01 00 09 00 02 00 00 00  34 ??                     |........4?      |
