;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:24:37
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 b0 dc ff ff               	lea eax, [ebx - 0x2350]
0x804835c:   50                              	push eax
0x804835d:   8d 83 50 dc ff ff               	lea eax, [ebx - 0x23b0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 07 a9 04 08               	mov eax, 0x804a907
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 64 d0 04 08                  	mov eax, 0x804d064
0x80483a5:   3d 64 d0 04 08                  	cmp eax, 0x804d064
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 64 d0 04 08                  	push 0x804d064
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 64 d0 04 08                  	mov eax, 0x804d064
0x80483e5:   2d 64 d0 04 08                  	sub eax, 0x804d064
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 64 d0 04 08                  	push 0x804d064
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 e5 27 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 d1 27 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 d0 dc ff ff               	lea edx, [eax - 0x2330]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 a4 27 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 86 27 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 5e 27 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 34 27 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 0b 27 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 c8 26 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 86 26 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 2e 26 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 dd 25 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 a0 25 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 69 25 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 4a 25 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 20 25 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 f4 24 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 c9 24 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 80 24 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 38 24 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 de 23 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 8b 23 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 4c 23 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 16 23 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 f4 22 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 a6 22 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 6a 22 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 e1 21 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 af 21 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 7f 21 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 3a 21 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 fb 20 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 c9 20 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 9a 20 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 7c 20 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 54 20 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 2f 20 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 0a 20 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 d3 1f 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 9e 1f 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 4c 1f 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 01 1f 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 ca 1e 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 99 1e 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 7a 1e 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 50 1e 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 28 1e 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 ff 1d 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 c3 1d 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 88 1d 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 35 1d 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 e9 1c 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 b1 1c 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 82 1c 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 6e 1c 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 57 1c 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 42 1c 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 2c 1c 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 05 1c 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 e0 1b 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 a1 1b 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 68 1b 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 3c 1b 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 16 1b 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 a8 dd ff ff               	fld dword ptr [eax - 0x2258]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 a8 dd ff ff               	fld dword ptr [eax - 0x2258]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 ac dd ff ff               	fld dword ptr [eax - 0x2254]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 d4 1a 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 a8 dd ff ff               	fld dword ptr [eax - 0x2258]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 a8 dd ff ff               	fld dword ptr [eax - 0x2258]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 ac dd ff ff               	fld dword ptr [eax - 0x2254]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 92 1a 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 b0 dd ff ff               	fld dword ptr [eax - 0x2250]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 b4 dd ff ff               	fld dword ptr [eax - 0x224c]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 b8 dd ff ff               	fld dword ptr [eax - 0x2248]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 50 1a 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 bc dd ff ff               	fld dword ptr [eax - 0x2244]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 c0 dd ff ff               	fld dword ptr [eax - 0x2240]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 c4 dd ff ff               	fld dword ptr [eax - 0x223c]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 d8 19 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 c8 dd ff ff               	fld qword ptr [eax - 0x2238]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 c8 dd ff ff               	fld qword ptr [eax - 0x2238]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 d0 dd ff ff               	fld qword ptr [eax - 0x2230]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 7b 19 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 c8 dd ff ff               	fld qword ptr [eax - 0x2238]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 c8 dd ff ff               	fld qword ptr [eax - 0x2238]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 d0 dd ff ff               	fld qword ptr [eax - 0x2230]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 1e 19 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 d8 dd ff ff               	fld qword ptr [eax - 0x2228]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 e0 dd ff ff               	fld qword ptr [eax - 0x2220]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 e8 dd ff ff               	fld qword ptr [eax - 0x2218]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 c1 18 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 f0 dd ff ff               	fld qword ptr [eax - 0x2210]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 f8 dd ff ff               	fld qword ptr [eax - 0x2208]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 00 de ff ff               	fld qword ptr [eax - 0x2200]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 31 18 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 08 de ff ff               	fld dword ptr [eax - 0x21f8]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 0c de ff ff               	fld dword ptr [eax - 0x21f4]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 cd 17 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 5c 17 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 19 17 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 e0 dc ff ff               	lea eax, [ebx - 0x2320]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 04 dd ff ff               	lea eax, [ebx - 0x22fc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804979f
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 44                        	sub esp, 0x44
0x804962f:   e8 13 16 00 00                  	call 0x804ac47 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 39 00 00               	add edx, 0x39cc
0x804963a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804963d:   8b 4d 14                        	mov ecx, dword ptr [ebp + 0x14]
0x8049640:   8b 5d 18                        	mov ebx, dword ptr [ebp + 0x18]
0x8049643:   8b 7d 24                        	mov edi, dword ptr [ebp + 0x24]
0x8049646:   8b 75 28                        	mov esi, dword ptr [ebp + 0x28]
0x8049649:   89 75 c4                        	mov dword ptr [ebp - 0x3c], esi
0x804964c:   8b 75 2c                        	mov esi, dword ptr [ebp + 0x2c]
0x804964f:   89 75 c0                        	mov dword ptr [ebp - 0x40], esi
0x8049652:   8b 75 30                        	mov esi, dword ptr [ebp + 0x30]
0x8049655:   89 75 bc                        	mov dword ptr [ebp - 0x44], esi
0x8049658:   8b 75 40                        	mov esi, dword ptr [ebp + 0x40]
0x804965b:   89 75 b8                        	mov dword ptr [ebp - 0x48], esi
0x804965e:   8b 75 44                        	mov esi, dword ptr [ebp + 0x44]
0x8049661:   89 75 b4                        	mov dword ptr [ebp - 0x4c], esi
0x8049664:   8b 75 50                        	mov esi, dword ptr [ebp + 0x50]
0x8049667:   89 75 b0                        	mov dword ptr [ebp - 0x50], esi
0x804966a:   8b 75 60                        	mov esi, dword ptr [ebp + 0x60]
0x804966d:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x8049671:   89 c8                           	mov eax, ecx
0x8049673:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x8049676:   89 d8                           	mov eax, ebx
0x8049678:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x804967b:   89 f8                           	mov eax, edi
0x804967d:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x8049681:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x8049685:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x8049688:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x804968c:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x804968f:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x8049693:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x8049696:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x804969a:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x804969e:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x80496a2:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496a6:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x80496aa:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496ae:   89 f0                           	mov eax, esi
0x80496b0:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496b3:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80496b6:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x80496bc:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x80496c0:   66 89 82 a4 04 00 00            	mov word ptr [edx + 0x4a4], ax
0x80496c7:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x80496ca:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x80496d0:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x80496d4:   88 82 2c 00 00 00               	mov byte ptr [edx + 0x2c], al
0x80496da:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x80496de:   88 82 2d 00 00 00               	mov byte ptr [edx + 0x2d], al
0x80496e4:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x80496e7:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x80496ed:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x80496f0:   89 82 a8 04 00 00               	mov dword ptr [edx + 0x4a8], eax
0x80496f6:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x80496fa:   66 89 82 34 00 00 00            	mov word ptr [edx + 0x34], ax
0x8049701:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049705:   88 82 36 00 00 00               	mov byte ptr [edx + 0x36], al
0x804970b:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x804970f:   88 82 37 00 00 00               	mov byte ptr [edx + 0x37], al
0x8049715:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x8049719:   88 82 38 00 00 00               	mov byte ptr [edx + 0x38], al
0x804971f:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x8049722:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x8049728:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x804972b:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x8049731:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x8049734:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x804973a:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x804973e:   66 89 82 48 00 00 00            	mov word ptr [edx + 0x48], ax
0x8049745:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x8049749:   66 89 82 4a 00 00 00            	mov word ptr [edx + 0x4a], ax
0x8049750:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049753:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x8049759:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x804975c:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x8049762:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x8049766:   66 89 82 ac 04 00 00            	mov word ptr [edx + 0x4ac], ax
0x804976d:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049770:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x8049776:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x8049779:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x804977f:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x8049782:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x8049788:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x804978c:   88 82 60 00 00 00               	mov byte ptr [edx + 0x60], al
0x8049792:   b8 00 00 00 00                  	mov eax, 0
0x8049797:   83 c4 44                        	add esp, 0x44
0x804979a:   5b                              	pop ebx
0x804979b:   5e                              	pop esi
0x804979c:   5f                              	pop edi
0x804979d:   5d                              	pop ebp
0x804979e:   c3                              	ret 
; function: func_1 at 0x804979f -- 0x804a907
0x804979f:   55                              	push ebp
0x80497a0:   89 e5                           	mov ebp, esp
0x80497a2:   57                              	push edi
0x80497a3:   56                              	push esi
0x80497a4:   53                              	push ebx
0x80497a5:   81 ec 34 01 00 00               	sub esp, 0x134
0x80497ab:   e8 93 14 00 00                  	call 0x804ac43 <__x86.get_pc_thunk.ax>
0x80497b0:   05 50 38 00 00                  	add eax, 0x3850
0x80497b5:   c7 45 f0 08 00 00 00            	mov dword ptr [ebp - 0x10], 8
0x80497bc:   66 c7 45 9e 00 00               	mov word ptr [ebp - 0x62], 0
0x80497c2:   c7 45 98 d4 37 df 46            	mov dword ptr [ebp - 0x68], 0x46df37d4
0x80497c9:   c6 45 ef f4                     	mov byte ptr [ebp - 0x11], 0xf4
0x80497cd:   c6 45 ee 65                     	mov byte ptr [ebp - 0x12], 0x65
0x80497d1:   c7 45 e8 ab d5 53 c2            	mov dword ptr [ebp - 0x18], 0xc253d5ab
0x80497d8:   c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x80497df:   66 c7 45 e2 f6 ff               	mov word ptr [ebp - 0x1e], 0xfff6
0x80497e5:   c6 45 e1 03                     	mov byte ptr [ebp - 0x1f], 3
0x80497e9:   c6 45 e0 5b                     	mov byte ptr [ebp - 0x20], 0x5b
0x80497ed:   c6 45 df 01                     	mov byte ptr [ebp - 0x21], 1
0x80497f1:   c7 45 d8 2f d1 b4 eb            	mov dword ptr [ebp - 0x28], 0xebb4d12f
0x80497f8:   c7 45 94 c3 80 cd 0a            	mov dword ptr [ebp - 0x6c], 0xacd80c3
0x80497ff:   c7 45 d4 07 00 00 00            	mov dword ptr [ebp - 0x2c], 7
0x8049806:   66 c7 45 92 dd 89               	mov word ptr [ebp - 0x6e], 0x89dd
0x804980c:   66 c7 45 90 05 00               	mov word ptr [ebp - 0x70], 5
0x8049812:   c7 45 8c 05 00 00 00            	mov dword ptr [ebp - 0x74], 5
0x8049819:   c7 45 88 ff ff ff ff            	mov dword ptr [ebp - 0x78], 0xffffffff
0x8049820:   66 c7 45 d2 00 00               	mov word ptr [ebp - 0x2e], 0
0x8049826:   c7 45 84 ad 74 71 9c            	mov dword ptr [ebp - 0x7c], 0x9c7174ad
0x804982d:   c7 45 cc 04 8a 4c 56            	mov dword ptr [ebp - 0x34], 0x564c8a04
0x8049834:   c7 45 80 01 00 00 00            	mov dword ptr [ebp - 0x80], 1
0x804983b:   c6 85 7f ff ff ff ff            	mov byte ptr [ebp - 0x81], 0xff
0x8049842:   c6 85 7e ff ff ff 01            	mov byte ptr [ebp - 0x82], 1
0x8049849:   c7 45 c8 08 00 00 00            	mov dword ptr [ebp - 0x38], 8
0x8049850:   c7 45 c4 00 00 00 00            	mov dword ptr [ebp - 0x3c], 0
0x8049857:   c7 85 78 ff ff ff 4d 64 f4 7a   	mov dword ptr [ebp - 0x88], 0x7af4644d
0x8049861:   c7 85 74 ff ff ff 11 68 ee 7f   	mov dword ptr [ebp - 0x8c], 0x7fee6811
0x804986b:   c6 45 c3 59                     	mov byte ptr [ebp - 0x3d], 0x59
0x804986f:   c7 85 70 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x90], 0xffffffff
0x8049879:   c7 85 6c ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0x94], 2
0x8049883:   c7 85 68 ff ff ff 4f 3b cd 1c   	mov dword ptr [ebp - 0x98], 0x1ccd3b4f
0x804988d:   c6 85 67 ff ff ff 2a            	mov byte ptr [ebp - 0x99], 0x2a
0x8049894:   c7 85 60 ff ff ff 95 e7 f6 98   	mov dword ptr [ebp - 0xa0], 0x98f6e795
0x804989e:   c7 85 5c ff ff ff 67 02 45 23   	mov dword ptr [ebp - 0xa4], 0x23450267
0x80498a8:   83 45 98 01                     	add dword ptr [ebp - 0x68], 1
0x80498ac:   0f bf 45 9e                     	movsx eax, word ptr [ebp - 0x62]
0x80498b0:   31 45 c8                        	xor dword ptr [ebp - 0x38], eax
0x80498b3:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x80498b7:   0f 84 a8 07 00 00               	je 0x804a065 <func_1+0x8c6>
0x80498bd:   c6 85 23 ff ff ff 12            	mov byte ptr [ebp - 0xdd], 0x12
0x80498c4:   66 c7 85 20 ff ff ff f9 ff      	mov word ptr [ebp - 0xe0], 0xfff9
0x80498cd:   c7 45 bc 23 c3 2c 74            	mov dword ptr [ebp - 0x44], 0x742cc323
0x80498d4:   c7 45 b8 16 c1 64 31            	mov dword ptr [ebp - 0x48], 0x3164c116
0x80498db:   c7 45 b4 3b fe 8b 74            	mov dword ptr [ebp - 0x4c], 0x748bfe3b
0x80498e2:   66 c7 85 1e ff ff ff 62 49      	mov word ptr [ebp - 0xe2], 0x4962
0x80498eb:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x80498ef:   89 c2                           	mov edx, eax
0x80498f1:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x80498f4:   21 c2                           	and edx, eax
0x80498f6:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x80498fa:   09 d0                           	or eax, edx
0x80498fc:   88 45 ef                        	mov byte ptr [ebp - 0x11], al
0x80498ff:   80 7d ef 00                     	cmp byte ptr [ebp - 0x11], 0
0x8049903:   75 04                           	jne 0x8049909 <func_1+0x16a>
0x8049905:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049909:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804990c:   f7 d8                           	neg eax
0x804990e:   83 e0 01                        	and eax, 1
0x8049911:   89 c2                           	mov edx, eax
0x8049913:   83 fa ff                        	cmp edx, -1
0x8049916:   0f 93 c0                        	setae al
0x8049919:   0f b6 c0                        	movzx eax, al
0x804991c:   f7 d8                           	neg eax
0x804991e:   29 c2                           	sub edx, eax
0x8049920:   89 d0                           	mov eax, edx
0x8049922:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049925:   80 7d ef 00                     	cmp byte ptr [ebp - 0x11], 0
0x8049929:   0f 84 10 06 00 00               	je 0x8049f3f <func_1+0x7a0>
0x804992f:   66 c7 85 16 ff ff ff 39 bf      	mov word ptr [ebp - 0xea], 0xbf39
0x8049938:   c7 45 b0 7f 07 20 4f            	mov dword ptr [ebp - 0x50], 0x4f20077f
0x804993f:   c7 85 10 ff ff ff e2 cd 8e 8b   	mov dword ptr [ebp - 0xf0], 0x8b8ecde2
0x8049949:   c7 45 ac f4 3b 2c 6b            	mov dword ptr [ebp - 0x54], 0x6b2c3bf4
0x8049950:   c6 85 0f ff ff ff f7            	mov byte ptr [ebp - 0xf1], 0xf7
0x8049957:   c7 45 a8 ff ff ff ff            	mov dword ptr [ebp - 0x58], 0xffffffff
0x804995e:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x8049962:   66 23 85 16 ff ff ff            	and ax, word ptr [ebp - 0xea]
0x8049969:   98                              	cwde 
0x804996a:   8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x804996d:   89 d1                           	mov ecx, edx
0x804996f:   0f b6 55 ee                     	movzx edx, byte ptr [ebp - 0x12]
0x8049973:   31 ca                           	xor edx, ecx
0x8049975:   88 55 ee                        	mov byte ptr [ebp - 0x12], dl
0x8049978:   0f b6 75 ee                     	movzx esi, byte ptr [ebp - 0x12]
0x804997c:   99                              	cdq 
0x804997d:   f7 fe                           	idiv esi
0x804997f:   89 c2                           	mov edx, eax
0x8049981:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x8049985:   39 c2                           	cmp edx, eax
0x8049987:   0f 9c c0                        	setl al
0x804998a:   0f b6 c0                        	movzx eax, al
0x804998d:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x8049990:   0f 97 c0                        	seta al
0x8049993:   0f b6 d0                        	movzx edx, al
0x8049996:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049999:   0f b6 c0                        	movzx eax, al
0x804999c:   89 c1                           	mov ecx, eax
0x804999e:   d3 e2                           	shl edx, cl
0x80499a0:   89 d0                           	mov eax, edx
0x80499a2:   85 c0                           	test eax, eax
0x80499a4:   74 77                           	je 0x8049a1d <func_1+0x27e>
0x80499a6:   c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x80499ad:   eb 44                           	jmp 0x80499f3 <func_1+0x254>
0x80499af:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x80499b3:   83 c0 63                        	add eax, 0x63
0x80499b6:   83 f8 ff                        	cmp eax, -1
0x80499b9:   0f 9c c0                        	setl al
0x80499bc:   0f b6 c0                        	movzx eax, al
0x80499bf:   f7 d0                           	not eax
0x80499c1:   89 c2                           	mov edx, eax
0x80499c3:   0f bf 85 20 ff ff ff            	movsx eax, word ptr [ebp - 0xe0]
0x80499ca:   39 c2                           	cmp edx, eax
0x80499cc:   0f 9e c0                        	setle al
0x80499cf:   0f b6 d0                        	movzx edx, al
0x80499d2:   0f b6 45 ee                     	movzx eax, byte ptr [ebp - 0x12]
0x80499d6:   39 c2                           	cmp edx, eax
0x80499d8:   0f 94 c0                        	sete al
0x80499db:   0f b6 c0                        	movzx eax, al
0x80499de:   f7 d0                           	not eax
0x80499e0:   89 c2                           	mov edx, eax
0x80499e2:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x80499e6:   21 d0                           	and eax, edx
0x80499e8:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x80499eb:   83 75 e8 f7                     	xor dword ptr [ebp - 0x18], 0xfffffff7
0x80499ef:   83 6d f0 02                     	sub dword ptr [ebp - 0x10], 2
0x80499f3:   83 7d f0 f9                     	cmp dword ptr [ebp - 0x10], -7
0x80499f7:   74 b6                           	je 0x80499af <func_1+0x210>
0x80499f9:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x80499fc:   0f b6 d0                        	movzx edx, al
0x80499ff:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049a02:   0f b6 c0                        	movzx eax, al
0x8049a05:   0f af c2                        	imul eax, edx
0x8049a08:   31 45 bc                        	xor dword ptr [ebp - 0x44], eax
0x8049a0b:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x8049a0f:   0f 94 c0                        	sete al
0x8049a12:   0f b6 c0                        	movzx eax, al
0x8049a15:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049a18:   e9 b9 02 00 00                  	jmp 0x8049cd6 <func_1+0x537>
0x8049a1d:   c7 85 08 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xf8], 1
0x8049a27:   c7 85 e0 fe ff ff fb ff ff ff   	mov dword ptr [ebp - 0x120], 0xfffffffb
0x8049a31:   c7 85 04 ff ff ff d6 c8 8d 8a   	mov dword ptr [ebp - 0xfc], 0x8a8dc8d6
0x8049a3b:   c7 85 00 ff ff ff fd ff ff ff   	mov dword ptr [ebp - 0x100], 0xfffffffd
0x8049a45:   c7 85 fc fe ff ff fe ff ff ff   	mov dword ptr [ebp - 0x104], 0xfffffffe
0x8049a4f:   c6 45 ee 15                     	mov byte ptr [ebp - 0x12], 0x15
0x8049a53:   e9 12 01 00 00                  	jmp 0x8049b6a <func_1+0x3cb>
0x8049a58:   0f b6 85 23 ff ff ff            	movzx eax, byte ptr [ebp - 0xdd]
0x8049a5f:   8b 95 08 ff ff ff               	mov edx, dword ptr [ebp - 0xf8]
0x8049a65:   0f b6 c0                        	movzx eax, al
0x8049a68:   f6 f2                           	div dl
0x8049a6a:   0f b6 c4                        	movzx eax, ah
0x8049a6d:   83 c8 f0                        	or eax, 0xfffffff0
0x8049a70:   89 c2                           	mov edx, eax
0x8049a72:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049a75:   29 c2                           	sub edx, eax
0x8049a77:   89 d0                           	mov eax, edx
0x8049a79:   0f be d0                        	movsx edx, al
0x8049a7c:   0f be 85 7e ff ff ff            	movsx eax, byte ptr [ebp - 0x82]
0x8049a83:   29 c2                           	sub edx, eax
0x8049a85:   89 d0                           	mov eax, edx
0x8049a87:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049a8a:   0f bf 85 20 ff ff ff            	movsx eax, word ptr [ebp - 0xe0]
0x8049a91:   09 45 e4                        	or dword ptr [ebp - 0x1c], eax
0x8049a94:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049a97:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x8049a9a:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x8049aa1:   83 7d b8 07                     	cmp dword ptr [ebp - 0x48], 7
0x8049aa5:   0f 85 b5 00 00 00               	jne 0x8049b60 <func_1+0x3c1>
0x8049aab:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049aae:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x8049ab4:   c7 45 e8 73 bf df e7            	mov dword ptr [ebp - 0x18], 0xe7dfbf73
0x8049abb:   0f be 85 7f ff ff ff            	movsx eax, byte ptr [ebp - 0x81]
0x8049ac2:   0f b7 55 d2                     	movzx edx, word ptr [ebp - 0x2e]
0x8049ac6:   0f bf 4d 90                     	movsx ecx, word ptr [ebp - 0x70]
0x8049aca:   0f bf 75 92                     	movsx esi, word ptr [ebp - 0x6e]
0x8049ace:   0f b6 7d df                     	movzx edi, byte ptr [ebp - 0x21]
0x8049ad2:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x8049ad8:   0f b6 5d e0                     	movzx ebx, byte ptr [ebp - 0x20]
0x8049adc:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x8049ae2:   0f be 7d e1                     	movsx edi, byte ptr [ebp - 0x1f]
0x8049ae6:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x8049aec:   0f bf 5d e2                     	movsx ebx, word ptr [ebp - 0x1e]
0x8049af0:   89 9d c4 fe ff ff               	mov dword ptr [ebp - 0x13c], ebx
0x8049af6:   0f b6 7d ee                     	movzx edi, byte ptr [ebp - 0x12]
0x8049afa:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x8049b00:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x8049b04:   0f bf 5d 9e                     	movsx ebx, word ptr [ebp - 0x62]
0x8049b08:   50                              	push eax
0x8049b09:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049b0c:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049b0f:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049b12:   52                              	push edx
0x8049b13:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049b16:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049b19:   51                              	push ecx
0x8049b1a:   56                              	push esi
0x8049b1b:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049b1e:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x8049b21:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049b24:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x8049b2a:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x8049b30:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x8049b36:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x8049b3c:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049b3f:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049b42:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x8049b48:   57                              	push edi
0x8049b49:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x8049b4c:   53                              	push ebx
0x8049b4d:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049b50:   e8 d1 fa ff ff                  	call 0x8049626 <set_var>
0x8049b55:   83 c4 5c                        	add esp, 0x5c
0x8049b58:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049b5b:   e9 9f 0d 00 00                  	jmp 0x804a8ff <func_1+0x1160>
0x8049b60:   80 7d ef 00                     	cmp byte ptr [ebp - 0x11], 0
0x8049b64:   75 10                           	jne 0x8049b76 <func_1+0x3d7>
0x8049b66:   80 6d ee 01                     	sub byte ptr [ebp - 0x12], 1
0x8049b6a:   80 7d ee 10                     	cmp byte ptr [ebp - 0x12], 0x10
0x8049b6e:   0f 86 e4 fe ff ff               	jbe 0x8049a58 <func_1+0x2b9>
0x8049b74:   eb 01                           	jmp 0x8049b77 <func_1+0x3d8>
0x8049b76:   90                              	nop 
0x8049b77:   66 83 7d 9e 00                  	cmp word ptr [ebp - 0x62], 0
0x8049b7c:   74 35                           	je 0x8049bb3 <func_1+0x414>
0x8049b7e:   b8 78 1c 00 00                  	mov eax, 0x1c78
0x8049b83:   ba 00 00 00 00                  	mov edx, 0
0x8049b88:   f7 75 98                        	div dword ptr [ebp - 0x68]
0x8049b8b:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049b8e:   81 7d b0 88 00 00 00            	cmp dword ptr [ebp - 0x50], 0x88
0x8049b95:   0f 9f c0                        	setg al
0x8049b98:   0f b6 d0                        	movzx edx, al
0x8049b9b:   0f bf 85 16 ff ff ff            	movsx eax, word ptr [ebp - 0xea]
0x8049ba2:   89 c1                           	mov ecx, eax
0x8049ba4:   d3 e2                           	shl edx, cl
0x8049ba6:   89 d0                           	mov eax, edx
0x8049ba8:   33 85 10 ff ff ff               	xor eax, dword ptr [ebp - 0xf0]
0x8049bae:   0b 45 f0                        	or eax, dword ptr [ebp - 0x10]
0x8049bb1:   85 c0                           	test eax, eax
0x8049bb3:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x8049bb7:   66 0f be d0                     	movsx dx, al
0x8049bbb:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049bbe:   66 98                           	cbw 
0x8049bc0:   29 c2                           	sub edx, eax
0x8049bc2:   89 d0                           	mov eax, edx
0x8049bc4:   0f b7 c8                        	movzx ecx, ax
0x8049bc7:   b8 03 00 00 00                  	mov eax, 3
0x8049bcc:   99                              	cdq 
0x8049bcd:   f7 f9                           	idiv ecx
0x8049bcf:   89 95 04 ff ff ff               	mov dword ptr [ebp - 0xfc], edx
0x8049bd5:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049bd8:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x8049bdc:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x8049be0:   74 07                           	je 0x8049be9 <func_1+0x44a>
0x8049be2:   b8 01 00 00 00                  	mov eax, 1
0x8049be7:   eb 05                           	jmp 0x8049bee <func_1+0x44f>
0x8049be9:   b8 00 00 00 00                  	mov eax, 0
0x8049bee:   99                              	cdq 
0x8049bef:   f7 7d f0                        	idiv dword ptr [ebp - 0x10]
0x8049bf2:   89 d0                           	mov eax, edx
0x8049bf4:   85 c0                           	test eax, eax
0x8049bf6:   74 0c                           	je 0x8049c04 <func_1+0x465>
0x8049bf8:   c7 45 f0 fd ff ff ff            	mov dword ptr [ebp - 0x10], 0xfffffffd
0x8049bff:   e9 d2 00 00 00                  	jmp 0x8049cd6 <func_1+0x537>
0x8049c04:   c7 85 f8 fe ff ff 4b 7d 7d 8a   	mov dword ptr [ebp - 0x108], 0x8a7d7d4b
0x8049c0e:   c7 85 f4 fe ff ff f6 ff ff ff   	mov dword ptr [ebp - 0x10c], 0xfffffff6
0x8049c18:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x8049c1c:   66 c1 e8 04                     	shr ax, 4
0x8049c20:   89 c2                           	mov edx, eax
0x8049c22:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049c25:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049c28:   0f bf 45 9e                     	movsx eax, word ptr [ebp - 0x62]
0x8049c2c:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x8049c32:   83 bd 08 ff ff ff 01            	cmp dword ptr [ebp - 0xf8], 1
0x8049c39:   0f 96 c0                        	setbe al
0x8049c3c:   88 45 e1                        	mov byte ptr [ebp - 0x1f], al
0x8049c3f:   66 0f be 45 e1                  	movsx ax, byte ptr [ebp - 0x1f]
0x8049c44:   f6 65 ef                        	mul byte ptr [ebp - 0x11]
0x8049c47:   31 d0                           	xor eax, edx
0x8049c49:   0f b6 d0                        	movzx edx, al
0x8049c4c:   0f b6 45 ee                     	movzx eax, byte ptr [ebp - 0x12]
0x8049c50:   89 c1                           	mov ecx, eax
0x8049c52:   d3 fa                           	sar edx, cl
0x8049c54:   89 d0                           	mov eax, edx
0x8049c56:   85 c0                           	test eax, eax
0x8049c58:   75 09                           	jne 0x8049c63 <func_1+0x4c4>
0x8049c5a:   83 bd 00 ff ff ff 00            	cmp dword ptr [ebp - 0x100], 0
0x8049c61:   74 07                           	je 0x8049c6a <func_1+0x4cb>
0x8049c63:   b8 01 00 00 00                  	mov eax, 1
0x8049c68:   eb 05                           	jmp 0x8049c6f <func_1+0x4d0>
0x8049c6a:   b8 00 00 00 00                  	mov eax, 0
0x8049c6f:   89 85 f8 fe ff ff               	mov dword ptr [ebp - 0x108], eax
0x8049c75:   c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x8049c7c:   c7 85 10 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xf0], 0
0x8049c86:   c7 85 fc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x104], 0
0x8049c90:   81 7d c8 8b e0 00 00            	cmp dword ptr [ebp - 0x38], 0xe08b
0x8049c97:   0f 95 c0                        	setne al
0x8049c9a:   88 45 e1                        	mov byte ptr [ebp - 0x1f], al
0x8049c9d:   0f b6 45 e1                     	movzx eax, byte ptr [ebp - 0x1f]
0x8049ca1:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x8049ca4:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049ca8:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x8049cab:   80 7d df 00                     	cmp byte ptr [ebp - 0x21], 0
0x8049caf:   75 0a                           	jne 0x8049cbb <func_1+0x51c>
0x8049cb1:   66 83 bd 16 ff ff ff 00         	cmp word ptr [ebp - 0xea], 0
0x8049cb9:   74 07                           	je 0x8049cc2 <func_1+0x523>
0x8049cbb:   b8 01 00 00 00                  	mov eax, 1
0x8049cc0:   eb 05                           	jmp 0x8049cc7 <func_1+0x528>
0x8049cc2:   b8 00 00 00 00                  	mov eax, 0
0x8049cc7:   3b 45 e8                        	cmp eax, dword ptr [ebp - 0x18]
0x8049cca:   0f 95 c0                        	setne al
0x8049ccd:   0f b6 c0                        	movzx eax, al
0x8049cd0:   33 45 b0                        	xor eax, dword ptr [ebp - 0x50]
0x8049cd3:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049cd6:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x8049cda:   75 2c                           	jne 0x8049d08 <func_1+0x569>
0x8049cdc:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049cdf:   8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x8049ce2:   29 c2                           	sub edx, eax
0x8049ce4:   89 d0                           	mov eax, edx
0x8049ce6:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049ce9:   0f 9d c0                        	setge al
0x8049cec:   0f b6 c0                        	movzx eax, al
0x8049cef:   0b 45 b8                        	or eax, dword ptr [ebp - 0x48]
0x8049cf2:   09 45 c8                        	or dword ptr [ebp - 0x38], eax
0x8049cf5:   0f bf 45 e2                     	movsx eax, word ptr [ebp - 0x1e]
0x8049cf9:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049cfc:   0f 93 c0                        	setae al
0x8049cff:   0f b6 d0                        	movzx edx, al
0x8049d02:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049d06:   39 c2                           	cmp edx, eax
0x8049d08:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049d0b:   89 85 10 ff ff ff               	mov dword ptr [ebp - 0xf0], eax
0x8049d11:   c7 45 bc 04 00 00 00            	mov dword ptr [ebp - 0x44], 4
0x8049d18:   eb 40                           	jmp 0x8049d5a <func_1+0x5bb>
0x8049d1a:   c7 85 e8 fe ff ff fa ff ff ff   	mov dword ptr [ebp - 0x118], 0xfffffffa
0x8049d24:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049d27:   89 85 10 ff ff ff               	mov dword ptr [ebp - 0xf0], eax
0x8049d2d:   8b 85 10 ff ff ff               	mov eax, dword ptr [ebp - 0xf0]
0x8049d33:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049d36:   c7 45 b8 e7 ff ff ff            	mov dword ptr [ebp - 0x48], 0xffffffe7
0x8049d3d:   eb 11                           	jmp 0x8049d50 <func_1+0x5b1>
0x8049d3f:   66 c7 85 e6 fe ff ff 78 18      	mov word ptr [ebp - 0x11a], 0x1878
0x8049d48:   83 65 a8 01                     	and dword ptr [ebp - 0x58], 1
0x8049d4c:   83 45 b8 01                     	add dword ptr [ebp - 0x48], 1
0x8049d50:   83 7d b8 f2                     	cmp dword ptr [ebp - 0x48], -0xe
0x8049d54:   7d e9                           	jge 0x8049d3f <func_1+0x5a0>
0x8049d56:   83 6d bc 01                     	sub dword ptr [ebp - 0x44], 1
0x8049d5a:   83 7d bc e7                     	cmp dword ptr [ebp - 0x44], -0x19
0x8049d5e:   74 ba                           	je 0x8049d1a <func_1+0x57b>
0x8049d60:   c7 45 c4 08 00 00 00            	mov dword ptr [ebp - 0x3c], 8
0x8049d67:   e9 c4 01 00 00                  	jmp 0x8049f30 <func_1+0x791>
0x8049d6c:   66 c7 85 f2 fe ff ff cf c0      	mov word ptr [ebp - 0x10e], 0xc0cf
0x8049d75:   c7 45 a4 01 00 00 00            	mov dword ptr [ebp - 0x5c], 1
0x8049d7c:   c7 45 b0 0c 00 00 00            	mov dword ptr [ebp - 0x50], 0xc
0x8049d83:   e9 a6 00 00 00                  	jmp 0x8049e2e <func_1+0x68f>
0x8049d88:   66 c7 85 f0 fe ff ff 0f 35      	mov word ptr [ebp - 0x110], 0x350f
0x8049d91:   c7 85 ec fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x114], 0
0x8049d9b:   0f b6 55 df                     	movzx edx, byte ptr [ebp - 0x21]
0x8049d9f:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x8049da3:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049da6:   0f 94 c0                        	sete al
0x8049da9:   0f b6 c8                        	movzx ecx, al
0x8049dac:   0f b6 45 ee                     	movzx eax, byte ptr [ebp - 0x12]
0x8049db0:   09 c8                           	or eax, ecx
0x8049db2:   39 c2                           	cmp edx, eax
0x8049db4:   0f 9c c0                        	setl al
0x8049db7:   0f b6 c0                        	movzx eax, al
0x8049dba:   66 21 85 f0 fe ff ff            	and word ptr [ebp - 0x110], ax
0x8049dc1:   66 c7 45 e2 ae fa               	mov word ptr [ebp - 0x1e], 0xfaae
0x8049dc7:   0f b7 85 f2 fe ff ff            	movzx eax, word ptr [ebp - 0x10e]
0x8049dce:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049dd1:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049dd4:   89 c3                           	mov ebx, eax
0x8049dd6:   8b 85 ec fe ff ff               	mov eax, dword ptr [ebp - 0x114]
0x8049ddc:   89 c6                           	mov esi, eax
0x8049dde:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049de1:   98                              	cwde 
0x8049de2:   ba ae fa ff ff                  	mov edx, 0xfffffaae
0x8049de7:   89 c1                           	mov ecx, eax
0x8049de9:   d3 e2                           	shl edx, cl
0x8049deb:   89 d0                           	mov eax, edx
0x8049ded:   0f bf d0                        	movsx edx, ax
0x8049df0:   0f b7 85 f2 fe ff ff            	movzx eax, word ptr [ebp - 0x10e]
0x8049df7:   98                              	cwde 
0x8049df8:   29 c2                           	sub edx, eax
0x8049dfa:   89 d0                           	mov eax, edx
0x8049dfc:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049dff:   0f 97 c0                        	seta al
0x8049e02:   0f b6 c0                        	movzx eax, al
0x8049e05:   0f af c6                        	imul eax, esi
0x8049e08:   29 c3                           	sub ebx, eax
0x8049e0a:   89 d8                           	mov eax, ebx
0x8049e0c:   98                              	cwde 
0x8049e0d:   ba c4 f6 ff ff                  	mov edx, 0xfffff6c4
0x8049e12:   89 c1                           	mov ecx, eax
0x8049e14:   d3 fa                           	sar edx, cl
0x8049e16:   89 d0                           	mov eax, edx
0x8049e18:   25 28 12 00 00                  	and eax, 0x1228
0x8049e1d:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x8049e23:   c7 45 e8 01 00 00 00            	mov dword ptr [ebp - 0x18], 1
0x8049e2a:   83 6d b0 08                     	sub dword ptr [ebp - 0x50], 8
0x8049e2e:   83 7d b0 e6                     	cmp dword ptr [ebp - 0x50], -0x1a
0x8049e32:   0f 84 50 ff ff ff               	je 0x8049d88 <func_1+0x5e9>
0x8049e38:   0f bf 45 9e                     	movsx eax, word ptr [ebp - 0x62]
0x8049e3c:   8b 4d a4                        	mov ecx, dword ptr [ebp - 0x5c]
0x8049e3f:   ba 00 00 00 00                  	mov edx, 0
0x8049e44:   f7 f1                           	div ecx
0x8049e46:   89 d0                           	mov eax, edx
0x8049e48:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049e4b:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049e4e:   84 c0                           	test al, al
0x8049e50:   75 06                           	jne 0x8049e58 <func_1+0x6b9>
0x8049e52:   83 7d b4 00                     	cmp dword ptr [ebp - 0x4c], 0
0x8049e56:   74 07                           	je 0x8049e5f <func_1+0x6c0>
0x8049e58:   b8 01 00 00 00                  	mov eax, 1
0x8049e5d:   eb 05                           	jmp 0x8049e64 <func_1+0x6c5>
0x8049e5f:   b8 00 00 00 00                  	mov eax, 0
0x8049e64:   0f bf d0                        	movsx edx, ax
0x8049e67:   89 d0                           	mov eax, edx
0x8049e69:   c1 e0 02                        	shl eax, 2
0x8049e6c:   01 d0                           	add eax, edx
0x8049e6e:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049e71:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049e74:   89 c2                           	mov edx, eax
0x8049e76:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x8049e7a:   31 d0                           	xor eax, edx
0x8049e7c:   0f b7 d0                        	movzx edx, ax
0x8049e7f:   66 0f be 45 e1                  	movsx ax, byte ptr [ebp - 0x1f]
0x8049e84:   0f b7 c0                        	movzx eax, ax
0x8049e87:   89 c1                           	mov ecx, eax
0x8049e89:   d3 fa                           	sar edx, cl
0x8049e8b:   89 d0                           	mov eax, edx
0x8049e8d:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049e90:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x8049e94:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049e97:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x8049e9e:   eb 15                           	jmp 0x8049eb5 <func_1+0x716>
0x8049ea0:   66 83 bd 20 ff ff ff 00         	cmp word ptr [ebp - 0xe0], 0
0x8049ea8:   75 13                           	jne 0x8049ebd <func_1+0x71e>
0x8049eaa:   c7 45 ac 01 00 00 00            	mov dword ptr [ebp - 0x54], 1
0x8049eb1:   83 6d b8 07                     	sub dword ptr [ebp - 0x48], 7
0x8049eb5:   83 7d b8 fe                     	cmp dword ptr [ebp - 0x48], -2
0x8049eb9:   74 e5                           	je 0x8049ea0 <func_1+0x701>
0x8049ebb:   eb 01                           	jmp 0x8049ebe <func_1+0x71f>
0x8049ebd:   90                              	nop 
0x8049ebe:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049ec1:   0f b7 c8                        	movzx ecx, ax
0x8049ec4:   0f be 85 23 ff ff ff            	movsx eax, byte ptr [ebp - 0xdd]
0x8049ecb:   c1 e0 03                        	shl eax, 3
0x8049ece:   89 c3                           	mov ebx, eax
0x8049ed0:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049ed3:   83 e0 01                        	and eax, 1
0x8049ed6:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049ed9:   0f 92 c0                        	setb al
0x8049edc:   0f b6 c0                        	movzx eax, al
0x8049edf:   ba 00 00 00 00                  	mov edx, 0
0x8049ee4:   f7 75 d8                        	div dword ptr [ebp - 0x28]
0x8049ee7:   39 c3                           	cmp ebx, eax
0x8049ee9:   73 07                           	jae 0x8049ef2 <func_1+0x753>
0x8049eeb:   66 83 7d e2 00                  	cmp word ptr [ebp - 0x1e], 0
0x8049ef0:   74 07                           	je 0x8049ef9 <func_1+0x75a>
0x8049ef2:   b8 01 00 00 00                  	mov eax, 1
0x8049ef7:   eb 05                           	jmp 0x8049efe <func_1+0x75f>
0x8049ef9:   b8 00 00 00 00                  	mov eax, 0
0x8049efe:   89 c2                           	mov edx, eax
0x8049f00:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049f03:   21 d0                           	and eax, edx
0x8049f05:   0f b7 c0                        	movzx eax, ax
0x8049f08:   0f af c8                        	imul ecx, eax
0x8049f0b:   89 ca                           	mov edx, ecx
0x8049f0d:   0f be 85 23 ff ff ff            	movsx eax, byte ptr [ebp - 0xdd]
0x8049f14:   39 c2                           	cmp edx, eax
0x8049f16:   0f 95 c0                        	setne al
0x8049f19:   0f b6 d0                        	movzx edx, al
0x8049f1c:   0f b6 85 0f ff ff ff            	movzx eax, byte ptr [ebp - 0xf1]
0x8049f23:   0f af c2                        	imul eax, edx
0x8049f26:   0b 45 e8                        	or eax, dword ptr [ebp - 0x18]
0x8049f29:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049f2c:   83 45 c4 01                     	add dword ptr [ebp - 0x3c], 1
0x8049f30:   83 7d c4 12                     	cmp dword ptr [ebp - 0x3c], 0x12
0x8049f34:   0f 86 32 fe ff ff               	jbe 0x8049d6c <func_1+0x5cd>
0x8049f3a:   e9 1a 01 00 00                  	jmp 0x804a059 <func_1+0x8ba>
0x8049f3f:   0f b7 85 1e ff ff ff            	movzx eax, word ptr [ebp - 0xe2]
0x8049f46:   83 e8 01                        	sub eax, 1
0x8049f49:   66 89 85 1e ff ff ff            	mov word ptr [ebp - 0xe2], ax
0x8049f50:   c6 45 ef 00                     	mov byte ptr [ebp - 0x11], 0
0x8049f54:   eb 58                           	jmp 0x8049fae <func_1+0x80f>
0x8049f56:   c7 85 18 ff ff ff 8d 53 7c 9b   	mov dword ptr [ebp - 0xe8], 0x9b7c538d
0x8049f60:   c6 45 c3 00                     	mov byte ptr [ebp - 0x3d], 0
0x8049f64:   eb 3a                           	jmp 0x8049fa0 <func_1+0x801>
0x8049f66:   c7 85 70 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x90], 0xffffffff
0x8049f70:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x8049f76:   f7 d0                           	not eax
0x8049f78:   88 45 ee                        	mov byte ptr [ebp - 0x12], al
0x8049f7b:   0f b6 55 ee                     	movzx edx, byte ptr [ebp - 0x12]
0x8049f7f:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049f83:   d0 f8                           	sar al, 1
0x8049f85:   0f be c0                        	movsx eax, al
0x8049f88:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x8049f8b:   0f 92 c0                        	setb al
0x8049f8e:   0f b6 c0                        	movzx eax, al
0x8049f91:   21 d0                           	and eax, edx
0x8049f93:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049f96:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x8049f9a:   83 e8 01                        	sub eax, 1
0x8049f9d:   88 45 c3                        	mov byte ptr [ebp - 0x3d], al
0x8049fa0:   80 7d c3 f9                     	cmp byte ptr [ebp - 0x3d], 0xf9
0x8049fa4:   7c c0                           	jl 0x8049f66 <func_1+0x7c7>
0x8049fa6:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049faa:   80 45 ef 08                     	add byte ptr [ebp - 0x11], 8
0x8049fae:   80 7d ef 0c                     	cmp byte ptr [ebp - 0x11], 0xc
0x8049fb2:   76 a2                           	jbe 0x8049f56 <func_1+0x7b7>
0x8049fb4:   0f be 85 7f ff ff ff            	movsx eax, byte ptr [ebp - 0x81]
0x8049fbb:   0f b7 55 d2                     	movzx edx, word ptr [ebp - 0x2e]
0x8049fbf:   0f bf 4d 90                     	movsx ecx, word ptr [ebp - 0x70]
0x8049fc3:   0f bf 75 92                     	movsx esi, word ptr [ebp - 0x6e]
0x8049fc7:   0f b6 7d df                     	movzx edi, byte ptr [ebp - 0x21]
0x8049fcb:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x8049fd1:   0f b6 5d e0                     	movzx ebx, byte ptr [ebp - 0x20]
0x8049fd5:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x8049fdb:   0f be 7d e1                     	movsx edi, byte ptr [ebp - 0x1f]
0x8049fdf:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x8049fe5:   0f bf 5d e2                     	movsx ebx, word ptr [ebp - 0x1e]
0x8049fe9:   89 9d c4 fe ff ff               	mov dword ptr [ebp - 0x13c], ebx
0x8049fef:   0f b6 7d ee                     	movzx edi, byte ptr [ebp - 0x12]
0x8049ff3:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x8049ff9:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x8049ffd:   0f bf 5d 9e                     	movsx ebx, word ptr [ebp - 0x62]
0x804a001:   50                              	push eax
0x804a002:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a005:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a008:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a00b:   52                              	push edx
0x804a00c:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a00f:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a012:   51                              	push ecx
0x804a013:   56                              	push esi
0x804a014:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a017:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a01a:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a01d:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a023:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a029:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a02f:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a035:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a038:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a03b:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a041:   57                              	push edi
0x804a042:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a045:   53                              	push ebx
0x804a046:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a049:   e8 d8 f5 ff ff                  	call 0x8049626 <set_var>
0x804a04e:   83 c4 5c                        	add esp, 0x5c
0x804a051:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a054:   e9 a6 08 00 00                  	jmp 0x804a8ff <func_1+0x1160>
0x804a059:   83 ad 6c ff ff ff 01            	sub dword ptr [ebp - 0x94], 1
0x804a060:   e9 f6 07 00 00                  	jmp 0x804a85b <func_1+0x10bc>
0x804a065:   c7 45 a0 ff ff ff ff            	mov dword ptr [ebp - 0x60], 0xffffffff
0x804a06c:   c7 85 58 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xa8], 9
0x804a076:   c7 85 54 ff ff ff f7 ff ff ff   	mov dword ptr [ebp - 0xac], 0xfffffff7
0x804a080:   80 7d ef 00                     	cmp byte ptr [ebp - 0x11], 0
0x804a084:   74 4b                           	je 0x804a0d1 <func_1+0x932>
0x804a086:   66 83 6d d2 01                  	sub word ptr [ebp - 0x2e], 1
0x804a08b:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a08f:   83 c8 02                        	or eax, 2
0x804a092:   0f b7 c0                        	movzx eax, ax
0x804a095:   f7 d0                           	not eax
0x804a097:   89 c3                           	mov ebx, eax
0x804a099:   81 7d a0 b4 74 00 00            	cmp dword ptr [ebp - 0x60], 0x74b4
0x804a0a0:   0f 9e c0                        	setle al
0x804a0a3:   0f b6 c0                        	movzx eax, al
0x804a0a6:   39 45 a0                        	cmp dword ptr [ebp - 0x60], eax
0x804a0a9:   0f 95 c0                        	setne al
0x804a0ac:   0f b6 c0                        	movzx eax, al
0x804a0af:   0f b7 d0                        	movzx edx, ax
0x804a0b2:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x804a0b8:   0f b7 c0                        	movzx eax, ax
0x804a0bb:   89 c1                           	mov ecx, eax
0x804a0bd:   d3 fa                           	sar edx, cl
0x804a0bf:   89 d0                           	mov eax, edx
0x804a0c1:   0d b8 9c 00 00                  	or eax, 0x9cb8
0x804a0c6:   39 c3                           	cmp ebx, eax
0x804a0c8:   0f bf 45 9e                     	movsx eax, word ptr [ebp - 0x62]
0x804a0cc:   3d 3b bd 5e cb                  	cmp eax, 0xcb5ebd3b
0x804a0d1:   c7 45 e8 ce ff ff ff            	mov dword ptr [ebp - 0x18], 0xffffffce
0x804a0d8:   83 85 60 ff ff ff 01            	add dword ptr [ebp - 0xa0], 1
0x804a0df:   83 7d 88 00                     	cmp dword ptr [ebp - 0x78], 0
0x804a0e3:   0f 84 0e 05 00 00               	je 0x804a5f7 <func_1+0xe58>
0x804a0e9:   c6 85 43 ff ff ff 01            	mov byte ptr [ebp - 0xbd], 1
0x804a0f0:   66 c7 85 40 ff ff ff c6 e2      	mov word ptr [ebp - 0xc0], 0xe2c6
0x804a0f9:   66 c7 85 3e ff ff ff a0 f3      	mov word ptr [ebp - 0xc2], 0xf3a0
0x804a102:   c7 85 38 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xc8], 1
0x804a10c:   c6 85 37 ff ff ff f8            	mov byte ptr [ebp - 0xc9], 0xf8
0x804a113:   c6 85 43 ff ff ff fc            	mov byte ptr [ebp - 0xbd], 0xfc
0x804a11a:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a120:   0f be d0                        	movsx edx, al
0x804a123:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a126:   0f be c0                        	movsx eax, al
0x804a129:   89 c1                           	mov ecx, eax
0x804a12b:   d3 e2                           	shl edx, cl
0x804a12d:   0f bf 85 40 ff ff ff            	movsx eax, word ptr [ebp - 0xc0]
0x804a134:   23 85 70 ff ff ff               	and eax, dword ptr [ebp - 0x90]
0x804a13a:   39 c2                           	cmp edx, eax
0x804a13c:   0f 84 b1 02 00 00               	je 0x804a3f3 <func_1+0xc54>
0x804a142:   c7 85 30 ff ff ff 70 86 f9 3a   	mov dword ptr [ebp - 0xd0], 0x3af98670
0x804a14c:   c7 85 2c ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xd4], 2
0x804a156:   83 bd 30 ff ff ff 00            	cmp dword ptr [ebp - 0xd0], 0
0x804a15d:   0f 84 23 01 00 00               	je 0x804a286 <func_1+0xae7>
0x804a163:   c7 85 24 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xdc], 1
0x804a16d:   83 45 84 01                     	add dword ptr [ebp - 0x7c], 1
0x804a171:   0f bf 85 3e ff ff ff            	movsx eax, word ptr [ebp - 0xc2]
0x804a178:   8b 55 a0                        	mov edx, dword ptr [ebp - 0x60]
0x804a17b:   0f bf d2                        	movsx edx, dx
0x804a17e:   c1 e2 09                        	shl edx, 9
0x804a181:   85 d2                           	test edx, edx
0x804a183:   0f 95 c2                        	setne dl
0x804a186:   0f b6 d2                        	movzx edx, dl
0x804a189:   8b 4d c4                        	mov ecx, dword ptr [ebp - 0x3c]
0x804a18c:   21 ca                           	and edx, ecx
0x804a18e:   66 89 55 d2                     	mov word ptr [ebp - 0x2e], dx
0x804a192:   0f b7 4d d2                     	movzx ecx, word ptr [ebp - 0x2e]
0x804a196:   8b 95 30 ff ff ff               	mov edx, dword ptr [ebp - 0xd0]
0x804a19c:   0f b7 d2                        	movzx edx, dx
0x804a19f:   29 d1                           	sub ecx, edx
0x804a1a1:   89 ca                           	mov edx, ecx
0x804a1a3:   39 d0                           	cmp eax, edx
0x804a1a5:   0f 9f c0                        	setg al
0x804a1a8:   0f b6 c0                        	movzx eax, al
0x804a1ab:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a1ae:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x804a1b2:   75 04                           	jne 0x804a1b8 <func_1+0xa19>
0x804a1b4:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x804a1b8:   b8 01 00 00 00                  	mov eax, 1
0x804a1bd:   66 0f be 8d 67 ff ff ff         	movsx cx, byte ptr [ebp - 0x99]
0x804a1c5:   ba 00 00 00 00                  	mov edx, 0
0x804a1ca:   66 f7 f1                        	div cx
0x804a1cd:   89 d0                           	mov eax, edx
0x804a1cf:   0f b7 c0                        	movzx eax, ax
0x804a1d2:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x804a1d8:   0f 95 c0                        	setne al
0x804a1db:   0f b6 c0                        	movzx eax, al
0x804a1de:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a1e1:   0f be 85 7f ff ff ff            	movsx eax, byte ptr [ebp - 0x81]
0x804a1e8:   0f b7 55 d2                     	movzx edx, word ptr [ebp - 0x2e]
0x804a1ec:   0f bf 4d 90                     	movsx ecx, word ptr [ebp - 0x70]
0x804a1f0:   0f bf 75 92                     	movsx esi, word ptr [ebp - 0x6e]
0x804a1f4:   0f b6 7d df                     	movzx edi, byte ptr [ebp - 0x21]
0x804a1f8:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x804a1fe:   0f b6 5d e0                     	movzx ebx, byte ptr [ebp - 0x20]
0x804a202:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x804a208:   0f be 7d e1                     	movsx edi, byte ptr [ebp - 0x1f]
0x804a20c:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x804a212:   0f bf 5d e2                     	movsx ebx, word ptr [ebp - 0x1e]
0x804a216:   89 9d c4 fe ff ff               	mov dword ptr [ebp - 0x13c], ebx
0x804a21c:   0f b6 7d ee                     	movzx edi, byte ptr [ebp - 0x12]
0x804a220:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x804a226:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x804a22a:   0f bf 5d 9e                     	movsx ebx, word ptr [ebp - 0x62]
0x804a22e:   50                              	push eax
0x804a22f:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a232:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a235:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a238:   52                              	push edx
0x804a239:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a23c:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a23f:   51                              	push ecx
0x804a240:   56                              	push esi
0x804a241:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a244:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a247:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a24a:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a250:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a256:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a25c:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a262:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a265:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a268:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a26e:   57                              	push edi
0x804a26f:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a272:   53                              	push ebx
0x804a273:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a276:   e8 ab f3 ff ff                  	call 0x8049626 <set_var>
0x804a27b:   83 c4 5c                        	add esp, 0x5c
0x804a27e:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a281:   e9 79 06 00 00                  	jmp 0x804a8ff <func_1+0x1160>
0x804a286:   c6 85 2b ff ff ff e8            	mov byte ptr [ebp - 0xd5], 0xe8
0x804a28d:   83 85 2c ff ff ff 01            	add dword ptr [ebp - 0xd4], 1
0x804a294:   c7 45 d8 00 00 00 00            	mov dword ptr [ebp - 0x28], 0
0x804a29b:   83 7d d8 05                     	cmp dword ptr [ebp - 0x28], 5
0x804a29f:   0f 86 a9 00 00 00               	jbe 0x804a34e <func_1+0xbaf>
0x804a2a5:   0f be 85 7f ff ff ff            	movsx eax, byte ptr [ebp - 0x81]
0x804a2ac:   0f b7 55 d2                     	movzx edx, word ptr [ebp - 0x2e]
0x804a2b0:   0f bf 4d 90                     	movsx ecx, word ptr [ebp - 0x70]
0x804a2b4:   0f bf 75 92                     	movsx esi, word ptr [ebp - 0x6e]
0x804a2b8:   0f b6 7d df                     	movzx edi, byte ptr [ebp - 0x21]
0x804a2bc:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x804a2c2:   0f b6 5d e0                     	movzx ebx, byte ptr [ebp - 0x20]
0x804a2c6:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x804a2cc:   0f be 7d e1                     	movsx edi, byte ptr [ebp - 0x1f]
0x804a2d0:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x804a2d6:   0f bf 5d e2                     	movsx ebx, word ptr [ebp - 0x1e]
0x804a2da:   89 9d c4 fe ff ff               	mov dword ptr [ebp - 0x13c], ebx
0x804a2e0:   0f b6 7d ee                     	movzx edi, byte ptr [ebp - 0x12]
0x804a2e4:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x804a2ea:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x804a2ee:   0f bf 5d 9e                     	movsx ebx, word ptr [ebp - 0x62]
0x804a2f2:   50                              	push eax
0x804a2f3:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a2f6:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a2f9:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a2fc:   52                              	push edx
0x804a2fd:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a300:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a303:   51                              	push ecx
0x804a304:   56                              	push esi
0x804a305:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a308:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a30b:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a30e:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a314:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a31a:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a320:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a326:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a329:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a32c:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a332:   57                              	push edi
0x804a333:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a336:   53                              	push ebx
0x804a337:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a33a:   e8 e7 f2 ff ff                  	call 0x8049626 <set_var>
0x804a33f:   83 c4 5c                        	add esp, 0x5c
0x804a342:   0f b6 85 2b ff ff ff            	movzx eax, byte ptr [ebp - 0xd5]
0x804a349:   e9 b1 05 00 00                  	jmp 0x804a8ff <func_1+0x1160>
0x804a34e:   0f be 85 7f ff ff ff            	movsx eax, byte ptr [ebp - 0x81]
0x804a355:   0f b7 55 d2                     	movzx edx, word ptr [ebp - 0x2e]
0x804a359:   0f bf 4d 90                     	movsx ecx, word ptr [ebp - 0x70]
0x804a35d:   0f bf 75 92                     	movsx esi, word ptr [ebp - 0x6e]
0x804a361:   0f b6 7d df                     	movzx edi, byte ptr [ebp - 0x21]
0x804a365:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x804a36b:   0f b6 5d e0                     	movzx ebx, byte ptr [ebp - 0x20]
0x804a36f:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x804a375:   0f be 7d e1                     	movsx edi, byte ptr [ebp - 0x1f]
0x804a379:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x804a37f:   0f bf 5d e2                     	movsx ebx, word ptr [ebp - 0x1e]
0x804a383:   89 9d c4 fe ff ff               	mov dword ptr [ebp - 0x13c], ebx
0x804a389:   0f b6 7d ee                     	movzx edi, byte ptr [ebp - 0x12]
0x804a38d:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x804a393:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x804a397:   0f bf 5d 9e                     	movsx ebx, word ptr [ebp - 0x62]
0x804a39b:   50                              	push eax
0x804a39c:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a39f:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a3a2:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a3a5:   52                              	push edx
0x804a3a6:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a3a9:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a3ac:   51                              	push ecx
0x804a3ad:   56                              	push esi
0x804a3ae:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a3b1:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a3b4:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a3b7:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a3bd:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a3c3:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a3c9:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a3cf:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a3d2:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a3d5:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a3db:   57                              	push edi
0x804a3dc:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a3df:   53                              	push ebx
0x804a3e0:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a3e3:   e8 3e f2 ff ff                  	call 0x8049626 <set_var>
0x804a3e8:   83 c4 5c                        	add esp, 0x5c
0x804a3eb:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a3ee:   e9 0c 05 00 00                  	jmp 0x804a8ff <func_1+0x1160>
0x804a3f3:   66 c7 45 90 14 00               	mov word ptr [ebp - 0x70], 0x14
0x804a3f9:   66 83 7d 90 1d                  	cmp word ptr [ebp - 0x70], 0x1d
0x804a3fe:   0f 8e a6 00 00 00               	jle 0x804a4aa <func_1+0xd0b>
0x804a404:   0f be 85 7f ff ff ff            	movsx eax, byte ptr [ebp - 0x81]
0x804a40b:   0f b7 55 d2                     	movzx edx, word ptr [ebp - 0x2e]
0x804a40f:   0f bf 4d 90                     	movsx ecx, word ptr [ebp - 0x70]
0x804a413:   0f bf 75 92                     	movsx esi, word ptr [ebp - 0x6e]
0x804a417:   0f b6 5d df                     	movzx ebx, byte ptr [ebp - 0x21]
0x804a41b:   89 9d d0 fe ff ff               	mov dword ptr [ebp - 0x130], ebx
0x804a421:   0f b6 7d e0                     	movzx edi, byte ptr [ebp - 0x20]
0x804a425:   89 bd cc fe ff ff               	mov dword ptr [ebp - 0x134], edi
0x804a42b:   0f be 5d e1                     	movsx ebx, byte ptr [ebp - 0x1f]
0x804a42f:   89 9d c8 fe ff ff               	mov dword ptr [ebp - 0x138], ebx
0x804a435:   0f bf 7d e2                     	movsx edi, word ptr [ebp - 0x1e]
0x804a439:   89 bd c4 fe ff ff               	mov dword ptr [ebp - 0x13c], edi
0x804a43f:   0f b6 5d ee                     	movzx ebx, byte ptr [ebp - 0x12]
0x804a443:   89 9d c0 fe ff ff               	mov dword ptr [ebp - 0x140], ebx
0x804a449:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x804a44d:   0f bf 5d 9e                     	movsx ebx, word ptr [ebp - 0x62]
0x804a451:   50                              	push eax
0x804a452:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a455:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a458:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a45b:   52                              	push edx
0x804a45c:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a45f:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a462:   51                              	push ecx
0x804a463:   56                              	push esi
0x804a464:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a467:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a46a:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a46d:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a473:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a479:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a47f:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a485:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a488:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a48b:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a491:   57                              	push edi
0x804a492:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a495:   53                              	push ebx
0x804a496:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a499:   e8 88 f1 ff ff                  	call 0x8049626 <set_var>
0x804a49e:   83 c4 5c                        	add esp, 0x5c
0x804a4a1:   0f b6 45 ee                     	movzx eax, byte ptr [ebp - 0x12]
0x804a4a5:   e9 55 04 00 00                  	jmp 0x804a8ff <func_1+0x1160>
0x804a4aa:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a4ad:   09 45 cc                        	or dword ptr [ebp - 0x34], eax
0x804a4b0:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a4b3:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x804a4b6:   74 06                           	je 0x804a4be <func_1+0xd1f>
0x804a4b8:   80 7d e1 00                     	cmp byte ptr [ebp - 0x1f], 0
0x804a4bc:   74 07                           	je 0x804a4c5 <func_1+0xd26>
0x804a4be:   b8 01 00 00 00                  	mov eax, 1
0x804a4c3:   eb 05                           	jmp 0x804a4ca <func_1+0xd2b>
0x804a4c5:   b8 00 00 00 00                  	mov eax, 0
0x804a4ca:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a4cd:   0f be 45 c3                     	movsx eax, byte ptr [ebp - 0x3d]
0x804a4d1:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x804a4d4:   0f 94 c0                        	sete al
0x804a4d7:   0f b6 c0                        	movzx eax, al
0x804a4da:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804a4e0:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a4e6:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a4e9:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x804a4ed:   7f 0f                           	jg 0x804a4fe <func_1+0xd5f>
0x804a4ef:   83 bd 38 ff ff ff 00            	cmp dword ptr [ebp - 0xc8], 0
0x804a4f6:   75 06                           	jne 0x804a4fe <func_1+0xd5f>
0x804a4f8:   83 7d 80 00                     	cmp dword ptr [ebp - 0x80], 0
0x804a4fc:   74 07                           	je 0x804a505 <func_1+0xd66>
0x804a4fe:   ba 01 00 00 00                  	mov edx, 1
0x804a503:   eb 05                           	jmp 0x804a50a <func_1+0xd6b>
0x804a505:   ba 00 00 00 00                  	mov edx, 0
0x804a50a:   0f b6 85 37 ff ff ff            	movzx eax, byte ptr [ebp - 0xc9]
0x804a511:   39 c2                           	cmp edx, eax
0x804a513:   7e 07                           	jle 0x804a51c <func_1+0xd7d>
0x804a515:   ba 9d ff ff ff                  	mov edx, 0xffffff9d
0x804a51a:   eb 05                           	jmp 0x804a521 <func_1+0xd82>
0x804a51c:   ba 9c ff ff ff                  	mov edx, 0xffffff9c
0x804a521:   0f be 45 c3                     	movsx eax, byte ptr [ebp - 0x3d]
0x804a525:   01 d0                           	add eax, edx
0x804a527:   83 f8 02                        	cmp eax, 2
0x804a52a:   0f 96 c0                        	setbe al
0x804a52d:   0f b6 c0                        	movzx eax, al
0x804a530:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a533:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x804a537:   75 06                           	jne 0x804a53f <func_1+0xda0>
0x804a539:   80 7d ee 00                     	cmp byte ptr [ebp - 0x12], 0
0x804a53d:   74 07                           	je 0x804a546 <func_1+0xda7>
0x804a53f:   b8 01 00 00 00                  	mov eax, 1
0x804a544:   eb 05                           	jmp 0x804a54b <func_1+0xdac>
0x804a546:   b8 00 00 00 00                  	mov eax, 0
0x804a54b:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a54e:   0f be 85 7f ff ff ff            	movsx eax, byte ptr [ebp - 0x81]
0x804a555:   0f b7 55 d2                     	movzx edx, word ptr [ebp - 0x2e]
0x804a559:   0f bf 4d 90                     	movsx ecx, word ptr [ebp - 0x70]
0x804a55d:   0f bf 75 92                     	movsx esi, word ptr [ebp - 0x6e]
0x804a561:   0f b6 7d df                     	movzx edi, byte ptr [ebp - 0x21]
0x804a565:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x804a56b:   0f b6 5d e0                     	movzx ebx, byte ptr [ebp - 0x20]
0x804a56f:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x804a575:   0f be 7d e1                     	movsx edi, byte ptr [ebp - 0x1f]
0x804a579:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x804a57f:   0f bf 5d e2                     	movsx ebx, word ptr [ebp - 0x1e]
0x804a583:   89 9d c4 fe ff ff               	mov dword ptr [ebp - 0x13c], ebx
0x804a589:   0f b6 7d ee                     	movzx edi, byte ptr [ebp - 0x12]
0x804a58d:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x804a593:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x804a597:   0f bf 5d 9e                     	movsx ebx, word ptr [ebp - 0x62]
0x804a59b:   50                              	push eax
0x804a59c:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a59f:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a5a2:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a5a5:   52                              	push edx
0x804a5a6:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a5a9:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a5ac:   51                              	push ecx
0x804a5ad:   56                              	push esi
0x804a5ae:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a5b1:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a5b4:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a5b7:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a5bd:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a5c3:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a5c9:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a5cf:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a5d2:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a5d5:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a5db:   57                              	push edi
0x804a5dc:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a5df:   53                              	push ebx
0x804a5e0:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a5e3:   e8 3e f0 ff ff                  	call 0x8049626 <set_var>
0x804a5e8:   83 c4 5c                        	add esp, 0x5c
0x804a5eb:   0f be 85 7f ff ff ff            	movsx eax, byte ptr [ebp - 0x81]
0x804a5f2:   e9 08 03 00 00                  	jmp 0x804a8ff <func_1+0x1160>
0x804a5f7:   c6 85 53 ff ff ff f7            	mov byte ptr [ebp - 0xad], 0xf7
0x804a5fe:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x804a605:   e9 47 02 00 00                  	jmp 0x804a851 <func_1+0x10b2>
0x804a60a:   c7 85 4c ff ff ff 6e 16 e1 76   	mov dword ptr [ebp - 0xb4], 0x76e1166e
0x804a614:   c6 85 4b ff ff ff 01            	mov byte ptr [ebp - 0xb5], 1
0x804a61b:   0f bf 45 9e                     	movsx eax, word ptr [ebp - 0x62]
0x804a61f:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a622:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a628:   83 f0 03                        	xor eax, 3
0x804a62b:   89 85 58 ff ff ff               	mov dword ptr [ebp - 0xa8], eax
0x804a631:   8b 8d 58 ff ff ff               	mov ecx, dword ptr [ebp - 0xa8]
0x804a637:   ba 11 4e d5 20                  	mov edx, 0x20d54e11
0x804a63c:   89 c8                           	mov eax, ecx
0x804a63e:   f7 ea                           	imul edx
0x804a640:   c1 fa 1c                        	sar edx, 0x1c
0x804a643:   89 c8                           	mov eax, ecx
0x804a645:   c1 f8 1f                        	sar eax, 0x1f
0x804a648:   29 c2                           	sub edx, eax
0x804a64a:   89 d0                           	mov eax, edx
0x804a64c:   69 c0 c8 6e c0 7c               	imul eax, eax, 0x7cc06ec8
0x804a652:   29 c1                           	sub ecx, eax
0x804a654:   66 c7 45 e2 01 00               	mov word ptr [ebp - 0x1e], 1
0x804a65a:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x804a65e:   f6 65 ef                        	mul byte ptr [ebp - 0x11]
0x804a661:   0f be c0                        	movsx eax, al
0x804a664:   c1 e0 03                        	shl eax, 3
0x804a667:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a66a:   0f b6 b5 4b ff ff ff            	movzx esi, byte ptr [ebp - 0xb5]
0x804a671:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a674:   ba 00 00 00 00                  	mov edx, 0
0x804a679:   f7 f6                           	div esi
0x804a67b:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a67e:   c7 85 70 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x90], 0
0x804a688:   83 bd 70 ff ff ff f9            	cmp dword ptr [ebp - 0x90], -7
0x804a68f:   0f 8d 86 01 00 00               	jge 0x804a81b <func_1+0x107c>
0x804a695:   c7 85 44 ff ff ff 8a b9 1f 29   	mov dword ptr [ebp - 0xbc], 0x291fb98a
0x804a69f:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x804a6a3:   0f 95 c0                        	setne al
0x804a6a6:   0f b6 d0                        	movzx edx, al
0x804a6a9:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a6ac:   98                              	cwde 
0x804a6ad:   89 c1                           	mov ecx, eax
0x804a6af:   d3 e2                           	shl edx, cl
0x804a6b1:   89 d0                           	mov eax, edx
0x804a6b3:   0f be d0                        	movsx edx, al
0x804a6b6:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x804a6bc:   0f be c0                        	movsx eax, al
0x804a6bf:   0f af c2                        	imul eax, edx
0x804a6c2:   85 c0                           	test eax, eax
0x804a6c4:   75 06                           	jne 0x804a6cc <func_1+0xf2d>
0x804a6c6:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x804a6ca:   74 07                           	je 0x804a6d3 <func_1+0xf34>
0x804a6cc:   b8 01 00 00 00                  	mov eax, 1
0x804a6d1:   eb 05                           	jmp 0x804a6d8 <func_1+0xf39>
0x804a6d3:   b8 00 00 00 00                  	mov eax, 0
0x804a6d8:   3b 45 8c                        	cmp eax, dword ptr [ebp - 0x74]
0x804a6db:   0f 9c c0                        	setl al
0x804a6de:   0f b6 c0                        	movzx eax, al
0x804a6e1:   89 85 58 ff ff ff               	mov dword ptr [ebp - 0xa8], eax
0x804a6e7:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804a6ed:   0f b6 d0                        	movzx edx, al
0x804a6f0:   89 d0                           	mov eax, edx
0x804a6f2:   c1 e0 08                        	shl eax, 8
0x804a6f5:   29 d0                           	sub eax, edx
0x804a6f7:   89 c2                           	mov edx, eax
0x804a6f9:   0f b6 85 4b ff ff ff            	movzx eax, byte ptr [ebp - 0xb5]
0x804a700:   39 c2                           	cmp edx, eax
0x804a702:   7e 07                           	jle 0x804a70b <func_1+0xf6c>
0x804a704:   ba 07 00 00 00                  	mov edx, 7
0x804a709:   eb 05                           	jmp 0x804a710 <func_1+0xf71>
0x804a70b:   ba 06 00 00 00                  	mov edx, 6
0x804a710:   0f b6 85 53 ff ff ff            	movzx eax, byte ptr [ebp - 0xad]
0x804a717:   39 c2                           	cmp edx, eax
0x804a719:   b8 01 00 00 00                  	mov eax, 1
0x804a71e:   83 c8 3e                        	or eax, 0x3e
0x804a721:   0f b6 d0                        	movzx edx, al
0x804a724:   0f b6 85 53 ff ff ff            	movzx eax, byte ptr [ebp - 0xad]
0x804a72b:   89 c1                           	mov ecx, eax
0x804a72d:   d3 fa                           	sar edx, cl
0x804a72f:   89 d0                           	mov eax, edx
0x804a731:   89 85 54 ff ff ff               	mov dword ptr [ebp - 0xac], eax
0x804a737:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a73d:   0b 85 4c ff ff ff               	or eax, dword ptr [ebp - 0xb4]
0x804a743:   0f bf 75 90                     	movsx esi, word ptr [ebp - 0x70]
0x804a747:   99                              	cdq 
0x804a748:   f7 fe                           	idiv esi
0x804a74a:   39 85 44 ff ff ff               	cmp dword ptr [ebp - 0xbc], eax
0x804a750:   81 bd 58 ff ff ff 12 f5 1e cb   	cmp dword ptr [ebp - 0xa8], 0xcb1ef512
0x804a75a:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x804a75e:   83 c0 01                        	add eax, 1
0x804a761:   98                              	cwde 
0x804a762:   c1 e0 0f                        	shl eax, 0xf
0x804a765:   89 85 44 ff ff ff               	mov dword ptr [ebp - 0xbc], eax
0x804a76b:   c7 45 d4 3f 00 00 00            	mov dword ptr [ebp - 0x2c], 0x3f
0x804a772:   0f be 85 7f ff ff ff            	movsx eax, byte ptr [ebp - 0x81]
0x804a779:   0f b7 55 d2                     	movzx edx, word ptr [ebp - 0x2e]
0x804a77d:   0f bf 4d 90                     	movsx ecx, word ptr [ebp - 0x70]
0x804a781:   0f bf 75 92                     	movsx esi, word ptr [ebp - 0x6e]
0x804a785:   0f b6 5d df                     	movzx ebx, byte ptr [ebp - 0x21]
0x804a789:   89 9d d0 fe ff ff               	mov dword ptr [ebp - 0x130], ebx
0x804a78f:   0f b6 7d e0                     	movzx edi, byte ptr [ebp - 0x20]
0x804a793:   89 bd cc fe ff ff               	mov dword ptr [ebp - 0x134], edi
0x804a799:   0f be 5d e1                     	movsx ebx, byte ptr [ebp - 0x1f]
0x804a79d:   89 9d c8 fe ff ff               	mov dword ptr [ebp - 0x138], ebx
0x804a7a3:   0f bf 7d e2                     	movsx edi, word ptr [ebp - 0x1e]
0x804a7a7:   89 bd c4 fe ff ff               	mov dword ptr [ebp - 0x13c], edi
0x804a7ad:   0f b6 5d ee                     	movzx ebx, byte ptr [ebp - 0x12]
0x804a7b1:   89 9d c0 fe ff ff               	mov dword ptr [ebp - 0x140], ebx
0x804a7b7:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x804a7bb:   0f bf 5d 9e                     	movsx ebx, word ptr [ebp - 0x62]
0x804a7bf:   50                              	push eax
0x804a7c0:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a7c3:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a7c6:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a7c9:   52                              	push edx
0x804a7ca:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a7cd:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a7d0:   51                              	push ecx
0x804a7d1:   56                              	push esi
0x804a7d2:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a7d5:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a7d8:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a7db:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a7e1:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a7e7:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a7ed:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a7f3:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a7f6:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a7f9:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a7ff:   57                              	push edi
0x804a800:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a803:   53                              	push ebx
0x804a804:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a807:   e8 1a ee ff ff                  	call 0x8049626 <set_var>
0x804a80c:   83 c4 5c                        	add esp, 0x5c
0x804a80f:   0f b6 85 4b ff ff ff            	movzx eax, byte ptr [ebp - 0xb5]
0x804a816:   e9 e4 00 00 00                  	jmp 0x804a8ff <func_1+0x1160>
0x804a81b:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a81e:   98                              	cwde 
0x804a81f:   c1 e0 0f                        	shl eax, 0xf
0x804a822:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x804a825:   0f 96 c0                        	setbe al
0x804a828:   0f b6 c0                        	movzx eax, al
0x804a82b:   66 69 c0 0c 4e                  	imul ax, ax, 0x4e0c
0x804a830:   0f b7 d0                        	movzx edx, ax
0x804a833:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x804a837:   01 d0                           	add eax, edx
0x804a839:   39 85 5c ff ff ff               	cmp dword ptr [ebp - 0xa4], eax
0x804a83f:   0f 9c c0                        	setl al
0x804a842:   0f b6 c0                        	movzx eax, al
0x804a845:   09 45 d4                        	or dword ptr [ebp - 0x2c], eax
0x804a848:   66 83 7d 9e 00                  	cmp word ptr [ebp - 0x62], 0
0x804a84d:   83 45 a0 07                     	add dword ptr [ebp - 0x60], 7
0x804a851:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x804a855:   0f 84 af fd ff ff               	je 0x804a60a <func_1+0xe6b>
0x804a85b:   0f be 85 7f ff ff ff            	movsx eax, byte ptr [ebp - 0x81]
0x804a862:   0f b7 55 d2                     	movzx edx, word ptr [ebp - 0x2e]
0x804a866:   0f bf 4d 90                     	movsx ecx, word ptr [ebp - 0x70]
0x804a86a:   0f bf 75 92                     	movsx esi, word ptr [ebp - 0x6e]
0x804a86e:   0f b6 7d df                     	movzx edi, byte ptr [ebp - 0x21]
0x804a872:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x804a878:   0f b6 5d e0                     	movzx ebx, byte ptr [ebp - 0x20]
0x804a87c:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x804a882:   0f be 7d e1                     	movsx edi, byte ptr [ebp - 0x1f]
0x804a886:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x804a88c:   0f bf 5d e2                     	movsx ebx, word ptr [ebp - 0x1e]
0x804a890:   89 9d c4 fe ff ff               	mov dword ptr [ebp - 0x13c], ebx
0x804a896:   0f b6 7d ee                     	movzx edi, byte ptr [ebp - 0x12]
0x804a89a:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x804a8a0:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x804a8a4:   0f bf 5d 9e                     	movsx ebx, word ptr [ebp - 0x62]
0x804a8a8:   50                              	push eax
0x804a8a9:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a8ac:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a8af:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a8b2:   52                              	push edx
0x804a8b3:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a8b6:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a8b9:   51                              	push ecx
0x804a8ba:   56                              	push esi
0x804a8bb:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a8be:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a8c1:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a8c4:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a8ca:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a8d0:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a8d6:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a8dc:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a8df:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a8e2:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a8e8:   57                              	push edi
0x804a8e9:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a8ec:   53                              	push ebx
0x804a8ed:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a8f0:   e8 31 ed ff ff                  	call 0x8049626 <set_var>
0x804a8f5:   83 c4 5c                        	add esp, 0x5c
0x804a8f8:   0f be 85 7e ff ff ff            	movsx eax, byte ptr [ebp - 0x82]
0x804a8ff:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a902:   5b                              	pop ebx
0x804a903:   5e                              	pop esi
0x804a904:   5f                              	pop edi
0x804a905:   5d                              	pop ebp
0x804a906:   c3                              	ret 
; function: main at 0x804a907 -- 0x804ac43
0x804a907:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a90b:   83 e4 f0                        	and esp, 0xfffffff0
0x804a90e:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a911:   55                              	push ebp
0x804a912:   89 e5                           	mov ebp, esp
0x804a914:   53                              	push ebx
0x804a915:   51                              	push ecx
0x804a916:   83 ec 10                        	sub esp, 0x10
0x804a919:   e8 72 da ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a91e:   81 c3 e2 26 00 00               	add ebx, 0x26e2
0x804a924:   89 c8                           	mov eax, ecx
0x804a926:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a92d:   83 38 02                        	cmp dword ptr [eax], 2
0x804a930:   75 26                           	jne 0x804a958 <main+0x51>
0x804a932:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a935:   83 c0 04                        	add eax, 4
0x804a938:   8b 00                           	mov eax, dword ptr [eax]
0x804a93a:   83 ec 08                        	sub esp, 8
0x804a93d:   8d 93 28 dd ff ff               	lea edx, [ebx - 0x22d8]
0x804a943:   52                              	push edx
0x804a944:   50                              	push eax
0x804a945:   e8 b6 d9 ff ff                  	call 0x8048300 <strcmp>
0x804a94a:   83 c4 10                        	add esp, 0x10
0x804a94d:   85 c0                           	test eax, eax
0x804a94f:   75 07                           	jne 0x804a958 <main+0x51>
0x804a951:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a958:   e8 f9 da ff ff                  	call 0x8048456 <platform_main_begin>
0x804a95d:   e8 09 eb ff ff                  	call 0x804946b <crc32_gentab>
0x804a962:   e8 38 ee ff ff                  	call 0x804979f <func_1>
0x804a967:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804a96d:   89 c2                           	mov edx, eax
0x804a96f:   83 ec 04                        	sub esp, 4
0x804a972:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a975:   8d 83 2a dd ff ff               	lea eax, [ebx - 0x22d6]
0x804a97b:   50                              	push eax
0x804a97c:   52                              	push edx
0x804a97d:   e8 f5 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a982:   83 c4 10                        	add esp, 0x10
0x804a985:   0f b7 83 a4 04 00 00            	movzx eax, word ptr [ebx + 0x4a4]
0x804a98c:   98                              	cwde 
0x804a98d:   83 ec 04                        	sub esp, 4
0x804a990:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a993:   8d 93 2e dd ff ff               	lea edx, [ebx - 0x22d2]
0x804a999:   52                              	push edx
0x804a99a:   50                              	push eax
0x804a99b:   e8 d7 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9a0:   83 c4 10                        	add esp, 0x10
0x804a9a3:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a9a9:   83 ec 04                        	sub esp, 4
0x804a9ac:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9af:   8d 93 32 dd ff ff               	lea edx, [ebx - 0x22ce]
0x804a9b5:   52                              	push edx
0x804a9b6:   50                              	push eax
0x804a9b7:   e8 bb eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9bc:   83 c4 10                        	add esp, 0x10
0x804a9bf:   0f b6 83 2c 00 00 00            	movzx eax, byte ptr [ebx + 0x2c]
0x804a9c6:   0f b6 c0                        	movzx eax, al
0x804a9c9:   83 ec 04                        	sub esp, 4
0x804a9cc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9cf:   8d 93 36 dd ff ff               	lea edx, [ebx - 0x22ca]
0x804a9d5:   52                              	push edx
0x804a9d6:   50                              	push eax
0x804a9d7:   e8 9b eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9dc:   83 c4 10                        	add esp, 0x10
0x804a9df:   0f b6 83 2d 00 00 00            	movzx eax, byte ptr [ebx + 0x2d]
0x804a9e6:   0f b6 c0                        	movzx eax, al
0x804a9e9:   83 ec 04                        	sub esp, 4
0x804a9ec:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9ef:   8d 93 3b dd ff ff               	lea edx, [ebx - 0x22c5]
0x804a9f5:   52                              	push edx
0x804a9f6:   50                              	push eax
0x804a9f7:   e8 7b eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9fc:   83 c4 10                        	add esp, 0x10
0x804a9ff:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804aa05:   89 c2                           	mov edx, eax
0x804aa07:   83 ec 04                        	sub esp, 4
0x804aa0a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa0d:   8d 83 40 dd ff ff               	lea eax, [ebx - 0x22c0]
0x804aa13:   50                              	push eax
0x804aa14:   52                              	push edx
0x804aa15:   e8 5d eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa1a:   83 c4 10                        	add esp, 0x10
0x804aa1d:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804aa23:   83 ec 04                        	sub esp, 4
0x804aa26:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa29:   8d 93 45 dd ff ff               	lea edx, [ebx - 0x22bb]
0x804aa2f:   52                              	push edx
0x804aa30:   50                              	push eax
0x804aa31:   e8 41 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa36:   83 c4 10                        	add esp, 0x10
0x804aa39:   0f b7 83 34 00 00 00            	movzx eax, word ptr [ebx + 0x34]
0x804aa40:   98                              	cwde 
0x804aa41:   83 ec 04                        	sub esp, 4
0x804aa44:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa47:   8d 93 4a dd ff ff               	lea edx, [ebx - 0x22b6]
0x804aa4d:   52                              	push edx
0x804aa4e:   50                              	push eax
0x804aa4f:   e8 23 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa54:   83 c4 10                        	add esp, 0x10
0x804aa57:   0f b6 83 36 00 00 00            	movzx eax, byte ptr [ebx + 0x36]
0x804aa5e:   0f be c0                        	movsx eax, al
0x804aa61:   83 ec 04                        	sub esp, 4
0x804aa64:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa67:   8d 93 4f dd ff ff               	lea edx, [ebx - 0x22b1]
0x804aa6d:   52                              	push edx
0x804aa6e:   50                              	push eax
0x804aa6f:   e8 03 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa74:   83 c4 10                        	add esp, 0x10
0x804aa77:   0f b6 83 37 00 00 00            	movzx eax, byte ptr [ebx + 0x37]
0x804aa7e:   0f b6 c0                        	movzx eax, al
0x804aa81:   83 ec 04                        	sub esp, 4
0x804aa84:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa87:   8d 93 54 dd ff ff               	lea edx, [ebx - 0x22ac]
0x804aa8d:   52                              	push edx
0x804aa8e:   50                              	push eax
0x804aa8f:   e8 e3 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa94:   83 c4 10                        	add esp, 0x10
0x804aa97:   0f b6 83 38 00 00 00            	movzx eax, byte ptr [ebx + 0x38]
0x804aa9e:   0f b6 c0                        	movzx eax, al
0x804aaa1:   83 ec 04                        	sub esp, 4
0x804aaa4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaa7:   8d 93 5a dd ff ff               	lea edx, [ebx - 0x22a6]
0x804aaad:   52                              	push edx
0x804aaae:   50                              	push eax
0x804aaaf:   e8 c3 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aab4:   83 c4 10                        	add esp, 0x10
0x804aab7:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804aabd:   83 ec 04                        	sub esp, 4
0x804aac0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aac3:   8d 93 60 dd ff ff               	lea edx, [ebx - 0x22a0]
0x804aac9:   52                              	push edx
0x804aaca:   50                              	push eax
0x804aacb:   e8 a7 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aad0:   83 c4 10                        	add esp, 0x10
0x804aad3:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804aad9:   89 c2                           	mov edx, eax
0x804aadb:   83 ec 04                        	sub esp, 4
0x804aade:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aae1:   8d 83 66 dd ff ff               	lea eax, [ebx - 0x229a]
0x804aae7:   50                              	push eax
0x804aae8:   52                              	push edx
0x804aae9:   e8 89 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaee:   83 c4 10                        	add esp, 0x10
0x804aaf1:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804aaf7:   89 c2                           	mov edx, eax
0x804aaf9:   83 ec 04                        	sub esp, 4
0x804aafc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaff:   8d 83 6c dd ff ff               	lea eax, [ebx - 0x2294]
0x804ab05:   50                              	push eax
0x804ab06:   52                              	push edx
0x804ab07:   e8 6b ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab0c:   83 c4 10                        	add esp, 0x10
0x804ab0f:   0f b7 83 48 00 00 00            	movzx eax, word ptr [ebx + 0x48]
0x804ab16:   98                              	cwde 
0x804ab17:   83 ec 04                        	sub esp, 4
0x804ab1a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab1d:   8d 93 72 dd ff ff               	lea edx, [ebx - 0x228e]
0x804ab23:   52                              	push edx
0x804ab24:   50                              	push eax
0x804ab25:   e8 4d ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab2a:   83 c4 10                        	add esp, 0x10
0x804ab2d:   0f b7 83 4a 00 00 00            	movzx eax, word ptr [ebx + 0x4a]
0x804ab34:   98                              	cwde 
0x804ab35:   83 ec 04                        	sub esp, 4
0x804ab38:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab3b:   8d 93 78 dd ff ff               	lea edx, [ebx - 0x2288]
0x804ab41:   52                              	push edx
0x804ab42:   50                              	push eax
0x804ab43:   e8 2f ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab48:   83 c4 10                        	add esp, 0x10
0x804ab4b:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804ab51:   89 c2                           	mov edx, eax
0x804ab53:   83 ec 04                        	sub esp, 4
0x804ab56:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab59:   8d 83 7e dd ff ff               	lea eax, [ebx - 0x2282]
0x804ab5f:   50                              	push eax
0x804ab60:   52                              	push edx
0x804ab61:   e8 11 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab66:   83 c4 10                        	add esp, 0x10
0x804ab69:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804ab6f:   89 c2                           	mov edx, eax
0x804ab71:   83 ec 04                        	sub esp, 4
0x804ab74:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab77:   8d 83 84 dd ff ff               	lea eax, [ebx - 0x227c]
0x804ab7d:   50                              	push eax
0x804ab7e:   52                              	push edx
0x804ab7f:   e8 f3 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab84:   83 c4 10                        	add esp, 0x10
0x804ab87:   0f b7 83 ac 04 00 00            	movzx eax, word ptr [ebx + 0x4ac]
0x804ab8e:   0f b7 c0                        	movzx eax, ax
0x804ab91:   83 ec 04                        	sub esp, 4
0x804ab94:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab97:   8d 93 8a dd ff ff               	lea edx, [ebx - 0x2276]
0x804ab9d:   52                              	push edx
0x804ab9e:   50                              	push eax
0x804ab9f:   e8 d3 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804aba4:   83 c4 10                        	add esp, 0x10
0x804aba7:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804abad:   83 ec 04                        	sub esp, 4
0x804abb0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abb3:   8d 93 90 dd ff ff               	lea edx, [ebx - 0x2270]
0x804abb9:   52                              	push edx
0x804abba:   50                              	push eax
0x804abbb:   e8 b7 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abc0:   83 c4 10                        	add esp, 0x10
0x804abc3:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804abc9:   83 ec 04                        	sub esp, 4
0x804abcc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abcf:   8d 93 96 dd ff ff               	lea edx, [ebx - 0x226a]
0x804abd5:   52                              	push edx
0x804abd6:   50                              	push eax
0x804abd7:   e8 9b e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abdc:   83 c4 10                        	add esp, 0x10
0x804abdf:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804abe5:   89 c2                           	mov edx, eax
0x804abe7:   83 ec 04                        	sub esp, 4
0x804abea:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abed:   8d 83 9c dd ff ff               	lea eax, [ebx - 0x2264]
0x804abf3:   50                              	push eax
0x804abf4:   52                              	push edx
0x804abf5:   e8 7d e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abfa:   83 c4 10                        	add esp, 0x10
0x804abfd:   0f b6 83 60 00 00 00            	movzx eax, byte ptr [ebx + 0x60]
0x804ac04:   0f be c0                        	movsx eax, al
0x804ac07:   83 ec 04                        	sub esp, 4
0x804ac0a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac0d:   8d 93 a2 dd ff ff               	lea edx, [ebx - 0x225e]
0x804ac13:   52                              	push edx
0x804ac14:   50                              	push eax
0x804ac15:   e8 5d e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac1a:   83 c4 10                        	add esp, 0x10
0x804ac1d:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ac23:   f7 d0                           	not eax
0x804ac25:   83 ec 08                        	sub esp, 8
0x804ac28:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac2b:   50                              	push eax
0x804ac2c:   e8 35 d8 ff ff                  	call 0x8048466 <platform_main_end>
0x804ac31:   83 c4 10                        	add esp, 0x10
0x804ac34:   b8 00 00 00 00                  	mov eax, 0
0x804ac39:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ac3c:   59                              	pop ecx
0x804ac3d:   5b                              	pop ebx
0x804ac3e:   5d                              	pop ebp
0x804ac3f:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ac42:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ac43 -- 0x804ac47
0x804ac43:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ac46:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804ac47 -- 0x804ac4b
0x804ac47:   8b 14 24                        	mov edx, dword ptr [esp]
0x804ac4a:   c3                              	ret 
; data inside code section at 0x804ac4b -- 0x804ac50
0x804ac4b:   66 90 66 90 90                                     |f.f..           |
; function: __libc_csu_init at 0x804ac50 -- 0x804acad
0x804ac50:   55                              	push ebp
0x804ac51:   57                              	push edi
0x804ac52:   56                              	push esi
0x804ac53:   53                              	push ebx
0x804ac54:   e8 37 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ac59:   81 c3 a7 23 00 00               	add ebx, 0x23a7
0x804ac5f:   83 ec 0c                        	sub esp, 0xc
0x804ac62:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ac66:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ac6c:   e8 5b d6 ff ff                  	call 0x80482cc <_init>
0x804ac71:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804ac77:   29 c6                           	sub esi, eax
0x804ac79:   c1 fe 02                        	sar esi, 2
0x804ac7c:   85 f6                           	test esi, esi
0x804ac7e:   74 25                           	je 0x804aca5 <__libc_csu_init+0x55>
0x804ac80:   31 ff                           	xor edi, edi
0x804ac82:   8d b6 00 00 00 00               	lea esi, [esi]
0x804ac88:   83 ec 04                        	sub esp, 4
0x804ac8b:   55                              	push ebp
0x804ac8c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ac90:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ac94:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804ac9b:   83 c7 01                        	add edi, 1
0x804ac9e:   83 c4 10                        	add esp, 0x10
0x804aca1:   39 fe                           	cmp esi, edi
0x804aca3:   75 e3                           	jne 0x804ac88 <__libc_csu_init+0x38>
0x804aca5:   83 c4 0c                        	add esp, 0xc
0x804aca8:   5b                              	pop ebx
0x804aca9:   5e                              	pop esi
0x804acaa:   5f                              	pop edi
0x804acab:   5d                              	pop ebp
0x804acac:   c3                              	ret 
; data inside code section at 0x804acad -- 0x804acb0
0x804acad:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804acb0 -- 0x804acb2
0x804acb0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804acb4 -- 0x804acc8
0x804acb4:   53                              	push ebx
0x804acb5:   83 ec 08                        	sub esp, 8
0x804acb8:   e8 d3 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804acbd:   81 c3 43 23 00 00               	add ebx, 0x2343
0x804acc3:   83 c4 08                        	add esp, 8
0x804acc6:   5b                              	pop ebx
0x804acc7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 cc ac 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804acc8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804acd8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804ace8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804acf8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804ad08:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ad18:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ad28:   31 00 67 5f 32 00 67 5f  33 00 67 5f 35 00 67 5f   |1.g_2.g_3.g_5.g_|
0x804ad38:   31 38 00 67 5f 32 38 00  67 5f 34 30 00 67 5f 35   |18.g_28.g_40.g_5|
0x804ad48:   37 00 67 5f 37 39 00 67  5f 39 32 00 67 5f 31 30   |7.g_79.g_92.g_10|
0x804ad58:   32 00 67 5f 31 30 33 00  67 5f 31 37 30 00 67 5f   |2.g_103.g_170.g_|
0x804ad68:   32 31 36 00 67 5f 32 31  37 00 67 5f 32 34 35 00   |216.g_217.g_245.|
0x804ad78:   67 5f 32 34 37 00 67 5f  32 34 39 00 67 5f 32 35   |g_247.g_249.g_25|
0x804ad88:   30 00 67 5f 32 35 31 00  67 5f 32 36 39 00 67 5f   |0.g_251.g_269.g_|
0x804ad98:   32 39 34 00 67 5f 33 30  35 00 67 5f 33 30 37 00   |294.g_305.g_307.|
0x804ada8:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804adb8:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804adc8:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804add8:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804ade8:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804adf8:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804ae08:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804ae10:   01 1b 03 3b b8 02 00 00  56 00 00 00 e0 d4 ff ff   |...;....V.......|
0x804ae20:   e8 02 00 00 20 d5 ff ff  0c 03 00 00 70 d5 ff ff   |.... .......p...|
0x804ae30:   d4 02 00 00 46 d6 ff ff  20 03 00 00 56 d6 ff ff   |....F... ...V...|
0x804ae40:   40 03 00 00 84 d6 ff ff  64 03 00 00 a2 d6 ff ff   |@.......d.......|
0x804ae50:   84 03 00 00 ca d6 ff ff  a4 03 00 00 f4 d6 ff ff   |................|
0x804ae60:   c4 03 00 00 1d d7 ff ff  e4 03 00 00 60 d7 ff ff   |............`...|
0x804ae70:   04 04 00 00 a1 d7 ff ff  24 04 00 00 f9 d7 ff ff   |........$.......|
0x804ae80:   48 04 00 00 4b d8 ff ff  6c 04 00 00 88 d8 ff ff   |H...K...l.......|
0x804ae90:   8c 04 00 00 bf d8 ff ff  ac 04 00 00 de d8 ff ff   |................|
0x804aea0:   cc 04 00 00 08 d9 ff ff  ec 04 00 00 34 d9 ff ff   |............4...|
0x804aeb0:   0c 05 00 00 5f d9 ff ff  2c 05 00 00 a8 d9 ff ff   |...._...,.......|
0x804aec0:   4c 05 00 00 ef d9 ff ff  6c 05 00 00 49 da ff ff   |L.......l...I...|
0x804aed0:   90 05 00 00 9d da ff ff  b4 05 00 00 dc da ff ff   |................|
0x804aee0:   d4 05 00 00 15 db ff ff  f4 05 00 00 37 db ff ff   |............7...|
0x804aef0:   14 06 00 00 85 db ff ff  34 06 00 00 c1 db ff ff   |........4.......|
0x804af00:   54 06 00 00 4a dc ff ff  74 06 00 00 7c dc ff ff   |T...J...t...|...|
0x804af10:   94 06 00 00 ac dc ff ff  b4 06 00 00 f1 dc ff ff   |................|
0x804af20:   d4 06 00 00 30 dd ff ff  f4 06 00 00 62 dd ff ff   |....0.......b...|
0x804af30:   14 07 00 00 8e dd ff ff  34 07 00 00 ac dd ff ff   |........4.......|
0x804af40:   54 07 00 00 d4 dd ff ff  74 07 00 00 f9 dd ff ff   |T.......t.......|
0x804af50:   94 07 00 00 1e de ff ff  b4 07 00 00 55 de ff ff   |............U...|
0x804af60:   d4 07 00 00 89 de ff ff  f4 07 00 00 db de ff ff   |................|
0x804af70:   18 08 00 00 27 df ff ff  3c 08 00 00 5e df ff ff   |....'...<...^...|
0x804af80:   5c 08 00 00 8f df ff ff  7c 08 00 00 ae df ff ff   |\.......|.......|
0x804af90:   9c 08 00 00 d8 df ff ff  bc 08 00 00 00 e0 ff ff   |................|
0x804afa0:   dc 08 00 00 29 e0 ff ff  fc 08 00 00 65 e0 ff ff   |....).......e...|
0x804afb0:   1c 09 00 00 9f e0 ff ff  3c 09 00 00 f2 e0 ff ff   |........<.......|
0x804afc0:   60 09 00 00 3f e1 ff ff  84 09 00 00 77 e1 ff ff   |`...?.......w...|
0x804afd0:   a4 09 00 00 a9 e1 ff ff  c4 09 00 00 bd e1 ff ff   |................|
0x804afe0:   e4 09 00 00 d4 e1 ff ff  04 0a 00 00 e9 e1 ff ff   |................|
0x804aff0:   24 0a 00 00 ff e1 ff ff  44 0a 00 00 26 e2 ff ff   |$.......D...&...|
0x804b000:   64 0a 00 00 4b e2 ff ff  84 0a 00 00 8a e2 ff ff   |d...K...........|
0x804b010:   a4 0a 00 00 c3 e2 ff ff  c4 0a 00 00 ef e2 ff ff   |................|
0x804b020:   e4 0a 00 00 15 e3 ff ff  04 0b 00 00 57 e3 ff ff   |............W...|
0x804b030:   24 0b 00 00 99 e3 ff ff  44 0b 00 00 db e3 ff ff   |$.......D.......|
0x804b040:   64 0b 00 00 50 e4 ff ff  84 0b 00 00 ad e4 ff ff   |d...P...........|
0x804b050:   a4 0b 00 00 0a e5 ff ff  c4 0b 00 00 67 e5 ff ff   |............g...|
0x804b060:   e4 0b 00 00 f7 e5 ff ff  04 0c 00 00 5b e6 ff ff   |............[...|
0x804b070:   24 0c 00 00 cb e6 ff ff  44 0c 00 00 12 e7 ff ff   |$.......D.......|
0x804b080:   68 0c 00 00 67 e7 ff ff  88 0c 00 00 ae e7 ff ff   |h...g...........|
0x804b090:   ac 0c 00 00 16 e8 ff ff  d0 0c 00 00 8f e9 ff ff   |................|
0x804b0a0:   00 0d 00 00 f7 fa ff ff  30 0d 00 00 33 fe ff ff   |........0...3...|
0x804b0b0:   68 0d 00 00 37 fe ff ff  7c 0d 00 00 40 fe ff ff   |h...7...|...@...|
0x804b0c0:   90 0d 00 00 a0 fe ff ff  dc 0d 00 00 14            |.............   |
; section: .eh_frame
0x804b0cc:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b0dc:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b0ec:   94 d2 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b0fc:   30 00 00 00 f0 d1 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b10c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b11c:   10 00 00 00 54 00 00 00  0c d2 ff ff 08 00 00 00   |....T...........|
0x804b12c:   00 00 00 00 1c 00 00 00  68 00 00 00 1e d3 ff ff   |........h.......|
0x804b13c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b14c:   04 04 00 00 20 00 00 00  88 00 00 00 0e d3 ff ff   |.... ...........|
0x804b15c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b16c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b17c:   18 d3 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b18c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b19c:   16 d3 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b1ac:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b1bc:   1e d3 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b1cc:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b1dc:   28 d3 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |(...)....A....B.|
0x804b1ec:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b1fc:   31 d3 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |1...C....A....B.|
0x804b20c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b21c:   54 d3 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |T...A....A....B.|
0x804b22c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b23c:   75 d3 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |u...X....A....B.|
0x804b24c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b25c:   90 01 00 00 a9 d3 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b26c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b27c:   1c 00 00 00 b4 01 00 00  d7 d3 ff ff 3d 00 00 00   |............=...|
0x804b28c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b29c:   1c 00 00 00 d4 01 00 00  f4 d3 ff ff 37 00 00 00   |............7...|
0x804b2ac:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b2bc:   1c 00 00 00 f4 01 00 00  0b d4 ff ff 1f 00 00 00   |................|
0x804b2cc:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b2dc:   1c 00 00 00 14 02 00 00  0a d4 ff ff 2a 00 00 00   |............*...|
0x804b2ec:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b2fc:   1c 00 00 00 34 02 00 00  14 d4 ff ff 2c 00 00 00   |....4.......,...|
0x804b30c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b31c:   1c 00 00 00 54 02 00 00  20 d4 ff ff 2b 00 00 00   |....T... ...+...|
0x804b32c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b33c:   1c 00 00 00 74 02 00 00  2b d4 ff ff 49 00 00 00   |....t...+...I...|
0x804b34c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b35c:   1c 00 00 00 94 02 00 00  54 d4 ff ff 47 00 00 00   |........T...G...|
0x804b36c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b37c:   20 00 00 00 b4 02 00 00  7b d4 ff ff 5a 00 00 00   | .......{...Z...|
0x804b38c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b39c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 b1 d4 ff ff   |.... ...........|
0x804b3ac:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b3bc:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b3cc:   e1 d4 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b3dc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b3ec:   00 d5 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b3fc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b40c:   19 d5 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b41c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b42c:   1b d5 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b43c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b44c:   49 d5 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |I...<....A....B.|
0x804b45c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b46c:   65 d5 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |e........A....B.|
0x804b47c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b48c:   ce d5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b49c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b4ac:   e0 d5 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b4bc:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b4cc:   f0 d5 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b4dc:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b4ec:   15 d6 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b4fc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b50c:   34 d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |4...2....A....B.|
0x804b51c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b52c:   46 d6 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |F...,....A....B.|
0x804b53c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b54c:   52 d6 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |R........A....B.|
0x804b55c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b56c:   50 d6 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |P...(....A....B.|
0x804b57c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b58c:   58 d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |X...%....A....B.|
0x804b59c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b5ac:   5d d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |]...%....A....B.|
0x804b5bc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b5cc:   62 d6 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |b...7....A....B.|
0x804b5dc:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b5ec:   79 d6 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |y...4....A....B.|
0x804b5fc:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b60c:   8d d6 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b61c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b62c:   60 05 00 00 bb d6 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b63c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b64c:   1c 00 00 00 84 05 00 00  e3 d6 ff ff 37 00 00 00   |............7...|
0x804b65c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b66c:   1c 00 00 00 a4 05 00 00  fa d6 ff ff 31 00 00 00   |............1...|
0x804b67c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b68c:   1c 00 00 00 c4 05 00 00  0b d7 ff ff 1f 00 00 00   |................|
0x804b69c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b6ac:   1c 00 00 00 e4 05 00 00  0a d7 ff ff 2a 00 00 00   |............*...|
0x804b6bc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b6cc:   1c 00 00 00 04 06 00 00  14 d7 ff ff 28 00 00 00   |............(...|
0x804b6dc:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b6ec:   1c 00 00 00 24 06 00 00  1c d7 ff ff 29 00 00 00   |....$.......)...|
0x804b6fc:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b70c:   1c 00 00 00 44 06 00 00  25 d7 ff ff 3c 00 00 00   |....D...%...<...|
0x804b71c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b72c:   1c 00 00 00 64 06 00 00  41 d7 ff ff 3a 00 00 00   |....d...A...:...|
0x804b73c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b74c:   20 00 00 00 84 06 00 00  5b d7 ff ff 53 00 00 00   | .......[...S...|
0x804b75c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b76c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 8a d7 ff ff   |.... ...........|
0x804b77c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b78c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b79c:   b3 d7 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b7ac:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b7bc:   cb d7 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b7cc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b7dc:   dd d7 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b7ec:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b7fc:   d1 d7 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b80c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b81c:   c8 d7 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b82c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b83c:   bd d7 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b84c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b85c:   b3 d7 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b86c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b87c:   ba d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b88c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b89c:   bf d7 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b8ac:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b8bc:   de d7 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b8cc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b8dc:   f7 d7 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b8ec:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b8fc:   03 d8 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804b90c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b91c:   09 d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b92c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b93c:   2b d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |+...B....A....B.|
0x804b94c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b95c:   4d d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |M...B....A....B.|
0x804b96c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b97c:   6f d8 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |o...u....A....B.|
0x804b98c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b99c:   c4 d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b9ac:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b9bc:   01 d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b9cc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b9dc:   3e d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |>...]....A....B.|
0x804b9ec:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b9fc:   7b d9 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |{........A....B.|
0x804ba0c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804ba1c:   eb d9 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804ba2c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804ba3c:   2f da ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |/...p....A....B.|
0x804ba4c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804ba5c:   7f da ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804ba6c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804ba7c:   b0 09 00 00 a2 da ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804ba8c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804ba9c:   d0 09 00 00 d7 da ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804baac:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804babc:   20 00 00 00 f4 09 00 00  fa da ff ff 68 00 00 00   | ...........h...|
0x804bacc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804badc:   0c 04 04 00 2c 00 00 00  18 0a 00 00 3e db ff ff   |....,.......>...|
0x804baec:   79 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |y....A....B..F..|
0x804bafc:   86 04 83 05 03 6c 01 c3  41 c6 41 c7 41 c5 0c 04   |.....l..A.A.A...|
0x804bb0c:   04 00 00 00 2c 00 00 00  48 0a 00 00 87 dc ff ff   |....,...H.......|
0x804bb1c:   68 11 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |h....A....B..I..|
0x804bb2c:   86 04 83 05 03 58 11 c3  41 c6 41 c7 41 c5 0c 04   |.....X..A.A.A...|
0x804bb3c:   04 00 00 00 34 00 00 00  78 0a 00 00 bf ed ff ff   |....4...x.......|
0x804bb4c:   3c 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |<....D...G...u.D|
0x804bb5c:   0f 03 75 78 06 10 03 02  75 7c 03 27 03 c1 0c 01   |..ux....u|.'....|
0x804bb6c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bb7c:   b0 0a 00 00 c3 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804bb8c:   10 00 00 00 c4 0a 00 00  b3 f0 ff ff 04 00 00 00   |................|
0x804bb9c:   00 00 00 00 48 00 00 00  d8 0a 00 00 a8 f0 ff ff   |....H...........|
0x804bbac:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bbbc:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bbcc:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bbdc:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bbec:   10 00 00 00 24 0b 00 00  bc f0 ff ff 02 00 00 00   |....$...........|
0x804bbfc:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 b4 ac 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff 08 00 00 00   |................|
0x804d028:   d4 37 df 46 f4 65 00 00  ab d5 53 c2 f6 ff 03 5b   |.7.F.e....S....[|
0x804d038:   01 00 00 00 2f d1 b4 eb  c3 80 cd 0a 07 00 00 00   |..../...........|
0x804d048:   dd 89 05 00 05 00 00 00  ff ff ff ff ad 74 71 9c   |.............tq.|
0x804d058:   04 8a 4c 56 01 00 00 00  ff ??                     |..LV.....?      |
