;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 17:01:24
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 e0 d0 ff ff               	lea eax, [ebx - 0x2f20]
0x804835c:   50                              	push eax
0x804835d:   8d 83 80 d0 ff ff               	lea eax, [ebx - 0x2f80]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 7c ac 04 08               	mov eax, 0x804ac7c
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 70 e0 04 08                  	mov eax, 0x804e070
0x80483a5:   3d 70 e0 04 08                  	cmp eax, 0x804e070
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 70 e0 04 08                  	push 0x804e070
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 70 e0 04 08                  	mov eax, 0x804e070
0x80483e5:   2d 70 e0 04 08                  	sub eax, 0x804e070
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 70 e0 04 08                  	push 0x804e070
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 e0 04 08 00            	cmp byte ptr [0x804e080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 e0 04 08 01            	mov byte ptr [0x804e080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 16 2c 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 02 2c 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 00 d1 ff ff               	lea edx, [eax - 0x2f00]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 d5 2b 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 b7 2b 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 8f 2b 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 65 2b 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 3c 2b 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 f9 2a 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 b7 2a 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 5f 2a 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 0e 2a 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 d1 29 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 9a 29 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 7b 29 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 51 29 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 25 29 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 fa 28 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 b1 28 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 69 28 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 0f 28 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 bc 27 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 7d 27 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 47 27 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 25 27 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 d7 26 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 9b 26 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 12 26 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 e0 25 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 b0 25 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 6b 25 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 2c 25 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 fa 24 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 cb 24 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 ad 24 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 85 24 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 60 24 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 3b 24 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 04 24 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 cf 23 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 7d 23 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 32 23 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 fb 22 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 ca 22 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 ab 22 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 81 22 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 59 22 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 30 22 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 f4 21 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 b9 21 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 66 21 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 1a 21 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 e2 20 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 b3 20 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 9f 20 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 88 20 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 73 20 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 5d 20 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 36 20 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 11 20 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 d2 1f 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 99 1f 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 6d 1f 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 47 1f 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 fc d1 ff ff               	fld dword ptr [eax - 0x2e04]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 fc d1 ff ff               	fld dword ptr [eax - 0x2e04]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 00 d2 ff ff               	fld dword ptr [eax - 0x2e00]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 05 1f 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 fc d1 ff ff               	fld dword ptr [eax - 0x2e04]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 fc d1 ff ff               	fld dword ptr [eax - 0x2e04]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 00 d2 ff ff               	fld dword ptr [eax - 0x2e00]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 c3 1e 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 04 d2 ff ff               	fld dword ptr [eax - 0x2dfc]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 08 d2 ff ff               	fld dword ptr [eax - 0x2df8]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 0c d2 ff ff               	fld dword ptr [eax - 0x2df4]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 81 1e 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 10 d2 ff ff               	fld dword ptr [eax - 0x2df0]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 14 d2 ff ff               	fld dword ptr [eax - 0x2dec]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 18 d2 ff ff               	fld dword ptr [eax - 0x2de8]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 09 1e 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 20 d2 ff ff               	fld qword ptr [eax - 0x2de0]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 20 d2 ff ff               	fld qword ptr [eax - 0x2de0]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 28 d2 ff ff               	fld qword ptr [eax - 0x2dd8]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 ac 1d 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 20 d2 ff ff               	fld qword ptr [eax - 0x2de0]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 20 d2 ff ff               	fld qword ptr [eax - 0x2de0]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 28 d2 ff ff               	fld qword ptr [eax - 0x2dd8]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 4f 1d 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 30 d2 ff ff               	fld qword ptr [eax - 0x2dd0]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 38 d2 ff ff               	fld qword ptr [eax - 0x2dc8]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 40 d2 ff ff               	fld qword ptr [eax - 0x2dc0]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 f2 1c 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 48 d2 ff ff               	fld qword ptr [eax - 0x2db8]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 50 d2 ff ff               	fld qword ptr [eax - 0x2db0]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 58 d2 ff ff               	fld qword ptr [eax - 0x2da8]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 62 1c 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 60 d2 ff ff               	fld dword ptr [eax - 0x2da0]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 64 d2 ff ff               	fld dword ptr [eax - 0x2d9c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 fe 1b 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 8d 1b 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 4a 1b 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 10 d1 ff ff               	lea eax, [ebx - 0x2ef0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 34 d1 ff ff               	lea eax, [ebx - 0x2ecc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80497fb
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 60                        	sub esp, 0x60
0x804962f:   e8 44 1a 00 00                  	call 0x804b078 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 49 00 00               	add edx, 0x49cc
0x804963a:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x804963d:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049640:   8b 4d 1c                        	mov ecx, dword ptr [ebp + 0x1c]
0x8049643:   8b 5d 28                        	mov ebx, dword ptr [ebp + 0x28]
0x8049646:   8b 75 2c                        	mov esi, dword ptr [ebp + 0x2c]
0x8049649:   8b 7d 38                        	mov edi, dword ptr [ebp + 0x38]
0x804964c:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x804964f:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049652:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049655:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049658:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x804965b:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804965e:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049661:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049664:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x8049667:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804966a:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x804966d:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049670:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x8049673:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049676:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x8049679:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804967c:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x804967f:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049682:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x8049686:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x8049689:   89 c8                           	mov eax, ecx
0x804968b:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x804968f:   89 d8                           	mov eax, ebx
0x8049691:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x8049695:   89 f0                           	mov eax, esi
0x8049697:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x804969a:   89 f8                           	mov eax, edi
0x804969c:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x804969f:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x80496a3:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496a6:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x80496aa:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x80496ad:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x80496b1:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496b5:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496b9:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496bd:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x80496c1:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496c4:   0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x80496c8:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496cb:   0f b6 45 9c                     	movzx eax, byte ptr [ebp - 0x64]
0x80496cf:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x80496d2:   0f b6 45 98                     	movzx eax, byte ptr [ebp - 0x68]
0x80496d6:   88 45 c0                        	mov byte ptr [ebp - 0x40], al
0x80496d9:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x80496dd:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x80496e0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80496e3:   89 82 a4 04 00 00               	mov dword ptr [edx + 0x4a4], eax
0x80496e9:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80496ec:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x80496f2:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x80496f5:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x80496fb:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x80496fe:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x8049704:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x8049708:   88 82 30 00 00 00               	mov byte ptr [edx + 0x30], al
0x804970e:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x8049712:   66 89 82 32 00 00 00            	mov word ptr [edx + 0x32], ax
0x8049719:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x804971c:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x8049722:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x8049725:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x804972b:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x804972f:   66 89 82 3c 00 00 00            	mov word ptr [edx + 0x3c], ax
0x8049736:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x804973a:   88 82 3e 00 00 00               	mov byte ptr [edx + 0x3e], al
0x8049740:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049743:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x8049749:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x804974c:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x8049752:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049756:   88 82 48 00 00 00               	mov byte ptr [edx + 0x48], al
0x804975c:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x804975f:   89 82 a8 04 00 00               	mov dword ptr [edx + 0x4a8], eax
0x8049765:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x8049768:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x804976e:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x8049772:   88 82 50 00 00 00               	mov byte ptr [edx + 0x50], al
0x8049778:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x804977c:   88 82 51 00 00 00               	mov byte ptr [edx + 0x51], al
0x8049782:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x8049786:   66 89 82 ac 04 00 00            	mov word ptr [edx + 0x4ac], ax
0x804978d:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049790:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x8049796:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804979a:   66 89 82 58 00 00 00            	mov word ptr [edx + 0x58], ax
0x80497a1:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x80497a4:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x80497aa:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x80497ae:   88 82 60 00 00 00               	mov byte ptr [edx + 0x60], al
0x80497b4:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497b8:   88 82 61 00 00 00               	mov byte ptr [edx + 0x61], al
0x80497be:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x80497c2:   88 82 62 00 00 00               	mov byte ptr [edx + 0x62], al
0x80497c8:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x80497cb:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x80497d1:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x80497d5:   88 82 68 00 00 00               	mov byte ptr [edx + 0x68], al
0x80497db:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x80497de:   89 82 b0 04 00 00               	mov dword ptr [edx + 0x4b0], eax
0x80497e4:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x80497e8:   88 82 b4 04 00 00               	mov byte ptr [edx + 0x4b4], al
0x80497ee:   b8 00 00 00 00                  	mov eax, 0
0x80497f3:   83 c4 60                        	add esp, 0x60
0x80497f6:   5b                              	pop ebx
0x80497f7:   5e                              	pop esi
0x80497f8:   5f                              	pop edi
0x80497f9:   5d                              	pop ebp
0x80497fa:   c3                              	ret 
; function: func_1 at 0x80497fb -- 0x804ac7c
0x80497fb:   55                              	push ebp
0x80497fc:   89 e5                           	mov ebp, esp
0x80497fe:   57                              	push edi
0x80497ff:   56                              	push esi
0x8049800:   53                              	push ebx
0x8049801:   81 ec a0 01 00 00               	sub esp, 0x1a0
0x8049807:   e8 68 18 00 00                  	call 0x804b074 <__x86.get_pc_thunk.ax>
0x804980c:   05 f4 47 00 00                  	add eax, 0x47f4
0x8049811:   c7 45 bc 00 00 00 00            	mov dword ptr [ebp - 0x44], 0
0x8049818:   c7 45 b8 ff ff ff ff            	mov dword ptr [ebp - 0x48], 0xffffffff
0x804981f:   c7 45 b4 04 00 00 00            	mov dword ptr [ebp - 0x4c], 4
0x8049826:   c7 45 dc 01 00 00 00            	mov dword ptr [ebp - 0x24], 1
0x804982d:   c6 45 db ad                     	mov byte ptr [ebp - 0x25], 0xad
0x8049831:   66 c7 45 d8 01 00               	mov word ptr [ebp - 0x28], 1
0x8049837:   c7 45 d4 52 a7 87 2c            	mov dword ptr [ebp - 0x2c], 0x2c87a752
0x804983e:   c7 45 90 75 c8 75 11            	mov dword ptr [ebp - 0x70], 0x1175c875
0x8049845:   66 c7 45 d2 db 44               	mov word ptr [ebp - 0x2e], 0x44db
0x804984b:   c6 45 d1 98                     	mov byte ptr [ebp - 0x2f], 0x98
0x804984f:   c7 45 cc a9 37 70 75            	mov dword ptr [ebp - 0x34], 0x757037a9
0x8049856:   c7 45 c8 50 75 d6 bf            	mov dword ptr [ebp - 0x38], 0xbfd67550
0x804985d:   c6 45 8f 4b                     	mov byte ptr [ebp - 0x71], 0x4b
0x8049861:   c7 45 c4 00 00 00 00            	mov dword ptr [ebp - 0x3c], 0
0x8049868:   c7 45 c0 54 1f cd 7b            	mov dword ptr [ebp - 0x40], 0x7bcd1f54
0x804986f:   c6 45 f3 2b                     	mov byte ptr [ebp - 0xd], 0x2b
0x8049873:   c6 45 f2 4b                     	mov byte ptr [ebp - 0xe], 0x4b
0x8049877:   66 c7 45 f0 00 00               	mov word ptr [ebp - 0x10], 0
0x804987d:   c7 45 ec fa ff ff ff            	mov dword ptr [ebp - 0x14], 0xfffffffa
0x8049884:   66 c7 45 ea 8d 41               	mov word ptr [ebp - 0x16], 0x418d
0x804988a:   c7 45 e4 05 00 00 00            	mov dword ptr [ebp - 0x1c], 5
0x8049891:   c6 45 8e e1                     	mov byte ptr [ebp - 0x72], 0xe1
0x8049895:   c6 45 e3 4d                     	mov byte ptr [ebp - 0x1d], 0x4d
0x8049899:   c6 45 e2 7a                     	mov byte ptr [ebp - 0x1e], 0x7a
0x804989d:   c7 45 b0 2a 80 0b 1b            	mov dword ptr [ebp - 0x50], 0x1b0b802a
0x80498a4:   c6 45 8d 61                     	mov byte ptr [ebp - 0x73], 0x61
0x80498a8:   c7 45 88 00 00 00 00            	mov dword ptr [ebp - 0x78], 0
0x80498af:   c6 45 af 00                     	mov byte ptr [ebp - 0x51], 0
0x80498b3:   c7 45 84 00 00 00 00            	mov dword ptr [ebp - 0x7c], 0
0x80498ba:   66 c7 45 82 07 00               	mov word ptr [ebp - 0x7e], 7
0x80498c0:   c7 85 7c ff ff ff b4 fb c3 09   	mov dword ptr [ebp - 0x84], 0x9c3fbb4
0x80498ca:   66 c7 45 ac 63 3e               	mov word ptr [ebp - 0x54], 0x3e63
0x80498d0:   c7 85 78 ff ff ff ed 58 d6 d0   	mov dword ptr [ebp - 0x88], 0xd0d658ed
0x80498da:   66 c7 85 76 ff ff ff 01 00      	mov word ptr [ebp - 0x8a], 1
0x80498e3:   c6 85 75 ff ff ff 01            	mov byte ptr [ebp - 0x8b], 1
0x80498ea:   66 c7 85 72 ff ff ff 00 00      	mov word ptr [ebp - 0x8e], 0
0x80498f3:   c7 85 6c ff ff ff fd ff ff ff   	mov dword ptr [ebp - 0x94], 0xfffffffd
0x80498fd:   c7 85 68 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x98], 0xffffffff
0x8049907:   c6 85 67 ff ff ff f7            	mov byte ptr [ebp - 0x99], 0xf7
0x804990e:   c7 45 a8 29 93 58 00            	mov dword ptr [ebp - 0x58], 0x589329
0x8049915:   66 c7 85 64 ff ff ff 01 00      	mov word ptr [ebp - 0x9c], 1
0x804991e:   66 c7 85 62 ff ff ff 00 00      	mov word ptr [ebp - 0x9e], 0
0x8049927:   c7 85 5c ff ff ff 7b 82 e0 32   	mov dword ptr [ebp - 0xa4], 0x32e0827b
0x8049931:   c6 85 5b ff ff ff fa            	mov byte ptr [ebp - 0xa5], 0xfa
0x8049938:   66 c7 85 58 ff ff ff 00 00      	mov word ptr [ebp - 0xa8], 0
0x8049941:   c7 85 54 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xac], 1
0x804994b:   c7 45 b8 f6 ff ff ff            	mov dword ptr [ebp - 0x48], 0xfffffff6
0x8049952:   83 7d b8 0f                     	cmp dword ptr [ebp - 0x48], 0xf
0x8049956:   0f 8e d8 00 00 00               	jle 0x8049a34 <func_1+0x239>
0x804995c:   0f be 45 af                     	movsx eax, byte ptr [ebp - 0x51]
0x8049960:   0f b6 55 8d                     	movzx edx, byte ptr [ebp - 0x73]
0x8049964:   0f b6 5d e2                     	movzx ebx, byte ptr [ebp - 0x1e]
0x8049968:   0f b6 7d e3                     	movzx edi, byte ptr [ebp - 0x1d]
0x804996c:   0f be 75 8e                     	movsx esi, byte ptr [ebp - 0x72]
0x8049970:   89 b5 70 fe ff ff               	mov dword ptr [ebp - 0x190], esi
0x8049976:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x804997a:   89 8d 6c fe ff ff               	mov dword ptr [ebp - 0x194], ecx
0x8049980:   0f bf 75 f0                     	movsx esi, word ptr [ebp - 0x10]
0x8049984:   89 b5 68 fe ff ff               	mov dword ptr [ebp - 0x198], esi
0x804998a:   0f b6 4d f2                     	movzx ecx, byte ptr [ebp - 0xe]
0x804998e:   89 8d 64 fe ff ff               	mov dword ptr [ebp - 0x19c], ecx
0x8049994:   0f b6 75 f3                     	movzx esi, byte ptr [ebp - 0xd]
0x8049998:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x804999e:   0f be 4d 8f                     	movsx ecx, byte ptr [ebp - 0x71]
0x80499a2:   89 8d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ecx
0x80499a8:   0f be 75 d1                     	movsx esi, byte ptr [ebp - 0x2f]
0x80499ac:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x80499b2:   0f b7 4d d2                     	movzx ecx, word ptr [ebp - 0x2e]
0x80499b6:   89 8d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ecx
0x80499bc:   0f bf 75 d8                     	movsx esi, word ptr [ebp - 0x28]
0x80499c0:   0f be 4d db                     	movsx ecx, byte ptr [ebp - 0x25]
0x80499c4:   50                              	push eax
0x80499c5:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x80499c8:   52                              	push edx
0x80499c9:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x80499cc:   53                              	push ebx
0x80499cd:   57                              	push edi
0x80499ce:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x80499d4:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x80499d7:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x80499dd:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x80499e0:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x80499e6:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x80499ec:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x80499f2:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x80499f5:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x80499f8:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x80499fe:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049a01:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049a04:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x8049a0a:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x8049a10:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049a13:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049a16:   56                              	push esi
0x8049a17:   51                              	push ecx
0x8049a18:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049a1b:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049a1e:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049a21:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049a24:   e8 fd fb ff ff                  	call 0x8049626 <set_var>
0x8049a29:   83 c4 70                        	add esp, 0x70
0x8049a2c:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049a2f:   e9 40 12 00 00                  	jmp 0x804ac74 <func_1+0x1479>
0x8049a34:   90                              	nop 
0x8049a35:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x8049a39:   90                              	nop 
0x8049a3a:   83 6d b4 01                     	sub dword ptr [ebp - 0x4c], 1
0x8049a3e:   83 6d d4 01                     	sub dword ptr [ebp - 0x2c], 1
0x8049a42:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x8049a46:   75 6f                           	jne 0x8049ab7 <func_1+0x2bc>
0x8049a48:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049a4b:   89 c3                           	mov ebx, eax
0x8049a4d:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x8049a50:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x8049a53:   0f 92 c0                        	setb al
0x8049a56:   0f b6 d0                        	movzx edx, al
0x8049a59:   66 81 7d ac ff 00               	cmp word ptr [ebp - 0x54], 0xff
0x8049a5f:   0f 95 c0                        	setne al
0x8049a62:   0f b6 c8                        	movzx ecx, al
0x8049a65:   0f bf 45 ac                     	movsx eax, word ptr [ebp - 0x54]
0x8049a69:   39 c1                           	cmp ecx, eax
0x8049a6b:   75 07                           	jne 0x8049a74 <func_1+0x279>
0x8049a6d:   b8 01 00 00 00                  	mov eax, 1
0x8049a72:   eb 05                           	jmp 0x8049a79 <func_1+0x27e>
0x8049a74:   b8 00 00 00 00                  	mov eax, 0
0x8049a79:   84 c0                           	test al, al
0x8049a7b:   74 07                           	je 0x8049a84 <func_1+0x289>
0x8049a7d:   b9 00 00 00 00                  	mov ecx, 0
0x8049a82:   eb 05                           	jmp 0x8049a89 <func_1+0x28e>
0x8049a84:   b9 ff ff ff ff                  	mov ecx, 0xffffffff
0x8049a89:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049a8c:   66 98                           	cbw 
0x8049a8e:   01 c8                           	add eax, ecx
0x8049a90:   0f b7 c0                        	movzx eax, ax
0x8049a93:   0f af c2                        	imul eax, edx
0x8049a96:   39 85 7c ff ff ff               	cmp dword ptr [ebp - 0x84], eax
0x8049a9c:   0f 9f c0                        	setg al
0x8049a9f:   0f b6 c0                        	movzx eax, al
0x8049aa2:   0f af c3                        	imul eax, ebx
0x8049aa5:   66 33 45 ac                     	xor ax, word ptr [ebp - 0x54]
0x8049aa9:   89 c2                           	mov edx, eax
0x8049aab:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049aae:   66 39 c2                        	cmp dx, ax
0x8049ab1:   0f 84 d1 0b 00 00               	je 0x804a688 <func_1+0xe8d>
0x8049ab7:   c6 45 a7 fa                     	mov byte ptr [ebp - 0x59], 0xfa
0x8049abb:   66 c7 85 1c ff ff ff 00 00      	mov word ptr [ebp - 0xe4], 0
0x8049ac4:   c7 85 18 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe8], 0
0x8049ace:   c7 85 14 ff ff ff bd 1d 35 91   	mov dword ptr [ebp - 0xec], 0x91351dbd
0x8049ad8:   66 c7 85 12 ff ff ff fc ff      	mov word ptr [ebp - 0xee], 0xfffc
0x8049ae1:   c7 85 0c ff ff ff 61 ac 43 cf   	mov dword ptr [ebp - 0xf4], 0xcf43ac61
0x8049aeb:   c6 85 0b ff ff ff 4f            	mov byte ptr [ebp - 0xf5], 0x4f
0x8049af2:   c7 85 04 ff ff ff 07 00 00 00   	mov dword ptr [ebp - 0xfc], 7
0x8049afc:   c6 85 03 ff ff ff ff            	mov byte ptr [ebp - 0xfd], 0xff
0x8049b03:   c7 85 fc fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x104], 4
0x8049b0d:   0f b6 45 a7                     	movzx eax, byte ptr [ebp - 0x59]
0x8049b11:   83 c0 01                        	add eax, 1
0x8049b14:   88 45 a7                        	mov byte ptr [ebp - 0x59], al
0x8049b17:   0f bf 85 76 ff ff ff            	movsx eax, word ptr [ebp - 0x8a]
0x8049b1e:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x8049b21:   0f 85 c3 04 00 00               	jne 0x8049fea <func_1+0x7ef>
0x8049b27:   c6 85 a2 fe ff ff a0            	mov byte ptr [ebp - 0x15e], 0xa0
0x8049b2e:   66 c7 85 a0 fe ff ff 29 8b      	mov word ptr [ebp - 0x160], 0x8b29
0x8049b37:   c7 85 9c fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x164], 0xffffffff
0x8049b41:   c6 85 9b fe ff ff ff            	mov byte ptr [ebp - 0x165], 0xff
0x8049b48:   c7 45 a0 de 1a 83 36            	mov dword ptr [ebp - 0x60], 0x36831ade
0x8049b4f:   80 7d db 00                     	cmp byte ptr [ebp - 0x25], 0
0x8049b53:   0f 8e 94 00 00 00               	jle 0x8049bed <func_1+0x3f2>
0x8049b59:   c7 85 80 fe ff ff 00 b3 d1 75   	mov dword ptr [ebp - 0x180], 0x75d1b300
0x8049b63:   c7 85 7c fe ff ff 09 00 00 00   	mov dword ptr [ebp - 0x184], 9
0x8049b6d:   c7 85 80 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x180], 1
0x8049b77:   c6 45 db 0b                     	mov byte ptr [ebp - 0x25], 0xb
0x8049b7b:   eb 33                           	jmp 0x8049bb0 <func_1+0x3b5>
0x8049b7d:   c6 85 7b fe ff ff 01            	mov byte ptr [ebp - 0x185], 1
0x8049b84:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x8049b88:   83 c0 01                        	add eax, 1
0x8049b8b:   66 89 45 d2                     	mov word ptr [ebp - 0x2e], ax
0x8049b8f:   0f b6 85 a2 fe ff ff            	movzx eax, byte ptr [ebp - 0x15e]
0x8049b96:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049b99:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049b9c:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x8049b9f:   0f bf 45 ac                     	movsx eax, word ptr [ebp - 0x54]
0x8049ba3:   21 45 bc                        	and dword ptr [ebp - 0x44], eax
0x8049ba6:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x8049baa:   83 e8 09                        	sub eax, 9
0x8049bad:   88 45 db                        	mov byte ptr [ebp - 0x25], al
0x8049bb0:   80 7d db e6                     	cmp byte ptr [ebp - 0x25], 0xe6
0x8049bb4:   7c c7                           	jl 0x8049b7d <func_1+0x382>
0x8049bb6:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x8049bbc:   98                              	cwde 
0x8049bbd:   66 c7 45 d2 01 00               	mov word ptr [ebp - 0x2e], 1
0x8049bc3:   c7 85 14 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xec], 1
0x8049bcd:   8b 95 14 ff ff ff               	mov edx, dword ptr [ebp - 0xec]
0x8049bd3:   0f bf fa                        	movsx edi, dx
0x8049bd6:   99                              	cdq 
0x8049bd7:   f7 ff                           	idiv edi
0x8049bd9:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049bdc:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x8049bdf:   23 85 7c fe ff ff               	and eax, dword ptr [ebp - 0x184]
0x8049be5:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x8049be8:   e9 25 03 00 00                  	jmp 0x8049f12 <func_1+0x717>
0x8049bed:   66 c7 85 98 fe ff ff 30 21      	mov word ptr [ebp - 0x168], 0x2130
0x8049bf6:   c7 85 94 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x16c], 0xffffffff
0x8049c00:   66 83 bd 1c ff ff ff 00         	cmp word ptr [ebp - 0xe4], 0
0x8049c08:   74 05                           	je 0x8049c0f <func_1+0x414>
0x8049c0a:   e9 fe fe ff ff                  	jmp 0x8049b0d <func_1+0x312>
0x8049c0f:   0f be 45 d1                     	movsx eax, byte ptr [ebp - 0x2f]
0x8049c13:   89 85 14 ff ff ff               	mov dword ptr [ebp - 0xec], eax
0x8049c19:   0f be 45 db                     	movsx eax, byte ptr [ebp - 0x25]
0x8049c1d:   39 85 14 ff ff ff               	cmp dword ptr [ebp - 0xec], eax
0x8049c23:   0f 9c c0                        	setl al
0x8049c26:   0f b6 c0                        	movzx eax, al
0x8049c29:   39 85 78 ff ff ff               	cmp dword ptr [ebp - 0x88], eax
0x8049c2f:   0f 84 e4 00 00 00               	je 0x8049d19 <func_1+0x51e>
0x8049c35:   c7 85 88 fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x178], 4
0x8049c3f:   c7 85 84 fe ff ff e5 f0 ff 0f   	mov dword ptr [ebp - 0x17c], 0xffff0e5
0x8049c49:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x8049c4d:   75 3d                           	jne 0x8049c8c <func_1+0x491>
0x8049c4f:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x8049c55:   66 98                           	cbw 
0x8049c57:   8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x8049c5a:   0f af c2                        	imul eax, edx
0x8049c5d:   66 0f be 7d d1                  	movsx di, byte ptr [ebp - 0x2f]
0x8049c62:   ba 00 00 00 00                  	mov edx, 0
0x8049c67:   66 f7 f7                        	div di
0x8049c6a:   0f b7 c0                        	movzx eax, ax
0x8049c6d:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x8049c70:   0f 94 c0                        	sete al
0x8049c73:   0f b6 c0                        	movzx eax, al
0x8049c76:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x8049c79:   0f 96 c0                        	setbe al
0x8049c7c:   0f b6 c0                        	movzx eax, al
0x8049c7f:   09 85 14 ff ff ff               	or dword ptr [ebp - 0xec], eax
0x8049c85:   83 bd 14 ff ff ff 00            	cmp dword ptr [ebp - 0xec], 0
0x8049c8c:   80 7d db 01                     	cmp byte ptr [ebp - 0x25], 1
0x8049c90:   0f 95 c0                        	setne al
0x8049c93:   0f b6 c0                        	movzx eax, al
0x8049c96:   89 85 9c fe ff ff               	mov dword ptr [ebp - 0x164], eax
0x8049c9c:   80 7d d1 00                     	cmp byte ptr [ebp - 0x2f], 0
0x8049ca0:   74 0d                           	je 0x8049caf <func_1+0x4b4>
0x8049ca2:   80 7d db 00                     	cmp byte ptr [ebp - 0x25], 0
0x8049ca6:   74 07                           	je 0x8049caf <func_1+0x4b4>
0x8049ca8:   b8 01 00 00 00                  	mov eax, 1
0x8049cad:   eb 05                           	jmp 0x8049cb4 <func_1+0x4b9>
0x8049caf:   b8 00 00 00 00                  	mov eax, 0
0x8049cb4:   3d 36 de 61 13                  	cmp eax, 0x1361de36
0x8049cb9:   0f 9f c0                        	setg al
0x8049cbc:   0f b6 c0                        	movzx eax, al
0x8049cbf:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049cc2:   83 45 c8 01                     	add dword ptr [ebp - 0x38], 1
0x8049cc6:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x8049cc9:   c0 f8 07                        	sar al, 7
0x8049ccc:   0f be c0                        	movsx eax, al
0x8049ccf:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x8049cd2:   0f 96 c0                        	setbe al
0x8049cd5:   0f b6 c0                        	movzx eax, al
0x8049cd8:   89 85 84 fe ff ff               	mov dword ptr [ebp - 0x17c], eax
0x8049cde:   8b 85 88 fe ff ff               	mov eax, dword ptr [ebp - 0x178]
0x8049ce4:   0f b6 d8                        	movzx ebx, al
0x8049ce7:   8b 85 88 fe ff ff               	mov eax, dword ptr [ebp - 0x178]
0x8049ced:   66 0f be 7d 8f                  	movsx di, byte ptr [ebp - 0x71]
0x8049cf2:   ba 00 00 00 00                  	mov edx, 0
0x8049cf7:   66 f7 f7                        	div di
0x8049cfa:   66 85 c0                        	test ax, ax
0x8049cfd:   0f 95 c0                        	setne al
0x8049d00:   0f b6 c0                        	movzx eax, al
0x8049d03:   89 c1                           	mov ecx, eax
0x8049d05:   d3 e3                           	shl ebx, cl
0x8049d07:   89 d8                           	mov eax, ebx
0x8049d09:   85 c0                           	test eax, eax
0x8049d0b:   0f 95 c0                        	setne al
0x8049d0e:   0f b6 c0                        	movzx eax, al
0x8049d11:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049d14:   e9 ad 01 00 00                  	jmp 0x8049ec6 <func_1+0x6cb>
0x8049d19:   c7 85 90 fe ff ff d4 86 bd 61   	mov dword ptr [ebp - 0x170], 0x61bd86d4
0x8049d23:   66 83 bd 12 ff ff ff 00         	cmp word ptr [ebp - 0xee], 0
0x8049d2b:   74 05                           	je 0x8049d32 <func_1+0x537>
0x8049d2d:   e9 03 fd ff ff                  	jmp 0x8049a35 <func_1+0x23a>
0x8049d32:   0f be 55 db                     	movsx edx, byte ptr [ebp - 0x25]
0x8049d36:   83 bd 90 fe ff ff 62            	cmp dword ptr [ebp - 0x170], 0x62
0x8049d3d:   0f 94 c0                        	sete al
0x8049d40:   0f b6 c0                        	movzx eax, al
0x8049d43:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x8049d46:   0f 95 c0                        	setne al
0x8049d49:   0f b6 c0                        	movzx eax, al
0x8049d4c:   21 d0                           	and eax, edx
0x8049d4e:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x8049d51:   0f 8f 2f 01 00 00               	jg 0x8049e86 <func_1+0x68b>
0x8049d57:   c6 85 8d fe ff ff 05            	mov byte ptr [ebp - 0x173], 5
0x8049d5e:   83 ad 6c ff ff ff 01            	sub dword ptr [ebp - 0x94], 1
0x8049d65:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x8049d68:   98                              	cwde 
0x8049d69:   c1 e0 0f                        	shl eax, 0xf
0x8049d6c:   0f be d0                        	movsx edx, al
0x8049d6f:   0f be 45 d1                     	movsx eax, byte ptr [ebp - 0x2f]
0x8049d73:   89 c1                           	mov ecx, eax
0x8049d75:   d3 fa                           	sar edx, cl
0x8049d77:   89 d0                           	mov eax, edx
0x8049d79:   66 31 45 d8                     	xor word ptr [ebp - 0x28], ax
0x8049d7d:   80 7d db 00                     	cmp byte ptr [ebp - 0x25], 0
0x8049d81:   0f 95 c0                        	setne al
0x8049d84:   0f b6 c0                        	movzx eax, al
0x8049d87:   09 45 c8                        	or dword ptr [ebp - 0x38], eax
0x8049d8a:   0f b7 85 98 fe ff ff            	movzx eax, word ptr [ebp - 0x168]
0x8049d91:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x8049d94:   0f 97 c0                        	seta al
0x8049d97:   0f b6 c0                        	movzx eax, al
0x8049d9a:   31 85 90 fe ff ff               	xor dword ptr [ebp - 0x170], eax
0x8049da0:   81 a5 94 fe ff ff d2 88 5f 6f   	and dword ptr [ebp - 0x16c], 0x6f5f88d2
0x8049daa:   0f be 45 af                     	movsx eax, byte ptr [ebp - 0x51]
0x8049dae:   0f b6 55 8d                     	movzx edx, byte ptr [ebp - 0x73]
0x8049db2:   0f b6 5d e2                     	movzx ebx, byte ptr [ebp - 0x1e]
0x8049db6:   0f b6 7d e3                     	movzx edi, byte ptr [ebp - 0x1d]
0x8049dba:   0f be 75 8e                     	movsx esi, byte ptr [ebp - 0x72]
0x8049dbe:   89 b5 70 fe ff ff               	mov dword ptr [ebp - 0x190], esi
0x8049dc4:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x8049dc8:   89 8d 6c fe ff ff               	mov dword ptr [ebp - 0x194], ecx
0x8049dce:   0f bf 75 f0                     	movsx esi, word ptr [ebp - 0x10]
0x8049dd2:   89 b5 68 fe ff ff               	mov dword ptr [ebp - 0x198], esi
0x8049dd8:   0f b6 4d f2                     	movzx ecx, byte ptr [ebp - 0xe]
0x8049ddc:   89 8d 64 fe ff ff               	mov dword ptr [ebp - 0x19c], ecx
0x8049de2:   0f b6 75 f3                     	movzx esi, byte ptr [ebp - 0xd]
0x8049de6:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x8049dec:   0f be 4d 8f                     	movsx ecx, byte ptr [ebp - 0x71]
0x8049df0:   89 8d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ecx
0x8049df6:   0f be 75 d1                     	movsx esi, byte ptr [ebp - 0x2f]
0x8049dfa:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x8049e00:   0f b7 4d d2                     	movzx ecx, word ptr [ebp - 0x2e]
0x8049e04:   89 8d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ecx
0x8049e0a:   0f bf 75 d8                     	movsx esi, word ptr [ebp - 0x28]
0x8049e0e:   0f be 4d db                     	movsx ecx, byte ptr [ebp - 0x25]
0x8049e12:   50                              	push eax
0x8049e13:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049e16:   52                              	push edx
0x8049e17:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049e1a:   53                              	push ebx
0x8049e1b:   57                              	push edi
0x8049e1c:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x8049e22:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049e25:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x8049e2b:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049e2e:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x8049e34:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x8049e3a:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x8049e40:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049e43:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049e46:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x8049e4c:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049e4f:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049e52:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x8049e58:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x8049e5e:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049e61:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049e64:   56                              	push esi
0x8049e65:   51                              	push ecx
0x8049e66:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049e69:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049e6c:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049e6f:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049e72:   e8 af f7 ff ff                  	call 0x8049626 <set_var>
0x8049e77:   83 c4 70                        	add esp, 0x70
0x8049e7a:   0f b7 85 98 fe ff ff            	movzx eax, word ptr [ebp - 0x168]
0x8049e81:   e9 ee 0d 00 00                  	jmp 0x804ac74 <func_1+0x1479>
0x8049e86:   66 c7 85 8e fe ff ff 00 00      	mov word ptr [ebp - 0x172], 0
0x8049e8f:   83 45 c4 01                     	add dword ptr [ebp - 0x3c], 1
0x8049e93:   80 7d db 00                     	cmp byte ptr [ebp - 0x25], 0
0x8049e97:   74 05                           	je 0x8049e9e <func_1+0x6a3>
0x8049e99:   66 83 7d d2 00                  	cmp word ptr [ebp - 0x2e], 0
0x8049e9e:   c7 85 0c ff ff ff 9f f8 a2 86   	mov dword ptr [ebp - 0xf4], 0x86a2f89f
0x8049ea8:   c7 85 14 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xec], 0
0x8049eb2:   c7 85 0c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xf4], 0
0x8049ebc:   81 a5 68 ff ff ff e4 19 da ff   	and dword ptr [ebp - 0x98], 0xffda19e4
0x8049ec6:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049ec9:   0f bf d0                        	movsx edx, ax
0x8049ecc:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049ecf:   8d 48 ff                        	lea ecx, [eax - 1]
0x8049ed2:   89 4d c8                        	mov dword ptr [ebp - 0x38], ecx
0x8049ed5:   89 c1                           	mov ecx, eax
0x8049ed7:   8b 85 94 fe ff ff               	mov eax, dword ptr [ebp - 0x16c]
0x8049edd:   31 c8                           	xor eax, ecx
0x8049edf:   0f bf c8                        	movsx ecx, ax
0x8049ee2:   89 d0                           	mov eax, edx
0x8049ee4:   99                              	cdq 
0x8049ee5:   f7 f9                           	idiv ecx
0x8049ee7:   89 d0                           	mov eax, edx
0x8049ee9:   98                              	cwde 
0x8049eea:   f7 d8                           	neg eax
0x8049eec:   89 c2                           	mov edx, eax
0x8049eee:   0f b6 85 0b ff ff ff            	movzx eax, byte ptr [ebp - 0xf5]
0x8049ef5:   3a 45 8f                        	cmp al, byte ptr [ebp - 0x71]
0x8049ef8:   0f 9d c0                        	setge al
0x8049efb:   0f b6 c0                        	movzx eax, al
0x8049efe:   39 c2                           	cmp edx, eax
0x8049f00:   0f 9f c0                        	setg al
0x8049f03:   0f b6 c0                        	movzx eax, al
0x8049f06:   39 45 a0                        	cmp dword ptr [ebp - 0x60], eax
0x8049f09:   0f 9c c0                        	setl al
0x8049f0c:   0f b6 c0                        	movzx eax, al
0x8049f0f:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049f12:   0f be 45 af                     	movsx eax, byte ptr [ebp - 0x51]
0x8049f16:   0f b6 55 8d                     	movzx edx, byte ptr [ebp - 0x73]
0x8049f1a:   0f b6 5d e2                     	movzx ebx, byte ptr [ebp - 0x1e]
0x8049f1e:   0f b6 7d e3                     	movzx edi, byte ptr [ebp - 0x1d]
0x8049f22:   0f be 75 8e                     	movsx esi, byte ptr [ebp - 0x72]
0x8049f26:   89 b5 70 fe ff ff               	mov dword ptr [ebp - 0x190], esi
0x8049f2c:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x8049f30:   89 8d 6c fe ff ff               	mov dword ptr [ebp - 0x194], ecx
0x8049f36:   0f bf 75 f0                     	movsx esi, word ptr [ebp - 0x10]
0x8049f3a:   89 b5 68 fe ff ff               	mov dword ptr [ebp - 0x198], esi
0x8049f40:   0f b6 4d f2                     	movzx ecx, byte ptr [ebp - 0xe]
0x8049f44:   89 8d 64 fe ff ff               	mov dword ptr [ebp - 0x19c], ecx
0x8049f4a:   0f b6 75 f3                     	movzx esi, byte ptr [ebp - 0xd]
0x8049f4e:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x8049f54:   0f be 4d 8f                     	movsx ecx, byte ptr [ebp - 0x71]
0x8049f58:   89 8d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ecx
0x8049f5e:   0f be 75 d1                     	movsx esi, byte ptr [ebp - 0x2f]
0x8049f62:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x8049f68:   0f b7 4d d2                     	movzx ecx, word ptr [ebp - 0x2e]
0x8049f6c:   89 8d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ecx
0x8049f72:   0f bf 75 d8                     	movsx esi, word ptr [ebp - 0x28]
0x8049f76:   0f be 4d db                     	movsx ecx, byte ptr [ebp - 0x25]
0x8049f7a:   50                              	push eax
0x8049f7b:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049f7e:   52                              	push edx
0x8049f7f:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049f82:   53                              	push ebx
0x8049f83:   57                              	push edi
0x8049f84:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x8049f8a:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049f8d:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x8049f93:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049f96:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x8049f9c:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x8049fa2:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x8049fa8:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049fab:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049fae:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x8049fb4:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049fb7:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049fba:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x8049fc0:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x8049fc6:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049fc9:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049fcc:   56                              	push esi
0x8049fcd:   51                              	push ecx
0x8049fce:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049fd1:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049fd4:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049fd7:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049fda:   e8 47 f6 ff ff                  	call 0x8049626 <set_var>
0x8049fdf:   83 c4 70                        	add esp, 0x70
0x8049fe2:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049fe5:   e9 8a 0c 00 00                  	jmp 0x804ac74 <func_1+0x1479>
0x8049fea:   66 c7 85 fa fe ff ff 69 0c      	mov word ptr [ebp - 0x106], 0xc69
0x8049ff3:   c7 85 f4 fe ff ff 07 1d 32 cf   	mov dword ptr [ebp - 0x10c], 0xcf321d07
0x8049ffd:   c7 85 f0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x110], 1
0x804a007:   c7 45 9c 91 02 9b 6d            	mov dword ptr [ebp - 0x64], 0x6d9b0291
0x804a00e:   c6 85 ef fe ff ff f4            	mov byte ptr [ebp - 0x111], 0xf4
0x804a015:   66 c7 85 ec fe ff ff 3a a4      	mov word ptr [ebp - 0x114], 0xa43a
0x804a01e:   c7 85 e8 fe ff ff 07 00 00 00   	mov dword ptr [ebp - 0x118], 7
0x804a028:   c7 85 e4 fe ff ff fb ff ff ff   	mov dword ptr [ebp - 0x11c], 0xfffffffb
0x804a032:   c6 85 e3 fe ff ff ec            	mov byte ptr [ebp - 0x11d], 0xec
0x804a039:   c7 85 dc fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x124], 4
0x804a043:   0f be 45 8f                     	movsx eax, byte ptr [ebp - 0x71]
0x804a047:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x804a04a:   7c 07                           	jl 0x804a053 <func_1+0x858>
0x804a04c:   b8 fb ff ff ff                  	mov eax, 0xfffffffb
0x804a051:   eb 05                           	jmp 0x804a058 <func_1+0x85d>
0x804a053:   b8 f6 ff ff ff                  	mov eax, 0xfffffff6
0x804a058:   3b 85 f4 fe ff ff               	cmp eax, dword ptr [ebp - 0x10c]
0x804a05e:   0f 9e c0                        	setle al
0x804a061:   0f b6 d0                        	movzx edx, al
0x804a064:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a067:   0f b6 c0                        	movzx eax, al
0x804a06a:   89 c1                           	mov ecx, eax
0x804a06c:   d3 fa                           	sar edx, cl
0x804a06e:   89 d0                           	mov eax, edx
0x804a070:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x804a076:   0f bf 45 d8                     	movsx eax, word ptr [ebp - 0x28]
0x804a07a:   f7 d0                           	not eax
0x804a07c:   89 c2                           	mov edx, eax
0x804a07e:   0f b7 85 72 ff ff ff            	movzx eax, word ptr [ebp - 0x8e]
0x804a085:   39 c2                           	cmp edx, eax
0x804a087:   0f 95 c0                        	setne al
0x804a08a:   0f b6 c0                        	movzx eax, al
0x804a08d:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804a093:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a096:   09 85 7c ff ff ff               	or dword ptr [ebp - 0x84], eax
0x804a09c:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a09f:   89 c1                           	mov ecx, eax
0x804a0a1:   8b 85 f0 fe ff ff               	mov eax, dword ptr [ebp - 0x110]
0x804a0a7:   66 31 45 d8                     	xor word ptr [ebp - 0x28], ax
0x804a0ab:   0f bf 45 d8                     	movsx eax, word ptr [ebp - 0x28]
0x804a0af:   8b 95 78 ff ff ff               	mov edx, dword ptr [ebp - 0x88]
0x804a0b5:   0f bf fa                        	movsx edi, dx
0x804a0b8:   99                              	cdq 
0x804a0b9:   f7 ff                           	idiv edi
0x804a0bb:   89 c3                           	mov ebx, eax
0x804a0bd:   89 c8                           	mov eax, ecx
0x804a0bf:   ba 00 00 00 00                  	mov edx, 0
0x804a0c4:   66 f7 f3                        	div bx
0x804a0c7:   89 d0                           	mov eax, edx
0x804a0c9:   66 85 c0                        	test ax, ax
0x804a0cc:   0f 84 38 03 00 00               	je 0x804a40a <func_1+0xc0f>
0x804a0d2:   66 c7 85 b2 fe ff ff 14 ee      	mov word ptr [ebp - 0x14e], 0xee14
0x804a0db:   c7 85 ac fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x154], 0xffffffff
0x804a0e5:   80 ad 67 ff ff ff 01            	sub byte ptr [ebp - 0x99], 1
0x804a0ec:   c7 45 c8 00 00 00 00            	mov dword ptr [ebp - 0x38], 0
0x804a0f3:   eb 47                           	jmp 0x804a13c <func_1+0x941>
0x804a0f5:   83 6d c0 01                     	sub dword ptr [ebp - 0x40], 1
0x804a0f9:   c7 45 a8 f3 ff ff ff            	mov dword ptr [ebp - 0x58], 0xfffffff3
0x804a100:   eb 30                           	jmp 0x804a132 <func_1+0x937>
0x804a102:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x804a106:   89 c1                           	mov ecx, eax
0x804a108:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a10b:   89 c2                           	mov edx, eax
0x804a10d:   0f b6 c1                        	movzx eax, cl
0x804a110:   f6 f2                           	div dl
0x804a112:   0f b6 c0                        	movzx eax, al
0x804a115:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a118:   83 bd ac fe ff ff 00            	cmp dword ptr [ebp - 0x154], 0
0x804a11f:   0f 95 c0                        	setne al
0x804a122:   0f b6 c0                        	movzx eax, al
0x804a125:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a128:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a12b:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a12e:   83 45 a8 06                     	add dword ptr [ebp - 0x58], 6
0x804a132:   83 7d a8 12                     	cmp dword ptr [ebp - 0x58], 0x12
0x804a136:   7e ca                           	jle 0x804a102 <func_1+0x907>
0x804a138:   83 45 c8 02                     	add dword ptr [ebp - 0x38], 2
0x804a13c:   83 7d c8 3a                     	cmp dword ptr [ebp - 0x38], 0x3a
0x804a140:   74 b3                           	je 0x804a0f5 <func_1+0x8fa>
0x804a142:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a146:   20 85 ef fe ff ff               	and byte ptr [ebp - 0x111], al
0x804a14c:   b8 00 00 00 00                  	mov eax, 0
0x804a151:   20 45 d1                        	and byte ptr [ebp - 0x2f], al
0x804a154:   0f be 45 d1                     	movsx eax, byte ptr [ebp - 0x2f]
0x804a158:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x804a15b:   0f 97 c0                        	seta al
0x804a15e:   0f b6 c0                        	movzx eax, al
0x804a161:   8b 8d 0c ff ff ff               	mov ecx, dword ptr [ebp - 0xf4]
0x804a167:   ba 00 00 00 00                  	mov edx, 0
0x804a16c:   f7 f1                           	div ecx
0x804a16e:   89 d0                           	mov eax, edx
0x804a170:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a173:   83 7d b4 04                     	cmp dword ptr [ebp - 0x4c], 4
0x804a177:   0f 85 12 01 00 00               	jne 0x804a28f <func_1+0xa94>
0x804a17d:   0f b7 85 64 ff ff ff            	movzx eax, word ptr [ebp - 0x9c]
0x804a184:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a187:   0f 9c c0                        	setl al
0x804a18a:   30 45 db                        	xor byte ptr [ebp - 0x25], al
0x804a18d:   0f be 45 db                     	movsx eax, byte ptr [ebp - 0x25]
0x804a191:   f7 d8                           	neg eax
0x804a193:   09 85 04 ff ff ff               	or dword ptr [ebp - 0xfc], eax
0x804a199:   0f be 55 d1                     	movsx edx, byte ptr [ebp - 0x2f]
0x804a19d:   0f b6 45 a7                     	movzx eax, byte ptr [ebp - 0x59]
0x804a1a1:   89 c1                           	mov ecx, eax
0x804a1a3:   d3 fa                           	sar edx, cl
0x804a1a5:   89 d0                           	mov eax, edx
0x804a1a7:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804a1ad:   c7 85 0c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xf4], 0
0x804a1b7:   0f be 45 af                     	movsx eax, byte ptr [ebp - 0x51]
0x804a1bb:   0f b6 55 8d                     	movzx edx, byte ptr [ebp - 0x73]
0x804a1bf:   0f b6 5d e2                     	movzx ebx, byte ptr [ebp - 0x1e]
0x804a1c3:   0f b6 7d e3                     	movzx edi, byte ptr [ebp - 0x1d]
0x804a1c7:   0f be 75 8e                     	movsx esi, byte ptr [ebp - 0x72]
0x804a1cb:   89 b5 70 fe ff ff               	mov dword ptr [ebp - 0x190], esi
0x804a1d1:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x804a1d5:   89 8d 6c fe ff ff               	mov dword ptr [ebp - 0x194], ecx
0x804a1db:   0f bf 75 f0                     	movsx esi, word ptr [ebp - 0x10]
0x804a1df:   89 b5 68 fe ff ff               	mov dword ptr [ebp - 0x198], esi
0x804a1e5:   0f b6 4d f2                     	movzx ecx, byte ptr [ebp - 0xe]
0x804a1e9:   89 8d 64 fe ff ff               	mov dword ptr [ebp - 0x19c], ecx
0x804a1ef:   0f b6 75 f3                     	movzx esi, byte ptr [ebp - 0xd]
0x804a1f3:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x804a1f9:   0f be 4d 8f                     	movsx ecx, byte ptr [ebp - 0x71]
0x804a1fd:   89 8d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ecx
0x804a203:   0f be 75 d1                     	movsx esi, byte ptr [ebp - 0x2f]
0x804a207:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804a20d:   0f b7 4d d2                     	movzx ecx, word ptr [ebp - 0x2e]
0x804a211:   89 8d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ecx
0x804a217:   0f bf 75 d8                     	movsx esi, word ptr [ebp - 0x28]
0x804a21b:   0f be 4d db                     	movsx ecx, byte ptr [ebp - 0x25]
0x804a21f:   50                              	push eax
0x804a220:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a223:   52                              	push edx
0x804a224:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a227:   53                              	push ebx
0x804a228:   57                              	push edi
0x804a229:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a22f:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a232:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a238:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a23b:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a241:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804a247:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a24d:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a250:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a253:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a259:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a25c:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a25f:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a265:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a26b:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a26e:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a271:   56                              	push esi
0x804a272:   51                              	push ecx
0x804a273:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a276:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a279:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a27c:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a27f:   e8 a2 f3 ff ff                  	call 0x8049626 <set_var>
0x804a284:   83 c4 70                        	add esp, 0x70
0x804a287:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a28a:   e9 e5 09 00 00                  	jmp 0x804ac74 <func_1+0x1479>
0x804a28f:   c6 85 ab fe ff ff bb            	mov byte ptr [ebp - 0x155], 0xbb
0x804a296:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a29a:   8d 50 ff                        	lea edx, [eax - 1]
0x804a29d:   88 55 f3                        	mov byte ptr [ebp - 0xd], dl
0x804a2a0:   0f b6 d0                        	movzx edx, al
0x804a2a3:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a2a6:   0f b7 d8                        	movzx ebx, ax
0x804a2a9:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a2ac:   0f b7 c0                        	movzx eax, ax
0x804a2af:   89 c1                           	mov ecx, eax
0x804a2b1:   d3 fb                           	sar ebx, cl
0x804a2b3:   89 d9                           	mov ecx, ebx
0x804a2b5:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x804a2bb:   3b 85 ac fe ff ff               	cmp eax, dword ptr [ebp - 0x154]
0x804a2c1:   0f 94 c0                        	sete al
0x804a2c4:   0f b6 c0                        	movzx eax, al
0x804a2c7:   39 c1                           	cmp ecx, eax
0x804a2c9:   0f 9d c0                        	setge al
0x804a2cc:   0f b6 c0                        	movzx eax, al
0x804a2cf:   0f af d0                        	imul edx, eax
0x804a2d2:   0f bf 45 d8                     	movsx eax, word ptr [ebp - 0x28]
0x804a2d6:   39 c2                           	cmp edx, eax
0x804a2d8:   0f 9e c0                        	setle al
0x804a2db:   0f b6 c0                        	movzx eax, al
0x804a2de:   66 31 45 f0                     	xor word ptr [ebp - 0x10], ax
0x804a2e2:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804a2e6:   0f b7 c0                        	movzx eax, ax
0x804a2e9:   d1 f8                           	sar eax, 1
0x804a2eb:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x804a2f1:   83 bd f0 fe ff ff 00            	cmp dword ptr [ebp - 0x110], 0
0x804a2f8:   74 3a                           	je 0x804a334 <func_1+0xb39>
0x804a2fa:   c6 85 a3 fe ff ff 00            	mov byte ptr [ebp - 0x15d], 0
0x804a301:   66 0f be 45 d1                  	movsx ax, byte ptr [ebp - 0x2f]
0x804a306:   66 39 45 d8                     	cmp word ptr [ebp - 0x28], ax
0x804a30a:   75 07                           	jne 0x804a313 <func_1+0xb18>
0x804a30c:   ba 1d 00 00 00                  	mov edx, 0x1d
0x804a311:   eb 05                           	jmp 0x804a318 <func_1+0xb1d>
0x804a313:   ba 1c 00 00 00                  	mov edx, 0x1c
0x804a318:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a31b:   89 c1                           	mov ecx, eax
0x804a31d:   89 d0                           	mov eax, edx
0x804a31f:   0f af c1                        	imul eax, ecx
0x804a322:   89 c2                           	mov edx, eax
0x804a324:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a327:   09 d0                           	or eax, edx
0x804a329:   88 85 ab fe ff ff               	mov byte ptr [ebp - 0x155], al
0x804a32f:   e9 6d 08 00 00                  	jmp 0x804aba1 <func_1+0x13a6>
0x804a334:   c7 85 a4 fe ff ff 03 00 00 00   	mov dword ptr [ebp - 0x15c], 3
0x804a33e:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a341:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x804a345:   0f bf 45 d8                     	movsx eax, word ptr [ebp - 0x28]
0x804a349:   01 c0                           	add eax, eax
0x804a34b:   0f bf d0                        	movsx edx, ax
0x804a34e:   0f b6 45 d1                     	movzx eax, byte ptr [ebp - 0x2f]
0x804a352:   f7 d0                           	not eax
0x804a354:   c0 e8 07                        	shr al, 7
0x804a357:   0f b6 c0                        	movzx eax, al
0x804a35a:   01 d0                           	add eax, edx
0x804a35c:   85 c0                           	test eax, eax
0x804a35e:   75 05                           	jne 0x804a365 <func_1+0xb6a>
0x804a360:   66 83 7d f0 00                  	cmp word ptr [ebp - 0x10], 0
0x804a365:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a368:   0f be c0                        	movsx eax, al
0x804a36b:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804a370:   89 c1                           	mov ecx, eax
0x804a372:   d3 fa                           	sar edx, cl
0x804a374:   89 d0                           	mov eax, edx
0x804a376:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x804a37c:   0f b6 85 ab fe ff ff            	movzx eax, byte ptr [ebp - 0x155]
0x804a383:   0f b6 c0                        	movzx eax, al
0x804a386:   31 85 ac fe ff ff               	xor dword ptr [ebp - 0x154], eax
0x804a38c:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x804a393:   0f b7 85 ec fe ff ff            	movzx eax, word ptr [ebp - 0x114]
0x804a39a:   8d 50 ff                        	lea edx, [eax - 1]
0x804a39d:   66 89 95 ec fe ff ff            	mov word ptr [ebp - 0x114], dx
0x804a3a4:   66 85 c0                        	test ax, ax
0x804a3a7:   75 44                           	jne 0x804a3ed <func_1+0xbf2>
0x804a3a9:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a3ac:   89 c2                           	mov edx, eax
0x804a3ae:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x804a3b4:   31 45 ec                        	xor dword ptr [ebp - 0x14], eax
0x804a3b7:   81 7d ec 0a c3 06 5c            	cmp dword ptr [ebp - 0x14], 0x5c06c30a
0x804a3be:   0f 94 c0                        	sete al
0x804a3c1:   0f b6 c0                        	movzx eax, al
0x804a3c4:   89 c1                           	mov ecx, eax
0x804a3c6:   8b 85 a4 fe ff ff               	mov eax, dword ptr [ebp - 0x15c]
0x804a3cc:   0f af c8                        	imul ecx, eax
0x804a3cf:   89 d0                           	mov eax, edx
0x804a3d1:   ba 00 00 00 00                  	mov edx, 0
0x804a3d6:   66 f7 f1                        	div cx
0x804a3d9:   89 d0                           	mov eax, edx
0x804a3db:   0f b7 c0                        	movzx eax, ax
0x804a3de:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x804a3e4:   83 bd 0c ff ff ff 00            	cmp dword ptr [ebp - 0xf4], 0
0x804a3eb:   74 07                           	je 0x804a3f4 <func_1+0xbf9>
0x804a3ed:   b8 01 00 00 00                  	mov eax, 1
0x804a3f2:   eb 05                           	jmp 0x804a3f9 <func_1+0xbfe>
0x804a3f4:   b8 00 00 00 00                  	mov eax, 0
0x804a3f9:   3b 45 dc                        	cmp eax, dword ptr [ebp - 0x24]
0x804a3fc:   0f 94 c0                        	sete al
0x804a3ff:   0f b6 c0                        	movzx eax, al
0x804a402:   31 45 b8                        	xor dword ptr [ebp - 0x48], eax
0x804a405:   e9 97 07 00 00                  	jmp 0x804aba1 <func_1+0x13a6>
0x804a40a:   c7 85 d8 fe ff ff f8 ff ff ff   	mov dword ptr [ebp - 0x128], 0xfffffff8
0x804a414:   c7 85 d4 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x12c], 1
0x804a41e:   c7 85 d0 fe ff ff aa 1b 95 1b   	mov dword ptr [ebp - 0x130], 0x1b951baa
0x804a428:   c7 85 cc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x134], 0
0x804a432:   c6 85 cb fe ff ff a5            	mov byte ptr [ebp - 0x135], 0xa5
0x804a439:   c7 85 04 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xfc], 0
0x804a443:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x804a447:   75 08                           	jne 0x804a451 <func_1+0xc56>
0x804a449:   66 83 bd fa fe ff ff 00         	cmp word ptr [ebp - 0x106], 0
0x804a451:   c7 85 c4 fe ff ff f7 ff ff ff   	mov dword ptr [ebp - 0x13c], 0xfffffff7
0x804a45b:   c7 85 c0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x140], 0
0x804a465:   c7 85 bc fe ff ff 09 00 00 00   	mov dword ptr [ebp - 0x144], 9
0x804a46f:   83 bd fc fe ff ff 00            	cmp dword ptr [ebp - 0x104], 0
0x804a476:   0f 84 1b 01 00 00               	je 0x804a597 <func_1+0xd9c>
0x804a47c:   66 c7 85 ba fe ff ff f5 34      	mov word ptr [ebp - 0x146], 0x34f5
0x804a485:   66 c7 85 b8 fe ff ff 9a da      	mov word ptr [ebp - 0x148], 0xda9a
0x804a48e:   81 a5 f0 fe ff ff e5 bf a3 76   	and dword ptr [ebp - 0x110], 0x76a3bfe5
0x804a498:   66 83 bd 12 ff ff ff 00         	cmp word ptr [ebp - 0xee], 0
0x804a4a0:   75 09                           	jne 0x804a4ab <func_1+0xcb0>
0x804a4a2:   c7 45 bc 00 00 00 00            	mov dword ptr [ebp - 0x44], 0
0x804a4a9:   eb 01                           	jmp 0x804a4ac <func_1+0xcb1>
0x804a4ab:   90                              	nop 
0x804a4ac:   0f b7 85 ec fe ff ff            	movzx eax, word ptr [ebp - 0x114]
0x804a4b3:   39 85 d4 fe ff ff               	cmp dword ptr [ebp - 0x12c], eax
0x804a4b9:   0f 94 c0                        	sete al
0x804a4bc:   0f b6 c0                        	movzx eax, al
0x804a4bf:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a4c2:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a4c5:   f7 d0                           	not eax
0x804a4c7:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a4ca:   0f b7 85 ba fe ff ff            	movzx eax, word ptr [ebp - 0x146]
0x804a4d1:   0b 85 d8 fe ff ff               	or eax, dword ptr [ebp - 0x128]
0x804a4d7:   3d 53 c0 00 00                  	cmp eax, 0xc053
0x804a4dc:   0f 9f c0                        	setg al
0x804a4df:   0f b6 c0                        	movzx eax, al
0x804a4e2:   99                              	cdq 
0x804a4e3:   f7 bd e8 fe ff ff               	idiv dword ptr [ebp - 0x118]
0x804a4e9:   39 85 f0 fe ff ff               	cmp dword ptr [ebp - 0x110], eax
0x804a4ef:   0f 9e c0                        	setle al
0x804a4f2:   0f b6 d0                        	movzx edx, al
0x804a4f5:   0f b7 85 ec fe ff ff            	movzx eax, word ptr [ebp - 0x114]
0x804a4fc:   09 d0                           	or eax, edx
0x804a4fe:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804a501:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a504:   66 31 45 ea                     	xor word ptr [ebp - 0x16], ax
0x804a508:   8b 85 e4 fe ff ff               	mov eax, dword ptr [ebp - 0x11c]
0x804a50e:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x804a514:   83 bd f0 fe ff ff 00            	cmp dword ptr [ebp - 0x110], 0
0x804a51b:   75 09                           	jne 0x804a526 <func_1+0xd2b>
0x804a51d:   8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x804a523:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a526:   c6 45 f2 01                     	mov byte ptr [ebp - 0xe], 1
0x804a52a:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a52e:   89 c2                           	mov edx, eax
0x804a530:   0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x804a534:   0f b6 c0                        	movzx eax, al
0x804a537:   f6 f2                           	div dl
0x804a539:   0f b6 c0                        	movzx eax, al
0x804a53c:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x804a53f:   77 12                           	ja 0x804a553 <func_1+0xd58>
0x804a541:   66 83 bd ba fe ff ff 00         	cmp word ptr [ebp - 0x146], 0
0x804a549:   75 08                           	jne 0x804a553 <func_1+0xd58>
0x804a54b:   66 83 bd b8 fe ff ff 00         	cmp word ptr [ebp - 0x148], 0
0x804a553:   90                              	nop 
0x804a554:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804a558:   0f be c8                        	movsx ecx, al
0x804a55b:   ba 1d 38 70 e0                  	mov edx, 0xe070381d
0x804a560:   89 c8                           	mov eax, ecx
0x804a562:   f7 ea                           	imul edx
0x804a564:   8d 04 0a                        	lea eax, [edx + ecx]
0x804a567:   c1 f8 06                        	sar eax, 6
0x804a56a:   89 c2                           	mov edx, eax
0x804a56c:   89 c8                           	mov eax, ecx
0x804a56e:   c1 f8 1f                        	sar eax, 0x1f
0x804a571:   29 c2                           	sub edx, eax
0x804a573:   89 d0                           	mov eax, edx
0x804a575:   c1 e0 03                        	shl eax, 3
0x804a578:   01 d0                           	add eax, edx
0x804a57a:   c1 e0 03                        	shl eax, 3
0x804a57d:   01 d0                           	add eax, edx
0x804a57f:   29 c1                           	sub ecx, eax
0x804a581:   89 ca                           	mov edx, ecx
0x804a583:   81 fa 85 00 00 00               	cmp edx, 0x85
0x804a589:   0f 9f c0                        	setg al
0x804a58c:   0f b6 c0                        	movzx eax, al
0x804a58f:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x804a595:   eb 1b                           	jmp 0x804a5b2 <func_1+0xdb7>
0x804a597:   c7 45 9c fa ff ff ff            	mov dword ptr [ebp - 0x64], 0xfffffffa
0x804a59e:   0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x804a5a2:   0f be c0                        	movsx eax, al
0x804a5a5:   89 85 bc fe ff ff               	mov dword ptr [ebp - 0x144], eax
0x804a5ab:   c7 45 bc cc 12 de e8            	mov dword ptr [ebp - 0x44], 0xe8de12cc
0x804a5b2:   83 85 5c ff ff ff 01            	add dword ptr [ebp - 0xa4], 1
0x804a5b9:   81 7d ec ae 78 a7 fd            	cmp dword ptr [ebp - 0x14], 0xfda778ae
0x804a5c0:   0f 95 c0                        	setne al
0x804a5c3:   0f b6 c0                        	movzx eax, al
0x804a5c6:   66 0f be 55 db                  	movsx dx, byte ptr [ebp - 0x25]
0x804a5cb:   0f b7 d2                        	movzx edx, dx
0x804a5ce:   bb 27 01 00 00                  	mov ebx, 0x127
0x804a5d3:   89 d1                           	mov ecx, edx
0x804a5d5:   d3 e3                           	shl ebx, cl
0x804a5d7:   89 da                           	mov edx, ebx
0x804a5d9:   0f bf ca                        	movsx ecx, dx
0x804a5dc:   99                              	cdq 
0x804a5dd:   f7 f9                           	idiv ecx
0x804a5df:   89 d0                           	mov eax, edx
0x804a5e1:   85 c0                           	test eax, eax
0x804a5e3:   75 07                           	jne 0x804a5ec <func_1+0xdf1>
0x804a5e5:   66 83 7d f0 00                  	cmp word ptr [ebp - 0x10], 0
0x804a5ea:   74 0d                           	je 0x804a5f9 <func_1+0xdfe>
0x804a5ec:   83 7d b4 00                     	cmp dword ptr [ebp - 0x4c], 0
0x804a5f0:   74 07                           	je 0x804a5f9 <func_1+0xdfe>
0x804a5f2:   b8 01 00 00 00                  	mov eax, 1
0x804a5f7:   eb 05                           	jmp 0x804a5fe <func_1+0xe03>
0x804a5f9:   b8 00 00 00 00                  	mov eax, 0
0x804a5fe:   98                              	cwde 
0x804a5ff:   8b 55 c8                        	mov edx, dword ptr [ebp - 0x38]
0x804a602:   0f bf fa                        	movsx edi, dx
0x804a605:   99                              	cdq 
0x804a606:   f7 ff                           	idiv edi
0x804a608:   31 85 d8 fe ff ff               	xor dword ptr [ebp - 0x128], eax
0x804a60e:   83 bd d8 fe ff ff 00            	cmp dword ptr [ebp - 0x128], 0
0x804a615:   74 47                           	je 0x804a65e <func_1+0xe63>
0x804a617:   c7 85 b4 fe ff ff 92 09 92 af   	mov dword ptr [ebp - 0x14c], 0xaf920992
0x804a621:   66 83 45 ea 01                  	add word ptr [ebp - 0x16], 1
0x804a626:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804a62c:   31 45 dc                        	xor dword ptr [ebp - 0x24], eax
0x804a62f:   0f be 45 d1                     	movsx eax, byte ptr [ebp - 0x2f]
0x804a633:   09 85 d8 fe ff ff               	or dword ptr [ebp - 0x128], eax
0x804a639:   c7 45 a8 01 00 ff ff            	mov dword ptr [ebp - 0x58], 0xffff0001
0x804a640:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a643:   21 85 d8 fe ff ff               	and dword ptr [ebp - 0x128], eax
0x804a649:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x804a64f:   09 45 9c                        	or dword ptr [ebp - 0x64], eax
0x804a652:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a656:   09 85 0c ff ff ff               	or dword ptr [ebp - 0xf4], eax
0x804a65c:   eb 0b                           	jmp 0x804a669 <func_1+0xe6e>
0x804a65e:   83 45 e4 01                     	add dword ptr [ebp - 0x1c], 1
0x804a662:   83 85 dc fe ff ff 01            	add dword ptr [ebp - 0x124], 1
0x804a669:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x804a66d:   83 e8 01                        	sub eax, 1
0x804a670:   88 45 e3                        	mov byte ptr [ebp - 0x1d], al
0x804a673:   0f b6 85 cb fe ff ff            	movzx eax, byte ptr [ebp - 0x135]
0x804a67a:   83 c0 01                        	add eax, 1
0x804a67d:   88 85 cb fe ff ff               	mov byte ptr [ebp - 0x135], al
0x804a683:   e9 19 05 00 00                  	jmp 0x804aba1 <func_1+0x13a6>
0x804a688:   66 c7 85 52 ff ff ff 14 3f      	mov word ptr [ebp - 0xae], 0x3f14
0x804a691:   66 c7 85 50 ff ff ff 00 00      	mov word ptr [ebp - 0xb0], 0
0x804a69a:   c7 85 4c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xb4], 0xffffffff
0x804a6a4:   c7 85 48 ff ff ff cc da 03 01   	mov dword ptr [ebp - 0xb8], 0x103dacc
0x804a6ae:   c7 45 98 fb ff ff ff            	mov dword ptr [ebp - 0x68], 0xfffffffb
0x804a6b5:   83 45 c8 01                     	add dword ptr [ebp - 0x38], 1
0x804a6b9:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a6bc:   83 c0 01                        	add eax, 1
0x804a6bf:   8b 7d cc                        	mov edi, dword ptr [ebp - 0x34]
0x804a6c2:   ba 00 00 00 00                  	mov edx, 0
0x804a6c7:   f7 f7                           	div edi
0x804a6c9:   83 f8 6d                        	cmp eax, 0x6d
0x804a6cc:   0f 97 c0                        	seta al
0x804a6cf:   0f b6 d0                        	movzx edx, al
0x804a6d2:   0f be 45 db                     	movsx eax, byte ptr [ebp - 0x25]
0x804a6d6:   39 c2                           	cmp edx, eax
0x804a6d8:   7c 07                           	jl 0x804a6e1 <func_1+0xee6>
0x804a6da:   b8 54 db 82 8f                  	mov eax, 0x8f82db54
0x804a6df:   eb 05                           	jmp 0x804a6e6 <func_1+0xeeb>
0x804a6e1:   b8 55 db 82 8f                  	mov eax, 0x8f82db55
0x804a6e6:   0f bf bd 62 ff ff ff            	movsx edi, word ptr [ebp - 0x9e]
0x804a6ed:   ba 00 00 00 00                  	mov edx, 0
0x804a6f2:   f7 f7                           	div edi
0x804a6f4:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804a6fa:   66 c7 45 f0 b7 03               	mov word ptr [ebp - 0x10], 0x3b7
0x804a700:   66 83 bd 76 ff ff ff 00         	cmp word ptr [ebp - 0x8a], 0
0x804a708:   74 07                           	je 0x804a711 <func_1+0xf16>
0x804a70a:   ba 01 00 00 00                  	mov edx, 1
0x804a70f:   eb 05                           	jmp 0x804a716 <func_1+0xf1b>
0x804a711:   ba 00 00 00 00                  	mov edx, 0
0x804a716:   0f be 85 5b ff ff ff            	movsx eax, byte ptr [ebp - 0xa5]
0x804a71d:   31 d0                           	xor eax, edx
0x804a71f:   35 29 7c 2f 41                  	xor eax, 0x412f7c29
0x804a724:   89 c2                           	mov edx, eax
0x804a726:   0f b6 85 75 ff ff ff            	movzx eax, byte ptr [ebp - 0x8b]
0x804a72d:   39 c2                           	cmp edx, eax
0x804a72f:   0f 9e c0                        	setle al
0x804a732:   0f b6 d0                        	movzx edx, al
0x804a735:   0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x804a739:   39 c2                           	cmp edx, eax
0x804a73b:   0f 9f c0                        	setg al
0x804a73e:   0f b6 d0                        	movzx edx, al
0x804a741:   0f b7 85 58 ff ff ff            	movzx eax, word ptr [ebp - 0xa8]
0x804a748:   09 d0                           	or eax, edx
0x804a74a:   85 c0                           	test eax, eax
0x804a74c:   0f 94 c0                        	sete al
0x804a74f:   0f b6 d0                        	movzx edx, al
0x804a752:   0f bf 85 50 ff ff ff            	movsx eax, word ptr [ebp - 0xb0]
0x804a759:   89 c1                           	mov ecx, eax
0x804a75b:   d3 e2                           	shl edx, cl
0x804a75d:   89 d0                           	mov eax, edx
0x804a75f:   89 c2                           	mov edx, eax
0x804a761:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a764:   01 c2                           	add edx, eax
0x804a766:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a769:   01 d0                           	add eax, edx
0x804a76b:   0f b7 d0                        	movzx edx, ax
0x804a76e:   0f b7 85 50 ff ff ff            	movzx eax, word ptr [ebp - 0xb0]
0x804a775:   0f b7 c0                        	movzx eax, ax
0x804a778:   01 d0                           	add eax, edx
0x804a77a:   85 c0                           	test eax, eax
0x804a77c:   0f 84 9f 03 00 00               	je 0x804ab21 <func_1+0x1326>
0x804a782:   66 c7 85 44 ff ff ff 01 00      	mov word ptr [ebp - 0xbc], 1
0x804a78b:   c7 85 40 ff ff ff d6 9a 2f 7f   	mov dword ptr [ebp - 0xc0], 0x7f2f9ad6
0x804a795:   c6 85 3f ff ff ff fc            	mov byte ptr [ebp - 0xc1], 0xfc
0x804a79c:   66 c7 85 3c ff ff ff 65 b2      	mov word ptr [ebp - 0xc4], 0xb265
0x804a7a5:   66 c7 85 3a ff ff ff 02 00      	mov word ptr [ebp - 0xc6], 2
0x804a7ae:   c6 85 39 ff ff ff 89            	mov byte ptr [ebp - 0xc7], 0x89
0x804a7b5:   c7 85 34 ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0xcc], 6
0x804a7bf:   0f be 45 8e                     	movsx eax, byte ptr [ebp - 0x72]
0x804a7c3:   21 45 dc                        	and dword ptr [ebp - 0x24], eax
0x804a7c6:   0f b7 85 44 ff ff ff            	movzx eax, word ptr [ebp - 0xbc]
0x804a7cd:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x804a7d3:   0f bf 85 50 ff ff ff            	movsx eax, word ptr [ebp - 0xb0]
0x804a7da:   89 85 40 ff ff ff               	mov dword ptr [ebp - 0xc0], eax
0x804a7e0:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x804a7e6:   89 c1                           	mov ecx, eax
0x804a7e8:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a7eb:   89 c2                           	mov edx, eax
0x804a7ed:   0f b6 c1                        	movzx eax, cl
0x804a7f0:   f6 f2                           	div dl
0x804a7f2:   0f b6 d0                        	movzx edx, al
0x804a7f5:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804a7f9:   0f be c8                        	movsx ecx, al
0x804a7fc:   0f b7 85 64 ff ff ff            	movzx eax, word ptr [ebp - 0x9c]
0x804a803:   0f be c0                        	movsx eax, al
0x804a806:   0f af c1                        	imul eax, ecx
0x804a809:   39 c2                           	cmp edx, eax
0x804a80b:   0f 9c c0                        	setl al
0x804a80e:   88 85 3f ff ff ff               	mov byte ptr [ebp - 0xc1], al
0x804a814:   c7 45 bc 00 00 00 00            	mov dword ptr [ebp - 0x44], 0
0x804a81b:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x804a81f:   66 c1 e8 0f                     	shr ax, 0xf
0x804a823:   0f b6 c0                        	movzx eax, al
0x804a826:   21 85 4c ff ff ff               	and dword ptr [ebp - 0xb4], eax
0x804a82c:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x804a830:   0f 95 c0                        	setne al
0x804a833:   0f b6 d0                        	movzx edx, al
0x804a836:   0f b7 85 52 ff ff ff            	movzx eax, word ptr [ebp - 0xae]
0x804a83d:   39 c2                           	cmp edx, eax
0x804a83f:   0f 9f c0                        	setg al
0x804a842:   0f b6 d0                        	movzx edx, al
0x804a845:   0f b7 85 52 ff ff ff            	movzx eax, word ptr [ebp - 0xae]
0x804a84c:   39 c2                           	cmp edx, eax
0x804a84e:   0f 9f c0                        	setg al
0x804a851:   0f b6 c0                        	movzx eax, al
0x804a854:   33 45 c8                        	xor eax, dword ptr [ebp - 0x38]
0x804a857:   05 15 e0 d3 59                  	add eax, 0x59d3e015
0x804a85c:   39 85 48 ff ff ff               	cmp dword ptr [ebp - 0xb8], eax
0x804a862:   0f 92 c0                        	setb al
0x804a865:   0f b6 d0                        	movzx edx, al
0x804a868:   0f b7 85 52 ff ff ff            	movzx eax, word ptr [ebp - 0xae]
0x804a86f:   39 c2                           	cmp edx, eax
0x804a871:   0f 9e c0                        	setle al
0x804a874:   0f b6 c0                        	movzx eax, al
0x804a877:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a87a:   74 26                           	je 0x804a8a2 <func_1+0x10a7>
0x804a87c:   c7 45 e4 12 00 00 00            	mov dword ptr [ebp - 0x1c], 0x12
0x804a883:   eb 12                           	jmp 0x804a897 <func_1+0x109c>
0x804a885:   80 45 e2 01                     	add byte ptr [ebp - 0x1e], 1
0x804a889:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x804a88d:   0f 85 fd 02 00 00               	jne 0x804ab90 <func_1+0x1395>
0x804a893:   83 45 e4 01                     	add dword ptr [ebp - 0x1c], 1
0x804a897:   83 7d e4 38                     	cmp dword ptr [ebp - 0x1c], 0x38
0x804a89b:   76 e8                           	jbe 0x804a885 <func_1+0x108a>
0x804a89d:   e9 55 02 00 00                  	jmp 0x804aaf7 <func_1+0x12fc>
0x804a8a2:   c7 45 94 04 00 00 00            	mov dword ptr [ebp - 0x6c], 4
0x804a8a9:   83 bd 78 ff ff ff 00            	cmp dword ptr [ebp - 0x88], 0
0x804a8b0:   0f 84 43 01 00 00               	je 0x804a9f9 <func_1+0x11fe>
0x804a8b6:   c7 85 24 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xdc], 0xffffffff
0x804a8c0:   c7 85 20 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe0], 0
0x804a8ca:   83 bd 24 ff ff ff 00            	cmp dword ptr [ebp - 0xdc], 0
0x804a8d1:   75 21                           	jne 0x804a8f4 <func_1+0x10f9>
0x804a8d3:   0f b7 85 3c ff ff ff            	movzx eax, word ptr [ebp - 0xc4]
0x804a8da:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x804a8dd:   0f 9e c0                        	setle al
0x804a8e0:   0f b6 c0                        	movzx eax, al
0x804a8e3:   0f b7 4d d2                     	movzx ecx, word ptr [ebp - 0x2e]
0x804a8e7:   ba 00 00 00 00                  	mov edx, 0
0x804a8ec:   f7 f1                           	div ecx
0x804a8ee:   89 d0                           	mov eax, edx
0x804a8f0:   85 c0                           	test eax, eax
0x804a8f2:   74 07                           	je 0x804a8fb <func_1+0x1100>
0x804a8f4:   b8 01 00 00 00                  	mov eax, 1
0x804a8f9:   eb 05                           	jmp 0x804a900 <func_1+0x1105>
0x804a8fb:   b8 00 00 00 00                  	mov eax, 0
0x804a900:   0f b7 d0                        	movzx edx, ax
0x804a903:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a906:   0f b7 c0                        	movzx eax, ax
0x804a909:   01 d0                           	add eax, edx
0x804a90b:   85 c0                           	test eax, eax
0x804a90d:   0f 95 c0                        	setne al
0x804a910:   0f b6 c0                        	movzx eax, al
0x804a913:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x804a919:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a91f:   0f be c0                        	movsx eax, al
0x804a922:   6b d0 df                        	imul edx, eax, -0x21
0x804a925:   0f b7 85 3c ff ff ff            	movzx eax, word ptr [ebp - 0xc4]
0x804a92c:   21 d0                           	and eax, edx
0x804a92e:   89 c2                           	mov edx, eax
0x804a930:   0f bf 85 3a ff ff ff            	movsx eax, word ptr [ebp - 0xc6]
0x804a937:   01 d0                           	add eax, edx
0x804a939:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x804a93c:   0f 93 c0                        	setae al
0x804a93f:   0f b6 c0                        	movzx eax, al
0x804a942:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x804a945:   66 83 bd 62 ff ff ff 00         	cmp word ptr [ebp - 0x9e], 0
0x804a94d:   74 11                           	je 0x804a960 <func_1+0x1165>
0x804a94f:   66 83 bd 3a ff ff ff 00         	cmp word ptr [ebp - 0xc6], 0
0x804a957:   74 07                           	je 0x804a960 <func_1+0x1165>
0x804a959:   83 bd 24 ff ff ff 00            	cmp dword ptr [ebp - 0xdc], 0
0x804a960:   c7 85 20 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe0], 0
0x804a96a:   0f bf 5d f0                     	movsx ebx, word ptr [ebp - 0x10]
0x804a96e:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a971:   0f b7 bd 76 ff ff ff            	movzx edi, word ptr [ebp - 0x8a]
0x804a978:   ba 00 00 00 00                  	mov edx, 0
0x804a97d:   66 f7 f7                        	div di
0x804a980:   66 23 85 44 ff ff ff            	and ax, word ptr [ebp - 0xbc]
0x804a987:   0f b7 d0                        	movzx edx, ax
0x804a98a:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a98d:   0f b7 c0                        	movzx eax, ax
0x804a990:   89 c1                           	mov ecx, eax
0x804a992:   d3 fa                           	sar edx, cl
0x804a994:   89 d0                           	mov eax, edx
0x804a996:   89 c1                           	mov ecx, eax
0x804a998:   b8 03 00 00 00                  	mov eax, 3
0x804a99d:   ba 00 00 00 00                  	mov edx, 0
0x804a9a2:   f7 f1                           	div ecx
0x804a9a4:   89 d0                           	mov eax, edx
0x804a9a6:   0f b7 8d 3a ff ff ff            	movzx ecx, word ptr [ebp - 0xc6]
0x804a9ad:   ba 00 00 00 00                  	mov edx, 0
0x804a9b2:   66 f7 f1                        	div cx
0x804a9b5:   89 d0                           	mov eax, edx
0x804a9b7:   66 85 c0                        	test ax, ax
0x804a9ba:   75 07                           	jne 0x804a9c3 <func_1+0x11c8>
0x804a9bc:   66 83 7d d2 00                  	cmp word ptr [ebp - 0x2e], 0
0x804a9c1:   74 07                           	je 0x804a9ca <func_1+0x11cf>
0x804a9c3:   b8 01 00 00 00                  	mov eax, 1
0x804a9c8:   eb 05                           	jmp 0x804a9cf <func_1+0x11d4>
0x804a9ca:   b8 00 00 00 00                  	mov eax, 0
0x804a9cf:   89 85 40 ff ff ff               	mov dword ptr [ebp - 0xc0], eax
0x804a9d5:   39 9d 40 ff ff ff               	cmp dword ptr [ebp - 0xc0], ebx
0x804a9db:   0f 9d c0                        	setge al
0x804a9de:   0f b6 c0                        	movzx eax, al
0x804a9e1:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x804a9e7:   0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x804a9eb:   23 85 5c ff ff ff               	and eax, dword ptr [ebp - 0xa4]
0x804a9f1:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a9f4:   e9 d0 00 00 00                  	jmp 0x804aac9 <func_1+0x12ce>
0x804a9f9:   c7 85 30 ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0xd0], 6
0x804aa03:   c7 85 2c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd4], 0
0x804aa0d:   c7 85 28 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xd8], 0xffffffff
0x804aa17:   80 bd 67 ff ff ff 00            	cmp byte ptr [ebp - 0x99], 0
0x804aa1e:   74 40                           	je 0x804aa60 <func_1+0x1265>
0x804aa20:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x804aa26:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804aa2c:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804aa32:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x804aa38:   0f bf bd 50 ff ff ff            	movsx edi, word ptr [ebp - 0xb0]
0x804aa3f:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804aa45:   99                              	cdq 
0x804aa46:   f7 ff                           	idiv edi
0x804aa48:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804aa4b:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804aa4e:   89 c2                           	mov edx, eax
0x804aa50:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x804aa56:   0f af c2                        	imul eax, edx
0x804aa59:   66 c1 e8 08                     	shr ax, 8
0x804aa5d:   66 85 c0                        	test ax, ax
0x804aa60:   83 bd 2c ff ff ff 01            	cmp dword ptr [ebp - 0xd4], 1
0x804aa67:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x804aa6b:   74 55                           	je 0x804aac2 <func_1+0x12c7>
0x804aa6d:   c7 45 c4 4a ad c7 63            	mov dword ptr [ebp - 0x3c], 0x63c7ad4a
0x804aa74:   80 4d db 78                     	or byte ptr [ebp - 0x25], 0x78
0x804aa78:   0f be 45 db                     	movsx eax, byte ptr [ebp - 0x25]
0x804aa7c:   0f b7 55 d8                     	movzx edx, word ptr [ebp - 0x28]
0x804aa80:   0f be ca                        	movsx ecx, dl
0x804aa83:   99                              	cdq 
0x804aa84:   f7 f9                           	idiv ecx
0x804aa86:   89 95 4c ff ff ff               	mov dword ptr [ebp - 0xb4], edx
0x804aa8c:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804aa92:   3b 45 ec                        	cmp eax, dword ptr [ebp - 0x14]
0x804aa95:   0f 9d c0                        	setge al
0x804aa98:   0f b6 d0                        	movzx edx, al
0x804aa9b:   0f b6 45 e2                     	movzx eax, byte ptr [ebp - 0x1e]
0x804aa9f:   39 c2                           	cmp edx, eax
0x804aaa1:   0f b6 45 e2                     	movzx eax, byte ptr [ebp - 0x1e]
0x804aaa5:   39 85 28 ff ff ff               	cmp dword ptr [ebp - 0xd8], eax
0x804aaab:   0f 9e c0                        	setle al
0x804aaae:   0f b6 d0                        	movzx edx, al
0x804aab1:   0f bf 45 d8                     	movsx eax, word ptr [ebp - 0x28]
0x804aab5:   39 c2                           	cmp edx, eax
0x804aab7:   0f 9e c0                        	setle al
0x804aaba:   0f b6 c0                        	movzx eax, al
0x804aabd:   31 45 a8                        	xor dword ptr [ebp - 0x58], eax
0x804aac0:   eb 07                           	jmp 0x804aac9 <func_1+0x12ce>
0x804aac2:   c7 45 98 00 00 00 00            	mov dword ptr [ebp - 0x68], 0
0x804aac9:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804aacc:   0f b6 d0                        	movzx edx, al
0x804aacf:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804aad5:   0f b6 c0                        	movzx eax, al
0x804aad8:   89 c1                           	mov ecx, eax
0x804aada:   d3 e2                           	shl edx, cl
0x804aadc:   89 d0                           	mov eax, edx
0x804aade:   09 45 dc                        	or dword ptr [ebp - 0x24], eax
0x804aae1:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804aae4:   33 45 e4                        	xor eax, dword ptr [ebp - 0x1c]
0x804aae7:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804aaea:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804aaed:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804aaf0:   0f b6 45 e2                     	movzx eax, byte ptr [ebp - 0x1e]
0x804aaf4:   88 45 af                        	mov byte ptr [ebp - 0x51], al
0x804aaf7:   c6 45 f2 07                     	mov byte ptr [ebp - 0xe], 7
0x804aafb:   eb 1c                           	jmp 0x804ab19 <func_1+0x131e>
0x804aafd:   c6 85 1f ff ff ff 01            	mov byte ptr [ebp - 0xe1], 1
0x804ab04:   c6 85 1e ff ff ff 07            	mov byte ptr [ebp - 0xe2], 7
0x804ab0b:   0f b6 85 1f ff ff ff            	movzx eax, byte ptr [ebp - 0xe1]
0x804ab12:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804ab15:   80 45 f2 06                     	add byte ptr [ebp - 0xe], 6
0x804ab19:   80 7d f2 26                     	cmp byte ptr [ebp - 0xe], 0x26
0x804ab1d:   76 de                           	jbe 0x804aafd <func_1+0x1302>
0x804ab1f:   eb 70                           	jmp 0x804ab91 <func_1+0x1396>
0x804ab21:   66 c7 85 46 ff ff ff 01 00      	mov word ptr [ebp - 0xba], 1
0x804ab2a:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804ab2d:   05 4c d3 1d 23                  	add eax, 0x231dd34c
0x804ab32:   09 45 b8                        	or dword ptr [ebp - 0x48], eax
0x804ab35:   c7 45 98 00 00 00 00            	mov dword ptr [ebp - 0x68], 0
0x804ab3c:   eb 4a                           	jmp 0x804ab88 <func_1+0x138d>
0x804ab3e:   66 c7 45 ac 14 00               	mov word ptr [ebp - 0x54], 0x14
0x804ab44:   eb 11                           	jmp 0x804ab57 <func_1+0x135c>
0x804ab46:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804ab49:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804ab4c:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x804ab50:   83 e8 01                        	sub eax, 1
0x804ab53:   66 89 45 ac                     	mov word ptr [ebp - 0x54], ax
0x804ab57:   66 83 7d ac 0f                  	cmp word ptr [ebp - 0x54], 0xf
0x804ab5c:   75 e8                           	jne 0x804ab46 <func_1+0x134b>
0x804ab5e:   0f bf 95 46 ff ff ff            	movsx edx, word ptr [ebp - 0xba]
0x804ab65:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804ab68:   3b 45 dc                        	cmp eax, dword ptr [ebp - 0x24]
0x804ab6b:   0f 9e c0                        	setle al
0x804ab6e:   0f b6 c0                        	movzx eax, al
0x804ab71:   f7 d0                           	not eax
0x804ab73:   98                              	cwde 
0x804ab74:   89 c1                           	mov ecx, eax
0x804ab76:   d3 e2                           	shl edx, cl
0x804ab78:   89 d0                           	mov eax, edx
0x804ab7a:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804ab7d:   0f be 45 db                     	movsx eax, byte ptr [ebp - 0x25]
0x804ab81:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804ab84:   83 45 98 01                     	add dword ptr [ebp - 0x68], 1
0x804ab88:   83 7d 98 12                     	cmp dword ptr [ebp - 0x68], 0x12
0x804ab8c:   75 b0                           	jne 0x804ab3e <func_1+0x1343>
0x804ab8e:   eb 01                           	jmp 0x804ab91 <func_1+0x1396>
0x804ab90:   90                              	nop 
0x804ab91:   c7 85 78 ff ff ff df 55 1a dc   	mov dword ptr [ebp - 0x88], 0xdc1a55df
0x804ab9b:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804ab9e:   21 45 b0                        	and dword ptr [ebp - 0x50], eax
0x804aba1:   0f be 45 af                     	movsx eax, byte ptr [ebp - 0x51]
0x804aba5:   0f b6 55 8d                     	movzx edx, byte ptr [ebp - 0x73]
0x804aba9:   0f b6 5d e2                     	movzx ebx, byte ptr [ebp - 0x1e]
0x804abad:   0f b6 7d e3                     	movzx edi, byte ptr [ebp - 0x1d]
0x804abb1:   0f be 75 8e                     	movsx esi, byte ptr [ebp - 0x72]
0x804abb5:   89 b5 70 fe ff ff               	mov dword ptr [ebp - 0x190], esi
0x804abbb:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x804abbf:   89 8d 6c fe ff ff               	mov dword ptr [ebp - 0x194], ecx
0x804abc5:   0f bf 75 f0                     	movsx esi, word ptr [ebp - 0x10]
0x804abc9:   89 b5 68 fe ff ff               	mov dword ptr [ebp - 0x198], esi
0x804abcf:   0f b6 4d f2                     	movzx ecx, byte ptr [ebp - 0xe]
0x804abd3:   89 8d 64 fe ff ff               	mov dword ptr [ebp - 0x19c], ecx
0x804abd9:   0f b6 75 f3                     	movzx esi, byte ptr [ebp - 0xd]
0x804abdd:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x804abe3:   0f be 4d 8f                     	movsx ecx, byte ptr [ebp - 0x71]
0x804abe7:   89 8d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ecx
0x804abed:   0f be 75 d1                     	movsx esi, byte ptr [ebp - 0x2f]
0x804abf1:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804abf7:   0f b7 4d d2                     	movzx ecx, word ptr [ebp - 0x2e]
0x804abfb:   89 8d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ecx
0x804ac01:   0f bf 75 d8                     	movsx esi, word ptr [ebp - 0x28]
0x804ac05:   0f be 4d db                     	movsx ecx, byte ptr [ebp - 0x25]
0x804ac09:   50                              	push eax
0x804ac0a:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804ac0d:   52                              	push edx
0x804ac0e:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804ac11:   53                              	push ebx
0x804ac12:   57                              	push edi
0x804ac13:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804ac19:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804ac1c:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804ac22:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804ac25:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804ac2b:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804ac31:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804ac37:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804ac3a:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804ac3d:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804ac43:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804ac46:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804ac49:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804ac4f:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804ac55:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804ac58:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804ac5b:   56                              	push esi
0x804ac5c:   51                              	push ecx
0x804ac5d:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804ac60:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804ac63:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804ac66:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804ac69:   e8 b8 e9 ff ff                  	call 0x8049626 <set_var>
0x804ac6e:   83 c4 70                        	add esp, 0x70
0x804ac71:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804ac74:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804ac77:   5b                              	pop ebx
0x804ac78:   5e                              	pop esi
0x804ac79:   5f                              	pop edi
0x804ac7a:   5d                              	pop ebp
0x804ac7b:   c3                              	ret 
; function: main at 0x804ac7c -- 0x804b074
0x804ac7c:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804ac80:   83 e4 f0                        	and esp, 0xfffffff0
0x804ac83:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804ac86:   55                              	push ebp
0x804ac87:   89 e5                           	mov ebp, esp
0x804ac89:   53                              	push ebx
0x804ac8a:   51                              	push ecx
0x804ac8b:   83 ec 10                        	sub esp, 0x10
0x804ac8e:   e8 fd d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ac93:   81 c3 6d 33 00 00               	add ebx, 0x336d
0x804ac99:   89 c8                           	mov eax, ecx
0x804ac9b:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804aca2:   83 38 02                        	cmp dword ptr [eax], 2
0x804aca5:   75 26                           	jne 0x804accd <main+0x51>
0x804aca7:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804acaa:   83 c0 04                        	add eax, 4
0x804acad:   8b 00                           	mov eax, dword ptr [eax]
0x804acaf:   83 ec 08                        	sub esp, 8
0x804acb2:   8d 93 58 d1 ff ff               	lea edx, [ebx - 0x2ea8]
0x804acb8:   52                              	push edx
0x804acb9:   50                              	push eax
0x804acba:   e8 41 d6 ff ff                  	call 0x8048300 <strcmp>
0x804acbf:   83 c4 10                        	add esp, 0x10
0x804acc2:   85 c0                           	test eax, eax
0x804acc4:   75 07                           	jne 0x804accd <main+0x51>
0x804acc6:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804accd:   e8 84 d7 ff ff                  	call 0x8048456 <platform_main_begin>
0x804acd2:   e8 94 e7 ff ff                  	call 0x804946b <crc32_gentab>
0x804acd7:   e8 1f eb ff ff                  	call 0x80497fb <func_1>
0x804acdc:   8b 83 a4 04 00 00               	mov eax, dword ptr [ebx + 0x4a4]
0x804ace2:   89 c2                           	mov edx, eax
0x804ace4:   83 ec 04                        	sub esp, 4
0x804ace7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acea:   8d 83 5a d1 ff ff               	lea eax, [ebx - 0x2ea6]
0x804acf0:   50                              	push eax
0x804acf1:   52                              	push edx
0x804acf2:   e8 80 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acf7:   83 c4 10                        	add esp, 0x10
0x804acfa:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804ad00:   89 c2                           	mov edx, eax
0x804ad02:   83 ec 04                        	sub esp, 4
0x804ad05:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad08:   8d 83 5e d1 ff ff               	lea eax, [ebx - 0x2ea2]
0x804ad0e:   50                              	push eax
0x804ad0f:   52                              	push edx
0x804ad10:   e8 62 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad15:   83 c4 10                        	add esp, 0x10
0x804ad18:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804ad1e:   83 ec 04                        	sub esp, 4
0x804ad21:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad24:   8d 93 62 d1 ff ff               	lea edx, [ebx - 0x2e9e]
0x804ad2a:   52                              	push edx
0x804ad2b:   50                              	push eax
0x804ad2c:   e8 46 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad31:   83 c4 10                        	add esp, 0x10
0x804ad34:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804ad3a:   89 c2                           	mov edx, eax
0x804ad3c:   83 ec 04                        	sub esp, 4
0x804ad3f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad42:   8d 83 66 d1 ff ff               	lea eax, [ebx - 0x2e9a]
0x804ad48:   50                              	push eax
0x804ad49:   52                              	push edx
0x804ad4a:   e8 28 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad4f:   83 c4 10                        	add esp, 0x10
0x804ad52:   0f b6 83 30 00 00 00            	movzx eax, byte ptr [ebx + 0x30]
0x804ad59:   0f be c0                        	movsx eax, al
0x804ad5c:   83 ec 04                        	sub esp, 4
0x804ad5f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad62:   8d 93 6b d1 ff ff               	lea edx, [ebx - 0x2e95]
0x804ad68:   52                              	push edx
0x804ad69:   50                              	push eax
0x804ad6a:   e8 08 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad6f:   83 c4 10                        	add esp, 0x10
0x804ad72:   0f b7 83 32 00 00 00            	movzx eax, word ptr [ebx + 0x32]
0x804ad79:   98                              	cwde 
0x804ad7a:   83 ec 04                        	sub esp, 4
0x804ad7d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad80:   8d 93 70 d1 ff ff               	lea edx, [ebx - 0x2e90]
0x804ad86:   52                              	push edx
0x804ad87:   50                              	push eax
0x804ad88:   e8 ea e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad8d:   83 c4 10                        	add esp, 0x10
0x804ad90:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804ad96:   83 ec 04                        	sub esp, 4
0x804ad99:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad9c:   8d 93 75 d1 ff ff               	lea edx, [ebx - 0x2e8b]
0x804ada2:   52                              	push edx
0x804ada3:   50                              	push eax
0x804ada4:   e8 ce e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ada9:   83 c4 10                        	add esp, 0x10
0x804adac:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804adb2:   89 c2                           	mov edx, eax
0x804adb4:   83 ec 04                        	sub esp, 4
0x804adb7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adba:   8d 83 7a d1 ff ff               	lea eax, [ebx - 0x2e86]
0x804adc0:   50                              	push eax
0x804adc1:   52                              	push edx
0x804adc2:   e8 b0 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adc7:   83 c4 10                        	add esp, 0x10
0x804adca:   0f b7 83 3c 00 00 00            	movzx eax, word ptr [ebx + 0x3c]
0x804add1:   0f b7 c0                        	movzx eax, ax
0x804add4:   83 ec 04                        	sub esp, 4
0x804add7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adda:   8d 93 7f d1 ff ff               	lea edx, [ebx - 0x2e81]
0x804ade0:   52                              	push edx
0x804ade1:   50                              	push eax
0x804ade2:   e8 90 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ade7:   83 c4 10                        	add esp, 0x10
0x804adea:   0f b6 83 3e 00 00 00            	movzx eax, byte ptr [ebx + 0x3e]
0x804adf1:   0f be c0                        	movsx eax, al
0x804adf4:   83 ec 04                        	sub esp, 4
0x804adf7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adfa:   8d 93 84 d1 ff ff               	lea edx, [ebx - 0x2e7c]
0x804ae00:   52                              	push edx
0x804ae01:   50                              	push eax
0x804ae02:   e8 70 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae07:   83 c4 10                        	add esp, 0x10
0x804ae0a:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804ae10:   89 c2                           	mov edx, eax
0x804ae12:   83 ec 04                        	sub esp, 4
0x804ae15:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae18:   8d 83 89 d1 ff ff               	lea eax, [ebx - 0x2e77]
0x804ae1e:   50                              	push eax
0x804ae1f:   52                              	push edx
0x804ae20:   e8 52 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae25:   83 c4 10                        	add esp, 0x10
0x804ae28:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804ae2e:   83 ec 04                        	sub esp, 4
0x804ae31:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae34:   8d 93 8e d1 ff ff               	lea edx, [ebx - 0x2e72]
0x804ae3a:   52                              	push edx
0x804ae3b:   50                              	push eax
0x804ae3c:   e8 36 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae41:   83 c4 10                        	add esp, 0x10
0x804ae44:   0f b6 83 48 00 00 00            	movzx eax, byte ptr [ebx + 0x48]
0x804ae4b:   0f be c0                        	movsx eax, al
0x804ae4e:   83 ec 04                        	sub esp, 4
0x804ae51:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae54:   8d 93 93 d1 ff ff               	lea edx, [ebx - 0x2e6d]
0x804ae5a:   52                              	push edx
0x804ae5b:   50                              	push eax
0x804ae5c:   e8 16 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae61:   83 c4 10                        	add esp, 0x10
0x804ae64:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804ae6a:   83 ec 04                        	sub esp, 4
0x804ae6d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae70:   8d 93 99 d1 ff ff               	lea edx, [ebx - 0x2e67]
0x804ae76:   52                              	push edx
0x804ae77:   50                              	push eax
0x804ae78:   e8 fa e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae7d:   83 c4 10                        	add esp, 0x10
0x804ae80:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804ae86:   83 ec 04                        	sub esp, 4
0x804ae89:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae8c:   8d 93 9f d1 ff ff               	lea edx, [ebx - 0x2e61]
0x804ae92:   52                              	push edx
0x804ae93:   50                              	push eax
0x804ae94:   e8 de e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae99:   83 c4 10                        	add esp, 0x10
0x804ae9c:   0f b6 83 50 00 00 00            	movzx eax, byte ptr [ebx + 0x50]
0x804aea3:   0f b6 c0                        	movzx eax, al
0x804aea6:   83 ec 04                        	sub esp, 4
0x804aea9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aeac:   8d 93 a5 d1 ff ff               	lea edx, [ebx - 0x2e5b]
0x804aeb2:   52                              	push edx
0x804aeb3:   50                              	push eax
0x804aeb4:   e8 be e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aeb9:   83 c4 10                        	add esp, 0x10
0x804aebc:   0f b6 83 51 00 00 00            	movzx eax, byte ptr [ebx + 0x51]
0x804aec3:   0f b6 c0                        	movzx eax, al
0x804aec6:   83 ec 04                        	sub esp, 4
0x804aec9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aecc:   8d 93 ab d1 ff ff               	lea edx, [ebx - 0x2e55]
0x804aed2:   52                              	push edx
0x804aed3:   50                              	push eax
0x804aed4:   e8 9e e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aed9:   83 c4 10                        	add esp, 0x10
0x804aedc:   0f b7 83 ac 04 00 00            	movzx eax, word ptr [ebx + 0x4ac]
0x804aee3:   98                              	cwde 
0x804aee4:   83 ec 04                        	sub esp, 4
0x804aee7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aeea:   8d 93 b1 d1 ff ff               	lea edx, [ebx - 0x2e4f]
0x804aef0:   52                              	push edx
0x804aef1:   50                              	push eax
0x804aef2:   e8 80 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aef7:   83 c4 10                        	add esp, 0x10
0x804aefa:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804af00:   89 c2                           	mov edx, eax
0x804af02:   83 ec 04                        	sub esp, 4
0x804af05:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af08:   8d 83 b7 d1 ff ff               	lea eax, [ebx - 0x2e49]
0x804af0e:   50                              	push eax
0x804af0f:   52                              	push edx
0x804af10:   e8 62 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af15:   83 c4 10                        	add esp, 0x10
0x804af18:   0f b7 83 58 00 00 00            	movzx eax, word ptr [ebx + 0x58]
0x804af1f:   0f b7 c0                        	movzx eax, ax
0x804af22:   83 ec 04                        	sub esp, 4
0x804af25:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af28:   8d 93 bd d1 ff ff               	lea edx, [ebx - 0x2e43]
0x804af2e:   52                              	push edx
0x804af2f:   50                              	push eax
0x804af30:   e8 42 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af35:   83 c4 10                        	add esp, 0x10
0x804af38:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804af3e:   83 ec 04                        	sub esp, 4
0x804af41:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af44:   8d 93 c3 d1 ff ff               	lea edx, [ebx - 0x2e3d]
0x804af4a:   52                              	push edx
0x804af4b:   50                              	push eax
0x804af4c:   e8 26 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af51:   83 c4 10                        	add esp, 0x10
0x804af54:   0f b6 83 60 00 00 00            	movzx eax, byte ptr [ebx + 0x60]
0x804af5b:   0f be c0                        	movsx eax, al
0x804af5e:   83 ec 04                        	sub esp, 4
0x804af61:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af64:   8d 93 c9 d1 ff ff               	lea edx, [ebx - 0x2e37]
0x804af6a:   52                              	push edx
0x804af6b:   50                              	push eax
0x804af6c:   e8 06 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af71:   83 c4 10                        	add esp, 0x10
0x804af74:   0f b6 83 61 00 00 00            	movzx eax, byte ptr [ebx + 0x61]
0x804af7b:   0f b6 c0                        	movzx eax, al
0x804af7e:   83 ec 04                        	sub esp, 4
0x804af81:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af84:   8d 93 cf d1 ff ff               	lea edx, [ebx - 0x2e31]
0x804af8a:   52                              	push edx
0x804af8b:   50                              	push eax
0x804af8c:   e8 e6 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af91:   83 c4 10                        	add esp, 0x10
0x804af94:   0f b6 83 62 00 00 00            	movzx eax, byte ptr [ebx + 0x62]
0x804af9b:   0f b6 c0                        	movzx eax, al
0x804af9e:   83 ec 04                        	sub esp, 4
0x804afa1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afa4:   8d 93 d5 d1 ff ff               	lea edx, [ebx - 0x2e2b]
0x804afaa:   52                              	push edx
0x804afab:   50                              	push eax
0x804afac:   e8 c6 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afb1:   83 c4 10                        	add esp, 0x10
0x804afb4:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804afba:   89 c2                           	mov edx, eax
0x804afbc:   83 ec 04                        	sub esp, 4
0x804afbf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afc2:   8d 83 db d1 ff ff               	lea eax, [ebx - 0x2e25]
0x804afc8:   50                              	push eax
0x804afc9:   52                              	push edx
0x804afca:   e8 a8 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afcf:   83 c4 10                        	add esp, 0x10
0x804afd2:   0f b6 83 68 00 00 00            	movzx eax, byte ptr [ebx + 0x68]
0x804afd9:   0f b6 c0                        	movzx eax, al
0x804afdc:   83 ec 04                        	sub esp, 4
0x804afdf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afe2:   8d 93 e1 d1 ff ff               	lea edx, [ebx - 0x2e1f]
0x804afe8:   52                              	push edx
0x804afe9:   50                              	push eax
0x804afea:   e8 88 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afef:   83 c4 10                        	add esp, 0x10
0x804aff2:   8b 83 b0 04 00 00               	mov eax, dword ptr [ebx + 0x4b0]
0x804aff8:   89 c2                           	mov edx, eax
0x804affa:   83 ec 04                        	sub esp, 4
0x804affd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b000:   8d 83 e7 d1 ff ff               	lea eax, [ebx - 0x2e19]
0x804b006:   50                              	push eax
0x804b007:   52                              	push edx
0x804b008:   e8 6a e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b00d:   83 c4 10                        	add esp, 0x10
0x804b010:   0f b6 83 b4 04 00 00            	movzx eax, byte ptr [ebx + 0x4b4]
0x804b017:   0f be c0                        	movsx eax, al
0x804b01a:   83 ec 04                        	sub esp, 4
0x804b01d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b020:   8d 93 ed d1 ff ff               	lea edx, [ebx - 0x2e13]
0x804b026:   52                              	push edx
0x804b027:   50                              	push eax
0x804b028:   e8 4a e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b02d:   83 c4 10                        	add esp, 0x10
0x804b030:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804b036:   89 c2                           	mov edx, eax
0x804b038:   83 ec 04                        	sub esp, 4
0x804b03b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b03e:   8d 83 f3 d1 ff ff               	lea eax, [ebx - 0x2e0d]
0x804b044:   50                              	push eax
0x804b045:   52                              	push edx
0x804b046:   e8 2c e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b04b:   83 c4 10                        	add esp, 0x10
0x804b04e:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b054:   f7 d0                           	not eax
0x804b056:   83 ec 08                        	sub esp, 8
0x804b059:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b05c:   50                              	push eax
0x804b05d:   e8 04 d4 ff ff                  	call 0x8048466 <platform_main_end>
0x804b062:   83 c4 10                        	add esp, 0x10
0x804b065:   b8 00 00 00 00                  	mov eax, 0
0x804b06a:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b06d:   59                              	pop ecx
0x804b06e:   5b                              	pop ebx
0x804b06f:   5d                              	pop ebp
0x804b070:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b073:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b074 -- 0x804b078
0x804b074:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b077:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b078 -- 0x804b07c
0x804b078:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b07b:   c3                              	ret 
; data inside code section at 0x804b07c -- 0x804b080
0x804b07c:   66 90 66 90                                        |f.f.            |
; function: __libc_csu_init at 0x804b080 -- 0x804b0dd
0x804b080:   55                              	push ebp
0x804b081:   57                              	push edi
0x804b082:   56                              	push esi
0x804b083:   53                              	push ebx
0x804b084:   e8 07 d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b089:   81 c3 77 2f 00 00               	add ebx, 0x2f77
0x804b08f:   83 ec 0c                        	sub esp, 0xc
0x804b092:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b096:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b09c:   e8 2b d2 ff ff                  	call 0x80482cc <_init>
0x804b0a1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b0a7:   29 c6                           	sub esi, eax
0x804b0a9:   c1 fe 02                        	sar esi, 2
0x804b0ac:   85 f6                           	test esi, esi
0x804b0ae:   74 25                           	je 0x804b0d5 <__libc_csu_init+0x55>
0x804b0b0:   31 ff                           	xor edi, edi
0x804b0b2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b0b8:   83 ec 04                        	sub esp, 4
0x804b0bb:   55                              	push ebp
0x804b0bc:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b0c0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b0c4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b0cb:   83 c7 01                        	add edi, 1
0x804b0ce:   83 c4 10                        	add esp, 0x10
0x804b0d1:   39 fe                           	cmp esi, edi
0x804b0d3:   75 e3                           	jne 0x804b0b8 <__libc_csu_init+0x38>
0x804b0d5:   83 c4 0c                        	add esp, 0xc
0x804b0d8:   5b                              	pop ebx
0x804b0d9:   5e                              	pop esi
0x804b0da:   5f                              	pop edi
0x804b0db:   5d                              	pop ebp
0x804b0dc:   c3                              	ret 
; data inside code section at 0x804b0dd -- 0x804b0e0
0x804b0dd:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b0e0 -- 0x804b0e2
0x804b0e0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b0e4 -- 0x804b0f8
0x804b0e4:   53                              	push ebx
0x804b0e5:   83 ec 08                        	sub esp, 8
0x804b0e8:   e8 a3 d2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b0ed:   81 c3 13 2f 00 00               	add ebx, 0x2f13
0x804b0f3:   83 c4 08                        	add esp, 8
0x804b0f6:   5b                              	pop ebx
0x804b0f7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 fc b0 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b0f8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b108:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b118:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b128:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b138:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b148:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b158:   31 00 67 5f 32 00 67 5f  33 00 67 5f 39 00 67 5f   |1.g_2.g_3.g_9.g_|
0x804b168:   31 33 00 67 5f 31 34 00  67 5f 31 35 00 67 5f 31   |13.g_14.g_15.g_1|
0x804b178:   37 00 67 5f 35 34 00 67  5f 35 35 00 67 5f 36 35   |7.g_54.g_55.g_65|
0x804b188:   00 67 5f 39 30 00 67 5f  39 31 00 67 5f 31 33 35   |.g_90.g_91.g_135|
0x804b198:   00 67 5f 31 35 33 00 67  5f 32 31 30 00 67 5f 32   |.g_153.g_210.g_2|
0x804b1a8:   34 34 00 67 5f 32 34 39  00 67 5f 32 35 32 00 67   |44.g_249.g_252.g|
0x804b1b8:   5f 32 38 30 00 67 5f 33  34 35 00 67 5f 33 38 38   |_280.g_345.g_388|
0x804b1c8:   00 67 5f 33 39 34 00 67  5f 33 39 35 00 67 5f 34   |.g_394.g_395.g_4|
0x804b1d8:   35 32 00 67 5f 35 30 37  00 67 5f 35 32 30 00 67   |52.g_507.g_520.g|
0x804b1e8:   5f 35 33 35 00 67 5f 35  33 37 00 67 5f 35 35 38   |_535.g_537.g_558|
0x804b1f8:   00 00 00 00 00 00 00 3f  ff ff ff 7e 00 00 80 0d   |.......?...~....|
0x804b208:   00 00 80 31 ff ff 7f 3f  00 00 00 27 00 00 80 71   |...1...?...'...q|
0x804b218:   ff ff ff 34 00 00 00 00  00 00 00 00 00 00 e0 3f   |...4...........?|
0x804b228:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804b238:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804b248:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804b258:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804b268:   01                                                 |.               |
; section: .eh_frame_hdr
0x804b268:   01 1b 03 3b b8 02 00 00  56 00 00 00 88 d0 ff ff   |...;....V.......|
0x804b278:   e8 02 00 00 c8 d0 ff ff  0c 03 00 00 18 d1 ff ff   |................|
0x804b288:   d4 02 00 00 ee d1 ff ff  20 03 00 00 fe d1 ff ff   |........ .......|
0x804b298:   40 03 00 00 2c d2 ff ff  64 03 00 00 4a d2 ff ff   |@...,...d...J...|
0x804b2a8:   84 03 00 00 72 d2 ff ff  a4 03 00 00 9c d2 ff ff   |....r...........|
0x804b2b8:   c4 03 00 00 c5 d2 ff ff  e4 03 00 00 08 d3 ff ff   |................|
0x804b2c8:   04 04 00 00 49 d3 ff ff  24 04 00 00 a1 d3 ff ff   |....I...$.......|
0x804b2d8:   48 04 00 00 f3 d3 ff ff  6c 04 00 00 30 d4 ff ff   |H.......l...0...|
0x804b2e8:   8c 04 00 00 67 d4 ff ff  ac 04 00 00 86 d4 ff ff   |....g...........|
0x804b2f8:   cc 04 00 00 b0 d4 ff ff  ec 04 00 00 dc d4 ff ff   |................|
0x804b308:   0c 05 00 00 07 d5 ff ff  2c 05 00 00 50 d5 ff ff   |........,...P...|
0x804b318:   4c 05 00 00 97 d5 ff ff  6c 05 00 00 f1 d5 ff ff   |L.......l.......|
0x804b328:   90 05 00 00 45 d6 ff ff  b4 05 00 00 84 d6 ff ff   |....E...........|
0x804b338:   d4 05 00 00 bd d6 ff ff  f4 05 00 00 df d6 ff ff   |................|
0x804b348:   14 06 00 00 2d d7 ff ff  34 06 00 00 69 d7 ff ff   |....-...4...i...|
0x804b358:   54 06 00 00 f2 d7 ff ff  74 06 00 00 24 d8 ff ff   |T.......t...$...|
0x804b368:   94 06 00 00 54 d8 ff ff  b4 06 00 00 99 d8 ff ff   |....T...........|
0x804b378:   d4 06 00 00 d8 d8 ff ff  f4 06 00 00 0a d9 ff ff   |................|
0x804b388:   14 07 00 00 36 d9 ff ff  34 07 00 00 54 d9 ff ff   |....6...4...T...|
0x804b398:   54 07 00 00 7c d9 ff ff  74 07 00 00 a1 d9 ff ff   |T...|...t.......|
0x804b3a8:   94 07 00 00 c6 d9 ff ff  b4 07 00 00 fd d9 ff ff   |................|
0x804b3b8:   d4 07 00 00 31 da ff ff  f4 07 00 00 83 da ff ff   |....1...........|
0x804b3c8:   18 08 00 00 cf da ff ff  3c 08 00 00 06 db ff ff   |........<.......|
0x804b3d8:   5c 08 00 00 37 db ff ff  7c 08 00 00 56 db ff ff   |\...7...|...V...|
0x804b3e8:   9c 08 00 00 80 db ff ff  bc 08 00 00 a8 db ff ff   |................|
0x804b3f8:   dc 08 00 00 d1 db ff ff  fc 08 00 00 0d dc ff ff   |................|
0x804b408:   1c 09 00 00 47 dc ff ff  3c 09 00 00 9a dc ff ff   |....G...<.......|
0x804b418:   60 09 00 00 e7 dc ff ff  84 09 00 00 1f dd ff ff   |`...............|
0x804b428:   a4 09 00 00 51 dd ff ff  c4 09 00 00 65 dd ff ff   |....Q.......e...|
0x804b438:   e4 09 00 00 7c dd ff ff  04 0a 00 00 91 dd ff ff   |....|...........|
0x804b448:   24 0a 00 00 a7 dd ff ff  44 0a 00 00 ce dd ff ff   |$.......D.......|
0x804b458:   64 0a 00 00 f3 dd ff ff  84 0a 00 00 32 de ff ff   |d...........2...|
0x804b468:   a4 0a 00 00 6b de ff ff  c4 0a 00 00 97 de ff ff   |....k...........|
0x804b478:   e4 0a 00 00 bd de ff ff  04 0b 00 00 ff de ff ff   |................|
0x804b488:   24 0b 00 00 41 df ff ff  44 0b 00 00 83 df ff ff   |$...A...D.......|
0x804b498:   64 0b 00 00 f8 df ff ff  84 0b 00 00 55 e0 ff ff   |d...........U...|
0x804b4a8:   a4 0b 00 00 b2 e0 ff ff  c4 0b 00 00 0f e1 ff ff   |................|
0x804b4b8:   e4 0b 00 00 9f e1 ff ff  04 0c 00 00 03 e2 ff ff   |................|
0x804b4c8:   24 0c 00 00 73 e2 ff ff  44 0c 00 00 ba e2 ff ff   |$...s...D.......|
0x804b4d8:   68 0c 00 00 0f e3 ff ff  88 0c 00 00 56 e3 ff ff   |h...........V...|
0x804b4e8:   ac 0c 00 00 be e3 ff ff  d0 0c 00 00 93 e5 ff ff   |................|
0x804b4f8:   00 0d 00 00 14 fa ff ff  30 0d 00 00 0c fe ff ff   |........0.......|
0x804b508:   68 0d 00 00 10 fe ff ff  7c 0d 00 00 18 fe ff ff   |h.......|.......|
0x804b518:   90 0d 00 00 78 fe ff ff  dc 0d 00 00 14            |....x........   |
; section: .eh_frame
0x804b524:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b534:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b544:   3c ce ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |<........... ...|
0x804b554:   30 00 00 00 98 cd ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b564:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b574:   10 00 00 00 54 00 00 00  b4 cd ff ff 08 00 00 00   |....T...........|
0x804b584:   00 00 00 00 1c 00 00 00  68 00 00 00 c6 ce ff ff   |........h.......|
0x804b594:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b5a4:   04 04 00 00 20 00 00 00  88 00 00 00 b6 ce ff ff   |.... ...........|
0x804b5b4:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b5c4:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b5d4:   c0 ce ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b5e4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b5f4:   be ce ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b604:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b614:   c6 ce ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b624:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b634:   d0 ce ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b644:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b654:   d9 ce ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b664:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b674:   fc ce ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b684:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b694:   1d cf ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b6a4:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b6b4:   90 01 00 00 51 cf ff ff  52 00 00 00 00 41 0e 08   |....Q...R....A..|
0x804b6c4:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b6d4:   1c 00 00 00 b4 01 00 00  7f cf ff ff 3d 00 00 00   |............=...|
0x804b6e4:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b6f4:   1c 00 00 00 d4 01 00 00  9c cf ff ff 37 00 00 00   |............7...|
0x804b704:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b714:   1c 00 00 00 f4 01 00 00  b3 cf ff ff 1f 00 00 00   |................|
0x804b724:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b734:   1c 00 00 00 14 02 00 00  b2 cf ff ff 2a 00 00 00   |............*...|
0x804b744:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b754:   1c 00 00 00 34 02 00 00  bc cf ff ff 2c 00 00 00   |....4.......,...|
0x804b764:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b774:   1c 00 00 00 54 02 00 00  c8 cf ff ff 2b 00 00 00   |....T.......+...|
0x804b784:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b794:   1c 00 00 00 74 02 00 00  d3 cf ff ff 49 00 00 00   |....t.......I...|
0x804b7a4:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b7b4:   1c 00 00 00 94 02 00 00  fc cf ff ff 47 00 00 00   |............G...|
0x804b7c4:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b7d4:   20 00 00 00 b4 02 00 00  23 d0 ff ff 5a 00 00 00   | .......#...Z...|
0x804b7e4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b7f4:   c5 0c 04 04 20 00 00 00  d8 02 00 00 59 d0 ff ff   |.... .......Y...|
0x804b804:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b814:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b824:   89 d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b834:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b844:   a8 d0 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b854:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b864:   c1 d0 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b874:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b884:   c3 d0 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b894:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b8a4:   f1 d0 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b8b4:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b8c4:   0d d1 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b8d4:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b8e4:   76 d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |v...2....A....B.|
0x804b8f4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b904:   88 d1 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b914:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b924:   98 d1 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b934:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b944:   bd d1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b954:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b964:   dc d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b974:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b984:   ee d1 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b994:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b9a4:   fa d1 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b9b4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b9c4:   f8 d1 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b9d4:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b9e4:   00 d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b9f4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804ba04:   05 d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ba14:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804ba24:   0a d2 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804ba34:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804ba44:   21 d2 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |!...4....A....B.|
0x804ba54:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804ba64:   35 d2 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |5...R....A....B.|
0x804ba74:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804ba84:   60 05 00 00 63 d2 ff ff  4c 00 00 00 00 41 0e 08   |`...c...L....A..|
0x804ba94:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804baa4:   1c 00 00 00 84 05 00 00  8b d2 ff ff 37 00 00 00   |............7...|
0x804bab4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bac4:   1c 00 00 00 a4 05 00 00  a2 d2 ff ff 31 00 00 00   |............1...|
0x804bad4:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bae4:   1c 00 00 00 c4 05 00 00  b3 d2 ff ff 1f 00 00 00   |................|
0x804baf4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bb04:   1c 00 00 00 e4 05 00 00  b2 d2 ff ff 2a 00 00 00   |............*...|
0x804bb14:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bb24:   1c 00 00 00 04 06 00 00  bc d2 ff ff 28 00 00 00   |............(...|
0x804bb34:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bb44:   1c 00 00 00 24 06 00 00  c4 d2 ff ff 29 00 00 00   |....$.......)...|
0x804bb54:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bb64:   1c 00 00 00 44 06 00 00  cd d2 ff ff 3c 00 00 00   |....D.......<...|
0x804bb74:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bb84:   1c 00 00 00 64 06 00 00  e9 d2 ff ff 3a 00 00 00   |....d.......:...|
0x804bb94:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bba4:   20 00 00 00 84 06 00 00  03 d3 ff ff 53 00 00 00   | ...........S...|
0x804bbb4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bbc4:   c5 0c 04 04 20 00 00 00  a8 06 00 00 32 d3 ff ff   |.... .......2...|
0x804bbd4:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bbe4:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bbf4:   5b d3 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |[...8....A....B.|
0x804bc04:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bc14:   73 d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |s...2....A....B.|
0x804bc24:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bc34:   85 d3 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc44:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bc54:   79 d3 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |y........A....B.|
0x804bc64:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bc74:   70 d3 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |p........A....B.|
0x804bc84:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bc94:   65 d3 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |e........A....B.|
0x804bca4:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bcb4:   5b d3 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |[...'....A....B.|
0x804bcc4:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bcd4:   62 d3 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |b...%....A....B.|
0x804bce4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bcf4:   67 d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |g...?....A....B.|
0x804bd04:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bd14:   86 d3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bd24:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bd34:   9f d3 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bd44:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bd54:   ab d3 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804bd64:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bd74:   b1 d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bd84:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bd94:   d3 d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bda4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bdb4:   f5 d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bdc4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bdd4:   17 d4 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804bde4:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bdf4:   6c d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |l...]....A....B.|
0x804be04:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804be14:   a9 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804be24:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804be34:   e6 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804be44:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804be54:   23 d5 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |#........A....B.|
0x804be64:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804be74:   93 d5 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804be84:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804be94:   d7 d5 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804bea4:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804beb4:   27 d6 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |'...G....A....B.|
0x804bec4:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bed4:   b0 09 00 00 4a d6 ff ff  55 00 00 00 00 41 0e 08   |....J...U....A..|
0x804bee4:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bef4:   d0 09 00 00 7f d6 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804bf04:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bf14:   20 00 00 00 f4 09 00 00  a2 d6 ff ff 68 00 00 00   | ...........h...|
0x804bf24:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bf34:   0c 04 04 00 2c 00 00 00  18 0a 00 00 e6 d6 ff ff   |....,...........|
0x804bf44:   d5 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804bf54:   86 04 83 05 03 c8 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bf64:   04 00 00 00 2c 00 00 00  48 0a 00 00 8b d8 ff ff   |....,...H.......|
0x804bf74:   81 14 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804bf84:   86 04 83 05 03 71 14 c3  41 c6 41 c7 41 c5 0c 04   |.....q..A.A.A...|
0x804bf94:   04 00 00 00 34 00 00 00  78 0a 00 00 dc ec ff ff   |....4...x.......|
0x804bfa4:   f8 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804bfb4:   0f 03 75 78 06 10 03 02  75 7c 03 e3 03 c1 0c 01   |..ux....u|......|
0x804bfc4:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bfd4:   b0 0a 00 00 9c f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804bfe4:   10 00 00 00 c4 0a 00 00  8c f0 ff ff 04 00 00 00   |................|
0x804bff4:   00 00 00 00 48 00 00 00  d8 0a 00 00 80 f0 ff ff   |....H...........|
0x804c004:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c014:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c024:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c034:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c044:   10 00 00 00 24 0b 00 00  94 f0 ff ff 02 00 00 00   |....$...........|
0x804c054:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 e4 b0 04 08  19 00 00 00 0c df 04 08   |................|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff ff ff ff ff   |................|
0x804e028:   04 00 00 00 01 00 00 00  ad 00 01 00 52 a7 87 2c   |............R..,|
0x804e038:   75 c8 75 11 db 44 98 00  a9 37 70 75 50 75 d6 bf   |u.u..D...7puPu..|
0x804e048:   4b 00 00 00 54 1f cd 7b  2b 4b 00 00 fa ff ff ff   |K...T..{+K......|
0x804e058:   8d 41 00 00 05 00 00 00  e1 4d 7a 00 2a 80 0b 1b   |.A.......Mz.*...|
0x804e068:   61 00 00 00 00 00 00 00  ??                        |a.......?       |
