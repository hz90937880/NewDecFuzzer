;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:59:31
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 70 d0 ff ff               	lea eax, [ebx - 0x2f90]
0x804835c:   50                              	push eax
0x804835d:   8d 83 10 d0 ff ff               	lea eax, [ebx - 0x2ff0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 ca ab 04 08               	mov eax, 0x804abca
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 80 e0 04 08                  	mov eax, 0x804e080
0x80483a5:   3d 80 e0 04 08                  	cmp eax, 0x804e080
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 80 e0 04 08                  	push 0x804e080
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 80 e0 04 08                  	mov eax, 0x804e080
0x80483e5:   2d 80 e0 04 08                  	sub eax, 0x804e080
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 80 e0 04 08                  	push 0x804e080
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 e0 04 08 00            	cmp byte ptr [0x804e080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 e0 04 08 01            	mov byte ptr [0x804e080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 aa 2b 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 96 2b 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 90 d0 ff ff               	lea edx, [eax - 0x2f70]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 69 2b 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 4b 2b 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 23 2b 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 f9 2a 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 d0 2a 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 8d 2a 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 4b 2a 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 f3 29 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 a2 29 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 65 29 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 2e 29 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 0f 29 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 e5 28 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 b9 28 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 8e 28 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 45 28 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 fd 27 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 a3 27 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 50 27 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 11 27 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 db 26 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 b9 26 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 6b 26 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 2f 26 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 a6 25 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 74 25 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 44 25 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 ff 24 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 c0 24 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 8e 24 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 5f 24 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 41 24 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 19 24 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 f4 23 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 cf 23 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 98 23 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 63 23 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 11 23 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 c6 22 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 8f 22 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 5e 22 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 3f 22 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 15 22 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 ed 21 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 c4 21 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 88 21 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 4d 21 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 fa 20 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 ae 20 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 76 20 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 47 20 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 33 20 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 1c 20 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 07 20 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 f1 1f 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 ca 1f 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 a5 1f 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 66 1f 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 2d 1f 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 01 1f 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 db 1e 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 9c d1 ff ff               	fld dword ptr [eax - 0x2e64]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 9c d1 ff ff               	fld dword ptr [eax - 0x2e64]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 a0 d1 ff ff               	fld dword ptr [eax - 0x2e60]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 99 1e 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 9c d1 ff ff               	fld dword ptr [eax - 0x2e64]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 9c d1 ff ff               	fld dword ptr [eax - 0x2e64]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 a0 d1 ff ff               	fld dword ptr [eax - 0x2e60]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 57 1e 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 a4 d1 ff ff               	fld dword ptr [eax - 0x2e5c]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 a8 d1 ff ff               	fld dword ptr [eax - 0x2e58]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 ac d1 ff ff               	fld dword ptr [eax - 0x2e54]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 15 1e 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 b0 d1 ff ff               	fld dword ptr [eax - 0x2e50]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 b4 d1 ff ff               	fld dword ptr [eax - 0x2e4c]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 b8 d1 ff ff               	fld dword ptr [eax - 0x2e48]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 9d 1d 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 c0 d1 ff ff               	fld qword ptr [eax - 0x2e40]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 c0 d1 ff ff               	fld qword ptr [eax - 0x2e40]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 c8 d1 ff ff               	fld qword ptr [eax - 0x2e38]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 40 1d 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 c0 d1 ff ff               	fld qword ptr [eax - 0x2e40]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 c0 d1 ff ff               	fld qword ptr [eax - 0x2e40]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 c8 d1 ff ff               	fld qword ptr [eax - 0x2e38]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 e3 1c 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 d0 d1 ff ff               	fld qword ptr [eax - 0x2e30]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 d8 d1 ff ff               	fld qword ptr [eax - 0x2e28]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 e0 d1 ff ff               	fld qword ptr [eax - 0x2e20]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 86 1c 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 e8 d1 ff ff               	fld qword ptr [eax - 0x2e18]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 f0 d1 ff ff               	fld qword ptr [eax - 0x2e10]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 f8 d1 ff ff               	fld qword ptr [eax - 0x2e08]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 f6 1b 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 00 d2 ff ff               	fld dword ptr [eax - 0x2e00]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 04 d2 ff ff               	fld dword ptr [eax - 0x2dfc]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 92 1b 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 21 1b 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 de 1a 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 a0 d0 ff ff               	lea eax, [ebx - 0x2f60]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 c4 d0 ff ff               	lea eax, [ebx - 0x2f3c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804983b
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 70                        	sub esp, 0x70
0x804962f:   e8 d8 19 00 00                  	call 0x804b00c <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 49 00 00               	add edx, 0x49cc
0x804963a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804963d:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049640:   8b 4d 10                        	mov ecx, dword ptr [ebp + 0x10]
0x8049643:   8b 5d 1c                        	mov ebx, dword ptr [ebp + 0x1c]
0x8049646:   8b 75 24                        	mov esi, dword ptr [ebp + 0x24]
0x8049649:   8b 7d 34                        	mov edi, dword ptr [ebp + 0x34]
0x804964c:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x804964f:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049652:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049655:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049658:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x804965b:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804965e:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x8049661:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049664:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049667:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804966a:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x804966d:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049670:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x8049673:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049676:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x8049679:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804967c:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x804967f:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049682:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x8049685:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049688:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x804968b:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804968e:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x8049692:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x8049695:   89 c8                           	mov eax, ecx
0x8049697:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x804969a:   89 d8                           	mov eax, ebx
0x804969c:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x80496a0:   89 f0                           	mov eax, esi
0x80496a2:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496a5:   89 f8                           	mov eax, edi
0x80496a7:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x80496aa:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x80496ae:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496b2:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496b6:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496ba:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80496be:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496c2:   0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x80496c6:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496c9:   0f b6 45 9c                     	movzx eax, byte ptr [ebp - 0x64]
0x80496cd:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496d0:   0f b6 45 98                     	movzx eax, byte ptr [ebp - 0x68]
0x80496d4:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496d7:   0f b7 45 94                     	movzx eax, word ptr [ebp - 0x6c]
0x80496db:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496df:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x80496e3:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x80496e7:   0f b7 45 8c                     	movzx eax, word ptr [ebp - 0x74]
0x80496eb:   66 89 45 bc                     	mov word ptr [ebp - 0x44], ax
0x80496ef:   0f b6 45 88                     	movzx eax, byte ptr [ebp - 0x78]
0x80496f3:   88 45 b8                        	mov byte ptr [ebp - 0x48], al
0x80496f6:   0f b6 45 84                     	movzx eax, byte ptr [ebp - 0x7c]
0x80496fa:   88 45 b4                        	mov byte ptr [ebp - 0x4c], al
0x80496fd:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x8049701:   88 82 a4 04 00 00               	mov byte ptr [edx + 0x4a4], al
0x8049707:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804970a:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x8049710:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x8049714:   88 82 a5 04 00 00               	mov byte ptr [edx + 0x4a5], al
0x804971a:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x804971d:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x8049723:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x8049726:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x804972c:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049730:   66 89 82 30 00 00 00            	mov word ptr [edx + 0x30], ax
0x8049737:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x804973a:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x8049740:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x8049744:   88 82 38 00 00 00               	mov byte ptr [edx + 0x38], al
0x804974a:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x804974d:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x8049753:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x8049756:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x804975c:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x804975f:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x8049765:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049769:   88 82 48 00 00 00               	mov byte ptr [edx + 0x48], al
0x804976f:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049772:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x8049778:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x804977b:   89 82 a8 04 00 00               	mov dword ptr [edx + 0x4a8], eax
0x8049781:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049785:   66 89 82 50 00 00 00            	mov word ptr [edx + 0x50], ax
0x804978c:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x8049790:   66 89 82 ac 04 00 00            	mov word ptr [edx + 0x4ac], ax
0x8049797:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x804979b:   66 89 82 52 00 00 00            	mov word ptr [edx + 0x52], ax
0x80497a2:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x80497a6:   88 82 54 00 00 00               	mov byte ptr [edx + 0x54], al
0x80497ac:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x80497af:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x80497b5:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x80497b9:   88 82 5c 00 00 00               	mov byte ptr [edx + 0x5c], al
0x80497bf:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497c3:   88 82 5d 00 00 00               	mov byte ptr [edx + 0x5d], al
0x80497c9:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x80497cc:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x80497d2:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80497d6:   66 89 82 64 00 00 00            	mov word ptr [edx + 0x64], ax
0x80497dd:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x80497e0:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x80497e6:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x80497ea:   66 89 82 6c 00 00 00            	mov word ptr [edx + 0x6c], ax
0x80497f1:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x80497f4:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x80497fa:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x80497fe:   66 89 82 74 00 00 00            	mov word ptr [edx + 0x74], ax
0x8049805:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x8049809:   88 82 76 00 00 00               	mov byte ptr [edx + 0x76], al
0x804980f:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x8049813:   88 82 77 00 00 00               	mov byte ptr [edx + 0x77], al
0x8049819:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x804981c:   89 82 78 00 00 00               	mov dword ptr [edx + 0x78], eax
0x8049822:   8b 85 80 00 00 00               	mov eax, dword ptr [ebp + 0x80]
0x8049828:   89 82 7c 00 00 00               	mov dword ptr [edx + 0x7c], eax
0x804982e:   b8 00 00 00 00                  	mov eax, 0
0x8049833:   83 c4 70                        	add esp, 0x70
0x8049836:   5b                              	pop ebx
0x8049837:   5e                              	pop esi
0x8049838:   5f                              	pop edi
0x8049839:   5d                              	pop ebp
0x804983a:   c3                              	ret 
; function: func_1 at 0x804983b -- 0x804abca
0x804983b:   55                              	push ebp
0x804983c:   89 e5                           	mov ebp, esp
0x804983e:   57                              	push edi
0x804983f:   56                              	push esi
0x8049840:   53                              	push ebx
0x8049841:   81 ec 98 01 00 00               	sub esp, 0x198
0x8049847:   e8 bc 17 00 00                  	call 0x804b008 <__x86.get_pc_thunk.ax>
0x804984c:   05 b4 47 00 00                  	add eax, 0x47b4
0x8049851:   c6 45 db 00                     	mov byte ptr [ebp - 0x25], 0
0x8049855:   c7 45 c8 ff ff ff ff            	mov dword ptr [ebp - 0x38], 0xffffffff
0x804985c:   c6 45 c7 00                     	mov byte ptr [ebp - 0x39], 0
0x8049860:   c7 45 d4 cd e0 69 09            	mov dword ptr [ebp - 0x2c], 0x969e0cd
0x8049867:   c7 45 d0 f1 ff 7a 36            	mov dword ptr [ebp - 0x30], 0x367afff1
0x804986e:   66 c7 45 ce ee bd               	mov word ptr [ebp - 0x32], 0xbdee
0x8049874:   c7 45 f0 fd ff ff ff            	mov dword ptr [ebp - 0x10], 0xfffffffd
0x804987b:   c6 45 ef 0c                     	mov byte ptr [ebp - 0x11], 0xc
0x804987f:   c7 85 6c ff ff ff c9 5b 76 79   	mov dword ptr [ebp - 0x94], 0x79765bc9
0x8049889:   c7 45 e8 0b c8 25 c7            	mov dword ptr [ebp - 0x18], 0xc725c80b
0x8049890:   c7 85 68 ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0x98], 0xfffffffc
0x804989a:   c6 45 e7 87                     	mov byte ptr [ebp - 0x19], 0x87
0x804989e:   c7 45 e0 82 84 4c 81            	mov dword ptr [ebp - 0x20], 0x814c8482
0x80498a5:   c7 45 dc 00 00 00 00            	mov dword ptr [ebp - 0x24], 0
0x80498ac:   66 c7 45 c4 ff ff               	mov word ptr [ebp - 0x3c], 0xffff
0x80498b2:   66 c7 45 c2 00 00               	mov word ptr [ebp - 0x3e], 0
0x80498b8:   66 c7 45 c0 e1 01               	mov word ptr [ebp - 0x40], 0x1e1
0x80498be:   c6 85 67 ff ff ff 01            	mov byte ptr [ebp - 0x99], 1
0x80498c5:   c7 45 bc 8e 4d 50 70            	mov dword ptr [ebp - 0x44], 0x70504d8e
0x80498cc:   c6 85 66 ff ff ff 69            	mov byte ptr [ebp - 0x9a], 0x69
0x80498d3:   c6 45 bb 01                     	mov byte ptr [ebp - 0x45], 1
0x80498d7:   c7 45 b4 61 ad 96 7c            	mov dword ptr [ebp - 0x4c], 0x7c96ad61
0x80498de:   66 c7 45 b2 23 a1               	mov word ptr [ebp - 0x4e], 0xa123
0x80498e4:   c7 45 ac 23 a3 d3 21            	mov dword ptr [ebp - 0x54], 0x21d3a323
0x80498eb:   66 c7 45 aa 70 f8               	mov word ptr [ebp - 0x56], 0xf870
0x80498f1:   c7 85 60 ff ff ff 30 ea 02 07   	mov dword ptr [ebp - 0xa0], 0x702ea30
0x80498fb:   66 c7 85 5e ff ff ff 5b 92      	mov word ptr [ebp - 0xa2], 0x925b
0x8049904:   c6 85 5d ff ff ff ac            	mov byte ptr [ebp - 0xa3], 0xac
0x804990b:   c6 45 a9 f3                     	mov byte ptr [ebp - 0x57], 0xf3
0x804990f:   c7 45 a4 03 00 00 00            	mov dword ptr [ebp - 0x5c], 3
0x8049916:   c7 85 58 ff ff ff a4 d4 52 99   	mov dword ptr [ebp - 0xa8], 0x9952d4a4
0x8049920:   c7 85 54 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xac], 1
0x804992a:   c7 85 50 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xb0], 0xffffffff
0x8049934:   c7 45 a0 3d 26 5b 73            	mov dword ptr [ebp - 0x60], 0x735b263d
0x804993b:   c7 45 9c 3e 04 1e c1            	mov dword ptr [ebp - 0x64], 0xc11e043e
0x8049942:   c7 85 4c ff ff ff 80 c9 5b 50   	mov dword ptr [ebp - 0xb4], 0x505bc980
0x804994c:   66 c7 85 4a ff ff ff 76 b4      	mov word ptr [ebp - 0xb6], 0xb476
0x8049955:   c7 45 98 70 8e 5a 6a            	mov dword ptr [ebp - 0x68], 0x6a5a8e70
0x804995c:   c7 85 44 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xbc], 0xffffffff
0x8049966:   66 c7 85 42 ff ff ff 4d 69      	mov word ptr [ebp - 0xbe], 0x694d
0x804996f:   66 c7 85 40 ff ff ff 00 00      	mov word ptr [ebp - 0xc0], 0
0x8049978:   c7 45 94 82 71 8b 8f            	mov dword ptr [ebp - 0x6c], 0x8f8b7182
0x804997f:   c7 45 90 6b 18 be 3f            	mov dword ptr [ebp - 0x70], 0x3fbe186b
0x8049986:   83 bd 50 ff ff ff ff            	cmp dword ptr [ebp - 0xb0], -1
0x804998d:   0f 95 c0                        	setne al
0x8049990:   0f b6 c0                        	movzx eax, al
0x8049993:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049996:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804999a:   33 45 a0                        	xor eax, dword ptr [ebp - 0x60]
0x804999d:   3d fe 51 f9 60                  	cmp eax, 0x60f951fe
0x80499a2:   0f 9f c0                        	setg al
0x80499a5:   0f b6 d0                        	movzx edx, al
0x80499a8:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x80499ac:   39 c2                           	cmp edx, eax
0x80499ae:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x80499b4:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x80499b7:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x80499ba:   83 e8 01                        	sub eax, 1
0x80499bd:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x80499c0:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x80499c4:   31 45 9c                        	xor dword ptr [ebp - 0x64], eax
0x80499c7:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x80499ca:   66 98                           	cbw 
0x80499cc:   0f b7 d0                        	movzx edx, ax
0x80499cf:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x80499d5:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x80499d8:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x80499dc:   74 0d                           	je 0x80499eb <func_1+0x1b0>
0x80499de:   80 7d db 08                     	cmp byte ptr [ebp - 0x25], 8
0x80499e2:   76 07                           	jbe 0x80499eb <func_1+0x1b0>
0x80499e4:   b8 01 00 00 00                  	mov eax, 1
0x80499e9:   eb 05                           	jmp 0x80499f0 <func_1+0x1b5>
0x80499eb:   b8 00 00 00 00                  	mov eax, 0
0x80499f0:   89 c1                           	mov ecx, eax
0x80499f2:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x80499f8:   31 c1                           	xor ecx, eax
0x80499fa:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x8049a00:   31 c8                           	xor eax, ecx
0x8049a02:   0f bf d8                        	movsx ebx, ax
0x8049a05:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x8049a09:   89 c1                           	mov ecx, eax
0x8049a0b:   d3 fb                           	sar ebx, cl
0x8049a0d:   89 d8                           	mov eax, ebx
0x8049a0f:   0f b7 c0                        	movzx eax, ax
0x8049a12:   89 c1                           	mov ecx, eax
0x8049a14:   d3 fa                           	sar edx, cl
0x8049a16:   89 d0                           	mov eax, edx
0x8049a18:   88 45 c7                        	mov byte ptr [ebp - 0x39], al
0x8049a1b:   80 7d c7 00                     	cmp byte ptr [ebp - 0x39], 0
0x8049a1f:   74 07                           	je 0x8049a28 <func_1+0x1ed>
0x8049a21:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x8049a28:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x8049a2c:   66 0f be d0                     	movsx dx, al
0x8049a30:   89 d0                           	mov eax, edx
0x8049a32:   01 c0                           	add eax, eax
0x8049a34:   01 d0                           	add eax, edx
0x8049a36:   8d 14 c5 00 00 00 00            	lea edx, [eax*8]
0x8049a3d:   01 d0                           	add eax, edx
0x8049a3f:   01 c0                           	add eax, eax
0x8049a41:   0f b7 d0                        	movzx edx, ax
0x8049a44:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x8049a48:   01 d0                           	add eax, edx
0x8049a4a:   85 c0                           	test eax, eax
0x8049a4c:   74 04                           	je 0x8049a52 <func_1+0x217>
0x8049a4e:   80 7d db 00                     	cmp byte ptr [ebp - 0x25], 0
0x8049a52:   b8 01 00 00 00                  	mov eax, 1
0x8049a57:   09 45 d4                        	or dword ptr [ebp - 0x2c], eax
0x8049a5a:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x8049a61:   74 07                           	je 0x8049a6a <func_1+0x22f>
0x8049a63:   ba 01 00 00 00                  	mov edx, 1
0x8049a68:   eb 05                           	jmp 0x8049a6f <func_1+0x234>
0x8049a6a:   ba 00 00 00 00                  	mov edx, 0
0x8049a6f:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x8049a73:   39 c2                           	cmp edx, eax
0x8049a75:   0f 9e c0                        	setle al
0x8049a78:   0f b6 d0                        	movzx edx, al
0x8049a7b:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x8049a7f:   0f af d0                        	imul edx, eax
0x8049a82:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x8049a86:   39 c2                           	cmp edx, eax
0x8049a88:   81 7d d4 fa 00 00 00            	cmp dword ptr [ebp - 0x2c], 0xfa
0x8049a8f:   0f 85 87 0a 00 00               	jne 0x804a51c <func_1+0xce1>
0x8049a95:   c7 45 8c 00 00 00 00            	mov dword ptr [ebp - 0x74], 0
0x8049a9c:   c7 45 88 01 00 00 00            	mov dword ptr [ebp - 0x78], 1
0x8049aa3:   66 c7 85 1a ff ff ff b8 85      	mov word ptr [ebp - 0xe6], 0x85b8
0x8049aac:   c7 85 14 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xec], 0
0x8049ab6:   c6 85 13 ff ff ff 93            	mov byte ptr [ebp - 0xed], 0x93
0x8049abd:   c7 85 0c ff ff ff 53 90 d6 fd   	mov dword ptr [ebp - 0xf4], 0xfdd69053
0x8049ac7:   66 c7 85 0a ff ff ff f9 ff      	mov word ptr [ebp - 0xf6], 0xfff9
0x8049ad0:   c6 85 09 ff ff ff 01            	mov byte ptr [ebp - 0xf7], 1
0x8049ad7:   c7 45 84 00 00 00 00            	mov dword ptr [ebp - 0x7c], 0
0x8049ade:   c7 45 80 63 1e d6 42            	mov dword ptr [ebp - 0x80], 0x42d61e63
0x8049ae5:   83 45 d0 01                     	add dword ptr [ebp - 0x30], 1
0x8049ae9:   0f b7 85 1a ff ff ff            	movzx eax, word ptr [ebp - 0xe6]
0x8049af0:   83 c0 01                        	add eax, 1
0x8049af3:   66 89 85 1a ff ff ff            	mov word ptr [ebp - 0xe6], ax
0x8049afa:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x8049b00:   89 c2                           	mov edx, eax
0x8049b02:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x8049b06:   66 39 c2                        	cmp dx, ax
0x8049b09:   75 06                           	jne 0x8049b11 <func_1+0x2d6>
0x8049b0b:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x8049b0f:   74 07                           	je 0x8049b18 <func_1+0x2dd>
0x8049b11:   b8 01 00 00 00                  	mov eax, 1
0x8049b16:   eb 05                           	jmp 0x8049b1d <func_1+0x2e2>
0x8049b18:   b8 00 00 00 00                  	mov eax, 0
0x8049b1d:   66 89 45 ce                     	mov word ptr [ebp - 0x32], ax
0x8049b21:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x8049b25:   66 0d bd c5                     	or ax, 0xc5bd
0x8049b29:   0f b7 c0                        	movzx eax, ax
0x8049b2c:   09 45 9c                        	or dword ptr [ebp - 0x64], eax
0x8049b2f:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049b32:   0f b6 d0                        	movzx edx, al
0x8049b35:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049b38:   0f b6 c0                        	movzx eax, al
0x8049b3b:   0f af c2                        	imul eax, edx
0x8049b3e:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049b41:   b8 01 00 00 00                  	mov eax, 1
0x8049b46:   0f b7 8d 4a ff ff ff            	movzx ecx, word ptr [ebp - 0xb6]
0x8049b4d:   99                              	cdq 
0x8049b4e:   f7 f9                           	idiv ecx
0x8049b50:   89 d0                           	mov eax, edx
0x8049b52:   39 45 8c                        	cmp dword ptr [ebp - 0x74], eax
0x8049b55:   0f 9e c0                        	setle al
0x8049b58:   0f b6 c0                        	movzx eax, al
0x8049b5b:   31 45 a0                        	xor dword ptr [ebp - 0x60], eax
0x8049b5e:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x8049b62:   0f b6 55 db                     	movzx edx, byte ptr [ebp - 0x25]
0x8049b66:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x8049b6a:   39 45 9c                        	cmp dword ptr [ebp - 0x64], eax
0x8049b6d:   0f 9f c0                        	setg al
0x8049b70:   0f b6 c0                        	movzx eax, al
0x8049b73:   39 85 14 ff ff ff               	cmp dword ptr [ebp - 0xec], eax
0x8049b79:   0f 93 c0                        	setae al
0x8049b7c:   0f b6 c0                        	movzx eax, al
0x8049b7f:   21 d0                           	and eax, edx
0x8049b81:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049b84:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049b87:   98                              	cwde 
0x8049b88:   ba 9d 38 00 00                  	mov edx, 0x389d
0x8049b8d:   89 c1                           	mov ecx, eax
0x8049b8f:   d3 fa                           	sar edx, cl
0x8049b91:   89 d0                           	mov eax, edx
0x8049b93:   89 c2                           	mov edx, eax
0x8049b95:   0f b7 85 4a ff ff ff            	movzx eax, word ptr [ebp - 0xb6]
0x8049b9c:   29 c2                           	sub edx, eax
0x8049b9e:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049ba1:   21 d0                           	and eax, edx
0x8049ba3:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049ba6:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049ba9:   66 3d e0 88                     	cmp ax, 0x88e0
0x8049bad:   77 0a                           	ja 0x8049bb9 <func_1+0x37e>
0x8049baf:   66 83 bd 4a ff ff ff 00         	cmp word ptr [ebp - 0xb6], 0
0x8049bb7:   74 07                           	je 0x8049bc0 <func_1+0x385>
0x8049bb9:   b8 01 00 00 00                  	mov eax, 1
0x8049bbe:   eb 05                           	jmp 0x8049bc5 <func_1+0x38a>
0x8049bc0:   b8 00 00 00 00                  	mov eax, 0
0x8049bc5:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049bc8:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049bcb:   0c f8                           	or al, 0xf8
0x8049bcd:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049bd0:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049bd3:   83 bd 54 ff ff ff 01            	cmp dword ptr [ebp - 0xac], 1
0x8049bda:   0f 95 c2                        	setne dl
0x8049bdd:   89 d1                           	mov ecx, edx
0x8049bdf:   8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x8049be2:   21 d1                           	and ecx, edx
0x8049be4:   0f b7 95 4a ff ff ff            	movzx edx, word ptr [ebp - 0xb6]
0x8049beb:   31 ca                           	xor edx, ecx
0x8049bed:   88 55 ef                        	mov byte ptr [ebp - 0x11], dl
0x8049bf0:   89 c2                           	mov edx, eax
0x8049bf2:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x8049bf6:   09 d0                           	or eax, edx
0x8049bf8:   88 45 c7                        	mov byte ptr [ebp - 0x39], al
0x8049bfb:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049bfe:   88 45 db                        	mov byte ptr [ebp - 0x25], al
0x8049c01:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x8049c05:   3a 45 db                        	cmp al, byte ptr [ebp - 0x25]
0x8049c08:   73 1d                           	jae 0x8049c27 <func_1+0x3ec>
0x8049c0a:   b8 01 00 00 00                  	mov eax, 1
0x8049c0f:   b9 00 00 00 00                  	mov ecx, 0
0x8049c14:   ba 00 00 00 00                  	mov edx, 0
0x8049c19:   f7 f1                           	div ecx
0x8049c1b:   89 d0                           	mov eax, edx
0x8049c1d:   0f b7 c0                        	movzx eax, ax
0x8049c20:   2d c3 69 00 00                  	sub eax, 0x69c3
0x8049c25:   eb 1b                           	jmp 0x8049c42 <func_1+0x407>
0x8049c27:   b8 00 00 00 00                  	mov eax, 0
0x8049c2c:   b9 00 00 00 00                  	mov ecx, 0
0x8049c31:   ba 00 00 00 00                  	mov edx, 0
0x8049c36:   f7 f1                           	div ecx
0x8049c38:   89 d0                           	mov eax, edx
0x8049c3a:   0f b7 c0                        	movzx eax, ax
0x8049c3d:   2d c3 69 00 00                  	sub eax, 0x69c3
0x8049c42:   33 45 d4                        	xor eax, dword ptr [ebp - 0x2c]
0x8049c45:   89 c2                           	mov edx, eax
0x8049c47:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x8049c4b:   39 c2                           	cmp edx, eax
0x8049c4d:   0f 8f 60 01 00 00               	jg 0x8049db3 <func_1+0x578>
0x8049c53:   c6 85 c7 fe ff ff 02            	mov byte ptr [ebp - 0x139], 2
0x8049c5a:   66 c7 85 7e ff ff ff 93 cb      	mov word ptr [ebp - 0x82], 0xcb93
0x8049c63:   c7 85 c0 fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x140], 4
0x8049c6d:   66 83 4d ce f6                  	or word ptr [ebp - 0x32], 0xfff6
0x8049c72:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x8049c76:   0f bf f0                        	movsx esi, ax
0x8049c79:   b8 88 3e 00 00                  	mov eax, 0x3e88
0x8049c7e:   99                              	cdq 
0x8049c7f:   f7 fe                           	idiv esi
0x8049c81:   85 c0                           	test eax, eax
0x8049c83:   75 0c                           	jne 0x8049c91 <func_1+0x456>
0x8049c85:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x8049c8b:   3b 85 0c ff ff ff               	cmp eax, dword ptr [ebp - 0xf4]
0x8049c91:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x8049c95:   0f 84 a1 00 00 00               	je 0x8049d3c <func_1+0x501>
0x8049c9b:   c7 85 78 ff ff ff a4 39 29 e5   	mov dword ptr [ebp - 0x88], 0xe52939a4
0x8049ca5:   66 c7 45 ce 00 00               	mov word ptr [ebp - 0x32], 0
0x8049cab:   eb 3c                           	jmp 0x8049ce9 <func_1+0x4ae>
0x8049cad:   66 c7 85 bc fe ff ff 06 00      	mov word ptr [ebp - 0x144], 6
0x8049cb6:   83 85 78 ff ff ff 01            	add dword ptr [ebp - 0x88], 1
0x8049cbd:   0f bf 85 bc fe ff ff            	movsx eax, word ptr [ebp - 0x144]
0x8049cc4:   21 45 9c                        	and dword ptr [ebp - 0x64], eax
0x8049cc7:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049cca:   c0 e8 05                        	shr al, 5
0x8049ccd:   0f b6 c0                        	movzx eax, al
0x8049cd0:   31 45 f0                        	xor dword ptr [ebp - 0x10], eax
0x8049cd3:   0f b7 85 7e ff ff ff            	movzx eax, word ptr [ebp - 0x82]
0x8049cda:   83 e8 01                        	sub eax, 1
0x8049cdd:   66 89 85 7e ff ff ff            	mov word ptr [ebp - 0x82], ax
0x8049ce4:   66 83 45 ce 04                  	add word ptr [ebp - 0x32], 4
0x8049ce9:   66 83 7d ce 2d                  	cmp word ptr [ebp - 0x32], 0x2d
0x8049cee:   76 bd                           	jbe 0x8049cad <func_1+0x472>
0x8049cf0:   0f b6 85 c7 fe ff ff            	movzx eax, byte ptr [ebp - 0x139]
0x8049cf7:   09 85 c0 fe ff ff               	or dword ptr [ebp - 0x140], eax
0x8049cfd:   0f b6 85 13 ff ff ff            	movzx eax, byte ptr [ebp - 0xed]
0x8049d04:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x8049d0a:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049d0d:   66 0d 4b 30                     	or ax, 0x304b
0x8049d11:   0f b7 c0                        	movzx eax, ax
0x8049d14:   ba 0a 80 00 00                  	mov edx, 0x800a
0x8049d19:   89 c1                           	mov ecx, eax
0x8049d1b:   d3 e2                           	shl edx, cl
0x8049d1d:   89 d0                           	mov eax, edx
0x8049d1f:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049d22:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x8049d26:   74 07                           	je 0x8049d2f <func_1+0x4f4>
0x8049d28:   b8 01 00 00 00                  	mov eax, 1
0x8049d2d:   eb 05                           	jmp 0x8049d34 <func_1+0x4f9>
0x8049d2f:   b8 00 00 00 00                  	mov eax, 0
0x8049d34:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049d37:   e9 d4 0a 00 00                  	jmp 0x804a810 <func_1+0xfd5>
0x8049d3c:   c6 85 bf fe ff ff ce            	mov byte ptr [ebp - 0x141], 0xce
0x8049d43:   0f b6 45 e7                     	movzx eax, byte ptr [ebp - 0x19]
0x8049d47:   83 e8 01                        	sub eax, 1
0x8049d4a:   88 45 e7                        	mov byte ptr [ebp - 0x19], al
0x8049d4d:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x8049d51:   75 3b                           	jne 0x8049d8e <func_1+0x553>
0x8049d53:   81 bd c0 fe ff ff ff ff 00 00   	cmp dword ptr [ebp - 0x140], 0xffff
0x8049d5d:   0f 95 c0                        	setne al
0x8049d60:   0f b6 c0                        	movzx eax, al
0x8049d63:   8b 95 6c ff ff ff               	mov edx, dword ptr [ebp - 0x94]
0x8049d69:   31 d0                           	xor eax, edx
0x8049d6b:   0f b7 d0                        	movzx edx, ax
0x8049d6e:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049d71:   0f b7 c0                        	movzx eax, ax
0x8049d74:   0f af c2                        	imul eax, edx
0x8049d77:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049d7a:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049d7d:   0f be c0                        	movsx eax, al
0x8049d80:   0f b6 55 db                     	movzx edx, byte ptr [ebp - 0x25]
0x8049d84:   0f be ca                        	movsx ecx, dl
0x8049d87:   99                              	cdq 
0x8049d88:   f7 f9                           	idiv ecx
0x8049d8a:   89 d0                           	mov eax, edx
0x8049d8c:   85 c0                           	test eax, eax
0x8049d8e:   0f b7 55 ce                     	movzx edx, word ptr [ebp - 0x32]
0x8049d92:   0f b6 85 13 ff ff ff            	movzx eax, byte ptr [ebp - 0xed]
0x8049d99:   0f af c2                        	imul eax, edx
0x8049d9c:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x8049d9f:   0f 97 c0                        	seta al
0x8049da2:   0f b6 c0                        	movzx eax, al
0x8049da5:   21 45 f0                        	and dword ptr [ebp - 0x10], eax
0x8049da8:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049dab:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049dae:   e9 5d 0a 00 00                  	jmp 0x804a810 <func_1+0xfd5>
0x8049db3:   66 c7 85 06 ff ff ff b6 d5      	mov word ptr [ebp - 0xfa], 0xd5b6
0x8049dbc:   c7 85 74 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x8c], 0
0x8049dc6:   c7 85 00 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x100], 0xffffffff
0x8049dd0:   c7 85 fc fe ff ff 5d b2 d9 f9   	mov dword ptr [ebp - 0x104], 0xf9d9b25d
0x8049dda:   c7 45 88 00 00 00 00            	mov dword ptr [ebp - 0x78], 0
0x8049de1:   eb 58                           	jmp 0x8049e3b <func_1+0x600>
0x8049de3:   66 83 bd 0a ff ff ff 00         	cmp word ptr [ebp - 0xf6], 0
0x8049deb:   75 56                           	jne 0x8049e43 <func_1+0x608>
0x8049ded:   c7 45 f0 01 00 00 00            	mov dword ptr [ebp - 0x10], 1
0x8049df4:   0f bf 85 06 ff ff ff            	movsx eax, word ptr [ebp - 0xfa]
0x8049dfb:   0b 85 0c ff ff ff               	or eax, dword ptr [ebp - 0xf4]
0x8049e01:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049e04:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x8049e08:   75 04                           	jne 0x8049e0e <func_1+0x5d3>
0x8049e0a:   80 7d ef 00                     	cmp byte ptr [ebp - 0x11], 0
0x8049e0e:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x8049e12:   74 04                           	je 0x8049e18 <func_1+0x5dd>
0x8049e14:   83 7d 88 00                     	cmp dword ptr [ebp - 0x78], 0
0x8049e18:   66 83 bd 0a ff ff ff 00         	cmp word ptr [ebp - 0xf6], 0
0x8049e20:   75 06                           	jne 0x8049e28 <func_1+0x5ed>
0x8049e22:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x8049e26:   74 07                           	je 0x8049e2f <func_1+0x5f4>
0x8049e28:   b8 01 00 00 00                  	mov eax, 1
0x8049e2d:   eb 05                           	jmp 0x8049e34 <func_1+0x5f9>
0x8049e2f:   b8 00 00 00 00                  	mov eax, 0
0x8049e34:   21 45 e0                        	and dword ptr [ebp - 0x20], eax
0x8049e37:   83 45 88 01                     	add dword ptr [ebp - 0x78], 1
0x8049e3b:   83 7d 88 0d                     	cmp dword ptr [ebp - 0x78], 0xd
0x8049e3f:   7f a2                           	jg 0x8049de3 <func_1+0x5a8>
0x8049e41:   eb 01                           	jmp 0x8049e44 <func_1+0x609>
0x8049e43:   90                              	nop 
0x8049e44:   c6 45 e7 00                     	mov byte ptr [ebp - 0x19], 0
0x8049e48:   e9 6c 03 00 00                  	jmp 0x804a1b9 <func_1+0x97e>
0x8049e4d:   c6 85 f2 fe ff ff 79            	mov byte ptr [ebp - 0x10e], 0x79
0x8049e54:   c7 85 ec fe ff ff bf 62 9f c8   	mov dword ptr [ebp - 0x114], 0xc89f62bf
0x8049e5e:   c7 85 e8 fe ff ff a1 72 f0 9c   	mov dword ptr [ebp - 0x118], 0x9cf072a1
0x8049e68:   c7 85 e4 fe ff ff 42 95 bd 8b   	mov dword ptr [ebp - 0x11c], 0x8bbd9542
0x8049e72:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049e75:   0f b6 c0                        	movzx eax, al
0x8049e78:   c1 e0 06                        	shl eax, 6
0x8049e7b:   85 c0                           	test eax, eax
0x8049e7d:   74 4d                           	je 0x8049ecc <func_1+0x691>
0x8049e7f:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x8049e85:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x8049e88:   0f 96 c0                        	setbe al
0x8049e8b:   0f b6 c0                        	movzx eax, al
0x8049e8e:   66 89 45 ce                     	mov word ptr [ebp - 0x32], ax
0x8049e92:   66 83 7d ce 00                  	cmp word ptr [ebp - 0x32], 0
0x8049e97:   74 0d                           	je 0x8049ea6 <func_1+0x66b>
0x8049e99:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x8049e9d:   74 07                           	je 0x8049ea6 <func_1+0x66b>
0x8049e9f:   b8 01 00 00 00                  	mov eax, 1
0x8049ea4:   eb 05                           	jmp 0x8049eab <func_1+0x670>
0x8049ea6:   b8 00 00 00 00                  	mov eax, 0
0x8049eab:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049eae:   0f b6 85 f2 fe ff ff            	movzx eax, byte ptr [ebp - 0x10e]
0x8049eb5:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x8049eb8:   0f 94 c0                        	sete al
0x8049ebb:   0f b6 d0                        	movzx edx, al
0x8049ebe:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x8049ec2:   0f be c0                        	movsx eax, al
0x8049ec5:   0f af c2                        	imul eax, edx
0x8049ec8:   85 c0                           	test eax, eax
0x8049eca:   75 06                           	jne 0x8049ed2 <func_1+0x697>
0x8049ecc:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049ed0:   74 07                           	je 0x8049ed9 <func_1+0x69e>
0x8049ed2:   b8 01 00 00 00                  	mov eax, 1
0x8049ed7:   eb 05                           	jmp 0x8049ede <func_1+0x6a3>
0x8049ed9:   b8 00 00 00 00                  	mov eax, 0
0x8049ede:   31 45 dc                        	xor dword ptr [ebp - 0x24], eax
0x8049ee1:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049ee4:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x8049eea:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x8049ef0:   89 c2                           	mov edx, eax
0x8049ef2:   0f b6 85 f2 fe ff ff            	movzx eax, byte ptr [ebp - 0x10e]
0x8049ef9:   21 d0                           	and eax, edx
0x8049efb:   89 c1                           	mov ecx, eax
0x8049efd:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x8049f03:   89 c2                           	mov edx, eax
0x8049f05:   0f b6 c1                        	movzx eax, cl
0x8049f08:   f6 f2                           	div dl
0x8049f0a:   0f be c0                        	movsx eax, al
0x8049f0d:   c1 e0 05                        	shl eax, 5
0x8049f10:   89 c2                           	mov edx, eax
0x8049f12:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x8049f16:   21 d0                           	and eax, edx
0x8049f18:   88 45 c7                        	mov byte ptr [ebp - 0x39], al
0x8049f1b:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049f1f:   0f 84 9a 00 00 00               	je 0x8049fbf <func_1+0x784>
0x8049f25:   c6 85 cf fe ff ff 5a            	mov byte ptr [ebp - 0x131], 0x5a
0x8049f2c:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049f2f:   f7 d0                           	not eax
0x8049f31:   89 c2                           	mov edx, eax
0x8049f33:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x8049f37:   31 d0                           	xor eax, edx
0x8049f39:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x8049f3d:   0f b6 4d ef                     	movzx ecx, byte ptr [ebp - 0x11]
0x8049f41:   b8 e7 46 00 00                  	mov eax, 0x46e7
0x8049f46:   99                              	cdq 
0x8049f47:   f7 f9                           	idiv ecx
0x8049f49:   89 d0                           	mov eax, edx
0x8049f4b:   85 c0                           	test eax, eax
0x8049f4d:   74 0c                           	je 0x8049f5b <func_1+0x720>
0x8049f4f:   80 85 cf fe ff ff 01            	add byte ptr [ebp - 0x131], 1
0x8049f56:   e9 54 02 00 00                  	jmp 0x804a1af <func_1+0x974>
0x8049f5b:   c7 85 c8 fe ff ff f7 ff ff ff   	mov dword ptr [ebp - 0x138], 0xfffffff7
0x8049f65:   0f b7 85 06 ff ff ff            	movzx eax, word ptr [ebp - 0xfa]
0x8049f6c:   89 c2                           	mov edx, eax
0x8049f6e:   0f b6 45 e7                     	movzx eax, byte ptr [ebp - 0x19]
0x8049f72:   29 d0                           	sub eax, edx
0x8049f74:   89 c2                           	mov edx, eax
0x8049f76:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x8049f7a:   0f b6 c0                        	movzx eax, al
0x8049f7d:   f6 f2                           	div dl
0x8049f7f:   0f b6 c0                        	movzx eax, al
0x8049f82:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049f85:   0f b6 45 e7                     	movzx eax, byte ptr [ebp - 0x19]
0x8049f89:   66 0d 48 0c                     	or ax, 0xc48
0x8049f8d:   98                              	cwde 
0x8049f8e:   0f bf b5 06 ff ff ff            	movsx esi, word ptr [ebp - 0xfa]
0x8049f95:   99                              	cdq 
0x8049f96:   f7 fe                           	idiv esi
0x8049f98:   89 c2                           	mov edx, eax
0x8049f9a:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049f9d:   31 d0                           	xor eax, edx
0x8049f9f:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x8049fa3:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x8049fa9:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049fac:   66 83 6d c0 01                  	sub word ptr [ebp - 0x40], 1
0x8049fb1:   8b 85 ec fe ff ff               	mov eax, dword ptr [ebp - 0x114]
0x8049fb7:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049fba:   e9 f0 01 00 00                  	jmp 0x804a1af <func_1+0x974>
0x8049fbf:   c6 85 e3 fe ff ff 01            	mov byte ptr [ebp - 0x11d], 1
0x8049fc6:   c7 85 dc fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x124], 1
0x8049fd0:   c6 85 db fe ff ff e3            	mov byte ptr [ebp - 0x125], 0xe3
0x8049fd7:   0f b6 85 13 ff ff ff            	movzx eax, byte ptr [ebp - 0xed]
0x8049fde:   01 c0                           	add eax, eax
0x8049fe0:   85 c0                           	test eax, eax
0x8049fe2:   75 10                           	jne 0x8049ff4 <func_1+0x7b9>
0x8049fe4:   0f bf 85 0a ff ff ff            	movsx eax, word ptr [ebp - 0xf6]
0x8049feb:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049fee:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x8049ff2:   74 07                           	je 0x8049ffb <func_1+0x7c0>
0x8049ff4:   b8 01 00 00 00                  	mov eax, 1
0x8049ff9:   eb 05                           	jmp 0x804a000 <func_1+0x7c5>
0x8049ffb:   b8 00 00 00 00                  	mov eax, 0
0x804a000:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x804a003:   74 0f                           	je 0x804a014 <func_1+0x7d9>
0x804a005:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x804a009:   0f 84 fc 00 00 00               	je 0x804a10b <func_1+0x8d0>
0x804a00f:   e9 c6 fd ff ff                  	jmp 0x8049dda <func_1+0x59f>
0x804a014:   66 c7 85 d8 fe ff ff 17 fb      	mov word ptr [ebp - 0x128], 0xfb17
0x804a01d:   c7 85 d4 fe ff ff d7 78 e5 f7   	mov dword ptr [ebp - 0x12c], 0xf7e578d7
0x804a027:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x804a02b:   74 05                           	je 0x804a032 <func_1+0x7f7>
0x804a02d:   e9 c8 fa ff ff                  	jmp 0x8049afa <func_1+0x2bf>
0x804a032:   80 7d c7 00                     	cmp byte ptr [ebp - 0x39], 0
0x804a036:   75 0a                           	jne 0x804a042 <func_1+0x807>
0x804a038:   66 83 bd 42 ff ff ff 00         	cmp word ptr [ebp - 0xbe], 0
0x804a040:   74 07                           	je 0x804a049 <func_1+0x80e>
0x804a042:   b9 01 00 00 00                  	mov ecx, 1
0x804a047:   eb 05                           	jmp 0x804a04e <func_1+0x813>
0x804a049:   b9 00 00 00 00                  	mov ecx, 0
0x804a04e:   0f bf 55 c2                     	movsx edx, word ptr [ebp - 0x3e]
0x804a052:   83 bd e8 fe ff ff 00            	cmp dword ptr [ebp - 0x118], 0
0x804a059:   0f 9e c0                        	setle al
0x804a05c:   0f b6 c0                        	movzx eax, al
0x804a05f:   39 c2                           	cmp edx, eax
0x804a061:   0f 9c c0                        	setl al
0x804a064:   0f b6 c0                        	movzx eax, al
0x804a067:   39 85 e8 fe ff ff               	cmp dword ptr [ebp - 0x118], eax
0x804a06d:   0f 94 c0                        	sete al
0x804a070:   0f b6 c0                        	movzx eax, al
0x804a073:   39 c1                           	cmp ecx, eax
0x804a075:   0f 9c c0                        	setl al
0x804a078:   0f b6 c0                        	movzx eax, al
0x804a07b:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x804a07e:   0f 94 c0                        	sete al
0x804a081:   0f b6 c0                        	movzx eax, al
0x804a084:   8b 95 44 ff ff ff               	mov edx, dword ptr [ebp - 0xbc]
0x804a08a:   31 d0                           	xor eax, edx
0x804a08c:   66 c1 e8 0c                     	shr ax, 0xc
0x804a090:   66 39 45 ce                     	cmp word ptr [ebp - 0x32], ax
0x804a094:   0f 97 c0                        	seta al
0x804a097:   0f b6 c0                        	movzx eax, al
0x804a09a:   0f b7 95 06 ff ff ff            	movzx edx, word ptr [ebp - 0xfa]
0x804a0a1:   0f b6 f2                        	movzx esi, dl
0x804a0a4:   99                              	cdq 
0x804a0a5:   f7 fe                           	idiv esi
0x804a0a7:   66 85 c0                        	test ax, ax
0x804a0aa:   74 0d                           	je 0x804a0b9 <func_1+0x87e>
0x804a0ac:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x804a0b0:   74 07                           	je 0x804a0b9 <func_1+0x87e>
0x804a0b2:   b8 01 00 00 00                  	mov eax, 1
0x804a0b7:   eb 05                           	jmp 0x804a0be <func_1+0x883>
0x804a0b9:   b8 00 00 00 00                  	mov eax, 0
0x804a0be:   0f be d0                        	movsx edx, al
0x804a0c1:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a0c4:   0f be c0                        	movsx eax, al
0x804a0c7:   0f af c2                        	imul eax, edx
0x804a0ca:   3d 95 18 00 00                  	cmp eax, 0x1895
0x804a0cf:   0f 95 c0                        	setne al
0x804a0d2:   0f b6 c0                        	movzx eax, al
0x804a0d5:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a0d8:   80 7d db 01                     	cmp byte ptr [ebp - 0x25], 1
0x804a0dc:   0f 94 c0                        	sete al
0x804a0df:   89 c2                           	mov edx, eax
0x804a0e1:   0f b6 85 e3 fe ff ff            	movzx eax, byte ptr [ebp - 0x11d]
0x804a0e8:   29 c2                           	sub edx, eax
0x804a0ea:   89 d0                           	mov eax, edx
0x804a0ec:   32 85 e3 fe ff ff               	xor al, byte ptr [ebp - 0x11d]
0x804a0f2:   0f b6 d0                        	movzx edx, al
0x804a0f5:   0f b6 85 e3 fe ff ff            	movzx eax, byte ptr [ebp - 0x11d]
0x804a0fc:   0f b6 c0                        	movzx eax, al
0x804a0ff:   89 c1                           	mov ecx, eax
0x804a101:   d3 fa                           	sar edx, cl
0x804a103:   89 d0                           	mov eax, edx
0x804a105:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x804a10b:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x804a112:   c7 85 d0 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x130], 0xffffffff
0x804a11c:   c7 45 d4 ff ff ff ff            	mov dword ptr [ebp - 0x2c], 0xffffffff
0x804a123:   66 81 7d c4 b5 8b               	cmp word ptr [ebp - 0x3c], 0x8bb5
0x804a129:   0f 97 c0                        	seta al
0x804a12c:   0f b6 d0                        	movzx edx, al
0x804a12f:   0f be 85 e3 fe ff ff            	movsx eax, byte ptr [ebp - 0x11d]
0x804a136:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804a139:   0f 94 c0                        	sete al
0x804a13c:   0f b6 c0                        	movzx eax, al
0x804a13f:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a142:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a145:   66 35 60 bf                     	xor ax, 0xbf60
0x804a149:   98                              	cwde 
0x804a14a:   29 c2                           	sub edx, eax
0x804a14c:   89 d0                           	mov eax, edx
0x804a14e:   31 45 a0                        	xor dword ptr [ebp - 0x60], eax
0x804a151:   c7 85 d0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x130], 1
0x804a15b:   83 bd 00 ff ff ff 00            	cmp dword ptr [ebp - 0x100], 0
0x804a162:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x804a166:   74 07                           	je 0x804a16f <func_1+0x934>
0x804a168:   b8 01 00 00 00                  	mov eax, 1
0x804a16d:   eb 05                           	jmp 0x804a174 <func_1+0x939>
0x804a16f:   b8 00 00 00 00                  	mov eax, 0
0x804a174:   89 c2                           	mov edx, eax
0x804a176:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a17c:   01 d0                           	add eax, edx
0x804a17e:   39 85 e4 fe ff ff               	cmp dword ptr [ebp - 0x11c], eax
0x804a184:   0f 92 c0                        	setb al
0x804a187:   0f b6 d0                        	movzx edx, al
0x804a18a:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804a18e:   39 c2                           	cmp edx, eax
0x804a190:   0f 95 c0                        	setne al
0x804a193:   0f b6 c0                        	movzx eax, al
0x804a196:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804a199:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x804a1a0:   75 0c                           	jne 0x804a1ae <func_1+0x973>
0x804a1a2:   0f b6 45 bb                     	movzx eax, byte ptr [ebp - 0x45]
0x804a1a6:   83 e8 01                        	sub eax, 1
0x804a1a9:   88 45 bb                        	mov byte ptr [ebp - 0x45], al
0x804a1ac:   eb 01                           	jmp 0x804a1af <func_1+0x974>
0x804a1ae:   90                              	nop 
0x804a1af:   0f b6 45 e7                     	movzx eax, byte ptr [ebp - 0x19]
0x804a1b3:   83 c0 01                        	add eax, 1
0x804a1b6:   88 45 e7                        	mov byte ptr [ebp - 0x19], al
0x804a1b9:   80 7d e7 0b                     	cmp byte ptr [ebp - 0x19], 0xb
0x804a1bd:   0f 84 8a fc ff ff               	je 0x8049e4d <func_1+0x612>
0x804a1c3:   c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x804a1ca:   e9 3e 03 00 00                  	jmp 0x804a50d <func_1+0xcd2>
0x804a1cf:   c6 85 fb fe ff ff fd            	mov byte ptr [ebp - 0x105], 0xfd
0x804a1d6:   c7 85 f4 fe ff ff 50 f3 92 69   	mov dword ptr [ebp - 0x10c], 0x6992f350
0x804a1e0:   83 4d b4 01                     	or dword ptr [ebp - 0x4c], 1
0x804a1e4:   81 7d b4 ac fc 1f 3f            	cmp dword ptr [ebp - 0x4c], 0x3f1ffcac
0x804a1eb:   0f 9e c0                        	setle al
0x804a1ee:   0f b6 c0                        	movzx eax, al
0x804a1f1:   8b 55 98                        	mov edx, dword ptr [ebp - 0x68]
0x804a1f4:   0f b7 ca                        	movzx ecx, dx
0x804a1f7:   99                              	cdq 
0x804a1f8:   f7 f9                           	idiv ecx
0x804a1fa:   89 d0                           	mov eax, edx
0x804a1fc:   98                              	cwde 
0x804a1fd:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x804a203:   0f 8d d7 00 00 00               	jge 0x804a2e0 <func_1+0xaa5>
0x804a209:   c6 85 f3 fe ff ff 00            	mov byte ptr [ebp - 0x10d], 0
0x804a210:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x804a214:   0f 94 c0                        	sete al
0x804a217:   0f b6 d0                        	movzx edx, al
0x804a21a:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a21d:   0f b7 d8                        	movzx ebx, ax
0x804a220:   0f b6 85 67 ff ff ff            	movzx eax, byte ptr [ebp - 0x99]
0x804a227:   89 c1                           	mov ecx, eax
0x804a229:   d3 fb                           	sar ebx, cl
0x804a22b:   89 d8                           	mov eax, ebx
0x804a22d:   83 f8 ff                        	cmp eax, -1
0x804a230:   0f 9d c0                        	setge al
0x804a233:   0f b6 c0                        	movzx eax, al
0x804a236:   31 d0                           	xor eax, edx
0x804a238:   66 89 45 b2                     	mov word ptr [ebp - 0x4e], ax
0x804a23c:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a240:   39 45 bc                        	cmp dword ptr [ebp - 0x44], eax
0x804a243:   0f 95 c0                        	setne al
0x804a246:   88 85 fb fe ff ff               	mov byte ptr [ebp - 0x105], al
0x804a24c:   0f bf 85 06 ff ff ff            	movsx eax, word ptr [ebp - 0xfa]
0x804a253:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x804a256:   0f 9c c0                        	setl al
0x804a259:   0f b6 c0                        	movzx eax, al
0x804a25c:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x804a25f:   0f 96 c0                        	setbe al
0x804a262:   0f b6 c0                        	movzx eax, al
0x804a265:   0f be 8d fb fe ff ff            	movsx ecx, byte ptr [ebp - 0x105]
0x804a26c:   99                              	cdq 
0x804a26d:   f7 f9                           	idiv ecx
0x804a26f:   0f b7 85 40 ff ff ff            	movzx eax, word ptr [ebp - 0xc0]
0x804a276:   39 c2                           	cmp edx, eax
0x804a278:   0f 9e c0                        	setle al
0x804a27b:   0f b6 c0                        	movzx eax, al
0x804a27e:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804a281:   c7 85 74 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x8c], 1
0x804a28b:   c7 45 80 7d 0a 0a bf            	mov dword ptr [ebp - 0x80], 0xbf0a0a7d
0x804a292:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a298:   3b 45 d4                        	cmp eax, dword ptr [ebp - 0x2c]
0x804a29b:   75 0d                           	jne 0x804a2aa <func_1+0xa6f>
0x804a29d:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x804a2a1:   74 07                           	je 0x804a2aa <func_1+0xa6f>
0x804a2a3:   b8 01 00 00 00                  	mov eax, 1
0x804a2a8:   eb 05                           	jmp 0x804a2af <func_1+0xa74>
0x804a2aa:   b8 00 00 00 00                  	mov eax, 0
0x804a2af:   3b 45 a0                        	cmp eax, dword ptr [ebp - 0x60]
0x804a2b2:   0f 94 c0                        	sete al
0x804a2b5:   88 85 f3 fe ff ff               	mov byte ptr [ebp - 0x10d], al
0x804a2bb:   c7 85 f4 fe ff ff f9 ff ff ff   	mov dword ptr [ebp - 0x10c], 0xfffffff9
0x804a2c5:   c7 45 b4 00 00 00 00            	mov dword ptr [ebp - 0x4c], 0
0x804a2cc:   66 83 45 aa 01                  	add word ptr [ebp - 0x56], 1
0x804a2d1:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a2d5:   0f 84 27 02 00 00               	je 0x804a502 <func_1+0xcc7>
0x804a2db:   e9 29 02 00 00                  	jmp 0x804a509 <func_1+0xcce>
0x804a2e0:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x804a2e4:   09 45 ac                        	or dword ptr [ebp - 0x54], eax
0x804a2e7:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x804a2ee:   75 19                           	jne 0x804a309 <func_1+0xace>
0x804a2f0:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x804a2f6:   0f be d0                        	movsx edx, al
0x804a2f9:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a2fc:   0f be c0                        	movsx eax, al
0x804a2ff:   89 c1                           	mov ecx, eax
0x804a301:   d3 e2                           	shl edx, cl
0x804a303:   89 d0                           	mov eax, edx
0x804a305:   85 c0                           	test eax, eax
0x804a307:   74 07                           	je 0x804a310 <func_1+0xad5>
0x804a309:   b8 01 00 00 00                  	mov eax, 1
0x804a30e:   eb 05                           	jmp 0x804a315 <func_1+0xada>
0x804a310:   b8 00 00 00 00                  	mov eax, 0
0x804a315:   3b 45 bc                        	cmp eax, dword ptr [ebp - 0x44]
0x804a318:   0f 9e c0                        	setle al
0x804a31b:   0f b6 c0                        	movzx eax, al
0x804a31e:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x804a321:   72 07                           	jb 0x804a32a <func_1+0xaef>
0x804a323:   ba 10 00 00 00                  	mov edx, 0x10
0x804a328:   eb 05                           	jmp 0x804a32f <func_1+0xaf4>
0x804a32a:   ba 00 00 00 00                  	mov edx, 0
0x804a32f:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x804a335:   0f b7 c0                        	movzx eax, ax
0x804a338:   0f af d0                        	imul edx, eax
0x804a33b:   0f b6 85 09 ff ff ff            	movzx eax, byte ptr [ebp - 0xf7]
0x804a342:   09 d0                           	or eax, edx
0x804a344:   39 85 00 ff ff ff               	cmp dword ptr [ebp - 0x100], eax
0x804a34a:   7f 07                           	jg 0x804a353 <func_1+0xb18>
0x804a34c:   b8 00 00 01 00                  	mov eax, 0x10000
0x804a351:   eb 05                           	jmp 0x804a358 <func_1+0xb1d>
0x804a353:   b8 ff ff 00 00                  	mov eax, 0xffff
0x804a358:   23 45 e8                        	and eax, dword ptr [ebp - 0x18]
0x804a35b:   3d f5 a1 00 00                  	cmp eax, 0xa1f5
0x804a360:   0f 95 c0                        	setne al
0x804a363:   0f b6 c0                        	movzx eax, al
0x804a366:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a369:   66 c7 45 c4 00 00               	mov word ptr [ebp - 0x3c], 0
0x804a36f:   eb 77                           	jmp 0x804a3e8 <func_1+0xbad>
0x804a371:   c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x804a378:   c7 45 e8 ad e7 3a 06            	mov dword ptr [ebp - 0x18], 0x63ae7ad
0x804a37f:   66 83 7d ce 00                  	cmp word ptr [ebp - 0x32], 0
0x804a384:   75 06                           	jne 0x804a38c <func_1+0xb51>
0x804a386:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a38a:   74 07                           	je 0x804a393 <func_1+0xb58>
0x804a38c:   b8 01 00 00 00                  	mov eax, 1
0x804a391:   eb 05                           	jmp 0x804a398 <func_1+0xb5d>
0x804a393:   b8 00 00 00 00                  	mov eax, 0
0x804a398:   0f be c0                        	movsx eax, al
0x804a39b:   83 bd 00 ff ff ff 01            	cmp dword ptr [ebp - 0x100], 1
0x804a3a2:   0f 9f c2                        	setg dl
0x804a3a5:   0f b6 ca                        	movzx ecx, dl
0x804a3a8:   99                              	cdq 
0x804a3a9:   f7 f9                           	idiv ecx
0x804a3ab:   89 d0                           	mov eax, edx
0x804a3ad:   0f be c0                        	movsx eax, al
0x804a3b0:   ba 01 00 00 00                  	mov edx, 1
0x804a3b5:   29 c2                           	sub edx, eax
0x804a3b7:   89 d0                           	mov eax, edx
0x804a3b9:   0b 85 74 ff ff ff               	or eax, dword ptr [ebp - 0x8c]
0x804a3bf:   39 85 fc fe ff ff               	cmp dword ptr [ebp - 0x104], eax
0x804a3c5:   0f 97 c0                        	seta al
0x804a3c8:   0f b6 c0                        	movzx eax, al
0x804a3cb:   8b 95 00 ff ff ff               	mov edx, dword ptr [ebp - 0x100]
0x804a3d1:   0f be f2                        	movsx esi, dl
0x804a3d4:   99                              	cdq 
0x804a3d5:   f7 fe                           	idiv esi
0x804a3d7:   83 f8 01                        	cmp eax, 1
0x804a3da:   0f 94 c0                        	sete al
0x804a3dd:   0f b6 c0                        	movzx eax, al
0x804a3e0:   31 45 bc                        	xor dword ptr [ebp - 0x44], eax
0x804a3e3:   66 83 45 c4 04                  	add word ptr [ebp - 0x3c], 4
0x804a3e8:   66 83 7d c4 20                  	cmp word ptr [ebp - 0x3c], 0x20
0x804a3ed:   75 82                           	jne 0x804a371 <func_1+0xb36>
0x804a3ef:   0f b6 45 a9                     	movzx eax, byte ptr [ebp - 0x57]
0x804a3f3:   0f b6 95 5d ff ff ff            	movzx edx, byte ptr [ebp - 0xa3]
0x804a3fa:   0f b7 8d 5e ff ff ff            	movzx ecx, word ptr [ebp - 0xa2]
0x804a401:   0f b7 75 aa                     	movzx esi, word ptr [ebp - 0x56]
0x804a405:   0f b7 7d b2                     	movzx edi, word ptr [ebp - 0x4e]
0x804a409:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a40f:   0f b6 5d bb                     	movzx ebx, byte ptr [ebp - 0x45]
0x804a413:   89 9d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ebx
0x804a419:   0f be bd 66 ff ff ff            	movsx edi, byte ptr [ebp - 0x9a]
0x804a420:   89 bd 78 fe ff ff               	mov dword ptr [ebp - 0x188], edi
0x804a426:   0f b6 9d 67 ff ff ff            	movzx ebx, byte ptr [ebp - 0x99]
0x804a42d:   89 9d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ebx
0x804a433:   0f b7 7d c0                     	movzx edi, word ptr [ebp - 0x40]
0x804a437:   89 bd 70 fe ff ff               	mov dword ptr [ebp - 0x190], edi
0x804a43d:   0f bf 5d c2                     	movsx ebx, word ptr [ebp - 0x3e]
0x804a441:   89 9d 6c fe ff ff               	mov dword ptr [ebp - 0x194], ebx
0x804a447:   0f b7 7d c4                     	movzx edi, word ptr [ebp - 0x3c]
0x804a44b:   89 bd 68 fe ff ff               	mov dword ptr [ebp - 0x198], edi
0x804a451:   0f b6 5d e7                     	movzx ebx, byte ptr [ebp - 0x19]
0x804a455:   89 9d 64 fe ff ff               	mov dword ptr [ebp - 0x19c], ebx
0x804a45b:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x804a45f:   89 bd 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], edi
0x804a465:   0f b7 5d ce                     	movzx ebx, word ptr [ebp - 0x32]
0x804a469:   89 9d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ebx
0x804a46f:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x804a473:   0f b6 5d db                     	movzx ebx, byte ptr [ebp - 0x25]
0x804a477:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804a47d:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a480:   50                              	push eax
0x804a481:   52                              	push edx
0x804a482:   51                              	push ecx
0x804a483:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a489:   56                              	push esi
0x804a48a:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a48d:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a493:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a496:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a49c:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a4a2:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a4a5:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a4ab:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a4b1:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a4b7:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a4bd:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a4c0:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a4c3:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804a4c9:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a4cf:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a4d2:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a4d8:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a4de:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a4e1:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a4e7:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a4ea:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a4ed:   57                              	push edi
0x804a4ee:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a4f1:   53                              	push ebx
0x804a4f2:   e8 2f f1 ff ff                  	call 0x8049626 <set_var>
0x804a4f7:   83 c4 7c                        	add esp, 0x7c
0x804a4fa:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a4fd:   e9 c0 06 00 00                  	jmp 0x804abc2 <func_1+0x1387>
0x804a502:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x804a509:   83 6d f0 07                     	sub dword ptr [ebp - 0x10], 7
0x804a50d:   83 7d f0 ec                     	cmp dword ptr [ebp - 0x10], -0x14
0x804a511:   0f 8c b8 fc ff ff               	jl 0x804a1cf <func_1+0x994>
0x804a517:   e9 f4 02 00 00                  	jmp 0x804a810 <func_1+0xfd5>
0x804a51c:   c6 85 3f ff ff ff 49            	mov byte ptr [ebp - 0xc1], 0x49
0x804a523:   c6 85 3e ff ff ff 03            	mov byte ptr [ebp - 0xc2], 3
0x804a52a:   c7 85 38 ff ff ff e1 ad e1 a6   	mov dword ptr [ebp - 0xc8], 0xa6e1ade1
0x804a534:   66 c7 85 36 ff ff ff fe ff      	mov word ptr [ebp - 0xca], 0xfffe
0x804a53d:   c7 85 30 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xd0], 0xffffffff
0x804a547:   c7 85 2c ff ff ff 87 e3 48 37   	mov dword ptr [ebp - 0xd4], 0x3748e387
0x804a551:   0f b6 85 3e ff ff ff            	movzx eax, byte ptr [ebp - 0xc2]
0x804a558:   83 e0 01                        	and eax, 1
0x804a55b:   66 89 85 36 ff ff ff            	mov word ptr [ebp - 0xca], ax
0x804a562:   0f b6 95 3f ff ff ff            	movzx edx, byte ptr [ebp - 0xc1]
0x804a569:   80 bd 3f ff ff ff 00            	cmp byte ptr [ebp - 0xc1], 0
0x804a570:   0f 94 c0                        	sete al
0x804a573:   0f b6 c0                        	movzx eax, al
0x804a576:   39 c2                           	cmp edx, eax
0x804a578:   0f 9c c0                        	setl al
0x804a57b:   0f b6 c0                        	movzx eax, al
0x804a57e:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x804a581:   0f 84 59 01 00 00               	je 0x804a6e0 <func_1+0xea5>
0x804a587:   c6 85 23 ff ff ff ff            	mov byte ptr [ebp - 0xdd], 0xff
0x804a58e:   c7 85 1c ff ff ff f8 ff ff ff   	mov dword ptr [ebp - 0xe4], 0xfffffff8
0x804a598:   0f b7 85 4a ff ff ff            	movzx eax, word ptr [ebp - 0xb6]
0x804a59f:   0f be c0                        	movsx eax, al
0x804a5a2:   83 c0 51                        	add eax, 0x51
0x804a5a5:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a5a8:   0f b6 85 23 ff ff ff            	movzx eax, byte ptr [ebp - 0xdd]
0x804a5af:   0f be c0                        	movsx eax, al
0x804a5b2:   31 85 1c ff ff ff               	xor dword ptr [ebp - 0xe4], eax
0x804a5b8:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a5bb:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a5be:   8b 85 1c ff ff ff               	mov eax, dword ptr [ebp - 0xe4]
0x804a5c4:   0b 45 d0                        	or eax, dword ptr [ebp - 0x30]
0x804a5c7:   89 85 1c ff ff ff               	mov dword ptr [ebp - 0xe4], eax
0x804a5cd:   0f b6 45 a9                     	movzx eax, byte ptr [ebp - 0x57]
0x804a5d1:   0f b6 95 5d ff ff ff            	movzx edx, byte ptr [ebp - 0xa3]
0x804a5d8:   0f b7 8d 5e ff ff ff            	movzx ecx, word ptr [ebp - 0xa2]
0x804a5df:   0f b7 75 aa                     	movzx esi, word ptr [ebp - 0x56]
0x804a5e3:   0f b7 7d b2                     	movzx edi, word ptr [ebp - 0x4e]
0x804a5e7:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a5ed:   0f b6 5d bb                     	movzx ebx, byte ptr [ebp - 0x45]
0x804a5f1:   89 9d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ebx
0x804a5f7:   0f be bd 66 ff ff ff            	movsx edi, byte ptr [ebp - 0x9a]
0x804a5fe:   89 bd 78 fe ff ff               	mov dword ptr [ebp - 0x188], edi
0x804a604:   0f b6 9d 67 ff ff ff            	movzx ebx, byte ptr [ebp - 0x99]
0x804a60b:   89 9d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ebx
0x804a611:   0f b7 7d c0                     	movzx edi, word ptr [ebp - 0x40]
0x804a615:   89 bd 70 fe ff ff               	mov dword ptr [ebp - 0x190], edi
0x804a61b:   0f bf 5d c2                     	movsx ebx, word ptr [ebp - 0x3e]
0x804a61f:   89 9d 6c fe ff ff               	mov dword ptr [ebp - 0x194], ebx
0x804a625:   0f b7 7d c4                     	movzx edi, word ptr [ebp - 0x3c]
0x804a629:   89 bd 68 fe ff ff               	mov dword ptr [ebp - 0x198], edi
0x804a62f:   0f b6 5d e7                     	movzx ebx, byte ptr [ebp - 0x19]
0x804a633:   89 9d 64 fe ff ff               	mov dword ptr [ebp - 0x19c], ebx
0x804a639:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x804a63d:   89 bd 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], edi
0x804a643:   0f b7 5d ce                     	movzx ebx, word ptr [ebp - 0x32]
0x804a647:   89 9d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ebx
0x804a64d:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x804a651:   0f b6 5d db                     	movzx ebx, byte ptr [ebp - 0x25]
0x804a655:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804a65b:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a65e:   50                              	push eax
0x804a65f:   52                              	push edx
0x804a660:   51                              	push ecx
0x804a661:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a667:   56                              	push esi
0x804a668:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a66b:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a671:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a674:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a67a:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a680:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a683:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a689:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a68f:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a695:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a69b:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a69e:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a6a1:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804a6a7:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a6ad:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a6b0:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a6b6:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a6bc:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a6bf:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a6c5:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a6c8:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a6cb:   57                              	push edi
0x804a6cc:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a6cf:   53                              	push ebx
0x804a6d0:   e8 51 ef ff ff                  	call 0x8049626 <set_var>
0x804a6d5:   83 c4 7c                        	add esp, 0x7c
0x804a6d8:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a6db:   e9 e2 04 00 00                  	jmp 0x804abc2 <func_1+0x1387>
0x804a6e0:   c7 85 28 ff ff ff f9 d3 d8 8f   	mov dword ptr [ebp - 0xd8], 0x8fd8d3f9
0x804a6ea:   c7 85 24 ff ff ff b5 a7 ed 85   	mov dword ptr [ebp - 0xdc], 0x85eda7b5
0x804a6f4:   66 83 85 5e ff ff ff 01         	add word ptr [ebp - 0xa2], 1
0x804a6fc:   0f b6 45 a9                     	movzx eax, byte ptr [ebp - 0x57]
0x804a700:   0f b6 95 5d ff ff ff            	movzx edx, byte ptr [ebp - 0xa3]
0x804a707:   0f b7 8d 5e ff ff ff            	movzx ecx, word ptr [ebp - 0xa2]
0x804a70e:   0f b7 75 aa                     	movzx esi, word ptr [ebp - 0x56]
0x804a712:   0f b7 7d b2                     	movzx edi, word ptr [ebp - 0x4e]
0x804a716:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a71c:   0f b6 5d bb                     	movzx ebx, byte ptr [ebp - 0x45]
0x804a720:   89 9d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ebx
0x804a726:   0f be bd 66 ff ff ff            	movsx edi, byte ptr [ebp - 0x9a]
0x804a72d:   89 bd 78 fe ff ff               	mov dword ptr [ebp - 0x188], edi
0x804a733:   0f b6 9d 67 ff ff ff            	movzx ebx, byte ptr [ebp - 0x99]
0x804a73a:   89 9d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ebx
0x804a740:   0f b7 7d c0                     	movzx edi, word ptr [ebp - 0x40]
0x804a744:   89 bd 70 fe ff ff               	mov dword ptr [ebp - 0x190], edi
0x804a74a:   0f bf 5d c2                     	movsx ebx, word ptr [ebp - 0x3e]
0x804a74e:   89 9d 6c fe ff ff               	mov dword ptr [ebp - 0x194], ebx
0x804a754:   0f b7 7d c4                     	movzx edi, word ptr [ebp - 0x3c]
0x804a758:   89 bd 68 fe ff ff               	mov dword ptr [ebp - 0x198], edi
0x804a75e:   0f b6 5d e7                     	movzx ebx, byte ptr [ebp - 0x19]
0x804a762:   89 9d 64 fe ff ff               	mov dword ptr [ebp - 0x19c], ebx
0x804a768:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x804a76c:   89 bd 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], edi
0x804a772:   0f b7 5d ce                     	movzx ebx, word ptr [ebp - 0x32]
0x804a776:   89 9d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ebx
0x804a77c:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x804a780:   0f b6 5d db                     	movzx ebx, byte ptr [ebp - 0x25]
0x804a784:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804a78a:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a78d:   50                              	push eax
0x804a78e:   52                              	push edx
0x804a78f:   51                              	push ecx
0x804a790:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a796:   56                              	push esi
0x804a797:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a79a:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a7a0:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a7a3:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a7a9:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a7af:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a7b2:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a7b8:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a7be:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a7c4:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a7ca:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a7cd:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a7d0:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804a7d6:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a7dc:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a7df:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a7e5:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a7eb:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a7ee:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a7f4:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a7f7:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a7fa:   57                              	push edi
0x804a7fb:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a7fe:   53                              	push ebx
0x804a7ff:   e8 22 ee ff ff                  	call 0x8049626 <set_var>
0x804a804:   83 c4 7c                        	add esp, 0x7c
0x804a807:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804a80b:   e9 b2 03 00 00                  	jmp 0x804abc2 <func_1+0x1387>
0x804a810:   66 c7 85 ba fe ff ff 06 00      	mov word ptr [ebp - 0x146], 6
0x804a819:   c7 85 70 ff ff ff 97 83 3b 54   	mov dword ptr [ebp - 0x90], 0x543b8397
0x804a823:   c7 85 b4 fe ff ff 04 35 37 55   	mov dword ptr [ebp - 0x14c], 0x55373504
0x804a82d:   c7 85 b0 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x150], 0xffffffff
0x804a837:   c7 85 ac fe ff ff 14 b9 fb 35   	mov dword ptr [ebp - 0x154], 0x35fbb914
0x804a841:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804a845:   66 3b 85 40 ff ff ff            	cmp ax, word ptr [ebp - 0xc0]
0x804a84c:   0f 92 c0                        	setb al
0x804a84f:   0f b6 c0                        	movzx eax, al
0x804a852:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a855:   83 6d 94 01                     	sub dword ptr [ebp - 0x6c], 1
0x804a859:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x804a85d:   b9 00 00 00 00                  	mov ecx, 0
0x804a862:   ba 00 00 00 00                  	mov edx, 0
0x804a867:   f7 f1                           	div ecx
0x804a869:   89 d0                           	mov eax, edx
0x804a86b:   89 c1                           	mov ecx, eax
0x804a86d:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804a871:   89 c2                           	mov edx, eax
0x804a873:   0f b6 c1                        	movzx eax, cl
0x804a876:   f6 f2                           	div dl
0x804a878:   0f b6 c0                        	movzx eax, al
0x804a87b:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a87e:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a881:   39 85 54 ff ff ff               	cmp dword ptr [ebp - 0xac], eax
0x804a887:   0f 92 c0                        	setb al
0x804a88a:   0f b6 c0                        	movzx eax, al
0x804a88d:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x804a891:   66 83 bd ba fe ff ff 00         	cmp word ptr [ebp - 0x146], 0
0x804a899:   74 65                           	je 0x804a900 <func_1+0x10c5>
0x804a89b:   c7 85 a4 fe ff ff 2f 5d 4f 1d   	mov dword ptr [ebp - 0x15c], 0x1d4f5d2f
0x804a8a5:   0f b6 45 bb                     	movzx eax, byte ptr [ebp - 0x45]
0x804a8a9:   31 45 e0                        	xor dword ptr [ebp - 0x20], eax
0x804a8ac:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a8af:   0f bf d0                        	movsx edx, ax
0x804a8b2:   0f b6 85 5d ff ff ff            	movzx eax, byte ptr [ebp - 0xa3]
0x804a8b9:   66 33 45 ce                     	xor ax, word ptr [ebp - 0x32]
0x804a8bd:   98                              	cwde 
0x804a8be:   89 c1                           	mov ecx, eax
0x804a8c0:   d3 fa                           	sar edx, cl
0x804a8c2:   89 d0                           	mov eax, edx
0x804a8c4:   83 f0 e2                        	xor eax, 0xffffffe2
0x804a8c7:   89 c2                           	mov edx, eax
0x804a8c9:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a8cf:   09 d0                           	or eax, edx
0x804a8d1:   d0 f8                           	sar al, 1
0x804a8d3:   0f be c0                        	movsx eax, al
0x804a8d6:   0f b7 95 ba fe ff ff            	movzx edx, word ptr [ebp - 0x146]
0x804a8dd:   0f bf f2                        	movsx esi, dx
0x804a8e0:   99                              	cdq 
0x804a8e1:   f7 fe                           	idiv esi
0x804a8e3:   89 c2                           	mov edx, eax
0x804a8e5:   0f b7 85 ba fe ff ff            	movzx eax, word ptr [ebp - 0x146]
0x804a8ec:   39 c2                           	cmp edx, eax
0x804a8ee:   83 bd a4 fe ff ff 00            	cmp dword ptr [ebp - 0x15c], 0
0x804a8f5:   0f 94 c0                        	sete al
0x804a8f8:   0f b6 c0                        	movzx eax, al
0x804a8fb:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a8fe:   eb 23                           	jmp 0x804a923 <func_1+0x10e8>
0x804a900:   c7 85 a8 fe ff ff 0a 73 d7 58   	mov dword ptr [ebp - 0x158], 0x58d7730a
0x804a90a:   0f b7 85 ba fe ff ff            	movzx eax, word ptr [ebp - 0x146]
0x804a911:   39 85 a8 fe ff ff               	cmp dword ptr [ebp - 0x158], eax
0x804a917:   0f 97 c0                        	seta al
0x804a91a:   0f b6 c0                        	movzx eax, al
0x804a91d:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x804a923:   0f b7 95 ba fe ff ff            	movzx edx, word ptr [ebp - 0x146]
0x804a92a:   66 83 7d ce 00                  	cmp word ptr [ebp - 0x32], 0
0x804a92f:   74 2f                           	je 0x804a960 <func_1+0x1125>
0x804a931:   66 83 bd ba fe ff ff 00         	cmp word ptr [ebp - 0x146], 0
0x804a939:   0f 95 c0                        	setne al
0x804a93c:   0f b6 c0                        	movzx eax, al
0x804a93f:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x804a942:   72 07                           	jb 0x804a94b <func_1+0x1110>
0x804a944:   b8 20 00 00 00                  	mov eax, 0x20
0x804a949:   eb 05                           	jmp 0x804a950 <func_1+0x1115>
0x804a94b:   b8 00 00 00 00                  	mov eax, 0
0x804a950:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a953:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x804a957:   74 07                           	je 0x804a960 <func_1+0x1125>
0x804a959:   b8 01 00 00 00                  	mov eax, 1
0x804a95e:   eb 05                           	jmp 0x804a965 <func_1+0x112a>
0x804a960:   b8 00 00 00 00                  	mov eax, 0
0x804a965:   3b 85 70 ff ff ff               	cmp eax, dword ptr [ebp - 0x90]
0x804a96b:   0f 9d c0                        	setge al
0x804a96e:   0f b6 d8                        	movzx ebx, al
0x804a971:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a977:   0f b7 c0                        	movzx eax, ax
0x804a97a:   89 c1                           	mov ecx, eax
0x804a97c:   d3 fb                           	sar ebx, cl
0x804a97e:   89 d8                           	mov eax, ebx
0x804a980:   39 c2                           	cmp edx, eax
0x804a982:   0f 84 c8 00 00 00               	je 0x804aa50 <func_1+0x1215>
0x804a988:   c7 85 98 fe ff ff f9 4d 70 f5   	mov dword ptr [ebp - 0x168], 0xf5704df9
0x804a992:   c6 85 97 fe ff ff a2            	mov byte ptr [ebp - 0x169], 0xa2
0x804a999:   c7 85 90 fe ff ff 8c 9c e2 6c   	mov dword ptr [ebp - 0x170], 0x6ce29c8c
0x804a9a3:   c6 45 a9 00                     	mov byte ptr [ebp - 0x57], 0
0x804a9a7:   b8 01 00 00 00                  	mov eax, 1
0x804a9ac:   21 45 e8                        	and dword ptr [ebp - 0x18], eax
0x804a9af:   80 7d bb 00                     	cmp byte ptr [ebp - 0x45], 0
0x804a9b3:   74 7c                           	je 0x804aa31 <func_1+0x11f6>
0x804a9b5:   8b 85 98 fe ff ff               	mov eax, dword ptr [ebp - 0x168]
0x804a9bb:   23 45 94                        	and eax, dword ptr [ebp - 0x6c]
0x804a9be:   85 c0                           	test eax, eax
0x804a9c0:   0f 95 c0                        	setne al
0x804a9c3:   0f b6 d0                        	movzx edx, al
0x804a9c6:   0f be 85 97 fe ff ff            	movsx eax, byte ptr [ebp - 0x169]
0x804a9cd:   39 c2                           	cmp edx, eax
0x804a9cf:   0f 9e c0                        	setle al
0x804a9d2:   0f b6 c0                        	movzx eax, al
0x804a9d5:   8b 55 9c                        	mov edx, dword ptr [ebp - 0x64]
0x804a9d8:   0f be f2                        	movsx esi, dl
0x804a9db:   99                              	cdq 
0x804a9dc:   f7 fe                           	idiv esi
0x804a9de:   89 c2                           	mov edx, eax
0x804a9e0:   0f b7 85 4a ff ff ff            	movzx eax, word ptr [ebp - 0xb6]
0x804a9e7:   39 c2                           	cmp edx, eax
0x804a9e9:   0f 95 c0                        	setne al
0x804a9ec:   0f b6 d0                        	movzx edx, al
0x804a9ef:   0f b7 85 40 ff ff ff            	movzx eax, word ptr [ebp - 0xc0]
0x804a9f6:   39 c2                           	cmp edx, eax
0x804a9f8:   0f 95 c0                        	setne al
0x804a9fb:   0f b6 c0                        	movzx eax, al
0x804a9fe:   89 85 90 fe ff ff               	mov dword ptr [ebp - 0x170], eax
0x804aa04:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804aa0a:   0f b7 d0                        	movzx edx, ax
0x804aa0d:   0f b7 85 40 ff ff ff            	movzx eax, word ptr [ebp - 0xc0]
0x804aa14:   01 c2                           	add edx, eax
0x804aa16:   0f be 85 66 ff ff ff            	movsx eax, byte ptr [ebp - 0x9a]
0x804aa1d:   39 c2                           	cmp edx, eax
0x804aa1f:   75 09                           	jne 0x804aa2a <func_1+0x11ef>
0x804aa21:   83 bd 60 ff ff ff 00            	cmp dword ptr [ebp - 0xa0], 0
0x804aa28:   74 07                           	je 0x804aa31 <func_1+0x11f6>
0x804aa2a:   be 01 00 00 00                  	mov esi, 1
0x804aa2f:   eb 05                           	jmp 0x804aa36 <func_1+0x11fb>
0x804aa31:   be 00 00 00 00                  	mov esi, 0
0x804aa36:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x804aa3c:   99                              	cdq 
0x804aa3d:   f7 fe                           	idiv esi
0x804aa3f:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x804aa45:   0f 9e c0                        	setle al
0x804aa48:   0f b6 c0                        	movzx eax, al
0x804aa4b:   21 45 d4                        	and dword ptr [ebp - 0x2c], eax
0x804aa4e:   eb 51                           	jmp 0x804aaa1 <func_1+0x1266>
0x804aa50:   c6 85 a3 fe ff ff 08            	mov byte ptr [ebp - 0x15d], 8
0x804aa57:   c7 85 9c fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x164], 0
0x804aa61:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x804aa68:   c6 85 a3 fe ff ff 00            	mov byte ptr [ebp - 0x15d], 0
0x804aa6f:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804aa73:   66 2d d4 66                     	sub ax, 0x66d4
0x804aa77:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x804aa7b:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804aa7f:   66 25 78 2b                     	and ax, 0x2b78
0x804aa83:   66 85 c0                        	test ax, ax
0x804aa86:   74 08                           	je 0x804aa90 <func_1+0x1255>
0x804aa88:   66 83 bd 4a ff ff ff 00         	cmp word ptr [ebp - 0xb6], 0
0x804aa90:   8b 85 9c fe ff ff               	mov eax, dword ptr [ebp - 0x164]
0x804aa96:   f7 d0                           	not eax
0x804aa98:   0f b6 c0                        	movzx eax, al
0x804aa9b:   c1 e0 05                        	shl eax, 5
0x804aa9e:   31 45 f0                        	xor dword ptr [ebp - 0x10], eax
0x804aaa1:   83 6d 90 01                     	sub dword ptr [ebp - 0x70], 1
0x804aaa5:   80 bd 67 ff ff ff 00            	cmp byte ptr [ebp - 0x99], 0
0x804aaac:   74 05                           	je 0x804aab3 <func_1+0x1278>
0x804aaae:   e9 d3 ee ff ff                  	jmp 0x8049986 <func_1+0x14b>
0x804aab3:   0f b6 45 a9                     	movzx eax, byte ptr [ebp - 0x57]
0x804aab7:   0f b6 95 5d ff ff ff            	movzx edx, byte ptr [ebp - 0xa3]
0x804aabe:   0f b7 8d 5e ff ff ff            	movzx ecx, word ptr [ebp - 0xa2]
0x804aac5:   0f b7 75 aa                     	movzx esi, word ptr [ebp - 0x56]
0x804aac9:   0f b7 7d b2                     	movzx edi, word ptr [ebp - 0x4e]
0x804aacd:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804aad3:   0f b6 5d bb                     	movzx ebx, byte ptr [ebp - 0x45]
0x804aad7:   89 9d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ebx
0x804aadd:   0f be bd 66 ff ff ff            	movsx edi, byte ptr [ebp - 0x9a]
0x804aae4:   89 bd 78 fe ff ff               	mov dword ptr [ebp - 0x188], edi
0x804aaea:   0f b6 9d 67 ff ff ff            	movzx ebx, byte ptr [ebp - 0x99]
0x804aaf1:   89 9d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ebx
0x804aaf7:   0f b7 7d c0                     	movzx edi, word ptr [ebp - 0x40]
0x804aafb:   89 bd 70 fe ff ff               	mov dword ptr [ebp - 0x190], edi
0x804ab01:   0f bf 5d c2                     	movsx ebx, word ptr [ebp - 0x3e]
0x804ab05:   89 9d 6c fe ff ff               	mov dword ptr [ebp - 0x194], ebx
0x804ab0b:   0f b7 7d c4                     	movzx edi, word ptr [ebp - 0x3c]
0x804ab0f:   89 bd 68 fe ff ff               	mov dword ptr [ebp - 0x198], edi
0x804ab15:   0f b6 5d e7                     	movzx ebx, byte ptr [ebp - 0x19]
0x804ab19:   89 9d 64 fe ff ff               	mov dword ptr [ebp - 0x19c], ebx
0x804ab1f:   0f b6 7d ef                     	movzx edi, byte ptr [ebp - 0x11]
0x804ab23:   89 bd 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], edi
0x804ab29:   0f b7 5d ce                     	movzx ebx, word ptr [ebp - 0x32]
0x804ab2d:   89 9d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ebx
0x804ab33:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x804ab37:   0f b6 5d db                     	movzx ebx, byte ptr [ebp - 0x25]
0x804ab3b:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804ab41:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804ab44:   50                              	push eax
0x804ab45:   52                              	push edx
0x804ab46:   51                              	push ecx
0x804ab47:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804ab4d:   56                              	push esi
0x804ab4e:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804ab51:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804ab57:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804ab5a:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804ab60:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804ab66:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804ab69:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804ab6f:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804ab75:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804ab7b:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804ab81:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804ab84:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804ab87:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804ab8d:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804ab93:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804ab96:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804ab9c:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804aba2:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804aba5:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804abab:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804abae:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804abb1:   57                              	push edi
0x804abb2:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804abb5:   53                              	push ebx
0x804abb6:   e8 6b ea ff ff                  	call 0x8049626 <set_var>
0x804abbb:   83 c4 7c                        	add esp, 0x7c
0x804abbe:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x804abc2:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804abc5:   5b                              	pop ebx
0x804abc6:   5e                              	pop esi
0x804abc7:   5f                              	pop edi
0x804abc8:   5d                              	pop ebp
0x804abc9:   c3                              	ret 
; function: main at 0x804abca -- 0x804b008
0x804abca:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804abce:   83 e4 f0                        	and esp, 0xfffffff0
0x804abd1:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804abd4:   55                              	push ebp
0x804abd5:   89 e5                           	mov ebp, esp
0x804abd7:   53                              	push ebx
0x804abd8:   51                              	push ecx
0x804abd9:   83 ec 10                        	sub esp, 0x10
0x804abdc:   e8 af d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804abe1:   81 c3 1f 34 00 00               	add ebx, 0x341f
0x804abe7:   89 c8                           	mov eax, ecx
0x804abe9:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804abf0:   83 38 02                        	cmp dword ptr [eax], 2
0x804abf3:   75 26                           	jne 0x804ac1b <main+0x51>
0x804abf5:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804abf8:   83 c0 04                        	add eax, 4
0x804abfb:   8b 00                           	mov eax, dword ptr [eax]
0x804abfd:   83 ec 08                        	sub esp, 8
0x804ac00:   8d 93 e8 d0 ff ff               	lea edx, [ebx - 0x2f18]
0x804ac06:   52                              	push edx
0x804ac07:   50                              	push eax
0x804ac08:   e8 f3 d6 ff ff                  	call 0x8048300 <strcmp>
0x804ac0d:   83 c4 10                        	add esp, 0x10
0x804ac10:   85 c0                           	test eax, eax
0x804ac12:   75 07                           	jne 0x804ac1b <main+0x51>
0x804ac14:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804ac1b:   e8 36 d8 ff ff                  	call 0x8048456 <platform_main_begin>
0x804ac20:   e8 46 e8 ff ff                  	call 0x804946b <crc32_gentab>
0x804ac25:   e8 11 ec ff ff                  	call 0x804983b <func_1>
0x804ac2a:   0f b6 83 a4 04 00 00            	movzx eax, byte ptr [ebx + 0x4a4]
0x804ac31:   0f b6 c0                        	movzx eax, al
0x804ac34:   83 ec 04                        	sub esp, 4
0x804ac37:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac3a:   8d 93 ea d0 ff ff               	lea edx, [ebx - 0x2f16]
0x804ac40:   52                              	push edx
0x804ac41:   50                              	push eax
0x804ac42:   e8 30 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac47:   83 c4 10                        	add esp, 0x10
0x804ac4a:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804ac50:   83 ec 04                        	sub esp, 4
0x804ac53:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac56:   8d 93 ef d0 ff ff               	lea edx, [ebx - 0x2f11]
0x804ac5c:   52                              	push edx
0x804ac5d:   50                              	push eax
0x804ac5e:   e8 14 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac63:   83 c4 10                        	add esp, 0x10
0x804ac66:   0f b6 83 a5 04 00 00            	movzx eax, byte ptr [ebx + 0x4a5]
0x804ac6d:   0f b6 c0                        	movzx eax, al
0x804ac70:   83 ec 04                        	sub esp, 4
0x804ac73:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac76:   8d 93 f4 d0 ff ff               	lea edx, [ebx - 0x2f0c]
0x804ac7c:   52                              	push edx
0x804ac7d:   50                              	push eax
0x804ac7e:   e8 f4 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac83:   83 c4 10                        	add esp, 0x10
0x804ac86:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804ac8c:   89 c2                           	mov edx, eax
0x804ac8e:   83 ec 04                        	sub esp, 4
0x804ac91:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac94:   8d 83 f9 d0 ff ff               	lea eax, [ebx - 0x2f07]
0x804ac9a:   50                              	push eax
0x804ac9b:   52                              	push edx
0x804ac9c:   e8 d6 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804aca1:   83 c4 10                        	add esp, 0x10
0x804aca4:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804acaa:   83 ec 04                        	sub esp, 4
0x804acad:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acb0:   8d 93 fe d0 ff ff               	lea edx, [ebx - 0x2f02]
0x804acb6:   52                              	push edx
0x804acb7:   50                              	push eax
0x804acb8:   e8 ba e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acbd:   83 c4 10                        	add esp, 0x10
0x804acc0:   0f b7 83 30 00 00 00            	movzx eax, word ptr [ebx + 0x30]
0x804acc7:   0f b7 c0                        	movzx eax, ax
0x804acca:   83 ec 04                        	sub esp, 4
0x804accd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acd0:   8d 93 03 d1 ff ff               	lea edx, [ebx - 0x2efd]
0x804acd6:   52                              	push edx
0x804acd7:   50                              	push eax
0x804acd8:   e8 9a e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acdd:   83 c4 10                        	add esp, 0x10
0x804ace0:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804ace6:   89 c2                           	mov edx, eax
0x804ace8:   83 ec 04                        	sub esp, 4
0x804aceb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acee:   8d 83 08 d1 ff ff               	lea eax, [ebx - 0x2ef8]
0x804acf4:   50                              	push eax
0x804acf5:   52                              	push edx
0x804acf6:   e8 7c e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acfb:   83 c4 10                        	add esp, 0x10
0x804acfe:   0f b6 83 38 00 00 00            	movzx eax, byte ptr [ebx + 0x38]
0x804ad05:   0f b6 c0                        	movzx eax, al
0x804ad08:   83 ec 04                        	sub esp, 4
0x804ad0b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad0e:   8d 93 0d d1 ff ff               	lea edx, [ebx - 0x2ef3]
0x804ad14:   52                              	push edx
0x804ad15:   50                              	push eax
0x804ad16:   e8 5c e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad1b:   83 c4 10                        	add esp, 0x10
0x804ad1e:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804ad24:   89 c2                           	mov edx, eax
0x804ad26:   83 ec 04                        	sub esp, 4
0x804ad29:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad2c:   8d 83 12 d1 ff ff               	lea eax, [ebx - 0x2eee]
0x804ad32:   50                              	push eax
0x804ad33:   52                              	push edx
0x804ad34:   e8 3e e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad39:   83 c4 10                        	add esp, 0x10
0x804ad3c:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804ad42:   89 c2                           	mov edx, eax
0x804ad44:   83 ec 04                        	sub esp, 4
0x804ad47:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad4a:   8d 83 17 d1 ff ff               	lea eax, [ebx - 0x2ee9]
0x804ad50:   50                              	push eax
0x804ad51:   52                              	push edx
0x804ad52:   e8 20 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad57:   83 c4 10                        	add esp, 0x10
0x804ad5a:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804ad60:   89 c2                           	mov edx, eax
0x804ad62:   83 ec 04                        	sub esp, 4
0x804ad65:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad68:   8d 83 1d d1 ff ff               	lea eax, [ebx - 0x2ee3]
0x804ad6e:   50                              	push eax
0x804ad6f:   52                              	push edx
0x804ad70:   e8 02 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad75:   83 c4 10                        	add esp, 0x10
0x804ad78:   0f b6 83 48 00 00 00            	movzx eax, byte ptr [ebx + 0x48]
0x804ad7f:   0f b6 c0                        	movzx eax, al
0x804ad82:   83 ec 04                        	sub esp, 4
0x804ad85:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad88:   8d 93 23 d1 ff ff               	lea edx, [ebx - 0x2edd]
0x804ad8e:   52                              	push edx
0x804ad8f:   50                              	push eax
0x804ad90:   e8 e2 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad95:   83 c4 10                        	add esp, 0x10
0x804ad98:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804ad9e:   89 c2                           	mov edx, eax
0x804ada0:   83 ec 04                        	sub esp, 4
0x804ada3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ada6:   8d 83 29 d1 ff ff               	lea eax, [ebx - 0x2ed7]
0x804adac:   50                              	push eax
0x804adad:   52                              	push edx
0x804adae:   e8 c4 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adb3:   83 c4 10                        	add esp, 0x10
0x804adb6:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804adbc:   89 c2                           	mov edx, eax
0x804adbe:   83 ec 04                        	sub esp, 4
0x804adc1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adc4:   8d 83 2f d1 ff ff               	lea eax, [ebx - 0x2ed1]
0x804adca:   50                              	push eax
0x804adcb:   52                              	push edx
0x804adcc:   e8 a6 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804add1:   83 c4 10                        	add esp, 0x10
0x804add4:   0f b7 83 50 00 00 00            	movzx eax, word ptr [ebx + 0x50]
0x804addb:   0f b7 c0                        	movzx eax, ax
0x804adde:   83 ec 04                        	sub esp, 4
0x804ade1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ade4:   8d 93 35 d1 ff ff               	lea edx, [ebx - 0x2ecb]
0x804adea:   52                              	push edx
0x804adeb:   50                              	push eax
0x804adec:   e8 86 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adf1:   83 c4 10                        	add esp, 0x10
0x804adf4:   0f b7 83 ac 04 00 00            	movzx eax, word ptr [ebx + 0x4ac]
0x804adfb:   98                              	cwde 
0x804adfc:   83 ec 04                        	sub esp, 4
0x804adff:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae02:   8d 93 3b d1 ff ff               	lea edx, [ebx - 0x2ec5]
0x804ae08:   52                              	push edx
0x804ae09:   50                              	push eax
0x804ae0a:   e8 68 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae0f:   83 c4 10                        	add esp, 0x10
0x804ae12:   0f b7 83 52 00 00 00            	movzx eax, word ptr [ebx + 0x52]
0x804ae19:   0f b7 c0                        	movzx eax, ax
0x804ae1c:   83 ec 04                        	sub esp, 4
0x804ae1f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae22:   8d 93 41 d1 ff ff               	lea edx, [ebx - 0x2ebf]
0x804ae28:   52                              	push edx
0x804ae29:   50                              	push eax
0x804ae2a:   e8 48 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae2f:   83 c4 10                        	add esp, 0x10
0x804ae32:   0f b6 83 54 00 00 00            	movzx eax, byte ptr [ebx + 0x54]
0x804ae39:   0f b6 c0                        	movzx eax, al
0x804ae3c:   83 ec 04                        	sub esp, 4
0x804ae3f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae42:   8d 93 47 d1 ff ff               	lea edx, [ebx - 0x2eb9]
0x804ae48:   52                              	push edx
0x804ae49:   50                              	push eax
0x804ae4a:   e8 28 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae4f:   83 c4 10                        	add esp, 0x10
0x804ae52:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804ae58:   89 c2                           	mov edx, eax
0x804ae5a:   83 ec 04                        	sub esp, 4
0x804ae5d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae60:   8d 83 4d d1 ff ff               	lea eax, [ebx - 0x2eb3]
0x804ae66:   50                              	push eax
0x804ae67:   52                              	push edx
0x804ae68:   e8 0a e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae6d:   83 c4 10                        	add esp, 0x10
0x804ae70:   0f b6 83 5c 00 00 00            	movzx eax, byte ptr [ebx + 0x5c]
0x804ae77:   0f be c0                        	movsx eax, al
0x804ae7a:   83 ec 04                        	sub esp, 4
0x804ae7d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae80:   8d 93 53 d1 ff ff               	lea edx, [ebx - 0x2ead]
0x804ae86:   52                              	push edx
0x804ae87:   50                              	push eax
0x804ae88:   e8 ea e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae8d:   83 c4 10                        	add esp, 0x10
0x804ae90:   0f b6 83 5d 00 00 00            	movzx eax, byte ptr [ebx + 0x5d]
0x804ae97:   0f b6 c0                        	movzx eax, al
0x804ae9a:   83 ec 04                        	sub esp, 4
0x804ae9d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aea0:   8d 93 59 d1 ff ff               	lea edx, [ebx - 0x2ea7]
0x804aea6:   52                              	push edx
0x804aea7:   50                              	push eax
0x804aea8:   e8 ca e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aead:   83 c4 10                        	add esp, 0x10
0x804aeb0:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804aeb6:   89 c2                           	mov edx, eax
0x804aeb8:   83 ec 04                        	sub esp, 4
0x804aebb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aebe:   8d 83 5f d1 ff ff               	lea eax, [ebx - 0x2ea1]
0x804aec4:   50                              	push eax
0x804aec5:   52                              	push edx
0x804aec6:   e8 ac e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aecb:   83 c4 10                        	add esp, 0x10
0x804aece:   0f b7 83 64 00 00 00            	movzx eax, word ptr [ebx + 0x64]
0x804aed5:   0f b7 c0                        	movzx eax, ax
0x804aed8:   83 ec 04                        	sub esp, 4
0x804aedb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aede:   8d 93 65 d1 ff ff               	lea edx, [ebx - 0x2e9b]
0x804aee4:   52                              	push edx
0x804aee5:   50                              	push eax
0x804aee6:   e8 8c e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aeeb:   83 c4 10                        	add esp, 0x10
0x804aeee:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804aef4:   83 ec 04                        	sub esp, 4
0x804aef7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aefa:   8d 93 6b d1 ff ff               	lea edx, [ebx - 0x2e95]
0x804af00:   52                              	push edx
0x804af01:   50                              	push eax
0x804af02:   e8 70 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af07:   83 c4 10                        	add esp, 0x10
0x804af0a:   0f b7 83 6c 00 00 00            	movzx eax, word ptr [ebx + 0x6c]
0x804af11:   0f b7 c0                        	movzx eax, ax
0x804af14:   83 ec 04                        	sub esp, 4
0x804af17:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af1a:   8d 93 71 d1 ff ff               	lea edx, [ebx - 0x2e8f]
0x804af20:   52                              	push edx
0x804af21:   50                              	push eax
0x804af22:   e8 50 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af27:   83 c4 10                        	add esp, 0x10
0x804af2a:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804af30:   89 c2                           	mov edx, eax
0x804af32:   83 ec 04                        	sub esp, 4
0x804af35:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af38:   8d 83 77 d1 ff ff               	lea eax, [ebx - 0x2e89]
0x804af3e:   50                              	push eax
0x804af3f:   52                              	push edx
0x804af40:   e8 32 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af45:   83 c4 10                        	add esp, 0x10
0x804af48:   0f b7 83 74 00 00 00            	movzx eax, word ptr [ebx + 0x74]
0x804af4f:   0f b7 c0                        	movzx eax, ax
0x804af52:   83 ec 04                        	sub esp, 4
0x804af55:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af58:   8d 93 7d d1 ff ff               	lea edx, [ebx - 0x2e83]
0x804af5e:   52                              	push edx
0x804af5f:   50                              	push eax
0x804af60:   e8 12 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af65:   83 c4 10                        	add esp, 0x10
0x804af68:   0f b6 83 76 00 00 00            	movzx eax, byte ptr [ebx + 0x76]
0x804af6f:   0f b6 c0                        	movzx eax, al
0x804af72:   83 ec 04                        	sub esp, 4
0x804af75:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af78:   8d 93 83 d1 ff ff               	lea edx, [ebx - 0x2e7d]
0x804af7e:   52                              	push edx
0x804af7f:   50                              	push eax
0x804af80:   e8 f2 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af85:   83 c4 10                        	add esp, 0x10
0x804af88:   0f b6 83 77 00 00 00            	movzx eax, byte ptr [ebx + 0x77]
0x804af8f:   0f b6 c0                        	movzx eax, al
0x804af92:   83 ec 04                        	sub esp, 4
0x804af95:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af98:   8d 93 89 d1 ff ff               	lea edx, [ebx - 0x2e77]
0x804af9e:   52                              	push edx
0x804af9f:   50                              	push eax
0x804afa0:   e8 d2 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afa5:   83 c4 10                        	add esp, 0x10
0x804afa8:   8b 83 78 00 00 00               	mov eax, dword ptr [ebx + 0x78]
0x804afae:   83 ec 04                        	sub esp, 4
0x804afb1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afb4:   8d 93 8f d1 ff ff               	lea edx, [ebx - 0x2e71]
0x804afba:   52                              	push edx
0x804afbb:   50                              	push eax
0x804afbc:   e8 b6 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afc1:   83 c4 10                        	add esp, 0x10
0x804afc4:   8b 83 7c 00 00 00               	mov eax, dword ptr [ebx + 0x7c]
0x804afca:   89 c2                           	mov edx, eax
0x804afcc:   83 ec 04                        	sub esp, 4
0x804afcf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afd2:   8d 83 95 d1 ff ff               	lea eax, [ebx - 0x2e6b]
0x804afd8:   50                              	push eax
0x804afd9:   52                              	push edx
0x804afda:   e8 98 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afdf:   83 c4 10                        	add esp, 0x10
0x804afe2:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804afe8:   f7 d0                           	not eax
0x804afea:   83 ec 08                        	sub esp, 8
0x804afed:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aff0:   50                              	push eax
0x804aff1:   e8 70 d4 ff ff                  	call 0x8048466 <platform_main_end>
0x804aff6:   83 c4 10                        	add esp, 0x10
0x804aff9:   b8 00 00 00 00                  	mov eax, 0
0x804affe:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b001:   59                              	pop ecx
0x804b002:   5b                              	pop ebx
0x804b003:   5d                              	pop ebp
0x804b004:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b007:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b008 -- 0x804b00c
0x804b008:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b00b:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b00c -- 0x804b010
0x804b00c:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b00f:   c3                              	ret 
; function: __libc_csu_init at 0x804b010 -- 0x804b06d
0x804b010:   55                              	push ebp
0x804b011:   57                              	push edi
0x804b012:   56                              	push esi
0x804b013:   53                              	push ebx
0x804b014:   e8 77 d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b019:   81 c3 e7 2f 00 00               	add ebx, 0x2fe7
0x804b01f:   83 ec 0c                        	sub esp, 0xc
0x804b022:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b026:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b02c:   e8 9b d2 ff ff                  	call 0x80482cc <_init>
0x804b031:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b037:   29 c6                           	sub esi, eax
0x804b039:   c1 fe 02                        	sar esi, 2
0x804b03c:   85 f6                           	test esi, esi
0x804b03e:   74 25                           	je 0x804b065 <__libc_csu_init+0x55>
0x804b040:   31 ff                           	xor edi, edi
0x804b042:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b048:   83 ec 04                        	sub esp, 4
0x804b04b:   55                              	push ebp
0x804b04c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b050:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b054:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b05b:   83 c7 01                        	add edi, 1
0x804b05e:   83 c4 10                        	add esp, 0x10
0x804b061:   39 fe                           	cmp esi, edi
0x804b063:   75 e3                           	jne 0x804b048 <__libc_csu_init+0x38>
0x804b065:   83 c4 0c                        	add esp, 0xc
0x804b068:   5b                              	pop ebx
0x804b069:   5e                              	pop esi
0x804b06a:   5f                              	pop edi
0x804b06b:   5d                              	pop ebp
0x804b06c:   c3                              	ret 
; data inside code section at 0x804b06d -- 0x804b070
0x804b06d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b070 -- 0x804b072
0x804b070:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b074 -- 0x804b088
0x804b074:   53                              	push ebx
0x804b075:   83 ec 08                        	sub esp, 8
0x804b078:   e8 13 d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b07d:   81 c3 83 2f 00 00               	add ebx, 0x2f83
0x804b083:   83 c4 08                        	add esp, 8
0x804b086:   5b                              	pop ebx
0x804b087:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 8c b0 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b088:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b098:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b0a8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b0b8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b0c8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b0d8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b0e8:   31 00 67 5f 31 32 00 67  5f 32 31 00 67 5f 33 31   |1.g_12.g_21.g_31|
0x804b0f8:   00 67 5f 33 32 00 67 5f  33 35 00 67 5f 36 30 00   |.g_32.g_35.g_60.|
0x804b108:   67 5f 36 33 00 67 5f 37  33 00 67 5f 38 36 00 67   |g_63.g_73.g_86.g|
0x804b118:   5f 31 30 38 00 67 5f 31  30 39 00 67 5f 31 31 30   |_108.g_109.g_110|
0x804b128:   00 67 5f 31 35 32 00 67  5f 31 36 38 00 67 5f 31   |.g_152.g_168.g_1|
0x804b138:   37 33 00 67 5f 31 39 35  00 67 5f 31 39 38 00 67   |73.g_195.g_198.g|
0x804b148:   5f 32 35 33 00 67 5f 32  37 32 00 67 5f 32 37 33   |_253.g_272.g_273|
0x804b158:   00 67 5f 32 37 34 00 67  5f 32 38 35 00 67 5f 32   |.g_274.g_285.g_2|
0x804b168:   38 39 00 67 5f 33 31 34  00 67 5f 33 32 36 00 67   |89.g_314.g_326.g|
0x804b178:   5f 33 35 32 00 67 5f 33  35 33 00 67 5f 33 38 31   |_352.g_353.g_381|
0x804b188:   00 67 5f 33 39 34 00 67  5f 34 31 35 00 67 5f 34   |.g_394.g_415.g_4|
0x804b198:   34 37 00 00 00 00 00 3f  ff ff ff 7e 00 00 80 0d   |47.....?...~....|
0x804b1a8:   00 00 80 31 ff ff 7f 3f  00 00 00 27 00 00 80 71   |...1...?...'...q|
0x804b1b8:   ff ff ff 34 00 00 00 00  00 00 00 00 00 00 e0 3f   |...4...........?|
0x804b1c8:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804b1d8:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804b1e8:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804b1f8:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804b208:   01                                                 |.               |
; section: .eh_frame_hdr
0x804b208:   01 1b 03 3b b8 02 00 00  56 00 00 00 e8 d0 ff ff   |...;....V.......|
0x804b218:   e8 02 00 00 28 d1 ff ff  0c 03 00 00 78 d1 ff ff   |....(.......x...|
0x804b228:   d4 02 00 00 4e d2 ff ff  20 03 00 00 5e d2 ff ff   |....N... ...^...|
0x804b238:   40 03 00 00 8c d2 ff ff  64 03 00 00 aa d2 ff ff   |@.......d.......|
0x804b248:   84 03 00 00 d2 d2 ff ff  a4 03 00 00 fc d2 ff ff   |................|
0x804b258:   c4 03 00 00 25 d3 ff ff  e4 03 00 00 68 d3 ff ff   |....%.......h...|
0x804b268:   04 04 00 00 a9 d3 ff ff  24 04 00 00 01 d4 ff ff   |........$.......|
0x804b278:   48 04 00 00 53 d4 ff ff  6c 04 00 00 90 d4 ff ff   |H...S...l.......|
0x804b288:   8c 04 00 00 c7 d4 ff ff  ac 04 00 00 e6 d4 ff ff   |................|
0x804b298:   cc 04 00 00 10 d5 ff ff  ec 04 00 00 3c d5 ff ff   |............<...|
0x804b2a8:   0c 05 00 00 67 d5 ff ff  2c 05 00 00 b0 d5 ff ff   |....g...,.......|
0x804b2b8:   4c 05 00 00 f7 d5 ff ff  6c 05 00 00 51 d6 ff ff   |L.......l...Q...|
0x804b2c8:   90 05 00 00 a5 d6 ff ff  b4 05 00 00 e4 d6 ff ff   |................|
0x804b2d8:   d4 05 00 00 1d d7 ff ff  f4 05 00 00 3f d7 ff ff   |............?...|
0x804b2e8:   14 06 00 00 8d d7 ff ff  34 06 00 00 c9 d7 ff ff   |........4.......|
0x804b2f8:   54 06 00 00 52 d8 ff ff  74 06 00 00 84 d8 ff ff   |T...R...t.......|
0x804b308:   94 06 00 00 b4 d8 ff ff  b4 06 00 00 f9 d8 ff ff   |................|
0x804b318:   d4 06 00 00 38 d9 ff ff  f4 06 00 00 6a d9 ff ff   |....8.......j...|
0x804b328:   14 07 00 00 96 d9 ff ff  34 07 00 00 b4 d9 ff ff   |........4.......|
0x804b338:   54 07 00 00 dc d9 ff ff  74 07 00 00 01 da ff ff   |T.......t.......|
0x804b348:   94 07 00 00 26 da ff ff  b4 07 00 00 5d da ff ff   |....&.......]...|
0x804b358:   d4 07 00 00 91 da ff ff  f4 07 00 00 e3 da ff ff   |................|
0x804b368:   18 08 00 00 2f db ff ff  3c 08 00 00 66 db ff ff   |..../...<...f...|
0x804b378:   5c 08 00 00 97 db ff ff  7c 08 00 00 b6 db ff ff   |\.......|.......|
0x804b388:   9c 08 00 00 e0 db ff ff  bc 08 00 00 08 dc ff ff   |................|
0x804b398:   dc 08 00 00 31 dc ff ff  fc 08 00 00 6d dc ff ff   |....1.......m...|
0x804b3a8:   1c 09 00 00 a7 dc ff ff  3c 09 00 00 fa dc ff ff   |........<.......|
0x804b3b8:   60 09 00 00 47 dd ff ff  84 09 00 00 7f dd ff ff   |`...G...........|
0x804b3c8:   a4 09 00 00 b1 dd ff ff  c4 09 00 00 c5 dd ff ff   |................|
0x804b3d8:   e4 09 00 00 dc dd ff ff  04 0a 00 00 f1 dd ff ff   |................|
0x804b3e8:   24 0a 00 00 07 de ff ff  44 0a 00 00 2e de ff ff   |$.......D.......|
0x804b3f8:   64 0a 00 00 53 de ff ff  84 0a 00 00 92 de ff ff   |d...S...........|
0x804b408:   a4 0a 00 00 cb de ff ff  c4 0a 00 00 f7 de ff ff   |................|
0x804b418:   e4 0a 00 00 1d df ff ff  04 0b 00 00 5f df ff ff   |............_...|
0x804b428:   24 0b 00 00 a1 df ff ff  44 0b 00 00 e3 df ff ff   |$.......D.......|
0x804b438:   64 0b 00 00 58 e0 ff ff  84 0b 00 00 b5 e0 ff ff   |d...X...........|
0x804b448:   a4 0b 00 00 12 e1 ff ff  c4 0b 00 00 6f e1 ff ff   |............o...|
0x804b458:   e4 0b 00 00 ff e1 ff ff  04 0c 00 00 63 e2 ff ff   |............c...|
0x804b468:   24 0c 00 00 d3 e2 ff ff  44 0c 00 00 1a e3 ff ff   |$.......D.......|
0x804b478:   68 0c 00 00 6f e3 ff ff  88 0c 00 00 b6 e3 ff ff   |h...o...........|
0x804b488:   ac 0c 00 00 1e e4 ff ff  d0 0c 00 00 33 e6 ff ff   |............3...|
0x804b498:   00 0d 00 00 c2 f9 ff ff  30 0d 00 00 00 fe ff ff   |........0.......|
0x804b4a8:   68 0d 00 00 04 fe ff ff  7c 0d 00 00 08 fe ff ff   |h.......|.......|
0x804b4b8:   90 0d 00 00 68 fe ff ff  dc 0d 00 00 14            |....h........   |
; section: .eh_frame
0x804b4c4:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b4d4:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b4e4:   9c ce ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b4f4:   30 00 00 00 f8 cd ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b504:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b514:   10 00 00 00 54 00 00 00  14 ce ff ff 08 00 00 00   |....T...........|
0x804b524:   00 00 00 00 1c 00 00 00  68 00 00 00 26 cf ff ff   |........h...&...|
0x804b534:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b544:   04 04 00 00 20 00 00 00  88 00 00 00 16 cf ff ff   |.... ...........|
0x804b554:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b564:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b574:   20 cf ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   | ........A....B.|
0x804b584:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b594:   1e cf ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b5a4:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b5b4:   26 cf ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |&...*....A....B.|
0x804b5c4:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b5d4:   30 cf ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |0...)....A....B.|
0x804b5e4:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b5f4:   39 cf ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |9...C....A....B.|
0x804b604:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b614:   5c cf ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |\...A....A....B.|
0x804b624:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b634:   7d cf ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |}...X....A....B.|
0x804b644:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b654:   90 01 00 00 b1 cf ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b664:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b674:   1c 00 00 00 b4 01 00 00  df cf ff ff 3d 00 00 00   |............=...|
0x804b684:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b694:   1c 00 00 00 d4 01 00 00  fc cf ff ff 37 00 00 00   |............7...|
0x804b6a4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b6b4:   1c 00 00 00 f4 01 00 00  13 d0 ff ff 1f 00 00 00   |................|
0x804b6c4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b6d4:   1c 00 00 00 14 02 00 00  12 d0 ff ff 2a 00 00 00   |............*...|
0x804b6e4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b6f4:   1c 00 00 00 34 02 00 00  1c d0 ff ff 2c 00 00 00   |....4.......,...|
0x804b704:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b714:   1c 00 00 00 54 02 00 00  28 d0 ff ff 2b 00 00 00   |....T...(...+...|
0x804b724:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b734:   1c 00 00 00 74 02 00 00  33 d0 ff ff 49 00 00 00   |....t...3...I...|
0x804b744:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b754:   1c 00 00 00 94 02 00 00  5c d0 ff ff 47 00 00 00   |........\...G...|
0x804b764:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b774:   20 00 00 00 b4 02 00 00  83 d0 ff ff 5a 00 00 00   | ...........Z...|
0x804b784:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b794:   c5 0c 04 04 20 00 00 00  d8 02 00 00 b9 d0 ff ff   |.... ...........|
0x804b7a4:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b7b4:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b7c4:   e9 d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b7d4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b7e4:   08 d1 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b7f4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b804:   21 d1 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |!..."....A....B.|
0x804b814:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b824:   23 d1 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |#...N....A....B.|
0x804b834:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b844:   51 d1 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |Q...<....A....B.|
0x804b854:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b864:   6d d1 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |m........A....B.|
0x804b874:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b884:   d6 d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b894:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b8a4:   e8 d1 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b8b4:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b8c4:   f8 d1 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b8d4:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b8e4:   1d d2 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b8f4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b904:   3c d2 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |<...2....A....B.|
0x804b914:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b924:   4e d2 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |N...,....A....B.|
0x804b934:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b944:   5a d2 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |Z........A....B.|
0x804b954:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b964:   58 d2 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |X...(....A....B.|
0x804b974:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b984:   60 d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |`...%....A....B.|
0x804b994:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b9a4:   65 d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |e...%....A....B.|
0x804b9b4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b9c4:   6a d2 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |j...7....A....B.|
0x804b9d4:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b9e4:   81 d2 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b9f4:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804ba04:   95 d2 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804ba14:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804ba24:   60 05 00 00 c3 d2 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804ba34:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804ba44:   1c 00 00 00 84 05 00 00  eb d2 ff ff 37 00 00 00   |............7...|
0x804ba54:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804ba64:   1c 00 00 00 a4 05 00 00  02 d3 ff ff 31 00 00 00   |............1...|
0x804ba74:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804ba84:   1c 00 00 00 c4 05 00 00  13 d3 ff ff 1f 00 00 00   |................|
0x804ba94:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804baa4:   1c 00 00 00 e4 05 00 00  12 d3 ff ff 2a 00 00 00   |............*...|
0x804bab4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bac4:   1c 00 00 00 04 06 00 00  1c d3 ff ff 28 00 00 00   |............(...|
0x804bad4:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bae4:   1c 00 00 00 24 06 00 00  24 d3 ff ff 29 00 00 00   |....$...$...)...|
0x804baf4:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bb04:   1c 00 00 00 44 06 00 00  2d d3 ff ff 3c 00 00 00   |....D...-...<...|
0x804bb14:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bb24:   1c 00 00 00 64 06 00 00  49 d3 ff ff 3a 00 00 00   |....d...I...:...|
0x804bb34:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bb44:   20 00 00 00 84 06 00 00  63 d3 ff ff 53 00 00 00   | .......c...S...|
0x804bb54:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bb64:   c5 0c 04 04 20 00 00 00  a8 06 00 00 92 d3 ff ff   |.... ...........|
0x804bb74:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bb84:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bb94:   bb d3 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804bba4:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bbb4:   d3 d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bbc4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bbd4:   e5 d3 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bbe4:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bbf4:   d9 d3 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc04:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bc14:   d0 d3 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc24:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bc34:   c5 d3 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc44:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bc54:   bb d3 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804bc64:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bc74:   c2 d3 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bc84:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bc94:   c7 d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804bca4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bcb4:   e6 d3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bcc4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bcd4:   ff d3 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bce4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bcf4:   0b d4 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804bd04:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bd14:   11 d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bd24:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bd34:   33 d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |3...B....A....B.|
0x804bd44:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bd54:   55 d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |U...B....A....B.|
0x804bd64:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bd74:   77 d4 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |w...u....A....B.|
0x804bd84:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bd94:   cc d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bda4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bdb4:   09 d5 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bdc4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bdd4:   46 d5 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |F...]....A....B.|
0x804bde4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bdf4:   83 d5 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804be04:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804be14:   f3 d5 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804be24:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804be34:   37 d6 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |7...p....A....B.|
0x804be44:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804be54:   87 d6 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804be64:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804be74:   b0 09 00 00 aa d6 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804be84:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804be94:   d0 09 00 00 df d6 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804bea4:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804beb4:   20 00 00 00 f4 09 00 00  02 d7 ff ff 68 00 00 00   | ...........h...|
0x804bec4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bed4:   0c 04 04 00 2c 00 00 00  18 0a 00 00 46 d7 ff ff   |....,.......F...|
0x804bee4:   15 02 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804bef4:   86 04 83 05 03 08 02 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bf04:   04 00 00 00 2c 00 00 00  48 0a 00 00 2b d9 ff ff   |....,...H...+...|
0x804bf14:   8f 13 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804bf24:   86 04 83 05 03 7f 13 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bf34:   04 00 00 00 34 00 00 00  78 0a 00 00 8a ec ff ff   |....4...x.......|
0x804bf44:   3e 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |>....D...G...u.D|
0x804bf54:   0f 03 75 78 06 10 03 02  75 7c 03 29 04 c1 0c 01   |..ux....u|.)....|
0x804bf64:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bf74:   b0 0a 00 00 90 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804bf84:   10 00 00 00 c4 0a 00 00  80 f0 ff ff 04 00 00 00   |................|
0x804bf94:   00 00 00 00 48 00 00 00  d8 0a 00 00 70 f0 ff ff   |....H.......p...|
0x804bfa4:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bfb4:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bfc4:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bfd4:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bfe4:   10 00 00 00 24 0b 00 00  84 f0 ff ff 02 00 00 00   |....$...........|
0x804bff4:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 74 b0 04 08  19 00 00 00 0c df 04 08   |....t...........|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff ff ff ff ff   |................|
0x804e028:   cd e0 69 09 f1 ff 7a 36  ee bd 00 00 fd ff ff ff   |..i...z6........|
0x804e038:   0c 00 00 00 c9 5b 76 79  0b c8 25 c7 fc ff ff ff   |.....[vy..%.....|
0x804e048:   87 00 00 00 82 84 4c 81  ff ff e1 01 01 00 00 00   |......L.........|
0x804e058:   8e 4d 50 70 69 01 00 00  61 ad 96 7c 23 a1 00 00   |.MPpi...a..|#...|
0x804e068:   23 a3 d3 21 70 f8 00 00  30 ea 02 07 5b 92 ac f3   |#..!p...0...[...|
0x804e078:   03 00 00 00 a4 d4 52 99  00                        |......R..       |
