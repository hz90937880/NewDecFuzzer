;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 17:01:44
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 80 d6 ff ff               	lea eax, [ebx - 0x2980]
0x804835c:   50                              	push eax
0x804835d:   8d 83 20 d6 ff ff               	lea eax, [ebx - 0x29e0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 80 b2 04 08               	mov eax, 0x804b280
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 80 e0 04 08                  	mov eax, 0x804e080
0x80483a5:   3d 80 e0 04 08                  	cmp eax, 0x804e080
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 80 e0 04 08                  	push 0x804e080
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 80 e0 04 08                  	mov eax, 0x804e080
0x80483e5:   2d 80 e0 04 08                  	sub eax, 0x804e080
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 80 e0 04 08                  	push 0x804e080
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 e0 04 08 00            	cmp byte ptr [0x804e080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 e0 04 08 01            	mov byte ptr [0x804e080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 b2 31 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 9e 31 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 a0 d6 ff ff               	lea edx, [eax - 0x2960]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 71 31 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 53 31 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 2b 31 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 01 31 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 d8 30 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 95 30 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 53 30 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 fb 2f 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 aa 2f 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 6d 2f 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 36 2f 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 17 2f 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 ed 2e 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 c1 2e 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 96 2e 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 4d 2e 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 05 2e 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 ab 2d 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 58 2d 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 19 2d 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 e3 2c 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 c1 2c 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 73 2c 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 37 2c 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 ae 2b 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 7c 2b 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 4c 2b 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 07 2b 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 c8 2a 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 96 2a 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 67 2a 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 49 2a 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 21 2a 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 fc 29 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 d7 29 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 a0 29 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 6b 29 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 19 29 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 ce 28 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 97 28 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 66 28 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 47 28 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 1d 28 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 f5 27 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 cc 27 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 90 27 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 55 27 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 02 27 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 b6 26 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 7e 26 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 4f 26 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 3b 26 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 24 26 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 0f 26 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 f9 25 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 d2 25 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 ad 25 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 6e 25 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 35 25 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 09 25 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 e3 24 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 90 d7 ff ff               	fld dword ptr [eax - 0x2870]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 90 d7 ff ff               	fld dword ptr [eax - 0x2870]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 94 d7 ff ff               	fld dword ptr [eax - 0x286c]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 a1 24 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 90 d7 ff ff               	fld dword ptr [eax - 0x2870]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 90 d7 ff ff               	fld dword ptr [eax - 0x2870]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 94 d7 ff ff               	fld dword ptr [eax - 0x286c]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 5f 24 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 98 d7 ff ff               	fld dword ptr [eax - 0x2868]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 9c d7 ff ff               	fld dword ptr [eax - 0x2864]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 a0 d7 ff ff               	fld dword ptr [eax - 0x2860]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 1d 24 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 a4 d7 ff ff               	fld dword ptr [eax - 0x285c]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 a8 d7 ff ff               	fld dword ptr [eax - 0x2858]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 ac d7 ff ff               	fld dword ptr [eax - 0x2854]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 a5 23 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 b0 d7 ff ff               	fld qword ptr [eax - 0x2850]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 b0 d7 ff ff               	fld qword ptr [eax - 0x2850]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 b8 d7 ff ff               	fld qword ptr [eax - 0x2848]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 48 23 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 b0 d7 ff ff               	fld qword ptr [eax - 0x2850]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 b0 d7 ff ff               	fld qword ptr [eax - 0x2850]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 b8 d7 ff ff               	fld qword ptr [eax - 0x2848]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 eb 22 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 c0 d7 ff ff               	fld qword ptr [eax - 0x2840]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 c8 d7 ff ff               	fld qword ptr [eax - 0x2838]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 d0 d7 ff ff               	fld qword ptr [eax - 0x2830]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 8e 22 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 d8 d7 ff ff               	fld qword ptr [eax - 0x2828]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 e0 d7 ff ff               	fld qword ptr [eax - 0x2820]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 e8 d7 ff ff               	fld qword ptr [eax - 0x2818]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 fe 21 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 f0 d7 ff ff               	fld dword ptr [eax - 0x2810]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 f4 d7 ff ff               	fld dword ptr [eax - 0x280c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 9a 21 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 29 21 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 e6 20 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 b0 d6 ff ff               	lea eax, [ebx - 0x2950]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 d4 d6 ff ff               	lea eax, [ebx - 0x292c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x8049795
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 34                        	sub esp, 0x34
0x804962f:   e8 dc 1f 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x8049634:   05 cc 49 00 00                  	add eax, 0x49cc
0x8049639:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x804963c:   8b 4d 18                        	mov ecx, dword ptr [ebp + 0x18]
0x804963f:   8b 75 28                        	mov esi, dword ptr [ebp + 0x28]
0x8049642:   8b 5d 34                        	mov ebx, dword ptr [ebp + 0x34]
0x8049645:   89 5d cc                        	mov dword ptr [ebp - 0x34], ebx
0x8049648:   8b 7d 3c                        	mov edi, dword ptr [ebp + 0x3c]
0x804964b:   89 7d c8                        	mov dword ptr [ebp - 0x38], edi
0x804964e:   8b 5d 40                        	mov ebx, dword ptr [ebp + 0x40]
0x8049651:   89 5d c4                        	mov dword ptr [ebp - 0x3c], ebx
0x8049654:   8b 7d 50                        	mov edi, dword ptr [ebp + 0x50]
0x8049657:   89 7d c0                        	mov dword ptr [ebp - 0x40], edi
0x804965a:   8b 7d 58                        	mov edi, dword ptr [ebp + 0x58]
0x804965d:   8b 5d 5c                        	mov ebx, dword ptr [ebp + 0x5c]
0x8049660:   88 55 f0                        	mov byte ptr [ebp - 0x10], dl
0x8049663:   89 ca                           	mov edx, ecx
0x8049665:   88 55 ec                        	mov byte ptr [ebp - 0x14], dl
0x8049668:   89 f2                           	mov edx, esi
0x804966a:   66 89 55 e8                     	mov word ptr [ebp - 0x18], dx
0x804966e:   0f b6 55 cc                     	movzx edx, byte ptr [ebp - 0x34]
0x8049672:   88 55 e4                        	mov byte ptr [ebp - 0x1c], dl
0x8049675:   0f b6 55 c8                     	movzx edx, byte ptr [ebp - 0x38]
0x8049679:   88 55 e0                        	mov byte ptr [ebp - 0x20], dl
0x804967c:   0f b6 55 c4                     	movzx edx, byte ptr [ebp - 0x3c]
0x8049680:   88 55 dc                        	mov byte ptr [ebp - 0x24], dl
0x8049683:   0f b6 55 c0                     	movzx edx, byte ptr [ebp - 0x40]
0x8049687:   88 55 d8                        	mov byte ptr [ebp - 0x28], dl
0x804968a:   89 fa                           	mov edx, edi
0x804968c:   88 55 d4                        	mov byte ptr [ebp - 0x2c], dl
0x804968f:   89 da                           	mov edx, ebx
0x8049691:   88 55 d0                        	mov byte ptr [ebp - 0x30], dl
0x8049694:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049697:   89 90 24 00 00 00               	mov dword ptr [eax + 0x24], edx
0x804969d:   0f b6 55 f0                     	movzx edx, byte ptr [ebp - 0x10]
0x80496a1:   88 90 28 00 00 00               	mov byte ptr [eax + 0x28], dl
0x80496a7:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80496aa:   89 90 2c 00 00 00               	mov dword ptr [eax + 0x2c], edx
0x80496b0:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80496b3:   89 90 30 00 00 00               	mov dword ptr [eax + 0x30], edx
0x80496b9:   0f b6 55 ec                     	movzx edx, byte ptr [ebp - 0x14]
0x80496bd:   88 90 34 00 00 00               	mov byte ptr [eax + 0x34], dl
0x80496c3:   8b 55 1c                        	mov edx, dword ptr [ebp + 0x1c]
0x80496c6:   89 90 38 00 00 00               	mov dword ptr [eax + 0x38], edx
0x80496cc:   8b 55 20                        	mov edx, dword ptr [ebp + 0x20]
0x80496cf:   89 90 3c 00 00 00               	mov dword ptr [eax + 0x3c], edx
0x80496d5:   8b 55 24                        	mov edx, dword ptr [ebp + 0x24]
0x80496d8:   89 90 40 00 00 00               	mov dword ptr [eax + 0x40], edx
0x80496de:   0f b7 55 e8                     	movzx edx, word ptr [ebp - 0x18]
0x80496e2:   66 89 90 44 00 00 00            	mov word ptr [eax + 0x44], dx
0x80496e9:   8b 55 2c                        	mov edx, dword ptr [ebp + 0x2c]
0x80496ec:   89 90 48 00 00 00               	mov dword ptr [eax + 0x48], edx
0x80496f2:   8b 55 30                        	mov edx, dword ptr [ebp + 0x30]
0x80496f5:   89 90 4c 00 00 00               	mov dword ptr [eax + 0x4c], edx
0x80496fb:   0f b6 55 e4                     	movzx edx, byte ptr [ebp - 0x1c]
0x80496ff:   88 90 50 00 00 00               	mov byte ptr [eax + 0x50], dl
0x8049705:   8b 55 38                        	mov edx, dword ptr [ebp + 0x38]
0x8049708:   89 90 54 00 00 00               	mov dword ptr [eax + 0x54], edx
0x804970e:   0f b6 55 e0                     	movzx edx, byte ptr [ebp - 0x20]
0x8049712:   88 90 58 00 00 00               	mov byte ptr [eax + 0x58], dl
0x8049718:   0f b6 55 dc                     	movzx edx, byte ptr [ebp - 0x24]
0x804971c:   88 90 59 00 00 00               	mov byte ptr [eax + 0x59], dl
0x8049722:   8b 55 44                        	mov edx, dword ptr [ebp + 0x44]
0x8049725:   89 90 5c 00 00 00               	mov dword ptr [eax + 0x5c], edx
0x804972b:   8b 55 48                        	mov edx, dword ptr [ebp + 0x48]
0x804972e:   89 90 60 00 00 00               	mov dword ptr [eax + 0x60], edx
0x8049734:   8b 55 4c                        	mov edx, dword ptr [ebp + 0x4c]
0x8049737:   89 90 64 00 00 00               	mov dword ptr [eax + 0x64], edx
0x804973d:   0f b6 55 d8                     	movzx edx, byte ptr [ebp - 0x28]
0x8049741:   88 90 68 00 00 00               	mov byte ptr [eax + 0x68], dl
0x8049747:   8b 55 54                        	mov edx, dword ptr [ebp + 0x54]
0x804974a:   89 90 6c 00 00 00               	mov dword ptr [eax + 0x6c], edx
0x8049750:   0f b6 55 d4                     	movzx edx, byte ptr [ebp - 0x2c]
0x8049754:   88 90 70 00 00 00               	mov byte ptr [eax + 0x70], dl
0x804975a:   0f b6 55 d0                     	movzx edx, byte ptr [ebp - 0x30]
0x804975e:   88 90 71 00 00 00               	mov byte ptr [eax + 0x71], dl
0x8049764:   8b 55 60                        	mov edx, dword ptr [ebp + 0x60]
0x8049767:   89 90 74 00 00 00               	mov dword ptr [eax + 0x74], edx
0x804976d:   8b 55 64                        	mov edx, dword ptr [ebp + 0x64]
0x8049770:   89 90 78 00 00 00               	mov dword ptr [eax + 0x78], edx
0x8049776:   8b 55 68                        	mov edx, dword ptr [ebp + 0x68]
0x8049779:   89 90 7c 00 00 00               	mov dword ptr [eax + 0x7c], edx
0x804977f:   8b 55 6c                        	mov edx, dword ptr [ebp + 0x6c]
0x8049782:   89 90 a4 04 00 00               	mov dword ptr [eax + 0x4a4], edx
0x8049788:   b8 00 00 00 00                  	mov eax, 0
0x804978d:   83 c4 34                        	add esp, 0x34
0x8049790:   5b                              	pop ebx
0x8049791:   5e                              	pop esi
0x8049792:   5f                              	pop edi
0x8049793:   5d                              	pop ebp
0x8049794:   c3                              	ret 
; function: func_1 at 0x8049795 -- 0x804b280
0x8049795:   55                              	push ebp
0x8049796:   89 e5                           	mov ebp, esp
0x8049798:   57                              	push edi
0x8049799:   56                              	push esi
0x804979a:   53                              	push ebx
0x804979b:   81 ec cc 01 00 00               	sub esp, 0x1cc
0x80497a1:   e8 6a 1e 00 00                  	call 0x804b610 <__x86.get_pc_thunk.ax>
0x80497a6:   05 5a 48 00 00                  	add eax, 0x485a
0x80497ab:   c7 45 ec 03 00 00 00            	mov dword ptr [ebp - 0x14], 3
0x80497b2:   c6 45 eb f9                     	mov byte ptr [ebp - 0x15], 0xf9
0x80497b6:   c7 45 e4 01 00 00 00            	mov dword ptr [ebp - 0x1c], 1
0x80497bd:   c7 45 e0 01 00 00 00            	mov dword ptr [ebp - 0x20], 1
0x80497c4:   c6 45 df 3b                     	mov byte ptr [ebp - 0x21], 0x3b
0x80497c8:   c7 45 84 d7 e6 7f 44            	mov dword ptr [ebp - 0x7c], 0x447fe6d7
0x80497cf:   c7 45 d8 c0 24 1b 26            	mov dword ptr [ebp - 0x28], 0x261b24c0
0x80497d6:   c7 45 d4 42 b6 44 1b            	mov dword ptr [ebp - 0x2c], 0x1b44b642
0x80497dd:   66 c7 45 d2 fe ff               	mov word ptr [ebp - 0x2e], 0xfffe
0x80497e3:   c7 45 f0 a2 02 ee 1a            	mov dword ptr [ebp - 0x10], 0x1aee02a2
0x80497ea:   c7 45 cc d0 a9 59 ad            	mov dword ptr [ebp - 0x34], 0xad59a9d0
0x80497f1:   c6 45 cb ff                     	mov byte ptr [ebp - 0x35], 0xff
0x80497f5:   c7 45 c4 ff ff ff ff            	mov dword ptr [ebp - 0x3c], 0xffffffff
0x80497fc:   c6 45 c3 01                     	mov byte ptr [ebp - 0x3d], 1
0x8049800:   c6 45 c2 3f                     	mov byte ptr [ebp - 0x3e], 0x3f
0x8049804:   c7 45 80 33 a5 6a cc            	mov dword ptr [ebp - 0x80], 0xcc6aa533
0x804980b:   c7 85 7c ff ff ff eb 92 cc 6a   	mov dword ptr [ebp - 0x84], 0x6acc92eb
0x8049815:   c7 45 bc 27 d8 a4 30            	mov dword ptr [ebp - 0x44], 0x30a4d827
0x804981c:   c6 45 bb df                     	mov byte ptr [ebp - 0x45], 0xdf
0x8049820:   c7 85 78 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x88], 0xffffffff
0x804982a:   c6 45 ba f6                     	mov byte ptr [ebp - 0x46], 0xf6
0x804982e:   c6 45 b9 65                     	mov byte ptr [ebp - 0x47], 0x65
0x8049832:   c7 85 74 ff ff ff 94 a4 29 03   	mov dword ptr [ebp - 0x8c], 0x329a494
0x804983c:   c7 85 70 ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0x90], 5
0x8049846:   c7 85 6c ff ff ff e4 20 87 e7   	mov dword ptr [ebp - 0x94], 0xe78720e4
0x8049850:   c7 45 b4 00 00 00 00            	mov dword ptr [ebp - 0x4c], 0
0x8049857:   c6 85 6b ff ff ff 02            	mov byte ptr [ebp - 0x95], 2
0x804985e:   c7 45 b0 ff ff ff ff            	mov dword ptr [ebp - 0x50], 0xffffffff
0x8049865:   c7 45 ac 9d 60 ff a6            	mov dword ptr [ebp - 0x54], 0xa6ff609d
0x804986c:   c7 45 a8 34 f4 25 1d            	mov dword ptr [ebp - 0x58], 0x1d25f434
0x8049873:   c7 85 64 ff ff ff 92 f3 33 82   	mov dword ptr [ebp - 0x9c], 0x8233f392
0x804987d:   c7 45 a4 ff ff ff ff            	mov dword ptr [ebp - 0x5c], 0xffffffff
0x8049884:   c7 85 60 ff ff ff 40 57 27 17   	mov dword ptr [ebp - 0xa0], 0x17275740
0x804988e:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x8049895:   c7 85 5c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xa4], 0xffffffff
0x804989f:   c7 85 58 ff ff ff d9 50 87 ee   	mov dword ptr [ebp - 0xa8], 0xee8750d9
0x80498a9:   c7 85 54 ff ff ff 69 6c 57 51   	mov dword ptr [ebp - 0xac], 0x51576c69
0x80498b3:   c7 85 50 ff ff ff bc 05 6f ba   	mov dword ptr [ebp - 0xb0], 0xba6f05bc
0x80498bd:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x80498c4:   e9 bc 16 00 00                  	jmp 0x804af85 <func_1+0x17f0>
0x80498c9:   c7 85 4c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xb4], 0
0x80498d3:   c7 85 48 ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xb8], 0xfffffffc
0x80498dd:   c7 85 44 ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xbc], 0xfffffffc
0x80498e7:   c7 85 40 ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xc0], 0xfffffffc
0x80498f1:   66 c7 85 3e ff ff ff 00 00      	mov word ptr [ebp - 0xc2], 0
0x80498fa:   c7 85 38 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xc8], 9
0x8049904:   c6 45 9f 2d                     	mov byte ptr [ebp - 0x61], 0x2d
0x8049908:   c7 85 34 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xcc], 1
0x8049912:   66 c7 85 32 ff ff ff 45 83      	mov word ptr [ebp - 0xce], 0x8345
0x804991b:   c7 85 2c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xd4], 1
0x8049925:   c7 85 28 ff ff ff 9d a3 96 8d   	mov dword ptr [ebp - 0xd8], 0x8d96a39d
0x804992f:   c6 85 27 ff ff ff 4c            	mov byte ptr [ebp - 0xd9], 0x4c
0x8049936:   66 c7 85 24 ff ff ff 00 00      	mov word ptr [ebp - 0xdc], 0
0x804993f:   66 c7 85 22 ff ff ff 01 00      	mov word ptr [ebp - 0xde], 1
0x8049948:   0f be 85 6b ff ff ff            	movsx eax, byte ptr [ebp - 0x95]
0x804994f:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049952:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x8049956:   0f 84 ad 00 00 00               	je 0x8049a09 <func_1+0x274>
0x804995c:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x8049963:   0f 85 28 16 00 00               	jne 0x804af91 <func_1+0x17fc>
0x8049969:   0f be 45 b9                     	movsx eax, byte ptr [ebp - 0x47]
0x804996d:   0f b6 4d ba                     	movzx ecx, byte ptr [ebp - 0x46]
0x8049971:   0f be 75 bb                     	movsx esi, byte ptr [ebp - 0x45]
0x8049975:   89 b5 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], esi
0x804997b:   0f b6 7d c2                     	movzx edi, byte ptr [ebp - 0x3e]
0x804997f:   89 bd 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], edi
0x8049985:   0f b6 5d c3                     	movzx ebx, byte ptr [ebp - 0x3d]
0x8049989:   89 9d 28 fe ff ff               	mov dword ptr [ebp - 0x1d8], ebx
0x804998f:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x8049993:   0f bf 75 d2                     	movsx esi, word ptr [ebp - 0x2e]
0x8049997:   0f be 5d df                     	movsx ebx, byte ptr [ebp - 0x21]
0x804999b:   0f b6 55 eb                     	movzx edx, byte ptr [ebp - 0x15]
0x804999f:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x80499a2:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x80499a8:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x80499ae:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x80499b4:   50                              	push eax
0x80499b5:   51                              	push ecx
0x80499b6:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x80499bc:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x80499c2:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x80499c5:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x80499cb:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x80499ce:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x80499d4:   ff b5 28 fe ff ff               	push dword ptr [ebp - 0x1d8]
0x80499da:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x80499dd:   57                              	push edi
0x80499de:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x80499e1:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x80499e4:   56                              	push esi
0x80499e5:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x80499e8:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x80499eb:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x80499ee:   53                              	push ebx
0x80499ef:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x80499f2:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x80499f5:   52                              	push edx
0x80499f6:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x80499f9:   e8 28 fc ff ff                  	call 0x8049626 <set_var>
0x80499fe:   83 c4 68                        	add esp, 0x68
0x8049a01:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049a04:   e9 6f 18 00 00                  	jmp 0x804b278 <func_1+0x1ae3>
0x8049a09:   66 c7 85 20 ff ff ff ff ff      	mov word ptr [ebp - 0xe0], 0xffff
0x8049a12:   c7 85 1c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xe4], 0xffffffff
0x8049a1c:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x8049a23:   0f 84 8c 00 00 00               	je 0x8049ab5 <func_1+0x320>
0x8049a29:   c7 85 08 ff ff ff 2e 33 7b 08   	mov dword ptr [ebp - 0xf8], 0x87b332e
0x8049a33:   c7 45 b0 e8 ff ff ff            	mov dword ptr [ebp - 0x50], 0xffffffe8
0x8049a3a:   eb 38                           	jmp 0x8049a74 <func_1+0x2df>
0x8049a3c:   c7 85 04 ff ff ff ef 16 4f 46   	mov dword ptr [ebp - 0xfc], 0x464f16ef
0x8049a46:   c7 85 00 ff ff ff 85 d5 49 5b   	mov dword ptr [ebp - 0x100], 0x5b49d585
0x8049a50:   80 6d eb 01                     	sub byte ptr [ebp - 0x15], 1
0x8049a54:   c7 85 00 ff ff ff 92 57 f2 ac   	mov dword ptr [ebp - 0x100], 0xacf25792
0x8049a5e:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049a61:   89 85 04 ff ff ff               	mov dword ptr [ebp - 0xfc], eax
0x8049a67:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x8049a6d:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049a70:   83 45 b0 04                     	add dword ptr [ebp - 0x50], 4
0x8049a74:   83 7d b0 f9                     	cmp dword ptr [ebp - 0x50], -7
0x8049a78:   7d c2                           	jge 0x8049a3c <func_1+0x2a7>
0x8049a7a:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049a7d:   32 45 eb                        	xor al, byte ptr [ebp - 0x15]
0x8049a80:   89 c1                           	mov ecx, eax
0x8049a82:   0f bf 95 20 ff ff ff            	movsx edx, word ptr [ebp - 0xe0]
0x8049a89:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049a8d:   39 c2                           	cmp edx, eax
0x8049a8f:   0f 9e c0                        	setle al
0x8049a92:   09 c8                           	or eax, ecx
0x8049a94:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x8049a97:   b8 01 00 00 00                  	mov eax, 1
0x8049a9c:   21 45 e0                        	and dword ptr [ebp - 0x20], eax
0x8049a9f:   83 85 08 ff ff ff 01            	add dword ptr [ebp - 0xf8], 1
0x8049aa6:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x8049aaa:   0f 84 6f 03 00 00               	je 0x8049e1f <func_1+0x68a>
0x8049ab0:   e9 e3 14 00 00                  	jmp 0x804af98 <func_1+0x1803>
0x8049ab5:   c6 85 1b ff ff ff fb            	mov byte ptr [ebp - 0xe5], 0xfb
0x8049abc:   c7 45 98 84 56 68 d0            	mov dword ptr [ebp - 0x68], 0xd0685684
0x8049ac3:   c6 45 eb ec                     	mov byte ptr [ebp - 0x15], 0xec
0x8049ac7:   e9 9f 01 00 00                  	jmp 0x8049c6b <func_1+0x4d6>
0x8049acc:   c6 85 13 ff ff ff d6            	mov byte ptr [ebp - 0xed], 0xd6
0x8049ad3:   c7 85 0c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xf4], 1
0x8049add:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x8049ae1:   0f 85 90 00 00 00               	jne 0x8049b77 <func_1+0x3e2>
0x8049ae7:   0f be 85 13 ff ff ff            	movsx eax, byte ptr [ebp - 0xed]
0x8049aee:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x8049af1:   0f 97 c0                        	seta al
0x8049af4:   0f b6 c0                        	movzx eax, al
0x8049af7:   2b 45 e0                        	sub eax, dword ptr [ebp - 0x20]
0x8049afa:   89 c2                           	mov edx, eax
0x8049afc:   0f be 85 13 ff ff ff            	movsx eax, byte ptr [ebp - 0xed]
0x8049b03:   39 c2                           	cmp edx, eax
0x8049b05:   0f 93 c0                        	setae al
0x8049b08:   89 c2                           	mov edx, eax
0x8049b0a:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049b0e:   09 d0                           	or eax, edx
0x8049b10:   0a 85 13 ff ff ff               	or al, byte ptr [ebp - 0xed]
0x8049b16:   0f b6 d0                        	movzx edx, al
0x8049b19:   0f b6 85 13 ff ff ff            	movzx eax, byte ptr [ebp - 0xed]
0x8049b20:   0f b6 c0                        	movzx eax, al
0x8049b23:   01 d0                           	add eax, edx
0x8049b25:   0d bb 5e 00 00                  	or eax, 0x5ebb
0x8049b2a:   89 c2                           	mov edx, eax
0x8049b2c:   0f b6 85 1b ff ff ff            	movzx eax, byte ptr [ebp - 0xe5]
0x8049b33:   31 d0                           	xor eax, edx
0x8049b35:   25 23 a0 86 2d                  	and eax, 0x2d86a023
0x8049b3a:   85 c0                           	test eax, eax
0x8049b3c:   74 0d                           	je 0x8049b4b <func_1+0x3b6>
0x8049b3e:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049b42:   74 07                           	je 0x8049b4b <func_1+0x3b6>
0x8049b44:   b8 01 00 00 00                  	mov eax, 1
0x8049b49:   eb 05                           	jmp 0x8049b50 <func_1+0x3bb>
0x8049b4b:   b8 00 00 00 00                  	mov eax, 0
0x8049b50:   3c 01                           	cmp al, 1
0x8049b52:   75 06                           	jne 0x8049b5a <func_1+0x3c5>
0x8049b54:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x8049b58:   74 07                           	je 0x8049b61 <func_1+0x3cc>
0x8049b5a:   b8 01 00 00 00                  	mov eax, 1
0x8049b5f:   eb 05                           	jmp 0x8049b66 <func_1+0x3d1>
0x8049b61:   b8 00 00 00 00                  	mov eax, 0
0x8049b66:   0f b7 c0                        	movzx eax, ax
0x8049b69:   0f b6 b5 1b ff ff ff            	movzx esi, byte ptr [ebp - 0xe5]
0x8049b70:   99                              	cdq 
0x8049b71:   f7 fe                           	idiv esi
0x8049b73:   85 c0                           	test eax, eax
0x8049b75:   74 07                           	je 0x8049b7e <func_1+0x3e9>
0x8049b77:   b8 01 00 00 00                  	mov eax, 1
0x8049b7c:   eb 05                           	jmp 0x8049b83 <func_1+0x3ee>
0x8049b7e:   b8 00 00 00 00                  	mov eax, 0
0x8049b83:   20 45 df                        	and byte ptr [ebp - 0x21], al
0x8049b86:   0f bf 85 20 ff ff ff            	movsx eax, word ptr [ebp - 0xe0]
0x8049b8d:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x8049b90:   0f 97 c0                        	seta al
0x8049b93:   0f b6 c0                        	movzx eax, al
0x8049b96:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049b99:   77 06                           	ja 0x8049ba1 <func_1+0x40c>
0x8049b9b:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x8049b9f:   75 06                           	jne 0x8049ba7 <func_1+0x412>
0x8049ba1:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049ba5:   74 07                           	je 0x8049bae <func_1+0x419>
0x8049ba7:   ba 01 00 00 00                  	mov edx, 1
0x8049bac:   eb 05                           	jmp 0x8049bb3 <func_1+0x41e>
0x8049bae:   ba 00 00 00 00                  	mov edx, 0
0x8049bb3:   0f b6 85 1b ff ff ff            	movzx eax, byte ptr [ebp - 0xe5]
0x8049bba:   09 d0                           	or eax, edx
0x8049bbc:   0b 45 84                        	or eax, dword ptr [ebp - 0x7c]
0x8049bbf:   89 c2                           	mov edx, eax
0x8049bc1:   0f b6 85 1b ff ff ff            	movzx eax, byte ptr [ebp - 0xe5]
0x8049bc8:   01 c2                           	add edx, eax
0x8049bca:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x8049bd0:   21 d0                           	and eax, edx
0x8049bd2:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x8049bd8:   0f be 85 6b ff ff ff            	movsx eax, byte ptr [ebp - 0x95]
0x8049bdf:   39 85 0c ff ff ff               	cmp dword ptr [ebp - 0xf4], eax
0x8049be5:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049be8:   0f b7 c0                        	movzx eax, ax
0x8049beb:   8b 95 0c ff ff ff               	mov edx, dword ptr [ebp - 0xf4]
0x8049bf1:   66 81 f2 66 52                  	xor dx, 0x5266
0x8049bf6:   0f b7 fa                        	movzx edi, dx
0x8049bf9:   99                              	cdq 
0x8049bfa:   f7 ff                           	idiv edi
0x8049bfc:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049bff:   0f 95 c0                        	setne al
0x8049c02:   0f b6 c0                        	movzx eax, al
0x8049c05:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049c08:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049c0c:   f7 d8                           	neg eax
0x8049c0e:   83 f8 0d                        	cmp eax, 0xd
0x8049c11:   7e 0d                           	jle 0x8049c20 <func_1+0x48b>
0x8049c13:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x8049c17:   74 07                           	je 0x8049c20 <func_1+0x48b>
0x8049c19:   b8 01 00 00 00                  	mov eax, 1
0x8049c1e:   eb 05                           	jmp 0x8049c25 <func_1+0x490>
0x8049c20:   b8 00 00 00 00                  	mov eax, 0
0x8049c25:   3b 45 a8                        	cmp eax, dword ptr [ebp - 0x58]
0x8049c28:   0f 95 c0                        	setne al
0x8049c2b:   0f b6 d0                        	movzx edx, al
0x8049c2e:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049c31:   0f b7 c0                        	movzx eax, ax
0x8049c34:   01 d0                           	add eax, edx
0x8049c36:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049c39:   0f 94 c0                        	sete al
0x8049c3c:   0f b6 d0                        	movzx edx, al
0x8049c3f:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049c42:   98                              	cwde 
0x8049c43:   89 c1                           	mov ecx, eax
0x8049c45:   d3 e2                           	shl edx, cl
0x8049c47:   89 d0                           	mov eax, edx
0x8049c49:   39 85 40 ff ff ff               	cmp dword ptr [ebp - 0xc0], eax
0x8049c4f:   0f 9c c0                        	setl al
0x8049c52:   0f b6 c0                        	movzx eax, al
0x8049c55:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049c58:   0f 95 c0                        	setne al
0x8049c5b:   0f b6 c0                        	movzx eax, al
0x8049c5e:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049c61:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049c65:   83 c0 01                        	add eax, 1
0x8049c68:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x8049c6b:   80 7d eb 2d                     	cmp byte ptr [ebp - 0x15], 0x2d
0x8049c6f:   0f 85 57 fe ff ff               	jne 0x8049acc <func_1+0x337>
0x8049c75:   80 bd 1b ff ff ff 00            	cmp byte ptr [ebp - 0xe5], 0
0x8049c7c:   74 0f                           	je 0x8049c8d <func_1+0x4f8>
0x8049c7e:   c7 85 1c ff ff ff 84 c3 1c 98   	mov dword ptr [ebp - 0xe4], 0x981cc384
0x8049c88:   e9 6a 01 00 00                  	jmp 0x8049df7 <func_1+0x662>
0x8049c8d:   c7 85 14 ff ff ff f8 dc 06 ee   	mov dword ptr [ebp - 0xec], 0xee06dcf8
0x8049c97:   c7 45 98 04 00 00 00            	mov dword ptr [ebp - 0x68], 4
0x8049c9e:   80 7d df 00                     	cmp byte ptr [ebp - 0x21], 0
0x8049ca2:   0f b6 85 1b ff ff ff            	movzx eax, byte ptr [ebp - 0xe5]
0x8049ca9:   c1 e0 02                        	shl eax, 2
0x8049cac:   39 85 14 ff ff ff               	cmp dword ptr [ebp - 0xec], eax
0x8049cb2:   0f be 4d df                     	movsx ecx, byte ptr [ebp - 0x21]
0x8049cb6:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049cb9:   99                              	cdq 
0x8049cba:   f7 f9                           	idiv ecx
0x8049cbc:   89 d0                           	mov eax, edx
0x8049cbe:   66 3d 98 83                     	cmp ax, 0x8398
0x8049cc2:   0f 93 c0                        	setae al
0x8049cc5:   0f b6 c0                        	movzx eax, al
0x8049cc8:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x8049ccb:   c7 85 1c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe4], 0
0x8049cd5:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x8049cd9:   74 78                           	je 0x8049d53 <func_1+0x5be>
0x8049cdb:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x8049cdf:   0f b6 d0                        	movzx edx, al
0x8049ce2:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x8049ce8:   0f b6 c0                        	movzx eax, al
0x8049ceb:   29 c2                           	sub edx, eax
0x8049ced:   89 d0                           	mov eax, edx
0x8049cef:   89 c2                           	mov edx, eax
0x8049cf1:   8b 85 1c ff ff ff               	mov eax, dword ptr [ebp - 0xe4]
0x8049cf7:   09 d0                           	or eax, edx
0x8049cf9:   89 c1                           	mov ecx, eax
0x8049cfb:   ba 85 97 ce 02                  	mov edx, 0x2ce9785
0x8049d00:   89 c8                           	mov eax, ecx
0x8049d02:   f7 ea                           	imul edx
0x8049d04:   c1 fa 18                        	sar edx, 0x18
0x8049d07:   89 c8                           	mov eax, ecx
0x8049d09:   c1 f8 1f                        	sar eax, 0x1f
0x8049d0c:   29 c2                           	sub edx, eax
0x8049d0e:   89 d0                           	mov eax, edx
0x8049d10:   69 c0 9d 59 33 5b               	imul eax, eax, 0x5b33599d
0x8049d16:   29 c1                           	sub ecx, eax
0x8049d18:   89 c8                           	mov eax, ecx
0x8049d1a:   8b 75 d8                        	mov esi, dword ptr [ebp - 0x28]
0x8049d1d:   ba 00 00 00 00                  	mov edx, 0
0x8049d22:   f7 f6                           	div esi
0x8049d24:   89 c2                           	mov edx, eax
0x8049d26:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049d2a:   0f af c2                        	imul eax, edx
0x8049d2d:   0f bf d0                        	movsx edx, ax
0x8049d30:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049d33:   98                              	cwde 
0x8049d34:   01 d0                           	add eax, edx
0x8049d36:   85 c0                           	test eax, eax
0x8049d38:   0f 95 c0                        	setne al
0x8049d3b:   0f b6 c0                        	movzx eax, al
0x8049d3e:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049d41:   80 bd 1b ff ff ff 00            	cmp byte ptr [ebp - 0xe5], 0
0x8049d48:   0f 84 a9 00 00 00               	je 0x8049df7 <func_1+0x662>
0x8049d4e:   e9 2e 12 00 00                  	jmp 0x804af81 <func_1+0x17ec>
0x8049d53:   0f be 45 b9                     	movsx eax, byte ptr [ebp - 0x47]
0x8049d57:   0f b6 4d ba                     	movzx ecx, byte ptr [ebp - 0x46]
0x8049d5b:   0f be 75 bb                     	movsx esi, byte ptr [ebp - 0x45]
0x8049d5f:   89 b5 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], esi
0x8049d65:   0f b6 7d c2                     	movzx edi, byte ptr [ebp - 0x3e]
0x8049d69:   89 bd 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], edi
0x8049d6f:   0f b6 5d c3                     	movzx ebx, byte ptr [ebp - 0x3d]
0x8049d73:   89 9d 28 fe ff ff               	mov dword ptr [ebp - 0x1d8], ebx
0x8049d79:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x8049d7d:   0f bf 75 d2                     	movsx esi, word ptr [ebp - 0x2e]
0x8049d81:   0f be 5d df                     	movsx ebx, byte ptr [ebp - 0x21]
0x8049d85:   0f b6 55 eb                     	movzx edx, byte ptr [ebp - 0x15]
0x8049d89:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049d8c:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049d92:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049d98:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049d9e:   50                              	push eax
0x8049d9f:   51                              	push ecx
0x8049da0:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049da6:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x8049dac:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049daf:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049db5:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049db8:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x8049dbe:   ff b5 28 fe ff ff               	push dword ptr [ebp - 0x1d8]
0x8049dc4:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049dc7:   57                              	push edi
0x8049dc8:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049dcb:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049dce:   56                              	push esi
0x8049dcf:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049dd2:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049dd5:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049dd8:   53                              	push ebx
0x8049dd9:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049ddc:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049ddf:   52                              	push edx
0x8049de0:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049de3:   e8 3e f8 ff ff                  	call 0x8049626 <set_var>
0x8049de8:   83 c4 68                        	add esp, 0x68
0x8049deb:   0f b6 85 1b ff ff ff            	movzx eax, byte ptr [ebp - 0xe5]
0x8049df2:   e9 81 14 00 00                  	jmp 0x804b278 <func_1+0x1ae3>
0x8049df7:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049dfa:   f7 d8                           	neg eax
0x8049dfc:   c0 e8 04                        	shr al, 4
0x8049dff:   0f b6 d0                        	movzx edx, al
0x8049e02:   b8 00 00 00 00                  	mov eax, 0
0x8049e07:   98                              	cwde 
0x8049e08:   89 c1                           	mov ecx, eax
0x8049e0a:   d3 e2                           	shl edx, cl
0x8049e0c:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049e10:   39 c2                           	cmp edx, eax
0x8049e12:   7d 04                           	jge 0x8049e18 <func_1+0x683>
0x8049e14:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x8049e18:   81 65 ac 6c 6f 4d 26            	and dword ptr [ebp - 0x54], 0x264d6f6c
0x8049e1f:   66 c7 85 3e ff ff ff 01 00      	mov word ptr [ebp - 0xc2], 1
0x8049e28:   0f bf 85 20 ff ff ff            	movsx eax, word ptr [ebp - 0xe0]
0x8049e2f:   89 85 1c ff ff ff               	mov dword ptr [ebp - 0xe4], eax
0x8049e35:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049e38:   83 c8 fe                        	or eax, 0xfffffffe
0x8049e3b:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x8049e41:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049e45:   8d 50 01                        	lea edx, [eax + 1]
0x8049e48:   88 55 eb                        	mov byte ptr [ebp - 0x15], dl
0x8049e4b:   0f b6 c0                        	movzx eax, al
0x8049e4e:   0b 85 48 ff ff ff               	or eax, dword ptr [ebp - 0xb8]
0x8049e54:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049e57:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x8049e5d:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049e60:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x8049e64:   0f 84 f2 05 00 00               	je 0x804a45c <func_1+0xcc7>
0x8049e6a:   66 c7 85 82 fe ff ff 2a fe      	mov word ptr [ebp - 0x17e], 0xfe2a
0x8049e73:   c7 85 7c fe ff ff 71 3e e6 37   	mov dword ptr [ebp - 0x184], 0x37e63e71
0x8049e7d:   c6 85 7b fe ff ff 86            	mov byte ptr [ebp - 0x185], 0x86
0x8049e84:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x8049e8a:   c1 e0 07                        	shl eax, 7
0x8049e8d:   66 89 85 82 fe ff ff            	mov word ptr [ebp - 0x17e], ax
0x8049e94:   0f b7 85 82 fe ff ff            	movzx eax, word ptr [ebp - 0x17e]
0x8049e9b:   89 85 48 ff ff ff               	mov dword ptr [ebp - 0xb8], eax
0x8049ea1:   8b 85 48 ff ff ff               	mov eax, dword ptr [ebp - 0xb8]
0x8049ea7:   0f be c0                        	movsx eax, al
0x8049eaa:   8b 95 40 ff ff ff               	mov edx, dword ptr [ebp - 0xc0]
0x8049eb0:   0f be ca                        	movsx ecx, dl
0x8049eb3:   99                              	cdq 
0x8049eb4:   f7 f9                           	idiv ecx
0x8049eb6:   89 d0                           	mov eax, edx
0x8049eb8:   85 c0                           	test eax, eax
0x8049eba:   74 07                           	je 0x8049ec3 <func_1+0x72e>
0x8049ebc:   b8 01 00 00 00                  	mov eax, 1
0x8049ec1:   eb 05                           	jmp 0x8049ec8 <func_1+0x733>
0x8049ec3:   b8 00 00 00 00                  	mov eax, 0
0x8049ec8:   09 45 ac                        	or dword ptr [ebp - 0x54], eax
0x8049ecb:   0f be 45 df                     	movsx eax, byte ptr [ebp - 0x21]
0x8049ecf:   0b 45 ac                        	or eax, dword ptr [ebp - 0x54]
0x8049ed2:   83 f8 01                        	cmp eax, 1
0x8049ed5:   0f 9e c0                        	setle al
0x8049ed8:   0f b6 c0                        	movzx eax, al
0x8049edb:   09 85 7c fe ff ff               	or dword ptr [ebp - 0x184], eax
0x8049ee1:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049ee4:   0f b7 bd 82 fe ff ff            	movzx edi, word ptr [ebp - 0x17e]
0x8049eeb:   ba 00 00 00 00                  	mov edx, 0
0x8049ef0:   f7 f7                           	div edi
0x8049ef2:   89 c2                           	mov edx, eax
0x8049ef4:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x8049efa:   39 c2                           	cmp edx, eax
0x8049efc:   0f 97 c0                        	seta al
0x8049eff:   0f b6 c0                        	movzx eax, al
0x8049f02:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049f05:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x8049f09:   74 07                           	je 0x8049f12 <func_1+0x77d>
0x8049f0b:   ba 01 00 00 00                  	mov edx, 1
0x8049f10:   eb 05                           	jmp 0x8049f17 <func_1+0x782>
0x8049f12:   ba 00 00 00 00                  	mov edx, 0
0x8049f17:   0f b7 85 82 fe ff ff            	movzx eax, word ptr [ebp - 0x17e]
0x8049f1e:   39 c2                           	cmp edx, eax
0x8049f20:   7f 07                           	jg 0x8049f29 <func_1+0x794>
0x8049f22:   ba 08 00 00 00                  	mov edx, 8
0x8049f27:   eb 05                           	jmp 0x8049f2e <func_1+0x799>
0x8049f29:   ba 00 00 00 00                  	mov edx, 0
0x8049f2e:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x8049f32:   0f b6 c0                        	movzx eax, al
0x8049f35:   0f af c2                        	imul eax, edx
0x8049f38:   89 85 7c fe ff ff               	mov dword ptr [ebp - 0x184], eax
0x8049f3e:   8b 85 7c fe ff ff               	mov eax, dword ptr [ebp - 0x184]
0x8049f44:   83 f0 2d                        	xor eax, 0x2d
0x8049f47:   25 fc ff 00 00                  	and eax, 0xfffc
0x8049f4c:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049f4f:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049f52:   0f b6 d0                        	movzx edx, al
0x8049f55:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x8049f5b:   0f b6 c0                        	movzx eax, al
0x8049f5e:   0f af c2                        	imul eax, edx
0x8049f61:   05 95 00 00 00                  	add eax, 0x95
0x8049f66:   3d 2a 01 00 00                  	cmp eax, 0x12a
0x8049f6b:   0f 86 12 02 00 00               	jbe 0x804a183 <func_1+0x9ee>
0x8049f71:   c7 85 64 fe ff ff 73 68 d4 0e   	mov dword ptr [ebp - 0x19c], 0xed46873
0x8049f7b:   c7 85 60 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x1a0], 0xffffffff
0x8049f85:   83 7d ec fe                     	cmp dword ptr [ebp - 0x14], -2
0x8049f89:   0f 9d c0                        	setge al
0x8049f8c:   0f b6 d0                        	movzx edx, al
0x8049f8f:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x8049f95:   01 c2                           	add edx, eax
0x8049f97:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049f9a:   21 d0                           	and eax, edx
0x8049f9c:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049f9f:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049fa2:   0f be c0                        	movsx eax, al
0x8049fa5:   f7 d8                           	neg eax
0x8049fa7:   89 85 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], eax
0x8049fad:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x8049fb1:   0f 95 c1                        	setne cl
0x8049fb4:   8b b5 64 fe ff ff               	mov esi, dword ptr [ebp - 0x19c]
0x8049fba:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049fbd:   ba 00 00 00 00                  	mov edx, 0
0x8049fc2:   f7 f6                           	div esi
0x8049fc4:   85 c0                           	test eax, eax
0x8049fc6:   75 06                           	jne 0x8049fce <func_1+0x839>
0x8049fc8:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x8049fcc:   74 07                           	je 0x8049fd5 <func_1+0x840>
0x8049fce:   b8 01 00 00 00                  	mov eax, 1
0x8049fd3:   eb 05                           	jmp 0x8049fda <func_1+0x845>
0x8049fd5:   b8 00 00 00 00                  	mov eax, 0
0x8049fda:   83 e0 01                        	and eax, 1
0x8049fdd:   31 c8                           	xor eax, ecx
0x8049fdf:   0f b6 c0                        	movzx eax, al
0x8049fe2:   23 45 d4                        	and eax, dword ptr [ebp - 0x2c]
0x8049fe5:   31 45 d8                        	xor dword ptr [ebp - 0x28], eax
0x8049fe8:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x8049fec:   0f 84 f1 00 00 00               	je 0x804a0e3 <func_1+0x94e>
0x8049ff2:   c7 85 5c fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x1a4], 2
0x8049ffc:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049fff:   0f bf d0                        	movsx edx, ax
0x804a002:   8b 85 64 fe ff ff               	mov eax, dword ptr [ebp - 0x19c]
0x804a008:   98                              	cwde 
0x804a009:   0f af c2                        	imul eax, edx
0x804a00c:   21 85 48 ff ff ff               	and dword ptr [ebp - 0xb8], eax
0x804a012:   83 bd 48 ff ff ff 00            	cmp dword ptr [ebp - 0xb8], 0
0x804a019:   75 04                           	jne 0x804a01f <func_1+0x88a>
0x804a01b:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x804a01f:   c6 45 9f 00                     	mov byte ptr [ebp - 0x61], 0
0x804a023:   0f be 45 9f                     	movsx eax, byte ptr [ebp - 0x61]
0x804a027:   0b 85 64 fe ff ff               	or eax, dword ptr [ebp - 0x19c]
0x804a02d:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x804a030:   0f 9d c0                        	setge al
0x804a033:   0f b6 c0                        	movzx eax, al
0x804a036:   21 45 d4                        	and dword ptr [ebp - 0x2c], eax
0x804a039:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x804a03d:   0f 85 3a 0f 00 00               	jne 0x804af7d <func_1+0x17e8>
0x804a043:   0f be 45 b9                     	movsx eax, byte ptr [ebp - 0x47]
0x804a047:   0f b6 4d ba                     	movzx ecx, byte ptr [ebp - 0x46]
0x804a04b:   0f be 75 bb                     	movsx esi, byte ptr [ebp - 0x45]
0x804a04f:   89 b5 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], esi
0x804a055:   0f b6 7d c2                     	movzx edi, byte ptr [ebp - 0x3e]
0x804a059:   89 bd 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], edi
0x804a05f:   0f b6 5d c3                     	movzx ebx, byte ptr [ebp - 0x3d]
0x804a063:   89 9d 28 fe ff ff               	mov dword ptr [ebp - 0x1d8], ebx
0x804a069:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x804a06d:   0f bf 75 d2                     	movsx esi, word ptr [ebp - 0x2e]
0x804a071:   0f be 5d df                     	movsx ebx, byte ptr [ebp - 0x21]
0x804a075:   0f b6 55 eb                     	movzx edx, byte ptr [ebp - 0x15]
0x804a079:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a07c:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a082:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a088:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a08e:   50                              	push eax
0x804a08f:   51                              	push ecx
0x804a090:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a096:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804a09c:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a09f:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a0a5:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a0a8:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x804a0ae:   ff b5 28 fe ff ff               	push dword ptr [ebp - 0x1d8]
0x804a0b4:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a0b7:   57                              	push edi
0x804a0b8:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a0bb:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a0be:   56                              	push esi
0x804a0bf:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a0c2:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a0c5:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a0c8:   53                              	push ebx
0x804a0c9:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a0cc:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a0cf:   52                              	push edx
0x804a0d0:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a0d3:   e8 4e f5 ff ff                  	call 0x8049626 <set_var>
0x804a0d8:   83 c4 68                        	add esp, 0x68
0x804a0db:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a0de:   e9 95 11 00 00                  	jmp 0x804b278 <func_1+0x1ae3>
0x804a0e3:   0f be 45 b9                     	movsx eax, byte ptr [ebp - 0x47]
0x804a0e7:   0f b6 4d ba                     	movzx ecx, byte ptr [ebp - 0x46]
0x804a0eb:   0f be 75 bb                     	movsx esi, byte ptr [ebp - 0x45]
0x804a0ef:   89 b5 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], esi
0x804a0f5:   0f b6 7d c2                     	movzx edi, byte ptr [ebp - 0x3e]
0x804a0f9:   89 bd 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], edi
0x804a0ff:   0f b6 5d c3                     	movzx ebx, byte ptr [ebp - 0x3d]
0x804a103:   89 9d 28 fe ff ff               	mov dword ptr [ebp - 0x1d8], ebx
0x804a109:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x804a10d:   0f bf 75 d2                     	movsx esi, word ptr [ebp - 0x2e]
0x804a111:   0f be 5d df                     	movsx ebx, byte ptr [ebp - 0x21]
0x804a115:   0f b6 55 eb                     	movzx edx, byte ptr [ebp - 0x15]
0x804a119:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a11c:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a122:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a128:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a12e:   50                              	push eax
0x804a12f:   51                              	push ecx
0x804a130:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a136:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804a13c:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a13f:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a145:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a148:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x804a14e:   ff b5 28 fe ff ff               	push dword ptr [ebp - 0x1d8]
0x804a154:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a157:   57                              	push edi
0x804a158:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a15b:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a15e:   56                              	push esi
0x804a15f:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a162:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a165:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a168:   53                              	push ebx
0x804a169:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a16c:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a16f:   52                              	push edx
0x804a170:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a173:   e8 ae f4 ff ff                  	call 0x8049626 <set_var>
0x804a178:   83 c4 68                        	add esp, 0x68
0x804a17b:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a17e:   e9 f5 10 00 00                  	jmp 0x804b278 <func_1+0x1ae3>
0x804a183:   0f b7 85 82 fe ff ff            	movzx eax, word ptr [ebp - 0x17e]
0x804a18a:   66 0f be d0                     	movsx dx, al
0x804a18e:   0f be 4d df                     	movsx ecx, byte ptr [ebp - 0x21]
0x804a192:   81 bd 4c ff ff ff fb ff 00 00   	cmp dword ptr [ebp - 0xb4], 0xfffb
0x804a19c:   0f 94 c0                        	sete al
0x804a19f:   0f b6 c0                        	movzx eax, al
0x804a1a2:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x804a1a5:   0f 9e c0                        	setle al
0x804a1a8:   0f b6 c0                        	movzx eax, al
0x804a1ab:   23 45 ec                        	and eax, dword ptr [ebp - 0x14]
0x804a1ae:   39 85 7c fe ff ff               	cmp dword ptr [ebp - 0x184], eax
0x804a1b4:   0f 9c c0                        	setl al
0x804a1b7:   0f b6 c0                        	movzx eax, al
0x804a1ba:   0f af c1                        	imul eax, ecx
0x804a1bd:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x804a1c0:   0f 9d c0                        	setge al
0x804a1c3:   0f b6 c0                        	movzx eax, al
0x804a1c6:   01 d0                           	add eax, edx
0x804a1c8:   66 89 45 d2                     	mov word ptr [ebp - 0x2e], ax
0x804a1cc:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a1d0:   0f b7 d0                        	movzx edx, ax
0x804a1d3:   0f b6 85 7b fe ff ff            	movzx eax, byte ptr [ebp - 0x185]
0x804a1da:   89 c1                           	mov ecx, eax
0x804a1dc:   d3 e2                           	shl edx, cl
0x804a1de:   89 d0                           	mov eax, edx
0x804a1e0:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a1e3:   0f 95 c0                        	setne al
0x804a1e6:   0f b6 c0                        	movzx eax, al
0x804a1e9:   09 45 b0                        	or dword ptr [ebp - 0x50], eax
0x804a1ec:   66 c7 85 3e ff ff ff 00 00      	mov word ptr [ebp - 0xc2], 0
0x804a1f5:   66 83 bd 3e ff ff ff e3         	cmp word ptr [ebp - 0xc2], -0x1d
0x804a1fd:   0f 8c b9 01 00 00               	jl 0x804a3bc <func_1+0xc27>
0x804a203:   c7 85 74 fe ff ff af c3 9d a4   	mov dword ptr [ebp - 0x18c], 0xa49dc3af
0x804a20d:   c7 85 70 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x190], 0
0x804a217:   c7 45 a8 00 00 00 00            	mov dword ptr [ebp - 0x58], 0
0x804a21e:   eb 3e                           	jmp 0x804a25e <func_1+0xac9>
0x804a220:   66 c7 85 6e fe ff ff 07 00      	mov word ptr [ebp - 0x192], 7
0x804a229:   c7 85 68 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x198], 0xffffffff
0x804a233:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a236:   66 09 85 6e fe ff ff            	or word ptr [ebp - 0x192], ax
0x804a23d:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a241:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a244:   0f 94 c0                        	sete al
0x804a247:   0f b6 c0                        	movzx eax, al
0x804a24a:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a24d:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a250:   89 85 74 fe ff ff               	mov dword ptr [ebp - 0x18c], eax
0x804a256:   83 45 cc 01                     	add dword ptr [ebp - 0x34], 1
0x804a25a:   83 45 a8 04                     	add dword ptr [ebp - 0x58], 4
0x804a25e:   83 7d a8 1c                     	cmp dword ptr [ebp - 0x58], 0x1c
0x804a262:   7f bc                           	jg 0x804a220 <func_1+0xa8b>
0x804a264:   66 c7 45 d2 03 00               	mov word ptr [ebp - 0x2e], 3
0x804a26a:   66 83 7d d2 fa                  	cmp word ptr [ebp - 0x2e], -6
0x804a26f:   0f 8c a4 00 00 00               	jl 0x804a319 <func_1+0xb84>
0x804a275:   0f be 45 b9                     	movsx eax, byte ptr [ebp - 0x47]
0x804a279:   0f b6 4d ba                     	movzx ecx, byte ptr [ebp - 0x46]
0x804a27d:   0f be 75 bb                     	movsx esi, byte ptr [ebp - 0x45]
0x804a281:   89 b5 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], esi
0x804a287:   0f b6 7d c2                     	movzx edi, byte ptr [ebp - 0x3e]
0x804a28b:   89 bd 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], edi
0x804a291:   0f b6 5d c3                     	movzx ebx, byte ptr [ebp - 0x3d]
0x804a295:   89 9d 28 fe ff ff               	mov dword ptr [ebp - 0x1d8], ebx
0x804a29b:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x804a29f:   0f bf 75 d2                     	movsx esi, word ptr [ebp - 0x2e]
0x804a2a3:   0f be 5d df                     	movsx ebx, byte ptr [ebp - 0x21]
0x804a2a7:   0f b6 55 eb                     	movzx edx, byte ptr [ebp - 0x15]
0x804a2ab:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a2ae:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a2b4:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a2ba:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a2c0:   50                              	push eax
0x804a2c1:   51                              	push ecx
0x804a2c2:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a2c8:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804a2ce:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a2d1:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a2d7:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a2da:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x804a2e0:   ff b5 28 fe ff ff               	push dword ptr [ebp - 0x1d8]
0x804a2e6:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a2e9:   57                              	push edi
0x804a2ea:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a2ed:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a2f0:   56                              	push esi
0x804a2f1:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a2f4:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a2f7:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a2fa:   53                              	push ebx
0x804a2fb:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a2fe:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a301:   52                              	push edx
0x804a302:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a305:   e8 1c f3 ff ff                  	call 0x8049626 <set_var>
0x804a30a:   83 c4 68                        	add esp, 0x68
0x804a30d:   0f bf 85 3e ff ff ff            	movsx eax, word ptr [ebp - 0xc2]
0x804a314:   e9 5f 0f 00 00                  	jmp 0x804b278 <func_1+0x1ae3>
0x804a319:   0f be 45 b9                     	movsx eax, byte ptr [ebp - 0x47]
0x804a31d:   0f b6 4d ba                     	movzx ecx, byte ptr [ebp - 0x46]
0x804a321:   0f be 75 bb                     	movsx esi, byte ptr [ebp - 0x45]
0x804a325:   89 b5 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], esi
0x804a32b:   0f b6 7d c2                     	movzx edi, byte ptr [ebp - 0x3e]
0x804a32f:   89 bd 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], edi
0x804a335:   0f b6 5d c3                     	movzx ebx, byte ptr [ebp - 0x3d]
0x804a339:   89 9d 28 fe ff ff               	mov dword ptr [ebp - 0x1d8], ebx
0x804a33f:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x804a343:   0f bf 75 d2                     	movsx esi, word ptr [ebp - 0x2e]
0x804a347:   0f be 5d df                     	movsx ebx, byte ptr [ebp - 0x21]
0x804a34b:   0f b6 55 eb                     	movzx edx, byte ptr [ebp - 0x15]
0x804a34f:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a352:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a358:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a35e:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a364:   50                              	push eax
0x804a365:   51                              	push ecx
0x804a366:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a36c:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804a372:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a375:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a37b:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a37e:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x804a384:   ff b5 28 fe ff ff               	push dword ptr [ebp - 0x1d8]
0x804a38a:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a38d:   57                              	push edi
0x804a38e:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a391:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a394:   56                              	push esi
0x804a395:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a398:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a39b:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a39e:   53                              	push ebx
0x804a39f:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a3a2:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a3a5:   52                              	push edx
0x804a3a6:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a3a9:   e8 78 f2 ff ff                  	call 0x8049626 <set_var>
0x804a3ae:   83 c4 68                        	add esp, 0x68
0x804a3b1:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804a3b7:   e9 bc 0e 00 00                  	jmp 0x804b278 <func_1+0x1ae3>
0x804a3bc:   0f be 45 b9                     	movsx eax, byte ptr [ebp - 0x47]
0x804a3c0:   0f b6 4d ba                     	movzx ecx, byte ptr [ebp - 0x46]
0x804a3c4:   0f be 75 bb                     	movsx esi, byte ptr [ebp - 0x45]
0x804a3c8:   89 b5 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], esi
0x804a3ce:   0f b6 7d c2                     	movzx edi, byte ptr [ebp - 0x3e]
0x804a3d2:   89 bd 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], edi
0x804a3d8:   0f b6 5d c3                     	movzx ebx, byte ptr [ebp - 0x3d]
0x804a3dc:   89 9d 28 fe ff ff               	mov dword ptr [ebp - 0x1d8], ebx
0x804a3e2:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x804a3e6:   0f bf 75 d2                     	movsx esi, word ptr [ebp - 0x2e]
0x804a3ea:   0f be 5d df                     	movsx ebx, byte ptr [ebp - 0x21]
0x804a3ee:   0f b6 55 eb                     	movzx edx, byte ptr [ebp - 0x15]
0x804a3f2:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a3f5:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a3fb:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a401:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a407:   50                              	push eax
0x804a408:   51                              	push ecx
0x804a409:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a40f:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804a415:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a418:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a41e:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a421:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x804a427:   ff b5 28 fe ff ff               	push dword ptr [ebp - 0x1d8]
0x804a42d:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a430:   57                              	push edi
0x804a431:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a434:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a437:   56                              	push esi
0x804a438:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a43b:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a43e:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a441:   53                              	push ebx
0x804a442:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a445:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a448:   52                              	push edx
0x804a449:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a44c:   e8 d5 f1 ff ff                  	call 0x8049626 <set_var>
0x804a451:   83 c4 68                        	add esp, 0x68
0x804a454:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a457:   e9 1c 0e 00 00                  	jmp 0x804b278 <func_1+0x1ae3>
0x804a45c:   66 c7 85 fe fe ff ff 67 2e      	mov word ptr [ebp - 0x102], 0x2e67
0x804a465:   c7 45 94 7a 8c a6 ce            	mov dword ptr [ebp - 0x6c], 0xcea68c7a
0x804a46c:   c7 45 90 82 3e 39 ee            	mov dword ptr [ebp - 0x70], 0xee393e82
0x804a473:   66 c7 85 fc fe ff ff 1b e1      	mov word ptr [ebp - 0x104], 0xe11b
0x804a47c:   c6 85 fb fe ff ff 49            	mov byte ptr [ebp - 0x105], 0x49
0x804a483:   c7 85 f4 fe ff ff ba 3e d3 f3   	mov dword ptr [ebp - 0x10c], 0xf3d33eba
0x804a48d:   66 c7 85 f2 fe ff ff f6 ff      	mov word ptr [ebp - 0x10e], 0xfff6
0x804a496:   c7 45 8c f6 ff ff ff            	mov dword ptr [ebp - 0x74], 0xfffffff6
0x804a49d:   c6 85 f1 fe ff ff 53            	mov byte ptr [ebp - 0x10f], 0x53
0x804a4a4:   c7 85 ec fe ff ff ad 9c b7 ac   	mov dword ptr [ebp - 0x114], 0xacb79cad
0x804a4ae:   c7 85 e8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x118], 0xffffffff
0x804a4b8:   c7 85 e4 fe ff ff 8b 89 60 45   	mov dword ptr [ebp - 0x11c], 0x4560898b
0x804a4c2:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a4c6:   66 09 45 d2                     	or word ptr [ebp - 0x2e], ax
0x804a4ca:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a4ce:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a4d1:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a4d4:   f7 d8                           	neg eax
0x804a4d6:   0f b7 d0                        	movzx edx, ax
0x804a4d9:   0f b6 4d cb                     	movzx ecx, byte ptr [ebp - 0x35]
0x804a4dd:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a4e0:   0f b6 c0                        	movzx eax, al
0x804a4e3:   01 c8                           	add eax, ecx
0x804a4e5:   0f b7 c0                        	movzx eax, ax
0x804a4e8:   89 c1                           	mov ecx, eax
0x804a4ea:   d3 fa                           	sar edx, cl
0x804a4ec:   89 d0                           	mov eax, edx
0x804a4ee:   85 c0                           	test eax, eax
0x804a4f0:   75 09                           	jne 0x804a4fb <func_1+0xd66>
0x804a4f2:   83 bd 64 ff ff ff 00            	cmp dword ptr [ebp - 0x9c], 0
0x804a4f9:   74 07                           	je 0x804a502 <func_1+0xd6d>
0x804a4fb:   b8 01 00 00 00                  	mov eax, 1
0x804a500:   eb 05                           	jmp 0x804a507 <func_1+0xd72>
0x804a502:   b8 00 00 00 00                  	mov eax, 0
0x804a507:   66 31 85 fe fe ff ff            	xor word ptr [ebp - 0x102], ax
0x804a50e:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a511:   66 89 45 d2                     	mov word ptr [ebp - 0x2e], ax
0x804a515:   0f b6 45 cb                     	movzx eax, byte ptr [ebp - 0x35]
0x804a519:   8d 50 ff                        	lea edx, [eax - 1]
0x804a51c:   88 55 cb                        	mov byte ptr [ebp - 0x35], dl
0x804a51f:   0f b6 d0                        	movzx edx, al
0x804a522:   0f be 45 df                     	movsx eax, byte ptr [ebp - 0x21]
0x804a526:   09 d0                           	or eax, edx
0x804a528:   33 45 ec                        	xor eax, dword ptr [ebp - 0x14]
0x804a52b:   89 c2                           	mov edx, eax
0x804a52d:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a530:   0f b6 d8                        	movzx ebx, al
0x804a533:   0f b6 45 9f                     	movzx eax, byte ptr [ebp - 0x61]
0x804a537:   0f b6 c0                        	movzx eax, al
0x804a53a:   89 c1                           	mov ecx, eax
0x804a53c:   d3 fb                           	sar ebx, cl
0x804a53e:   89 d8                           	mov eax, ebx
0x804a540:   3d a5 18 00 00                  	cmp eax, 0x18a5
0x804a545:   0f 95 c0                        	setne al
0x804a548:   0f b6 c8                        	movzx ecx, al
0x804a54b:   0f bf 85 fe fe ff ff            	movsx eax, word ptr [ebp - 0x102]
0x804a552:   39 c1                           	cmp ecx, eax
0x804a554:   0f 9c c0                        	setl al
0x804a557:   0f b6 c0                        	movzx eax, al
0x804a55a:   09 d0                           	or eax, edx
0x804a55c:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a55f:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a562:   33 45 b0                        	xor eax, dword ptr [ebp - 0x50]
0x804a565:   39 45 b0                        	cmp dword ptr [ebp - 0x50], eax
0x804a568:   7e 0d                           	jle 0x804a577 <func_1+0xde2>
0x804a56a:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x804a56e:   74 07                           	je 0x804a577 <func_1+0xde2>
0x804a570:   b8 01 00 00 00                  	mov eax, 1
0x804a575:   eb 05                           	jmp 0x804a57c <func_1+0xde7>
0x804a577:   b8 00 00 00 00                  	mov eax, 0
0x804a57c:   3b 45 90                        	cmp eax, dword ptr [ebp - 0x70]
0x804a57f:   0f 9c c0                        	setl al
0x804a582:   0f b6 c0                        	movzx eax, al
0x804a585:   8b 55 90                        	mov edx, dword ptr [ebp - 0x70]
0x804a588:   31 c2                           	xor edx, eax
0x804a58a:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a58d:   21 d0                           	and eax, edx
0x804a58f:   98                              	cwde 
0x804a590:   8b 55 94                        	mov edx, dword ptr [ebp - 0x6c]
0x804a593:   0f bf fa                        	movsx edi, dx
0x804a596:   99                              	cdq 
0x804a597:   f7 ff                           	idiv edi
0x804a599:   85 c0                           	test eax, eax
0x804a59b:   0f 84 f2 05 00 00               	je 0x804ab93 <func_1+0x13fe>
0x804a5a1:   66 c7 85 d8 fe ff ff cd bc      	mov word ptr [ebp - 0x128], 0xbccd
0x804a5aa:   c7 45 88 b3 d2 b1 ce            	mov dword ptr [ebp - 0x78], 0xceb1d2b3
0x804a5b1:   c7 85 d4 fe ff ff 1b 69 a0 19   	mov dword ptr [ebp - 0x12c], 0x19a0691b
0x804a5bb:   c6 85 d3 fe ff ff 60            	mov byte ptr [ebp - 0x12d], 0x60
0x804a5c2:   66 c7 85 d0 fe ff ff 80 a4      	mov word ptr [ebp - 0x130], 0xa480
0x804a5cb:   c7 85 cc fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x134], 0xffffffff
0x804a5d5:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804a5d9:   74 0d                           	je 0x804a5e8 <func_1+0xe53>
0x804a5db:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x804a5df:   74 07                           	je 0x804a5e8 <func_1+0xe53>
0x804a5e1:   b8 01 00 00 00                  	mov eax, 1
0x804a5e6:   eb 05                           	jmp 0x804a5ed <func_1+0xe58>
0x804a5e8:   b8 00 00 00 00                  	mov eax, 0
0x804a5ed:   21 45 f0                        	and dword ptr [ebp - 0x10], eax
0x804a5f0:   80 7d cb 00                     	cmp byte ptr [ebp - 0x35], 0
0x804a5f4:   0f 85 86 09 00 00               	jne 0x804af80 <func_1+0x17eb>
0x804a5fa:   c7 45 a4 01 00 00 00            	mov dword ptr [ebp - 0x5c], 1
0x804a601:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804a605:   c7 45 94 00 00 00 00            	mov dword ptr [ebp - 0x6c], 0
0x804a60c:   0f bf 85 d8 fe ff ff            	movsx eax, word ptr [ebp - 0x128]
0x804a613:   23 45 94                        	and eax, dword ptr [ebp - 0x6c]
0x804a616:   89 c2                           	mov edx, eax
0x804a618:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a61b:   21 d0                           	and eax, edx
0x804a61d:   0f b6 d0                        	movzx edx, al
0x804a620:   0f be 85 6b ff ff ff            	movsx eax, byte ptr [ebp - 0x95]
0x804a627:   39 c2                           	cmp edx, eax
0x804a629:   0f 93 c0                        	setae al
0x804a62c:   0f b6 c0                        	movzx eax, al
0x804a62f:   89 c2                           	mov edx, eax
0x804a631:   0f b6 45 cb                     	movzx eax, byte ptr [ebp - 0x35]
0x804a635:   09 d0                           	or eax, edx
0x804a637:   88 45 cb                        	mov byte ptr [ebp - 0x35], al
0x804a63a:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x804a63e:   c1 e0 03                        	shl eax, 3
0x804a641:   3c fe                           	cmp al, 0xfe
0x804a643:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a646:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a649:   66 83 bd d8 fe ff ff 00         	cmp word ptr [ebp - 0x128], 0
0x804a651:   0f 84 9b 03 00 00               	je 0x804a9f2 <func_1+0x125d>
0x804a657:   c7 85 b8 fe ff ff 42 a1 ac 47   	mov dword ptr [ebp - 0x148], 0x47aca142
0x804a661:   c7 85 b4 fe ff ff f6 b9 4a 29   	mov dword ptr [ebp - 0x14c], 0x294ab9f6
0x804a66b:   66 c7 85 b2 fe ff ff 64 13      	mov word ptr [ebp - 0x14e], 0x1364
0x804a674:   c6 45 9f 00                     	mov byte ptr [ebp - 0x61], 0
0x804a678:   e9 ce 00 00 00                  	jmp 0x804a74b <func_1+0xfb6>
0x804a67d:   66 c7 85 a4 fe ff ff ff ff      	mov word ptr [ebp - 0x15c], 0xffff
0x804a686:   c7 45 88 d8 07 00 00            	mov dword ptr [ebp - 0x78], 0x7d8
0x804a68d:   83 bd 64 ff ff ff 00            	cmp dword ptr [ebp - 0x9c], 0
0x804a694:   75 04                           	jne 0x804a69a <func_1+0xf05>
0x804a696:   80 7d df 00                     	cmp byte ptr [ebp - 0x21], 0
0x804a69a:   c7 45 f0 ea ff ff ff            	mov dword ptr [ebp - 0x10], 0xffffffea
0x804a6a1:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x804a6a5:   0f 85 95 00 00 00               	jne 0x804a740 <func_1+0xfab>
0x804a6ab:   0f b7 85 a4 fe ff ff            	movzx eax, word ptr [ebp - 0x15c]
0x804a6b2:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804a6b5:   83 bd b8 fe ff ff 00            	cmp dword ptr [ebp - 0x148], 0
0x804a6bc:   75 06                           	jne 0x804a6c4 <func_1+0xf2f>
0x804a6be:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x804a6c2:   74 11                           	je 0x804a6d5 <func_1+0xf40>
0x804a6c4:   66 83 bd fe fe ff ff 00         	cmp word ptr [ebp - 0x102], 0
0x804a6cc:   74 07                           	je 0x804a6d5 <func_1+0xf40>
0x804a6ce:   b8 01 00 00 00                  	mov eax, 1
0x804a6d3:   eb 05                           	jmp 0x804a6da <func_1+0xf45>
0x804a6d5:   b8 00 00 00 00                  	mov eax, 0
0x804a6da:   3d fa 00 00 00                  	cmp eax, 0xfa
0x804a6df:   c7 85 b4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x14c], 0
0x804a6e9:   8b 85 b4 fe ff ff               	mov eax, dword ptr [ebp - 0x14c]
0x804a6ef:   39 85 34 ff ff ff               	cmp dword ptr [ebp - 0xcc], eax
0x804a6f5:   0f 93 c0                        	setae al
0x804a6f8:   0f b6 d0                        	movzx edx, al
0x804a6fb:   0f b7 85 a4 fe ff ff            	movzx eax, word ptr [ebp - 0x15c]
0x804a702:   31 d0                           	xor eax, edx
0x804a704:   0b 45 c4                        	or eax, dword ptr [ebp - 0x3c]
0x804a707:   89 c2                           	mov edx, eax
0x804a709:   0f b7 85 32 ff ff ff            	movzx eax, word ptr [ebp - 0xce]
0x804a710:   31 d0                           	xor eax, edx
0x804a712:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x804a715:   0f 92 c0                        	setb al
0x804a718:   0f b6 c0                        	movzx eax, al
0x804a71b:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x804a71e:   0f 94 c0                        	sete al
0x804a721:   0f b6 c0                        	movzx eax, al
0x804a724:   66 09 45 d2                     	or word ptr [ebp - 0x2e], ax
0x804a728:   66 83 7d d2 00                  	cmp word ptr [ebp - 0x2e], 0
0x804a72d:   74 07                           	je 0x804a736 <func_1+0xfa1>
0x804a72f:   b8 01 00 00 00                  	mov eax, 1
0x804a734:   eb 05                           	jmp 0x804a73b <func_1+0xfa6>
0x804a736:   b8 00 00 00 00                  	mov eax, 0
0x804a73b:   21 45 d8                        	and dword ptr [ebp - 0x28], eax
0x804a73e:   eb 01                           	jmp 0x804a741 <func_1+0xfac>
0x804a740:   90                              	nop 
0x804a741:   0f b6 45 9f                     	movzx eax, byte ptr [ebp - 0x61]
0x804a745:   83 e8 01                        	sub eax, 1
0x804a748:   88 45 9f                        	mov byte ptr [ebp - 0x61], al
0x804a74b:   80 7d 9f ec                     	cmp byte ptr [ebp - 0x61], 0xec
0x804a74f:   0f 85 28 ff ff ff               	jne 0x804a67d <func_1+0xee8>
0x804a755:   83 bd b8 fe ff ff fc            	cmp dword ptr [ebp - 0x148], -4
0x804a75c:   75 09                           	jne 0x804a767 <func_1+0xfd2>
0x804a75e:   80 bd 6b ff ff ff 00            	cmp byte ptr [ebp - 0x95], 0
0x804a765:   74 07                           	je 0x804a76e <func_1+0xfd9>
0x804a767:   b8 01 00 00 00                  	mov eax, 1
0x804a76c:   eb 05                           	jmp 0x804a773 <func_1+0xfde>
0x804a76e:   b8 00 00 00 00                  	mov eax, 0
0x804a773:   ba 08 00 00 00                  	mov edx, 8
0x804a778:   29 c2                           	sub edx, eax
0x804a77a:   89 d0                           	mov eax, edx
0x804a77c:   88 85 fb fe ff ff               	mov byte ptr [ebp - 0x105], al
0x804a782:   0f b6 85 fb fe ff ff            	movzx eax, byte ptr [ebp - 0x105]
0x804a789:   0f b6 c0                        	movzx eax, al
0x804a78c:   09 45 d8                        	or dword ptr [ebp - 0x28], eax
0x804a78f:   83 bd f4 fe ff ff 00            	cmp dword ptr [ebp - 0x10c], 0
0x804a796:   0f 85 f8 07 00 00               	jne 0x804af94 <func_1+0x17ff>
0x804a79c:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a7a0:   74 0d                           	je 0x804a7af <func_1+0x101a>
0x804a7a2:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804a7a6:   74 07                           	je 0x804a7af <func_1+0x101a>
0x804a7a8:   b8 01 00 00 00                  	mov eax, 1
0x804a7ad:   eb 05                           	jmp 0x804a7b4 <func_1+0x101f>
0x804a7af:   b8 00 00 00 00                  	mov eax, 0
0x804a7b4:   85 c0                           	test eax, eax
0x804a7b6:   74 07                           	je 0x804a7bf <func_1+0x102a>
0x804a7b8:   b8 40 00 00 00                  	mov eax, 0x40
0x804a7bd:   eb 05                           	jmp 0x804a7c4 <func_1+0x102f>
0x804a7bf:   b8 00 00 00 00                  	mov eax, 0
0x804a7c4:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a7c7:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a7ca:   8d 50 01                        	lea edx, [eax + 1]
0x804a7cd:   89 55 c4                        	mov dword ptr [ebp - 0x3c], edx
0x804a7d0:   0f b6 55 cb                     	movzx edx, byte ptr [ebp - 0x35]
0x804a7d4:   83 f2 01                        	xor edx, 1
0x804a7d7:   0f b6 d2                        	movzx edx, dl
0x804a7da:   39 d0                           	cmp eax, edx
0x804a7dc:   72 06                           	jb 0x804a7e4 <func_1+0x104f>
0x804a7de:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x804a7e2:   74 07                           	je 0x804a7eb <func_1+0x1056>
0x804a7e4:   b8 01 00 00 00                  	mov eax, 1
0x804a7e9:   eb 05                           	jmp 0x804a7f0 <func_1+0x105b>
0x804a7eb:   b8 00 00 00 00                  	mov eax, 0
0x804a7f0:   89 c2                           	mov edx, eax
0x804a7f2:   0f b6 45 cb                     	movzx eax, byte ptr [ebp - 0x35]
0x804a7f6:   01 d0                           	add eax, edx
0x804a7f8:   0f be c0                        	movsx eax, al
0x804a7fb:   8b 55 a8                        	mov edx, dword ptr [ebp - 0x58]
0x804a7fe:   0f be ca                        	movsx ecx, dl
0x804a801:   99                              	cdq 
0x804a802:   f7 f9                           	idiv ecx
0x804a804:   89 d0                           	mov eax, edx
0x804a806:   83 f0 01                        	xor eax, 1
0x804a809:   0f b6 c0                        	movzx eax, al
0x804a80c:   66 69 c0 fb 00                  	imul ax, ax, 0xfb
0x804a811:   0f b7 d0                        	movzx edx, ax
0x804a814:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a817:   0f b7 c0                        	movzx eax, ax
0x804a81a:   89 c1                           	mov ecx, eax
0x804a81c:   d3 e2                           	shl edx, cl
0x804a81e:   89 d0                           	mov eax, edx
0x804a820:   09 85 d4 fe ff ff               	or dword ptr [ebp - 0x12c], eax
0x804a826:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804a82c:   0f be c0                        	movsx eax, al
0x804a82f:   6b c0 8a                        	imul eax, eax, -0x76
0x804a832:   85 c0                           	test eax, eax
0x804a834:   0f 84 9a 00 00 00               	je 0x804a8d4 <func_1+0x113f>
0x804a83a:   c6 85 a7 fe ff ff 00            	mov byte ptr [ebp - 0x159], 0
0x804a841:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x804a845:   83 c0 01                        	add eax, 1
0x804a848:   88 45 c3                        	mov byte ptr [ebp - 0x3d], al
0x804a84b:   0f be 4d df                     	movsx ecx, byte ptr [ebp - 0x21]
0x804a84f:   66 83 bd d8 fe ff ff 00         	cmp word ptr [ebp - 0x128], 0
0x804a857:   75 0a                           	jne 0x804a863 <func_1+0x10ce>
0x804a859:   66 83 bd b2 fe ff ff 00         	cmp word ptr [ebp - 0x14e], 0
0x804a861:   74 07                           	je 0x804a86a <func_1+0x10d5>
0x804a863:   b8 01 00 00 00                  	mov eax, 1
0x804a868:   eb 05                           	jmp 0x804a86f <func_1+0x10da>
0x804a86a:   b8 00 00 00 00                  	mov eax, 0
0x804a86f:   3d c1 62 bc 25                  	cmp eax, 0x25bc62c1
0x804a874:   0f 9f c0                        	setg al
0x804a877:   0f b6 c0                        	movzx eax, al
0x804a87a:   33 85 2c ff ff ff               	xor eax, dword ptr [ebp - 0xd4]
0x804a880:   f7 d8                           	neg eax
0x804a882:   8b 5d e4                        	mov ebx, dword ptr [ebp - 0x1c]
0x804a885:   99                              	cdq 
0x804a886:   f7 fb                           	idiv ebx
0x804a888:   89 d0                           	mov eax, edx
0x804a88a:   3d 25 6a ba 2e                  	cmp eax, 0x2eba6a25
0x804a88f:   0f 9e c0                        	setle al
0x804a892:   0f b6 c0                        	movzx eax, al
0x804a895:   39 c1                           	cmp ecx, eax
0x804a897:   0f 9e c0                        	setle al
0x804a89a:   0f b6 c0                        	movzx eax, al
0x804a89d:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x804a8a0:   0f 92 c0                        	setb al
0x804a8a3:   f7 d0                           	not eax
0x804a8a5:   89 c2                           	mov edx, eax
0x804a8a7:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x804a8ad:   21 d0                           	and eax, edx
0x804a8af:   89 c2                           	mov edx, eax
0x804a8b1:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a8b7:   01 d0                           	add eax, edx
0x804a8b9:   30 85 a7 fe ff ff               	xor byte ptr [ebp - 0x159], al
0x804a8bf:   0f b6 85 d3 fe ff ff            	movzx eax, byte ptr [ebp - 0x12d]
0x804a8c6:   83 c0 01                        	add eax, 1
0x804a8c9:   88 85 d3 fe ff ff               	mov byte ptr [ebp - 0x12d], al
0x804a8cf:   e9 2f 04 00 00                  	jmp 0x804ad03 <func_1+0x156e>
0x804a8d4:   c7 85 ac fe ff ff f6 89 67 13   	mov dword ptr [ebp - 0x154], 0x136789f6
0x804a8de:   c7 85 a8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x158], 0
0x804a8e8:   0f b7 85 fc fe ff ff            	movzx eax, word ptr [ebp - 0x104]
0x804a8ef:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a8f2:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a8f5:   88 45 c2                        	mov byte ptr [ebp - 0x3e], al
0x804a8f8:   c6 45 df 01                     	mov byte ptr [ebp - 0x21], 1
0x804a8fc:   0f b7 85 d8 fe ff ff            	movzx eax, word ptr [ebp - 0x128]
0x804a903:   0f b7 c0                        	movzx eax, ax
0x804a906:   ba 74 00 00 00                  	mov edx, 0x74
0x804a90b:   89 c1                           	mov ecx, eax
0x804a90d:   d3 e2                           	shl edx, cl
0x804a90f:   89 d0                           	mov eax, edx
0x804a911:   89 85 ac fe ff ff               	mov dword ptr [ebp - 0x154], eax
0x804a917:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a91b:   0f be c0                        	movsx eax, al
0x804a91e:   ba ec ff ff ff                  	mov edx, 0xffffffec
0x804a923:   29 c2                           	sub edx, eax
0x804a925:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x804a929:   39 c2                           	cmp edx, eax
0x804a92b:   0f 9e c0                        	setle al
0x804a92e:   0f b6 d0                        	movzx edx, al
0x804a931:   0f bf 45 d2                     	movsx eax, word ptr [ebp - 0x2e]
0x804a935:   09 d0                           	or eax, edx
0x804a937:   2d 05 dd b1 44                  	sub eax, 0x44b1dd05
0x804a93c:   83 f8 01                        	cmp eax, 1
0x804a93f:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804a945:   0f b6 b5 d3 fe ff ff            	movzx esi, byte ptr [ebp - 0x12d]
0x804a94c:   ba 00 00 00 00                  	mov edx, 0
0x804a951:   f7 f6                           	div esi
0x804a953:   83 f8 19                        	cmp eax, 0x19
0x804a956:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a95c:   21 45 b0                        	and dword ptr [ebp - 0x50], eax
0x804a95f:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a962:   0f be d0                        	movsx edx, al
0x804a965:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a968:   84 c0                           	test al, al
0x804a96a:   75 38                           	jne 0x804a9a4 <func_1+0x120f>
0x804a96c:   0f b7 85 32 ff ff ff            	movzx eax, word ptr [ebp - 0xce]
0x804a973:   0f b7 8d b2 fe ff ff            	movzx ecx, word ptr [ebp - 0x14e]
0x804a97a:   0f be c9                        	movsx ecx, cl
0x804a97d:   c1 e1 04                        	shl ecx, 4
0x804a980:   39 c8                           	cmp eax, ecx
0x804a982:   0f 9f c0                        	setg al
0x804a985:   0f b6 c0                        	movzx eax, al
0x804a988:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a98b:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a98e:   89 c3                           	mov ebx, eax
0x804a990:   8b 85 ac fe ff ff               	mov eax, dword ptr [ebp - 0x154]
0x804a996:   89 c1                           	mov ecx, eax
0x804a998:   0f b6 c3                        	movzx eax, bl
0x804a99b:   f6 f1                           	div cl
0x804a99d:   0f b6 c4                        	movzx eax, ah
0x804a9a0:   84 c0                           	test al, al
0x804a9a2:   74 07                           	je 0x804a9ab <func_1+0x1216>
0x804a9a4:   b8 01 00 00 00                  	mov eax, 1
0x804a9a9:   eb 05                           	jmp 0x804a9b0 <func_1+0x121b>
0x804a9ab:   b8 00 00 00 00                  	mov eax, 0
0x804a9b0:   0f be c0                        	movsx eax, al
0x804a9b3:   89 c1                           	mov ecx, eax
0x804a9b5:   d3 e2                           	shl edx, cl
0x804a9b7:   89 d0                           	mov eax, edx
0x804a9b9:   39 85 ac fe ff ff               	cmp dword ptr [ebp - 0x154], eax
0x804a9bf:   0f 95 c0                        	setne al
0x804a9c2:   0f b6 d0                        	movzx edx, al
0x804a9c5:   66 0f be 45 df                  	movsx ax, byte ptr [ebp - 0x21]
0x804a9ca:   01 d0                           	add eax, edx
0x804a9cc:   f7 d8                           	neg eax
0x804a9ce:   89 c2                           	mov edx, eax
0x804a9d0:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a9d3:   31 d0                           	xor eax, edx
0x804a9d5:   0f bf d0                        	movsx edx, ax
0x804a9d8:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x804a9de:   98                              	cwde 
0x804a9df:   01 c2                           	add edx, eax
0x804a9e1:   0f bf 85 d8 fe ff ff            	movsx eax, word ptr [ebp - 0x128]
0x804a9e8:   31 d0                           	xor eax, edx
0x804a9ea:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a9ed:   e9 11 03 00 00                  	jmp 0x804ad03 <func_1+0x156e>
0x804a9f2:   c6 85 cb fe ff ff 06            	mov byte ptr [ebp - 0x135], 6
0x804a9f9:   c7 85 c4 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x13c], 1
0x804aa03:   c6 85 c3 fe ff ff fb            	mov byte ptr [ebp - 0x13d], 0xfb
0x804aa0a:   c7 85 bc fe ff ff 19 ec d2 ad   	mov dword ptr [ebp - 0x144], 0xadd2ec19
0x804aa14:   66 81 bd d0 fe ff ff fb 00      	cmp word ptr [ebp - 0x130], 0xfb
0x804aa1d:   0f 95 c0                        	setne al
0x804aa20:   0f b6 c0                        	movzx eax, al
0x804aa23:   80 bd cb fe ff ff 00            	cmp byte ptr [ebp - 0x135], 0
0x804aa2a:   0f 95 c2                        	setne dl
0x804aa2d:   0f b6 ca                        	movzx ecx, dl
0x804aa30:   0f be 55 df                     	movsx edx, byte ptr [ebp - 0x21]
0x804aa34:   01 ca                           	add edx, ecx
0x804aa36:   21 55 8c                        	and dword ptr [ebp - 0x74], edx
0x804aa39:   39 45 8c                        	cmp dword ptr [ebp - 0x74], eax
0x804aa3c:   7d 06                           	jge 0x804aa44 <func_1+0x12af>
0x804aa3e:   80 7d 9f 00                     	cmp byte ptr [ebp - 0x61], 0
0x804aa42:   74 07                           	je 0x804aa4b <func_1+0x12b6>
0x804aa44:   b8 01 00 00 00                  	mov eax, 1
0x804aa49:   eb 05                           	jmp 0x804aa50 <func_1+0x12bb>
0x804aa4b:   b8 00 00 00 00                  	mov eax, 0
0x804aa50:   0f be d0                        	movsx edx, al
0x804aa53:   0f be 45 df                     	movsx eax, byte ptr [ebp - 0x21]
0x804aa57:   89 c1                           	mov ecx, eax
0x804aa59:   d3 e2                           	shl edx, cl
0x804aa5b:   89 d0                           	mov eax, edx
0x804aa5d:   2d e9 f3 5d 55                  	sub eax, 0x555df3e9
0x804aa62:   3d 30 65 58 a2                  	cmp eax, 0xa2586530
0x804aa67:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804aa6d:   39 45 cc                        	cmp dword ptr [ebp - 0x34], eax
0x804aa70:   0f 93 c0                        	setae al
0x804aa73:   0f b6 c0                        	movzx eax, al
0x804aa76:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804aa79:   0f 9d c0                        	setge al
0x804aa7c:   89 c2                           	mov edx, eax
0x804aa7e:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804aa81:   31 d0                           	xor eax, edx
0x804aa83:   0f be c0                        	movsx eax, al
0x804aa86:   0f b6 95 c3 fe ff ff            	movzx edx, byte ptr [ebp - 0x13d]
0x804aa8d:   0f be fa                        	movsx edi, dl
0x804aa90:   99                              	cdq 
0x804aa91:   f7 ff                           	idiv edi
0x804aa93:   35 3a 56 57 1c                  	xor eax, 0x1c57563a
0x804aa98:   89 c2                           	mov edx, eax
0x804aa9a:   83 fa ff                        	cmp edx, -1
0x804aa9d:   0f 93 c0                        	setae al
0x804aaa0:   0f b6 c0                        	movzx eax, al
0x804aaa3:   f7 d8                           	neg eax
0x804aaa5:   29 c2                           	sub edx, eax
0x804aaa7:   89 d0                           	mov eax, edx
0x804aaa9:   85 c0                           	test eax, eax
0x804aaab:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x804aab1:   34 ff                           	xor al, 0xff
0x804aab3:   89 c2                           	mov edx, eax
0x804aab5:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x804aabb:   31 d0                           	xor eax, edx
0x804aabd:   89 85 2c ff ff ff               	mov dword ptr [ebp - 0xd4], eax
0x804aac3:   83 bd 2c ff ff ff 00            	cmp dword ptr [ebp - 0xd4], 0
0x804aaca:   74 0d                           	je 0x804aad9 <func_1+0x1344>
0x804aacc:   80 7d c3 00                     	cmp byte ptr [ebp - 0x3d], 0
0x804aad0:   74 07                           	je 0x804aad9 <func_1+0x1344>
0x804aad2:   b8 01 00 00 00                  	mov eax, 1
0x804aad7:   eb 05                           	jmp 0x804aade <func_1+0x1349>
0x804aad9:   b8 00 00 00 00                  	mov eax, 0
0x804aade:   3d 3d 29 00 00                  	cmp eax, 0x293d
0x804aae3:   74 04                           	je 0x804aae9 <func_1+0x1354>
0x804aae5:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804aae9:   c7 85 bc fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x144], 1
0x804aaf3:   0f be 45 b9                     	movsx eax, byte ptr [ebp - 0x47]
0x804aaf7:   0f b6 4d ba                     	movzx ecx, byte ptr [ebp - 0x46]
0x804aafb:   0f be 75 bb                     	movsx esi, byte ptr [ebp - 0x45]
0x804aaff:   89 b5 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], esi
0x804ab05:   0f b6 7d c2                     	movzx edi, byte ptr [ebp - 0x3e]
0x804ab09:   89 bd 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], edi
0x804ab0f:   0f b6 5d c3                     	movzx ebx, byte ptr [ebp - 0x3d]
0x804ab13:   89 9d 28 fe ff ff               	mov dword ptr [ebp - 0x1d8], ebx
0x804ab19:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x804ab1d:   0f bf 75 d2                     	movsx esi, word ptr [ebp - 0x2e]
0x804ab21:   0f be 5d df                     	movsx ebx, byte ptr [ebp - 0x21]
0x804ab25:   0f b6 55 eb                     	movzx edx, byte ptr [ebp - 0x15]
0x804ab29:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804ab2c:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804ab32:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804ab38:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804ab3e:   50                              	push eax
0x804ab3f:   51                              	push ecx
0x804ab40:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804ab46:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804ab4c:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804ab4f:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804ab55:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804ab58:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x804ab5e:   ff b5 28 fe ff ff               	push dword ptr [ebp - 0x1d8]
0x804ab64:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804ab67:   57                              	push edi
0x804ab68:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804ab6b:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804ab6e:   56                              	push esi
0x804ab6f:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804ab72:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804ab75:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804ab78:   53                              	push ebx
0x804ab79:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804ab7c:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804ab7f:   52                              	push edx
0x804ab80:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804ab83:   e8 9e ea ff ff                  	call 0x8049626 <set_var>
0x804ab88:   83 c4 68                        	add esp, 0x68
0x804ab8b:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804ab8e:   e9 e5 06 00 00                  	jmp 0x804b278 <func_1+0x1ae3>
0x804ab93:   66 c7 85 e2 fe ff ff ff ff      	mov word ptr [ebp - 0x11e], 0xffff
0x804ab9c:   c7 85 dc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x124], 0
0x804aba6:   81 7d a8 aa 00 00 00            	cmp dword ptr [ebp - 0x58], 0xaa
0x804abad:   0f 9f c0                        	setg al
0x804abb0:   0f b6 c0                        	movzx eax, al
0x804abb3:   89 85 2c ff ff ff               	mov dword ptr [ebp - 0xd4], eax
0x804abb9:   66 83 bd e2 fe ff ff 00         	cmp word ptr [ebp - 0x11e], 0
0x804abc1:   0f 84 b4 00 00 00               	je 0x804ac7b <func_1+0x14e6>
0x804abc7:   0f b7 85 f2 fe ff ff            	movzx eax, word ptr [ebp - 0x10e]
0x804abce:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x804abd1:   80 7d df 00                     	cmp byte ptr [ebp - 0x21], 0
0x804abd5:   0f 84 a0 00 00 00               	je 0x804ac7b <func_1+0x14e6>
0x804abdb:   0f be 45 b9                     	movsx eax, byte ptr [ebp - 0x47]
0x804abdf:   0f b6 4d ba                     	movzx ecx, byte ptr [ebp - 0x46]
0x804abe3:   0f be 75 bb                     	movsx esi, byte ptr [ebp - 0x45]
0x804abe7:   89 b5 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], esi
0x804abed:   0f b6 7d c2                     	movzx edi, byte ptr [ebp - 0x3e]
0x804abf1:   89 bd 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], edi
0x804abf7:   0f b6 5d c3                     	movzx ebx, byte ptr [ebp - 0x3d]
0x804abfb:   89 9d 28 fe ff ff               	mov dword ptr [ebp - 0x1d8], ebx
0x804ac01:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x804ac05:   0f bf 75 d2                     	movsx esi, word ptr [ebp - 0x2e]
0x804ac09:   0f be 5d df                     	movsx ebx, byte ptr [ebp - 0x21]
0x804ac0d:   0f b6 55 eb                     	movzx edx, byte ptr [ebp - 0x15]
0x804ac11:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804ac14:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804ac1a:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804ac20:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804ac26:   50                              	push eax
0x804ac27:   51                              	push ecx
0x804ac28:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804ac2e:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804ac34:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804ac37:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804ac3d:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804ac40:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x804ac46:   ff b5 28 fe ff ff               	push dword ptr [ebp - 0x1d8]
0x804ac4c:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804ac4f:   57                              	push edi
0x804ac50:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804ac53:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804ac56:   56                              	push esi
0x804ac57:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804ac5a:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804ac5d:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804ac60:   53                              	push ebx
0x804ac61:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804ac64:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804ac67:   52                              	push edx
0x804ac68:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804ac6b:   e8 b6 e9 ff ff                  	call 0x8049626 <set_var>
0x804ac70:   83 c4 68                        	add esp, 0x68
0x804ac73:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804ac76:   e9 fd 05 00 00                  	jmp 0x804b278 <func_1+0x1ae3>
0x804ac7b:   66 c7 85 da fe ff ff 4e b7      	mov word ptr [ebp - 0x126], 0xb74e
0x804ac84:   0f be 45 df                     	movsx eax, byte ptr [ebp - 0x21]
0x804ac88:   09 45 b0                        	or dword ptr [ebp - 0x50], eax
0x804ac8b:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804ac8e:   0f b7 c0                        	movzx eax, ax
0x804ac91:   ba a7 35 00 00                  	mov edx, 0x35a7
0x804ac96:   89 d1                           	mov ecx, edx
0x804ac98:   d3 f8                           	sar eax, cl
0x804ac9a:   0f b6 d0                        	movzx edx, al
0x804ac9d:   0f b6 85 6b ff ff ff            	movzx eax, byte ptr [ebp - 0x95]
0x804aca4:   0f b6 c0                        	movzx eax, al
0x804aca7:   0f af c2                        	imul eax, edx
0x804acaa:   31 45 d8                        	xor dword ptr [ebp - 0x28], eax
0x804acad:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804acb0:   66 89 85 24 ff ff ff            	mov word ptr [ebp - 0xdc], ax
0x804acb7:   0f b7 85 24 ff ff ff            	movzx eax, word ptr [ebp - 0xdc]
0x804acbe:   98                              	cwde 
0x804acbf:   21 45 d4                        	and dword ptr [ebp - 0x2c], eax
0x804acc2:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804acc5:   0f b7 c0                        	movzx eax, ax
0x804acc8:   c1 e0 02                        	shl eax, 2
0x804accb:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804acce:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x804acd2:   0f 85 bf 02 00 00               	jne 0x804af97 <func_1+0x1802>
0x804acd8:   83 bd 64 ff ff ff 00            	cmp dword ptr [ebp - 0x9c], 0
0x804acdf:   0f 94 c0                        	sete al
0x804ace2:   0f b6 c0                        	movzx eax, al
0x804ace5:   0f b7 b5 f2 fe ff ff            	movzx esi, word ptr [ebp - 0x10e]
0x804acec:   99                              	cdq 
0x804aced:   f7 fe                           	idiv esi
0x804acef:   88 45 bb                        	mov byte ptr [ebp - 0x45], al
0x804acf2:   b8 01 00 00 00                  	mov eax, 1
0x804acf7:   3b 45 f0                        	cmp eax, dword ptr [ebp - 0x10]
0x804acfa:   0f 9c c0                        	setl al
0x804acfd:   0f b6 c0                        	movzx eax, al
0x804ad00:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804ad03:   0f b6 45 c2                     	movzx eax, byte ptr [ebp - 0x3e]
0x804ad07:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804ad0a:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804ad0d:   0f be c0                        	movsx eax, al
0x804ad10:   c1 e0 02                        	shl eax, 2
0x804ad13:   98                              	cwde 
0x804ad14:   0f b6 7d c3                     	movzx edi, byte ptr [ebp - 0x3d]
0x804ad18:   99                              	cdq 
0x804ad19:   f7 ff                           	idiv edi
0x804ad1b:   85 c0                           	test eax, eax
0x804ad1d:   0f 84 45 02 00 00               	je 0x804af68 <func_1+0x17d3>
0x804ad23:   c6 85 a3 fe ff ff 4e            	mov byte ptr [ebp - 0x15d], 0x4e
0x804ad2a:   c7 85 9c fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x164], 0
0x804ad34:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804ad37:   83 f0 01                        	xor eax, 1
0x804ad3a:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804ad3d:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804ad40:   30 45 ba                        	xor byte ptr [ebp - 0x46], al
0x804ad43:   0f b6 55 ba                     	movzx edx, byte ptr [ebp - 0x46]
0x804ad47:   0f b6 45 c2                     	movzx eax, byte ptr [ebp - 0x3e]
0x804ad4b:   89 c1                           	mov ecx, eax
0x804ad4d:   d3 fa                           	sar edx, cl
0x804ad4f:   0f b6 85 a3 fe ff ff            	movzx eax, byte ptr [ebp - 0x15d]
0x804ad56:   39 c2                           	cmp edx, eax
0x804ad58:   0f 9f c0                        	setg al
0x804ad5b:   0f b6 c0                        	movzx eax, al
0x804ad5e:   39 45 80                        	cmp dword ptr [ebp - 0x80], eax
0x804ad61:   0f 95 c0                        	setne al
0x804ad64:   89 c2                           	mov edx, eax
0x804ad66:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804ad69:   29 c2                           	sub edx, eax
0x804ad6b:   89 d0                           	mov eax, edx
0x804ad6d:   0f b6 d0                        	movzx edx, al
0x804ad70:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804ad73:   0f b6 c0                        	movzx eax, al
0x804ad76:   01 d0                           	add eax, edx
0x804ad78:   85 c0                           	test eax, eax
0x804ad7a:   0f 84 d8 01 00 00               	je 0x804af58 <func_1+0x17c3>
0x804ad80:   66 c7 85 98 fe ff ff fd ff      	mov word ptr [ebp - 0x168], 0xfffd
0x804ad89:   c7 85 94 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x16c], 1
0x804ad93:   c7 85 90 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x170], 0xffffffff
0x804ad9d:   0f be 45 df                     	movsx eax, byte ptr [ebp - 0x21]
0x804ada1:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804ada4:   0f be 45 bb                     	movsx eax, byte ptr [ebp - 0x45]
0x804ada8:   39 45 cc                        	cmp dword ptr [ebp - 0x34], eax
0x804adab:   0f 97 c0                        	seta al
0x804adae:   0f b6 c0                        	movzx eax, al
0x804adb1:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x804adb4:   0f 94 c0                        	sete al
0x804adb7:   0f b6 c0                        	movzx eax, al
0x804adba:   8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x804adbd:   0f bf da                        	movsx ebx, dx
0x804adc0:   99                              	cdq 
0x804adc1:   f7 fb                           	idiv ebx
0x804adc3:   85 c0                           	test eax, eax
0x804adc5:   0f 85 f3 00 00 00               	jne 0x804aebe <func_1+0x1729>
0x804adcb:   c6 85 8f fe ff ff e8            	mov byte ptr [ebp - 0x171], 0xe8
0x804add2:   c7 85 88 fe ff ff 5c 0e 4f 79   	mov dword ptr [ebp - 0x178], 0x794f0e5c
0x804addc:   c7 85 84 fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x17c], 2
0x804ade6:   c6 85 8f fe ff ff 00            	mov byte ptr [ebp - 0x171], 0
0x804aded:   66 c7 45 d2 00 00               	mov word ptr [ebp - 0x2e], 0
0x804adf3:   83 ad 74 ff ff ff 01            	sub dword ptr [ebp - 0x8c], 1
0x804adfa:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804ae00:   89 85 9c fe ff ff               	mov dword ptr [ebp - 0x164], eax
0x804ae06:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804ae09:   98                              	cwde 
0x804ae0a:   0f b6 4d c2                     	movzx ecx, byte ptr [ebp - 0x3e]
0x804ae0e:   99                              	cdq 
0x804ae0f:   f7 f9                           	idiv ecx
0x804ae11:   89 55 b0                        	mov dword ptr [ebp - 0x50], edx
0x804ae14:   83 ad 70 ff ff ff 01            	sub dword ptr [ebp - 0x90], 1
0x804ae1b:   0f be 45 b9                     	movsx eax, byte ptr [ebp - 0x47]
0x804ae1f:   0f b6 4d ba                     	movzx ecx, byte ptr [ebp - 0x46]
0x804ae23:   0f be 75 bb                     	movsx esi, byte ptr [ebp - 0x45]
0x804ae27:   89 b5 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], esi
0x804ae2d:   0f b6 7d c2                     	movzx edi, byte ptr [ebp - 0x3e]
0x804ae31:   89 bd 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], edi
0x804ae37:   0f b6 5d c3                     	movzx ebx, byte ptr [ebp - 0x3d]
0x804ae3b:   89 9d 28 fe ff ff               	mov dword ptr [ebp - 0x1d8], ebx
0x804ae41:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x804ae45:   0f bf 75 d2                     	movsx esi, word ptr [ebp - 0x2e]
0x804ae49:   0f be 5d df                     	movsx ebx, byte ptr [ebp - 0x21]
0x804ae4d:   0f b6 55 eb                     	movzx edx, byte ptr [ebp - 0x15]
0x804ae51:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804ae54:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804ae5a:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804ae60:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804ae66:   50                              	push eax
0x804ae67:   51                              	push ecx
0x804ae68:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804ae6e:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804ae74:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804ae77:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804ae7d:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804ae80:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x804ae86:   ff b5 28 fe ff ff               	push dword ptr [ebp - 0x1d8]
0x804ae8c:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804ae8f:   57                              	push edi
0x804ae90:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804ae93:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804ae96:   56                              	push esi
0x804ae97:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804ae9a:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804ae9d:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804aea0:   53                              	push ebx
0x804aea1:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804aea4:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804aea7:   52                              	push edx
0x804aea8:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804aeab:   e8 76 e7 ff ff                  	call 0x8049626 <set_var>
0x804aeb0:   83 c4 68                        	add esp, 0x68
0x804aeb3:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804aeb9:   e9 ba 03 00 00                  	jmp 0x804b278 <func_1+0x1ae3>
0x804aebe:   66 83 bd 98 fe ff ff 00         	cmp word ptr [ebp - 0x168], 0
0x804aec6:   74 42                           	je 0x804af0a <func_1+0x1775>
0x804aec8:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x804aecc:   75 26                           	jne 0x804aef4 <func_1+0x175f>
0x804aece:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804aed1:   89 85 9c fe ff ff               	mov dword ptr [ebp - 0x164], eax
0x804aed7:   8b 85 9c fe ff ff               	mov eax, dword ptr [ebp - 0x164]
0x804aedd:   3b 45 b0                        	cmp eax, dword ptr [ebp - 0x50]
0x804aee0:   0f 9f c0                        	setg al
0x804aee3:   0f b6 c0                        	movzx eax, al
0x804aee6:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x804aee9:   0f 95 c0                        	setne al
0x804aeec:   0f b6 c0                        	movzx eax, al
0x804aeef:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804aef2:   72 07                           	jb 0x804aefb <func_1+0x1766>
0x804aef4:   b8 01 00 00 00                  	mov eax, 1
0x804aef9:   eb 05                           	jmp 0x804af00 <func_1+0x176b>
0x804aefb:   b8 00 00 00 00                  	mov eax, 0
0x804af00:   88 45 b9                        	mov byte ptr [ebp - 0x47], al
0x804af03:   b8 01 00 00 00                  	mov eax, 1
0x804af08:   eb 05                           	jmp 0x804af0f <func_1+0x177a>
0x804af0a:   b8 00 00 00 00                  	mov eax, 0
0x804af0f:   0f b6 b5 a3 fe ff ff            	movzx esi, byte ptr [ebp - 0x15d]
0x804af16:   99                              	cdq 
0x804af17:   f7 fe                           	idiv esi
0x804af19:   31 45 8c                        	xor dword ptr [ebp - 0x74], eax
0x804af1c:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804af1f:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804af22:   0f b7 85 22 ff ff ff            	movzx eax, word ptr [ebp - 0xde]
0x804af29:   83 c0 01                        	add eax, 1
0x804af2c:   66 89 85 22 ff ff ff            	mov word ptr [ebp - 0xde], ax
0x804af33:   80 7d b9 00                     	cmp byte ptr [ebp - 0x47], 0
0x804af37:   0f 94 c0                        	sete al
0x804af3a:   0f b6 d0                        	movzx edx, al
0x804af3d:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x804af41:   39 c2                           	cmp edx, eax
0x804af43:   0f 94 c0                        	sete al
0x804af46:   0f b6 c0                        	movzx eax, al
0x804af49:   33 85 74 ff ff ff               	xor eax, dword ptr [ebp - 0x8c]
0x804af4f:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804af52:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x804af56:   eb 29                           	jmp 0x804af81 <func_1+0x17ec>
0x804af58:   c6 85 9b fe ff ff 01            	mov byte ptr [ebp - 0x165], 1
0x804af5f:   80 85 9b fe ff ff 01            	add byte ptr [ebp - 0x165], 1
0x804af66:   eb 19                           	jmp 0x804af81 <func_1+0x17ec>
0x804af68:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804af6b:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804af6e:   83 7d 84 01                     	cmp dword ptr [ebp - 0x7c], 1
0x804af72:   0f 94 c0                        	sete al
0x804af75:   0f b6 c0                        	movzx eax, al
0x804af78:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804af7b:   eb 04                           	jmp 0x804af81 <func_1+0x17ec>
0x804af7d:   90                              	nop 
0x804af7e:   eb 01                           	jmp 0x804af81 <func_1+0x17ec>
0x804af80:   90                              	nop 
0x804af81:   83 6d ec 01                     	sub dword ptr [ebp - 0x14], 1
0x804af85:   83 7d ec ea                     	cmp dword ptr [ebp - 0x14], -0x16
0x804af89:   0f 85 3a e9 ff ff               	jne 0x80498c9 <func_1+0x134>
0x804af8f:   eb 07                           	jmp 0x804af98 <func_1+0x1803>
0x804af91:   90                              	nop 
0x804af92:   eb 04                           	jmp 0x804af98 <func_1+0x1803>
0x804af94:   90                              	nop 
0x804af95:   eb 01                           	jmp 0x804af98 <func_1+0x1803>
0x804af97:   90                              	nop 
0x804af98:   c6 45 cb 00                     	mov byte ptr [ebp - 0x35], 0
0x804af9c:   e9 2e 02 00 00                  	jmp 0x804b1cf <func_1+0x1a3a>
0x804afa1:   c7 85 58 fe ff ff f7 ff ff ff   	mov dword ptr [ebp - 0x1a8], 0xfffffff7
0x804afab:   c7 85 54 fe ff ff ed ce 92 d7   	mov dword ptr [ebp - 0x1ac], 0xd792ceed
0x804afb5:   c6 85 53 fe ff ff fa            	mov byte ptr [ebp - 0x1ad], 0xfa
0x804afbc:   c7 85 4c fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x1b4], 1
0x804afc6:   c7 85 48 fe ff ff ee b4 73 f8   	mov dword ptr [ebp - 0x1b8], 0xf873b4ee
0x804afd0:   c7 85 44 fe ff ff 06 f7 d5 55   	mov dword ptr [ebp - 0x1bc], 0x55d5f706
0x804afda:   81 7d a8 8a 00 00 00            	cmp dword ptr [ebp - 0x58], 0x8a
0x804afe1:   c7 45 d4 ff ff ff ff            	mov dword ptr [ebp - 0x2c], 0xffffffff
0x804afe8:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804afeb:   3b 85 58 fe ff ff               	cmp eax, dword ptr [ebp - 0x1a8]
0x804aff1:   0f 9f c0                        	setg al
0x804aff4:   0f b6 c0                        	movzx eax, al
0x804aff7:   89 85 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], eax
0x804affd:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804b000:   83 f0 f8                        	xor eax, 0xfffffff8
0x804b003:   0f be c8                        	movsx ecx, al
0x804b006:   b8 f8 ff ff ff                  	mov eax, 0xfffffff8
0x804b00b:   99                              	cdq 
0x804b00c:   f7 f9                           	idiv ecx
0x804b00e:   89 d0                           	mov eax, edx
0x804b010:   85 c0                           	test eax, eax
0x804b012:   75 04                           	jne 0x804b018 <func_1+0x1883>
0x804b014:   80 7d ba 00                     	cmp byte ptr [ebp - 0x46], 0
0x804b018:   90                              	nop 
0x804b019:   8b 85 58 fe ff ff               	mov eax, dword ptr [ebp - 0x1a8]
0x804b01f:   66 09 45 d2                     	or word ptr [ebp - 0x2e], ax
0x804b023:   0f be 45 bb                     	movsx eax, byte ptr [ebp - 0x45]
0x804b027:   35 5f f8 ff ff                  	xor eax, 0xfffff85f
0x804b02c:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804b02f:   0f be 85 6b ff ff ff            	movsx eax, byte ptr [ebp - 0x95]
0x804b036:   2b 45 a4                        	sub eax, dword ptr [ebp - 0x5c]
0x804b039:   8b 8d 54 fe ff ff               	mov ecx, dword ptr [ebp - 0x1ac]
0x804b03f:   ba 00 00 00 00                  	mov edx, 0
0x804b044:   f7 f1                           	div ecx
0x804b046:   89 d0                           	mov eax, edx
0x804b048:   66 89 45 d2                     	mov word ptr [ebp - 0x2e], ax
0x804b04c:   83 bd 54 fe ff ff 00            	cmp dword ptr [ebp - 0x1ac], 0
0x804b053:   0f 94 c0                        	sete al
0x804b056:   0f b6 c0                        	movzx eax, al
0x804b059:   83 75 f0 02                     	xor dword ptr [ebp - 0x10], 2
0x804b05d:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804b060:   83 7d e0 fa                     	cmp dword ptr [ebp - 0x20], -6
0x804b064:   0f 97 c0                        	seta al
0x804b067:   0f b6 c0                        	movzx eax, al
0x804b06a:   89 c2                           	mov edx, eax
0x804b06c:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804b070:   31 d0                           	xor eax, edx
0x804b072:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x804b075:   80 7d eb fb                     	cmp byte ptr [ebp - 0x15], 0xfb
0x804b079:   0f 97 c0                        	seta al
0x804b07c:   0f b6 c0                        	movzx eax, al
0x804b07f:   89 c2                           	mov edx, eax
0x804b081:   8b 85 58 fe ff ff               	mov eax, dword ptr [ebp - 0x1a8]
0x804b087:   66 39 c2                        	cmp dx, ax
0x804b08a:   0f 84 90 00 00 00               	je 0x804b120 <func_1+0x198b>
0x804b090:   c7 85 40 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x1c0], 0xffffffff
0x804b09a:   c7 85 3c fe ff ff be 7c e8 d7   	mov dword ptr [ebp - 0x1c4], 0xd7e87cbe
0x804b0a4:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804b0a7:   0f bf d0                        	movsx edx, ax
0x804b0aa:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804b0b0:   83 e0 01                        	and eax, 1
0x804b0b3:   89 c1                           	mov ecx, eax
0x804b0b5:   0f be 45 b9                     	movsx eax, byte ptr [ebp - 0x47]
0x804b0b9:   39 c1                           	cmp ecx, eax
0x804b0bb:   0f 93 c0                        	setae al
0x804b0be:   0f b6 c0                        	movzx eax, al
0x804b0c1:   01 d0                           	add eax, edx
0x804b0c3:   3d cd 00 00 00                  	cmp eax, 0xcd
0x804b0c8:   74 07                           	je 0x804b0d1 <func_1+0x193c>
0x804b0ca:   ba 3b 00 00 00                  	mov edx, 0x3b
0x804b0cf:   eb 05                           	jmp 0x804b0d6 <func_1+0x1941>
0x804b0d1:   ba 3a 00 00 00                  	mov edx, 0x3a
0x804b0d6:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804b0dc:   0f b6 c0                        	movzx eax, al
0x804b0df:   29 c2                           	sub edx, eax
0x804b0e1:   89 d0                           	mov eax, edx
0x804b0e3:   66 89 45 d2                     	mov word ptr [ebp - 0x2e], ax
0x804b0e7:   0f bf 55 d2                     	movsx edx, word ptr [ebp - 0x2e]
0x804b0eb:   8b 85 54 fe ff ff               	mov eax, dword ptr [ebp - 0x1ac]
0x804b0f1:   98                              	cwde 
0x804b0f2:   29 c2                           	sub edx, eax
0x804b0f4:   89 d0                           	mov eax, edx
0x804b0f6:   89 85 40 fe ff ff               	mov dword ptr [ebp - 0x1c0], eax
0x804b0fc:   0f b6 55 cb                     	movzx edx, byte ptr [ebp - 0x35]
0x804b100:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804b103:   98                              	cwde 
0x804b104:   0f af c2                        	imul eax, edx
0x804b107:   88 85 53 fe ff ff               	mov byte ptr [ebp - 0x1ad], al
0x804b10d:   80 7d c3 00                     	cmp byte ptr [ebp - 0x3d], 0
0x804b111:   0f 85 c4 00 00 00               	jne 0x804b1db <func_1+0x1a46>
0x804b117:   83 45 b4 01                     	add dword ptr [ebp - 0x4c], 1
0x804b11b:   e9 ab 00 00 00                  	jmp 0x804b1cb <func_1+0x1a36>
0x804b120:   0f b6 45 cb                     	movzx eax, byte ptr [ebp - 0x35]
0x804b124:   89 85 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], eax
0x804b12a:   0f be 45 b9                     	movsx eax, byte ptr [ebp - 0x47]
0x804b12e:   0f b6 4d ba                     	movzx ecx, byte ptr [ebp - 0x46]
0x804b132:   0f be 75 bb                     	movsx esi, byte ptr [ebp - 0x45]
0x804b136:   89 b5 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], esi
0x804b13c:   0f b6 7d c2                     	movzx edi, byte ptr [ebp - 0x3e]
0x804b140:   89 bd 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], edi
0x804b146:   0f b6 5d c3                     	movzx ebx, byte ptr [ebp - 0x3d]
0x804b14a:   89 9d 28 fe ff ff               	mov dword ptr [ebp - 0x1d8], ebx
0x804b150:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x804b154:   0f bf 75 d2                     	movsx esi, word ptr [ebp - 0x2e]
0x804b158:   0f be 5d df                     	movsx ebx, byte ptr [ebp - 0x21]
0x804b15c:   0f b6 55 eb                     	movzx edx, byte ptr [ebp - 0x15]
0x804b160:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804b163:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804b169:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804b16f:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804b175:   50                              	push eax
0x804b176:   51                              	push ecx
0x804b177:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804b17d:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804b183:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804b186:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804b18c:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804b18f:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x804b195:   ff b5 28 fe ff ff               	push dword ptr [ebp - 0x1d8]
0x804b19b:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804b19e:   57                              	push edi
0x804b19f:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804b1a2:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804b1a5:   56                              	push esi
0x804b1a6:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804b1a9:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804b1ac:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804b1af:   53                              	push ebx
0x804b1b0:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804b1b3:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804b1b6:   52                              	push edx
0x804b1b7:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804b1ba:   e8 67 e4 ff ff                  	call 0x8049626 <set_var>
0x804b1bf:   83 c4 68                        	add esp, 0x68
0x804b1c2:   0f b6 45 ba                     	movzx eax, byte ptr [ebp - 0x46]
0x804b1c6:   e9 ad 00 00 00                  	jmp 0x804b278 <func_1+0x1ae3>
0x804b1cb:   80 45 cb 09                     	add byte ptr [ebp - 0x35], 9
0x804b1cf:   80 7d cb 27                     	cmp byte ptr [ebp - 0x35], 0x27
0x804b1d3:   0f 86 c8 fd ff ff               	jbe 0x804afa1 <func_1+0x180c>
0x804b1d9:   eb 01                           	jmp 0x804b1dc <func_1+0x1a47>
0x804b1db:   90                              	nop 
0x804b1dc:   0f be 45 b9                     	movsx eax, byte ptr [ebp - 0x47]
0x804b1e0:   0f b6 4d ba                     	movzx ecx, byte ptr [ebp - 0x46]
0x804b1e4:   0f be 75 bb                     	movsx esi, byte ptr [ebp - 0x45]
0x804b1e8:   89 b5 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], esi
0x804b1ee:   0f b6 7d c2                     	movzx edi, byte ptr [ebp - 0x3e]
0x804b1f2:   89 bd 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], edi
0x804b1f8:   0f b6 5d c3                     	movzx ebx, byte ptr [ebp - 0x3d]
0x804b1fc:   89 9d 28 fe ff ff               	mov dword ptr [ebp - 0x1d8], ebx
0x804b202:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x804b206:   0f bf 75 d2                     	movsx esi, word ptr [ebp - 0x2e]
0x804b20a:   0f be 5d df                     	movsx ebx, byte ptr [ebp - 0x21]
0x804b20e:   0f b6 55 eb                     	movzx edx, byte ptr [ebp - 0x15]
0x804b212:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804b215:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804b21b:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804b221:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804b227:   50                              	push eax
0x804b228:   51                              	push ecx
0x804b229:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804b22f:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804b235:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804b238:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804b23e:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804b241:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x804b247:   ff b5 28 fe ff ff               	push dword ptr [ebp - 0x1d8]
0x804b24d:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804b250:   57                              	push edi
0x804b251:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804b254:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804b257:   56                              	push esi
0x804b258:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804b25b:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804b25e:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804b261:   53                              	push ebx
0x804b262:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804b265:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804b268:   52                              	push edx
0x804b269:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804b26c:   e8 b5 e3 ff ff                  	call 0x8049626 <set_var>
0x804b271:   83 c4 68                        	add esp, 0x68
0x804b274:   0f be 45 b9                     	movsx eax, byte ptr [ebp - 0x47]
0x804b278:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804b27b:   5b                              	pop ebx
0x804b27c:   5e                              	pop esi
0x804b27d:   5f                              	pop edi
0x804b27e:   5d                              	pop ebp
0x804b27f:   c3                              	ret 
; function: main at 0x804b280 -- 0x804b610
0x804b280:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804b284:   83 e4 f0                        	and esp, 0xfffffff0
0x804b287:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804b28a:   55                              	push ebp
0x804b28b:   89 e5                           	mov ebp, esp
0x804b28d:   53                              	push ebx
0x804b28e:   51                              	push ecx
0x804b28f:   83 ec 10                        	sub esp, 0x10
0x804b292:   e8 f9 d0 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b297:   81 c3 69 2d 00 00               	add ebx, 0x2d69
0x804b29d:   89 c8                           	mov eax, ecx
0x804b29f:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804b2a6:   83 38 02                        	cmp dword ptr [eax], 2
0x804b2a9:   75 26                           	jne 0x804b2d1 <main+0x51>
0x804b2ab:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804b2ae:   83 c0 04                        	add eax, 4
0x804b2b1:   8b 00                           	mov eax, dword ptr [eax]
0x804b2b3:   83 ec 08                        	sub esp, 8
0x804b2b6:   8d 93 f8 d6 ff ff               	lea edx, [ebx - 0x2908]
0x804b2bc:   52                              	push edx
0x804b2bd:   50                              	push eax
0x804b2be:   e8 3d d0 ff ff                  	call 0x8048300 <strcmp>
0x804b2c3:   83 c4 10                        	add esp, 0x10
0x804b2c6:   85 c0                           	test eax, eax
0x804b2c8:   75 07                           	jne 0x804b2d1 <main+0x51>
0x804b2ca:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804b2d1:   e8 80 d1 ff ff                  	call 0x8048456 <platform_main_begin>
0x804b2d6:   e8 90 e1 ff ff                  	call 0x804946b <crc32_gentab>
0x804b2db:   e8 b5 e4 ff ff                  	call 0x8049795 <func_1>
0x804b2e0:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804b2e6:   89 c2                           	mov edx, eax
0x804b2e8:   83 ec 04                        	sub esp, 4
0x804b2eb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b2ee:   8d 83 fa d6 ff ff               	lea eax, [ebx - 0x2906]
0x804b2f4:   50                              	push eax
0x804b2f5:   52                              	push edx
0x804b2f6:   e8 7c e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b2fb:   83 c4 10                        	add esp, 0x10
0x804b2fe:   0f b6 83 28 00 00 00            	movzx eax, byte ptr [ebx + 0x28]
0x804b305:   0f b6 c0                        	movzx eax, al
0x804b308:   83 ec 04                        	sub esp, 4
0x804b30b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b30e:   8d 93 fe d6 ff ff               	lea edx, [ebx - 0x2902]
0x804b314:   52                              	push edx
0x804b315:   50                              	push eax
0x804b316:   e8 5c e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b31b:   83 c4 10                        	add esp, 0x10
0x804b31e:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804b324:   83 ec 04                        	sub esp, 4
0x804b327:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b32a:   8d 93 03 d7 ff ff               	lea edx, [ebx - 0x28fd]
0x804b330:   52                              	push edx
0x804b331:   50                              	push eax
0x804b332:   e8 40 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b337:   83 c4 10                        	add esp, 0x10
0x804b33a:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804b340:   83 ec 04                        	sub esp, 4
0x804b343:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b346:   8d 93 08 d7 ff ff               	lea edx, [ebx - 0x28f8]
0x804b34c:   52                              	push edx
0x804b34d:   50                              	push eax
0x804b34e:   e8 24 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b353:   83 c4 10                        	add esp, 0x10
0x804b356:   0f b6 83 34 00 00 00            	movzx eax, byte ptr [ebx + 0x34]
0x804b35d:   0f be c0                        	movsx eax, al
0x804b360:   83 ec 04                        	sub esp, 4
0x804b363:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b366:   8d 93 0d d7 ff ff               	lea edx, [ebx - 0x28f3]
0x804b36c:   52                              	push edx
0x804b36d:   50                              	push eax
0x804b36e:   e8 04 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b373:   83 c4 10                        	add esp, 0x10
0x804b376:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804b37c:   83 ec 04                        	sub esp, 4
0x804b37f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b382:   8d 93 12 d7 ff ff               	lea edx, [ebx - 0x28ee]
0x804b388:   52                              	push edx
0x804b389:   50                              	push eax
0x804b38a:   e8 e8 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b38f:   83 c4 10                        	add esp, 0x10
0x804b392:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804b398:   89 c2                           	mov edx, eax
0x804b39a:   83 ec 04                        	sub esp, 4
0x804b39d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b3a0:   8d 83 17 d7 ff ff               	lea eax, [ebx - 0x28e9]
0x804b3a6:   50                              	push eax
0x804b3a7:   52                              	push edx
0x804b3a8:   e8 ca e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b3ad:   83 c4 10                        	add esp, 0x10
0x804b3b0:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804b3b6:   89 c2                           	mov edx, eax
0x804b3b8:   83 ec 04                        	sub esp, 4
0x804b3bb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b3be:   8d 83 1c d7 ff ff               	lea eax, [ebx - 0x28e4]
0x804b3c4:   50                              	push eax
0x804b3c5:   52                              	push edx
0x804b3c6:   e8 ac e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b3cb:   83 c4 10                        	add esp, 0x10
0x804b3ce:   0f b7 83 44 00 00 00            	movzx eax, word ptr [ebx + 0x44]
0x804b3d5:   98                              	cwde 
0x804b3d6:   83 ec 04                        	sub esp, 4
0x804b3d9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b3dc:   8d 93 22 d7 ff ff               	lea edx, [ebx - 0x28de]
0x804b3e2:   52                              	push edx
0x804b3e3:   50                              	push eax
0x804b3e4:   e8 8e e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b3e9:   83 c4 10                        	add esp, 0x10
0x804b3ec:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804b3f2:   89 c2                           	mov edx, eax
0x804b3f4:   83 ec 04                        	sub esp, 4
0x804b3f7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b3fa:   8d 83 28 d7 ff ff               	lea eax, [ebx - 0x28d8]
0x804b400:   50                              	push eax
0x804b401:   52                              	push edx
0x804b402:   e8 70 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b407:   83 c4 10                        	add esp, 0x10
0x804b40a:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804b410:   83 ec 04                        	sub esp, 4
0x804b413:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b416:   8d 93 2e d7 ff ff               	lea edx, [ebx - 0x28d2]
0x804b41c:   52                              	push edx
0x804b41d:   50                              	push eax
0x804b41e:   e8 54 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b423:   83 c4 10                        	add esp, 0x10
0x804b426:   0f b6 83 50 00 00 00            	movzx eax, byte ptr [ebx + 0x50]
0x804b42d:   0f b6 c0                        	movzx eax, al
0x804b430:   83 ec 04                        	sub esp, 4
0x804b433:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b436:   8d 93 34 d7 ff ff               	lea edx, [ebx - 0x28cc]
0x804b43c:   52                              	push edx
0x804b43d:   50                              	push eax
0x804b43e:   e8 34 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b443:   83 c4 10                        	add esp, 0x10
0x804b446:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804b44c:   83 ec 04                        	sub esp, 4
0x804b44f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b452:   8d 93 3a d7 ff ff               	lea edx, [ebx - 0x28c6]
0x804b458:   52                              	push edx
0x804b459:   50                              	push eax
0x804b45a:   e8 18 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b45f:   83 c4 10                        	add esp, 0x10
0x804b462:   0f b6 83 58 00 00 00            	movzx eax, byte ptr [ebx + 0x58]
0x804b469:   0f b6 c0                        	movzx eax, al
0x804b46c:   83 ec 04                        	sub esp, 4
0x804b46f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b472:   8d 93 40 d7 ff ff               	lea edx, [ebx - 0x28c0]
0x804b478:   52                              	push edx
0x804b479:   50                              	push eax
0x804b47a:   e8 f8 e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b47f:   83 c4 10                        	add esp, 0x10
0x804b482:   0f b6 83 59 00 00 00            	movzx eax, byte ptr [ebx + 0x59]
0x804b489:   0f b6 c0                        	movzx eax, al
0x804b48c:   83 ec 04                        	sub esp, 4
0x804b48f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b492:   8d 93 46 d7 ff ff               	lea edx, [ebx - 0x28ba]
0x804b498:   52                              	push edx
0x804b499:   50                              	push eax
0x804b49a:   e8 d8 e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b49f:   83 c4 10                        	add esp, 0x10
0x804b4a2:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804b4a8:   89 c2                           	mov edx, eax
0x804b4aa:   83 ec 04                        	sub esp, 4
0x804b4ad:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b4b0:   8d 83 4c d7 ff ff               	lea eax, [ebx - 0x28b4]
0x804b4b6:   50                              	push eax
0x804b4b7:   52                              	push edx
0x804b4b8:   e8 ba e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b4bd:   83 c4 10                        	add esp, 0x10
0x804b4c0:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804b4c6:   89 c2                           	mov edx, eax
0x804b4c8:   83 ec 04                        	sub esp, 4
0x804b4cb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b4ce:   8d 83 52 d7 ff ff               	lea eax, [ebx - 0x28ae]
0x804b4d4:   50                              	push eax
0x804b4d5:   52                              	push edx
0x804b4d6:   e8 9c e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b4db:   83 c4 10                        	add esp, 0x10
0x804b4de:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804b4e4:   89 c2                           	mov edx, eax
0x804b4e6:   83 ec 04                        	sub esp, 4
0x804b4e9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b4ec:   8d 83 58 d7 ff ff               	lea eax, [ebx - 0x28a8]
0x804b4f2:   50                              	push eax
0x804b4f3:   52                              	push edx
0x804b4f4:   e8 7e e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b4f9:   83 c4 10                        	add esp, 0x10
0x804b4fc:   0f b6 83 68 00 00 00            	movzx eax, byte ptr [ebx + 0x68]
0x804b503:   0f be c0                        	movsx eax, al
0x804b506:   83 ec 04                        	sub esp, 4
0x804b509:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b50c:   8d 93 5e d7 ff ff               	lea edx, [ebx - 0x28a2]
0x804b512:   52                              	push edx
0x804b513:   50                              	push eax
0x804b514:   e8 5e e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b519:   83 c4 10                        	add esp, 0x10
0x804b51c:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804b522:   83 ec 04                        	sub esp, 4
0x804b525:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b528:   8d 93 64 d7 ff ff               	lea edx, [ebx - 0x289c]
0x804b52e:   52                              	push edx
0x804b52f:   50                              	push eax
0x804b530:   e8 42 e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b535:   83 c4 10                        	add esp, 0x10
0x804b538:   0f b6 83 70 00 00 00            	movzx eax, byte ptr [ebx + 0x70]
0x804b53f:   0f b6 c0                        	movzx eax, al
0x804b542:   83 ec 04                        	sub esp, 4
0x804b545:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b548:   8d 93 6a d7 ff ff               	lea edx, [ebx - 0x2896]
0x804b54e:   52                              	push edx
0x804b54f:   50                              	push eax
0x804b550:   e8 22 e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b555:   83 c4 10                        	add esp, 0x10
0x804b558:   0f b6 83 71 00 00 00            	movzx eax, byte ptr [ebx + 0x71]
0x804b55f:   0f be c0                        	movsx eax, al
0x804b562:   83 ec 04                        	sub esp, 4
0x804b565:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b568:   8d 93 70 d7 ff ff               	lea edx, [ebx - 0x2890]
0x804b56e:   52                              	push edx
0x804b56f:   50                              	push eax
0x804b570:   e8 02 e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b575:   83 c4 10                        	add esp, 0x10
0x804b578:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804b57e:   83 ec 04                        	sub esp, 4
0x804b581:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b584:   8d 93 76 d7 ff ff               	lea edx, [ebx - 0x288a]
0x804b58a:   52                              	push edx
0x804b58b:   50                              	push eax
0x804b58c:   e8 e6 df ff ff                  	call 0x8049577 <transparent_crc>
0x804b591:   83 c4 10                        	add esp, 0x10
0x804b594:   8b 83 78 00 00 00               	mov eax, dword ptr [ebx + 0x78]
0x804b59a:   83 ec 04                        	sub esp, 4
0x804b59d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b5a0:   8d 93 7c d7 ff ff               	lea edx, [ebx - 0x2884]
0x804b5a6:   52                              	push edx
0x804b5a7:   50                              	push eax
0x804b5a8:   e8 ca df ff ff                  	call 0x8049577 <transparent_crc>
0x804b5ad:   83 c4 10                        	add esp, 0x10
0x804b5b0:   8b 83 7c 00 00 00               	mov eax, dword ptr [ebx + 0x7c]
0x804b5b6:   89 c2                           	mov edx, eax
0x804b5b8:   83 ec 04                        	sub esp, 4
0x804b5bb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b5be:   8d 83 82 d7 ff ff               	lea eax, [ebx - 0x287e]
0x804b5c4:   50                              	push eax
0x804b5c5:   52                              	push edx
0x804b5c6:   e8 ac df ff ff                  	call 0x8049577 <transparent_crc>
0x804b5cb:   83 c4 10                        	add esp, 0x10
0x804b5ce:   8b 83 a4 04 00 00               	mov eax, dword ptr [ebx + 0x4a4]
0x804b5d4:   83 ec 04                        	sub esp, 4
0x804b5d7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b5da:   8d 93 88 d7 ff ff               	lea edx, [ebx - 0x2878]
0x804b5e0:   52                              	push edx
0x804b5e1:   50                              	push eax
0x804b5e2:   e8 90 df ff ff                  	call 0x8049577 <transparent_crc>
0x804b5e7:   83 c4 10                        	add esp, 0x10
0x804b5ea:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b5f0:   f7 d0                           	not eax
0x804b5f2:   83 ec 08                        	sub esp, 8
0x804b5f5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b5f8:   50                              	push eax
0x804b5f9:   e8 68 ce ff ff                  	call 0x8048466 <platform_main_end>
0x804b5fe:   83 c4 10                        	add esp, 0x10
0x804b601:   b8 00 00 00 00                  	mov eax, 0
0x804b606:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b609:   59                              	pop ecx
0x804b60a:   5b                              	pop ebx
0x804b60b:   5d                              	pop ebp
0x804b60c:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b60f:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b610 -- 0x804b614
0x804b610:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b613:   c3                              	ret 
; data inside code section at 0x804b614 -- 0x804b620
0x804b614:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: __libc_csu_init at 0x804b620 -- 0x804b67d
0x804b620:   55                              	push ebp
0x804b621:   57                              	push edi
0x804b622:   56                              	push esi
0x804b623:   53                              	push ebx
0x804b624:   e8 67 cd ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b629:   81 c3 d7 29 00 00               	add ebx, 0x29d7
0x804b62f:   83 ec 0c                        	sub esp, 0xc
0x804b632:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b636:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b63c:   e8 8b cc ff ff                  	call 0x80482cc <_init>
0x804b641:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b647:   29 c6                           	sub esi, eax
0x804b649:   c1 fe 02                        	sar esi, 2
0x804b64c:   85 f6                           	test esi, esi
0x804b64e:   74 25                           	je 0x804b675 <__libc_csu_init+0x55>
0x804b650:   31 ff                           	xor edi, edi
0x804b652:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b658:   83 ec 04                        	sub esp, 4
0x804b65b:   55                              	push ebp
0x804b65c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b660:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b664:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b66b:   83 c7 01                        	add edi, 1
0x804b66e:   83 c4 10                        	add esp, 0x10
0x804b671:   39 fe                           	cmp esi, edi
0x804b673:   75 e3                           	jne 0x804b658 <__libc_csu_init+0x38>
0x804b675:   83 c4 0c                        	add esp, 0xc
0x804b678:   5b                              	pop ebx
0x804b679:   5e                              	pop esi
0x804b67a:   5f                              	pop edi
0x804b67b:   5d                              	pop ebp
0x804b67c:   c3                              	ret 
; data inside code section at 0x804b67d -- 0x804b680
0x804b67d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b680 -- 0x804b682
0x804b680:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b684 -- 0x804b698
0x804b684:   53                              	push ebx
0x804b685:   83 ec 08                        	sub esp, 8
0x804b688:   e8 03 cd ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b68d:   81 c3 73 29 00 00               	add ebx, 0x2973
0x804b693:   83 c4 08                        	add esp, 8
0x804b696:   5b                              	pop ebx
0x804b697:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 9c b6 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b698:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b6a8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b6b8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b6c8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b6d8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b6e8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b6f8:   31 00 67 5f 32 00 67 5f  31 31 00 67 5f 32 36 00   |1.g_2.g_11.g_26.|
0x804b708:   67 5f 33 30 00 67 5f 35  30 00 67 5f 35 39 00 67   |g_30.g_50.g_59.g|
0x804b718:   5f 37 32 00 67 5f 31 34  37 00 67 5f 31 36 34 00   |_72.g_147.g_164.|
0x804b728:   67 5f 31 37 33 00 67 5f  31 37 35 00 67 5f 31 38   |g_173.g_175.g_18|
0x804b738:   35 00 67 5f 32 34 33 00  67 5f 32 37 37 00 67 5f   |5.g_243.g_277.g_|
0x804b748:   32 39 32 00 67 5f 33 37  36 00 67 5f 33 37 37 00   |292.g_376.g_377.|
0x804b758:   67 5f 33 37 38 00 67 5f  33 37 39 00 67 5f 33 38   |g_378.g_379.g_38|
0x804b768:   30 00 67 5f 34 33 30 00  67 5f 34 35 34 00 67 5f   |0.g_430.g_454.g_|
0x804b778:   34 35 36 00 67 5f 34 36  34 00 67 5f 35 33 32 00   |456.g_464.g_532.|
0x804b788:   67 5f 35 33 33 00 00 00  00 00 00 3f ff ff ff 7e   |g_533......?...~|
0x804b798:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x804b7a8:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x804b7b8:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804b7c8:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804b7d8:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804b7e8:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804b7f8:   01                                                 |.               |
; section: .eh_frame_hdr
0x804b7f8:   01 1b 03 3b b0 02 00 00  55 00 00 00 f8 ca ff ff   |...;....U.......|
0x804b808:   e0 02 00 00 38 cb ff ff  04 03 00 00 88 cb ff ff   |....8...........|
0x804b818:   cc 02 00 00 5e cc ff ff  18 03 00 00 6e cc ff ff   |....^.......n...|
0x804b828:   38 03 00 00 9c cc ff ff  5c 03 00 00 ba cc ff ff   |8.......\.......|
0x804b838:   7c 03 00 00 e2 cc ff ff  9c 03 00 00 0c cd ff ff   ||...............|
0x804b848:   bc 03 00 00 35 cd ff ff  dc 03 00 00 78 cd ff ff   |....5.......x...|
0x804b858:   fc 03 00 00 b9 cd ff ff  1c 04 00 00 11 ce ff ff   |................|
0x804b868:   40 04 00 00 63 ce ff ff  64 04 00 00 a0 ce ff ff   |@...c...d.......|
0x804b878:   84 04 00 00 d7 ce ff ff  a4 04 00 00 f6 ce ff ff   |................|
0x804b888:   c4 04 00 00 20 cf ff ff  e4 04 00 00 4c cf ff ff   |.... .......L...|
0x804b898:   04 05 00 00 77 cf ff ff  24 05 00 00 c0 cf ff ff   |....w...$.......|
0x804b8a8:   44 05 00 00 07 d0 ff ff  64 05 00 00 61 d0 ff ff   |D.......d...a...|
0x804b8b8:   88 05 00 00 b5 d0 ff ff  ac 05 00 00 f4 d0 ff ff   |................|
0x804b8c8:   cc 05 00 00 2d d1 ff ff  ec 05 00 00 4f d1 ff ff   |....-.......O...|
0x804b8d8:   0c 06 00 00 9d d1 ff ff  2c 06 00 00 d9 d1 ff ff   |........,.......|
0x804b8e8:   4c 06 00 00 62 d2 ff ff  6c 06 00 00 94 d2 ff ff   |L...b...l.......|
0x804b8f8:   8c 06 00 00 c4 d2 ff ff  ac 06 00 00 09 d3 ff ff   |................|
0x804b908:   cc 06 00 00 48 d3 ff ff  ec 06 00 00 7a d3 ff ff   |....H.......z...|
0x804b918:   0c 07 00 00 a6 d3 ff ff  2c 07 00 00 c4 d3 ff ff   |........,.......|
0x804b928:   4c 07 00 00 ec d3 ff ff  6c 07 00 00 11 d4 ff ff   |L.......l.......|
0x804b938:   8c 07 00 00 36 d4 ff ff  ac 07 00 00 6d d4 ff ff   |....6.......m...|
0x804b948:   cc 07 00 00 a1 d4 ff ff  ec 07 00 00 f3 d4 ff ff   |................|
0x804b958:   10 08 00 00 3f d5 ff ff  34 08 00 00 76 d5 ff ff   |....?...4...v...|
0x804b968:   54 08 00 00 a7 d5 ff ff  74 08 00 00 c6 d5 ff ff   |T.......t.......|
0x804b978:   94 08 00 00 f0 d5 ff ff  b4 08 00 00 18 d6 ff ff   |................|
0x804b988:   d4 08 00 00 41 d6 ff ff  f4 08 00 00 7d d6 ff ff   |....A.......}...|
0x804b998:   14 09 00 00 b7 d6 ff ff  34 09 00 00 0a d7 ff ff   |........4.......|
0x804b9a8:   58 09 00 00 57 d7 ff ff  7c 09 00 00 8f d7 ff ff   |X...W...|.......|
0x804b9b8:   9c 09 00 00 c1 d7 ff ff  bc 09 00 00 d5 d7 ff ff   |................|
0x804b9c8:   dc 09 00 00 ec d7 ff ff  fc 09 00 00 01 d8 ff ff   |................|
0x804b9d8:   1c 0a 00 00 17 d8 ff ff  3c 0a 00 00 3e d8 ff ff   |........<...>...|
0x804b9e8:   5c 0a 00 00 63 d8 ff ff  7c 0a 00 00 a2 d8 ff ff   |\...c...|.......|
0x804b9f8:   9c 0a 00 00 db d8 ff ff  bc 0a 00 00 07 d9 ff ff   |................|
0x804ba08:   dc 0a 00 00 2d d9 ff ff  fc 0a 00 00 6f d9 ff ff   |....-.......o...|
0x804ba18:   1c 0b 00 00 b1 d9 ff ff  3c 0b 00 00 f3 d9 ff ff   |........<.......|
0x804ba28:   5c 0b 00 00 68 da ff ff  7c 0b 00 00 c5 da ff ff   |\...h...|.......|
0x804ba38:   9c 0b 00 00 22 db ff ff  bc 0b 00 00 7f db ff ff   |...."...........|
0x804ba48:   dc 0b 00 00 0f dc ff ff  fc 0b 00 00 73 dc ff ff   |............s...|
0x804ba58:   1c 0c 00 00 e3 dc ff ff  3c 0c 00 00 2a dd ff ff   |........<...*...|
0x804ba68:   60 0c 00 00 7f dd ff ff  80 0c 00 00 c6 dd ff ff   |`...............|
0x804ba78:   a4 0c 00 00 2e de ff ff  c8 0c 00 00 9d df ff ff   |................|
0x804ba88:   f8 0c 00 00 88 fa ff ff  28 0d 00 00 18 fe ff ff   |........(.......|
0x804ba98:   60 0d 00 00 28 fe ff ff  74 0d 00 00 88 fe ff ff   |`...(...t.......|
0x804baa8:   c0 0d 00 00 14                                     |.....           |
; section: .eh_frame
0x804baac:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804babc:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804bacc:   b4 c8 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804badc:   30 00 00 00 10 c8 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804baec:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804bafc:   10 00 00 00 54 00 00 00  2c c8 ff ff 08 00 00 00   |....T...,.......|
0x804bb0c:   00 00 00 00 1c 00 00 00  68 00 00 00 3e c9 ff ff   |........h...>...|
0x804bb1c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804bb2c:   04 04 00 00 20 00 00 00  88 00 00 00 2e c9 ff ff   |.... ...........|
0x804bb3c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804bb4c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804bb5c:   38 c9 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |8........A....B.|
0x804bb6c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804bb7c:   36 c9 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |6...(....A....B.|
0x804bb8c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804bb9c:   3e c9 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |>...*....A....B.|
0x804bbac:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804bbbc:   48 c9 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |H...)....A....B.|
0x804bbcc:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804bbdc:   51 c9 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |Q...C....A....B.|
0x804bbec:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804bbfc:   74 c9 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |t...A....A....B.|
0x804bc0c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804bc1c:   95 c9 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804bc2c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804bc3c:   90 01 00 00 c9 c9 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804bc4c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804bc5c:   1c 00 00 00 b4 01 00 00  f7 c9 ff ff 3d 00 00 00   |............=...|
0x804bc6c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804bc7c:   1c 00 00 00 d4 01 00 00  14 ca ff ff 37 00 00 00   |............7...|
0x804bc8c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bc9c:   1c 00 00 00 f4 01 00 00  2b ca ff ff 1f 00 00 00   |........+.......|
0x804bcac:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bcbc:   1c 00 00 00 14 02 00 00  2a ca ff ff 2a 00 00 00   |........*...*...|
0x804bccc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bcdc:   1c 00 00 00 34 02 00 00  34 ca ff ff 2c 00 00 00   |....4...4...,...|
0x804bcec:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804bcfc:   1c 00 00 00 54 02 00 00  40 ca ff ff 2b 00 00 00   |....T...@...+...|
0x804bd0c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804bd1c:   1c 00 00 00 74 02 00 00  4b ca ff ff 49 00 00 00   |....t...K...I...|
0x804bd2c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804bd3c:   1c 00 00 00 94 02 00 00  74 ca ff ff 47 00 00 00   |........t...G...|
0x804bd4c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804bd5c:   20 00 00 00 b4 02 00 00  9b ca ff ff 5a 00 00 00   | ...........Z...|
0x804bd6c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804bd7c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 d1 ca ff ff   |.... ...........|
0x804bd8c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804bd9c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804bdac:   01 cb ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804bdbc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804bdcc:   20 cb ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   | ...9....A....B.|
0x804bddc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804bdec:   39 cb ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |9..."....A....B.|
0x804bdfc:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804be0c:   3b cb ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |;...N....A....B.|
0x804be1c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804be2c:   69 cb ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |i...<....A....B.|
0x804be3c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804be4c:   85 cb ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804be5c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804be6c:   ee cb ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804be7c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804be8c:   00 cc ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804be9c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804beac:   10 cc ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804bebc:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804becc:   35 cc ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |5...?....A....B.|
0x804bedc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804beec:   54 cc ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |T...2....A....B.|
0x804befc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804bf0c:   66 cc ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |f...,....A....B.|
0x804bf1c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804bf2c:   72 cc ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |r........A....B.|
0x804bf3c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804bf4c:   70 cc ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |p...(....A....B.|
0x804bf5c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804bf6c:   78 cc ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |x...%....A....B.|
0x804bf7c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804bf8c:   7d cc ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |}...%....A....B.|
0x804bf9c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804bfac:   82 cc ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804bfbc:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804bfcc:   99 cc ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804bfdc:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804bfec:   ad cc ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804bffc:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804c00c:   60 05 00 00 db cc ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804c01c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804c02c:   1c 00 00 00 84 05 00 00  03 cd ff ff 37 00 00 00   |............7...|
0x804c03c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804c04c:   1c 00 00 00 a4 05 00 00  1a cd ff ff 31 00 00 00   |............1...|
0x804c05c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804c06c:   1c 00 00 00 c4 05 00 00  2b cd ff ff 1f 00 00 00   |........+.......|
0x804c07c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804c08c:   1c 00 00 00 e4 05 00 00  2a cd ff ff 2a 00 00 00   |........*...*...|
0x804c09c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804c0ac:   1c 00 00 00 04 06 00 00  34 cd ff ff 28 00 00 00   |........4...(...|
0x804c0bc:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804c0cc:   1c 00 00 00 24 06 00 00  3c cd ff ff 29 00 00 00   |....$...<...)...|
0x804c0dc:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804c0ec:   1c 00 00 00 44 06 00 00  45 cd ff ff 3c 00 00 00   |....D...E...<...|
0x804c0fc:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804c10c:   1c 00 00 00 64 06 00 00  61 cd ff ff 3a 00 00 00   |....d...a...:...|
0x804c11c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804c12c:   20 00 00 00 84 06 00 00  7b cd ff ff 53 00 00 00   | .......{...S...|
0x804c13c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804c14c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 aa cd ff ff   |.... ...........|
0x804c15c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804c16c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804c17c:   d3 cd ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804c18c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804c19c:   eb cd ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804c1ac:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804c1bc:   fd cd ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c1cc:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804c1dc:   f1 cd ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c1ec:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804c1fc:   e8 cd ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c20c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804c21c:   dd cd ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c22c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804c23c:   d3 cd ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804c24c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804c25c:   da cd ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804c26c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804c27c:   df cd ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804c28c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804c29c:   fe cd ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804c2ac:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804c2bc:   17 ce ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804c2cc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804c2dc:   23 ce ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |#...&....A....B.|
0x804c2ec:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804c2fc:   29 ce ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |)...B....A....B.|
0x804c30c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804c31c:   4b ce ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |K...B....A....B.|
0x804c32c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804c33c:   6d ce ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |m...B....A....B.|
0x804c34c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804c35c:   8f ce ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804c36c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804c37c:   e4 ce ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804c38c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804c39c:   21 cf ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |!...]....A....B.|
0x804c3ac:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804c3bc:   5e cf ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |^...]....A....B.|
0x804c3cc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804c3dc:   9b cf ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c3ec:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804c3fc:   0b d0 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804c40c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804c41c:   4f d0 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |O...p....A....B.|
0x804c42c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804c43c:   9f d0 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804c44c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804c45c:   b0 09 00 00 c2 d0 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804c46c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804c47c:   d0 09 00 00 f7 d0 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804c48c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804c49c:   20 00 00 00 f4 09 00 00  1a d1 ff ff 68 00 00 00   | ...........h...|
0x804c4ac:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804c4bc:   0c 04 04 00 2c 00 00 00  18 0a 00 00 5e d1 ff ff   |....,.......^...|
0x804c4cc:   6f 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |o....A....B..F..|
0x804c4dc:   86 04 83 05 03 62 01 c3  41 c6 41 c7 41 c5 0c 04   |.....b..A.A.A...|
0x804c4ec:   04 00 00 00 2c 00 00 00  48 0a 00 00 9d d2 ff ff   |....,...H.......|
0x804c4fc:   eb 1a 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804c50c:   86 04 83 05 03 db 1a c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804c51c:   04 00 00 00 34 00 00 00  78 0a 00 00 58 ed ff ff   |....4...x...X...|
0x804c52c:   90 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804c53c:   0f 03 75 78 06 10 03 02  75 7c 03 7b 03 c1 0c 01   |..ux....u|.{....|
0x804c54c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804c55c:   b0 0a 00 00 b0 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804c56c:   48 00 00 00 c4 0a 00 00  ac f0 ff ff 5d 00 00 00   |H...........]...|
0x804c57c:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x804c58c:   41 0e 14 83 05 4e 0e 20  69 0e 24 41 0e 28 44 0e   |A....N. i.$A.(D.|
0x804c59c:   2c 44 0e 30 4d 0e 20 47  0e 14 41 c3 0e 10 41 c6   |,D.0M. G..A...A.|
0x804c5ac:   0e 0c 41 c7 0e 08 41 c5  0e 04 00 00 10 00 00 00   |..A...A.........|
0x804c5bc:   10 0b 00 00 c0 f0 ff ff  02 00 00 00 00 00 00 00   |................|
0x804c5cc:   00 00 00 00 ??                                     |....?           |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 84 b6 04 08  19 00 00 00 0c df 04 08   |................|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 03 00 00 00   |................|
0x804e028:   f9 00 00 00 01 00 00 00  01 00 00 00 3b 00 00 00   |............;...|
0x804e038:   d7 e6 7f 44 c0 24 1b 26  42 b6 44 1b fe ff 00 00   |...D.$.&B.D.....|
0x804e048:   a2 02 ee 1a d0 a9 59 ad  ff 00 00 00 ff ff ff ff   |......Y.........|
0x804e058:   01 3f 00 00 33 a5 6a cc  eb 92 cc 6a 27 d8 a4 30   |.?..3.j....j'..0|
0x804e068:   df 00 00 00 ff ff ff ff  f6 65 00 00 94 a4 29 03   |.........e....).|
0x804e078:   05 00 00 00 e4 20 87 e7  00                        |..... ...       |
