;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:50:30
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 80 dc ff ff               	lea eax, [ebx - 0x2380]
0x804835c:   50                              	push eax
0x804835d:   8d 83 20 dc ff ff               	lea eax, [ebx - 0x23e0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 21 a8 04 08               	mov eax, 0x804a821
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 70 d0 04 08                  	mov eax, 0x804d070
0x80483a5:   3d 70 d0 04 08                  	cmp eax, 0x804d070
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 70 d0 04 08                  	push 0x804d070
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 70 d0 04 08                  	mov eax, 0x804d070
0x80483e5:   2d 70 d0 04 08                  	sub eax, 0x804d070
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 70 d0 04 08                  	push 0x804d070
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 b9 27 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 a5 27 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 a0 dc ff ff               	lea edx, [eax - 0x2360]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 78 27 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 5a 27 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 32 27 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 08 27 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 df 26 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 9c 26 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 5a 26 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 02 26 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 b1 25 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 74 25 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 3d 25 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 1e 25 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 f4 24 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 c8 24 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 9d 24 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 54 24 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 0c 24 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 b2 23 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 5f 23 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 20 23 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 ea 22 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 c8 22 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 7a 22 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 3e 22 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 b5 21 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 83 21 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 53 21 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 0e 21 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 cf 20 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 9d 20 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 6e 20 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 50 20 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 28 20 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 03 20 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 de 1f 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 a7 1f 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 72 1f 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 20 1f 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 d5 1e 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 9e 1e 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 6d 1e 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 4e 1e 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 24 1e 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 fc 1d 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 d3 1d 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 97 1d 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 5c 1d 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 09 1d 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 bd 1c 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 85 1c 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 56 1c 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 42 1c 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 2b 1c 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 16 1c 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 00 1c 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 d9 1b 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 b4 1b 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 75 1b 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 3c 1b 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 10 1b 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 ea 1a 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 a0 dd ff ff               	fld dword ptr [eax - 0x2260]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 a0 dd ff ff               	fld dword ptr [eax - 0x2260]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 a4 dd ff ff               	fld dword ptr [eax - 0x225c]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 a8 1a 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 a0 dd ff ff               	fld dword ptr [eax - 0x2260]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 a0 dd ff ff               	fld dword ptr [eax - 0x2260]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 a4 dd ff ff               	fld dword ptr [eax - 0x225c]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 66 1a 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 a8 dd ff ff               	fld dword ptr [eax - 0x2258]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 ac dd ff ff               	fld dword ptr [eax - 0x2254]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 b0 dd ff ff               	fld dword ptr [eax - 0x2250]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 24 1a 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 b4 dd ff ff               	fld dword ptr [eax - 0x224c]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 b8 dd ff ff               	fld dword ptr [eax - 0x2248]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 bc dd ff ff               	fld dword ptr [eax - 0x2244]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 ac 19 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 c0 dd ff ff               	fld qword ptr [eax - 0x2240]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 c0 dd ff ff               	fld qword ptr [eax - 0x2240]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 c8 dd ff ff               	fld qword ptr [eax - 0x2238]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 4f 19 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 c0 dd ff ff               	fld qword ptr [eax - 0x2240]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 c0 dd ff ff               	fld qword ptr [eax - 0x2240]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 c8 dd ff ff               	fld qword ptr [eax - 0x2238]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 f2 18 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 d0 dd ff ff               	fld qword ptr [eax - 0x2230]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 d8 dd ff ff               	fld qword ptr [eax - 0x2228]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 e0 dd ff ff               	fld qword ptr [eax - 0x2220]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 95 18 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 e8 dd ff ff               	fld qword ptr [eax - 0x2218]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 f0 dd ff ff               	fld qword ptr [eax - 0x2210]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 f8 dd ff ff               	fld qword ptr [eax - 0x2208]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 05 18 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 00 de ff ff               	fld dword ptr [eax - 0x2200]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 04 de ff ff               	fld dword ptr [eax - 0x21fc]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 a1 17 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 30 17 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 ed 16 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 b0 dc ff ff               	lea eax, [ebx - 0x2350]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 d4 dc ff ff               	lea eax, [ebx - 0x232c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: packed_printf at 0x8049626 -- 0x8049654
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   53                              	push ebx
0x804962a:   83 ec 04                        	sub esp, 4
0x804962d:   e8 e5 15 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x8049632:   05 ce 39 00 00                  	add eax, 0x39ce
0x8049637:   83 ec 08                        	sub esp, 8
0x804963a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804963d:   8d 90 f8 dc ff ff               	lea edx, [eax - 0x2308]
0x8049643:   52                              	push edx
0x8049644:   89 c3                           	mov ebx, eax
0x8049646:   e8 c5 ec ff ff                  	call 0x8048310 <printf>
0x804964b:   83 c4 10                        	add esp, 0x10
0x804964e:   90                              	nop 
0x804964f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049652:   c9                              	leave 
0x8049653:   c3                              	ret 
; function: set_var at 0x8049654 -- 0x804988a
0x8049654:   55                              	push ebp
0x8049655:   89 e5                           	mov ebp, esp
0x8049657:   57                              	push edi
0x8049658:   56                              	push esi
0x8049659:   53                              	push ebx
0x804965a:   83 c4 80                        	add esp, -0x80
0x804965d:   e8 b9 15 00 00                  	call 0x804ac1b <__x86.get_pc_thunk.dx>
0x8049662:   81 c2 9e 39 00 00               	add edx, 0x399e
0x8049668:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804966b:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804966e:   8b 4d 10                        	mov ecx, dword ptr [ebp + 0x10]
0x8049671:   8b 5d 14                        	mov ebx, dword ptr [ebp + 0x14]
0x8049674:   8b 75 18                        	mov esi, dword ptr [ebp + 0x18]
0x8049677:   8b 7d 20                        	mov edi, dword ptr [ebp + 0x20]
0x804967a:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x804967d:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049680:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x8049683:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049686:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049689:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804968c:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x804968f:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049692:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x8049695:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049698:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x804969b:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804969e:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x80496a1:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x80496a4:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x80496a7:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x80496aa:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x80496ad:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x80496b0:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x80496b3:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x80496b6:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x80496b9:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x80496bf:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x80496c2:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x80496c8:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x80496cb:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x80496d1:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80496d5:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x80496d8:   89 c8                           	mov eax, ecx
0x80496da:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x80496dd:   89 d8                           	mov eax, ebx
0x80496df:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x80496e2:   89 f0                           	mov eax, esi
0x80496e4:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x80496e8:   89 f8                           	mov eax, edi
0x80496ea:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x80496ee:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80496f2:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496f6:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496fa:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496fe:   0f b6 45 9c                     	movzx eax, byte ptr [ebp - 0x64]
0x8049702:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x8049705:   0f b6 45 98                     	movzx eax, byte ptr [ebp - 0x68]
0x8049709:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x804970c:   0f b7 45 94                     	movzx eax, word ptr [ebp - 0x6c]
0x8049710:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x8049714:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x8049718:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x804971c:   0f b7 45 8c                     	movzx eax, word ptr [ebp - 0x74]
0x8049720:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x8049724:   0f b7 45 88                     	movzx eax, word ptr [ebp - 0x78]
0x8049728:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x804972c:   0f b7 45 84                     	movzx eax, word ptr [ebp - 0x7c]
0x8049730:   66 89 45 bc                     	mov word ptr [ebp - 0x44], ax
0x8049734:   0f b7 45 80                     	movzx eax, word ptr [ebp - 0x80]
0x8049738:   66 89 45 b8                     	mov word ptr [ebp - 0x48], ax
0x804973c:   0f b7 85 7c ff ff ff            	movzx eax, word ptr [ebp - 0x84]
0x8049743:   66 89 45 b4                     	mov word ptr [ebp - 0x4c], ax
0x8049747:   0f b6 85 78 ff ff ff            	movzx eax, byte ptr [ebp - 0x88]
0x804974e:   88 45 b0                        	mov byte ptr [ebp - 0x50], al
0x8049751:   0f b6 85 74 ff ff ff            	movzx eax, byte ptr [ebp - 0x8c]
0x8049758:   88 45 ac                        	mov byte ptr [ebp - 0x54], al
0x804975b:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x804975f:   88 82 24 00 00 00               	mov byte ptr [edx + 0x24], al
0x8049765:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049768:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x804976e:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x8049772:   88 82 2c 00 00 00               	mov byte ptr [edx + 0x2c], al
0x8049778:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x804977c:   88 82 2d 00 00 00               	mov byte ptr [edx + 0x2d], al
0x8049782:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049786:   66 89 82 2e 00 00 00            	mov word ptr [edx + 0x2e], ax
0x804978d:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x8049790:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x8049796:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x804979a:   66 89 82 34 00 00 00            	mov word ptr [edx + 0x34], ax
0x80497a1:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x80497a5:   66 89 82 36 00 00 00            	mov word ptr [edx + 0x36], ax
0x80497ac:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x80497af:   89 82 a4 04 00 00               	mov dword ptr [edx + 0x4a4], eax
0x80497b5:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x80497b9:   66 89 82 38 00 00 00            	mov word ptr [edx + 0x38], ax
0x80497c0:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x80497c4:   88 82 3a 00 00 00               	mov byte ptr [edx + 0x3a], al
0x80497ca:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x80497cd:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x80497d3:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x80497d7:   88 82 40 00 00 00               	mov byte ptr [edx + 0x40], al
0x80497dd:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x80497e0:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x80497e6:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x80497ea:   66 89 82 48 00 00 00            	mov word ptr [edx + 0x48], ax
0x80497f1:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x80497f5:   66 89 82 4a 00 00 00            	mov word ptr [edx + 0x4a], ax
0x80497fc:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x8049800:   66 89 82 4c 00 00 00            	mov word ptr [edx + 0x4c], ax
0x8049807:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804980b:   66 89 82 4e 00 00 00            	mov word ptr [edx + 0x4e], ax
0x8049812:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049815:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x804981b:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x804981f:   66 89 82 54 00 00 00            	mov word ptr [edx + 0x54], ax
0x8049826:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x8049829:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x804982f:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x8049832:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x8049838:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x804983b:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x8049841:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x8049845:   66 89 82 a8 04 00 00            	mov word ptr [edx + 0x4a8], ax
0x804984c:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x804984f:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x8049855:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x8049859:   66 89 82 68 00 00 00            	mov word ptr [edx + 0x68], ax
0x8049860:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x8049864:   88 82 6a 00 00 00               	mov byte ptr [edx + 0x6a], al
0x804986a:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x804986d:   89 82 6c 00 00 00               	mov dword ptr [edx + 0x6c], eax
0x8049873:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x8049877:   88 82 aa 04 00 00               	mov byte ptr [edx + 0x4aa], al
0x804987d:   b8 00 00 00 00                  	mov eax, 0
0x8049882:   83 ec 80                        	sub esp, -0x80
0x8049885:   5b                              	pop ebx
0x8049886:   5e                              	pop esi
0x8049887:   5f                              	pop edi
0x8049888:   5d                              	pop ebp
0x8049889:   c3                              	ret 
; function: func_1 at 0x804988a -- 0x804a821
0x804988a:   55                              	push ebp
0x804988b:   89 e5                           	mov ebp, esp
0x804988d:   57                              	push edi
0x804988e:   56                              	push esi
0x804988f:   53                              	push ebx
0x8049890:   81 ec 70 01 00 00               	sub esp, 0x170
0x8049896:   e8 7c 13 00 00                  	call 0x804ac17 <__x86.get_pc_thunk.ax>
0x804989b:   05 65 37 00 00                  	add eax, 0x3765
0x80498a0:   c6 45 f3 9b                     	mov byte ptr [ebp - 0xd], 0x9b
0x80498a4:   c7 45 ec ff ff ff ff            	mov dword ptr [ebp - 0x14], 0xffffffff
0x80498ab:   c6 45 eb ce                     	mov byte ptr [ebp - 0x15], 0xce
0x80498af:   c6 45 ea 04                     	mov byte ptr [ebp - 0x16], 4
0x80498b3:   66 c7 45 e8 d7 6b               	mov word ptr [ebp - 0x18], 0x6bd7
0x80498b9:   c7 45 e4 a5 d6 97 e4            	mov dword ptr [ebp - 0x1c], 0xe497d6a5
0x80498c0:   66 c7 45 e2 fa ff               	mov word ptr [ebp - 0x1e], 0xfffa
0x80498c6:   66 c7 45 da fa ff               	mov word ptr [ebp - 0x26], 0xfffa
0x80498cc:   c7 45 d4 00 00 00 00            	mov dword ptr [ebp - 0x2c], 0
0x80498d3:   66 c7 45 d2 ff ff               	mov word ptr [ebp - 0x2e], 0xffff
0x80498d9:   c6 45 e1 28                     	mov byte ptr [ebp - 0x1f], 0x28
0x80498dd:   c7 45 dc 94 ba b1 d7            	mov dword ptr [ebp - 0x24], 0xd7b1ba94
0x80498e4:   c6 45 d1 fe                     	mov byte ptr [ebp - 0x2f], 0xfe
0x80498e8:   c7 45 cc fc e2 8d c5            	mov dword ptr [ebp - 0x34], 0xc58de2fc
0x80498ef:   66 c7 45 ca 38 74               	mov word ptr [ebp - 0x36], 0x7438
0x80498f5:   66 c7 45 c8 bd fb               	mov word ptr [ebp - 0x38], 0xfbbd
0x80498fb:   66 c7 45 c6 cd e3               	mov word ptr [ebp - 0x3a], 0xe3cd
0x8049901:   66 c7 45 c4 06 00               	mov word ptr [ebp - 0x3c], 6
0x8049907:   c7 45 c0 af 19 05 ef            	mov dword ptr [ebp - 0x40], 0xef0519af
0x804990e:   66 c7 45 86 b6 ba               	mov word ptr [ebp - 0x7a], 0xbab6
0x8049914:   c7 45 80 a4 59 29 91            	mov dword ptr [ebp - 0x80], 0x912959a4
0x804991b:   c7 45 bc 06 00 00 00            	mov dword ptr [ebp - 0x44], 6
0x8049922:   c7 85 7c ff ff ff 6d aa 24 58   	mov dword ptr [ebp - 0x84], 0x5824aa6d
0x804992c:   66 c7 85 7a ff ff ff 00 00      	mov word ptr [ebp - 0x86], 0
0x8049935:   c7 85 74 ff ff ff 78 e5 85 c7   	mov dword ptr [ebp - 0x8c], 0xc785e578
0x804993f:   66 c7 85 72 ff ff ff ff ff      	mov word ptr [ebp - 0x8e], 0xffff
0x8049948:   c6 85 71 ff ff ff 17            	mov byte ptr [ebp - 0x8f], 0x17
0x804994f:   c7 85 6c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x94], 1
0x8049959:   c6 85 6b ff ff ff 00            	mov byte ptr [ebp - 0x95], 0
0x8049960:   c7 45 b8 01 00 00 00            	mov dword ptr [ebp - 0x48], 1
0x8049967:   c7 85 64 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x9c], 1
0x8049971:   c6 45 b7 8a                     	mov byte ptr [ebp - 0x49], 0x8a
0x8049975:   66 c7 85 62 ff ff ff b2 19      	mov word ptr [ebp - 0x9e], 0x19b2
0x804997e:   66 c7 85 60 ff ff ff ff ff      	mov word ptr [ebp - 0xa0], 0xffff
0x8049987:   c7 85 5c ff ff ff d2 ad 25 a2   	mov dword ptr [ebp - 0xa4], 0xa225add2
0x8049991:   c7 85 58 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xa8], 1
0x804999b:   c7 45 b0 f6 ff ff ff            	mov dword ptr [ebp - 0x50], 0xfffffff6
0x80499a2:   c6 85 57 ff ff ff 08            	mov byte ptr [ebp - 0xa9], 8
0x80499a9:   c6 85 56 ff ff ff 29            	mov byte ptr [ebp - 0xaa], 0x29
0x80499b0:   c7 85 50 ff ff ff ef f7 9d c8   	mov dword ptr [ebp - 0xb0], 0xc89df7ef
0x80499ba:   c6 85 4f ff ff ff ed            	mov byte ptr [ebp - 0xb1], 0xed
0x80499c1:   c7 85 48 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xb8], 0xffffffff
0x80499cb:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x80499cf:   0f 84 3f 01 00 00               	je 0x8049b14 <func_1+0x28a>
0x80499d5:   66 c7 85 be fe ff ff 01 00      	mov word ptr [ebp - 0x142], 1
0x80499de:   c7 85 b8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x148], 0xffffffff
0x80499e8:   80 6d eb 01                     	sub byte ptr [ebp - 0x15], 1
0x80499ec:   0f b6 85 6b ff ff ff            	movzx eax, byte ptr [ebp - 0x95]
0x80499f3:   0f be 95 71 ff ff ff            	movsx edx, byte ptr [ebp - 0x8f]
0x80499fa:   0f bf 8d 72 ff ff ff            	movsx ecx, word ptr [ebp - 0x8e]
0x8049a01:   0f b7 9d 7a ff ff ff            	movzx ebx, word ptr [ebp - 0x86]
0x8049a08:   0f bf 75 86                     	movsx esi, word ptr [ebp - 0x7a]
0x8049a0c:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x8049a12:   0f bf 7d c4                     	movsx edi, word ptr [ebp - 0x3c]
0x8049a16:   89 bd ac fe ff ff               	mov dword ptr [ebp - 0x154], edi
0x8049a1c:   0f bf 75 c6                     	movsx esi, word ptr [ebp - 0x3a]
0x8049a20:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x8049a26:   0f b7 7d c8                     	movzx edi, word ptr [ebp - 0x38]
0x8049a2a:   89 bd a4 fe ff ff               	mov dword ptr [ebp - 0x15c], edi
0x8049a30:   0f bf 75 ca                     	movsx esi, word ptr [ebp - 0x36]
0x8049a34:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x8049a3a:   0f be 7d d1                     	movsx edi, byte ptr [ebp - 0x2f]
0x8049a3e:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x8049a44:   0f b6 75 e1                     	movzx esi, byte ptr [ebp - 0x1f]
0x8049a48:   89 b5 98 fe ff ff               	mov dword ptr [ebp - 0x168], esi
0x8049a4e:   0f b7 7d d2                     	movzx edi, word ptr [ebp - 0x2e]
0x8049a52:   89 bd 94 fe ff ff               	mov dword ptr [ebp - 0x16c], edi
0x8049a58:   0f bf 75 da                     	movsx esi, word ptr [ebp - 0x26]
0x8049a5c:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x8049a62:   0f bf 7d e2                     	movsx edi, word ptr [ebp - 0x1e]
0x8049a66:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x8049a6c:   0f bf 75 e8                     	movsx esi, word ptr [ebp - 0x18]
0x8049a70:   89 b5 88 fe ff ff               	mov dword ptr [ebp - 0x178], esi
0x8049a76:   0f be 7d ea                     	movsx edi, byte ptr [ebp - 0x16]
0x8049a7a:   89 bd 84 fe ff ff               	mov dword ptr [ebp - 0x17c], edi
0x8049a80:   0f b6 7d eb                     	movzx edi, byte ptr [ebp - 0x15]
0x8049a84:   0f b6 75 f3                     	movzx esi, byte ptr [ebp - 0xd]
0x8049a88:   50                              	push eax
0x8049a89:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049a8f:   52                              	push edx
0x8049a90:   51                              	push ecx
0x8049a91:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049a97:   53                              	push ebx
0x8049a98:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049a9e:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049aa1:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049aa4:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x8049aaa:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049aad:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x8049ab3:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x8049ab9:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x8049abf:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049ac5:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049ac8:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049ace:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049ad1:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x8049ad7:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x8049add:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049ae0:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x8049ae6:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x8049aec:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049aef:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x8049af5:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x8049afb:   57                              	push edi
0x8049afc:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049aff:   56                              	push esi
0x8049b00:   e8 4f fb ff ff                  	call 0x8049654 <set_var>
0x8049b05:   83 c4 74                        	add esp, 0x74
0x8049b08:   0f b7 85 be fe ff ff            	movzx eax, word ptr [ebp - 0x142]
0x8049b0f:   e9 05 0d 00 00                  	jmp 0x804a819 <func_1+0xf8f>
0x8049b14:   c7 45 ac 05 ef bc 5c            	mov dword ptr [ebp - 0x54], 0x5cbcef05
0x8049b1b:   c7 45 a8 70 9b e0 85            	mov dword ptr [ebp - 0x58], 0x85e09b70
0x8049b22:   c7 85 44 ff ff ff bf 72 55 d0   	mov dword ptr [ebp - 0xbc], 0xd05572bf
0x8049b2c:   c7 85 40 ff ff ff 90 7a e8 9d   	mov dword ptr [ebp - 0xc0], 0x9de87a90
0x8049b36:   66 c7 45 a6 ff ff               	mov word ptr [ebp - 0x5a], 0xffff
0x8049b3c:   c7 45 a0 10 9e cd 04            	mov dword ptr [ebp - 0x60], 0x4cd9e10
0x8049b43:   66 c7 45 9e 22 dc               	mov word ptr [ebp - 0x62], 0xdc22
0x8049b49:   c6 85 3f ff ff ff 3e            	mov byte ptr [ebp - 0xc1], 0x3e
0x8049b50:   c6 85 3e ff ff ff 04            	mov byte ptr [ebp - 0xc2], 4
0x8049b57:   66 c7 85 3c ff ff ff ff ff      	mov word ptr [ebp - 0xc4], 0xffff
0x8049b60:   c7 85 38 ff ff ff bf f5 5b 9c   	mov dword ptr [ebp - 0xc8], 0x9c5bf5bf
0x8049b6a:   c6 45 eb 00                     	mov byte ptr [ebp - 0x15], 0
0x8049b6e:   e9 cd 06 00 00                  	jmp 0x804a240 <func_1+0x9b6>
0x8049b73:   66 c7 85 36 ff ff ff 00 00      	mov word ptr [ebp - 0xca], 0
0x8049b7c:   c7 45 98 19 c5 ce a0            	mov dword ptr [ebp - 0x68], 0xa0cec519
0x8049b83:   c7 45 94 fa ff ff ff            	mov dword ptr [ebp - 0x6c], 0xfffffffa
0x8049b8a:   c6 85 35 ff ff ff f5            	mov byte ptr [ebp - 0xcb], 0xf5
0x8049b91:   c7 85 30 ff ff ff c7 d0 13 42   	mov dword ptr [ebp - 0xd0], 0x4213d0c7
0x8049b9b:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049b9f:   75 06                           	jne 0x8049ba7 <func_1+0x31d>
0x8049ba1:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x8049ba5:   74 07                           	je 0x8049bae <func_1+0x324>
0x8049ba7:   b8 01 00 00 00                  	mov eax, 1
0x8049bac:   eb 05                           	jmp 0x8049bb3 <func_1+0x329>
0x8049bae:   b8 00 00 00 00                  	mov eax, 0
0x8049bb3:   85 c0                           	test eax, eax
0x8049bb5:   74 0f                           	je 0x8049bc6 <func_1+0x33c>
0x8049bb7:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x8049bbb:   0f 84 6a 02 00 00               	je 0x8049e2b <func_1+0x5a1>
0x8049bc1:   e9 84 06 00 00                  	jmp 0x804a24a <func_1+0x9c0>
0x8049bc6:   c7 45 90 f6 ff ff ff            	mov dword ptr [ebp - 0x70], 0xfffffff6
0x8049bcd:   c7 45 8c f6 ff ff ff            	mov dword ptr [ebp - 0x74], 0xfffffff6
0x8049bd4:   c6 45 ea 01                     	mov byte ptr [ebp - 0x16], 1
0x8049bd8:   0f be 45 ea                     	movsx eax, byte ptr [ebp - 0x16]
0x8049bdc:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049bdf:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049be3:   0f be c0                        	movsx eax, al
0x8049be6:   c1 e0 04                        	shl eax, 4
0x8049be9:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049bec:   80 7d f3 01                     	cmp byte ptr [ebp - 0xd], 1
0x8049bf0:   0f 94 c0                        	sete al
0x8049bf3:   0f b6 d0                        	movzx edx, al
0x8049bf6:   0f be 45 ea                     	movsx eax, byte ptr [ebp - 0x16]
0x8049bfa:   39 c2                           	cmp edx, eax
0x8049bfc:   7f 06                           	jg 0x8049c04 <func_1+0x37a>
0x8049bfe:   83 7d 90 00                     	cmp dword ptr [ebp - 0x70], 0
0x8049c02:   74 07                           	je 0x8049c0b <func_1+0x381>
0x8049c04:   b8 01 00 00 00                  	mov eax, 1
0x8049c09:   eb 05                           	jmp 0x8049c10 <func_1+0x386>
0x8049c0b:   b8 00 00 00 00                  	mov eax, 0
0x8049c10:   66 09 45 e8                     	or word ptr [ebp - 0x18], ax
0x8049c14:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049c17:   3b 45 90                        	cmp eax, dword ptr [ebp - 0x70]
0x8049c1a:   0f 9e c0                        	setle al
0x8049c1d:   0f b6 c0                        	movzx eax, al
0x8049c20:   66 23 45 e8                     	and ax, word ptr [ebp - 0x18]
0x8049c24:   0f bf d0                        	movsx edx, ax
0x8049c27:   0f be 45 ea                     	movsx eax, byte ptr [ebp - 0x16]
0x8049c2b:   89 c1                           	mov ecx, eax
0x8049c2d:   d3 fa                           	sar edx, cl
0x8049c2f:   89 d0                           	mov eax, edx
0x8049c31:   85 c0                           	test eax, eax
0x8049c33:   0f 84 ad 00 00 00               	je 0x8049ce6 <func_1+0x45c>
0x8049c39:   c7 85 20 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xe0], 9
0x8049c43:   80 7d ea 00                     	cmp byte ptr [ebp - 0x16], 0
0x8049c47:   74 2f                           	je 0x8049c78 <func_1+0x3ee>
0x8049c49:   0f be 55 ea                     	movsx edx, byte ptr [ebp - 0x16]
0x8049c4d:   80 7d eb 08                     	cmp byte ptr [ebp - 0x15], 8
0x8049c51:   0f 95 c0                        	setne al
0x8049c54:   0f b6 c0                        	movzx eax, al
0x8049c57:   39 c2                           	cmp edx, eax
0x8049c59:   0f 95 c0                        	setne al
0x8049c5c:   0f b6 c0                        	movzx eax, al
0x8049c5f:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049c62:   83 bd 20 ff ff ff 00            	cmp dword ptr [ebp - 0xe0], 0
0x8049c69:   0f 85 c6 05 00 00               	jne 0x804a235 <func_1+0x9ab>
0x8049c6f:   83 6d d4 01                     	sub dword ptr [ebp - 0x2c], 1
0x8049c73:   e9 4a 01 00 00                  	jmp 0x8049dc2 <func_1+0x538>
0x8049c78:   c6 85 1f ff ff ff 21            	mov byte ptr [ebp - 0xe1], 0x21
0x8049c7f:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049c82:   0f bf d0                        	movsx edx, ax
0x8049c85:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049c88:   98                              	cwde 
0x8049c89:   0f af c2                        	imul eax, edx
0x8049c8c:   85 c0                           	test eax, eax
0x8049c8e:   74 33                           	je 0x8049cc3 <func_1+0x439>
0x8049c90:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x8049c94:   0f 95 c0                        	setne al
0x8049c97:   0f b6 d0                        	movzx edx, al
0x8049c9a:   0f b6 85 1f ff ff ff            	movzx eax, byte ptr [ebp - 0xe1]
0x8049ca1:   39 c2                           	cmp edx, eax
0x8049ca3:   0f 94 c0                        	sete al
0x8049ca6:   0f b6 d0                        	movzx edx, al
0x8049ca9:   0f b7 85 36 ff ff ff            	movzx eax, word ptr [ebp - 0xca]
0x8049cb0:   09 c2                           	or edx, eax
0x8049cb2:   0f bf 45 e8                     	movsx eax, word ptr [ebp - 0x18]
0x8049cb6:   21 d0                           	and eax, edx
0x8049cb8:   85 c0                           	test eax, eax
0x8049cba:   74 07                           	je 0x8049cc3 <func_1+0x439>
0x8049cbc:   b8 01 00 00 00                  	mov eax, 1
0x8049cc1:   eb 05                           	jmp 0x8049cc8 <func_1+0x43e>
0x8049cc3:   b8 00 00 00 00                  	mov eax, 0
0x8049cc8:   0f b7 c0                        	movzx eax, ax
0x8049ccb:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049cce:   0f b6 85 1f ff ff ff            	movzx eax, byte ptr [ebp - 0xe1]
0x8049cd5:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x8049cd8:   0f 9c c0                        	setl al
0x8049cdb:   0f b6 c0                        	movzx eax, al
0x8049cde:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049ce1:   e9 dc 00 00 00                  	jmp 0x8049dc2 <func_1+0x538>
0x8049ce6:   c7 85 2c ff ff ff b3 74 b8 8e   	mov dword ptr [ebp - 0xd4], 0x8eb874b3
0x8049cf0:   c7 85 28 ff ff ff 70 a4 bb 2d   	mov dword ptr [ebp - 0xd8], 0x2dbba470
0x8049cfa:   c7 85 24 ff ff ff b2 e6 b4 97   	mov dword ptr [ebp - 0xdc], 0x97b4e6b2
0x8049d04:   0f bf 45 e2                     	movsx eax, word ptr [ebp - 0x1e]
0x8049d08:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049d0b:   83 85 2c ff ff ff 01            	add dword ptr [ebp - 0xd4], 1
0x8049d12:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x8049d18:   0f b6 c0                        	movzx eax, al
0x8049d1b:   83 c0 68                        	add eax, 0x68
0x8049d1e:   f7 d0                           	not eax
0x8049d20:   66 89 45 d2                     	mov word ptr [ebp - 0x2e], ax
0x8049d24:   66 83 7d e8 01                  	cmp word ptr [ebp - 0x18], 1
0x8049d29:   74 07                           	je 0x8049d32 <func_1+0x4a8>
0x8049d2b:   b8 01 00 00 00                  	mov eax, 1
0x8049d30:   eb 05                           	jmp 0x8049d37 <func_1+0x4ad>
0x8049d32:   b8 00 00 00 00                  	mov eax, 0
0x8049d37:   0f b7 d0                        	movzx edx, ax
0x8049d3a:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049d3d:   0f b7 c0                        	movzx eax, ax
0x8049d40:   89 c1                           	mov ecx, eax
0x8049d42:   d3 fa                           	sar edx, cl
0x8049d44:   89 d0                           	mov eax, edx
0x8049d46:   39 85 28 ff ff ff               	cmp dword ptr [ebp - 0xd8], eax
0x8049d4c:   0f 95 c0                        	setne al
0x8049d4f:   0f b6 c0                        	movzx eax, al
0x8049d52:   89 85 28 ff ff ff               	mov dword ptr [ebp - 0xd8], eax
0x8049d58:   83 bd 28 ff ff ff 00            	cmp dword ptr [ebp - 0xd8], 0
0x8049d5f:   75 05                           	jne 0x8049d66 <func_1+0x4dc>
0x8049d61:   66 83 7d da 00                  	cmp word ptr [ebp - 0x26], 0
0x8049d66:   b8 01 00 00 00                  	mov eax, 1
0x8049d6b:   21 85 24 ff ff ff               	and dword ptr [ebp - 0xdc], eax
0x8049d71:   83 bd 24 ff ff ff 00            	cmp dword ptr [ebp - 0xdc], 0
0x8049d78:   74 04                           	je 0x8049d7e <func_1+0x4f4>
0x8049d7a:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x8049d7e:   83 bd 44 ff ff ff 00            	cmp dword ptr [ebp - 0xbc], 0
0x8049d85:   0f 94 c0                        	sete al
0x8049d88:   0f b6 c0                        	movzx eax, al
0x8049d8b:   23 45 b8                        	and eax, dword ptr [ebp - 0x48]
0x8049d8e:   85 c0                           	test eax, eax
0x8049d90:   75 05                           	jne 0x8049d97 <func_1+0x50d>
0x8049d92:   66 83 7d da 00                  	cmp word ptr [ebp - 0x26], 0
0x8049d97:   b8 00 00 00 00                  	mov eax, 0
0x8049d9c:   21 45 8c                        	and dword ptr [ebp - 0x74], eax
0x8049d9f:   66 c7 45 da e8 ff               	mov word ptr [ebp - 0x26], 0xffe8
0x8049da5:   eb 11                           	jmp 0x8049db8 <func_1+0x52e>
0x8049da7:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049dab:   75 14                           	jne 0x8049dc1 <func_1+0x537>
0x8049dad:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x8049db1:   83 c0 03                        	add eax, 3
0x8049db4:   66 89 45 da                     	mov word ptr [ebp - 0x26], ax
0x8049db8:   66 83 7d da 00                  	cmp word ptr [ebp - 0x26], 0
0x8049dbd:   75 e8                           	jne 0x8049da7 <func_1+0x51d>
0x8049dbf:   eb 01                           	jmp 0x8049dc2 <func_1+0x538>
0x8049dc1:   90                              	nop 
0x8049dc2:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x8049dc9:   eb 5a                           	jmp 0x8049e25 <func_1+0x59b>
0x8049dcb:   c6 85 1e ff ff ff 01            	mov byte ptr [ebp - 0xe2], 1
0x8049dd2:   c7 85 18 ff ff ff 2b 31 27 c2   	mov dword ptr [ebp - 0xe8], 0xc227312b
0x8049ddc:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049ddf:   21 45 e4                        	and dword ptr [ebp - 0x1c], eax
0x8049de2:   c7 45 94 fa ff ff ff            	mov dword ptr [ebp - 0x6c], 0xfffffffa
0x8049de9:   eb 26                           	jmp 0x8049e11 <func_1+0x587>
0x8049deb:   c7 85 14 ff ff ff e7 7e 5b f3   	mov dword ptr [ebp - 0xec], 0xf35b7ee7
0x8049df5:   0f b6 45 e1                     	movzx eax, byte ptr [ebp - 0x1f]
0x8049df9:   83 c0 01                        	add eax, 1
0x8049dfc:   88 45 e1                        	mov byte ptr [ebp - 0x1f], al
0x8049dff:   c7 85 18 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xe8], 1
0x8049e09:   c6 45 b7 00                     	mov byte ptr [ebp - 0x49], 0
0x8049e0d:   83 45 94 01                     	add dword ptr [ebp - 0x6c], 1
0x8049e11:   83 7d 94 1b                     	cmp dword ptr [ebp - 0x6c], 0x1b
0x8049e15:   76 d4                           	jbe 0x8049deb <func_1+0x561>
0x8049e17:   0f be 85 1e ff ff ff            	movsx eax, byte ptr [ebp - 0xe2]
0x8049e1e:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049e21:   83 45 90 07                     	add dword ptr [ebp - 0x70], 7
0x8049e25:   83 7d 90 13                     	cmp dword ptr [ebp - 0x70], 0x13
0x8049e29:   74 a0                           	je 0x8049dcb <func_1+0x541>
0x8049e2b:   0f b7 45 a6                     	movzx eax, word ptr [ebp - 0x5a]
0x8049e2f:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049e32:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x8049e36:   0f 84 8a 00 00 00               	je 0x8049ec6 <func_1+0x63c>
0x8049e3c:   c7 85 f4 fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x10c], 2
0x8049e46:   c7 85 f0 fe ff ff 93 5d 45 25   	mov dword ptr [ebp - 0x110], 0x25455d93
0x8049e50:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x8049e54:   66 89 45 d2                     	mov word ptr [ebp - 0x2e], ax
0x8049e58:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x8049e5c:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049e5f:   0f bf 45 da                     	movsx eax, word ptr [ebp - 0x26]
0x8049e63:   0d 0f 99 00 00                  	or eax, 0x990f
0x8049e68:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049e6b:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049e6e:   88 45 d1                        	mov byte ptr [ebp - 0x2f], al
0x8049e71:   0f b6 55 f3                     	movzx edx, byte ptr [ebp - 0xd]
0x8049e75:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x8049e79:   0f b6 c0                        	movzx eax, al
0x8049e7c:   0f af d0                        	imul edx, eax
0x8049e7f:   0f bf 45 da                     	movsx eax, word ptr [ebp - 0x26]
0x8049e83:   39 c2                           	cmp edx, eax
0x8049e85:   7c 0d                           	jl 0x8049e94 <func_1+0x60a>
0x8049e87:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049e8b:   74 07                           	je 0x8049e94 <func_1+0x60a>
0x8049e8d:   ba 01 00 00 00                  	mov edx, 1
0x8049e92:   eb 05                           	jmp 0x8049e99 <func_1+0x60f>
0x8049e94:   ba 00 00 00 00                  	mov edx, 0
0x8049e99:   0f bf 45 e8                     	movsx eax, word ptr [ebp - 0x18]
0x8049e9d:   39 c2                           	cmp edx, eax
0x8049e9f:   0f 9f c0                        	setg al
0x8049ea2:   0f b6 d0                        	movzx edx, al
0x8049ea5:   0f be 45 ea                     	movsx eax, byte ptr [ebp - 0x16]
0x8049ea9:   21 d0                           	and eax, edx
0x8049eab:   39 85 f4 fe ff ff               	cmp dword ptr [ebp - 0x10c], eax
0x8049eb1:   74 04                           	je 0x8049eb7 <func_1+0x62d>
0x8049eb3:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x8049eb7:   c7 85 f0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x110], 0
0x8049ec1:   e9 70 03 00 00                  	jmp 0x804a236 <func_1+0x9ac>
0x8049ec6:   c7 85 10 ff ff ff 3f 9b be e4   	mov dword ptr [ebp - 0xf0], 0xe4be9b3f
0x8049ed0:   c7 85 0c ff ff ff ee c1 41 54   	mov dword ptr [ebp - 0xf4], 0x5441c1ee
0x8049eda:   c6 85 0b ff ff ff 22            	mov byte ptr [ebp - 0xf5], 0x22
0x8049ee1:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049ee4:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049ee7:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049eea:   89 c2                           	mov edx, eax
0x8049eec:   66 0f be 45 d1                  	movsx ax, byte ptr [ebp - 0x2f]
0x8049ef1:   31 d0                           	xor eax, edx
0x8049ef3:   0f b7 c0                        	movzx eax, ax
0x8049ef6:   c1 e0 0c                        	shl eax, 0xc
0x8049ef9:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x8049eff:   66 83 7d da 00                  	cmp word ptr [ebp - 0x26], 0
0x8049f04:   0f 84 b8 01 00 00               	je 0x804a0c2 <func_1+0x838>
0x8049f0a:   66 c7 85 f8 fe ff ff 6f 7c      	mov word ptr [ebp - 0x108], 0x7c6f
0x8049f13:   0f b6 85 35 ff ff ff            	movzx eax, byte ptr [ebp - 0xcb]
0x8049f1a:   88 45 d1                        	mov byte ptr [ebp - 0x2f], al
0x8049f1d:   0f be 55 d1                     	movsx edx, byte ptr [ebp - 0x2f]
0x8049f21:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049f24:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049f27:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049f2a:   0f be c0                        	movsx eax, al
0x8049f2d:   0f af c2                        	imul eax, edx
0x8049f30:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049f33:   0f bf 55 e2                     	movsx edx, word ptr [ebp - 0x1e]
0x8049f37:   66 83 7d da 00                  	cmp word ptr [ebp - 0x26], 0
0x8049f3c:   74 2d                           	je 0x8049f6b <func_1+0x6e1>
0x8049f3e:   66 83 7d d2 00                  	cmp word ptr [ebp - 0x2e], 0
0x8049f43:   75 06                           	jne 0x8049f4b <func_1+0x6c1>
0x8049f45:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049f49:   74 07                           	je 0x8049f52 <func_1+0x6c8>
0x8049f4b:   b9 01 00 00 00                  	mov ecx, 1
0x8049f50:   eb 05                           	jmp 0x8049f57 <func_1+0x6cd>
0x8049f52:   b9 00 00 00 00                  	mov ecx, 0
0x8049f57:   0f b7 85 f8 fe ff ff            	movzx eax, word ptr [ebp - 0x108]
0x8049f5e:   21 c8                           	and eax, ecx
0x8049f60:   85 c0                           	test eax, eax
0x8049f62:   74 07                           	je 0x8049f6b <func_1+0x6e1>
0x8049f64:   b8 01 00 00 00                  	mov eax, 1
0x8049f69:   eb 05                           	jmp 0x8049f70 <func_1+0x6e6>
0x8049f6b:   b8 00 00 00 00                  	mov eax, 0
0x8049f70:   83 f8 08                        	cmp eax, 8
0x8049f73:   0f 9f c0                        	setg al
0x8049f76:   0f b6 c0                        	movzx eax, al
0x8049f79:   66 31 45 e8                     	xor word ptr [ebp - 0x18], ax
0x8049f7d:   0f bf 5d e8                     	movsx ebx, word ptr [ebp - 0x18]
0x8049f81:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x8049f87:   98                              	cwde 
0x8049f88:   89 c1                           	mov ecx, eax
0x8049f8a:   d3 e3                           	shl ebx, cl
0x8049f8c:   89 d8                           	mov eax, ebx
0x8049f8e:   85 c0                           	test eax, eax
0x8049f90:   0f 95 c0                        	setne al
0x8049f93:   0f b6 c0                        	movzx eax, al
0x8049f96:   29 c2                           	sub edx, eax
0x8049f98:   89 d0                           	mov eax, edx
0x8049f9a:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049f9d:   0f b6 85 6b ff ff ff            	movzx eax, byte ptr [ebp - 0x95]
0x8049fa4:   0f be 95 71 ff ff ff            	movsx edx, byte ptr [ebp - 0x8f]
0x8049fab:   0f bf 8d 72 ff ff ff            	movsx ecx, word ptr [ebp - 0x8e]
0x8049fb2:   0f b7 9d 7a ff ff ff            	movzx ebx, word ptr [ebp - 0x86]
0x8049fb9:   0f bf 75 86                     	movsx esi, word ptr [ebp - 0x7a]
0x8049fbd:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x8049fc3:   0f bf 7d c4                     	movsx edi, word ptr [ebp - 0x3c]
0x8049fc7:   89 bd ac fe ff ff               	mov dword ptr [ebp - 0x154], edi
0x8049fcd:   0f bf 75 c6                     	movsx esi, word ptr [ebp - 0x3a]
0x8049fd1:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x8049fd7:   0f b7 7d c8                     	movzx edi, word ptr [ebp - 0x38]
0x8049fdb:   89 bd a4 fe ff ff               	mov dword ptr [ebp - 0x15c], edi
0x8049fe1:   0f bf 75 ca                     	movsx esi, word ptr [ebp - 0x36]
0x8049fe5:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x8049feb:   0f be 7d d1                     	movsx edi, byte ptr [ebp - 0x2f]
0x8049fef:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x8049ff5:   0f b6 75 e1                     	movzx esi, byte ptr [ebp - 0x1f]
0x8049ff9:   89 b5 98 fe ff ff               	mov dword ptr [ebp - 0x168], esi
0x8049fff:   0f b7 7d d2                     	movzx edi, word ptr [ebp - 0x2e]
0x804a003:   89 bd 94 fe ff ff               	mov dword ptr [ebp - 0x16c], edi
0x804a009:   0f bf 75 da                     	movsx esi, word ptr [ebp - 0x26]
0x804a00d:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x804a013:   0f bf 7d e2                     	movsx edi, word ptr [ebp - 0x1e]
0x804a017:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x804a01d:   0f bf 75 e8                     	movsx esi, word ptr [ebp - 0x18]
0x804a021:   89 b5 88 fe ff ff               	mov dword ptr [ebp - 0x178], esi
0x804a027:   0f be 7d ea                     	movsx edi, byte ptr [ebp - 0x16]
0x804a02b:   89 bd 84 fe ff ff               	mov dword ptr [ebp - 0x17c], edi
0x804a031:   0f b6 7d eb                     	movzx edi, byte ptr [ebp - 0x15]
0x804a035:   0f b6 75 f3                     	movzx esi, byte ptr [ebp - 0xd]
0x804a039:   50                              	push eax
0x804a03a:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a040:   52                              	push edx
0x804a041:   51                              	push ecx
0x804a042:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a048:   53                              	push ebx
0x804a049:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a04f:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a052:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a055:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a05b:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a05e:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a064:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a06a:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a070:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a076:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a079:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a07f:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a082:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a088:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a08e:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a091:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a097:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a09d:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a0a0:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a0a6:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a0ac:   57                              	push edi
0x804a0ad:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a0b0:   56                              	push esi
0x804a0b1:   e8 9e f5 ff ff                  	call 0x8049654 <set_var>
0x804a0b6:   83 c4 74                        	add esp, 0x74
0x804a0b9:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a0bd:   e9 57 07 00 00                  	jmp 0x804a819 <func_1+0xf8f>
0x804a0c2:   c6 85 0a ff ff ff 06            	mov byte ptr [ebp - 0xf6], 6
0x804a0c9:   c7 85 04 ff ff ff f9 ff ff ff   	mov dword ptr [ebp - 0xfc], 0xfffffff9
0x804a0d3:   81 4d e4 e8 d0 e9 1c            	or dword ptr [ebp - 0x1c], 0x1ce9d0e8
0x804a0da:   c7 45 ac fb ff ff ff            	mov dword ptr [ebp - 0x54], 0xfffffffb
0x804a0e1:   eb 40                           	jmp 0x804a123 <func_1+0x899>
0x804a0e3:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a0e7:   c1 e0 05                        	shl eax, 5
0x804a0ea:   3d 9a 00 00 00                  	cmp eax, 0x9a
0x804a0ef:   0f 9f c0                        	setg al
0x804a0f2:   0f b6 c0                        	movzx eax, al
0x804a0f5:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a0f8:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a0fb:   83 c8 fd                        	or eax, 0xfffffffd
0x804a0fe:   98                              	cwde 
0x804a0ff:   0f b6 9d 0a ff ff ff            	movzx ebx, byte ptr [ebp - 0xf6]
0x804a106:   99                              	cdq 
0x804a107:   f7 fb                           	idiv ebx
0x804a109:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x804a10c:   0f 9d c0                        	setge al
0x804a10f:   0f b6 c0                        	movzx eax, al
0x804a112:   66 89 85 62 ff ff ff            	mov word ptr [ebp - 0x9e], ax
0x804a119:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a11c:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a11f:   83 6d ac 01                     	sub dword ptr [ebp - 0x54], 1
0x804a123:   83 7d ac e7                     	cmp dword ptr [ebp - 0x54], -0x19
0x804a127:   7d ba                           	jge 0x804a0e3 <func_1+0x859>
0x804a129:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x804a12d:   74 10                           	je 0x804a13f <func_1+0x8b5>
0x804a12f:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x804a133:   83 c0 01                        	add eax, 1
0x804a136:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x804a13a:   e9 db 00 00 00                  	jmp 0x804a21a <func_1+0x990>
0x804a13f:   66 c7 85 02 ff ff ff 92 bd      	mov word ptr [ebp - 0xfe], 0xbd92
0x804a148:   c7 85 fc fe ff ff 9a b6 3c fb   	mov dword ptr [ebp - 0x104], 0xfb3cb69a
0x804a152:   66 c7 85 fa fe ff ff 22 31      	mov word ptr [ebp - 0x106], 0x3122
0x804a15b:   0f bf 45 da                     	movsx eax, word ptr [ebp - 0x26]
0x804a15f:   8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x804a162:   89 55 e4                        	mov dword ptr [ebp - 0x1c], edx
0x804a165:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a168:   66 0f be 45 ea                  	movsx ax, byte ptr [ebp - 0x16]
0x804a16d:   66 89 85 02 ff ff ff            	mov word ptr [ebp - 0xfe], ax
0x804a174:   0f b7 85 02 ff ff ff            	movzx eax, word ptr [ebp - 0xfe]
0x804a17b:   66 c1 f8 09                     	sar ax, 9
0x804a17f:   0f b6 d0                        	movzx edx, al
0x804a182:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a185:   0f b6 c0                        	movzx eax, al
0x804a188:   29 c2                           	sub edx, eax
0x804a18a:   89 d0                           	mov eax, edx
0x804a18c:   0b 45 ac                        	or eax, dword ptr [ebp - 0x54]
0x804a18f:   89 85 fc fe ff ff               	mov dword ptr [ebp - 0x104], eax
0x804a195:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a198:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a19b:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a19f:   05 ba fd dc 3d                  	add eax, 0x3ddcfdba
0x804a1a4:   3d 74 fb b9 7b                  	cmp eax, 0x7bb9fb74
0x804a1a9:   76 30                           	jbe 0x804a1db <func_1+0x951>
0x804a1ab:   80 bd 0a ff ff ff 2e            	cmp byte ptr [ebp - 0xf6], 0x2e
0x804a1b2:   0f 97 c0                        	seta al
0x804a1b5:   0f b6 d0                        	movzx edx, al
0x804a1b8:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x804a1be:   98                              	cwde 
0x804a1bf:   89 c1                           	mov ecx, eax
0x804a1c1:   d3 e2                           	shl edx, cl
0x804a1c3:   89 d0                           	mov eax, edx
0x804a1c5:   98                              	cwde 
0x804a1c6:   0f b7 55 d2                     	movzx edx, word ptr [ebp - 0x2e]
0x804a1ca:   0f bf da                        	movsx ebx, dx
0x804a1cd:   99                              	cdq 
0x804a1ce:   f7 fb                           	idiv ebx
0x804a1d0:   3c a6                           	cmp al, 0xa6
0x804a1d2:   74 07                           	je 0x804a1db <func_1+0x951>
0x804a1d4:   b8 01 00 00 00                  	mov eax, 1
0x804a1d9:   eb 05                           	jmp 0x804a1e0 <func_1+0x956>
0x804a1db:   b8 00 00 00 00                  	mov eax, 0
0x804a1e0:   0f bf d0                        	movsx edx, ax
0x804a1e3:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x804a1e9:   98                              	cwde 
0x804a1ea:   89 c1                           	mov ecx, eax
0x804a1ec:   d3 fa                           	sar edx, cl
0x804a1ee:   89 d0                           	mov eax, edx
0x804a1f0:   89 85 fc fe ff ff               	mov dword ptr [ebp - 0x104], eax
0x804a1f6:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x804a1fa:   66 89 85 fa fe ff ff            	mov word ptr [ebp - 0x106], ax
0x804a201:   b8 01 00 00 00                  	mov eax, 1
0x804a206:   89 c2                           	mov edx, eax
0x804a208:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x804a20c:   09 d0                           	or eax, edx
0x804a20e:   66 89 45 c6                     	mov word ptr [ebp - 0x3a], ax
0x804a212:   b8 01 00 00 00                  	mov eax, 1
0x804a217:   31 45 e4                        	xor dword ptr [ebp - 0x1c], eax
0x804a21a:   80 7d d1 00                     	cmp byte ptr [ebp - 0x2f], 0
0x804a21e:   0f 9f c0                        	setg al
0x804a221:   0f b6 d0                        	movzx edx, al
0x804a224:   0f bf 85 60 ff ff ff            	movsx eax, word ptr [ebp - 0xa0]
0x804a22b:   31 d0                           	xor eax, edx
0x804a22d:   21 85 0c ff ff ff               	and dword ptr [ebp - 0xf4], eax
0x804a233:   eb 01                           	jmp 0x804a236 <func_1+0x9ac>
0x804a235:   90                              	nop 
0x804a236:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a23a:   83 c0 01                        	add eax, 1
0x804a23d:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x804a240:   80 7d eb 0a                     	cmp byte ptr [ebp - 0x15], 0xa
0x804a244:   0f 85 29 f9 ff ff               	jne 0x8049b73 <func_1+0x2e9>
0x804a24a:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x804a24e:   74 0d                           	je 0x804a25d <func_1+0x9d3>
0x804a250:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x804a254:   f7 d8                           	neg eax
0x804a256:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x804a259:   80 7d eb 01                     	cmp byte ptr [ebp - 0x15], 1
0x804a25d:   83 bd 40 ff ff ff 00            	cmp dword ptr [ebp - 0xc0], 0
0x804a264:   0f 84 3e 03 00 00               	je 0x804a5a8 <func_1+0xd1e>
0x804a26a:   c7 85 e0 fe ff ff fd ff ff ff   	mov dword ptr [ebp - 0x120], 0xfffffffd
0x804a274:   c7 45 88 06 00 00 00            	mov dword ptr [ebp - 0x78], 6
0x804a27b:   66 c7 85 de fe ff ff 74 04      	mov word ptr [ebp - 0x122], 0x474
0x804a284:   c7 85 d8 fe ff ff 23 d2 b7 fc   	mov dword ptr [ebp - 0x128], 0xfcb7d223
0x804a28e:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x804a292:   0f 84 a9 00 00 00               	je 0x804a341 <func_1+0xab7>
0x804a298:   c7 85 d4 fe ff ff f7 ff ff ff   	mov dword ptr [ebp - 0x12c], 0xfffffff7
0x804a2a2:   c7 85 d0 fe ff ff 61 e4 2b 62   	mov dword ptr [ebp - 0x130], 0x622be461
0x804a2ac:   83 bd 44 ff ff ff 00            	cmp dword ptr [ebp - 0xbc], 0
0x804a2b3:   74 05                           	je 0x804a2ba <func_1+0xa30>
0x804a2b5:   e9 b0 f8 ff ff                  	jmp 0x8049b6a <func_1+0x2e0>
0x804a2ba:   83 85 d4 fe ff ff 01            	add dword ptr [ebp - 0x12c], 1
0x804a2c1:   66 c7 45 da e4 ff               	mov word ptr [ebp - 0x26], 0xffe4
0x804a2c7:   eb 6f                           	jmp 0x804a338 <func_1+0xaae>
0x804a2c9:   66 c7 85 ce fe ff ff 78 74      	mov word ptr [ebp - 0x132], 0x7478
0x804a2d2:   0f bf 45 da                     	movsx eax, word ptr [ebp - 0x26]
0x804a2d6:   39 45 80                        	cmp dword ptr [ebp - 0x80], eax
0x804a2d9:   0f 94 c0                        	sete al
0x804a2dc:   0f b6 c0                        	movzx eax, al
0x804a2df:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a2e5:   66 83 7d c6 00                  	cmp word ptr [ebp - 0x3a], 0
0x804a2ea:   0f 85 94 00 00 00               	jne 0x804a384 <func_1+0xafa>
0x804a2f0:   c7 45 cc 02 00 00 00            	mov dword ptr [ebp - 0x34], 2
0x804a2f7:   eb 14                           	jmp 0x804a30d <func_1+0xa83>
0x804a2f9:   0f b7 85 ce fe ff ff            	movzx eax, word ptr [ebp - 0x132]
0x804a300:   09 45 88                        	or dword ptr [ebp - 0x78], eax
0x804a303:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x804a307:   75 0c                           	jne 0x804a315 <func_1+0xa8b>
0x804a309:   83 6d cc 01                     	sub dword ptr [ebp - 0x34], 1
0x804a30d:   83 7d cc ff                     	cmp dword ptr [ebp - 0x34], -1
0x804a311:   75 e6                           	jne 0x804a2f9 <func_1+0xa6f>
0x804a313:   eb 01                           	jmp 0x804a316 <func_1+0xa8c>
0x804a315:   90                              	nop 
0x804a316:   8b 85 d0 fe ff ff               	mov eax, dword ptr [ebp - 0x130]
0x804a31c:   34 fe                           	xor al, 0xfe
0x804a31e:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a324:   66 c7 85 de fe ff ff 01 00      	mov word ptr [ebp - 0x122], 1
0x804a32d:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804a331:   83 c0 06                        	add eax, 6
0x804a334:   66 89 45 da                     	mov word ptr [ebp - 0x26], ax
0x804a338:   66 83 7d da f3                  	cmp word ptr [ebp - 0x26], -0xd
0x804a33d:   74 8a                           	je 0x804a2c9 <func_1+0xa3f>
0x804a33f:   eb 44                           	jmp 0x804a385 <func_1+0xafb>
0x804a341:   83 6d bc 01                     	sub dword ptr [ebp - 0x44], 1
0x804a345:   c7 45 a8 ef ff ff ff            	mov dword ptr [ebp - 0x58], 0xffffffef
0x804a34c:   eb 2e                           	jmp 0x804a37c <func_1+0xaf2>
0x804a34e:   0f be 45 d1                     	movsx eax, byte ptr [ebp - 0x2f]
0x804a352:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a355:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a358:   89 c2                           	mov edx, eax
0x804a35a:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a35d:   89 d1                           	mov ecx, edx
0x804a35f:   09 c1                           	or ecx, eax
0x804a361:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a367:   8d 50 74                        	lea edx, [eax + 0x74]
0x804a36a:   0f b6 c1                        	movzx eax, cl
0x804a36d:   f6 f2                           	div dl
0x804a36f:   0f b6 c4                        	movzx eax, ah
0x804a372:   0f b6 c0                        	movzx eax, al
0x804a375:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a378:   83 45 a8 01                     	add dword ptr [ebp - 0x58], 1
0x804a37c:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x804a380:   74 cc                           	je 0x804a34e <func_1+0xac4>
0x804a382:   eb 01                           	jmp 0x804a385 <func_1+0xafb>
0x804a384:   90                              	nop 
0x804a385:   66 83 7d c8 00                  	cmp word ptr [ebp - 0x38], 0
0x804a38a:   0f 95 c0                        	setne al
0x804a38d:   0f b6 c0                        	movzx eax, al
0x804a390:   0f b7 d0                        	movzx edx, ax
0x804a393:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x804a397:   29 c2                           	sub edx, eax
0x804a399:   89 d0                           	mov eax, edx
0x804a39b:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a39e:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a3a1:   09 45 88                        	or dword ptr [ebp - 0x78], eax
0x804a3a4:   66 c7 85 cc fe ff ff 9a 11      	mov word ptr [ebp - 0x134], 0x119a
0x804a3ad:   c7 85 c8 fe ff ff ea 14 96 66   	mov dword ptr [ebp - 0x138], 0x669614ea
0x804a3b7:   c7 85 c4 fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x13c], 2
0x804a3c1:   66 c7 45 9e 14 00               	mov word ptr [ebp - 0x62], 0x14
0x804a3c7:   e9 df 00 00 00                  	jmp 0x804a4ab <func_1+0xc21>
0x804a3cc:   c7 85 c0 fe ff ff d6 fe 18 af   	mov dword ptr [ebp - 0x140], 0xaf18fed6
0x804a3d6:   0f be 8d 57 ff ff ff            	movsx ecx, byte ptr [ebp - 0xa9]
0x804a3dd:   0f bf 45 86                     	movsx eax, word ptr [ebp - 0x7a]
0x804a3e1:   89 85 58 ff ff ff               	mov dword ptr [ebp - 0xa8], eax
0x804a3e7:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a3ea:   0f be d8                        	movsx ebx, al
0x804a3ed:   0f bf 45 c4                     	movsx eax, word ptr [ebp - 0x3c]
0x804a3f1:   ba 00 00 00 00                  	mov edx, 0
0x804a3f6:   f7 b5 c0 fe ff ff               	div dword ptr [ebp - 0x140]
0x804a3fc:   89 c2                           	mov edx, eax
0x804a3fe:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804a402:   09 c2                           	or edx, eax
0x804a404:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x804a40a:   31 c2                           	xor edx, eax
0x804a40c:   0f b7 45 86                     	movzx eax, word ptr [ebp - 0x7a]
0x804a410:   29 c2                           	sub edx, eax
0x804a412:   8b 85 c0 fe ff ff               	mov eax, dword ptr [ebp - 0x140]
0x804a418:   88 85 b0 fe ff ff               	mov byte ptr [ebp - 0x150], al
0x804a41e:   0f b6 c2                        	movzx eax, dl
0x804a421:   f6 b5 b0 fe ff ff               	div byte ptr [ebp - 0x150]
0x804a427:   0f be c0                        	movsx eax, al
0x804a42a:   01 d8                           	add eax, ebx
0x804a42c:   39 85 58 ff ff ff               	cmp dword ptr [ebp - 0xa8], eax
0x804a432:   7f 07                           	jg 0x804a43b <func_1+0xbb1>
0x804a434:   66 83 7d e8 00                  	cmp word ptr [ebp - 0x18], 0
0x804a439:   74 07                           	je 0x804a442 <func_1+0xbb8>
0x804a43b:   b8 01 00 00 00                  	mov eax, 1
0x804a440:   eb 05                           	jmp 0x804a447 <func_1+0xbbd>
0x804a442:   b8 00 00 00 00                  	mov eax, 0
0x804a447:   0f b6 d0                        	movzx edx, al
0x804a44a:   0f b7 85 cc fe ff ff            	movzx eax, word ptr [ebp - 0x134]
0x804a451:   0f b6 c0                        	movzx eax, al
0x804a454:   0f af c2                        	imul eax, edx
0x804a457:   29 c1                           	sub ecx, eax
0x804a459:   89 c8                           	mov eax, ecx
0x804a45b:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804a45e:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a461:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x804a467:   66 c7 45 a6 00 00               	mov word ptr [ebp - 0x5a], 0
0x804a46d:   eb 2a                           	jmp 0x804a499 <func_1+0xc0f>
0x804a46f:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a472:   0f bf d0                        	movsx edx, ax
0x804a475:   69 d2 bb 10 00 00               	imul edx, edx, 0x10bb
0x804a47b:   c1 ea 10                        	shr edx, 0x10
0x804a47e:   66 c1 fa 0a                     	sar dx, 0xa
0x804a482:   66 c1 f8 0f                     	sar ax, 0xf
0x804a486:   29 c2                           	sub edx, eax
0x804a488:   89 d0                           	mov eax, edx
0x804a48a:   98                              	cwde 
0x804a48b:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804a48e:   0f b7 45 a6                     	movzx eax, word ptr [ebp - 0x5a]
0x804a492:   83 c0 01                        	add eax, 1
0x804a495:   66 89 45 a6                     	mov word ptr [ebp - 0x5a], ax
0x804a499:   66 83 7d a6 2e                  	cmp word ptr [ebp - 0x5a], 0x2e
0x804a49e:   75 cf                           	jne 0x804a46f <func_1+0xbe5>
0x804a4a0:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x804a4a4:   83 e8 01                        	sub eax, 1
0x804a4a7:   66 89 45 9e                     	mov word ptr [ebp - 0x62], ax
0x804a4ab:   66 83 7d 9e 09                  	cmp word ptr [ebp - 0x62], 9
0x804a4b0:   0f 8f 16 ff ff ff               	jg 0x804a3cc <func_1+0xb42>
0x804a4b6:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x804a4bd:   83 c0 01                        	add eax, 1
0x804a4c0:   66 89 85 7a ff ff ff            	mov word ptr [ebp - 0x86], ax
0x804a4c7:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a4ca:   0f b6 c0                        	movzx eax, al
0x804a4cd:   8d 90 02 ff ff ff               	lea edx, [eax - 0xfe]
0x804a4d3:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a4d7:   39 c2                           	cmp edx, eax
0x804a4d9:   0f 9c c0                        	setl al
0x804a4dc:   89 c2                           	mov edx, eax
0x804a4de:   0f b6 85 56 ff ff ff            	movzx eax, byte ptr [ebp - 0xaa]
0x804a4e5:   21 c2                           	and edx, eax
0x804a4e7:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a4eb:   31 d0                           	xor eax, edx
0x804a4ed:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x804a4f0:   b8 01 00 00 00                  	mov eax, 1
0x804a4f5:   89 c2                           	mov edx, eax
0x804a4f7:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x804a4fb:   21 d0                           	and eax, edx
0x804a4fd:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x804a501:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x804a505:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804a508:   83 7d 88 00                     	cmp dword ptr [ebp - 0x78], 0
0x804a50c:   74 07                           	je 0x804a515 <func_1+0xc8b>
0x804a50e:   b8 01 00 00 00                  	mov eax, 1
0x804a513:   eb 05                           	jmp 0x804a51a <func_1+0xc90>
0x804a515:   b8 00 00 00 00                  	mov eax, 0
0x804a51a:   98                              	cwde 
0x804a51b:   83 e8 03                        	sub eax, 3
0x804a51e:   0b 85 c4 fe ff ff               	or eax, dword ptr [ebp - 0x13c]
0x804a524:   8b 5d 80                        	mov ebx, dword ptr [ebp - 0x80]
0x804a527:   99                              	cdq 
0x804a528:   f7 fb                           	idiv ebx
0x804a52a:   89 c2                           	mov edx, eax
0x804a52c:   0f be 45 d1                     	movsx eax, byte ptr [ebp - 0x2f]
0x804a530:   39 c2                           	cmp edx, eax
0x804a532:   0f 9c c0                        	setl al
0x804a535:   0f b6 d0                        	movzx edx, al
0x804a538:   0f be 45 d1                     	movsx eax, byte ptr [ebp - 0x2f]
0x804a53c:   21 d0                           	and eax, edx
0x804a53e:   09 45 cc                        	or dword ptr [ebp - 0x34], eax
0x804a541:   c7 45 b0 1b 00 00 00            	mov dword ptr [ebp - 0x50], 0x1b
0x804a548:   eb 53                           	jmp 0x804a59d <func_1+0xd13>
0x804a54a:   0f b7 95 7a ff ff ff            	movzx edx, word ptr [ebp - 0x86]
0x804a551:   0f bf 45 c6                     	movsx eax, word ptr [ebp - 0x3a]
0x804a555:   39 c2                           	cmp edx, eax
0x804a557:   0f 9e c0                        	setle al
0x804a55a:   0f b6 d0                        	movzx edx, al
0x804a55d:   66 c7 45 da 01 00               	mov word ptr [ebp - 0x26], 1
0x804a563:   66 83 7d 9e 00                  	cmp word ptr [ebp - 0x62], 0
0x804a568:   74 07                           	je 0x804a571 <func_1+0xce7>
0x804a56a:   b8 01 00 00 00                  	mov eax, 1
0x804a56f:   eb 05                           	jmp 0x804a576 <func_1+0xcec>
0x804a571:   b8 00 00 00 00                  	mov eax, 0
0x804a576:   3d bf 00 00 00                  	cmp eax, 0xbf
0x804a57b:   0f 9e c0                        	setle al
0x804a57e:   0f b6 c0                        	movzx eax, al
0x804a581:   39 45 cc                        	cmp dword ptr [ebp - 0x34], eax
0x804a584:   0f 9c c0                        	setl al
0x804a587:   0f b6 c0                        	movzx eax, al
0x804a58a:   39 c2                           	cmp edx, eax
0x804a58c:   0f 9e c0                        	setle al
0x804a58f:   0f b6 c0                        	movzx eax, al
0x804a592:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804a595:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x804a599:   83 6d b0 03                     	sub dword ptr [ebp - 0x50], 3
0x804a59d:   83 7d b0 06                     	cmp dword ptr [ebp - 0x50], 6
0x804a5a1:   75 a7                           	jne 0x804a54a <func_1+0xcc0>
0x804a5a3:   e9 4e 01 00 00                  	jmp 0x804a6f6 <func_1+0xe6c>
0x804a5a8:   c7 85 ec fe ff ff 76 f7 05 b4   	mov dword ptr [ebp - 0x114], 0xb405f776
0x804a5b2:   c7 85 e8 fe ff ff fc ff ff ff   	mov dword ptr [ebp - 0x118], 0xfffffffc
0x804a5bc:   66 c7 85 e6 fe ff ff 01 00      	mov word ptr [ebp - 0x11a], 1
0x804a5c5:   66 c7 85 e4 fe ff ff 00 00      	mov word ptr [ebp - 0x11c], 0
0x804a5ce:   0f b6 85 6b ff ff ff            	movzx eax, byte ptr [ebp - 0x95]
0x804a5d5:   0f be 95 71 ff ff ff            	movsx edx, byte ptr [ebp - 0x8f]
0x804a5dc:   0f bf 8d 72 ff ff ff            	movsx ecx, word ptr [ebp - 0x8e]
0x804a5e3:   0f b7 9d 7a ff ff ff            	movzx ebx, word ptr [ebp - 0x86]
0x804a5ea:   0f bf 75 86                     	movsx esi, word ptr [ebp - 0x7a]
0x804a5ee:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x804a5f4:   0f bf 7d c4                     	movsx edi, word ptr [ebp - 0x3c]
0x804a5f8:   89 bd ac fe ff ff               	mov dword ptr [ebp - 0x154], edi
0x804a5fe:   0f bf 75 c6                     	movsx esi, word ptr [ebp - 0x3a]
0x804a602:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x804a608:   0f b7 7d c8                     	movzx edi, word ptr [ebp - 0x38]
0x804a60c:   89 bd a4 fe ff ff               	mov dword ptr [ebp - 0x15c], edi
0x804a612:   0f bf 75 ca                     	movsx esi, word ptr [ebp - 0x36]
0x804a616:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a61c:   0f be 7d d1                     	movsx edi, byte ptr [ebp - 0x2f]
0x804a620:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x804a626:   0f b6 75 e1                     	movzx esi, byte ptr [ebp - 0x1f]
0x804a62a:   89 b5 98 fe ff ff               	mov dword ptr [ebp - 0x168], esi
0x804a630:   0f b7 7d d2                     	movzx edi, word ptr [ebp - 0x2e]
0x804a634:   89 bd 94 fe ff ff               	mov dword ptr [ebp - 0x16c], edi
0x804a63a:   0f bf 75 da                     	movsx esi, word ptr [ebp - 0x26]
0x804a63e:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x804a644:   0f bf 7d e2                     	movsx edi, word ptr [ebp - 0x1e]
0x804a648:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x804a64e:   0f bf 75 e8                     	movsx esi, word ptr [ebp - 0x18]
0x804a652:   89 b5 88 fe ff ff               	mov dword ptr [ebp - 0x178], esi
0x804a658:   0f be 7d ea                     	movsx edi, byte ptr [ebp - 0x16]
0x804a65c:   89 bd 84 fe ff ff               	mov dword ptr [ebp - 0x17c], edi
0x804a662:   0f b6 7d eb                     	movzx edi, byte ptr [ebp - 0x15]
0x804a666:   0f b6 75 f3                     	movzx esi, byte ptr [ebp - 0xd]
0x804a66a:   50                              	push eax
0x804a66b:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a671:   52                              	push edx
0x804a672:   51                              	push ecx
0x804a673:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a679:   53                              	push ebx
0x804a67a:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a680:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a683:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a686:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a68c:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a68f:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a695:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a69b:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a6a1:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a6a7:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a6aa:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a6b0:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a6b3:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a6b9:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a6bf:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a6c2:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a6c8:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a6ce:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a6d1:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a6d7:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a6dd:   57                              	push edi
0x804a6de:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a6e1:   56                              	push esi
0x804a6e2:   e8 6d ef ff ff                  	call 0x8049654 <set_var>
0x804a6e7:   83 c4 74                        	add esp, 0x74
0x804a6ea:   0f b6 85 71 ff ff ff            	movzx eax, byte ptr [ebp - 0x8f]
0x804a6f1:   e9 23 01 00 00                  	jmp 0x804a819 <func_1+0xf8f>
0x804a6f6:   0f b6 85 6b ff ff ff            	movzx eax, byte ptr [ebp - 0x95]
0x804a6fd:   0f be 95 71 ff ff ff            	movsx edx, byte ptr [ebp - 0x8f]
0x804a704:   0f bf 8d 72 ff ff ff            	movsx ecx, word ptr [ebp - 0x8e]
0x804a70b:   0f b7 9d 7a ff ff ff            	movzx ebx, word ptr [ebp - 0x86]
0x804a712:   0f bf 75 86                     	movsx esi, word ptr [ebp - 0x7a]
0x804a716:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x804a71c:   0f bf 7d c4                     	movsx edi, word ptr [ebp - 0x3c]
0x804a720:   89 bd ac fe ff ff               	mov dword ptr [ebp - 0x154], edi
0x804a726:   0f bf 75 c6                     	movsx esi, word ptr [ebp - 0x3a]
0x804a72a:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x804a730:   0f b7 7d c8                     	movzx edi, word ptr [ebp - 0x38]
0x804a734:   89 bd a4 fe ff ff               	mov dword ptr [ebp - 0x15c], edi
0x804a73a:   0f bf 75 ca                     	movsx esi, word ptr [ebp - 0x36]
0x804a73e:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a744:   0f be 7d d1                     	movsx edi, byte ptr [ebp - 0x2f]
0x804a748:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x804a74e:   0f b6 75 e1                     	movzx esi, byte ptr [ebp - 0x1f]
0x804a752:   89 b5 98 fe ff ff               	mov dword ptr [ebp - 0x168], esi
0x804a758:   0f b7 7d d2                     	movzx edi, word ptr [ebp - 0x2e]
0x804a75c:   89 bd 94 fe ff ff               	mov dword ptr [ebp - 0x16c], edi
0x804a762:   0f bf 75 da                     	movsx esi, word ptr [ebp - 0x26]
0x804a766:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x804a76c:   0f bf 7d e2                     	movsx edi, word ptr [ebp - 0x1e]
0x804a770:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x804a776:   0f bf 75 e8                     	movsx esi, word ptr [ebp - 0x18]
0x804a77a:   89 b5 88 fe ff ff               	mov dword ptr [ebp - 0x178], esi
0x804a780:   0f be 7d ea                     	movsx edi, byte ptr [ebp - 0x16]
0x804a784:   89 bd 84 fe ff ff               	mov dword ptr [ebp - 0x17c], edi
0x804a78a:   0f b6 7d eb                     	movzx edi, byte ptr [ebp - 0x15]
0x804a78e:   0f b6 75 f3                     	movzx esi, byte ptr [ebp - 0xd]
0x804a792:   50                              	push eax
0x804a793:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a799:   52                              	push edx
0x804a79a:   51                              	push ecx
0x804a79b:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a7a1:   53                              	push ebx
0x804a7a2:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a7a8:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a7ab:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a7ae:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a7b4:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a7b7:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a7bd:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a7c3:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a7c9:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a7cf:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a7d2:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a7d8:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a7db:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a7e1:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a7e7:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a7ea:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a7f0:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a7f6:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a7f9:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a7ff:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a805:   57                              	push edi
0x804a806:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a809:   56                              	push esi
0x804a80a:   e8 45 ee ff ff                  	call 0x8049654 <set_var>
0x804a80f:   83 c4 74                        	add esp, 0x74
0x804a812:   0f b7 85 60 ff ff ff            	movzx eax, word ptr [ebp - 0xa0]
0x804a819:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a81c:   5b                              	pop ebx
0x804a81d:   5e                              	pop esi
0x804a81e:   5f                              	pop edi
0x804a81f:   5d                              	pop ebp
0x804a820:   c3                              	ret 
; function: main at 0x804a821 -- 0x804ac17
0x804a821:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a825:   83 e4 f0                        	and esp, 0xfffffff0
0x804a828:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a82b:   55                              	push ebp
0x804a82c:   89 e5                           	mov ebp, esp
0x804a82e:   53                              	push ebx
0x804a82f:   51                              	push ecx
0x804a830:   83 ec 10                        	sub esp, 0x10
0x804a833:   e8 58 db ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a838:   81 c3 c8 27 00 00               	add ebx, 0x27c8
0x804a83e:   89 c8                           	mov eax, ecx
0x804a840:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a847:   83 38 02                        	cmp dword ptr [eax], 2
0x804a84a:   75 26                           	jne 0x804a872 <main+0x51>
0x804a84c:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a84f:   83 c0 04                        	add eax, 4
0x804a852:   8b 00                           	mov eax, dword ptr [eax]
0x804a854:   83 ec 08                        	sub esp, 8
0x804a857:   8d 93 fc dc ff ff               	lea edx, [ebx - 0x2304]
0x804a85d:   52                              	push edx
0x804a85e:   50                              	push eax
0x804a85f:   e8 9c da ff ff                  	call 0x8048300 <strcmp>
0x804a864:   83 c4 10                        	add esp, 0x10
0x804a867:   85 c0                           	test eax, eax
0x804a869:   75 07                           	jne 0x804a872 <main+0x51>
0x804a86b:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a872:   e8 df db ff ff                  	call 0x8048456 <platform_main_begin>
0x804a877:   e8 ef eb ff ff                  	call 0x804946b <crc32_gentab>
0x804a87c:   e8 09 f0 ff ff                  	call 0x804988a <func_1>
0x804a881:   0f b6 83 24 00 00 00            	movzx eax, byte ptr [ebx + 0x24]
0x804a888:   0f b6 c0                        	movzx eax, al
0x804a88b:   83 ec 04                        	sub esp, 4
0x804a88e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a891:   8d 93 fe dc ff ff               	lea edx, [ebx - 0x2302]
0x804a897:   52                              	push edx
0x804a898:   50                              	push eax
0x804a899:   e8 d9 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a89e:   83 c4 10                        	add esp, 0x10
0x804a8a1:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a8a7:   89 c2                           	mov edx, eax
0x804a8a9:   83 ec 04                        	sub esp, 4
0x804a8ac:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8af:   8d 83 02 dd ff ff               	lea eax, [ebx - 0x22fe]
0x804a8b5:   50                              	push eax
0x804a8b6:   52                              	push edx
0x804a8b7:   e8 bb ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8bc:   83 c4 10                        	add esp, 0x10
0x804a8bf:   0f b6 83 2c 00 00 00            	movzx eax, byte ptr [ebx + 0x2c]
0x804a8c6:   0f b6 c0                        	movzx eax, al
0x804a8c9:   83 ec 04                        	sub esp, 4
0x804a8cc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8cf:   8d 93 06 dd ff ff               	lea edx, [ebx - 0x22fa]
0x804a8d5:   52                              	push edx
0x804a8d6:   50                              	push eax
0x804a8d7:   e8 9b ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8dc:   83 c4 10                        	add esp, 0x10
0x804a8df:   0f b6 83 2d 00 00 00            	movzx eax, byte ptr [ebx + 0x2d]
0x804a8e6:   0f be c0                        	movsx eax, al
0x804a8e9:   83 ec 04                        	sub esp, 4
0x804a8ec:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8ef:   8d 93 0a dd ff ff               	lea edx, [ebx - 0x22f6]
0x804a8f5:   52                              	push edx
0x804a8f6:   50                              	push eax
0x804a8f7:   e8 7b ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8fc:   83 c4 10                        	add esp, 0x10
0x804a8ff:   0f b7 83 2e 00 00 00            	movzx eax, word ptr [ebx + 0x2e]
0x804a906:   98                              	cwde 
0x804a907:   83 ec 04                        	sub esp, 4
0x804a90a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a90d:   8d 93 0f dd ff ff               	lea edx, [ebx - 0x22f1]
0x804a913:   52                              	push edx
0x804a914:   50                              	push eax
0x804a915:   e8 5d ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a91a:   83 c4 10                        	add esp, 0x10
0x804a91d:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804a923:   89 c2                           	mov edx, eax
0x804a925:   83 ec 04                        	sub esp, 4
0x804a928:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a92b:   8d 83 14 dd ff ff               	lea eax, [ebx - 0x22ec]
0x804a931:   50                              	push eax
0x804a932:   52                              	push edx
0x804a933:   e8 3f ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a938:   83 c4 10                        	add esp, 0x10
0x804a93b:   0f b7 83 34 00 00 00            	movzx eax, word ptr [ebx + 0x34]
0x804a942:   98                              	cwde 
0x804a943:   83 ec 04                        	sub esp, 4
0x804a946:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a949:   8d 93 19 dd ff ff               	lea edx, [ebx - 0x22e7]
0x804a94f:   52                              	push edx
0x804a950:   50                              	push eax
0x804a951:   e8 21 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a956:   83 c4 10                        	add esp, 0x10
0x804a959:   0f b7 83 36 00 00 00            	movzx eax, word ptr [ebx + 0x36]
0x804a960:   98                              	cwde 
0x804a961:   83 ec 04                        	sub esp, 4
0x804a964:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a967:   8d 93 1e dd ff ff               	lea edx, [ebx - 0x22e2]
0x804a96d:   52                              	push edx
0x804a96e:   50                              	push eax
0x804a96f:   e8 03 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a974:   83 c4 10                        	add esp, 0x10
0x804a977:   8b 83 a4 04 00 00               	mov eax, dword ptr [ebx + 0x4a4]
0x804a97d:   83 ec 04                        	sub esp, 4
0x804a980:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a983:   8d 93 23 dd ff ff               	lea edx, [ebx - 0x22dd]
0x804a989:   52                              	push edx
0x804a98a:   50                              	push eax
0x804a98b:   e8 e7 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a990:   83 c4 10                        	add esp, 0x10
0x804a993:   0f b7 83 38 00 00 00            	movzx eax, word ptr [ebx + 0x38]
0x804a99a:   0f b7 c0                        	movzx eax, ax
0x804a99d:   83 ec 04                        	sub esp, 4
0x804a9a0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9a3:   8d 93 28 dd ff ff               	lea edx, [ebx - 0x22d8]
0x804a9a9:   52                              	push edx
0x804a9aa:   50                              	push eax
0x804a9ab:   e8 c7 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9b0:   83 c4 10                        	add esp, 0x10
0x804a9b3:   0f b6 83 3a 00 00 00            	movzx eax, byte ptr [ebx + 0x3a]
0x804a9ba:   0f b6 c0                        	movzx eax, al
0x804a9bd:   83 ec 04                        	sub esp, 4
0x804a9c0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9c3:   8d 93 2d dd ff ff               	lea edx, [ebx - 0x22d3]
0x804a9c9:   52                              	push edx
0x804a9ca:   50                              	push eax
0x804a9cb:   e8 a7 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9d0:   83 c4 10                        	add esp, 0x10
0x804a9d3:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804a9d9:   83 ec 04                        	sub esp, 4
0x804a9dc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9df:   8d 93 32 dd ff ff               	lea edx, [ebx - 0x22ce]
0x804a9e5:   52                              	push edx
0x804a9e6:   50                              	push eax
0x804a9e7:   e8 8b eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9ec:   83 c4 10                        	add esp, 0x10
0x804a9ef:   0f b6 83 40 00 00 00            	movzx eax, byte ptr [ebx + 0x40]
0x804a9f6:   0f be c0                        	movsx eax, al
0x804a9f9:   83 ec 04                        	sub esp, 4
0x804a9fc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9ff:   8d 93 38 dd ff ff               	lea edx, [ebx - 0x22c8]
0x804aa05:   52                              	push edx
0x804aa06:   50                              	push eax
0x804aa07:   e8 6b eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa0c:   83 c4 10                        	add esp, 0x10
0x804aa0f:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804aa15:   89 c2                           	mov edx, eax
0x804aa17:   83 ec 04                        	sub esp, 4
0x804aa1a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa1d:   8d 83 3e dd ff ff               	lea eax, [ebx - 0x22c2]
0x804aa23:   50                              	push eax
0x804aa24:   52                              	push edx
0x804aa25:   e8 4d eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa2a:   83 c4 10                        	add esp, 0x10
0x804aa2d:   0f b7 83 48 00 00 00            	movzx eax, word ptr [ebx + 0x48]
0x804aa34:   98                              	cwde 
0x804aa35:   83 ec 04                        	sub esp, 4
0x804aa38:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa3b:   8d 93 44 dd ff ff               	lea edx, [ebx - 0x22bc]
0x804aa41:   52                              	push edx
0x804aa42:   50                              	push eax
0x804aa43:   e8 2f eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa48:   83 c4 10                        	add esp, 0x10
0x804aa4b:   0f b7 83 4a 00 00 00            	movzx eax, word ptr [ebx + 0x4a]
0x804aa52:   0f b7 c0                        	movzx eax, ax
0x804aa55:   83 ec 04                        	sub esp, 4
0x804aa58:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa5b:   8d 93 4a dd ff ff               	lea edx, [ebx - 0x22b6]
0x804aa61:   52                              	push edx
0x804aa62:   50                              	push eax
0x804aa63:   e8 0f eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa68:   83 c4 10                        	add esp, 0x10
0x804aa6b:   0f b7 83 4c 00 00 00            	movzx eax, word ptr [ebx + 0x4c]
0x804aa72:   98                              	cwde 
0x804aa73:   83 ec 04                        	sub esp, 4
0x804aa76:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa79:   8d 93 50 dd ff ff               	lea edx, [ebx - 0x22b0]
0x804aa7f:   52                              	push edx
0x804aa80:   50                              	push eax
0x804aa81:   e8 f1 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa86:   83 c4 10                        	add esp, 0x10
0x804aa89:   0f b7 83 4e 00 00 00            	movzx eax, word ptr [ebx + 0x4e]
0x804aa90:   98                              	cwde 
0x804aa91:   83 ec 04                        	sub esp, 4
0x804aa94:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa97:   8d 93 56 dd ff ff               	lea edx, [ebx - 0x22aa]
0x804aa9d:   52                              	push edx
0x804aa9e:   50                              	push eax
0x804aa9f:   e8 d3 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaa4:   83 c4 10                        	add esp, 0x10
0x804aaa7:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804aaad:   89 c2                           	mov edx, eax
0x804aaaf:   83 ec 04                        	sub esp, 4
0x804aab2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aab5:   8d 83 5c dd ff ff               	lea eax, [ebx - 0x22a4]
0x804aabb:   50                              	push eax
0x804aabc:   52                              	push edx
0x804aabd:   e8 b5 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aac2:   83 c4 10                        	add esp, 0x10
0x804aac5:   0f b7 83 54 00 00 00            	movzx eax, word ptr [ebx + 0x54]
0x804aacc:   98                              	cwde 
0x804aacd:   83 ec 04                        	sub esp, 4
0x804aad0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aad3:   8d 93 62 dd ff ff               	lea edx, [ebx - 0x229e]
0x804aad9:   52                              	push edx
0x804aada:   50                              	push eax
0x804aadb:   e8 97 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aae0:   83 c4 10                        	add esp, 0x10
0x804aae3:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804aae9:   83 ec 04                        	sub esp, 4
0x804aaec:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaef:   8d 93 68 dd ff ff               	lea edx, [ebx - 0x2298]
0x804aaf5:   52                              	push edx
0x804aaf6:   50                              	push eax
0x804aaf7:   e8 7b ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aafc:   83 c4 10                        	add esp, 0x10
0x804aaff:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804ab05:   83 ec 04                        	sub esp, 4
0x804ab08:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab0b:   8d 93 6e dd ff ff               	lea edx, [ebx - 0x2292]
0x804ab11:   52                              	push edx
0x804ab12:   50                              	push eax
0x804ab13:   e8 5f ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab18:   83 c4 10                        	add esp, 0x10
0x804ab1b:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804ab21:   89 c2                           	mov edx, eax
0x804ab23:   83 ec 04                        	sub esp, 4
0x804ab26:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab29:   8d 83 74 dd ff ff               	lea eax, [ebx - 0x228c]
0x804ab2f:   50                              	push eax
0x804ab30:   52                              	push edx
0x804ab31:   e8 41 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab36:   83 c4 10                        	add esp, 0x10
0x804ab39:   0f b7 83 a8 04 00 00            	movzx eax, word ptr [ebx + 0x4a8]
0x804ab40:   0f b7 c0                        	movzx eax, ax
0x804ab43:   83 ec 04                        	sub esp, 4
0x804ab46:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab49:   8d 93 7a dd ff ff               	lea edx, [ebx - 0x2286]
0x804ab4f:   52                              	push edx
0x804ab50:   50                              	push eax
0x804ab51:   e8 21 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab56:   83 c4 10                        	add esp, 0x10
0x804ab59:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804ab5f:   89 c2                           	mov edx, eax
0x804ab61:   83 ec 04                        	sub esp, 4
0x804ab64:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab67:   8d 83 80 dd ff ff               	lea eax, [ebx - 0x2280]
0x804ab6d:   50                              	push eax
0x804ab6e:   52                              	push edx
0x804ab6f:   e8 03 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab74:   83 c4 10                        	add esp, 0x10
0x804ab77:   0f b7 83 68 00 00 00            	movzx eax, word ptr [ebx + 0x68]
0x804ab7e:   98                              	cwde 
0x804ab7f:   83 ec 04                        	sub esp, 4
0x804ab82:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab85:   8d 93 86 dd ff ff               	lea edx, [ebx - 0x227a]
0x804ab8b:   52                              	push edx
0x804ab8c:   50                              	push eax
0x804ab8d:   e8 e5 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab92:   83 c4 10                        	add esp, 0x10
0x804ab95:   0f b6 83 6a 00 00 00            	movzx eax, byte ptr [ebx + 0x6a]
0x804ab9c:   0f be c0                        	movsx eax, al
0x804ab9f:   83 ec 04                        	sub esp, 4
0x804aba2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aba5:   8d 93 8c dd ff ff               	lea edx, [ebx - 0x2274]
0x804abab:   52                              	push edx
0x804abac:   50                              	push eax
0x804abad:   e8 c5 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abb2:   83 c4 10                        	add esp, 0x10
0x804abb5:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804abbb:   83 ec 04                        	sub esp, 4
0x804abbe:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abc1:   8d 93 92 dd ff ff               	lea edx, [ebx - 0x226e]
0x804abc7:   52                              	push edx
0x804abc8:   50                              	push eax
0x804abc9:   e8 a9 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abce:   83 c4 10                        	add esp, 0x10
0x804abd1:   0f b6 83 aa 04 00 00            	movzx eax, byte ptr [ebx + 0x4aa]
0x804abd8:   0f b6 c0                        	movzx eax, al
0x804abdb:   83 ec 04                        	sub esp, 4
0x804abde:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abe1:   8d 93 98 dd ff ff               	lea edx, [ebx - 0x2268]
0x804abe7:   52                              	push edx
0x804abe8:   50                              	push eax
0x804abe9:   e8 89 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abee:   83 c4 10                        	add esp, 0x10
0x804abf1:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804abf7:   f7 d0                           	not eax
0x804abf9:   83 ec 08                        	sub esp, 8
0x804abfc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abff:   50                              	push eax
0x804ac00:   e8 61 d8 ff ff                  	call 0x8048466 <platform_main_end>
0x804ac05:   83 c4 10                        	add esp, 0x10
0x804ac08:   b8 00 00 00 00                  	mov eax, 0
0x804ac0d:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ac10:   59                              	pop ecx
0x804ac11:   5b                              	pop ebx
0x804ac12:   5d                              	pop ebp
0x804ac13:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ac16:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ac17 -- 0x804ac1b
0x804ac17:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ac1a:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804ac1b -- 0x804ac1f
0x804ac1b:   8b 14 24                        	mov edx, dword ptr [esp]
0x804ac1e:   c3                              	ret 
; data inside code section at 0x804ac1f -- 0x804ac20
0x804ac1f:   90                                                 |.               |
; function: __libc_csu_init at 0x804ac20 -- 0x804ac7d
0x804ac20:   55                              	push ebp
0x804ac21:   57                              	push edi
0x804ac22:   56                              	push esi
0x804ac23:   53                              	push ebx
0x804ac24:   e8 67 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ac29:   81 c3 d7 23 00 00               	add ebx, 0x23d7
0x804ac2f:   83 ec 0c                        	sub esp, 0xc
0x804ac32:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ac36:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ac3c:   e8 8b d6 ff ff                  	call 0x80482cc <_init>
0x804ac41:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804ac47:   29 c6                           	sub esi, eax
0x804ac49:   c1 fe 02                        	sar esi, 2
0x804ac4c:   85 f6                           	test esi, esi
0x804ac4e:   74 25                           	je 0x804ac75 <__libc_csu_init+0x55>
0x804ac50:   31 ff                           	xor edi, edi
0x804ac52:   8d b6 00 00 00 00               	lea esi, [esi]
0x804ac58:   83 ec 04                        	sub esp, 4
0x804ac5b:   55                              	push ebp
0x804ac5c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ac60:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ac64:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804ac6b:   83 c7 01                        	add edi, 1
0x804ac6e:   83 c4 10                        	add esp, 0x10
0x804ac71:   39 fe                           	cmp esi, edi
0x804ac73:   75 e3                           	jne 0x804ac58 <__libc_csu_init+0x38>
0x804ac75:   83 c4 0c                        	add esp, 0xc
0x804ac78:   5b                              	pop ebx
0x804ac79:   5e                              	pop esi
0x804ac7a:   5f                              	pop edi
0x804ac7b:   5d                              	pop ebp
0x804ac7c:   c3                              	ret 
; data inside code section at 0x804ac7d -- 0x804ac80
0x804ac7d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804ac80 -- 0x804ac82
0x804ac80:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804ac84 -- 0x804ac98
0x804ac84:   53                              	push ebx
0x804ac85:   83 ec 08                        	sub esp, 8
0x804ac88:   e8 03 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ac8d:   81 c3 73 23 00 00               	add ebx, 0x2373
0x804ac93:   83 c4 08                        	add esp, 8
0x804ac96:   5b                              	pop ebx
0x804ac97:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 9c ac 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804ac98:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804aca8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804acb8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804acc8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804acd8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ace8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804acf8:   25 64 0a 00 31 00 67 5f  32 00 67 5f 34 00 67 5f   |%d..1.g_2.g_4.g_|
0x804ad08:   36 00 67 5f 31 39 00 67  5f 32 37 00 67 5f 33 35   |6.g_19.g_27.g_35|
0x804ad18:   00 67 5f 33 37 00 67 5f  33 38 00 67 5f 33 39 00   |.g_37.g_38.g_39.|
0x804ad28:   67 5f 38 30 00 67 5f 39  30 00 67 5f 31 32 34 00   |g_80.g_90.g_124.|
0x804ad38:   67 5f 31 33 32 00 67 5f  31 36 35 00 67 5f 31 38   |g_132.g_165.g_18|
0x804ad48:   32 00 67 5f 31 38 33 00  67 5f 32 32 30 00 67 5f   |2.g_183.g_220.g_|
0x804ad58:   32 33 38 00 67 5f 32 34  36 00 67 5f 32 34 37 00   |238.g_246.g_247.|
0x804ad68:   67 5f 32 35 34 00 67 5f  32 37 33 00 67 5f 33 34   |g_254.g_273.g_34|
0x804ad78:   30 00 67 5f 33 34 31 00  67 5f 34 35 32 00 67 5f   |0.g_341.g_452.g_|
0x804ad88:   34 36 32 00 67 5f 34 36  34 00 67 5f 34 36 35 00   |462.g_464.g_465.|
0x804ad98:   67 5f 34 36 38 00 00 00  00 00 00 3f ff ff ff 7e   |g_468......?...~|
0x804ada8:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x804adb8:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x804adc8:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804add8:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804ade8:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804adf8:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804ae08:   01                                                 |.               |
; section: .eh_frame_hdr
0x804ae08:   01 1b 03 3b c0 02 00 00  57 00 00 00 e8 d4 ff ff   |...;....W.......|
0x804ae18:   f0 02 00 00 28 d5 ff ff  14 03 00 00 78 d5 ff ff   |....(.......x...|
0x804ae28:   dc 02 00 00 4e d6 ff ff  28 03 00 00 5e d6 ff ff   |....N...(...^...|
0x804ae38:   48 03 00 00 8c d6 ff ff  6c 03 00 00 aa d6 ff ff   |H.......l.......|
0x804ae48:   8c 03 00 00 d2 d6 ff ff  ac 03 00 00 fc d6 ff ff   |................|
0x804ae58:   cc 03 00 00 25 d7 ff ff  ec 03 00 00 68 d7 ff ff   |....%.......h...|
0x804ae68:   0c 04 00 00 a9 d7 ff ff  2c 04 00 00 01 d8 ff ff   |........,.......|
0x804ae78:   50 04 00 00 53 d8 ff ff  74 04 00 00 90 d8 ff ff   |P...S...t.......|
0x804ae88:   94 04 00 00 c7 d8 ff ff  b4 04 00 00 e6 d8 ff ff   |................|
0x804ae98:   d4 04 00 00 10 d9 ff ff  f4 04 00 00 3c d9 ff ff   |............<...|
0x804aea8:   14 05 00 00 67 d9 ff ff  34 05 00 00 b0 d9 ff ff   |....g...4.......|
0x804aeb8:   54 05 00 00 f7 d9 ff ff  74 05 00 00 51 da ff ff   |T.......t...Q...|
0x804aec8:   98 05 00 00 a5 da ff ff  bc 05 00 00 e4 da ff ff   |................|
0x804aed8:   dc 05 00 00 1d db ff ff  fc 05 00 00 3f db ff ff   |............?...|
0x804aee8:   1c 06 00 00 8d db ff ff  3c 06 00 00 c9 db ff ff   |........<.......|
0x804aef8:   5c 06 00 00 52 dc ff ff  7c 06 00 00 84 dc ff ff   |\...R...|.......|
0x804af08:   9c 06 00 00 b4 dc ff ff  bc 06 00 00 f9 dc ff ff   |................|
0x804af18:   dc 06 00 00 38 dd ff ff  fc 06 00 00 6a dd ff ff   |....8.......j...|
0x804af28:   1c 07 00 00 96 dd ff ff  3c 07 00 00 b4 dd ff ff   |........<.......|
0x804af38:   5c 07 00 00 dc dd ff ff  7c 07 00 00 01 de ff ff   |\.......|.......|
0x804af48:   9c 07 00 00 26 de ff ff  bc 07 00 00 5d de ff ff   |....&.......]...|
0x804af58:   dc 07 00 00 91 de ff ff  fc 07 00 00 e3 de ff ff   |................|
0x804af68:   20 08 00 00 2f df ff ff  44 08 00 00 66 df ff ff   | .../...D...f...|
0x804af78:   64 08 00 00 97 df ff ff  84 08 00 00 b6 df ff ff   |d...............|
0x804af88:   a4 08 00 00 e0 df ff ff  c4 08 00 00 08 e0 ff ff   |................|
0x804af98:   e4 08 00 00 31 e0 ff ff  04 09 00 00 6d e0 ff ff   |....1.......m...|
0x804afa8:   24 09 00 00 a7 e0 ff ff  44 09 00 00 fa e0 ff ff   |$.......D.......|
0x804afb8:   68 09 00 00 47 e1 ff ff  8c 09 00 00 7f e1 ff ff   |h...G...........|
0x804afc8:   ac 09 00 00 b1 e1 ff ff  cc 09 00 00 c5 e1 ff ff   |................|
0x804afd8:   ec 09 00 00 dc e1 ff ff  0c 0a 00 00 f1 e1 ff ff   |................|
0x804afe8:   2c 0a 00 00 07 e2 ff ff  4c 0a 00 00 2e e2 ff ff   |,.......L.......|
0x804aff8:   6c 0a 00 00 53 e2 ff ff  8c 0a 00 00 92 e2 ff ff   |l...S...........|
0x804b008:   ac 0a 00 00 cb e2 ff ff  cc 0a 00 00 f7 e2 ff ff   |................|
0x804b018:   ec 0a 00 00 1d e3 ff ff  0c 0b 00 00 5f e3 ff ff   |............_...|
0x804b028:   2c 0b 00 00 a1 e3 ff ff  4c 0b 00 00 e3 e3 ff ff   |,.......L.......|
0x804b038:   6c 0b 00 00 58 e4 ff ff  8c 0b 00 00 b5 e4 ff ff   |l...X...........|
0x804b048:   ac 0b 00 00 12 e5 ff ff  cc 0b 00 00 6f e5 ff ff   |............o...|
0x804b058:   ec 0b 00 00 ff e5 ff ff  0c 0c 00 00 63 e6 ff ff   |............c...|
0x804b068:   2c 0c 00 00 d3 e6 ff ff  4c 0c 00 00 1a e7 ff ff   |,.......L.......|
0x804b078:   70 0c 00 00 6f e7 ff ff  90 0c 00 00 b6 e7 ff ff   |p...o...........|
0x804b088:   b4 0c 00 00 1e e8 ff ff  d8 0c 00 00 4c e8 ff ff   |............L...|
0x804b098:   fc 0c 00 00 82 ea ff ff  2c 0d 00 00 19 fa ff ff   |........,.......|
0x804b0a8:   5c 0d 00 00 0f fe ff ff  94 0d 00 00 13 fe ff ff   |\...............|
0x804b0b8:   a8 0d 00 00 18 fe ff ff  bc 0d 00 00 78 fe ff ff   |............x...|
0x804b0c8:   08 0e 00 00 14                                     |.....           |
; section: .eh_frame
0x804b0cc:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b0dc:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b0ec:   94 d2 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b0fc:   30 00 00 00 f0 d1 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b10c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b11c:   10 00 00 00 54 00 00 00  0c d2 ff ff 08 00 00 00   |....T...........|
0x804b12c:   00 00 00 00 1c 00 00 00  68 00 00 00 1e d3 ff ff   |........h.......|
0x804b13c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b14c:   04 04 00 00 20 00 00 00  88 00 00 00 0e d3 ff ff   |.... ...........|
0x804b15c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b16c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b17c:   18 d3 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b18c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b19c:   16 d3 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b1ac:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b1bc:   1e d3 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b1cc:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b1dc:   28 d3 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |(...)....A....B.|
0x804b1ec:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b1fc:   31 d3 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |1...C....A....B.|
0x804b20c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b21c:   54 d3 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |T...A....A....B.|
0x804b22c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b23c:   75 d3 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |u...X....A....B.|
0x804b24c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b25c:   90 01 00 00 a9 d3 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b26c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b27c:   1c 00 00 00 b4 01 00 00  d7 d3 ff ff 3d 00 00 00   |............=...|
0x804b28c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b29c:   1c 00 00 00 d4 01 00 00  f4 d3 ff ff 37 00 00 00   |............7...|
0x804b2ac:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b2bc:   1c 00 00 00 f4 01 00 00  0b d4 ff ff 1f 00 00 00   |................|
0x804b2cc:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b2dc:   1c 00 00 00 14 02 00 00  0a d4 ff ff 2a 00 00 00   |............*...|
0x804b2ec:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b2fc:   1c 00 00 00 34 02 00 00  14 d4 ff ff 2c 00 00 00   |....4.......,...|
0x804b30c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b31c:   1c 00 00 00 54 02 00 00  20 d4 ff ff 2b 00 00 00   |....T... ...+...|
0x804b32c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b33c:   1c 00 00 00 74 02 00 00  2b d4 ff ff 49 00 00 00   |....t...+...I...|
0x804b34c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b35c:   1c 00 00 00 94 02 00 00  54 d4 ff ff 47 00 00 00   |........T...G...|
0x804b36c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b37c:   20 00 00 00 b4 02 00 00  7b d4 ff ff 5a 00 00 00   | .......{...Z...|
0x804b38c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b39c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 b1 d4 ff ff   |.... ...........|
0x804b3ac:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b3bc:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b3cc:   e1 d4 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b3dc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b3ec:   00 d5 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b3fc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b40c:   19 d5 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b41c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b42c:   1b d5 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b43c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b44c:   49 d5 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |I...<....A....B.|
0x804b45c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b46c:   65 d5 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |e........A....B.|
0x804b47c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b48c:   ce d5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b49c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b4ac:   e0 d5 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b4bc:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b4cc:   f0 d5 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b4dc:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b4ec:   15 d6 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b4fc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b50c:   34 d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |4...2....A....B.|
0x804b51c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b52c:   46 d6 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |F...,....A....B.|
0x804b53c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b54c:   52 d6 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |R........A....B.|
0x804b55c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b56c:   50 d6 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |P...(....A....B.|
0x804b57c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b58c:   58 d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |X...%....A....B.|
0x804b59c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b5ac:   5d d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |]...%....A....B.|
0x804b5bc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b5cc:   62 d6 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |b...7....A....B.|
0x804b5dc:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b5ec:   79 d6 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |y...4....A....B.|
0x804b5fc:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b60c:   8d d6 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b61c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b62c:   60 05 00 00 bb d6 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b63c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b64c:   1c 00 00 00 84 05 00 00  e3 d6 ff ff 37 00 00 00   |............7...|
0x804b65c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b66c:   1c 00 00 00 a4 05 00 00  fa d6 ff ff 31 00 00 00   |............1...|
0x804b67c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b68c:   1c 00 00 00 c4 05 00 00  0b d7 ff ff 1f 00 00 00   |................|
0x804b69c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b6ac:   1c 00 00 00 e4 05 00 00  0a d7 ff ff 2a 00 00 00   |............*...|
0x804b6bc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b6cc:   1c 00 00 00 04 06 00 00  14 d7 ff ff 28 00 00 00   |............(...|
0x804b6dc:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b6ec:   1c 00 00 00 24 06 00 00  1c d7 ff ff 29 00 00 00   |....$.......)...|
0x804b6fc:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b70c:   1c 00 00 00 44 06 00 00  25 d7 ff ff 3c 00 00 00   |....D...%...<...|
0x804b71c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b72c:   1c 00 00 00 64 06 00 00  41 d7 ff ff 3a 00 00 00   |....d...A...:...|
0x804b73c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b74c:   20 00 00 00 84 06 00 00  5b d7 ff ff 53 00 00 00   | .......[...S...|
0x804b75c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b76c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 8a d7 ff ff   |.... ...........|
0x804b77c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b78c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b79c:   b3 d7 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b7ac:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b7bc:   cb d7 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b7cc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b7dc:   dd d7 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b7ec:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b7fc:   d1 d7 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b80c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b81c:   c8 d7 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b82c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b83c:   bd d7 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b84c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b85c:   b3 d7 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b86c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b87c:   ba d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b88c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b89c:   bf d7 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b8ac:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b8bc:   de d7 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b8cc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b8dc:   f7 d7 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b8ec:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b8fc:   03 d8 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804b90c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b91c:   09 d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b92c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b93c:   2b d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |+...B....A....B.|
0x804b94c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b95c:   4d d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |M...B....A....B.|
0x804b96c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b97c:   6f d8 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |o...u....A....B.|
0x804b98c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b99c:   c4 d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b9ac:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b9bc:   01 d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b9cc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b9dc:   3e d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |>...]....A....B.|
0x804b9ec:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b9fc:   7b d9 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |{........A....B.|
0x804ba0c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804ba1c:   eb d9 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804ba2c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804ba3c:   2f da ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |/...p....A....B.|
0x804ba4c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804ba5c:   7f da ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804ba6c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804ba7c:   b0 09 00 00 a2 da ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804ba8c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804ba9c:   d0 09 00 00 d7 da ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804baac:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804babc:   20 00 00 00 f4 09 00 00  fa da ff ff 68 00 00 00   | ...........h...|
0x804bacc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804badc:   0c 04 04 00 20 00 00 00  18 0a 00 00 3e db ff ff   |.... .......>...|
0x804baec:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804bafc:   66 c5 c3 0c 04 04 00 00  2c 00 00 00 3c 0a 00 00   |f.......,...<...|
0x804bb0c:   48 db ff ff 36 02 00 00  00 41 0e 08 85 02 42 0d   |H...6....A....B.|
0x804bb1c:   05 46 87 03 86 04 83 05  03 29 02 c3 41 c6 41 c7   |.F.......)..A.A.|
0x804bb2c:   41 c5 0c 04 04 00 00 00  2c 00 00 00 6c 0a 00 00   |A.......,...l...|
0x804bb3c:   4e dd ff ff 97 0f 00 00  00 41 0e 08 85 02 42 0d   |N........A....B.|
0x804bb4c:   05 49 87 03 86 04 83 05  03 87 0f c3 41 c6 41 c7   |.I..........A.A.|
0x804bb5c:   41 c5 0c 04 04 00 00 00  34 00 00 00 9c 0a 00 00   |A.......4.......|
0x804bb6c:   b5 ec ff ff f6 03 00 00  00 44 0c 01 00 47 10 05   |.........D...G..|
0x804bb7c:   02 75 00 44 0f 03 75 78  06 10 03 02 75 7c 03 e1   |.u.D..ux....u|..|
0x804bb8c:   03 c1 0c 01 00 41 c3 41  c5 43 0c 04 04 00 00 00   |.....A.A.C......|
0x804bb9c:   10 00 00 00 d4 0a 00 00  73 f0 ff ff 04 00 00 00   |........s.......|
0x804bbac:   00 00 00 00 10 00 00 00  e8 0a 00 00 63 f0 ff ff   |............c...|
0x804bbbc:   04 00 00 00 00 00 00 00  48 00 00 00 fc 0a 00 00   |........H.......|
0x804bbcc:   54 f0 ff ff 5d 00 00 00  00 41 0e 08 85 02 41 0e   |T...]....A....A.|
0x804bbdc:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 4e 0e 20   |...A....A....N. |
0x804bbec:   69 0e 24 41 0e 28 44 0e  2c 44 0e 30 4d 0e 20 47   |i.$A.(D.,D.0M. G|
0x804bbfc:   0e 14 41 c3 0e 10 41 c6  0e 0c 41 c7 0e 08 41 c5   |..A...A...A...A.|
0x804bc0c:   0e 04 00 00 10 00 00 00  48 0b 00 00 68 f0 ff ff   |........H...h...|
0x804bc1c:   02 00 00 00 00 00 00 00  00 00 00 00 ??            |............?   |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 84 ac 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff 9b 00 00 00   |................|
0x804d028:   ff ff ff ff ce 04 d7 6b  a5 d6 97 e4 fa ff fa ff   |.......k........|
0x804d038:   ff ff 28 00 94 ba b1 d7  fe 00 00 00 fc e2 8d c5   |..(.............|
0x804d048:   38 74 bd fb cd e3 06 00  af 19 05 ef b6 ba 00 00   |8t..............|
0x804d058:   a4 59 29 91 06 00 00 00  6d aa 24 58 78 e5 85 c7   |.Y).....m.$Xx...|
0x804d068:   ff ff 17 00 01 00 00 00  ??                        |........?       |
