;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:29:56
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 b0 db ff ff               	lea eax, [ebx - 0x2450]
0x804835c:   50                              	push eax
0x804835d:   8d 83 50 db ff ff               	lea eax, [ebx - 0x24b0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 0c a8 04 08               	mov eax, 0x804a80c
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 68 d0 04 08                  	mov eax, 0x804d068
0x80483a5:   3d 68 d0 04 08                  	cmp eax, 0x804d068
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 68 d0 04 08                  	push 0x804d068
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 68 d0 04 08                  	mov eax, 0x804d068
0x80483e5:   2d 68 d0 04 08                  	sub eax, 0x804d068
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 68 d0 04 08                  	push 0x804d068
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 e4 26 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 d0 26 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 d0 db ff ff               	lea edx, [eax - 0x2430]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 a3 26 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 85 26 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 5d 26 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 33 26 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 0a 26 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 c7 25 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 85 25 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 2d 25 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 dc 24 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 9f 24 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 68 24 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 49 24 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 1f 24 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 f3 23 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 c8 23 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 7f 23 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 37 23 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 dd 22 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 8a 22 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 4b 22 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 15 22 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 f3 21 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 a5 21 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 69 21 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 e0 20 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 ae 20 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 7e 20 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 39 20 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 fa 1f 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 c8 1f 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 99 1f 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 7b 1f 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 53 1f 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 2e 1f 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 09 1f 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 d2 1e 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 9d 1e 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 4b 1e 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 00 1e 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 c9 1d 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 98 1d 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 79 1d 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 4f 1d 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 27 1d 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 fe 1c 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 c2 1c 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 87 1c 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 34 1c 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 e8 1b 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 b0 1b 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 81 1b 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 6d 1b 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 56 1b 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 41 1b 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 2b 1b 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 04 1b 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 df 1a 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 a0 1a 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 67 1a 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 3b 1a 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 15 1a 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 ac dc ff ff               	fld dword ptr [eax - 0x2354]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 ac dc ff ff               	fld dword ptr [eax - 0x2354]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 b0 dc ff ff               	fld dword ptr [eax - 0x2350]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 d3 19 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 ac dc ff ff               	fld dword ptr [eax - 0x2354]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 ac dc ff ff               	fld dword ptr [eax - 0x2354]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 b0 dc ff ff               	fld dword ptr [eax - 0x2350]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 91 19 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 b4 dc ff ff               	fld dword ptr [eax - 0x234c]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 b8 dc ff ff               	fld dword ptr [eax - 0x2348]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 bc dc ff ff               	fld dword ptr [eax - 0x2344]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 4f 19 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 c0 dc ff ff               	fld dword ptr [eax - 0x2340]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 c4 dc ff ff               	fld dword ptr [eax - 0x233c]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 c8 dc ff ff               	fld dword ptr [eax - 0x2338]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 d7 18 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 d0 dc ff ff               	fld qword ptr [eax - 0x2330]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 d0 dc ff ff               	fld qword ptr [eax - 0x2330]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 d8 dc ff ff               	fld qword ptr [eax - 0x2328]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 7a 18 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 d0 dc ff ff               	fld qword ptr [eax - 0x2330]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 d0 dc ff ff               	fld qword ptr [eax - 0x2330]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 d8 dc ff ff               	fld qword ptr [eax - 0x2328]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 1d 18 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 e0 dc ff ff               	fld qword ptr [eax - 0x2320]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 e8 dc ff ff               	fld qword ptr [eax - 0x2318]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 f0 dc ff ff               	fld qword ptr [eax - 0x2310]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 c0 17 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 f8 dc ff ff               	fld qword ptr [eax - 0x2308]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 00 dd ff ff               	fld qword ptr [eax - 0x2300]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 08 dd ff ff               	fld qword ptr [eax - 0x22f8]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 30 17 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 10 dd ff ff               	fld dword ptr [eax - 0x22f0]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 14 dd ff ff               	fld dword ptr [eax - 0x22ec]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 cc 16 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 5b 16 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 18 16 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 e0 db ff ff               	lea eax, [ebx - 0x2420]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 04 dc ff ff               	lea eax, [ebx - 0x23fc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x8049796
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 3c                        	sub esp, 0x3c
0x804962f:   e8 0e 15 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x8049634:   05 cc 39 00 00                  	add eax, 0x39cc
0x8049639:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804963c:   8b 4d 18                        	mov ecx, dword ptr [ebp + 0x18]
0x804963f:   8b 5d 1c                        	mov ebx, dword ptr [ebp + 0x1c]
0x8049642:   8b 75 38                        	mov esi, dword ptr [ebp + 0x38]
0x8049645:   89 75 c8                        	mov dword ptr [ebp - 0x38], esi
0x8049648:   8b 7d 3c                        	mov edi, dword ptr [ebp + 0x3c]
0x804964b:   89 7d c4                        	mov dword ptr [ebp - 0x3c], edi
0x804964e:   8b 75 40                        	mov esi, dword ptr [ebp + 0x40]
0x8049651:   89 75 c0                        	mov dword ptr [ebp - 0x40], esi
0x8049654:   8b 7d 48                        	mov edi, dword ptr [ebp + 0x48]
0x8049657:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x804965a:   8b 75 50                        	mov esi, dword ptr [ebp + 0x50]
0x804965d:   89 75 b8                        	mov dword ptr [ebp - 0x48], esi
0x8049660:   8b 7d 54                        	mov edi, dword ptr [ebp + 0x54]
0x8049663:   8b 75 58                        	mov esi, dword ptr [ebp + 0x58]
0x8049666:   88 55 f0                        	mov byte ptr [ebp - 0x10], dl
0x8049669:   89 ca                           	mov edx, ecx
0x804966b:   66 89 55 ec                     	mov word ptr [ebp - 0x14], dx
0x804966f:   89 da                           	mov edx, ebx
0x8049671:   66 89 55 e8                     	mov word ptr [ebp - 0x18], dx
0x8049675:   0f b7 55 c8                     	movzx edx, word ptr [ebp - 0x38]
0x8049679:   66 89 55 e4                     	mov word ptr [ebp - 0x1c], dx
0x804967d:   0f b7 55 c4                     	movzx edx, word ptr [ebp - 0x3c]
0x8049681:   66 89 55 e0                     	mov word ptr [ebp - 0x20], dx
0x8049685:   0f b7 55 c0                     	movzx edx, word ptr [ebp - 0x40]
0x8049689:   66 89 55 dc                     	mov word ptr [ebp - 0x24], dx
0x804968d:   0f b7 55 bc                     	movzx edx, word ptr [ebp - 0x44]
0x8049691:   66 89 55 d8                     	mov word ptr [ebp - 0x28], dx
0x8049695:   0f b6 55 b8                     	movzx edx, byte ptr [ebp - 0x48]
0x8049699:   88 55 d4                        	mov byte ptr [ebp - 0x2c], dl
0x804969c:   89 fa                           	mov edx, edi
0x804969e:   66 89 55 d0                     	mov word ptr [ebp - 0x30], dx
0x80496a2:   89 f2                           	mov edx, esi
0x80496a4:   66 89 55 cc                     	mov word ptr [ebp - 0x34], dx
0x80496a8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80496ab:   89 90 24 00 00 00               	mov dword ptr [eax + 0x24], edx
0x80496b1:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80496b4:   89 90 28 00 00 00               	mov dword ptr [eax + 0x28], edx
0x80496ba:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80496bd:   89 90 2c 00 00 00               	mov dword ptr [eax + 0x2c], edx
0x80496c3:   0f b6 55 f0                     	movzx edx, byte ptr [ebp - 0x10]
0x80496c7:   88 90 a4 04 00 00               	mov byte ptr [eax + 0x4a4], dl
0x80496cd:   0f b7 55 ec                     	movzx edx, word ptr [ebp - 0x14]
0x80496d1:   66 89 90 a6 04 00 00            	mov word ptr [eax + 0x4a6], dx
0x80496d8:   0f b7 55 e8                     	movzx edx, word ptr [ebp - 0x18]
0x80496dc:   66 89 90 30 00 00 00            	mov word ptr [eax + 0x30], dx
0x80496e3:   8b 55 20                        	mov edx, dword ptr [ebp + 0x20]
0x80496e6:   89 90 34 00 00 00               	mov dword ptr [eax + 0x34], edx
0x80496ec:   8b 55 24                        	mov edx, dword ptr [ebp + 0x24]
0x80496ef:   89 90 38 00 00 00               	mov dword ptr [eax + 0x38], edx
0x80496f5:   8b 55 28                        	mov edx, dword ptr [ebp + 0x28]
0x80496f8:   89 90 3c 00 00 00               	mov dword ptr [eax + 0x3c], edx
0x80496fe:   8b 55 2c                        	mov edx, dword ptr [ebp + 0x2c]
0x8049701:   89 90 40 00 00 00               	mov dword ptr [eax + 0x40], edx
0x8049707:   8b 55 30                        	mov edx, dword ptr [ebp + 0x30]
0x804970a:   89 90 44 00 00 00               	mov dword ptr [eax + 0x44], edx
0x8049710:   8b 55 34                        	mov edx, dword ptr [ebp + 0x34]
0x8049713:   89 90 a8 04 00 00               	mov dword ptr [eax + 0x4a8], edx
0x8049719:   0f b7 55 e4                     	movzx edx, word ptr [ebp - 0x1c]
0x804971d:   66 89 90 48 00 00 00            	mov word ptr [eax + 0x48], dx
0x8049724:   0f b7 55 e0                     	movzx edx, word ptr [ebp - 0x20]
0x8049728:   66 89 90 4a 00 00 00            	mov word ptr [eax + 0x4a], dx
0x804972f:   0f b7 55 dc                     	movzx edx, word ptr [ebp - 0x24]
0x8049733:   66 89 90 ac 04 00 00            	mov word ptr [eax + 0x4ac], dx
0x804973a:   8b 55 44                        	mov edx, dword ptr [ebp + 0x44]
0x804973d:   89 90 4c 00 00 00               	mov dword ptr [eax + 0x4c], edx
0x8049743:   0f b7 55 d8                     	movzx edx, word ptr [ebp - 0x28]
0x8049747:   66 89 90 50 00 00 00            	mov word ptr [eax + 0x50], dx
0x804974e:   8b 55 4c                        	mov edx, dword ptr [ebp + 0x4c]
0x8049751:   89 90 54 00 00 00               	mov dword ptr [eax + 0x54], edx
0x8049757:   0f b6 55 d4                     	movzx edx, byte ptr [ebp - 0x2c]
0x804975b:   88 90 58 00 00 00               	mov byte ptr [eax + 0x58], dl
0x8049761:   0f b7 55 d0                     	movzx edx, word ptr [ebp - 0x30]
0x8049765:   66 89 90 5a 00 00 00            	mov word ptr [eax + 0x5a], dx
0x804976c:   0f b7 55 cc                     	movzx edx, word ptr [ebp - 0x34]
0x8049770:   66 89 90 5c 00 00 00            	mov word ptr [eax + 0x5c], dx
0x8049777:   8b 55 5c                        	mov edx, dword ptr [ebp + 0x5c]
0x804977a:   89 90 60 00 00 00               	mov dword ptr [eax + 0x60], edx
0x8049780:   8b 55 60                        	mov edx, dword ptr [ebp + 0x60]
0x8049783:   89 90 64 00 00 00               	mov dword ptr [eax + 0x64], edx
0x8049789:   b8 00 00 00 00                  	mov eax, 0
0x804978e:   83 c4 3c                        	add esp, 0x3c
0x8049791:   5b                              	pop ebx
0x8049792:   5e                              	pop esi
0x8049793:   5f                              	pop edi
0x8049794:   5d                              	pop ebp
0x8049795:   c3                              	ret 
; function: func_1 at 0x8049796 -- 0x804a80c
0x8049796:   55                              	push ebp
0x8049797:   89 e5                           	mov ebp, esp
0x8049799:   57                              	push edi
0x804979a:   56                              	push esi
0x804979b:   53                              	push ebx
0x804979c:   81 ec 70 01 00 00               	sub esp, 0x170
0x80497a2:   e8 9b 13 00 00                  	call 0x804ab42 <__x86.get_pc_thunk.ax>
0x80497a7:   05 59 38 00 00                  	add eax, 0x3859
0x80497ac:   c7 45 f0 ec 13 8b ac            	mov dword ptr [ebp - 0x10], 0xac8b13ec
0x80497b3:   c7 45 ec 08 aa 31 00            	mov dword ptr [ebp - 0x14], 0x31aa08
0x80497ba:   c7 45 bc 51 8d 48 9a            	mov dword ptr [ebp - 0x44], 0x9a488d51
0x80497c1:   c6 45 8b 00                     	mov byte ptr [ebp - 0x75], 0
0x80497c5:   66 c7 45 ba 00 00               	mov word ptr [ebp - 0x46], 0
0x80497cb:   66 c7 45 b8 df c7               	mov word ptr [ebp - 0x48], 0xc7df
0x80497d1:   c7 45 e8 93 94 99 ba            	mov dword ptr [ebp - 0x18], 0xba999493
0x80497d8:   c7 45 e4 50 5f 14 c4            	mov dword ptr [ebp - 0x1c], 0xc4145f50
0x80497df:   c7 45 c0 62 91 8a c0            	mov dword ptr [ebp - 0x40], 0xc08a9162
0x80497e6:   c7 45 e0 25 fd 83 33            	mov dword ptr [ebp - 0x20], 0x3383fd25
0x80497ed:   c7 45 d4 fe 29 98 bf            	mov dword ptr [ebp - 0x2c], 0xbf9829fe
0x80497f4:   c7 45 d0 00 00 00 00            	mov dword ptr [ebp - 0x30], 0
0x80497fb:   66 c7 45 88 f9 ff               	mov word ptr [ebp - 0x78], 0xfff9
0x8049801:   66 c7 45 de 34 c4               	mov word ptr [ebp - 0x22], 0xc434
0x8049807:   66 c7 45 dc 00 00               	mov word ptr [ebp - 0x24], 0
0x804980d:   c7 45 d8 ff ff ff ff            	mov dword ptr [ebp - 0x28], 0xffffffff
0x8049814:   66 c7 45 ce 01 00               	mov word ptr [ebp - 0x32], 1
0x804981a:   c7 45 c8 ce da 89 1a            	mov dword ptr [ebp - 0x38], 0x1a89dace
0x8049821:   c6 45 c7 bb                     	mov byte ptr [ebp - 0x39], 0xbb
0x8049825:   66 c7 45 c4 05 00               	mov word ptr [ebp - 0x3c], 5
0x804982b:   66 c7 45 b6 a1 19               	mov word ptr [ebp - 0x4a], 0x19a1
0x8049831:   c7 45 84 fd ff ff ff            	mov dword ptr [ebp - 0x7c], 0xfffffffd
0x8049838:   c7 45 80 04 ae 88 6d            	mov dword ptr [ebp - 0x80], 0x6d88ae04
0x804983f:   66 c7 45 b4 c9 14               	mov word ptr [ebp - 0x4c], 0x14c9
0x8049845:   66 c7 45 b2 f1 c9               	mov word ptr [ebp - 0x4e], 0xc9f1
0x804984b:   66 c7 45 b0 6a 78               	mov word ptr [ebp - 0x50], 0x786a
0x8049851:   c6 45 af a8                     	mov byte ptr [ebp - 0x51], 0xa8
0x8049855:   c7 45 a8 72 d2 bf 43            	mov dword ptr [ebp - 0x58], 0x43bfd272
0x804985c:   c7 45 a4 ff ff ff ff            	mov dword ptr [ebp - 0x5c], 0xffffffff
0x8049863:   c7 45 a0 ff ff ff ff            	mov dword ptr [ebp - 0x60], 0xffffffff
0x804986a:   c7 85 7c ff ff ff 84 32 99 d2   	mov dword ptr [ebp - 0x84], 0xd2993284
0x8049874:   c7 85 78 ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0x88], 8
0x804987e:   66 c7 45 9e d9 82               	mov word ptr [ebp - 0x62], 0x82d9
0x8049884:   c6 85 77 ff ff ff 76            	mov byte ptr [ebp - 0x89], 0x76
0x804988b:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x804988f:   0f 84 65 01 00 00               	je 0x80499fa <func_1+0x264>
0x8049895:   c7 85 60 ff ff ff ca c9 6c 7f   	mov dword ptr [ebp - 0xa0], 0x7f6cc9ca
0x804989f:   c7 85 5c ff ff ff a1 db 51 f4   	mov dword ptr [ebp - 0xa4], 0xf451dba1
0x80498a9:   66 c7 85 5a ff ff ff ff ff      	mov word ptr [ebp - 0xa6], 0xffff
0x80498b2:   c7 85 54 ff ff ff 79 a7 07 9b   	mov dword ptr [ebp - 0xac], 0x9b07a779
0x80498bc:   c7 85 50 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xb0], 0xffffffff
0x80498c6:   c7 85 4c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xb4], 1
0x80498d0:   c7 85 48 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xb8], 0
0x80498da:   66 c7 45 b4 54 a3               	mov word ptr [ebp - 0x4c], 0xa354
0x80498e0:   66 c7 45 b4 ef ff               	mov word ptr [ebp - 0x4c], 0xffef
0x80498e6:   eb 72                           	jmp 0x804995a <func_1+0x1c4>
0x80498e8:   c6 85 47 ff ff ff 05            	mov byte ptr [ebp - 0xb9], 5
0x80498ef:   c7 85 40 ff ff ff 4a 9f 9f 97   	mov dword ptr [ebp - 0xc0], 0x979f9f4a
0x80498f9:   c7 85 3c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xc4], 0xffffffff
0x8049903:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049907:   75 5a                           	jne 0x8049963 <func_1+0x1cd>
0x8049909:   c7 85 38 ff ff ff 22 cf b4 42   	mov dword ptr [ebp - 0xc8], 0x42b4cf22
0x8049913:   83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x8049917:   83 7d ec f6                     	cmp dword ptr [ebp - 0x14], -0xa
0x804991b:   0f 97 c0                        	seta al
0x804991e:   0f b6 c0                        	movzx eax, al
0x8049921:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049924:   0f 9e c0                        	setle al
0x8049927:   0f b6 c0                        	movzx eax, al
0x804992a:   8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x804992d:   0f bf f2                        	movsx esi, dx
0x8049930:   99                              	cdq 
0x8049931:   f7 fe                           	idiv esi
0x8049933:   09 45 bc                        	or dword ptr [ebp - 0x44], eax
0x8049936:   c7 85 5c ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xa4], 2
0x8049940:   83 bd 38 ff ff ff 00            	cmp dword ptr [ebp - 0xc8], 0
0x8049947:   75 0b                           	jne 0x8049954 <func_1+0x1be>
0x8049949:   83 bd 40 ff ff ff 00            	cmp dword ptr [ebp - 0xc0], 0
0x8049950:   74 03                           	je 0x8049955 <func_1+0x1bf>
0x8049952:   eb 86                           	jmp 0x80498da <func_1+0x144>
0x8049954:   90                              	nop 
0x8049955:   66 83 45 b4 02                  	add word ptr [ebp - 0x4c], 2
0x804995a:   66 83 7d b4 24                  	cmp word ptr [ebp - 0x4c], 0x24
0x804995f:   74 87                           	je 0x80498e8 <func_1+0x152>
0x8049961:   eb 01                           	jmp 0x8049964 <func_1+0x1ce>
0x8049963:   90                              	nop 
0x8049964:   66 83 7d b0 00                  	cmp word ptr [ebp - 0x50], 0
0x8049969:   74 0e                           	je 0x8049979 <func_1+0x1e3>
0x804996b:   66 83 7d ba 00                  	cmp word ptr [ebp - 0x46], 0
0x8049970:   74 07                           	je 0x8049979 <func_1+0x1e3>
0x8049972:   b8 01 00 00 00                  	mov eax, 1
0x8049977:   eb 05                           	jmp 0x804997e <func_1+0x1e8>
0x8049979:   b8 00 00 00 00                  	mov eax, 0
0x804997e:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049981:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x8049985:   66 23 85 5a ff ff ff            	and ax, word ptr [ebp - 0xa6]
0x804998c:   0f b7 c0                        	movzx eax, ax
0x804998f:   21 45 f0                        	and dword ptr [ebp - 0x10], eax
0x8049992:   66 83 7d ba 01                  	cmp word ptr [ebp - 0x46], 1
0x8049997:   0f 94 c0                        	sete al
0x804999a:   0f b6 c0                        	movzx eax, al
0x804999d:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x80499a0:   0f 95 c0                        	setne al
0x80499a3:   0f b6 c0                        	movzx eax, al
0x80499a6:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x80499a9:   0f 93 c0                        	setae al
0x80499ac:   0f b6 c0                        	movzx eax, al
0x80499af:   39 45 a8                        	cmp dword ptr [ebp - 0x58], eax
0x80499b2:   74 38                           	je 0x80499ec <func_1+0x256>
0x80499b4:   c7 85 34 ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0xcc], 8
0x80499be:   c7 85 30 ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0xd0], 8
0x80499c8:   c7 85 2c ff ff ff e7 01 08 28   	mov dword ptr [ebp - 0xd4], 0x280801e7
0x80499d2:   c7 85 28 ff ff ff ba 2f a1 08   	mov dword ptr [ebp - 0xd8], 0x8a12fba
0x80499dc:   83 45 d4 01                     	add dword ptr [ebp - 0x2c], 1
0x80499e0:   0f bf 45 9e                     	movsx eax, word ptr [ebp - 0x62]
0x80499e4:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x80499e7:   e9 92 00 00 00                  	jmp 0x8049a7e <func_1+0x2e8>
0x80499ec:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x80499f2:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x80499f5:   e9 84 00 00 00                  	jmp 0x8049a7e <func_1+0x2e8>
0x80499fa:   c7 85 70 ff ff ff a7 64 6d 5b   	mov dword ptr [ebp - 0x90], 0x5b6d64a7
0x8049a04:   66 c7 85 6e ff ff ff ee c3      	mov word ptr [ebp - 0x92], 0xc3ee
0x8049a0d:   c7 85 68 ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0x98], 8
0x8049a17:   c6 85 67 ff ff ff 53            	mov byte ptr [ebp - 0x99], 0x53
0x8049a1e:   81 bd 70 ff ff ff c6 00 00 00   	cmp dword ptr [ebp - 0x90], 0xc6
0x8049a28:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x8049a2c:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049a2f:   83 7d ec ff                     	cmp dword ptr [ebp - 0x14], -1
0x8049a33:   0f 94 c0                        	sete al
0x8049a36:   0f b6 d0                        	movzx edx, al
0x8049a39:   0f bf 45 9e                     	movsx eax, word ptr [ebp - 0x62]
0x8049a3d:   21 d0                           	and eax, edx
0x8049a3f:   8b 4d e0                        	mov ecx, dword ptr [ebp - 0x20]
0x8049a42:   ba 00 00 00 00                  	mov edx, 0
0x8049a47:   f7 f1                           	div ecx
0x8049a49:   89 d0                           	mov eax, edx
0x8049a4b:   0f b6 d0                        	movzx edx, al
0x8049a4e:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049a51:   0f b6 c0                        	movzx eax, al
0x8049a54:   01 d0                           	add eax, edx
0x8049a56:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x8049a59:   0f 9c c0                        	setl al
0x8049a5c:   0f b6 c0                        	movzx eax, al
0x8049a5f:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x8049a65:   0f b7 85 6e ff ff ff            	movzx eax, word ptr [ebp - 0x92]
0x8049a6c:   23 45 e4                        	and eax, dword ptr [ebp - 0x1c]
0x8049a6f:   39 85 68 ff ff ff               	cmp dword ptr [ebp - 0x98], eax
0x8049a75:   0f 9d c0                        	setge al
0x8049a78:   88 85 67 ff ff ff               	mov byte ptr [ebp - 0x99], al
0x8049a7e:   81 65 e0 4f e4 e2 9a            	and dword ptr [ebp - 0x20], 0x9ae2e44f
0x8049a85:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049a89:   0f 84 42 0c 00 00               	je 0x804a6d1 <func_1+0xf3b>
0x8049a8f:   c7 45 98 58 37 9c b6            	mov dword ptr [ebp - 0x68], 0xb69c3758
0x8049a96:   c6 85 1f ff ff ff fe            	mov byte ptr [ebp - 0xe1], 0xfe
0x8049a9d:   66 c7 85 1c ff ff ff bd 73      	mov word ptr [ebp - 0xe4], 0x73bd
0x8049aa6:   66 c7 85 1a ff ff ff 3a f5      	mov word ptr [ebp - 0xe6], 0xf53a
0x8049aaf:   c7 45 f0 ff ff ff ff            	mov dword ptr [ebp - 0x10], 0xffffffff
0x8049ab6:   66 c7 45 b2 00 00               	mov word ptr [ebp - 0x4e], 0
0x8049abc:   e9 69 0b 00 00                  	jmp 0x804a62a <func_1+0xe94>
0x8049ac1:   c7 85 14 ff ff ff c8 4e d6 96   	mov dword ptr [ebp - 0xec], 0x96d64ec8
0x8049acb:   c6 45 97 ae                     	mov byte ptr [ebp - 0x69], 0xae
0x8049acf:   c7 85 10 ff ff ff da 67 59 1b   	mov dword ptr [ebp - 0xf0], 0x1b5967da
0x8049ad9:   c7 45 90 b7 05 45 13            	mov dword ptr [ebp - 0x70], 0x134505b7
0x8049ae0:   c7 85 0c ff ff ff 62 c2 92 6d   	mov dword ptr [ebp - 0xf4], 0x6d92c262
0x8049aea:   c7 85 08 ff ff ff 98 95 2d 03   	mov dword ptr [ebp - 0xf8], 0x32d9598
0x8049af4:   c7 85 04 ff ff ff a8 b0 17 38   	mov dword ptr [ebp - 0xfc], 0x3817b0a8
0x8049afe:   c7 85 00 ff ff ff ca ce 19 c2   	mov dword ptr [ebp - 0x100], 0xc219ceca
0x8049b08:   c7 85 fc fe ff ff e4 e2 2c 15   	mov dword ptr [ebp - 0x104], 0x152ce2e4
0x8049b12:   c7 85 f8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x108], 0
0x8049b1c:   c6 85 f7 fe ff ff 01            	mov byte ptr [ebp - 0x109], 1
0x8049b23:   66 c7 85 f4 fe ff ff 02 00      	mov word ptr [ebp - 0x10c], 2
0x8049b2c:   66 c7 85 f2 fe ff ff 36 ef      	mov word ptr [ebp - 0x10e], 0xef36
0x8049b35:   66 c7 85 f0 fe ff ff f9 ff      	mov word ptr [ebp - 0x110], 0xfff9
0x8049b3e:   66 c7 85 ee fe ff ff 9d ca      	mov word ptr [ebp - 0x112], 0xca9d
0x8049b47:   c6 45 af 00                     	mov byte ptr [ebp - 0x51], 0
0x8049b4b:   e9 8b 04 00 00                  	jmp 0x8049fdb <func_1+0x845>
0x8049b50:   c7 85 b4 fe ff ff c4 7d 68 4c   	mov dword ptr [ebp - 0x14c], 0x4c687dc4
0x8049b5a:   c7 45 8c 64 cd c6 c6            	mov dword ptr [ebp - 0x74], 0xc6c6cd64
0x8049b61:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049b64:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049b67:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049b6b:   0f 84 7f 01 00 00               	je 0x8049cf0 <func_1+0x55a>
0x8049b71:   c7 85 ac fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x154], 0xffffffff
0x8049b7b:   c7 45 f0 01 00 00 00            	mov dword ptr [ebp - 0x10], 1
0x8049b82:   8b 85 b4 fe ff ff               	mov eax, dword ptr [ebp - 0x14c]
0x8049b88:   83 f0 01                        	xor eax, 1
0x8049b8b:   89 c1                           	mov ecx, eax
0x8049b8d:   83 7d e0 20                     	cmp dword ptr [ebp - 0x20], 0x20
0x8049b91:   0f 9e c0                        	setle al
0x8049b94:   0f b6 c0                        	movzx eax, al
0x8049b97:   89 c2                           	mov edx, eax
0x8049b99:   89 c8                           	mov eax, ecx
0x8049b9b:   0f af c2                        	imul eax, edx
0x8049b9e:   0f be d0                        	movsx edx, al
0x8049ba1:   0f be 45 8b                     	movsx eax, byte ptr [ebp - 0x75]
0x8049ba5:   01 d0                           	add eax, edx
0x8049ba7:   33 85 b4 fe ff ff               	xor eax, dword ptr [ebp - 0x14c]
0x8049bad:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049bb0:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049bb3:   21 45 e8                        	and dword ptr [ebp - 0x18], eax
0x8049bb6:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x8049bba:   0f 84 9e 00 00 00               	je 0x8049c5e <func_1+0x4c8>
0x8049bc0:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049bc3:   31 85 ac fe ff ff               	xor dword ptr [ebp - 0x154], eax
0x8049bc9:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x8049bcd:   0f b7 4d c4                     	movzx ecx, word ptr [ebp - 0x3c]
0x8049bd1:   0f b6 75 c7                     	movzx esi, byte ptr [ebp - 0x39]
0x8049bd5:   0f b7 7d ce                     	movzx edi, word ptr [ebp - 0x32]
0x8049bd9:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x8049bdf:   0f b7 5d dc                     	movzx ebx, word ptr [ebp - 0x24]
0x8049be3:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x8049be9:   0f bf 55 de                     	movsx edx, word ptr [ebp - 0x22]
0x8049bed:   89 95 88 fe ff ff               	mov dword ptr [ebp - 0x178], edx
0x8049bf3:   0f bf 7d 88                     	movsx edi, word ptr [ebp - 0x78]
0x8049bf7:   89 bd 84 fe ff ff               	mov dword ptr [ebp - 0x17c], edi
0x8049bfd:   0f b7 7d b8                     	movzx edi, word ptr [ebp - 0x48]
0x8049c01:   0f bf 5d ba                     	movsx ebx, word ptr [ebp - 0x46]
0x8049c05:   0f be 55 8b                     	movsx edx, byte ptr [ebp - 0x75]
0x8049c09:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049c0c:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049c0f:   50                              	push eax
0x8049c10:   51                              	push ecx
0x8049c11:   56                              	push esi
0x8049c12:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049c15:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x8049c1b:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049c1e:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x8049c24:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x8049c2a:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x8049c30:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049c33:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049c36:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049c39:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049c3c:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049c3f:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049c42:   57                              	push edi
0x8049c43:   53                              	push ebx
0x8049c44:   52                              	push edx
0x8049c45:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049c48:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049c4b:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049c4e:   e8 d3 f9 ff ff                  	call 0x8049626 <set_var>
0x8049c53:   83 c4 5c                        	add esp, 0x5c
0x8049c56:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049c59:   e9 a6 0b 00 00                  	jmp 0x804a804 <func_1+0x106e>
0x8049c5e:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049c61:   89 c2                           	mov edx, eax
0x8049c63:   c7 45 a8 01 00 00 00            	mov dword ptr [ebp - 0x58], 1
0x8049c6a:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049c6d:   21 d0                           	and eax, edx
0x8049c6f:   89 c2                           	mov edx, eax
0x8049c71:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049c74:   31 d0                           	xor eax, edx
0x8049c76:   0f be d0                        	movsx edx, al
0x8049c79:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049c7c:   0f be c0                        	movsx eax, al
0x8049c7f:   89 c1                           	mov ecx, eax
0x8049c81:   d3 e2                           	shl edx, cl
0x8049c83:   89 d0                           	mov eax, edx
0x8049c85:   66 89 45 b8                     	mov word ptr [ebp - 0x48], ax
0x8049c89:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x8049c8d:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049c90:   0f 97 c0                        	seta al
0x8049c93:   0f b6 c0                        	movzx eax, al
0x8049c96:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049c99:   8b 85 b4 fe ff ff               	mov eax, dword ptr [ebp - 0x14c]
0x8049c9f:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049ca2:   83 bd ac fe ff ff 00            	cmp dword ptr [ebp - 0x154], 0
0x8049ca9:   0f 85 21 03 00 00               	jne 0x8049fd0 <func_1+0x83a>
0x8049caf:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x8049cb5:   0d 67 07 00 00                  	or eax, 0x767
0x8049cba:   89 c1                           	mov ecx, eax
0x8049cbc:   ba 56 55 55 55                  	mov edx, 0x55555556
0x8049cc1:   89 c8                           	mov eax, ecx
0x8049cc3:   f7 ea                           	imul edx
0x8049cc5:   89 c8                           	mov eax, ecx
0x8049cc7:   c1 f8 1f                        	sar eax, 0x1f
0x8049cca:   29 c2                           	sub edx, eax
0x8049ccc:   89 d0                           	mov eax, edx
0x8049cce:   01 c0                           	add eax, eax
0x8049cd0:   01 d0                           	add eax, edx
0x8049cd2:   29 c1                           	sub ecx, eax
0x8049cd4:   89 ca                           	mov edx, ecx
0x8049cd6:   0f bf 45 ba                     	movsx eax, word ptr [ebp - 0x46]
0x8049cda:   39 c2                           	cmp edx, eax
0x8049cdc:   0f 9e c0                        	setle al
0x8049cdf:   0f b6 c0                        	movzx eax, al
0x8049ce2:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049ce5:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049ce8:   09 45 e8                        	or dword ptr [ebp - 0x18], eax
0x8049ceb:   e9 8c 00 00 00                  	jmp 0x8049d7c <func_1+0x5e6>
0x8049cf0:   66 c7 85 b2 fe ff ff fb ff      	mov word ptr [ebp - 0x14e], 0xfffb
0x8049cf9:   80 7d af 00                     	cmp byte ptr [ebp - 0x51], 0
0x8049cfd:   74 05                           	je 0x8049d04 <func_1+0x56e>
0x8049cff:   e9 ab fd ff ff                  	jmp 0x8049aaf <func_1+0x319>
0x8049d04:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x8049d0b:   66 c7 45 b8 00 00               	mov word ptr [ebp - 0x48], 0
0x8049d11:   eb 2c                           	jmp 0x8049d3f <func_1+0x5a9>
0x8049d13:   66 c7 85 b0 fe ff ff fc ff      	mov word ptr [ebp - 0x150], 0xfffc
0x8049d1c:   0f b7 95 1c ff ff ff            	movzx edx, word ptr [ebp - 0xe4]
0x8049d23:   0f b6 45 97                     	movzx eax, byte ptr [ebp - 0x69]
0x8049d27:   31 d0                           	xor eax, edx
0x8049d29:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049d2c:   0f 9f c0                        	setg al
0x8049d2f:   0f b6 c0                        	movzx eax, al
0x8049d32:   09 45 a8                        	or dword ptr [ebp - 0x58], eax
0x8049d35:   66 83 7d ba 00                  	cmp word ptr [ebp - 0x46], 0
0x8049d3a:   66 83 45 b8 04                  	add word ptr [ebp - 0x48], 4
0x8049d3f:   66 83 7d b8 03                  	cmp word ptr [ebp - 0x48], 3
0x8049d44:   76 cd                           	jbe 0x8049d13 <func_1+0x57d>
0x8049d46:   c7 45 98 f0 ff ff ff            	mov dword ptr [ebp - 0x68], 0xfffffff0
0x8049d4d:   eb 27                           	jmp 0x8049d76 <func_1+0x5e0>
0x8049d4f:   0f b7 95 b2 fe ff ff            	movzx edx, word ptr [ebp - 0x14e]
0x8049d56:   83 6d ec 01                     	sub dword ptr [ebp - 0x14], 1
0x8049d5a:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049d5d:   39 c2                           	cmp edx, eax
0x8049d5f:   0f 94 c0                        	sete al
0x8049d62:   0f b6 c0                        	movzx eax, al
0x8049d65:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049d68:   0f b7 85 b2 fe ff ff            	movzx eax, word ptr [ebp - 0x14e]
0x8049d6f:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049d72:   83 45 98 06                     	add dword ptr [ebp - 0x68], 6
0x8049d76:   83 7d 98 02                     	cmp dword ptr [ebp - 0x68], 2
0x8049d7a:   75 d3                           	jne 0x8049d4f <func_1+0x5b9>
0x8049d7c:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x8049d80:   0f 84 ef 01 00 00               	je 0x8049f75 <func_1+0x7df>
0x8049d86:   c6 85 a3 fe ff ff f7            	mov byte ptr [ebp - 0x15d], 0xf7
0x8049d8d:   66 83 6d b8 01                  	sub word ptr [ebp - 0x48], 1
0x8049d92:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049d95:   23 85 10 ff ff ff               	and eax, dword ptr [ebp - 0xf0]
0x8049d9b:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x8049d9e:   0f 95 c0                        	setne al
0x8049da1:   0f b6 d0                        	movzx edx, al
0x8049da4:   66 0f be 85 a3 fe ff ff         	movsx ax, byte ptr [ebp - 0x15d]
0x8049dac:   0f b7 c0                        	movzx eax, ax
0x8049daf:   89 c1                           	mov ecx, eax
0x8049db1:   d3 fa                           	sar edx, cl
0x8049db3:   89 d0                           	mov eax, edx
0x8049db5:   89 c2                           	mov edx, eax
0x8049db7:   0f b7 45 ba                     	movzx eax, word ptr [ebp - 0x46]
0x8049dbb:   31 d0                           	xor eax, edx
0x8049dbd:   0f b6 95 a3 fe ff ff            	movzx edx, byte ptr [ebp - 0x15d]
0x8049dc4:   0f b6 c0                        	movzx eax, al
0x8049dc7:   f6 f2                           	div dl
0x8049dc9:   0f b6 c4                        	movzx eax, ah
0x8049dcc:   0f b6 c0                        	movzx eax, al
0x8049dcf:   83 e0 f9                        	and eax, 0xfffffff9
0x8049dd2:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x8049dd5:   0f 9d c0                        	setge al
0x8049dd8:   0f b6 c0                        	movzx eax, al
0x8049ddb:   39 45 bc                        	cmp dword ptr [ebp - 0x44], eax
0x8049dde:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x8049de2:   74 19                           	je 0x8049dfd <func_1+0x667>
0x8049de4:   c7 85 9c fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x164], 0xffffffff
0x8049dee:   83 6d d0 01                     	sub dword ptr [ebp - 0x30], 1
0x8049df2:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x8049df6:   74 1f                           	je 0x8049e17 <func_1+0x681>
0x8049df8:   e9 81 fc ff ff                  	jmp 0x8049a7e <func_1+0x2e8>
0x8049dfd:   c6 85 a2 fe ff ff 02            	mov byte ptr [ebp - 0x15e], 2
0x8049e04:   8b 85 b4 fe ff ff               	mov eax, dword ptr [ebp - 0x14c]
0x8049e0a:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049e0d:   83 75 e0 01                     	xor dword ptr [ebp - 0x20], 1
0x8049e11:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049e14:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049e17:   c7 45 d0 fe ff ff ff            	mov dword ptr [ebp - 0x30], 0xfffffffe
0x8049e1e:   eb 45                           	jmp 0x8049e65 <func_1+0x6cf>
0x8049e20:   66 c7 85 96 fe ff ff 2f 92      	mov word ptr [ebp - 0x16a], 0x922f
0x8049e29:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x8049e2c:   66 89 45 ba                     	mov word ptr [ebp - 0x46], ax
0x8049e30:   0f b6 45 97                     	movzx eax, byte ptr [ebp - 0x69]
0x8049e34:   25 0d 25 18 cd                  	and eax, 0xcd18250d
0x8049e39:   85 c0                           	test eax, eax
0x8049e3b:   74 0d                           	je 0x8049e4a <func_1+0x6b4>
0x8049e3d:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x8049e41:   74 07                           	je 0x8049e4a <func_1+0x6b4>
0x8049e43:   ba 01 00 00 00                  	mov edx, 1
0x8049e48:   eb 05                           	jmp 0x8049e4f <func_1+0x6b9>
0x8049e4a:   ba 00 00 00 00                  	mov edx, 0
0x8049e4f:   0f bf 85 96 fe ff ff            	movsx eax, word ptr [ebp - 0x16a]
0x8049e56:   39 c2                           	cmp edx, eax
0x8049e58:   0f 9e c0                        	setle al
0x8049e5b:   0f b6 c0                        	movzx eax, al
0x8049e5e:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049e61:   83 45 d0 01                     	add dword ptr [ebp - 0x30], 1
0x8049e65:   83 7d d0 2c                     	cmp dword ptr [ebp - 0x30], 0x2c
0x8049e69:   76 b5                           	jbe 0x8049e20 <func_1+0x68a>
0x8049e6b:   c6 45 97 01                     	mov byte ptr [ebp - 0x69], 1
0x8049e6f:   80 7d 97 07                     	cmp byte ptr [ebp - 0x69], 7
0x8049e73:   0f 86 1c 01 00 00               	jbe 0x8049f95 <func_1+0x7ff>
0x8049e79:   c7 85 98 fe ff ff 25 c8 c4 5a   	mov dword ptr [ebp - 0x168], 0x5ac4c825
0x8049e83:   8b 85 98 fe ff ff               	mov eax, dword ptr [ebp - 0x168]
0x8049e89:   3b 45 d4                        	cmp eax, dword ptr [ebp - 0x2c]
0x8049e8c:   0f 97 c0                        	seta al
0x8049e8f:   0f b6 d0                        	movzx edx, al
0x8049e92:   0f be 8d a3 fe ff ff            	movsx ecx, byte ptr [ebp - 0x15d]
0x8049e99:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x8049e9f:   88 85 90 fe ff ff               	mov byte ptr [ebp - 0x170], al
0x8049ea5:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049ea8:   89 c3                           	mov ebx, eax
0x8049eaa:   0f b6 85 90 fe ff ff            	movzx eax, byte ptr [ebp - 0x170]
0x8049eb1:   f6 f3                           	div bl
0x8049eb3:   0f b6 c4                        	movzx eax, ah
0x8049eb6:   3c 01                           	cmp al, 1
0x8049eb8:   0f 95 c0                        	setne al
0x8049ebb:   0f b6 c0                        	movzx eax, al
0x8049ebe:   39 c1                           	cmp ecx, eax
0x8049ec0:   7d 07                           	jge 0x8049ec9 <func_1+0x733>
0x8049ec2:   b8 f9 ff ff ff                  	mov eax, 0xfffffff9
0x8049ec7:   eb 05                           	jmp 0x8049ece <func_1+0x738>
0x8049ec9:   b8 f8 ff ff ff                  	mov eax, 0xfffffff8
0x8049ece:   21 d0                           	and eax, edx
0x8049ed0:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049ed3:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049ed6:   89 85 10 ff ff ff               	mov dword ptr [ebp - 0xf0], eax
0x8049edc:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x8049ee0:   0f b7 4d c4                     	movzx ecx, word ptr [ebp - 0x3c]
0x8049ee4:   0f b6 75 c7                     	movzx esi, byte ptr [ebp - 0x39]
0x8049ee8:   0f b7 7d ce                     	movzx edi, word ptr [ebp - 0x32]
0x8049eec:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x8049ef2:   0f b7 5d dc                     	movzx ebx, word ptr [ebp - 0x24]
0x8049ef6:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x8049efc:   0f bf 55 de                     	movsx edx, word ptr [ebp - 0x22]
0x8049f00:   89 95 88 fe ff ff               	mov dword ptr [ebp - 0x178], edx
0x8049f06:   0f bf 7d 88                     	movsx edi, word ptr [ebp - 0x78]
0x8049f0a:   89 bd 84 fe ff ff               	mov dword ptr [ebp - 0x17c], edi
0x8049f10:   0f b7 7d b8                     	movzx edi, word ptr [ebp - 0x48]
0x8049f14:   0f bf 5d ba                     	movsx ebx, word ptr [ebp - 0x46]
0x8049f18:   0f be 55 8b                     	movsx edx, byte ptr [ebp - 0x75]
0x8049f1c:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049f1f:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049f22:   50                              	push eax
0x8049f23:   51                              	push ecx
0x8049f24:   56                              	push esi
0x8049f25:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049f28:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x8049f2e:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049f31:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x8049f37:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x8049f3d:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x8049f43:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049f46:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049f49:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049f4c:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049f4f:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049f52:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049f55:   57                              	push edi
0x8049f56:   53                              	push ebx
0x8049f57:   52                              	push edx
0x8049f58:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049f5b:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049f5e:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049f61:   e8 c0 f6 ff ff                  	call 0x8049626 <set_var>
0x8049f66:   83 c4 5c                        	add esp, 0x5c
0x8049f69:   0f b6 85 1f ff ff ff            	movzx eax, byte ptr [ebp - 0xe1]
0x8049f70:   e9 8f 08 00 00                  	jmp 0x804a804 <func_1+0x106e>
0x8049f75:   c6 85 ab fe ff ff 00            	mov byte ptr [ebp - 0x155], 0
0x8049f7c:   c7 85 a4 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x15c], 0xffffffff
0x8049f86:   66 83 45 dc 01                  	add word ptr [ebp - 0x24], 1
0x8049f8b:   0f b7 85 1c ff ff ff            	movzx eax, word ptr [ebp - 0xe4]
0x8049f92:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049f95:   c7 45 8c 00 00 00 00            	mov dword ptr [ebp - 0x74], 0
0x8049f9c:   eb 2a                           	jmp 0x8049fc8 <func_1+0x832>
0x8049f9e:   66 c7 45 b0 1a 00               	mov word ptr [ebp - 0x50], 0x1a
0x8049fa4:   eb 17                           	jmp 0x8049fbd <func_1+0x827>
0x8049fa6:   66 83 7d b2 00                  	cmp word ptr [ebp - 0x4e], 0
0x8049fab:   74 05                           	je 0x8049fb2 <func_1+0x81c>
0x8049fad:   e9 d9 f8 ff ff                  	jmp 0x804988b <func_1+0xf5>
0x8049fb2:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x8049fb6:   83 e8 01                        	sub eax, 1
0x8049fb9:   66 89 45 b0                     	mov word ptr [ebp - 0x50], ax
0x8049fbd:   66 83 7d b0 0b                  	cmp word ptr [ebp - 0x50], 0xb
0x8049fc2:   7e e2                           	jle 0x8049fa6 <func_1+0x810>
0x8049fc4:   83 45 8c 01                     	add dword ptr [ebp - 0x74], 1
0x8049fc8:   83 7d 8c 04                     	cmp dword ptr [ebp - 0x74], 4
0x8049fcc:   7f d0                           	jg 0x8049f9e <func_1+0x808>
0x8049fce:   eb 01                           	jmp 0x8049fd1 <func_1+0x83b>
0x8049fd0:   90                              	nop 
0x8049fd1:   0f b6 45 af                     	movzx eax, byte ptr [ebp - 0x51]
0x8049fd5:   83 c0 01                        	add eax, 1
0x8049fd8:   88 45 af                        	mov byte ptr [ebp - 0x51], al
0x8049fdb:   80 7d af 15                     	cmp byte ptr [ebp - 0x51], 0x15
0x8049fdf:   0f 8e 6b fb ff ff               	jle 0x8049b50 <func_1+0x3ba>
0x8049fe5:   66 83 bd 1c ff ff ff 00         	cmp word ptr [ebp - 0xe4], 0
0x8049fed:   0f 85 2b 06 00 00               	jne 0x804a61e <func_1+0xe88>
0x8049ff3:   0f b6 85 1f ff ff ff            	movzx eax, byte ptr [ebp - 0xe1]
0x8049ffa:   89 85 00 ff ff ff               	mov dword ptr [ebp - 0x100], eax
0x804a000:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a003:   ba 00 00 00 00                  	mov edx, 0
0x804a008:   f7 75 bc                        	div dword ptr [ebp - 0x44]
0x804a00b:   89 d0                           	mov eax, edx
0x804a00d:   99                              	cdq 
0x804a00e:   f7 bd 00 ff ff ff               	idiv dword ptr [ebp - 0x100]
0x804a014:   83 f8 fb                        	cmp eax, -5
0x804a017:   75 09                           	jne 0x804a022 <func_1+0x88c>
0x804a019:   83 bd fc fe ff ff 00            	cmp dword ptr [ebp - 0x104], 0
0x804a020:   74 07                           	je 0x804a029 <func_1+0x893>
0x804a022:   b8 01 00 00 00                  	mov eax, 1
0x804a027:   eb 05                           	jmp 0x804a02e <func_1+0x898>
0x804a029:   b8 00 00 00 00                  	mov eax, 0
0x804a02e:   83 f8 fe                        	cmp eax, -2
0x804a031:   0f 94 c0                        	sete al
0x804a034:   0f b6 d0                        	movzx edx, al
0x804a037:   0f b7 85 1a ff ff ff            	movzx eax, word ptr [ebp - 0xe6]
0x804a03e:   21 d0                           	and eax, edx
0x804a040:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a043:   0f 8c 94 04 00 00               	jl 0x804a4dd <func_1+0xd47>
0x804a049:   66 83 7d b2 00                  	cmp word ptr [ebp - 0x4e], 0
0x804a04e:   0f 84 89 04 00 00               	je 0x804a4dd <func_1+0xd47>
0x804a054:   c7 85 e8 fe ff ff d5 f8 e6 36   	mov dword ptr [ebp - 0x118], 0x36e6f8d5
0x804a05e:   c7 85 e4 fe ff ff be a7 cf f7   	mov dword ptr [ebp - 0x11c], 0xf7cfa7be
0x804a068:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x804a06e:   89 c2                           	mov edx, eax
0x804a070:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a073:   66 c1 e8 0c                     	shr ax, 0xc
0x804a077:   21 d0                           	and eax, edx
0x804a079:   89 c3                           	mov ebx, eax
0x804a07b:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a07e:   98                              	cwde 
0x804a07f:   8b 95 00 ff ff ff               	mov edx, dword ptr [ebp - 0x100]
0x804a085:   0f b6 d2                        	movzx edx, dl
0x804a088:   f7 da                           	neg edx
0x804a08a:   0f bf ca                        	movsx ecx, dx
0x804a08d:   99                              	cdq 
0x804a08e:   f7 f9                           	idiv ecx
0x804a090:   89 d0                           	mov eax, edx
0x804a092:   0f be d0                        	movsx edx, al
0x804a095:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a098:   0f be c0                        	movsx eax, al
0x804a09b:   89 c1                           	mov ecx, eax
0x804a09d:   d3 fa                           	sar edx, cl
0x804a09f:   89 d0                           	mov eax, edx
0x804a0a1:   89 c2                           	mov edx, eax
0x804a0a3:   0f b6 c3                        	movzx eax, bl
0x804a0a6:   f6 f2                           	div dl
0x804a0a8:   0f b6 c4                        	movzx eax, ah
0x804a0ab:   0f b6 c0                        	movzx eax, al
0x804a0ae:   33 85 f8 fe ff ff               	xor eax, dword ptr [ebp - 0x108]
0x804a0b4:   8b 4d d0                        	mov ecx, dword ptr [ebp - 0x30]
0x804a0b7:   99                              	cdq 
0x804a0b8:   f7 f9                           	idiv ecx
0x804a0ba:   89 d0                           	mov eax, edx
0x804a0bc:   83 f8 f9                        	cmp eax, -7
0x804a0bf:   7c 07                           	jl 0x804a0c8 <func_1+0x932>
0x804a0c1:   ba 02 00 00 00                  	mov edx, 2
0x804a0c6:   eb 05                           	jmp 0x804a0cd <func_1+0x937>
0x804a0c8:   ba 00 00 00 00                  	mov edx, 0
0x804a0cd:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a0d1:   09 d0                           	or eax, edx
0x804a0d3:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x804a0d7:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a0db:   f7 d8                           	neg eax
0x804a0dd:   3d ff 00 00 00                  	cmp eax, 0xff
0x804a0e2:   0f 95 c0                        	setne al
0x804a0e5:   0f b6 c0                        	movzx eax, al
0x804a0e8:   33 45 ec                        	xor eax, dword ptr [ebp - 0x14]
0x804a0eb:   89 c2                           	mov edx, eax
0x804a0ed:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a0f0:   39 c2                           	cmp edx, eax
0x804a0f2:   0f 84 96 00 00 00               	je 0x804a18e <func_1+0x9f8>
0x804a0f8:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804a0fc:   0f b7 4d c4                     	movzx ecx, word ptr [ebp - 0x3c]
0x804a100:   0f b6 75 c7                     	movzx esi, byte ptr [ebp - 0x39]
0x804a104:   0f b7 7d ce                     	movzx edi, word ptr [ebp - 0x32]
0x804a108:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804a10e:   0f b7 5d dc                     	movzx ebx, word ptr [ebp - 0x24]
0x804a112:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x804a118:   0f bf 55 de                     	movsx edx, word ptr [ebp - 0x22]
0x804a11c:   89 95 88 fe ff ff               	mov dword ptr [ebp - 0x178], edx
0x804a122:   0f bf 7d 88                     	movsx edi, word ptr [ebp - 0x78]
0x804a126:   89 bd 84 fe ff ff               	mov dword ptr [ebp - 0x17c], edi
0x804a12c:   0f b7 7d b8                     	movzx edi, word ptr [ebp - 0x48]
0x804a130:   0f bf 5d ba                     	movsx ebx, word ptr [ebp - 0x46]
0x804a134:   0f be 55 8b                     	movsx edx, byte ptr [ebp - 0x75]
0x804a138:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a13b:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a13e:   50                              	push eax
0x804a13f:   51                              	push ecx
0x804a140:   56                              	push esi
0x804a141:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a144:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a14a:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a14d:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a153:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a159:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a15f:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a162:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a165:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a168:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a16b:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a16e:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a171:   57                              	push edi
0x804a172:   53                              	push ebx
0x804a173:   52                              	push edx
0x804a174:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a177:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a17a:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a17d:   e8 a4 f4 ff ff                  	call 0x8049626 <set_var>
0x804a182:   83 c4 5c                        	add esp, 0x5c
0x804a185:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a189:   e9 76 06 00 00                  	jmp 0x804a804 <func_1+0x106e>
0x804a18e:   66 c7 85 e2 fe ff ff 00 00      	mov word ptr [ebp - 0x11e], 0
0x804a197:   c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x804a19e:   e9 b8 00 00 00                  	jmp 0x804a25b <func_1+0xac5>
0x804a1a3:   66 c7 85 ce fe ff ff db 91      	mov word ptr [ebp - 0x132], 0x91db
0x804a1ac:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a1af:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a1b2:   0f b7 85 e2 fe ff ff            	movzx eax, word ptr [ebp - 0x11e]
0x804a1b9:   8b 55 90                        	mov edx, dword ptr [ebp - 0x70]
0x804a1bc:   39 55 bc                        	cmp dword ptr [ebp - 0x44], edx
0x804a1bf:   c7 45 e0 74 ce 0f 42            	mov dword ptr [ebp - 0x20], 0x420fce74
0x804a1c6:   0f b7 95 e2 fe ff ff            	movzx edx, word ptr [ebp - 0x11e]
0x804a1cd:   84 d2                           	test dl, dl
0x804a1cf:   0f 95 c2                        	setne dl
0x804a1d2:   0f b6 d2                        	movzx edx, dl
0x804a1d5:   66 89 95 ce fe ff ff            	mov word ptr [ebp - 0x132], dx
0x804a1dc:   0f b7 95 ce fe ff ff            	movzx edx, word ptr [ebp - 0x132]
0x804a1e3:   0f b6 da                        	movzx ebx, dl
0x804a1e6:   8b 95 e8 fe ff ff               	mov edx, dword ptr [ebp - 0x118]
0x804a1ec:   0f b6 d2                        	movzx edx, dl
0x804a1ef:   89 d1                           	mov ecx, edx
0x804a1f1:   d3 e3                           	shl ebx, cl
0x804a1f3:   89 da                           	mov edx, ebx
0x804a1f5:   89 d6                           	mov esi, edx
0x804a1f7:   ba 00 00 00 00                  	mov edx, 0
0x804a1fc:   f7 f6                           	div esi
0x804a1fe:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a201:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x804a207:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a20a:   0f b7 95 ce fe ff ff            	movzx edx, word ptr [ebp - 0x132]
0x804a211:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a214:   88 85 f7 fe ff ff               	mov byte ptr [ebp - 0x109], al
0x804a21a:   0f be 85 f7 fe ff ff            	movsx eax, byte ptr [ebp - 0x109]
0x804a221:   39 c2                           	cmp edx, eax
0x804a223:   0f 9f c0                        	setg al
0x804a226:   0f b6 d0                        	movzx edx, al
0x804a229:   0f bf 45 88                     	movsx eax, word ptr [ebp - 0x78]
0x804a22d:   39 c2                           	cmp edx, eax
0x804a22f:   7d 0b                           	jge 0x804a23c <func_1+0xaa6>
0x804a231:   0f bf 45 ba                     	movsx eax, word ptr [ebp - 0x46]
0x804a235:   3d 1e c5 d3 fa                  	cmp eax, 0xfad3c51e
0x804a23a:   74 07                           	je 0x804a243 <func_1+0xaad>
0x804a23c:   b8 01 00 00 00                  	mov eax, 1
0x804a241:   eb 05                           	jmp 0x804a248 <func_1+0xab2>
0x804a243:   b8 00 00 00 00                  	mov eax, 0
0x804a248:   0f b6 d0                        	movzx edx, al
0x804a24b:   0f b6 45 af                     	movzx eax, byte ptr [ebp - 0x51]
0x804a24f:   0f b6 c0                        	movzx eax, al
0x804a252:   01 d0                           	add eax, edx
0x804a254:   09 45 90                        	or dword ptr [ebp - 0x70], eax
0x804a257:   83 45 f0 04                     	add dword ptr [ebp - 0x10], 4
0x804a25b:   83 7d f0 0b                     	cmp dword ptr [ebp - 0x10], 0xb
0x804a25f:   0f 8f 3e ff ff ff               	jg 0x804a1a3 <func_1+0xa0d>
0x804a265:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a268:   0f be c0                        	movsx eax, al
0x804a26b:   f7 d8                           	neg eax
0x804a26d:   8b 75 d4                        	mov esi, dword ptr [ebp - 0x2c]
0x804a270:   99                              	cdq 
0x804a271:   f7 fe                           	idiv esi
0x804a273:   89 c2                           	mov edx, eax
0x804a275:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a278:   31 d0                           	xor eax, edx
0x804a27a:   0f be c0                        	movsx eax, al
0x804a27d:   83 e8 01                        	sub eax, 1
0x804a280:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a283:   66 c7 85 e0 fe ff ff 1b d7      	mov word ptr [ebp - 0x120], 0xd71b
0x804a28c:   c6 85 df fe ff ff 06            	mov byte ptr [ebp - 0x121], 6
0x804a293:   c7 45 e4 ec 25 ca e6            	mov dword ptr [ebp - 0x1c], 0xe6ca25ec
0x804a29a:   0f b6 85 1f ff ff ff            	movzx eax, byte ptr [ebp - 0xe1]
0x804a2a1:   c1 f8 0b                        	sar eax, 0xb
0x804a2a4:   89 85 e8 fe ff ff               	mov dword ptr [ebp - 0x118], eax
0x804a2aa:   80 7d 97 00                     	cmp byte ptr [ebp - 0x69], 0
0x804a2ae:   74 0c                           	je 0x804a2bc <func_1+0xb26>
0x804a2b0:   0f bf 85 e0 fe ff ff            	movsx eax, word ptr [ebp - 0x120]
0x804a2b7:   31 45 98                        	xor dword ptr [ebp - 0x68], eax
0x804a2ba:   eb 1f                           	jmp 0x804a2db <func_1+0xb45>
0x804a2bc:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a2bf:   0f b6 d0                        	movzx edx, al
0x804a2c2:   81 7d e0 ff 00 00 00            	cmp dword ptr [ebp - 0x20], 0xff
0x804a2c9:   0f 95 c0                        	setne al
0x804a2cc:   89 c1                           	mov ecx, eax
0x804a2ce:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a2d1:   01 c8                           	add eax, ecx
0x804a2d3:   0f b6 c0                        	movzx eax, al
0x804a2d6:   01 d0                           	add eax, edx
0x804a2d8:   21 45 e8                        	and dword ptr [ebp - 0x18], eax
0x804a2db:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x804a2e1:   09 45 90                        	or dword ptr [ebp - 0x70], eax
0x804a2e4:   66 83 7d ba 00                  	cmp word ptr [ebp - 0x46], 0
0x804a2e9:   75 14                           	jne 0x804a2ff <func_1+0xb69>
0x804a2eb:   0f b6 85 77 ff ff ff            	movzx eax, byte ptr [ebp - 0x89]
0x804a2f2:   0f b6 c0                        	movzx eax, al
0x804a2f5:   01 c0                           	add eax, eax
0x804a2f7:   85 c0                           	test eax, eax
0x804a2f9:   74 05                           	je 0x804a300 <func_1+0xb6a>
0x804a2fb:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a2ff:   90                              	nop 
0x804a300:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a303:   3d b2 d9 f9 aa                  	cmp eax, 0xaaf9d9b2
0x804a308:   0f 97 c0                        	seta al
0x804a30b:   0f b6 d0                        	movzx edx, al
0x804a30e:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a312:   39 c2                           	cmp edx, eax
0x804a314:   0f 84 f5 00 00 00               	je 0x804a40f <func_1+0xc79>
0x804a31a:   c7 85 d0 fe ff ff 4f c0 50 18   	mov dword ptr [ebp - 0x130], 0x1850c04f
0x804a324:   c7 85 d0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x130], 0
0x804a32e:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x804a332:   75 15                           	jne 0x804a349 <func_1+0xbb3>
0x804a334:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a337:   83 f0 01                        	xor eax, 1
0x804a33a:   89 c2                           	mov edx, eax
0x804a33c:   0f b7 85 1c ff ff ff            	movzx eax, word ptr [ebp - 0xe4]
0x804a343:   21 d0                           	and eax, edx
0x804a345:   85 c0                           	test eax, eax
0x804a347:   74 07                           	je 0x804a350 <func_1+0xbba>
0x804a349:   b8 01 00 00 00                  	mov eax, 1
0x804a34e:   eb 05                           	jmp 0x804a355 <func_1+0xbbf>
0x804a350:   b8 00 00 00 00                  	mov eax, 0
0x804a355:   0f b6 c0                        	movzx eax, al
0x804a358:   66 05 9e 00                     	add ax, 0x9e
0x804a35c:   0f b7 c0                        	movzx eax, ax
0x804a35f:   69 c0 f6 ff 00 00               	imul eax, eax, 0xfff6
0x804a365:   39 85 e8 fe ff ff               	cmp dword ptr [ebp - 0x118], eax
0x804a36b:   0f 9f c0                        	setg al
0x804a36e:   0f b6 c0                        	movzx eax, al
0x804a371:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a377:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804a37b:   0f b7 4d c4                     	movzx ecx, word ptr [ebp - 0x3c]
0x804a37f:   0f b6 75 c7                     	movzx esi, byte ptr [ebp - 0x39]
0x804a383:   0f b7 7d ce                     	movzx edi, word ptr [ebp - 0x32]
0x804a387:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804a38d:   0f b7 5d dc                     	movzx ebx, word ptr [ebp - 0x24]
0x804a391:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x804a397:   0f bf 55 de                     	movsx edx, word ptr [ebp - 0x22]
0x804a39b:   89 95 88 fe ff ff               	mov dword ptr [ebp - 0x178], edx
0x804a3a1:   0f bf 7d 88                     	movsx edi, word ptr [ebp - 0x78]
0x804a3a5:   89 bd 84 fe ff ff               	mov dword ptr [ebp - 0x17c], edi
0x804a3ab:   0f b7 7d b8                     	movzx edi, word ptr [ebp - 0x48]
0x804a3af:   0f bf 5d ba                     	movsx ebx, word ptr [ebp - 0x46]
0x804a3b3:   0f be 55 8b                     	movsx edx, byte ptr [ebp - 0x75]
0x804a3b7:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a3ba:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a3bd:   50                              	push eax
0x804a3be:   51                              	push ecx
0x804a3bf:   56                              	push esi
0x804a3c0:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a3c3:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a3c9:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a3cc:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a3d2:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a3d8:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a3de:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a3e1:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a3e4:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a3e7:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a3ea:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a3ed:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a3f0:   57                              	push edi
0x804a3f1:   53                              	push ebx
0x804a3f2:   52                              	push edx
0x804a3f3:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a3f6:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a3f9:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a3fc:   e8 25 f2 ff ff                  	call 0x8049626 <set_var>
0x804a401:   83 c4 5c                        	add esp, 0x5c
0x804a404:   8b 85 d0 fe ff ff               	mov eax, dword ptr [ebp - 0x130]
0x804a40a:   e9 f5 03 00 00                  	jmp 0x804a804 <func_1+0x106e>
0x804a40f:   c7 85 d8 fe ff ff d8 b4 51 c2   	mov dword ptr [ebp - 0x128], 0xc251b4d8
0x804a419:   c7 85 d4 fe ff ff 6f 95 d0 ce   	mov dword ptr [ebp - 0x12c], 0xced0956f
0x804a423:   c7 85 e8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x118], 0
0x804a42d:   81 bd e8 fe ff ff ff 00 00 00   	cmp dword ptr [ebp - 0x118], 0xff
0x804a437:   0f 95 c0                        	setne al
0x804a43a:   0f b6 c0                        	movzx eax, al
0x804a43d:   66 89 45 ce                     	mov word ptr [ebp - 0x32], ax
0x804a441:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804a445:   d0 f8                           	sar al, 1
0x804a447:   0f be c0                        	movsx eax, al
0x804a44a:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x804a450:   0f bf 85 e0 fe ff ff            	movsx eax, word ptr [ebp - 0x120]
0x804a457:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a45a:   0f bf 45 88                     	movsx eax, word ptr [ebp - 0x78]
0x804a45e:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x804a464:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804a46a:   98                              	cwde 
0x804a46b:   66 21 45 de                     	and word ptr [ebp - 0x22], ax
0x804a46f:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x804a473:   66 09 45 ba                     	or word ptr [ebp - 0x46], ax
0x804a477:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x804a47c:   66 21 85 f4 fe ff ff            	and word ptr [ebp - 0x10c], ax
0x804a483:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x804a487:   0f 85 aa 01 00 00               	jne 0x804a637 <func_1+0xea1>
0x804a48d:   83 bd e4 fe ff ff 00            	cmp dword ptr [ebp - 0x11c], 0
0x804a494:   0f 85 a0 01 00 00               	jne 0x804a63a <func_1+0xea4>
0x804a49a:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a49d:   66 89 45 b8                     	mov word ptr [ebp - 0x48], ax
0x804a4a1:   0f b7 55 b8                     	movzx edx, word ptr [ebp - 0x48]
0x804a4a5:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a4a8:   25 5e 8f 31 43                  	and eax, 0x43318f5e
0x804a4ad:   89 c1                           	mov ecx, eax
0x804a4af:   0f bf 85 f2 fe ff ff            	movsx eax, word ptr [ebp - 0x10e]
0x804a4b6:   39 c1                           	cmp ecx, eax
0x804a4b8:   0f 95 c0                        	setne al
0x804a4bb:   0f b6 c0                        	movzx eax, al
0x804a4be:   09 c2                           	or edx, eax
0x804a4c0:   0f bf 45 ba                     	movsx eax, word ptr [ebp - 0x46]
0x804a4c4:   21 d0                           	and eax, edx
0x804a4c6:   0b 45 ec                        	or eax, dword ptr [ebp - 0x14]
0x804a4c9:   21 45 c8                        	and dword ptr [ebp - 0x38], eax
0x804a4cc:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a4d2:   33 45 c8                        	xor eax, dword ptr [ebp - 0x38]
0x804a4d5:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a4d8:   e9 42 01 00 00                  	jmp 0x804a61f <func_1+0xe89>
0x804a4dd:   c7 85 c8 fe ff ff 85 cc de 40   	mov dword ptr [ebp - 0x138], 0x40decc85
0x804a4e7:   c7 85 c4 fe ff ff f5 b3 cd 70   	mov dword ptr [ebp - 0x13c], 0x70cdb3f5
0x804a4f1:   c6 85 c3 fe ff ff 01            	mov byte ptr [ebp - 0x13d], 1
0x804a4f8:   83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x804a4fc:   c7 45 e8 83 3b 54 a3            	mov dword ptr [ebp - 0x18], 0xa3543b83
0x804a503:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a506:   8d 90 7d c4 ab 5c               	lea edx, [eax + 0x5cabc47d]
0x804a50c:   0f be 45 8b                     	movsx eax, byte ptr [ebp - 0x75]
0x804a510:   39 c2                           	cmp edx, eax
0x804a512:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a516:   0f b7 c0                        	movzx eax, ax
0x804a519:   31 45 98                        	xor dword ptr [ebp - 0x68], eax
0x804a51c:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a51f:   0f be c0                        	movsx eax, al
0x804a522:   ba 01 00 00 00                  	mov edx, 1
0x804a527:   89 c1                           	mov ecx, eax
0x804a529:   d3 e2                           	shl edx, cl
0x804a52b:   0f bf 85 ee fe ff ff            	movsx eax, word ptr [ebp - 0x112]
0x804a532:   39 c2                           	cmp edx, eax
0x804a534:   0f 9e c0                        	setle al
0x804a537:   0f b6 d0                        	movzx edx, al
0x804a53a:   0f b6 85 1f ff ff ff            	movzx eax, byte ptr [ebp - 0xe1]
0x804a541:   39 c2                           	cmp edx, eax
0x804a543:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a546:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a549:   0f b7 85 f0 fe ff ff            	movzx eax, word ptr [ebp - 0x110]
0x804a550:   0f bf d0                        	movsx edx, ax
0x804a553:   89 d0                           	mov eax, edx
0x804a555:   c1 e0 03                        	shl eax, 3
0x804a558:   01 d0                           	add eax, edx
0x804a55a:   66 21 45 ba                     	and word ptr [ebp - 0x46], ax
0x804a55e:   0f b7 45 ba                     	movzx eax, word ptr [ebp - 0x46]
0x804a562:   8b 55 bc                        	mov edx, dword ptr [ebp - 0x44]
0x804a565:   0f af c2                        	imul eax, edx
0x804a568:   0f b7 d0                        	movzx edx, ax
0x804a56b:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a56e:   0f b7 c0                        	movzx eax, ax
0x804a571:   89 c1                           	mov ecx, eax
0x804a573:   d3 e2                           	shl edx, cl
0x804a575:   89 d0                           	mov eax, edx
0x804a577:   88 45 c7                        	mov byte ptr [ebp - 0x39], al
0x804a57a:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a57e:   66 0f be d0                     	movsx dx, al
0x804a582:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a586:   66 98                           	cbw 
0x804a588:   01 d0                           	add eax, edx
0x804a58a:   0f b7 d0                        	movzx edx, ax
0x804a58d:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a590:   0f b7 c0                        	movzx eax, ax
0x804a593:   29 c2                           	sub edx, eax
0x804a595:   89 d0                           	mov eax, edx
0x804a597:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a59a:   66 c7 45 9e ef ff               	mov word ptr [ebp - 0x62], 0xffef
0x804a5a0:   eb 3d                           	jmp 0x804a5df <func_1+0xe49>
0x804a5a2:   c7 85 bc fe ff ff 63 9a b8 41   	mov dword ptr [ebp - 0x144], 0x41b89a63
0x804a5ac:   c7 85 b8 fe ff ff fc ff ff ff   	mov dword ptr [ebp - 0x148], 0xfffffffc
0x804a5b6:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x804a5ba:   83 e8 01                        	sub eax, 1
0x804a5bd:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x804a5c1:   0f b6 85 c3 fe ff ff            	movzx eax, byte ptr [ebp - 0x13d]
0x804a5c8:   c0 e8 07                        	shr al, 7
0x804a5cb:   0f b6 c0                        	movzx eax, al
0x804a5ce:   31 85 b8 fe ff ff               	xor dword ptr [ebp - 0x148], eax
0x804a5d4:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x804a5d8:   83 e8 01                        	sub eax, 1
0x804a5db:   66 89 45 9e                     	mov word ptr [ebp - 0x62], ax
0x804a5df:   66 83 7d 9e e5                  	cmp word ptr [ebp - 0x62], -0x1b
0x804a5e4:   74 bc                           	je 0x804a5a2 <func_1+0xe0c>
0x804a5e6:   0f b6 45 af                     	movzx eax, byte ptr [ebp - 0x51]
0x804a5ea:   0f b6 d0                        	movzx edx, al
0x804a5ed:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a5f0:   0f b6 c0                        	movzx eax, al
0x804a5f3:   01 c2                           	add edx, eax
0x804a5f5:   66 c7 45 b6 00 00               	mov word ptr [ebp - 0x4a], 0
0x804a5fb:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804a5ff:   31 d0                           	xor eax, edx
0x804a601:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x804a607:   8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x804a60d:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a610:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a613:   09 45 e0                        	or dword ptr [ebp - 0x20], eax
0x804a616:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a619:   21 45 f0                        	and dword ptr [ebp - 0x10], eax
0x804a61c:   eb 01                           	jmp 0x804a61f <func_1+0xe89>
0x804a61e:   90                              	nop 
0x804a61f:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a623:   83 e8 03                        	sub eax, 3
0x804a626:   66 89 45 b2                     	mov word ptr [ebp - 0x4e], ax
0x804a62a:   66 83 7d b2 f7                  	cmp word ptr [ebp - 0x4e], -9
0x804a62f:   0f 8d 8c f4 ff ff               	jge 0x8049ac1 <func_1+0x32b>
0x804a635:   eb 04                           	jmp 0x804a63b <func_1+0xea5>
0x804a637:   90                              	nop 
0x804a638:   eb 01                           	jmp 0x804a63b <func_1+0xea5>
0x804a63a:   90                              	nop 
0x804a63b:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804a63f:   0f b7 4d c4                     	movzx ecx, word ptr [ebp - 0x3c]
0x804a643:   0f b6 75 c7                     	movzx esi, byte ptr [ebp - 0x39]
0x804a647:   0f b7 7d ce                     	movzx edi, word ptr [ebp - 0x32]
0x804a64b:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804a651:   0f b7 5d dc                     	movzx ebx, word ptr [ebp - 0x24]
0x804a655:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x804a65b:   0f bf 55 de                     	movsx edx, word ptr [ebp - 0x22]
0x804a65f:   89 95 88 fe ff ff               	mov dword ptr [ebp - 0x178], edx
0x804a665:   0f bf 7d 88                     	movsx edi, word ptr [ebp - 0x78]
0x804a669:   89 bd 84 fe ff ff               	mov dword ptr [ebp - 0x17c], edi
0x804a66f:   0f b7 7d b8                     	movzx edi, word ptr [ebp - 0x48]
0x804a673:   0f bf 5d ba                     	movsx ebx, word ptr [ebp - 0x46]
0x804a677:   0f be 55 8b                     	movsx edx, byte ptr [ebp - 0x75]
0x804a67b:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a67e:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a681:   50                              	push eax
0x804a682:   51                              	push ecx
0x804a683:   56                              	push esi
0x804a684:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a687:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a68d:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a690:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a696:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a69c:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a6a2:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a6a5:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a6a8:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a6ab:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a6ae:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a6b1:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a6b4:   57                              	push edi
0x804a6b5:   53                              	push ebx
0x804a6b6:   52                              	push edx
0x804a6b7:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a6ba:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a6bd:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a6c0:   e8 61 ef ff ff                  	call 0x8049626 <set_var>
0x804a6c5:   83 c4 5c                        	add esp, 0x5c
0x804a6c8:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a6cc:   e9 33 01 00 00                  	jmp 0x804a804 <func_1+0x106e>
0x804a6d1:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x804a6d5:   09 45 e8                        	or dword ptr [ebp - 0x18], eax
0x804a6d8:   81 4d 84 59 f4 98 03            	or dword ptr [ebp - 0x7c], 0x398f459
0x804a6df:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a6e2:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804a6e8:   83 7d 80 00                     	cmp dword ptr [ebp - 0x80], 0
0x804a6ec:   74 08                           	je 0x804a6f6 <func_1+0xf60>
0x804a6ee:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a6f1:   31 45 c0                        	xor dword ptr [ebp - 0x40], eax
0x804a6f4:   eb 7e                           	jmp 0x804a774 <func_1+0xfde>
0x804a6f6:   66 c7 85 26 ff ff ff 01 00      	mov word ptr [ebp - 0xda], 1
0x804a6ff:   c7 85 20 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xe0], 1
0x804a709:   66 83 ad 26 ff ff ff 01         	sub word ptr [ebp - 0xda], 1
0x804a711:   0f bf 45 b0                     	movsx eax, word ptr [ebp - 0x50]
0x804a715:   89 85 20 ff ff ff               	mov dword ptr [ebp - 0xe0], eax
0x804a71b:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x804a721:   89 c1                           	mov ecx, eax
0x804a723:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a727:   ba 00 00 00 00                  	mov edx, 0
0x804a72c:   66 f7 f1                        	div cx
0x804a72f:   89 d0                           	mov eax, edx
0x804a731:   98                              	cwde 
0x804a732:   8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x804a735:   89 d6                           	mov esi, edx
0x804a737:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x804a73b:   75 07                           	jne 0x804a744 <func_1+0xfae>
0x804a73d:   66 83 7d ce 00                  	cmp word ptr [ebp - 0x32], 0
0x804a742:   74 07                           	je 0x804a74b <func_1+0xfb5>
0x804a744:   ba 01 00 00 00                  	mov edx, 1
0x804a749:   eb 05                           	jmp 0x804a750 <func_1+0xfba>
0x804a74b:   ba 00 00 00 00                  	mov edx, 0
0x804a750:   0f b7 da                        	movzx ebx, dx
0x804a753:   0f b7 95 26 ff ff ff            	movzx edx, word ptr [ebp - 0xda]
0x804a75a:   89 d1                           	mov ecx, edx
0x804a75c:   d3 fb                           	sar ebx, cl
0x804a75e:   89 da                           	mov edx, ebx
0x804a760:   01 f2                           	add edx, esi
0x804a762:   0f bf ca                        	movsx ecx, dx
0x804a765:   99                              	cdq 
0x804a766:   f7 f9                           	idiv ecx
0x804a768:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x804a76f:   09 d0                           	or eax, edx
0x804a771:   31 45 f0                        	xor dword ptr [ebp - 0x10], eax
0x804a774:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804a778:   0f b7 4d c4                     	movzx ecx, word ptr [ebp - 0x3c]
0x804a77c:   0f b6 75 c7                     	movzx esi, byte ptr [ebp - 0x39]
0x804a780:   0f b7 7d ce                     	movzx edi, word ptr [ebp - 0x32]
0x804a784:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804a78a:   0f b7 5d dc                     	movzx ebx, word ptr [ebp - 0x24]
0x804a78e:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x804a794:   0f bf 55 de                     	movsx edx, word ptr [ebp - 0x22]
0x804a798:   89 95 88 fe ff ff               	mov dword ptr [ebp - 0x178], edx
0x804a79e:   0f bf 7d 88                     	movsx edi, word ptr [ebp - 0x78]
0x804a7a2:   89 bd 84 fe ff ff               	mov dword ptr [ebp - 0x17c], edi
0x804a7a8:   0f b7 7d b8                     	movzx edi, word ptr [ebp - 0x48]
0x804a7ac:   0f bf 5d ba                     	movsx ebx, word ptr [ebp - 0x46]
0x804a7b0:   0f be 55 8b                     	movsx edx, byte ptr [ebp - 0x75]
0x804a7b4:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a7b7:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a7ba:   50                              	push eax
0x804a7bb:   51                              	push ecx
0x804a7bc:   56                              	push esi
0x804a7bd:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a7c0:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a7c6:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a7c9:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a7cf:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a7d5:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a7db:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a7de:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a7e1:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a7e4:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a7e7:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a7ea:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a7ed:   57                              	push edi
0x804a7ee:   53                              	push ebx
0x804a7ef:   52                              	push edx
0x804a7f0:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a7f3:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a7f6:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a7f9:   e8 28 ee ff ff                  	call 0x8049626 <set_var>
0x804a7fe:   83 c4 5c                        	add esp, 0x5c
0x804a801:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a804:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a807:   5b                              	pop ebx
0x804a808:   5e                              	pop esi
0x804a809:   5f                              	pop edi
0x804a80a:   5d                              	pop ebp
0x804a80b:   c3                              	ret 
; function: main at 0x804a80c -- 0x804ab42
0x804a80c:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a810:   83 e4 f0                        	and esp, 0xfffffff0
0x804a813:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a816:   55                              	push ebp
0x804a817:   89 e5                           	mov ebp, esp
0x804a819:   53                              	push ebx
0x804a81a:   51                              	push ecx
0x804a81b:   83 ec 10                        	sub esp, 0x10
0x804a81e:   e8 6d db ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a823:   81 c3 dd 27 00 00               	add ebx, 0x27dd
0x804a829:   89 c8                           	mov eax, ecx
0x804a82b:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a832:   83 38 02                        	cmp dword ptr [eax], 2
0x804a835:   75 26                           	jne 0x804a85d <main+0x51>
0x804a837:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a83a:   83 c0 04                        	add eax, 4
0x804a83d:   8b 00                           	mov eax, dword ptr [eax]
0x804a83f:   83 ec 08                        	sub esp, 8
0x804a842:   8d 93 28 dc ff ff               	lea edx, [ebx - 0x23d8]
0x804a848:   52                              	push edx
0x804a849:   50                              	push eax
0x804a84a:   e8 b1 da ff ff                  	call 0x8048300 <strcmp>
0x804a84f:   83 c4 10                        	add esp, 0x10
0x804a852:   85 c0                           	test eax, eax
0x804a854:   75 07                           	jne 0x804a85d <main+0x51>
0x804a856:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a85d:   e8 f4 db ff ff                  	call 0x8048456 <platform_main_begin>
0x804a862:   e8 04 ec ff ff                  	call 0x804946b <crc32_gentab>
0x804a867:   e8 2a ef ff ff                  	call 0x8049796 <func_1>
0x804a86c:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804a872:   89 c2                           	mov edx, eax
0x804a874:   83 ec 04                        	sub esp, 4
0x804a877:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a87a:   8d 83 2a dc ff ff               	lea eax, [ebx - 0x23d6]
0x804a880:   50                              	push eax
0x804a881:   52                              	push edx
0x804a882:   e8 f0 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a887:   83 c4 10                        	add esp, 0x10
0x804a88a:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a890:   83 ec 04                        	sub esp, 4
0x804a893:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a896:   8d 93 2e dc ff ff               	lea edx, [ebx - 0x23d2]
0x804a89c:   52                              	push edx
0x804a89d:   50                              	push eax
0x804a89e:   e8 d4 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8a3:   83 c4 10                        	add esp, 0x10
0x804a8a6:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a8ac:   83 ec 04                        	sub esp, 4
0x804a8af:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8b2:   8d 93 33 dc ff ff               	lea edx, [ebx - 0x23cd]
0x804a8b8:   52                              	push edx
0x804a8b9:   50                              	push eax
0x804a8ba:   e8 b8 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8bf:   83 c4 10                        	add esp, 0x10
0x804a8c2:   0f b6 83 a4 04 00 00            	movzx eax, byte ptr [ebx + 0x4a4]
0x804a8c9:   0f be c0                        	movsx eax, al
0x804a8cc:   83 ec 04                        	sub esp, 4
0x804a8cf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8d2:   8d 93 38 dc ff ff               	lea edx, [ebx - 0x23c8]
0x804a8d8:   52                              	push edx
0x804a8d9:   50                              	push eax
0x804a8da:   e8 98 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8df:   83 c4 10                        	add esp, 0x10
0x804a8e2:   0f b7 83 a6 04 00 00            	movzx eax, word ptr [ebx + 0x4a6]
0x804a8e9:   98                              	cwde 
0x804a8ea:   83 ec 04                        	sub esp, 4
0x804a8ed:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8f0:   8d 93 3d dc ff ff               	lea edx, [ebx - 0x23c3]
0x804a8f6:   52                              	push edx
0x804a8f7:   50                              	push eax
0x804a8f8:   e8 7a ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8fd:   83 c4 10                        	add esp, 0x10
0x804a900:   0f b7 83 30 00 00 00            	movzx eax, word ptr [ebx + 0x30]
0x804a907:   0f b7 c0                        	movzx eax, ax
0x804a90a:   83 ec 04                        	sub esp, 4
0x804a90d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a910:   8d 93 42 dc ff ff               	lea edx, [ebx - 0x23be]
0x804a916:   52                              	push edx
0x804a917:   50                              	push eax
0x804a918:   e8 5a ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a91d:   83 c4 10                        	add esp, 0x10
0x804a920:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a926:   89 c2                           	mov edx, eax
0x804a928:   83 ec 04                        	sub esp, 4
0x804a92b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a92e:   8d 83 47 dc ff ff               	lea eax, [ebx - 0x23b9]
0x804a934:   50                              	push eax
0x804a935:   52                              	push edx
0x804a936:   e8 3c ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a93b:   83 c4 10                        	add esp, 0x10
0x804a93e:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804a944:   89 c2                           	mov edx, eax
0x804a946:   83 ec 04                        	sub esp, 4
0x804a949:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a94c:   8d 83 4c dc ff ff               	lea eax, [ebx - 0x23b4]
0x804a952:   50                              	push eax
0x804a953:   52                              	push edx
0x804a954:   e8 1e ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a959:   83 c4 10                        	add esp, 0x10
0x804a95c:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804a962:   89 c2                           	mov edx, eax
0x804a964:   83 ec 04                        	sub esp, 4
0x804a967:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a96a:   8d 83 52 dc ff ff               	lea eax, [ebx - 0x23ae]
0x804a970:   50                              	push eax
0x804a971:   52                              	push edx
0x804a972:   e8 00 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a977:   83 c4 10                        	add esp, 0x10
0x804a97a:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804a980:   89 c2                           	mov edx, eax
0x804a982:   83 ec 04                        	sub esp, 4
0x804a985:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a988:   8d 83 58 dc ff ff               	lea eax, [ebx - 0x23a8]
0x804a98e:   50                              	push eax
0x804a98f:   52                              	push edx
0x804a990:   e8 e2 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a995:   83 c4 10                        	add esp, 0x10
0x804a998:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804a99e:   83 ec 04                        	sub esp, 4
0x804a9a1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9a4:   8d 93 5e dc ff ff               	lea edx, [ebx - 0x23a2]
0x804a9aa:   52                              	push edx
0x804a9ab:   50                              	push eax
0x804a9ac:   e8 c6 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9b1:   83 c4 10                        	add esp, 0x10
0x804a9b4:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804a9ba:   83 ec 04                        	sub esp, 4
0x804a9bd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9c0:   8d 93 64 dc ff ff               	lea edx, [ebx - 0x239c]
0x804a9c6:   52                              	push edx
0x804a9c7:   50                              	push eax
0x804a9c8:   e8 aa eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9cd:   83 c4 10                        	add esp, 0x10
0x804a9d0:   0f b7 83 48 00 00 00            	movzx eax, word ptr [ebx + 0x48]
0x804a9d7:   98                              	cwde 
0x804a9d8:   83 ec 04                        	sub esp, 4
0x804a9db:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9de:   8d 93 6a dc ff ff               	lea edx, [ebx - 0x2396]
0x804a9e4:   52                              	push edx
0x804a9e5:   50                              	push eax
0x804a9e6:   e8 8c eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9eb:   83 c4 10                        	add esp, 0x10
0x804a9ee:   0f b7 83 4a 00 00 00            	movzx eax, word ptr [ebx + 0x4a]
0x804a9f5:   98                              	cwde 
0x804a9f6:   83 ec 04                        	sub esp, 4
0x804a9f9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9fc:   8d 93 70 dc ff ff               	lea edx, [ebx - 0x2390]
0x804aa02:   52                              	push edx
0x804aa03:   50                              	push eax
0x804aa04:   e8 6e eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa09:   83 c4 10                        	add esp, 0x10
0x804aa0c:   0f b7 83 ac 04 00 00            	movzx eax, word ptr [ebx + 0x4ac]
0x804aa13:   0f b7 c0                        	movzx eax, ax
0x804aa16:   83 ec 04                        	sub esp, 4
0x804aa19:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa1c:   8d 93 76 dc ff ff               	lea edx, [ebx - 0x238a]
0x804aa22:   52                              	push edx
0x804aa23:   50                              	push eax
0x804aa24:   e8 4e eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa29:   83 c4 10                        	add esp, 0x10
0x804aa2c:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804aa32:   83 ec 04                        	sub esp, 4
0x804aa35:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa38:   8d 93 7c dc ff ff               	lea edx, [ebx - 0x2384]
0x804aa3e:   52                              	push edx
0x804aa3f:   50                              	push eax
0x804aa40:   e8 32 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa45:   83 c4 10                        	add esp, 0x10
0x804aa48:   0f b7 83 50 00 00 00            	movzx eax, word ptr [ebx + 0x50]
0x804aa4f:   0f b7 c0                        	movzx eax, ax
0x804aa52:   83 ec 04                        	sub esp, 4
0x804aa55:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa58:   8d 93 82 dc ff ff               	lea edx, [ebx - 0x237e]
0x804aa5e:   52                              	push edx
0x804aa5f:   50                              	push eax
0x804aa60:   e8 12 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa65:   83 c4 10                        	add esp, 0x10
0x804aa68:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804aa6e:   83 ec 04                        	sub esp, 4
0x804aa71:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa74:   8d 93 88 dc ff ff               	lea edx, [ebx - 0x2378]
0x804aa7a:   52                              	push edx
0x804aa7b:   50                              	push eax
0x804aa7c:   e8 f6 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa81:   83 c4 10                        	add esp, 0x10
0x804aa84:   0f b6 83 58 00 00 00            	movzx eax, byte ptr [ebx + 0x58]
0x804aa8b:   0f b6 c0                        	movzx eax, al
0x804aa8e:   83 ec 04                        	sub esp, 4
0x804aa91:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa94:   8d 93 8e dc ff ff               	lea edx, [ebx - 0x2372]
0x804aa9a:   52                              	push edx
0x804aa9b:   50                              	push eax
0x804aa9c:   e8 d6 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaa1:   83 c4 10                        	add esp, 0x10
0x804aaa4:   0f b7 83 5a 00 00 00            	movzx eax, word ptr [ebx + 0x5a]
0x804aaab:   0f b7 c0                        	movzx eax, ax
0x804aaae:   83 ec 04                        	sub esp, 4
0x804aab1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aab4:   8d 93 94 dc ff ff               	lea edx, [ebx - 0x236c]
0x804aaba:   52                              	push edx
0x804aabb:   50                              	push eax
0x804aabc:   e8 b6 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aac1:   83 c4 10                        	add esp, 0x10
0x804aac4:   0f b7 83 5c 00 00 00            	movzx eax, word ptr [ebx + 0x5c]
0x804aacb:   0f b7 c0                        	movzx eax, ax
0x804aace:   83 ec 04                        	sub esp, 4
0x804aad1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aad4:   8d 93 9a dc ff ff               	lea edx, [ebx - 0x2366]
0x804aada:   52                              	push edx
0x804aadb:   50                              	push eax
0x804aadc:   e8 96 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aae1:   83 c4 10                        	add esp, 0x10
0x804aae4:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804aaea:   83 ec 04                        	sub esp, 4
0x804aaed:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaf0:   8d 93 a0 dc ff ff               	lea edx, [ebx - 0x2360]
0x804aaf6:   52                              	push edx
0x804aaf7:   50                              	push eax
0x804aaf8:   e8 7a ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aafd:   83 c4 10                        	add esp, 0x10
0x804ab00:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804ab06:   83 ec 04                        	sub esp, 4
0x804ab09:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab0c:   8d 93 a6 dc ff ff               	lea edx, [ebx - 0x235a]
0x804ab12:   52                              	push edx
0x804ab13:   50                              	push eax
0x804ab14:   e8 5e ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab19:   83 c4 10                        	add esp, 0x10
0x804ab1c:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ab22:   f7 d0                           	not eax
0x804ab24:   83 ec 08                        	sub esp, 8
0x804ab27:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab2a:   50                              	push eax
0x804ab2b:   e8 36 d9 ff ff                  	call 0x8048466 <platform_main_end>
0x804ab30:   83 c4 10                        	add esp, 0x10
0x804ab33:   b8 00 00 00 00                  	mov eax, 0
0x804ab38:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ab3b:   59                              	pop ecx
0x804ab3c:   5b                              	pop ebx
0x804ab3d:   5d                              	pop ebp
0x804ab3e:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ab41:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ab42 -- 0x804ab46
0x804ab42:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ab45:   c3                              	ret 
; data inside code section at 0x804ab46 -- 0x804ab50
0x804ab46:   66 90 66 90 66 90 66 90  66 90                     |f.f.f.f.f.      |
; function: __libc_csu_init at 0x804ab50 -- 0x804abad
0x804ab50:   55                              	push ebp
0x804ab51:   57                              	push edi
0x804ab52:   56                              	push esi
0x804ab53:   53                              	push ebx
0x804ab54:   e8 37 d8 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ab59:   81 c3 a7 24 00 00               	add ebx, 0x24a7
0x804ab5f:   83 ec 0c                        	sub esp, 0xc
0x804ab62:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ab66:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ab6c:   e8 5b d7 ff ff                  	call 0x80482cc <_init>
0x804ab71:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804ab77:   29 c6                           	sub esi, eax
0x804ab79:   c1 fe 02                        	sar esi, 2
0x804ab7c:   85 f6                           	test esi, esi
0x804ab7e:   74 25                           	je 0x804aba5 <__libc_csu_init+0x55>
0x804ab80:   31 ff                           	xor edi, edi
0x804ab82:   8d b6 00 00 00 00               	lea esi, [esi]
0x804ab88:   83 ec 04                        	sub esp, 4
0x804ab8b:   55                              	push ebp
0x804ab8c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ab90:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ab94:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804ab9b:   83 c7 01                        	add edi, 1
0x804ab9e:   83 c4 10                        	add esp, 0x10
0x804aba1:   39 fe                           	cmp esi, edi
0x804aba3:   75 e3                           	jne 0x804ab88 <__libc_csu_init+0x38>
0x804aba5:   83 c4 0c                        	add esp, 0xc
0x804aba8:   5b                              	pop ebx
0x804aba9:   5e                              	pop esi
0x804abaa:   5f                              	pop edi
0x804abab:   5d                              	pop ebp
0x804abac:   c3                              	ret 
; data inside code section at 0x804abad -- 0x804abb0
0x804abad:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804abb0 -- 0x804abb2
0x804abb0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804abb4 -- 0x804abc8
0x804abb4:   53                              	push ebx
0x804abb5:   83 ec 08                        	sub esp, 8
0x804abb8:   e8 d3 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804abbd:   81 c3 43 24 00 00               	add ebx, 0x2443
0x804abc3:   83 c4 08                        	add esp, 8
0x804abc6:   5b                              	pop ebx
0x804abc7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 cc ab 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804abc8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804abd8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804abe8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804abf8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804ac08:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ac18:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ac28:   31 00 67 5f 32 00 67 5f  31 36 00 67 5f 32 35 00   |1.g_2.g_16.g_25.|
0x804ac38:   67 5f 34 34 00 67 5f 34  36 00 67 5f 34 38 00 67   |g_44.g_46.g_48.g|
0x804ac48:   5f 35 35 00 67 5f 31 31  33 00 67 5f 31 31 34 00   |_55.g_113.g_114.|
0x804ac58:   67 5f 31 33 35 00 67 5f  31 34 38 00 67 5f 32 34   |g_135.g_148.g_24|
0x804ac68:   35 00 67 5f 32 38 32 00  67 5f 32 38 35 00 67 5f   |5.g_282.g_285.g_|
0x804ac78:   32 38 37 00 67 5f 33 34  30 00 67 5f 33 39 31 00   |287.g_340.g_391.|
0x804ac88:   67 5f 34 30 35 00 67 5f  34 32 39 00 67 5f 34 33   |g_405.g_429.g_43|
0x804ac98:   33 00 67 5f 34 34 35 00  67 5f 34 34 36 00 67 5f   |3.g_445.g_446.g_|
0x804aca8:   34 35 33 00 00 00 00 3f  ff ff ff 7e 00 00 80 0d   |453....?...~....|
0x804acb8:   00 00 80 31 ff ff 7f 3f  00 00 00 27 00 00 80 71   |...1...?...'...q|
0x804acc8:   ff ff ff 34 00 00 00 00  00 00 00 00 00 00 e0 3f   |...4...........?|
0x804acd8:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804ace8:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804acf8:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804ad08:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804ad18:   01                                                 |.               |
; section: .eh_frame_hdr
0x804ad18:   01 1b 03 3b b0 02 00 00  55 00 00 00 d8 d5 ff ff   |...;....U.......|
0x804ad28:   e0 02 00 00 18 d6 ff ff  04 03 00 00 68 d6 ff ff   |............h...|
0x804ad38:   cc 02 00 00 3e d7 ff ff  18 03 00 00 4e d7 ff ff   |....>.......N...|
0x804ad48:   38 03 00 00 7c d7 ff ff  5c 03 00 00 9a d7 ff ff   |8...|...\.......|
0x804ad58:   7c 03 00 00 c2 d7 ff ff  9c 03 00 00 ec d7 ff ff   ||...............|
0x804ad68:   bc 03 00 00 15 d8 ff ff  dc 03 00 00 58 d8 ff ff   |............X...|
0x804ad78:   fc 03 00 00 99 d8 ff ff  1c 04 00 00 f1 d8 ff ff   |................|
0x804ad88:   40 04 00 00 43 d9 ff ff  64 04 00 00 80 d9 ff ff   |@...C...d.......|
0x804ad98:   84 04 00 00 b7 d9 ff ff  a4 04 00 00 d6 d9 ff ff   |................|
0x804ada8:   c4 04 00 00 00 da ff ff  e4 04 00 00 2c da ff ff   |............,...|
0x804adb8:   04 05 00 00 57 da ff ff  24 05 00 00 a0 da ff ff   |....W...$.......|
0x804adc8:   44 05 00 00 e7 da ff ff  64 05 00 00 41 db ff ff   |D.......d...A...|
0x804add8:   88 05 00 00 95 db ff ff  ac 05 00 00 d4 db ff ff   |................|
0x804ade8:   cc 05 00 00 0d dc ff ff  ec 05 00 00 2f dc ff ff   |............/...|
0x804adf8:   0c 06 00 00 7d dc ff ff  2c 06 00 00 b9 dc ff ff   |....}...,.......|
0x804ae08:   4c 06 00 00 42 dd ff ff  6c 06 00 00 74 dd ff ff   |L...B...l...t...|
0x804ae18:   8c 06 00 00 a4 dd ff ff  ac 06 00 00 e9 dd ff ff   |................|
0x804ae28:   cc 06 00 00 28 de ff ff  ec 06 00 00 5a de ff ff   |....(.......Z...|
0x804ae38:   0c 07 00 00 86 de ff ff  2c 07 00 00 a4 de ff ff   |........,.......|
0x804ae48:   4c 07 00 00 cc de ff ff  6c 07 00 00 f1 de ff ff   |L.......l.......|
0x804ae58:   8c 07 00 00 16 df ff ff  ac 07 00 00 4d df ff ff   |............M...|
0x804ae68:   cc 07 00 00 81 df ff ff  ec 07 00 00 d3 df ff ff   |................|
0x804ae78:   10 08 00 00 1f e0 ff ff  34 08 00 00 56 e0 ff ff   |........4...V...|
0x804ae88:   54 08 00 00 87 e0 ff ff  74 08 00 00 a6 e0 ff ff   |T.......t.......|
0x804ae98:   94 08 00 00 d0 e0 ff ff  b4 08 00 00 f8 e0 ff ff   |................|
0x804aea8:   d4 08 00 00 21 e1 ff ff  f4 08 00 00 5d e1 ff ff   |....!.......]...|
0x804aeb8:   14 09 00 00 97 e1 ff ff  34 09 00 00 ea e1 ff ff   |........4.......|
0x804aec8:   58 09 00 00 37 e2 ff ff  7c 09 00 00 6f e2 ff ff   |X...7...|...o...|
0x804aed8:   9c 09 00 00 a1 e2 ff ff  bc 09 00 00 b5 e2 ff ff   |................|
0x804aee8:   dc 09 00 00 cc e2 ff ff  fc 09 00 00 e1 e2 ff ff   |................|
0x804aef8:   1c 0a 00 00 f7 e2 ff ff  3c 0a 00 00 1e e3 ff ff   |........<.......|
0x804af08:   5c 0a 00 00 43 e3 ff ff  7c 0a 00 00 82 e3 ff ff   |\...C...|.......|
0x804af18:   9c 0a 00 00 bb e3 ff ff  bc 0a 00 00 e7 e3 ff ff   |................|
0x804af28:   dc 0a 00 00 0d e4 ff ff  fc 0a 00 00 4f e4 ff ff   |............O...|
0x804af38:   1c 0b 00 00 91 e4 ff ff  3c 0b 00 00 d3 e4 ff ff   |........<.......|
0x804af48:   5c 0b 00 00 48 e5 ff ff  7c 0b 00 00 a5 e5 ff ff   |\...H...|.......|
0x804af58:   9c 0b 00 00 02 e6 ff ff  bc 0b 00 00 5f e6 ff ff   |............_...|
0x804af68:   dc 0b 00 00 ef e6 ff ff  fc 0b 00 00 53 e7 ff ff   |............S...|
0x804af78:   1c 0c 00 00 c3 e7 ff ff  3c 0c 00 00 0a e8 ff ff   |........<.......|
0x804af88:   60 0c 00 00 5f e8 ff ff  80 0c 00 00 a6 e8 ff ff   |`..._...........|
0x804af98:   a4 0c 00 00 0e e9 ff ff  c8 0c 00 00 7e ea ff ff   |............~...|
0x804afa8:   f8 0c 00 00 f4 fa ff ff  28 0d 00 00 2a fe ff ff   |........(...*...|
0x804afb8:   60 0d 00 00 38 fe ff ff  74 0d 00 00 98 fe ff ff   |`...8...t.......|
0x804afc8:   c0 0d 00 00 14                                     |.....           |
; section: .eh_frame
0x804afcc:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804afdc:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804afec:   94 d3 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804affc:   30 00 00 00 f0 d2 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b00c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b01c:   10 00 00 00 54 00 00 00  0c d3 ff ff 08 00 00 00   |....T...........|
0x804b02c:   00 00 00 00 1c 00 00 00  68 00 00 00 1e d4 ff ff   |........h.......|
0x804b03c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b04c:   04 04 00 00 20 00 00 00  88 00 00 00 0e d4 ff ff   |.... ...........|
0x804b05c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b06c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b07c:   18 d4 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b08c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b09c:   16 d4 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b0ac:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b0bc:   1e d4 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b0cc:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b0dc:   28 d4 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |(...)....A....B.|
0x804b0ec:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b0fc:   31 d4 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |1...C....A....B.|
0x804b10c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b11c:   54 d4 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |T...A....A....B.|
0x804b12c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b13c:   75 d4 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |u...X....A....B.|
0x804b14c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b15c:   90 01 00 00 a9 d4 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b16c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b17c:   1c 00 00 00 b4 01 00 00  d7 d4 ff ff 3d 00 00 00   |............=...|
0x804b18c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b19c:   1c 00 00 00 d4 01 00 00  f4 d4 ff ff 37 00 00 00   |............7...|
0x804b1ac:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b1bc:   1c 00 00 00 f4 01 00 00  0b d5 ff ff 1f 00 00 00   |................|
0x804b1cc:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b1dc:   1c 00 00 00 14 02 00 00  0a d5 ff ff 2a 00 00 00   |............*...|
0x804b1ec:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b1fc:   1c 00 00 00 34 02 00 00  14 d5 ff ff 2c 00 00 00   |....4.......,...|
0x804b20c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b21c:   1c 00 00 00 54 02 00 00  20 d5 ff ff 2b 00 00 00   |....T... ...+...|
0x804b22c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b23c:   1c 00 00 00 74 02 00 00  2b d5 ff ff 49 00 00 00   |....t...+...I...|
0x804b24c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b25c:   1c 00 00 00 94 02 00 00  54 d5 ff ff 47 00 00 00   |........T...G...|
0x804b26c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b27c:   20 00 00 00 b4 02 00 00  7b d5 ff ff 5a 00 00 00   | .......{...Z...|
0x804b28c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b29c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 b1 d5 ff ff   |.... ...........|
0x804b2ac:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b2bc:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b2cc:   e1 d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b2dc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b2ec:   00 d6 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b2fc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b30c:   19 d6 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b31c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b32c:   1b d6 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b33c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b34c:   49 d6 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |I...<....A....B.|
0x804b35c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b36c:   65 d6 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |e........A....B.|
0x804b37c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b38c:   ce d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b39c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b3ac:   e0 d6 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b3bc:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b3cc:   f0 d6 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b3dc:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b3ec:   15 d7 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b3fc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b40c:   34 d7 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |4...2....A....B.|
0x804b41c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b42c:   46 d7 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |F...,....A....B.|
0x804b43c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b44c:   52 d7 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |R........A....B.|
0x804b45c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b46c:   50 d7 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |P...(....A....B.|
0x804b47c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b48c:   58 d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |X...%....A....B.|
0x804b49c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b4ac:   5d d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |]...%....A....B.|
0x804b4bc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b4cc:   62 d7 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |b...7....A....B.|
0x804b4dc:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b4ec:   79 d7 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |y...4....A....B.|
0x804b4fc:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b50c:   8d d7 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b51c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b52c:   60 05 00 00 bb d7 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b53c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b54c:   1c 00 00 00 84 05 00 00  e3 d7 ff ff 37 00 00 00   |............7...|
0x804b55c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b56c:   1c 00 00 00 a4 05 00 00  fa d7 ff ff 31 00 00 00   |............1...|
0x804b57c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b58c:   1c 00 00 00 c4 05 00 00  0b d8 ff ff 1f 00 00 00   |................|
0x804b59c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b5ac:   1c 00 00 00 e4 05 00 00  0a d8 ff ff 2a 00 00 00   |............*...|
0x804b5bc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b5cc:   1c 00 00 00 04 06 00 00  14 d8 ff ff 28 00 00 00   |............(...|
0x804b5dc:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b5ec:   1c 00 00 00 24 06 00 00  1c d8 ff ff 29 00 00 00   |....$.......)...|
0x804b5fc:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b60c:   1c 00 00 00 44 06 00 00  25 d8 ff ff 3c 00 00 00   |....D...%...<...|
0x804b61c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b62c:   1c 00 00 00 64 06 00 00  41 d8 ff ff 3a 00 00 00   |....d...A...:...|
0x804b63c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b64c:   20 00 00 00 84 06 00 00  5b d8 ff ff 53 00 00 00   | .......[...S...|
0x804b65c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b66c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 8a d8 ff ff   |.... ...........|
0x804b67c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b68c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b69c:   b3 d8 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b6ac:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b6bc:   cb d8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b6cc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b6dc:   dd d8 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b6ec:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b6fc:   d1 d8 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b70c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b71c:   c8 d8 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b72c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b73c:   bd d8 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b74c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b75c:   b3 d8 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b76c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b77c:   ba d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b78c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b79c:   bf d8 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b7ac:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b7bc:   de d8 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b7cc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b7dc:   f7 d8 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b7ec:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b7fc:   03 d9 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804b80c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b81c:   09 d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b82c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b83c:   2b d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |+...B....A....B.|
0x804b84c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b85c:   4d d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |M...B....A....B.|
0x804b86c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b87c:   6f d9 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |o...u....A....B.|
0x804b88c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b89c:   c4 d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b8ac:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b8bc:   01 da ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b8cc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b8dc:   3e da ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |>...]....A....B.|
0x804b8ec:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b8fc:   7b da ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |{........A....B.|
0x804b90c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b91c:   eb da ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804b92c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b93c:   2f db ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |/...p....A....B.|
0x804b94c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b95c:   7f db ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b96c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b97c:   b0 09 00 00 a2 db ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804b98c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b99c:   d0 09 00 00 d7 db ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804b9ac:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b9bc:   20 00 00 00 f4 09 00 00  fa db ff ff 68 00 00 00   | ...........h...|
0x804b9cc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b9dc:   0c 04 04 00 2c 00 00 00  18 0a 00 00 3e dc ff ff   |....,.......>...|
0x804b9ec:   70 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |p....A....B..F..|
0x804b9fc:   86 04 83 05 03 63 01 c3  41 c6 41 c7 41 c5 0c 04   |.....c..A.A.A...|
0x804ba0c:   04 00 00 00 2c 00 00 00  48 0a 00 00 7e dd ff ff   |....,...H...~...|
0x804ba1c:   76 10 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |v....A....B..I..|
0x804ba2c:   86 04 83 05 03 66 10 c3  41 c6 41 c7 41 c5 0c 04   |.....f..A.A.A...|
0x804ba3c:   04 00 00 00 34 00 00 00  78 0a 00 00 c4 ed ff ff   |....4...x.......|
0x804ba4c:   36 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |6....D...G...u.D|
0x804ba5c:   0f 03 75 78 06 10 03 02  75 7c 03 21 03 c1 0c 01   |..ux....u|.!....|
0x804ba6c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804ba7c:   b0 0a 00 00 c2 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804ba8c:   48 00 00 00 c4 0a 00 00  bc f0 ff ff 5d 00 00 00   |H...........]...|
0x804ba9c:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x804baac:   41 0e 14 83 05 4e 0e 20  69 0e 24 41 0e 28 44 0e   |A....N. i.$A.(D.|
0x804babc:   2c 44 0e 30 4d 0e 20 47  0e 14 41 c3 0e 10 41 c6   |,D.0M. G..A...A.|
0x804bacc:   0e 0c 41 c7 0e 08 41 c5  0e 04 00 00 10 00 00 00   |..A...A.........|
0x804badc:   10 0b 00 00 d0 f0 ff ff  02 00 00 00 00 00 00 00   |................|
0x804baec:   00 00 00 00 ??                                     |....?           |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 b4 ab 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff ec 13 8b ac   |................|
0x804d028:   08 aa 31 00 51 8d 48 9a  df c7 00 00 93 94 99 ba   |..1.Q.H.........|
0x804d038:   50 5f 14 c4 62 91 8a c0  25 fd 83 33 fe 29 98 bf   |P_..b...%..3.)..|
0x804d048:   f9 ff 34 c4 ff ff ff ff  01 00 00 00 ce da 89 1a   |..4.............|
0x804d058:   bb 00 05 00 a1 19 00 00  fd ff ff ff 04 ae 88 6d   |...............m|
0x804d068:   ??                                                 |?               |
