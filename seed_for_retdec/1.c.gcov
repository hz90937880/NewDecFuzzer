        -:    0:Source:1.c
        -:    0:Graph:./1.gcno
        -:    0:Data:./1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*
        -:    2: * This is a RANDOMLY GENERATED PROGRAM.
        -:    3: *
        -:    4: * Generator: csmith 2.3.0
        -:    5: * Git version: unknown
        -:    6: * Options:   --no-arrays --no-structs --no-unions --no-safe-math --no-pointers --no-longlong --max-funcs 1 --max-expr-complexity 5 --output ./tmp/src_code/csmith_test_1162.c
        -:    7: * Seed:      2152121465
        -:    8: */
        -:    9:
        -:   10:
        -:   11:#define NO_LONGLONG
        -:   12:
        -:   13:#include "csmith.h"
        -:   14:
        -:   15:
        -:   16:static long __undefined;
        -:   17:
        -:   18:/* --- Struct/Union Declarations --- */
        -:   19:/* --- GLOBAL VARIABLES --- */
        -:   20:static volatile int8_t g_4 = 0x9B;/* VOLATILE GLOBAL g_4 */
        -:   21:static uint32_t g_7 = 1U;
        -:   22:static int32_t g_10 = 0xDCA27289;
        -:   23:static uint32_t g_20 = 8U;
        -:   24:static int16_t g_22 = 0xAD0D;
        -:   25:static int16_t g_52 = 0;
        -:   26:static uint16_t g_54 = 1U;
        -:   27:static uint8_t g_64 = 0xF4;
        -:   28:static uint32_t g_71 = 4294967292U;
        -:   29:static uint8_t g_76 = 0x4E;
        -:   30:static uint32_t g_83 = 0U;
        -:   31:
        -:   32:
        -:   33:/* --- FORWARD DECLARATIONS --- */
        -:   34:static int32_t  func_1(void);
        -:   35:
        -:   36:
        -:   37:
        1:   38:static int set_var(int8_t g_4_l, uint32_t g_7_l, int32_t g_10_l, uint32_t g_20_l, int16_t g_22_l, int16_t g_52_l, uint16_t g_54_l, uint8_t g_64_l, uint32_t g_71_l, uint8_t g_76_l, uint32_t g_83_l){
        1:   39:    g_4 = g_4_l;g_7 = g_7_l;g_10 = g_10_l;g_20 = g_20_l;g_22 = g_22_l;g_52 = g_52_l;g_54 = g_54_l;g_64 = g_64_l;g_71 = g_71_l;g_76 = g_76_l;g_83 = g_83_l;
        1:   40:    return 0;
        -:   41:}
        -:   42:/* --- FUNCTIONS --- */
        -:   43:/* ------------------------------------------ */
        -:   44:/* 
        -:   45: * reads : g_4 g_7 g_10 g_22 g_20 g_52 g_54 g_64 g_71 g_76 g_83
        -:   46: * writes: g_10 g_20 g_22 g_7 g_52 g_54 g_64 g_71 g_76 g_83
        -:   47: */
        1:   48:static int32_t  func_1(void)
        -:   49:{
        -:   50:
        1:   51:int8_t g_4_l = 0x9B;
        1:   52:uint32_t g_7_l = 1U;
        1:   53:int32_t g_10_l = 0xDCA27289;
        1:   54:uint32_t g_20_l = 8U;
        1:   55:int16_t g_22_l = 0xAD0D;
        1:   56:int16_t g_52_l = 0;
        1:   57:uint16_t g_54_l = 1U;
        1:   58:uint8_t g_64_l = 0xF4;
        1:   59:uint32_t g_71_l = 4294967292U;
        1:   60:uint8_t g_76_l = 0x4E;
        1:   61:uint32_t g_83_l = 0U;
        -:   62:
        -:   63: /* block id: 0 */
        1:   64:    int8_t l_8 = (-3);
        1:   65:    int32_t l_9 = 7;
        1:   66:    int16_t l_19 = (-1);
        1:   67:    int32_t l_21 = 0x142C78EF;
        1:   68:    int16_t l_77 = 0x52EB;
        1:   69:    int8_t l_82 = 0;
        1:   70:    g_10_l = (((uint16_t)((((((g_4_l & (((uint32_t)0x30F5872D - (uint32_t)(g_7_l >= (l_9 = (l_8 , l_8)))) < g_7_l)) && l_8) && g_7_l) || g_7_l) != g_7_l) ^ g_7_l) >> (uint16_t)l_8) & l_8);
        1:   71:    if ((g_7_l || ((int8_t)0 * (int8_t)(((int32_t)(l_9 = (-3)) - (int32_t)g_10_l) <= g_4_l))))
        -:   72:    { /* block id: 4 */
        1:   73:        g_22_l &= ((g_10_l , ((int16_t)(g_20_l = (l_9 , ((((int8_t)(l_19 = (g_7_l , g_10_l)) / (int8_t)0x64) , l_9) , g_10_l))) >> (int16_t)15)) , l_21);
        1:   74:        set_var(g_4_l, g_7_l, g_10_l, g_20_l, g_22_l, g_52_l, g_54_l, g_64_l, g_71_l, g_76_l, g_83_l);return g_4_l;
        -:   75:    }
        -:   76:    else
        -:   77:    { /* block id: 9 */
    #####:   78:        uint32_t l_30 = 0x659BAAA4;
    #####:   79:        int32_t l_34 = 0xDBC46D76;
    #####:   80:        uint16_t l_35 = 0xB167;
    #####:   81:        int32_t l_63 = 1;
    #####:   82:        int32_t l_70 = 4;
    #####:   83:        l_35 = ((((((int8_t)((int32_t)g_4_l + (int32_t)((uint8_t)(~l_30) + (uint8_t)((uint8_t)(!0x10) * (uint8_t)(l_34 = (l_30 != 0x3E5C7D81))))) * (int8_t)0x44) | l_30) < 0x64) | g_20_l) <= l_21);
    #####:   84:        for (g_20_l = 18; (g_20_l != 51); g_20_l += 1)
        -:   85:        { /* block id: 14 */
    #####:   86:            uint16_t l_53 = 0U;
    #####:   87:            int32_t l_57 = 0xDE2FC23F;
    #####:   88:            int32_t l_62 = 0xB94995FB;
    #####:   89:            for (g_7_l = 0; (g_7_l > 26); g_7_l++)
        -:   90:            { /* block id: 17 */
    #####:   91:                int32_t l_40 = 0x3F0BDE8A;
    #####:   92:                if (l_40)
    #####:   93:                    break;
        -:   94:            }
    #####:   95:            g_54_l = (((int16_t)(((((int16_t)(g_7_l <= ((int8_t)((int8_t)1 - (int8_t)((((uint16_t)((((g_52_l = ((-(uint8_t)9U) != (g_7_l >= g_7_l))) && (-1)) & g_10_l) <= l_9) * (uint16_t)1) & l_8) || g_52_l)) * (int8_t)l_8)) / (int16_t)6) > 1) & g_7_l) < l_53) >> (int16_t)5) >= g_10_l);
    #####:   96:            g_64_l &= ((int16_t)(g_4_l , (l_57 = g_52_l)) / (int16_t)(((int8_t)(l_53 > (((uint16_t)(l_63 = ((l_62 |= ((l_34 = g_22_l) && g_22_l)) >= l_9)) * (uint16_t)g_54_l) != (-1))) + (int8_t)0xE4) && 0xD46F));
        -:   97:        }
    #####:   98:        g_71_l &= (l_70 &= (l_30 > (0 >= ((!((l_9 |= ((uint16_t)((l_19 > (((int8_t)g_54_l << (int8_t)l_34) <= l_63)) , l_21) / (uint16_t)l_30)) , g_22_l)) > 0xE3B4))));
        -:   99:    }
    #####:  100:    g_76_l |= (g_4_l , ((l_9 , ((((int16_t)((int16_t)(249U == l_19) * (int16_t)(-8)) * (int16_t)g_10_l) , 0xC494) | 1)) != l_8));
    #####:  101:    g_83_l &= (((l_8 ^ ((g_76_l = (l_77 > (((uint8_t)((int32_t)l_82 / (int32_t)l_82) / (uint8_t)g_20_l) , l_21))) && g_71_l)) , l_82) , l_19);
    #####:  102:    set_var(g_4_l, g_7_l, g_10_l, g_20_l, g_22_l, g_52_l, g_54_l, g_64_l, g_71_l, g_76_l, g_83_l);return g_22_l;
        -:  103:}
        -:  104:
        -:  105:
        -:  106:
        -:  107:
        -:  108:
        -:  109:/* ---------------------------------------- */
        1:  110:int main (int argc, char* argv[])
        -:  111:{
        1:  112:    int print_hash_value = 0;
        1:  113:    if (argc == 2 && strcmp(argv[1], "1") == 0) print_hash_value = 1;
        1:  114:    platform_main_begin();
        1:  115:    crc32_gentab();
        1:  116:    func_1();
        1:  117:    transparent_crc(g_4, "g_4", print_hash_value);
        1:  118:    transparent_crc(g_7, "g_7", print_hash_value);
        1:  119:    transparent_crc(g_10, "g_10", print_hash_value);
        1:  120:    transparent_crc(g_20, "g_20", print_hash_value);
        1:  121:    transparent_crc(g_22, "g_22", print_hash_value);
        1:  122:    transparent_crc(g_52, "g_52", print_hash_value);
        1:  123:    transparent_crc(g_54, "g_54", print_hash_value);
        1:  124:    transparent_crc(g_64, "g_64", print_hash_value);
        1:  125:    transparent_crc(g_71, "g_71", print_hash_value);
        1:  126:    transparent_crc(g_76, "g_76", print_hash_value);
        1:  127:    transparent_crc(g_83, "g_83", print_hash_value);
        1:  128:    platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
        1:  129:    return 0;
        -:  130:}
        -:  131:
        -:  132:/************************ statistics *************************
        -:  133:XXX max struct depth: 0
        -:  134:breakdown:
        -:  135:   depth: 0, occurrence: 26
        -:  136:XXX total union variables: 0
        -:  137:
        -:  138:XXX non-zero bitfields defined in structs: 0
        -:  139:XXX zero bitfields defined in structs: 0
        -:  140:XXX const bitfields defined in structs: 0
        -:  141:XXX volatile bitfields defined in structs: 0
        -:  142:XXX structs with bitfields in the program: 0
        -:  143:breakdown:
        -:  144:XXX full-bitfields structs in the program: 0
        -:  145:breakdown:
        -:  146:XXX times a bitfields struct's address is taken: 0
        -:  147:XXX times a bitfields struct on LHS: 0
        -:  148:XXX times a bitfields struct on RHS: 0
        -:  149:XXX times a single bitfield on LHS: 0
        -:  150:XXX times a single bitfield on RHS: 0
        -:  151:
        -:  152:XXX max expression depth: 19
        -:  153:breakdown:
        -:  154:   depth: 1, occurrence: 11
        -:  155:   depth: 2, occurrence: 2
        -:  156:   depth: 6, occurrence: 1
        -:  157:   depth: 9, occurrence: 1
        -:  158:   depth: 10, occurrence: 1
        -:  159:   depth: 11, occurrence: 2
        -:  160:   depth: 12, occurrence: 1
        -:  161:   depth: 14, occurrence: 2
        -:  162:   depth: 19, occurrence: 1
        -:  163:
        -:  164:XXX total number of pointers: 0
        -:  165:
        -:  166:XXX times a non-volatile is read: 67
        -:  167:XXX times a non-volatile is write: 23
        -:  168:XXX times a volatile is read: 6
        -:  169:XXX    times read thru a pointer: 0
        -:  170:XXX times a volatile is write: 0
        -:  171:XXX    times written thru a pointer: 0
        -:  172:XXX times a volatile is available for access: 34
        -:  173:XXX percentage of non-volatile access: 93.8
        -:  174:
        -:  175:XXX forward jumps: 0
        -:  176:XXX backward jumps: 0
        -:  177:
        -:  178:XXX stmts: 14
        -:  179:XXX max block depth: 3
        -:  180:breakdown:
        -:  181:   depth: 0, occurrence: 5
        -:  182:   depth: 1, occurrence: 5
        -:  183:   depth: 2, occurrence: 3
        -:  184:   depth: 3, occurrence: 1
        -:  185:
        -:  186:XXX percentage a fresh-made variable is used: 28.3
        -:  187:XXX percentage an existing variable is used: 71.7
        -:  188:********************* end of statistics **********************/
        -:  189:
