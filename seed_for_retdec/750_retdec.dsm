;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:20:51
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 30 d1 ff ff               	lea eax, [ebx - 0x2ed0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 d0 d0 ff ff               	lea eax, [ebx - 0x2f30]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 5b ad 04 08               	mov eax, 0x804ad5b
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 5c e0 04 08                  	mov eax, 0x804e05c
0x80483a5:   3d 5c e0 04 08                  	cmp eax, 0x804e05c
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 5c e0 04 08                  	push 0x804e05c
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 5c e0 04 08                  	mov eax, 0x804e05c
0x80483e5:   2d 5c e0 04 08                  	sub eax, 0x804e05c
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 5c e0 04 08                  	push 0x804e05c
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 60 e0 04 08 00            	cmp byte ptr [0x804e060], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 60 e0 04 08 01            	mov byte ptr [0x804e060], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 65 2c 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 51 2c 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 50 d1 ff ff               	lea edx, [eax - 0x2eb0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 24 2c 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 06 2c 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 de 2b 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 b4 2b 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 8b 2b 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 48 2b 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 06 2b 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 ae 2a 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 5d 2a 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 20 2a 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 e9 29 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 ca 29 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 a0 29 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 74 29 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 49 29 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 00 29 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 b8 28 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 5e 28 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 0b 28 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 cc 27 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 96 27 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 74 27 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 26 27 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 ea 26 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 61 26 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 2f 26 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 ff 25 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 ba 25 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 7b 25 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 49 25 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 1a 25 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 fc 24 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 d4 24 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 af 24 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 8a 24 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 53 24 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 1e 24 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 cc 23 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 81 23 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 4a 23 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 19 23 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 fa 22 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 d0 22 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 a8 22 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 7f 22 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 43 22 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 08 22 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 b5 21 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 69 21 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 31 21 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 02 21 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 ee 20 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 d7 20 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 c2 20 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 ac 20 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 85 20 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 60 20 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 21 20 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 e8 1f 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 bc 1f 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 96 1f 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 34 d2 ff ff               	fld dword ptr [eax - 0x2dcc]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 34 d2 ff ff               	fld dword ptr [eax - 0x2dcc]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 38 d2 ff ff               	fld dword ptr [eax - 0x2dc8]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 54 1f 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 34 d2 ff ff               	fld dword ptr [eax - 0x2dcc]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 34 d2 ff ff               	fld dword ptr [eax - 0x2dcc]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 38 d2 ff ff               	fld dword ptr [eax - 0x2dc8]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 12 1f 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 3c d2 ff ff               	fld dword ptr [eax - 0x2dc4]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 40 d2 ff ff               	fld dword ptr [eax - 0x2dc0]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 44 d2 ff ff               	fld dword ptr [eax - 0x2dbc]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 d0 1e 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 48 d2 ff ff               	fld dword ptr [eax - 0x2db8]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 4c d2 ff ff               	fld dword ptr [eax - 0x2db4]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 50 d2 ff ff               	fld dword ptr [eax - 0x2db0]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 58 1e 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 58 d2 ff ff               	fld qword ptr [eax - 0x2da8]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 58 d2 ff ff               	fld qword ptr [eax - 0x2da8]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 60 d2 ff ff               	fld qword ptr [eax - 0x2da0]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 fb 1d 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 58 d2 ff ff               	fld qword ptr [eax - 0x2da8]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 58 d2 ff ff               	fld qword ptr [eax - 0x2da8]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 60 d2 ff ff               	fld qword ptr [eax - 0x2da0]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 9e 1d 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 68 d2 ff ff               	fld qword ptr [eax - 0x2d98]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 70 d2 ff ff               	fld qword ptr [eax - 0x2d90]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 78 d2 ff ff               	fld qword ptr [eax - 0x2d88]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 41 1d 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 80 d2 ff ff               	fld qword ptr [eax - 0x2d80]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 88 d2 ff ff               	fld qword ptr [eax - 0x2d78]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 90 d2 ff ff               	fld qword ptr [eax - 0x2d70]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 b1 1c 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 98 d2 ff ff               	fld dword ptr [eax - 0x2d68]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 9c d2 ff ff               	fld dword ptr [eax - 0x2d64]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 4d 1c 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 80 00 00 00            	mov dword ptr [eax + edx*4 + 0x80], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 dc 1b 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 80 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0x80]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 99 1b 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 60 d1 ff ff               	lea eax, [ebx - 0x2ea0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 84 d1 ff ff               	lea eax, [ebx - 0x2e7c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80497db
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 60                        	sub esp, 0x60
0x804962f:   e8 93 1a 00 00                  	call 0x804b0c7 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 49 00 00               	add edx, 0x49cc
0x804963a:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x804963d:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049640:   8b 4d 1c                        	mov ecx, dword ptr [ebp + 0x1c]
0x8049643:   8b 5d 30                        	mov ebx, dword ptr [ebp + 0x30]
0x8049646:   8b 75 34                        	mov esi, dword ptr [ebp + 0x34]
0x8049649:   8b 7d 38                        	mov edi, dword ptr [ebp + 0x38]
0x804964c:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x804964f:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049652:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x8049655:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049658:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x804965b:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804965e:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x8049661:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049664:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049667:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804966a:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x804966d:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049670:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x8049673:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049676:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x8049679:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804967c:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x804967f:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049682:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x8049686:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x804968a:   89 c8                           	mov eax, ecx
0x804968c:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x8049690:   89 d8                           	mov eax, ebx
0x8049692:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x8049696:   89 f0                           	mov eax, esi
0x8049698:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x804969b:   89 f8                           	mov eax, edi
0x804969d:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x80496a1:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x80496a5:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496a8:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x80496ac:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x80496af:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x80496b3:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496b7:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80496bb:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496be:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x80496c2:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496c5:   0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x80496c9:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496cc:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x80496d0:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496d4:   0f b6 45 98                     	movzx eax, byte ptr [ebp - 0x68]
0x80496d8:   88 45 c0                        	mov byte ptr [ebp - 0x40], al
0x80496db:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x80496df:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x80496e2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80496e5:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x80496eb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80496ee:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x80496f4:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x80496f7:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x80496fd:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x8049700:   89 82 84 04 00 00               	mov dword ptr [edx + 0x484], eax
0x8049706:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804970a:   66 89 82 30 00 00 00            	mov word ptr [edx + 0x30], ax
0x8049711:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x8049715:   66 89 82 88 04 00 00            	mov word ptr [edx + 0x488], ax
0x804971c:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x804971f:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x8049725:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x8049728:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x804972e:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x8049731:   89 82 8c 04 00 00               	mov dword ptr [edx + 0x48c], eax
0x8049737:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x804973a:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x8049740:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049744:   66 89 82 40 00 00 00            	mov word ptr [edx + 0x40], ax
0x804974b:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x804974f:   88 82 42 00 00 00               	mov byte ptr [edx + 0x42], al
0x8049755:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x8049759:   66 89 82 44 00 00 00            	mov word ptr [edx + 0x44], ax
0x8049760:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x8049764:   88 82 46 00 00 00               	mov byte ptr [edx + 0x46], al
0x804976a:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x804976e:   88 82 47 00 00 00               	mov byte ptr [edx + 0x47], al
0x8049774:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x8049778:   66 89 82 48 00 00 00            	mov word ptr [edx + 0x48], ax
0x804977f:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049782:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x8049788:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x804978c:   88 82 50 00 00 00               	mov byte ptr [edx + 0x50], al
0x8049792:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x8049796:   88 82 51 00 00 00               	mov byte ptr [edx + 0x51], al
0x804979c:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497a0:   88 82 52 00 00 00               	mov byte ptr [edx + 0x52], al
0x80497a6:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x80497a9:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x80497af:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80497b3:   66 89 82 58 00 00 00            	mov word ptr [edx + 0x58], ax
0x80497ba:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x80497be:   88 82 5a 00 00 00               	mov byte ptr [edx + 0x5a], al
0x80497c4:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x80497c8:   88 82 5b 00 00 00               	mov byte ptr [edx + 0x5b], al
0x80497ce:   b8 00 00 00 00                  	mov eax, 0
0x80497d3:   83 c4 60                        	add esp, 0x60
0x80497d6:   5b                              	pop ebx
0x80497d7:   5e                              	pop esi
0x80497d8:   5f                              	pop edi
0x80497d9:   5d                              	pop ebp
0x80497da:   c3                              	ret 
; function: func_1 at 0x80497db -- 0x804ad5b
0x80497db:   55                              	push ebp
0x80497dc:   89 e5                           	mov ebp, esp
0x80497de:   57                              	push edi
0x80497df:   56                              	push esi
0x80497e0:   53                              	push ebx
0x80497e1:   81 ec 80 01 00 00               	sub esp, 0x180
0x80497e7:   e8 d7 18 00 00                  	call 0x804b0c3 <__x86.get_pc_thunk.ax>
0x80497ec:   05 14 48 00 00                  	add eax, 0x4814
0x80497f1:   c7 45 f0 62 78 47 60            	mov dword ptr [ebp - 0x10], 0x60477862
0x80497f8:   c7 45 ec fb eb 6f b6            	mov dword ptr [ebp - 0x14], 0xb66febfb
0x80497ff:   c7 45 88 a6 fd 5c 6b            	mov dword ptr [ebp - 0x78], 0x6b5cfda6
0x8049806:   c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x804980d:   66 c7 45 e6 2f be               	mov word ptr [ebp - 0x1a], 0xbe2f
0x8049813:   66 c7 45 e4 00 00               	mov word ptr [ebp - 0x1c], 0
0x8049819:   c7 45 e0 c7 be 65 06            	mov dword ptr [ebp - 0x20], 0x665bec7
0x8049820:   c7 45 dc 77 2b f2 0f            	mov dword ptr [ebp - 0x24], 0xff22b77
0x8049827:   c7 45 d8 00 00 00 00            	mov dword ptr [ebp - 0x28], 0
0x804982e:   c7 45 d4 01 00 00 00            	mov dword ptr [ebp - 0x2c], 1
0x8049835:   66 c7 45 d2 ff ff               	mov word ptr [ebp - 0x2e], 0xffff
0x804983b:   c6 45 87 08                     	mov byte ptr [ebp - 0x79], 8
0x804983f:   66 c7 45 d0 68 b3               	mov word ptr [ebp - 0x30], 0xb368
0x8049845:   c6 45 cf 99                     	mov byte ptr [ebp - 0x31], 0x99
0x8049849:   c6 45 ce ff                     	mov byte ptr [ebp - 0x32], 0xff
0x804984d:   66 c7 45 cc 02 00               	mov word ptr [ebp - 0x34], 2
0x8049853:   c7 45 80 3a 7b 49 8d            	mov dword ptr [ebp - 0x80], 0x8d497b3a
0x804985a:   c6 45 cb b0                     	mov byte ptr [ebp - 0x35], 0xb0
0x804985e:   c6 45 ca 02                     	mov byte ptr [ebp - 0x36], 2
0x8049862:   c6 45 c9 01                     	mov byte ptr [ebp - 0x37], 1
0x8049866:   c7 85 7c ff ff ff 32 50 51 59   	mov dword ptr [ebp - 0x84], 0x59515032
0x8049870:   66 c7 45 c6 fc ff               	mov word ptr [ebp - 0x3a], 0xfffc
0x8049876:   c6 85 7b ff ff ff 33            	mov byte ptr [ebp - 0x85], 0x33
0x804987d:   c6 45 c5 ff                     	mov byte ptr [ebp - 0x3b], 0xff
0x8049881:   c7 45 c0 00 4c 92 9a            	mov dword ptr [ebp - 0x40], 0x9a924c00
0x8049888:   c7 85 74 ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0x8c], 0xfffffffb
0x8049892:   c7 85 70 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x90], 0
0x804989c:   c7 45 bc 01 00 00 00            	mov dword ptr [ebp - 0x44], 1
0x80498a3:   c7 85 6c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x94], 0
0x80498ad:   c6 85 6b ff ff ff 00            	mov byte ptr [ebp - 0x95], 0
0x80498b4:   c7 85 64 ff ff ff 36 ad 64 ec   	mov dword ptr [ebp - 0x9c], 0xec64ad36
0x80498be:   c6 85 63 ff ff ff fb            	mov byte ptr [ebp - 0x9d], 0xfb
0x80498c5:   c6 85 62 ff ff ff f8            	mov byte ptr [ebp - 0x9e], 0xf8
0x80498cc:   c7 85 5c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa4], 0
0x80498d6:   c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x80498dd:   e9 c4 05 00 00                  	jmp 0x8049ea6 <func_1+0x6cb>
0x80498e2:   c7 85 cc fe ff ff 03 00 00 00   	mov dword ptr [ebp - 0x134], 3
0x80498ec:   c7 45 b8 ba 39 3c 1c            	mov dword ptr [ebp - 0x48], 0x1c3c39ba
0x80498f3:   66 c7 45 b6 01 00               	mov word ptr [ebp - 0x4a], 1
0x80498f9:   c7 85 c8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x138], 0
0x8049903:   c7 45 b0 01 00 00 00            	mov dword ptr [ebp - 0x50], 1
0x804990a:   c7 85 c4 fe ff ff 14 e1 ce b8   	mov dword ptr [ebp - 0x13c], 0xb8cee114
0x8049914:   8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x804991a:   0f be d0                        	movsx edx, al
0x804991d:   8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x8049923:   f7 d0                           	not eax
0x8049925:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x8049928:   0f 95 c0                        	setne al
0x804992b:   0f b6 c0                        	movzx eax, al
0x804992e:   29 c2                           	sub edx, eax
0x8049930:   89 d0                           	mov eax, edx
0x8049932:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049935:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049939:   0f 84 d0 04 00 00               	je 0x8049e0f <func_1+0x634>
0x804993f:   c7 45 ac 06 00 00 00            	mov dword ptr [ebp - 0x54], 6
0x8049946:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x8049949:   66 c1 e8 04                     	shr ax, 4
0x804994d:   0f b7 c0                        	movzx eax, ax
0x8049950:   31 45 ac                        	xor dword ptr [ebp - 0x54], eax
0x8049953:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x8049957:   0f 84 8e 00 00 00               	je 0x80499eb <func_1+0x210>
0x804995d:   66 c7 85 c0 fe ff ff 00 00      	mov word ptr [ebp - 0x140], 0
0x8049966:   8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x804996c:   0c f0                           	or al, 0xf0
0x804996e:   21 45 ec                        	and dword ptr [ebp - 0x14], eax
0x8049971:   c7 45 b8 fb ff ff ff            	mov dword ptr [ebp - 0x48], 0xfffffffb
0x8049978:   c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0x804997f:   eb 5f                           	jmp 0x80499e0 <func_1+0x205>
0x8049981:   c7 85 bc fe ff ff 79 48 45 b6   	mov dword ptr [ebp - 0x144], 0xb6454879
0x804998b:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804998f:   74 13                           	je 0x80499a4 <func_1+0x1c9>
0x8049991:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049994:   66 89 85 c0 fe ff ff            	mov word ptr [ebp - 0x140], ax
0x804999b:   66 83 bd c0 fe ff ff 00         	cmp word ptr [ebp - 0x140], 0
0x80499a3:   90                              	nop 
0x80499a4:   c7 45 e8 01 00 00 00            	mov dword ptr [ebp - 0x18], 1
0x80499ab:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x80499ae:   3b 45 f0                        	cmp eax, dword ptr [ebp - 0x10]
0x80499b1:   83 7d e8 06                     	cmp dword ptr [ebp - 0x18], 6
0x80499b5:   0f 94 c0                        	sete al
0x80499b8:   0f b6 c0                        	movzx eax, al
0x80499bb:   89 85 bc fe ff ff               	mov dword ptr [ebp - 0x144], eax
0x80499c1:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x80499c4:   0f b6 c0                        	movzx eax, al
0x80499c7:   c1 e0 07                        	shl eax, 7
0x80499ca:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x80499cd:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x80499d0:   89 c2                           	mov edx, eax
0x80499d2:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x80499d6:   09 d0                           	or eax, edx
0x80499d8:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x80499dc:   83 6d ac 01                     	sub dword ptr [ebp - 0x54], 1
0x80499e0:   83 7d ac e5                     	cmp dword ptr [ebp - 0x54], -0x1b
0x80499e4:   75 9b                           	jne 0x8049981 <func_1+0x1a6>
0x80499e6:   e9 94 00 00 00                  	jmp 0x8049a7f <func_1+0x2a4>
0x80499eb:   83 bd cc fe ff ff 00            	cmp dword ptr [ebp - 0x134], 0
0x80499f2:   75 09                           	jne 0x80499fd <func_1+0x222>
0x80499f4:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x80499f8:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x80499fb:   74 07                           	je 0x8049a04 <func_1+0x229>
0x80499fd:   b8 01 00 00 00                  	mov eax, 1
0x8049a02:   eb 05                           	jmp 0x8049a09 <func_1+0x22e>
0x8049a04:   b8 00 00 00 00                  	mov eax, 0
0x8049a09:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049a0c:   c7 45 e8 1b 5c 9a b4            	mov dword ptr [ebp - 0x18], 0xb49a5c1b
0x8049a13:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049a16:   0f b7 d0                        	movzx edx, ax
0x8049a19:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049a1d:   75 0c                           	jne 0x8049a2b <func_1+0x250>
0x8049a1f:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049a23:   75 06                           	jne 0x8049a2b <func_1+0x250>
0x8049a25:   83 7d c0 00                     	cmp dword ptr [ebp - 0x40], 0
0x8049a29:   74 07                           	je 0x8049a32 <func_1+0x257>
0x8049a2b:   b9 01 00 00 00                  	mov ecx, 1
0x8049a30:   eb 05                           	jmp 0x8049a37 <func_1+0x25c>
0x8049a32:   b9 00 00 00 00                  	mov ecx, 0
0x8049a37:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049a3b:   39 c1                           	cmp ecx, eax
0x8049a3d:   0f 9f c0                        	setg al
0x8049a40:   0f b6 c0                        	movzx eax, al
0x8049a43:   89 c1                           	mov ecx, eax
0x8049a45:   d3 fa                           	sar edx, cl
0x8049a47:   89 d0                           	mov eax, edx
0x8049a49:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049a4c:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049a4f:   89 c2                           	mov edx, eax
0x8049a51:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049a54:   89 c1                           	mov ecx, eax
0x8049a56:   89 d0                           	mov eax, edx
0x8049a58:   ba 00 00 00 00                  	mov edx, 0
0x8049a5d:   66 f7 f1                        	div cx
0x8049a60:   0f b7 c0                        	movzx eax, ax
0x8049a63:   25 32 01 d0 e6                  	and eax, 0xe6d00132
0x8049a68:   0d 0c 40 2f 19                  	or eax, 0x192f400c
0x8049a6d:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x8049a73:   c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x8049a7a:   66 83 65 b6 01                  	and word ptr [ebp - 0x4a], 1
0x8049a7f:   c7 85 74 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x8c], 0xffffffff
0x8049a89:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x8049a8f:   21 45 e8                        	and dword ptr [ebp - 0x18], eax
0x8049a92:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049a95:   0f b7 c0                        	movzx eax, ax
0x8049a98:   f7 d8                           	neg eax
0x8049a9a:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049a9d:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049aa0:   0f b7 c0                        	movzx eax, ax
0x8049aa3:   8b 55 ac                        	mov edx, dword ptr [ebp - 0x54]
0x8049aa6:   0f b7 da                        	movzx ebx, dx
0x8049aa9:   99                              	cdq 
0x8049aaa:   f7 fb                           	idiv ebx
0x8049aac:   85 c0                           	test eax, eax
0x8049aae:   0f 84 19 03 00 00               	je 0x8049dcd <func_1+0x5f2>
0x8049ab4:   66 c7 45 aa ba 90               	mov word ptr [ebp - 0x56], 0x90ba
0x8049aba:   66 c7 85 b8 fe ff ff 00 00      	mov word ptr [ebp - 0x148], 0
0x8049ac3:   c7 85 b4 fe ff ff be f3 d2 7b   	mov dword ptr [ebp - 0x14c], 0x7bd2f3be
0x8049acd:   c7 85 b0 fe ff ff cb 2e 70 92   	mov dword ptr [ebp - 0x150], 0x92702ecb
0x8049ad7:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x8049ade:   e9 87 01 00 00                  	jmp 0x8049c6a <func_1+0x48f>
0x8049ae3:   66 c7 85 ac fe ff ff 74 4b      	mov word ptr [ebp - 0x154], 0x4b74
0x8049aec:   c7 85 a8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x158], 0
0x8049af6:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049afa:   0f 84 d2 00 00 00               	je 0x8049bd2 <func_1+0x3f7>
0x8049b00:   66 c7 85 a2 fe ff ff 12 8b      	mov word ptr [ebp - 0x15e], 0x8b12
0x8049b09:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049b0d:   83 c0 01                        	add eax, 1
0x8049b10:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x8049b14:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049b17:   89 c2                           	mov edx, eax
0x8049b19:   0f b7 85 a2 fe ff ff            	movzx eax, word ptr [ebp - 0x15e]
0x8049b20:   21 d0                           	and eax, edx
0x8049b22:   66 89 85 a2 fe ff ff            	mov word ptr [ebp - 0x15e], ax
0x8049b29:   0f b7 85 a2 fe ff ff            	movzx eax, word ptr [ebp - 0x15e]
0x8049b30:   8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x8049b33:   89 d1                           	mov ecx, edx
0x8049b35:   0f b7 95 ac fe ff ff            	movzx edx, word ptr [ebp - 0x154]
0x8049b3c:   09 ca                           	or edx, ecx
0x8049b3e:   0f b7 ca                        	movzx ecx, dx
0x8049b41:   8b 55 c0                        	mov edx, dword ptr [ebp - 0x40]
0x8049b44:   0f b7 d2                        	movzx edx, dx
0x8049b47:   29 d1                           	sub ecx, edx
0x8049b49:   89 ca                           	mov edx, ecx
0x8049b4b:   39 d0                           	cmp eax, edx
0x8049b4d:   0f 9f c0                        	setg al
0x8049b50:   0f b6 c0                        	movzx eax, al
0x8049b53:   21 85 a8 fe ff ff               	and dword ptr [ebp - 0x158], eax
0x8049b59:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049b5c:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049b5f:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049b62:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049b65:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049b68:   66 85 c0                        	test ax, ax
0x8049b6b:   75 06                           	jne 0x8049b73 <func_1+0x398>
0x8049b6d:   83 7d 88 00                     	cmp dword ptr [ebp - 0x78], 0
0x8049b71:   74 07                           	je 0x8049b7a <func_1+0x39f>
0x8049b73:   b8 01 00 00 00                  	mov eax, 1
0x8049b78:   eb 05                           	jmp 0x8049b7f <func_1+0x3a4>
0x8049b7a:   b8 00 00 00 00                  	mov eax, 0
0x8049b7f:   0f b7 8d a2 fe ff ff            	movzx ecx, word ptr [ebp - 0x15e]
0x8049b86:   ba 00 00 00 00                  	mov edx, 0
0x8049b8b:   f7 f1                           	div ecx
0x8049b8d:   89 d0                           	mov eax, edx
0x8049b8f:   3d a4 ee 5f 62                  	cmp eax, 0x625feea4
0x8049b94:   66 83 6d e6 01                  	sub word ptr [ebp - 0x1a], 1
0x8049b99:   81 7d b8 d8 0c 00 00            	cmp dword ptr [ebp - 0x48], 0xcd8
0x8049ba0:   0f 9e c0                        	setle al
0x8049ba3:   0f b6 c0                        	movzx eax, al
0x8049ba6:   31 85 a8 fe ff ff               	xor dword ptr [ebp - 0x158], eax
0x8049bac:   8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x8049bb2:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049bb5:   0f b7 85 a2 fe ff ff            	movzx eax, word ptr [ebp - 0x15e]
0x8049bbc:   0f b6 c0                        	movzx eax, al
0x8049bbf:   f7 d8                           	neg eax
0x8049bc1:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049bc4:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049bc7:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x8049bcd:   e9 94 00 00 00                  	jmp 0x8049c66 <func_1+0x48b>
0x8049bd2:   c7 85 a4 fe ff ff fd ff ff ff   	mov dword ptr [ebp - 0x15c], 0xfffffffd
0x8049bdc:   0f b7 85 ac fe ff ff            	movzx eax, word ptr [ebp - 0x154]
0x8049be3:   0f bf d0                        	movsx edx, ax
0x8049be6:   8b 85 a4 fe ff ff               	mov eax, dword ptr [ebp - 0x15c]
0x8049bec:   98                              	cwde 
0x8049bed:   29 c2                           	sub edx, eax
0x8049bef:   89 d0                           	mov eax, edx
0x8049bf1:   83 f8 01                        	cmp eax, 1
0x8049bf4:   0f 94 c0                        	sete al
0x8049bf7:   0f b6 c0                        	movzx eax, al
0x8049bfa:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x8049bfd:   74 10                           	je 0x8049c0f <func_1+0x434>
0x8049bff:   83 bd c8 fe ff ff 00            	cmp dword ptr [ebp - 0x138], 0
0x8049c06:   74 07                           	je 0x8049c0f <func_1+0x434>
0x8049c08:   b8 01 00 00 00                  	mov eax, 1
0x8049c0d:   eb 05                           	jmp 0x8049c14 <func_1+0x439>
0x8049c0f:   b8 00 00 00 00                  	mov eax, 0
0x8049c14:   0f b7 d0                        	movzx edx, ax
0x8049c17:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049c1a:   0f b7 c0                        	movzx eax, ax
0x8049c1d:   89 c1                           	mov ecx, eax
0x8049c1f:   d3 fa                           	sar edx, cl
0x8049c21:   89 d0                           	mov eax, edx
0x8049c23:   3d d3 d0 25 e8                  	cmp eax, 0xe825d0d3
0x8049c28:   74 06                           	je 0x8049c30 <func_1+0x455>
0x8049c2a:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x8049c2e:   74 07                           	je 0x8049c37 <func_1+0x45c>
0x8049c30:   b8 01 00 00 00                  	mov eax, 1
0x8049c35:   eb 05                           	jmp 0x8049c3c <func_1+0x461>
0x8049c37:   b8 00 00 00 00                  	mov eax, 0
0x8049c3c:   89 c2                           	mov edx, eax
0x8049c3e:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049c41:   89 c1                           	mov ecx, eax
0x8049c43:   89 d0                           	mov eax, edx
0x8049c45:   ba 00 00 00 00                  	mov edx, 0
0x8049c4a:   66 f7 f1                        	div cx
0x8049c4d:   0f b7 d0                        	movzx edx, ax
0x8049c50:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049c53:   0f b7 c0                        	movzx eax, ax
0x8049c56:   89 c1                           	mov ecx, eax
0x8049c58:   d3 fa                           	sar edx, cl
0x8049c5a:   89 d0                           	mov eax, edx
0x8049c5c:   66 31 45 aa                     	xor word ptr [ebp - 0x56], ax
0x8049c60:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049c63:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049c66:   83 6d b8 01                     	sub dword ptr [ebp - 0x48], 1
0x8049c6a:   83 7d b8 f4                     	cmp dword ptr [ebp - 0x48], -0xc
0x8049c6e:   0f 84 6f fe ff ff               	je 0x8049ae3 <func_1+0x308>
0x8049c74:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049c78:   83 c0 01                        	add eax, 1
0x8049c7b:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x8049c7f:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049c83:   0f be c0                        	movsx eax, al
0x8049c86:   c1 e0 07                        	shl eax, 7
0x8049c89:   85 c0                           	test eax, eax
0x8049c8b:   74 3f                           	je 0x8049ccc <func_1+0x4f1>
0x8049c8d:   0f b7 85 b8 fe ff ff            	movzx eax, word ptr [ebp - 0x148]
0x8049c94:   09 85 b4 fe ff ff               	or dword ptr [ebp - 0x14c], eax
0x8049c9a:   83 bd b4 fe ff ff 00            	cmp dword ptr [ebp - 0x14c], 0
0x8049ca1:   75 04                           	jne 0x8049ca7 <func_1+0x4cc>
0x8049ca3:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049ca7:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049caa:   0f bf d0                        	movsx edx, ax
0x8049cad:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049cb1:   98                              	cwde 
0x8049cb2:   89 c1                           	mov ecx, eax
0x8049cb4:   d3 fa                           	sar edx, cl
0x8049cb6:   89 d0                           	mov eax, edx
0x8049cb8:   89 85 b0 fe ff ff               	mov dword ptr [ebp - 0x150], eax
0x8049cbe:   8b 85 b0 fe ff ff               	mov eax, dword ptr [ebp - 0x150]
0x8049cc4:   0f b7 c0                        	movzx eax, ax
0x8049cc7:   c1 e0 0f                        	shl eax, 0xf
0x8049cca:   85 c0                           	test eax, eax
0x8049ccc:   83 7d ac ff                     	cmp dword ptr [ebp - 0x54], -1
0x8049cd0:   0f 9c c0                        	setl al
0x8049cd3:   0f b6 c0                        	movzx eax, al
0x8049cd6:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049cd9:   c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x8049ce0:   83 7d e8 e8                     	cmp dword ptr [ebp - 0x18], -0x18
0x8049ce4:   0f 8c 3c 01 00 00               	jl 0x8049e26 <func_1+0x64b>
0x8049cea:   66 c7 85 ae fe ff ff d6 fd      	mov word ptr [ebp - 0x152], 0xfdd6
0x8049cf3:   83 45 dc 01                     	add dword ptr [ebp - 0x24], 1
0x8049cf7:   0f b6 45 c5                     	movzx eax, byte ptr [ebp - 0x3b]
0x8049cfb:   0f b6 95 7b ff ff ff            	movzx edx, byte ptr [ebp - 0x85]
0x8049d02:   0f b7 5d c6                     	movzx ebx, word ptr [ebp - 0x3a]
0x8049d06:   0f b6 75 c9                     	movzx esi, byte ptr [ebp - 0x37]
0x8049d0a:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x8049d10:   0f b6 7d ca                     	movzx edi, byte ptr [ebp - 0x36]
0x8049d14:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x8049d1a:   0f be 4d cb                     	movsx ecx, byte ptr [ebp - 0x35]
0x8049d1e:   89 8d 88 fe ff ff               	mov dword ptr [ebp - 0x178], ecx
0x8049d24:   0f b7 75 cc                     	movzx esi, word ptr [ebp - 0x34]
0x8049d28:   89 b5 84 fe ff ff               	mov dword ptr [ebp - 0x17c], esi
0x8049d2e:   0f b6 7d ce                     	movzx edi, byte ptr [ebp - 0x32]
0x8049d32:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x8049d38:   0f be 4d cf                     	movsx ecx, byte ptr [ebp - 0x31]
0x8049d3c:   89 8d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ecx
0x8049d42:   0f b7 75 d0                     	movzx esi, word ptr [ebp - 0x30]
0x8049d46:   89 b5 78 fe ff ff               	mov dword ptr [ebp - 0x188], esi
0x8049d4c:   0f be 7d 87                     	movsx edi, byte ptr [ebp - 0x79]
0x8049d50:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x8049d56:   0f bf 7d d2                     	movsx edi, word ptr [ebp - 0x2e]
0x8049d5a:   0f b7 75 e4                     	movzx esi, word ptr [ebp - 0x1c]
0x8049d5e:   0f b7 4d e6                     	movzx ecx, word ptr [ebp - 0x1a]
0x8049d62:   50                              	push eax
0x8049d63:   52                              	push edx
0x8049d64:   53                              	push ebx
0x8049d65:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049d6b:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x8049d71:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x8049d77:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x8049d7d:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049d80:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x8049d86:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x8049d8c:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x8049d92:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x8049d98:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x8049d9e:   57                              	push edi
0x8049d9f:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049da2:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049da5:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049da8:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049dab:   56                              	push esi
0x8049dac:   51                              	push ecx
0x8049dad:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049db0:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049db3:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049db6:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049db9:   e8 68 f8 ff ff                  	call 0x8049626 <set_var>
0x8049dbe:   83 c4 60                        	add esp, 0x60
0x8049dc1:   0f b7 85 ae fe ff ff            	movzx eax, word ptr [ebp - 0x152]
0x8049dc8:   e9 86 0f 00 00                  	jmp 0x804ad53 <func_1+0x1578>
0x8049dcd:   66 c7 85 ba fe ff ff fd ff      	mov word ptr [ebp - 0x146], 0xfffd
0x8049dd6:   66 83 bd ba fe ff ff 00         	cmp word ptr [ebp - 0x146], 0
0x8049dde:   75 22                           	jne 0x8049e02 <func_1+0x627>
0x8049de0:   0f bf 85 ba fe ff ff            	movsx eax, word ptr [ebp - 0x146]
0x8049de7:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049dea:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049dee:   74 12                           	je 0x8049e02 <func_1+0x627>
0x8049df0:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049df3:   98                              	cwde 
0x8049df4:   c1 e0 0a                        	shl eax, 0xa
0x8049df7:   85 c0                           	test eax, eax
0x8049df9:   74 07                           	je 0x8049e02 <func_1+0x627>
0x8049dfb:   b8 01 00 00 00                  	mov eax, 1
0x8049e00:   eb 05                           	jmp 0x8049e07 <func_1+0x62c>
0x8049e02:   b8 00 00 00 00                  	mov eax, 0
0x8049e07:   98                              	cwde 
0x8049e08:   f7 d8                           	neg eax
0x8049e0a:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049e0d:   eb 17                           	jmp 0x8049e26 <func_1+0x64b>
0x8049e0f:   c6 85 c3 fe ff ff d5            	mov byte ptr [ebp - 0x13d], 0xd5
0x8049e16:   81 65 e0 d8 cb 86 49            	and dword ptr [ebp - 0x20], 0x4986cbd8
0x8049e1d:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049e20:   20 85 c3 fe ff ff               	and byte ptr [ebp - 0x13d], al
0x8049e26:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x8049e2c:   31 45 dc                        	xor dword ptr [ebp - 0x24], eax
0x8049e2f:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049e33:   74 1e                           	je 0x8049e53 <func_1+0x678>
0x8049e35:   b8 01 00 00 00                  	mov eax, 1
0x8049e3a:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x8049e3d:   0f 92 c0                        	setb al
0x8049e40:   0f b6 d0                        	movzx edx, al
0x8049e43:   0f bf 45 b6                     	movsx eax, word ptr [ebp - 0x4a]
0x8049e47:   31 d0                           	xor eax, edx
0x8049e49:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x8049e4c:   7e 05                           	jle 0x8049e53 <func_1+0x678>
0x8049e4e:   66 83 7d e6 00                  	cmp word ptr [ebp - 0x1a], 0
0x8049e53:   c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x8049e5a:   0f b7 5d e4                     	movzx ebx, word ptr [ebp - 0x1c]
0x8049e5e:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049e61:   66 25 b3 e2                     	and ax, 0xe2b3
0x8049e65:   0f bf d0                        	movsx edx, ax
0x8049e68:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x8049e6e:   98                              	cwde 
0x8049e6f:   89 c1                           	mov ecx, eax
0x8049e71:   d3 fa                           	sar edx, cl
0x8049e73:   89 d0                           	mov eax, edx
0x8049e75:   0b 45 b0                        	or eax, dword ptr [ebp - 0x50]
0x8049e78:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x8049e7e:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x8049e84:   ba 00 00 00 00                  	mov edx, 0
0x8049e89:   f7 75 dc                        	div dword ptr [ebp - 0x24]
0x8049e8c:   89 d0                           	mov eax, edx
0x8049e8e:   0f bf d0                        	movsx edx, ax
0x8049e91:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049e94:   98                              	cwde 
0x8049e95:   01 d0                           	add eax, edx
0x8049e97:   39 c3                           	cmp ebx, eax
0x8049e99:   0f 9c c0                        	setl al
0x8049e9c:   0f b6 c0                        	movzx eax, al
0x8049e9f:   09 45 bc                        	or dword ptr [ebp - 0x44], eax
0x8049ea2:   83 6d f0 08                     	sub dword ptr [ebp - 0x10], 8
0x8049ea6:   83 7d f0 e7                     	cmp dword ptr [ebp - 0x10], -0x19
0x8049eaa:   0f 84 32 fa ff ff               	je 0x80498e2 <func_1+0x107>
0x8049eb0:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x8049eb7:   0f 94 c0                        	sete al
0x8049eba:   0f b6 d0                        	movzx edx, al
0x8049ebd:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049ec1:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x8049ec4:   0f 9e c0                        	setle al
0x8049ec7:   0f b6 c0                        	movzx eax, al
0x8049eca:   39 c2                           	cmp edx, eax
0x8049ecc:   0f 9e c0                        	setle al
0x8049ecf:   0f b6 c0                        	movzx eax, al
0x8049ed2:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x8049ed8:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x8049edb:   84 c0                           	test al, al
0x8049edd:   0f 84 c0 03 00 00               	je 0x804a2a3 <func_1+0xac8>
0x8049ee3:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x8049eea:   66 c7 85 f8 fe ff ff 58 9f      	mov word ptr [ebp - 0x108], 0x9f58
0x8049ef3:   c7 45 a0 78 be 7b 6f            	mov dword ptr [ebp - 0x60], 0x6f7bbe78
0x8049efa:   c7 85 f4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x10c], 0
0x8049f04:   c7 85 f0 fe ff ff 5e ae 08 bd   	mov dword ptr [ebp - 0x110], 0xbd08ae5e
0x8049f0e:   66 c7 85 ee fe ff ff ff ff      	mov word ptr [ebp - 0x112], 0xffff
0x8049f17:   c6 85 ed fe ff ff 1e            	mov byte ptr [ebp - 0x113], 0x1e
0x8049f1e:   66 c7 85 ea fe ff ff 00 00      	mov word ptr [ebp - 0x116], 0
0x8049f27:   c7 45 e8 f2 ff ff ff            	mov dword ptr [ebp - 0x18], 0xfffffff2
0x8049f2e:   eb 65                           	jmp 0x8049f95 <func_1+0x7ba>
0x8049f30:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049f33:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049f36:   0f b7 95 f8 fe ff ff            	movzx edx, word ptr [ebp - 0x108]
0x8049f3d:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049f41:   89 c1                           	mov ecx, eax
0x8049f43:   b8 01 00 00 00                  	mov eax, 1
0x8049f48:   0f b6 c0                        	movzx eax, al
0x8049f4b:   f6 f1                           	div cl
0x8049f4d:   0f b6 c8                        	movzx ecx, al
0x8049f50:   89 d0                           	mov eax, edx
0x8049f52:   99                              	cdq 
0x8049f53:   f7 f9                           	idiv ecx
0x8049f55:   89 d0                           	mov eax, edx
0x8049f57:   89 c1                           	mov ecx, eax
0x8049f59:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049f5c:   89 c2                           	mov edx, eax
0x8049f5e:   0f b6 c1                        	movzx eax, cl
0x8049f61:   f6 f2                           	div dl
0x8049f63:   0f b6 c4                        	movzx eax, ah
0x8049f66:   0f b6 d0                        	movzx edx, al
0x8049f69:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x8049f6f:   0f b6 c0                        	movzx eax, al
0x8049f72:   0f af c2                        	imul eax, edx
0x8049f75:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049f78:   0f 9d c0                        	setge al
0x8049f7b:   0f b6 c0                        	movzx eax, al
0x8049f7e:   0f b7 55 e6                     	movzx edx, word ptr [ebp - 0x1a]
0x8049f82:   0f bf ca                        	movsx ecx, dx
0x8049f85:   99                              	cdq 
0x8049f86:   f7 f9                           	idiv ecx
0x8049f88:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049f8b:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049f8e:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049f91:   83 45 e8 01                     	add dword ptr [ebp - 0x18], 1
0x8049f95:   83 7d e8 05                     	cmp dword ptr [ebp - 0x18], 5
0x8049f99:   74 95                           	je 0x8049f30 <func_1+0x755>
0x8049f9b:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x8049fa2:   e9 66 02 00 00                  	jmp 0x804a20d <func_1+0xa32>
0x8049fa7:   66 c7 45 9e 43 c0               	mov word ptr [ebp - 0x62], 0xc043
0x8049fad:   c7 45 98 ff ff ff ff            	mov dword ptr [ebp - 0x68], 0xffffffff
0x8049fb4:   c7 45 c0 ed ff ff ff            	mov dword ptr [ebp - 0x40], 0xffffffed
0x8049fbb:   e9 3f 02 00 00                  	jmp 0x804a1ff <func_1+0xa24>
0x8049fc0:   66 c7 85 e8 fe ff ff 87 23      	mov word ptr [ebp - 0x118], 0x2387
0x8049fc9:   66 c7 85 e6 fe ff ff ba 28      	mov word ptr [ebp - 0x11a], 0x28ba
0x8049fd2:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049fd5:   89 c2                           	mov edx, eax
0x8049fd7:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049fda:   21 d0                           	and eax, edx
0x8049fdc:   66 25 e6 ea                     	and ax, 0xeae6
0x8049fe0:   0f bf d0                        	movsx edx, ax
0x8049fe3:   81 7d f0 b4 d8 00 00            	cmp dword ptr [ebp - 0x10], 0xd8b4
0x8049fea:   0f 9e c0                        	setle al
0x8049fed:   0f b6 c0                        	movzx eax, al
0x8049ff0:   89 c1                           	mov ecx, eax
0x8049ff2:   d3 fa                           	sar edx, cl
0x8049ff4:   89 d0                           	mov eax, edx
0x8049ff6:   0f b7 d0                        	movzx edx, ax
0x8049ff9:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049ffc:   0f b7 c0                        	movzx eax, ax
0x8049fff:   0f af c2                        	imul eax, edx
0x804a002:   85 c0                           	test eax, eax
0x804a004:   0f 84 26 01 00 00               	je 0x804a130 <func_1+0x955>
0x804a00a:   c7 85 e0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x120], 1
0x804a014:   c7 85 dc fe ff ff 57 12 be 66   	mov dword ptr [ebp - 0x124], 0x66be1257
0x804a01e:   c7 85 d8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x128], 0xffffffff
0x804a028:   66 c7 45 e4 00 00               	mov word ptr [ebp - 0x1c], 0
0x804a02e:   eb 13                           	jmp 0x804a043 <func_1+0x868>
0x804a030:   83 bd 70 ff ff ff 00            	cmp dword ptr [ebp - 0x90], 0
0x804a037:   74 05                           	je 0x804a03e <func_1+0x863>
0x804a039:   e9 98 f8 ff ff                  	jmp 0x80498d6 <func_1+0xfb>
0x804a03e:   66 83 45 e4 01                  	add word ptr [ebp - 0x1c], 1
0x804a043:   66 83 7d e4 0a                  	cmp word ptr [ebp - 0x1c], 0xa
0x804a048:   74 e6                           	je 0x804a030 <func_1+0x855>
0x804a04a:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x804a04e:   0f 85 a6 01 00 00               	jne 0x804a1fa <func_1+0xa1f>
0x804a054:   81 7d ec f7 13 00 00            	cmp dword ptr [ebp - 0x14], 0x13f7
0x804a05b:   76 23                           	jbe 0x804a080 <func_1+0x8a5>
0x804a05d:   66 83 8d e8 fe ff ff 71         	or word ptr [ebp - 0x118], 0x71
0x804a065:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a069:   74 07                           	je 0x804a072 <func_1+0x897>
0x804a06b:   b8 01 00 00 00                  	mov eax, 1
0x804a070:   eb 05                           	jmp 0x804a077 <func_1+0x89c>
0x804a072:   b8 00 00 00 00                  	mov eax, 0
0x804a077:   66 89 45 9e                     	mov word ptr [ebp - 0x62], ax
0x804a07b:   e9 7b 01 00 00                  	jmp 0x804a1fb <func_1+0xa20>
0x804a080:   c7 85 d4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x12c], 0
0x804a08a:   c7 85 d0 fe ff ff 8b 11 cf 1c   	mov dword ptr [ebp - 0x130], 0x1ccf118b
0x804a094:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x804a098:   89 85 f4 fe ff ff               	mov dword ptr [ebp - 0x10c], eax
0x804a09e:   83 65 98 f9                     	and dword ptr [ebp - 0x68], 0xfffffff9
0x804a0a2:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a0a5:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a0a8:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804a0ae:   89 85 f4 fe ff ff               	mov dword ptr [ebp - 0x10c], eax
0x804a0b4:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x804a0ba:   0b 85 d4 fe ff ff               	or eax, dword ptr [ebp - 0x12c]
0x804a0c0:   89 c2                           	mov edx, eax
0x804a0c2:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a0c8:   39 c2                           	cmp edx, eax
0x804a0ca:   0f 93 c0                        	setae al
0x804a0cd:   0f b6 c0                        	movzx eax, al
0x804a0d0:   21 45 d4                        	and dword ptr [ebp - 0x2c], eax
0x804a0d3:   c7 85 dc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x124], 0
0x804a0dd:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a0e0:   0f be c0                        	movsx eax, al
0x804a0e3:   ba 01 00 00 00                  	mov edx, 1
0x804a0e8:   89 c1                           	mov ecx, eax
0x804a0ea:   d3 e2                           	shl edx, cl
0x804a0ec:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a0f0:   39 c2                           	cmp edx, eax
0x804a0f2:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a0f6:   0f b7 c0                        	movzx eax, ax
0x804a0f9:   31 85 d8 fe ff ff               	xor dword ptr [ebp - 0x128], eax
0x804a0ff:   83 bd d8 fe ff ff 00            	cmp dword ptr [ebp - 0x128], 0
0x804a106:   74 0d                           	je 0x804a115 <func_1+0x93a>
0x804a108:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804a10c:   74 07                           	je 0x804a115 <func_1+0x93a>
0x804a10e:   b8 01 00 00 00                  	mov eax, 1
0x804a113:   eb 05                           	jmp 0x804a11a <func_1+0x93f>
0x804a115:   b8 00 00 00 00                  	mov eax, 0
0x804a11a:   99                              	cdq 
0x804a11b:   f7 7d 98                        	idiv dword ptr [ebp - 0x68]
0x804a11e:   09 85 d0 fe ff ff               	or dword ptr [ebp - 0x130], eax
0x804a124:   c7 45 f0 01 00 00 00            	mov dword ptr [ebp - 0x10], 1
0x804a12b:   e9 cb 00 00 00                  	jmp 0x804a1fb <func_1+0xa20>
0x804a130:   66 c7 85 e4 fe ff ff 01 00      	mov word ptr [ebp - 0x11c], 1
0x804a139:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a13c:   89 c2                           	mov edx, eax
0x804a13e:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a141:   89 c1                           	mov ecx, eax
0x804a143:   89 d0                           	mov eax, edx
0x804a145:   ba 00 00 00 00                  	mov edx, 0
0x804a14a:   66 f7 f1                        	div cx
0x804a14d:   66 83 f8 03                     	cmp ax, 3
0x804a151:   0f 94 c0                        	sete al
0x804a154:   0f b6 c0                        	movzx eax, al
0x804a157:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x804a15b:   0f b7 95 e4 fe ff ff            	movzx edx, word ptr [ebp - 0x11c]
0x804a162:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a165:   29 c2                           	sub edx, eax
0x804a167:   89 d0                           	mov eax, edx
0x804a169:   23 85 f0 fe ff ff               	and eax, dword ptr [ebp - 0x110]
0x804a16f:   85 c0                           	test eax, eax
0x804a171:   75 04                           	jne 0x804a177 <func_1+0x99c>
0x804a173:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x804a177:   83 7d 88 00                     	cmp dword ptr [ebp - 0x78], 0
0x804a17b:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a17e:   05 1b 13 55 59                  	add eax, 0x5955131b
0x804a183:   25 fa 02 d3 7a                  	and eax, 0x7ad302fa
0x804a188:   85 c0                           	test eax, eax
0x804a18a:   75 09                           	jne 0x804a195 <func_1+0x9ba>
0x804a18c:   83 bd f0 fe ff ff 00            	cmp dword ptr [ebp - 0x110], 0
0x804a193:   74 07                           	je 0x804a19c <func_1+0x9c1>
0x804a195:   b8 01 00 00 00                  	mov eax, 1
0x804a19a:   eb 05                           	jmp 0x804a1a1 <func_1+0x9c6>
0x804a19c:   b8 00 00 00 00                  	mov eax, 0
0x804a1a1:   3b 45 98                        	cmp eax, dword ptr [ebp - 0x68]
0x804a1a4:   0f b7 85 e6 fe ff ff            	movzx eax, word ptr [ebp - 0x11a]
0x804a1ab:   89 85 f4 fe ff ff               	mov dword ptr [ebp - 0x10c], eax
0x804a1b1:   0f b7 85 e4 fe ff ff            	movzx eax, word ptr [ebp - 0x11c]
0x804a1b8:   39 85 f4 fe ff ff               	cmp dword ptr [ebp - 0x10c], eax
0x804a1be:   0f 9d c0                        	setge al
0x804a1c1:   0f b6 d0                        	movzx edx, al
0x804a1c4:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a1ca:   0f b6 c0                        	movzx eax, al
0x804a1cd:   89 c1                           	mov ecx, eax
0x804a1cf:   d3 fa                           	sar edx, cl
0x804a1d1:   89 d0                           	mov eax, edx
0x804a1d3:   c0 f8 05                        	sar al, 5
0x804a1d6:   0f be c0                        	movsx eax, al
0x804a1d9:   99                              	cdq 
0x804a1da:   f7 7d e8                        	idiv dword ptr [ebp - 0x18]
0x804a1dd:   f7 d0                           	not eax
0x804a1df:   3d 93 e9 c3 c7                  	cmp eax, 0xc7c3e993
0x804a1e4:   0f 97 c0                        	seta al
0x804a1e7:   0f b6 c0                        	movzx eax, al
0x804a1ea:   0f b7 5d e6                     	movzx ebx, word ptr [ebp - 0x1a]
0x804a1ee:   ba 00 00 00 00                  	mov edx, 0
0x804a1f3:   f7 f3                           	div ebx
0x804a1f5:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a1f8:   eb 01                           	jmp 0x804a1fb <func_1+0xa20>
0x804a1fa:   90                              	nop 
0x804a1fb:   83 45 c0 01                     	add dword ptr [ebp - 0x40], 1
0x804a1ff:   83 7d c0 05                     	cmp dword ptr [ebp - 0x40], 5
0x804a203:   0f 87 b7 fd ff ff               	ja 0x8049fc0 <func_1+0x7e5>
0x804a209:   83 45 a0 07                     	add dword ptr [ebp - 0x60], 7
0x804a20d:   83 7d a0 07                     	cmp dword ptr [ebp - 0x60], 7
0x804a211:   0f 85 90 fd ff ff               	jne 0x8049fa7 <func_1+0x7cc>
0x804a217:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a21a:   0f be c0                        	movsx eax, al
0x804a21d:   f7 d8                           	neg eax
0x804a21f:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a222:   76 0a                           	jbe 0x804a22e <func_1+0xa53>
0x804a224:   66 83 bd ee fe ff ff 00         	cmp word ptr [ebp - 0x112], 0
0x804a22c:   74 07                           	je 0x804a235 <func_1+0xa5a>
0x804a22e:   b8 01 00 00 00                  	mov eax, 1
0x804a233:   eb 05                           	jmp 0x804a23a <func_1+0xa5f>
0x804a235:   b8 00 00 00 00                  	mov eax, 0
0x804a23a:   30 85 ed fe ff ff               	xor byte ptr [ebp - 0x113], al
0x804a240:   0f b6 85 ed fe ff ff            	movzx eax, byte ptr [ebp - 0x113]
0x804a247:   83 c8 01                        	or eax, 1
0x804a24a:   0f be d0                        	movsx edx, al
0x804a24d:   0f b7 85 ee fe ff ff            	movzx eax, word ptr [ebp - 0x112]
0x804a254:   39 c2                           	cmp edx, eax
0x804a256:   0f b7 85 f8 fe ff ff            	movzx eax, word ptr [ebp - 0x108]
0x804a25d:   33 45 ec                        	xor eax, dword ptr [ebp - 0x14]
0x804a260:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a263:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a266:   83 f0 07                        	xor eax, 7
0x804a269:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x804a26f:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a275:   0f bf d0                        	movsx edx, ax
0x804a278:   0f b7 85 ea fe ff ff            	movzx eax, word ptr [ebp - 0x116]
0x804a27f:   98                              	cwde 
0x804a280:   89 c1                           	mov ecx, eax
0x804a282:   d3 fa                           	sar edx, cl
0x804a284:   89 d0                           	mov eax, edx
0x804a286:   89 c1                           	mov ecx, eax
0x804a288:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a28b:   89 c2                           	mov edx, eax
0x804a28d:   0f b6 c1                        	movzx eax, cl
0x804a290:   f6 f2                           	div dl
0x804a292:   0f b6 c4                        	movzx eax, ah
0x804a295:   0f be c0                        	movsx eax, al
0x804a298:   c1 e0 07                        	shl eax, 7
0x804a29b:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a29e:   e9 e3 09 00 00                  	jmp 0x804ac86 <func_1+0x14ab>
0x804a2a3:   66 c7 85 5a ff ff ff 08 00      	mov word ptr [ebp - 0xa6], 8
0x804a2ac:   c7 45 94 b6 39 48 a8            	mov dword ptr [ebp - 0x6c], 0xa84839b6
0x804a2b3:   c7 85 54 ff ff ff 93 ba ad 75   	mov dword ptr [ebp - 0xac], 0x75adba93
0x804a2bd:   c7 85 50 ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0xb0], 6
0x804a2c7:   c7 85 4c ff ff ff 18 a9 81 0a   	mov dword ptr [ebp - 0xb4], 0xa81a918
0x804a2d1:   66 c7 85 4a ff ff ff d9 c6      	mov word ptr [ebp - 0xb6], 0xc6d9
0x804a2da:   c6 85 49 ff ff ff 7b            	mov byte ptr [ebp - 0xb7], 0x7b
0x804a2e1:   c6 85 48 ff ff ff d6            	mov byte ptr [ebp - 0xb8], 0xd6
0x804a2e8:   c7 85 44 ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0xbc], 8
0x804a2f2:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a2f5:   0f be d0                        	movsx edx, al
0x804a2f8:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a2fb:   0f be c0                        	movsx eax, al
0x804a2fe:   29 c2                           	sub edx, eax
0x804a300:   0f b7 85 5a ff ff ff            	movzx eax, word ptr [ebp - 0xa6]
0x804a307:   21 45 94                        	and dword ptr [ebp - 0x6c], eax
0x804a30a:   0f b7 85 5a ff ff ff            	movzx eax, word ptr [ebp - 0xa6]
0x804a311:   39 45 94                        	cmp dword ptr [ebp - 0x6c], eax
0x804a314:   0f 94 c0                        	sete al
0x804a317:   0f b6 c0                        	movzx eax, al
0x804a31a:   39 c2                           	cmp edx, eax
0x804a31c:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a322:   3d ff 00 00 00                  	cmp eax, 0xff
0x804a327:   0f 86 b4 00 00 00               	jbe 0x804a3e1 <func_1+0xc06>
0x804a32d:   c7 45 90 cf c1 e4 df            	mov dword ptr [ebp - 0x70], 0xdfe4c1cf
0x804a334:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a337:   66 21 45 d2                     	and word ptr [ebp - 0x2e], ax
0x804a33b:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a33e:   88 85 6b ff ff ff               	mov byte ptr [ebp - 0x95], al
0x804a344:   66 c7 45 e4 f6 ff               	mov word ptr [ebp - 0x1c], 0xfff6
0x804a34a:   e9 82 00 00 00                  	jmp 0x804a3d1 <func_1+0xbf6>
0x804a34f:   c7 85 fc fe ff ff 08 00 00 00   	mov dword ptr [ebp - 0x104], 8
0x804a359:   0f bf 45 d2                     	movsx eax, word ptr [ebp - 0x2e]
0x804a35d:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a360:   c7 45 ec e3 ff ff ff            	mov dword ptr [ebp - 0x14], 0xffffffe3
0x804a367:   eb 5a                           	jmp 0x804a3c3 <func_1+0xbe8>
0x804a369:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a36d:   75 5c                           	jne 0x804a3cb <func_1+0xbf0>
0x804a36f:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804a373:   83 c0 01                        	add eax, 1
0x804a376:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x804a37a:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x804a381:   eb 36                           	jmp 0x804a3b9 <func_1+0xbde>
0x804a383:   66 c7 85 fa fe ff ff f9 ff      	mov word ptr [ebp - 0x106], 0xfff9
0x804a38c:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a38f:   83 e0 6c                        	and eax, 0x6c
0x804a392:   88 45 cf                        	mov byte ptr [ebp - 0x31], al
0x804a395:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x804a399:   88 45 ce                        	mov byte ptr [ebp - 0x32], al
0x804a39c:   0f b6 45 ce                     	movzx eax, byte ptr [ebp - 0x32]
0x804a3a0:   89 85 fc fe ff ff               	mov dword ptr [ebp - 0x104], eax
0x804a3a6:   b8 00 00 00 00                  	mov eax, 0
0x804a3ab:   31 45 f0                        	xor dword ptr [ebp - 0x10], eax
0x804a3ae:   c7 45 f0 3e ff 4e 4c            	mov dword ptr [ebp - 0x10], 0x4c4eff3e
0x804a3b5:   83 45 90 01                     	add dword ptr [ebp - 0x70], 1
0x804a3b9:   83 7d 90 0b                     	cmp dword ptr [ebp - 0x70], 0xb
0x804a3bd:   7e c4                           	jle 0x804a383 <func_1+0xba8>
0x804a3bf:   83 45 ec 05                     	add dword ptr [ebp - 0x14], 5
0x804a3c3:   83 7d ec 35                     	cmp dword ptr [ebp - 0x14], 0x35
0x804a3c7:   76 a0                           	jbe 0x804a369 <func_1+0xb8e>
0x804a3c9:   eb 01                           	jmp 0x804a3cc <func_1+0xbf1>
0x804a3cb:   90                              	nop 
0x804a3cc:   66 83 45 e4 01                  	add word ptr [ebp - 0x1c], 1
0x804a3d1:   66 83 7d e4 0c                  	cmp word ptr [ebp - 0x1c], 0xc
0x804a3d6:   0f 86 73 ff ff ff               	jbe 0x804a34f <func_1+0xb74>
0x804a3dc:   e9 d6 00 00 00                  	jmp 0x804a4b7 <func_1+0xcdc>
0x804a3e1:   0f b6 45 c5                     	movzx eax, byte ptr [ebp - 0x3b]
0x804a3e5:   0f b6 95 7b ff ff ff            	movzx edx, byte ptr [ebp - 0x85]
0x804a3ec:   0f b7 5d c6                     	movzx ebx, word ptr [ebp - 0x3a]
0x804a3f0:   0f b6 75 c9                     	movzx esi, byte ptr [ebp - 0x37]
0x804a3f4:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x804a3fa:   0f b6 7d ca                     	movzx edi, byte ptr [ebp - 0x36]
0x804a3fe:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x804a404:   0f be 4d cb                     	movsx ecx, byte ptr [ebp - 0x35]
0x804a408:   89 8d 88 fe ff ff               	mov dword ptr [ebp - 0x178], ecx
0x804a40e:   0f b7 75 cc                     	movzx esi, word ptr [ebp - 0x34]
0x804a412:   89 b5 84 fe ff ff               	mov dword ptr [ebp - 0x17c], esi
0x804a418:   0f b6 7d ce                     	movzx edi, byte ptr [ebp - 0x32]
0x804a41c:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a422:   0f be 4d cf                     	movsx ecx, byte ptr [ebp - 0x31]
0x804a426:   89 8d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ecx
0x804a42c:   0f b7 75 d0                     	movzx esi, word ptr [ebp - 0x30]
0x804a430:   89 b5 78 fe ff ff               	mov dword ptr [ebp - 0x188], esi
0x804a436:   0f be 7d 87                     	movsx edi, byte ptr [ebp - 0x79]
0x804a43a:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x804a440:   0f bf 7d d2                     	movsx edi, word ptr [ebp - 0x2e]
0x804a444:   0f b7 75 e4                     	movzx esi, word ptr [ebp - 0x1c]
0x804a448:   0f b7 4d e6                     	movzx ecx, word ptr [ebp - 0x1a]
0x804a44c:   50                              	push eax
0x804a44d:   52                              	push edx
0x804a44e:   53                              	push ebx
0x804a44f:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a455:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a45b:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a461:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a467:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a46a:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a470:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a476:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a47c:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a482:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a488:   57                              	push edi
0x804a489:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a48c:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a48f:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a492:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a495:   56                              	push esi
0x804a496:   51                              	push ecx
0x804a497:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a49a:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a49d:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a4a0:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a4a3:   e8 7e f1 ff ff                  	call 0x8049626 <set_var>
0x804a4a8:   83 c4 60                        	add esp, 0x60
0x804a4ab:   0f b7 85 5a ff ff ff            	movzx eax, word ptr [ebp - 0xa6]
0x804a4b2:   e9 9c 08 00 00                  	jmp 0x804ad53 <func_1+0x1578>
0x804a4b7:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a4ba:   89 c2                           	mov edx, eax
0x804a4bc:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a4bf:   66 c1 f8 08                     	sar ax, 8
0x804a4c3:   89 c1                           	mov ecx, eax
0x804a4c5:   89 d0                           	mov eax, edx
0x804a4c7:   ba 00 00 00 00                  	mov edx, 0
0x804a4cc:   66 f7 f1                        	div cx
0x804a4cf:   89 d0                           	mov eax, edx
0x804a4d1:   0f b7 d0                        	movzx edx, ax
0x804a4d4:   81 7d 94 ec 00 00 00            	cmp dword ptr [ebp - 0x6c], 0xec
0x804a4db:   0f 9e c0                        	setle al
0x804a4de:   0f b6 c0                        	movzx eax, al
0x804a4e1:   39 c2                           	cmp edx, eax
0x804a4e3:   0f 9e c0                        	setle al
0x804a4e6:   0f b6 c0                        	movzx eax, al
0x804a4e9:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x804a4ef:   0f 8c b7 06 00 00               	jl 0x804abac <func_1+0x13d1>
0x804a4f5:   c7 85 3c ff ff ff f8 ff ff ff   	mov dword ptr [ebp - 0xc4], 0xfffffff8
0x804a4ff:   c7 85 38 ff ff ff f9 ff ff ff   	mov dword ptr [ebp - 0xc8], 0xfffffff9
0x804a509:   c7 85 34 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xcc], 9
0x804a513:   c6 85 33 ff ff ff 60            	mov byte ptr [ebp - 0xcd], 0x60
0x804a51a:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a51e:   74 0e                           	je 0x804a52e <func_1+0xd53>
0x804a520:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x804a526:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a529:   e9 3c 01 00 00                  	jmp 0x804a66a <func_1+0xe8f>
0x804a52e:   c7 85 2c ff ff ff 0a 2c 81 18   	mov dword ptr [ebp - 0xd4], 0x18812c0a
0x804a538:   c7 85 28 ff ff ff 02 bd d4 21   	mov dword ptr [ebp - 0xd8], 0x21d4bd02
0x804a542:   c7 85 24 ff ff ff fd ff ff ff   	mov dword ptr [ebp - 0xdc], 0xfffffffd
0x804a54c:   83 65 f0 f6                     	and dword ptr [ebp - 0x10], 0xfffffff6
0x804a550:   83 85 2c ff ff ff 01            	add dword ptr [ebp - 0xd4], 1
0x804a557:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a55b:   74 61                           	je 0x804a5be <func_1+0xde3>
0x804a55d:   b8 64 ce 83 f6                  	mov eax, 0xf683ce64
0x804a562:   ba 00 00 00 00                  	mov edx, 0
0x804a567:   f7 b5 2c ff ff ff               	div dword ptr [ebp - 0xd4]
0x804a56d:   89 c2                           	mov edx, eax
0x804a56f:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a572:   39 c2                           	cmp edx, eax
0x804a574:   0f 97 c0                        	seta al
0x804a577:   0f b6 c0                        	movzx eax, al
0x804a57a:   66 31 45 d2                     	xor word ptr [ebp - 0x2e], ax
0x804a57e:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a582:   0f bf d0                        	movsx edx, ax
0x804a585:   69 d2 67 28 00 00               	imul edx, edx, 0x2867
0x804a58b:   c1 ea 10                        	shr edx, 0x10
0x804a58e:   66 c1 fa 0b                     	sar dx, 0xb
0x804a592:   66 c1 f8 0f                     	sar ax, 0xf
0x804a596:   29 d0                           	sub eax, edx
0x804a598:   0f b7 d0                        	movzx edx, ax
0x804a59b:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x804a5a1:   0f b7 c0                        	movzx eax, ax
0x804a5a4:   89 c1                           	mov ecx, eax
0x804a5a6:   d3 e2                           	shl edx, cl
0x804a5a8:   89 d0                           	mov eax, edx
0x804a5aa:   85 c0                           	test eax, eax
0x804a5ac:   75 09                           	jne 0x804a5b7 <func_1+0xddc>
0x804a5ae:   83 bd 2c ff ff ff 00            	cmp dword ptr [ebp - 0xd4], 0
0x804a5b5:   74 07                           	je 0x804a5be <func_1+0xde3>
0x804a5b7:   b8 01 00 00 00                  	mov eax, 1
0x804a5bc:   eb 05                           	jmp 0x804a5c3 <func_1+0xde8>
0x804a5be:   b8 00 00 00 00                  	mov eax, 0
0x804a5c3:   0f be 5d cf                     	movsx ebx, byte ptr [ebp - 0x31]
0x804a5c7:   99                              	cdq 
0x804a5c8:   f7 fb                           	idiv ebx
0x804a5ca:   89 c2                           	mov edx, eax
0x804a5cc:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a5d0:   39 c2                           	cmp edx, eax
0x804a5d2:   0f 95 c0                        	setne al
0x804a5d5:   0f b6 c0                        	movzx eax, al
0x804a5d8:   f7 d0                           	not eax
0x804a5da:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a5dd:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a5e3:   f7 d0                           	not eax
0x804a5e5:   88 45 ce                        	mov byte ptr [ebp - 0x32], al
0x804a5e8:   0f b6 45 ce                     	movzx eax, byte ptr [ebp - 0x32]
0x804a5ec:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x804a5f0:   66 83 7d cc 00                  	cmp word ptr [ebp - 0x34], 0
0x804a5f5:   0f 94 c0                        	sete al
0x804a5f8:   0f b6 d0                        	movzx edx, al
0x804a5fb:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a5ff:   39 c2                           	cmp edx, eax
0x804a601:   74 0d                           	je 0x804a610 <func_1+0xe35>
0x804a603:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804a607:   74 07                           	je 0x804a610 <func_1+0xe35>
0x804a609:   b8 01 00 00 00                  	mov eax, 1
0x804a60e:   eb 05                           	jmp 0x804a615 <func_1+0xe3a>
0x804a610:   b8 00 00 00 00                  	mov eax, 0
0x804a615:   3c c0                           	cmp al, 0xc0
0x804a617:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a61d:   0d ff ff 00 00                  	or eax, 0xffff
0x804a622:   39 85 3c ff ff ff               	cmp dword ptr [ebp - 0xc4], eax
0x804a628:   0f 97 c0                        	seta al
0x804a62b:   0f b6 c0                        	movzx eax, al
0x804a62e:   31 45 e0                        	xor dword ptr [ebp - 0x20], eax
0x804a631:   81 7d 88 cc 00 00 00            	cmp dword ptr [ebp - 0x78], 0xcc
0x804a638:   0f 9f c0                        	setg al
0x804a63b:   88 45 cf                        	mov byte ptr [ebp - 0x31], al
0x804a63e:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a644:   0b 45 94                        	or eax, dword ptr [ebp - 0x6c]
0x804a647:   21 85 24 ff ff ff               	and dword ptr [ebp - 0xdc], eax
0x804a64d:   66 c7 45 d0 00 00               	mov word ptr [ebp - 0x30], 0
0x804a653:   eb 0b                           	jmp 0x804a660 <func_1+0xe85>
0x804a655:   83 7d 80 00                     	cmp dword ptr [ebp - 0x80], 0
0x804a659:   75 0e                           	jne 0x804a669 <func_1+0xe8e>
0x804a65b:   66 83 45 d0 01                  	add word ptr [ebp - 0x30], 1
0x804a660:   66 83 7d d0 12                  	cmp word ptr [ebp - 0x30], 0x12
0x804a665:   76 ee                           	jbe 0x804a655 <func_1+0xe7a>
0x804a667:   eb 01                           	jmp 0x804a66a <func_1+0xe8f>
0x804a669:   90                              	nop 
0x804a66a:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a670:   3b 85 50 ff ff ff               	cmp eax, dword ptr [ebp - 0xb0]
0x804a676:   0f 9d c0                        	setge al
0x804a679:   0f b6 c0                        	movzx eax, al
0x804a67c:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a67f:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a683:   0f be d8                        	movsx ebx, al
0x804a686:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x804a68c:   66 33 45 e6                     	xor ax, word ptr [ebp - 0x1a]
0x804a690:   98                              	cwde 
0x804a691:   8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x804a694:   0f bf f2                        	movsx esi, dx
0x804a697:   99                              	cdq 
0x804a698:   f7 fe                           	idiv esi
0x804a69a:   39 45 94                        	cmp dword ptr [ebp - 0x6c], eax
0x804a69d:   0f 95 c0                        	setne al
0x804a6a0:   0f b6 c0                        	movzx eax, al
0x804a6a3:   f7 d8                           	neg eax
0x804a6a5:   0f be c0                        	movsx eax, al
0x804a6a8:   89 c1                           	mov ecx, eax
0x804a6aa:   d3 e3                           	shl ebx, cl
0x804a6ac:   89 d8                           	mov eax, ebx
0x804a6ae:   85 c0                           	test eax, eax
0x804a6b0:   0f 84 29 02 00 00               	je 0x804a8df <func_1+0x1104>
0x804a6b6:   c6 45 8f f9                     	mov byte ptr [ebp - 0x71], 0xf9
0x804a6ba:   c7 85 08 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xf8], 1
0x804a6c4:   0f b6 45 ca                     	movzx eax, byte ptr [ebp - 0x36]
0x804a6c8:   83 e8 01                        	sub eax, 1
0x804a6cb:   88 45 ca                        	mov byte ptr [ebp - 0x36], al
0x804a6ce:   c6 45 cf 00                     	mov byte ptr [ebp - 0x31], 0
0x804a6d2:   e9 f9 01 00 00                  	jmp 0x804a8d0 <func_1+0x10f5>
0x804a6d7:   c6 85 07 ff ff ff 5f            	mov byte ptr [ebp - 0xf9], 0x5f
0x804a6de:   c7 85 00 ff ff ff 09 62 12 77   	mov dword ptr [ebp - 0x100], 0x77126209
0x804a6e8:   80 bd 07 ff ff ff 00            	cmp byte ptr [ebp - 0xf9], 0
0x804a6ef:   0f 84 f0 00 00 00               	je 0x804a7e5 <func_1+0x100a>
0x804a6f5:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a6f8:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x804a6fe:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804a704:   c0 f8 04                        	sar al, 4
0x804a707:   0f be c0                        	movsx eax, al
0x804a70a:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a70d:   80 7d 87 00                     	cmp byte ptr [ebp - 0x79], 0
0x804a711:   74 1c                           	je 0x804a72f <func_1+0xf54>
0x804a713:   66 83 7d d0 00                  	cmp word ptr [ebp - 0x30], 0
0x804a718:   0f 94 c0                        	sete al
0x804a71b:   0f b6 c0                        	movzx eax, al
0x804a71e:   99                              	cdq 
0x804a71f:   f7 7d e8                        	idiv dword ptr [ebp - 0x18]
0x804a722:   89 d0                           	mov eax, edx
0x804a724:   85 c0                           	test eax, eax
0x804a726:   74 07                           	je 0x804a72f <func_1+0xf54>
0x804a728:   b8 01 00 00 00                  	mov eax, 1
0x804a72d:   eb 05                           	jmp 0x804a734 <func_1+0xf59>
0x804a72f:   b8 00 00 00 00                  	mov eax, 0
0x804a734:   3d 9b c5 00 00                  	cmp eax, 0xc59b
0x804a739:   0f 9e c0                        	setle al
0x804a73c:   0f b6 d0                        	movzx edx, al
0x804a73f:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x804a743:   09 d0                           	or eax, edx
0x804a745:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a748:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a74b:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a74e:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a751:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a754:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x804a75a:   25 f9 00 00 00                  	and eax, 0xf9
0x804a75f:   89 c2                           	mov edx, eax
0x804a761:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a764:   09 d0                           	or eax, edx
0x804a766:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a769:   80 75 8f a8                     	xor byte ptr [ebp - 0x71], 0xa8
0x804a76d:   83 7d d8 f9                     	cmp dword ptr [ebp - 0x28], -7
0x804a771:   0f 94 c0                        	sete al
0x804a774:   0f b6 c0                        	movzx eax, al
0x804a777:   39 85 08 ff ff ff               	cmp dword ptr [ebp - 0xf8], eax
0x804a77d:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x804a781:   0f b6 c0                        	movzx eax, al
0x804a784:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x804a78a:   83 bd 08 ff ff ff 00            	cmp dword ptr [ebp - 0xf8], 0
0x804a791:   0f 85 86 04 00 00               	jne 0x804ac1d <func_1+0x1442>
0x804a797:   66 c7 45 d2 02 00               	mov word ptr [ebp - 0x2e], 2
0x804a79d:   83 7d f0 02                     	cmp dword ptr [ebp - 0x10], 2
0x804a7a1:   0f 9e c0                        	setle al
0x804a7a4:   0f b6 c0                        	movzx eax, al
0x804a7a7:   89 85 00 ff ff ff               	mov dword ptr [ebp - 0x100], eax
0x804a7ad:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x804a7b3:   3b 85 4c ff ff ff               	cmp eax, dword ptr [ebp - 0xb4]
0x804a7b9:   74 04                           	je 0x804a7bf <func_1+0xfe4>
0x804a7bb:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a7bf:   0f b6 45 ce                     	movzx eax, byte ptr [ebp - 0x32]
0x804a7c3:   ba 01 00 00 00                  	mov edx, 1
0x804a7c8:   89 c1                           	mov ecx, eax
0x804a7ca:   d3 e2                           	shl edx, cl
0x804a7cc:   89 d0                           	mov eax, edx
0x804a7ce:   66 98                           	cbw 
0x804a7d0:   83 c0 08                        	add eax, 8
0x804a7d3:   0f bf d0                        	movsx edx, ax
0x804a7d6:   0f b6 45 ca                     	movzx eax, byte ptr [ebp - 0x36]
0x804a7da:   0f af c2                        	imul eax, edx
0x804a7dd:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a7e0:   e9 d3 00 00 00                  	jmp 0x804a8b8 <func_1+0x10dd>
0x804a7e5:   0f b6 45 c5                     	movzx eax, byte ptr [ebp - 0x3b]
0x804a7e9:   0f b6 95 7b ff ff ff            	movzx edx, byte ptr [ebp - 0x85]
0x804a7f0:   0f b7 5d c6                     	movzx ebx, word ptr [ebp - 0x3a]
0x804a7f4:   0f b6 75 c9                     	movzx esi, byte ptr [ebp - 0x37]
0x804a7f8:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x804a7fe:   0f b6 7d ca                     	movzx edi, byte ptr [ebp - 0x36]
0x804a802:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x804a808:   0f be 4d cb                     	movsx ecx, byte ptr [ebp - 0x35]
0x804a80c:   89 8d 88 fe ff ff               	mov dword ptr [ebp - 0x178], ecx
0x804a812:   0f b7 75 cc                     	movzx esi, word ptr [ebp - 0x34]
0x804a816:   89 b5 84 fe ff ff               	mov dword ptr [ebp - 0x17c], esi
0x804a81c:   0f b6 7d ce                     	movzx edi, byte ptr [ebp - 0x32]
0x804a820:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a826:   0f be 4d cf                     	movsx ecx, byte ptr [ebp - 0x31]
0x804a82a:   89 8d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ecx
0x804a830:   0f b7 75 d0                     	movzx esi, word ptr [ebp - 0x30]
0x804a834:   89 b5 78 fe ff ff               	mov dword ptr [ebp - 0x188], esi
0x804a83a:   0f be 7d 87                     	movsx edi, byte ptr [ebp - 0x79]
0x804a83e:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x804a844:   0f bf 7d d2                     	movsx edi, word ptr [ebp - 0x2e]
0x804a848:   0f b7 75 e4                     	movzx esi, word ptr [ebp - 0x1c]
0x804a84c:   0f b7 4d e6                     	movzx ecx, word ptr [ebp - 0x1a]
0x804a850:   50                              	push eax
0x804a851:   52                              	push edx
0x804a852:   53                              	push ebx
0x804a853:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a859:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a85f:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a865:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a86b:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a86e:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a874:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a87a:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a880:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a886:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a88c:   57                              	push edi
0x804a88d:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a890:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a893:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a896:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a899:   56                              	push esi
0x804a89a:   51                              	push ecx
0x804a89b:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a89e:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a8a1:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a8a4:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a8a7:   e8 7a ed ff ff                  	call 0x8049626 <set_var>
0x804a8ac:   83 c4 60                        	add esp, 0x60
0x804a8af:   0f b6 45 cb                     	movzx eax, byte ptr [ebp - 0x35]
0x804a8b3:   e9 9b 04 00 00                  	jmp 0x804ad53 <func_1+0x1578>
0x804a8b8:   c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x804a8bf:   c7 45 f0 ff ff ff ff            	mov dword ptr [ebp - 0x10], 0xffffffff
0x804a8c6:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x804a8ca:   83 e8 01                        	sub eax, 1
0x804a8cd:   88 45 cf                        	mov byte ptr [ebp - 0x31], al
0x804a8d0:   80 7d cf fc                     	cmp byte ptr [ebp - 0x31], 0xfc
0x804a8d4:   0f 8c fd fd ff ff               	jl 0x804a6d7 <func_1+0xefc>
0x804a8da:   e9 3f 03 00 00                  	jmp 0x804ac1e <func_1+0x1443>
0x804a8df:   c6 85 23 ff ff ff 47            	mov byte ptr [ebp - 0xdd], 0x47
0x804a8e6:   c7 85 1c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe4], 0
0x804a8f0:   66 c7 85 1a ff ff ff 00 00      	mov word ptr [ebp - 0xe6], 0
0x804a8f9:   66 c7 85 18 ff ff ff 01 00      	mov word ptr [ebp - 0xe8], 1
0x804a902:   0f be 4d cf                     	movsx ecx, byte ptr [ebp - 0x31]
0x804a906:   83 7d 80 00                     	cmp dword ptr [ebp - 0x80], 0
0x804a90a:   74 2c                           	je 0x804a938 <func_1+0x115d>
0x804a90c:   0f b6 45 ca                     	movzx eax, byte ptr [ebp - 0x36]
0x804a910:   83 c0 01                        	add eax, 1
0x804a913:   88 45 ca                        	mov byte ptr [ebp - 0x36], al
0x804a916:   83 bd 34 ff ff ff 01            	cmp dword ptr [ebp - 0xcc], 1
0x804a91d:   0f 95 c0                        	setne al
0x804a920:   89 c2                           	mov edx, eax
0x804a922:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a926:   09 d0                           	or eax, edx
0x804a928:   88 45 ce                        	mov byte ptr [ebp - 0x32], al
0x804a92b:   80 7d ce 00                     	cmp byte ptr [ebp - 0x32], 0
0x804a92f:   74 07                           	je 0x804a938 <func_1+0x115d>
0x804a931:   b8 01 00 00 00                  	mov eax, 1
0x804a936:   eb 05                           	jmp 0x804a93d <func_1+0x1162>
0x804a938:   b8 00 00 00 00                  	mov eax, 0
0x804a93d:   98                              	cwde 
0x804a93e:   8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x804a941:   0f bf da                        	movsx ebx, dx
0x804a944:   99                              	cdq 
0x804a945:   f7 fb                           	idiv ebx
0x804a947:   89 d0                           	mov eax, edx
0x804a949:   98                              	cwde 
0x804a94a:   0f af c1                        	imul eax, ecx
0x804a94d:   31 85 38 ff ff ff               	xor dword ptr [ebp - 0xc8], eax
0x804a953:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804a959:   0f be c0                        	movsx eax, al
0x804a95c:   c1 e0 02                        	shl eax, 2
0x804a95f:   85 c0                           	test eax, eax
0x804a961:   74 6e                           	je 0x804a9d1 <func_1+0x11f6>
0x804a963:   c7 85 0c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xf4], 1
0x804a96d:   66 0f be 45 cb                  	movsx ax, byte ptr [ebp - 0x35]
0x804a972:   89 c1                           	mov ecx, eax
0x804a974:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x804a97a:   89 c2                           	mov edx, eax
0x804a97c:   89 c8                           	mov eax, ecx
0x804a97e:   0f af c2                        	imul eax, edx
0x804a981:   89 c1                           	mov ecx, eax
0x804a983:   0f bf 55 d2                     	movsx edx, word ptr [ebp - 0x2e]
0x804a987:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x804a98d:   0f b7 c0                        	movzx eax, ax
0x804a990:   39 c2                           	cmp edx, eax
0x804a992:   0f 9d c0                        	setge al
0x804a995:   0f b6 c0                        	movzx eax, al
0x804a998:   8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x804a99b:   0f bf da                        	movsx ebx, dx
0x804a99e:   99                              	cdq 
0x804a99f:   f7 fb                           	idiv ebx
0x804a9a1:   89 d0                           	mov eax, edx
0x804a9a3:   89 c2                           	mov edx, eax
0x804a9a5:   0f b6 45 cb                     	movzx eax, byte ptr [ebp - 0x35]
0x804a9a9:   01 c2                           	add edx, eax
0x804a9ab:   0f b6 c1                        	movzx eax, cl
0x804a9ae:   f6 f2                           	div dl
0x804a9b0:   0f b6 d0                        	movzx edx, al
0x804a9b3:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a9b7:   21 d0                           	and eax, edx
0x804a9b9:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a9bc:   83 ad 1c ff ff ff 01            	sub dword ptr [ebp - 0xe4], 1
0x804a9c3:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x804a9c9:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a9cc:   e9 80 01 00 00                  	jmp 0x804ab51 <func_1+0x1376>
0x804a9d1:   66 c7 85 16 ff ff ff f6 ff      	mov word ptr [ebp - 0xea], 0xfff6
0x804a9da:   c6 85 15 ff ff ff fc            	mov byte ptr [ebp - 0xeb], 0xfc
0x804a9e1:   0f b6 45 c9                     	movzx eax, byte ptr [ebp - 0x37]
0x804a9e5:   83 c0 01                        	add eax, 1
0x804a9e8:   88 45 c9                        	mov byte ptr [ebp - 0x37], al
0x804a9eb:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x804a9ef:   0f 85 f9 00 00 00               	jne 0x804aaee <func_1+0x1313>
0x804a9f5:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804a9fb:   ba 00 00 00 00                  	mov edx, 0
0x804aa00:   66 f7 75 cc                     	div word ptr [ebp - 0x34]
0x804aa04:   89 d0                           	mov eax, edx
0x804aa06:   0f b7 d0                        	movzx edx, ax
0x804aa09:   66 81 bd 16 ff ff ff c9 63      	cmp word ptr [ebp - 0xea], 0x63c9
0x804aa12:   0f 94 c0                        	sete al
0x804aa15:   0f b6 c0                        	movzx eax, al
0x804aa18:   39 c2                           	cmp edx, eax
0x804aa1a:   7c 07                           	jl 0x804aa23 <func_1+0x1248>
0x804aa1c:   b8 00 00 00 00                  	mov eax, 0
0x804aa21:   eb 05                           	jmp 0x804aa28 <func_1+0x124d>
0x804aa23:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x804aa28:   66 89 85 1a ff ff ff            	mov word ptr [ebp - 0xe6], ax
0x804aa2f:   c7 85 10 ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0xf0], 0xfffffffb
0x804aa39:   8b 85 10 ff ff ff               	mov eax, dword ptr [ebp - 0xf0]
0x804aa3f:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804aa42:   66 83 7d e6 00                  	cmp word ptr [ebp - 0x1a], 0
0x804aa47:   75 10                           	jne 0x804aa59 <func_1+0x127e>
0x804aa49:   83 bd 34 ff ff ff 00            	cmp dword ptr [ebp - 0xcc], 0
0x804aa50:   74 07                           	je 0x804aa59 <func_1+0x127e>
0x804aa52:   b8 01 00 00 00                  	mov eax, 1
0x804aa57:   eb 05                           	jmp 0x804aa5e <func_1+0x1283>
0x804aa59:   b8 00 00 00 00                  	mov eax, 0
0x804aa5e:   0b 45 bc                        	or eax, dword ptr [ebp - 0x44]
0x804aa61:   39 85 4c ff ff ff               	cmp dword ptr [ebp - 0xb4], eax
0x804aa67:   74 07                           	je 0x804aa70 <func_1+0x1295>
0x804aa69:   ba 01 00 00 00                  	mov edx, 1
0x804aa6e:   eb 05                           	jmp 0x804aa75 <func_1+0x129a>
0x804aa70:   ba 00 00 00 00                  	mov edx, 0
0x804aa75:   0f be 45 cf                     	movsx eax, byte ptr [ebp - 0x31]
0x804aa79:   39 c2                           	cmp edx, eax
0x804aa7b:   0f 9e c0                        	setle al
0x804aa7e:   0f b6 c0                        	movzx eax, al
0x804aa81:   66 0f be d0                     	movsx dx, al
0x804aa85:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804aa88:   66 98                           	cbw 
0x804aa8a:   29 c2                           	sub edx, eax
0x804aa8c:   89 d0                           	mov eax, edx
0x804aa8e:   66 d1 e8                        	shr ax, 1
0x804aa91:   66 85 c0                        	test ax, ax
0x804aa94:   0f 94 c0                        	sete al
0x804aa97:   0f b6 d0                        	movzx edx, al
0x804aa9a:   0f b7 85 16 ff ff ff            	movzx eax, word ptr [ebp - 0xea]
0x804aaa1:   66 98                           	cbw 
0x804aaa3:   29 c2                           	sub edx, eax
0x804aaa5:   89 d0                           	mov eax, edx
0x804aaa7:   0f b7 d0                        	movzx edx, ax
0x804aaaa:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804aaad:   0f b7 c0                        	movzx eax, ax
0x804aab0:   0f af d0                        	imul edx, eax
0x804aab3:   0f b6 45 ca                     	movzx eax, byte ptr [ebp - 0x36]
0x804aab7:   29 c2                           	sub edx, eax
0x804aab9:   89 d0                           	mov eax, edx
0x804aabb:   3d f1 95 c4 a7                  	cmp eax, 0xa7c495f1
0x804aac0:   74 07                           	je 0x804aac9 <func_1+0x12ee>
0x804aac2:   66 83 7d d0 00                  	cmp word ptr [ebp - 0x30], 0
0x804aac7:   74 07                           	je 0x804aad0 <func_1+0x12f5>
0x804aac9:   b8 01 00 00 00                  	mov eax, 1
0x804aace:   eb 05                           	jmp 0x804aad5 <func_1+0x12fa>
0x804aad0:   b8 00 00 00 00                  	mov eax, 0
0x804aad5:   88 85 49 ff ff ff               	mov byte ptr [ebp - 0xb7], al
0x804aadb:   66 83 bd 1a ff ff ff 00         	cmp word ptr [ebp - 0xe6], 0
0x804aae3:   0f 9e c0                        	setle al
0x804aae6:   0f b6 c0                        	movzx eax, al
0x804aae9:   31 45 bc                        	xor dword ptr [ebp - 0x44], eax
0x804aaec:   eb 3f                           	jmp 0x804ab2d <func_1+0x1352>
0x804aaee:   90                              	nop 
0x804aaef:   0f b7 55 e6                     	movzx edx, word ptr [ebp - 0x1a]
0x804aaf3:   0f bf 85 18 ff ff ff            	movsx eax, word ptr [ebp - 0xe8]
0x804aafa:   39 c2                           	cmp edx, eax
0x804aafc:   7c 07                           	jl 0x804ab05 <func_1+0x132a>
0x804aafe:   b8 fc ff ff ff                  	mov eax, 0xfffffffc
0x804ab03:   eb 05                           	jmp 0x804ab0a <func_1+0x132f>
0x804ab05:   b8 fb ff ff ff                  	mov eax, 0xfffffffb
0x804ab0a:   88 45 cf                        	mov byte ptr [ebp - 0x31], al
0x804ab0d:   0f be 45 cf                     	movsx eax, byte ptr [ebp - 0x31]
0x804ab11:   01 c0                           	add eax, eax
0x804ab13:   3d 0f c3 00 00                  	cmp eax, 0xc30f
0x804ab18:   0f 9f c0                        	setg al
0x804ab1b:   0f b6 c0                        	movzx eax, al
0x804ab1e:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804ab21:   80 6d ce 01                     	sub byte ptr [ebp - 0x32], 1
0x804ab25:   b8 00 00 00 00                  	mov eax, 0
0x804ab2a:   09 45 e8                        	or dword ptr [ebp - 0x18], eax
0x804ab2d:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804ab31:   32 85 33 ff ff ff               	xor al, byte ptr [ebp - 0xcd]
0x804ab37:   89 c2                           	mov edx, eax
0x804ab39:   89 d0                           	mov eax, edx
0x804ab3b:   c1 e0 03                        	shl eax, 3
0x804ab3e:   01 d0                           	add eax, edx
0x804ab40:   88 45 cb                        	mov byte ptr [ebp - 0x35], al
0x804ab43:   66 83 7d cc 03                  	cmp word ptr [ebp - 0x34], 3
0x804ab48:   0f 97 c0                        	seta al
0x804ab4b:   0f b6 c0                        	movzx eax, al
0x804ab4e:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804ab51:   0f b6 85 63 ff ff ff            	movzx eax, byte ptr [ebp - 0x9d]
0x804ab58:   8b 95 3c ff ff ff               	mov edx, dword ptr [ebp - 0xc4]
0x804ab5e:   66 c1 fa 05                     	sar dx, 5
0x804ab62:   0f af d0                        	imul edx, eax
0x804ab65:   0f b7 85 4a ff ff ff            	movzx eax, word ptr [ebp - 0xb6]
0x804ab6c:   01 d0                           	add eax, edx
0x804ab6e:   0f b7 c0                        	movzx eax, ax
0x804ab71:   25 f7 ff 00 00                  	and eax, 0xfff7
0x804ab76:   66 0f be 55 87                  	movsx dx, byte ptr [ebp - 0x79]
0x804ab7b:   0f b7 da                        	movzx ebx, dx
0x804ab7e:   99                              	cdq 
0x804ab7f:   f7 fb                           	idiv ebx
0x804ab81:   89 c2                           	mov edx, eax
0x804ab83:   0f b6 85 63 ff ff ff            	movzx eax, byte ptr [ebp - 0x9d]
0x804ab8a:   39 c2                           	cmp edx, eax
0x804ab8c:   0f 9f c0                        	setg al
0x804ab8f:   0f b6 c0                        	movzx eax, al
0x804ab92:   0f be d0                        	movsx edx, al
0x804ab95:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804ab98:   0f be c0                        	movsx eax, al
0x804ab9b:   29 c2                           	sub edx, eax
0x804ab9d:   89 d0                           	mov eax, edx
0x804ab9f:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x804aba5:   66 83 45 c6 01                  	add word ptr [ebp - 0x3a], 1
0x804abaa:   eb 72                           	jmp 0x804ac1e <func_1+0x1443>
0x804abac:   c7 85 40 ff ff ff 40 fd 25 4c   	mov dword ptr [ebp - 0xc0], 0x4c25fd40
0x804abb6:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804abbc:   0f be c0                        	movsx eax, al
0x804abbf:   c1 e0 05                        	shl eax, 5
0x804abc2:   83 e0 20                        	and eax, 0x20
0x804abc5:   89 c2                           	mov edx, eax
0x804abc7:   0f b6 85 7b ff ff ff            	movzx eax, byte ptr [ebp - 0x85]
0x804abce:   09 d0                           	or eax, edx
0x804abd0:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804abd3:   66 0f be 95 62 ff ff ff         	movsx dx, byte ptr [ebp - 0x9e]
0x804abdb:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804abde:   66 98                           	cbw 
0x804abe0:   29 c2                           	sub edx, eax
0x804abe2:   89 d0                           	mov eax, edx
0x804abe4:   0f b7 d0                        	movzx edx, ax
0x804abe7:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804abea:   0f b7 c0                        	movzx eax, ax
0x804abed:   89 c1                           	mov ecx, eax
0x804abef:   d3 fa                           	sar edx, cl
0x804abf1:   89 d0                           	mov eax, edx
0x804abf3:   0f b6 d0                        	movzx edx, al
0x804abf6:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x804abfc:   0f b6 c0                        	movzx eax, al
0x804abff:   29 c2                           	sub edx, eax
0x804ac01:   89 d0                           	mov eax, edx
0x804ac03:   39 85 40 ff ff ff               	cmp dword ptr [ebp - 0xc0], eax
0x804ac09:   0f 93 c0                        	setae al
0x804ac0c:   0f b6 c0                        	movzx eax, al
0x804ac0f:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804ac12:   80 7d cf 00                     	cmp byte ptr [ebp - 0x31], 0
0x804ac16:   74 06                           	je 0x804ac1e <func_1+0x1443>
0x804ac18:   e9 d5 f6 ff ff                  	jmp 0x804a2f2 <func_1+0xb17>
0x804ac1d:   90                              	nop 
0x804ac1e:   83 bd 44 ff ff ff ff            	cmp dword ptr [ebp - 0xbc], -1
0x804ac25:   0f 95 c0                        	setne al
0x804ac28:   0f b6 d0                        	movzx edx, al
0x804ac2b:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804ac2e:   0f b6 c0                        	movzx eax, al
0x804ac31:   0f af c2                        	imul eax, edx
0x804ac34:   85 c0                           	test eax, eax
0x804ac36:   74 0d                           	je 0x804ac45 <func_1+0x146a>
0x804ac38:   83 7d 88 00                     	cmp dword ptr [ebp - 0x78], 0
0x804ac3c:   74 07                           	je 0x804ac45 <func_1+0x146a>
0x804ac3e:   b8 01 00 00 00                  	mov eax, 1
0x804ac43:   eb 05                           	jmp 0x804ac4a <func_1+0x146f>
0x804ac45:   b8 00 00 00 00                  	mov eax, 0
0x804ac4a:   ba 60 00 00 00                  	mov edx, 0x60
0x804ac4f:   29 c2                           	sub edx, eax
0x804ac51:   89 d0                           	mov eax, edx
0x804ac53:   89 c2                           	mov edx, eax
0x804ac55:   0f b6 45 c5                     	movzx eax, byte ptr [ebp - 0x3b]
0x804ac59:   21 d0                           	and eax, edx
0x804ac5b:   88 45 c5                        	mov byte ptr [ebp - 0x3b], al
0x804ac5e:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804ac64:   88 45 cb                        	mov byte ptr [ebp - 0x35], al
0x804ac67:   0f b6 45 cb                     	movzx eax, byte ptr [ebp - 0x35]
0x804ac6b:   0f be c0                        	movsx eax, al
0x804ac6e:   31 85 74 ff ff ff               	xor dword ptr [ebp - 0x8c], eax
0x804ac74:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804ac7a:   0f be c0                        	movsx eax, al
0x804ac7d:   c1 f8 07                        	sar eax, 7
0x804ac80:   89 85 5c ff ff ff               	mov dword ptr [ebp - 0xa4], eax
0x804ac86:   0f b6 45 c5                     	movzx eax, byte ptr [ebp - 0x3b]
0x804ac8a:   0f b6 95 7b ff ff ff            	movzx edx, byte ptr [ebp - 0x85]
0x804ac91:   0f b7 5d c6                     	movzx ebx, word ptr [ebp - 0x3a]
0x804ac95:   0f b6 75 c9                     	movzx esi, byte ptr [ebp - 0x37]
0x804ac99:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x804ac9f:   0f b6 7d ca                     	movzx edi, byte ptr [ebp - 0x36]
0x804aca3:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x804aca9:   0f be 4d cb                     	movsx ecx, byte ptr [ebp - 0x35]
0x804acad:   89 8d 88 fe ff ff               	mov dword ptr [ebp - 0x178], ecx
0x804acb3:   0f b7 75 cc                     	movzx esi, word ptr [ebp - 0x34]
0x804acb7:   89 b5 84 fe ff ff               	mov dword ptr [ebp - 0x17c], esi
0x804acbd:   0f b6 7d ce                     	movzx edi, byte ptr [ebp - 0x32]
0x804acc1:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804acc7:   0f be 4d cf                     	movsx ecx, byte ptr [ebp - 0x31]
0x804accb:   89 8d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ecx
0x804acd1:   0f b7 75 d0                     	movzx esi, word ptr [ebp - 0x30]
0x804acd5:   89 b5 78 fe ff ff               	mov dword ptr [ebp - 0x188], esi
0x804acdb:   0f be 7d 87                     	movsx edi, byte ptr [ebp - 0x79]
0x804acdf:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x804ace5:   0f bf 7d d2                     	movsx edi, word ptr [ebp - 0x2e]
0x804ace9:   0f b7 75 e4                     	movzx esi, word ptr [ebp - 0x1c]
0x804aced:   0f b7 4d e6                     	movzx ecx, word ptr [ebp - 0x1a]
0x804acf1:   50                              	push eax
0x804acf2:   52                              	push edx
0x804acf3:   53                              	push ebx
0x804acf4:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804acfa:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804ad00:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804ad06:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804ad0c:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804ad0f:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804ad15:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804ad1b:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804ad21:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804ad27:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804ad2d:   57                              	push edi
0x804ad2e:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804ad31:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804ad34:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804ad37:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804ad3a:   56                              	push esi
0x804ad3b:   51                              	push ecx
0x804ad3c:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804ad3f:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804ad42:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804ad45:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804ad48:   e8 d9 e8 ff ff                  	call 0x8049626 <set_var>
0x804ad4d:   83 c4 60                        	add esp, 0x60
0x804ad50:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804ad53:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804ad56:   5b                              	pop ebx
0x804ad57:   5e                              	pop esi
0x804ad58:   5f                              	pop edi
0x804ad59:   5d                              	pop ebp
0x804ad5a:   c3                              	ret 
; function: main at 0x804ad5b -- 0x804b0c3
0x804ad5b:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804ad5f:   83 e4 f0                        	and esp, 0xfffffff0
0x804ad62:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804ad65:   55                              	push ebp
0x804ad66:   89 e5                           	mov ebp, esp
0x804ad68:   53                              	push ebx
0x804ad69:   51                              	push ecx
0x804ad6a:   83 ec 10                        	sub esp, 0x10
0x804ad6d:   e8 1e d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ad72:   81 c3 8e 32 00 00               	add ebx, 0x328e
0x804ad78:   89 c8                           	mov eax, ecx
0x804ad7a:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804ad81:   83 38 02                        	cmp dword ptr [eax], 2
0x804ad84:   75 26                           	jne 0x804adac <main+0x51>
0x804ad86:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804ad89:   83 c0 04                        	add eax, 4
0x804ad8c:   8b 00                           	mov eax, dword ptr [eax]
0x804ad8e:   83 ec 08                        	sub esp, 8
0x804ad91:   8d 93 a8 d1 ff ff               	lea edx, [ebx - 0x2e58]
0x804ad97:   52                              	push edx
0x804ad98:   50                              	push eax
0x804ad99:   e8 62 d5 ff ff                  	call 0x8048300 <strcmp>
0x804ad9e:   83 c4 10                        	add esp, 0x10
0x804ada1:   85 c0                           	test eax, eax
0x804ada3:   75 07                           	jne 0x804adac <main+0x51>
0x804ada5:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804adac:   e8 a5 d6 ff ff                  	call 0x8048456 <platform_main_begin>
0x804adb1:   e8 b5 e6 ff ff                  	call 0x804946b <crc32_gentab>
0x804adb6:   e8 20 ea ff ff                  	call 0x80497db <func_1>
0x804adbb:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804adc1:   89 c2                           	mov edx, eax
0x804adc3:   83 ec 04                        	sub esp, 4
0x804adc6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adc9:   8d 83 aa d1 ff ff               	lea eax, [ebx - 0x2e56]
0x804adcf:   50                              	push eax
0x804add0:   52                              	push edx
0x804add1:   e8 a1 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804add6:   83 c4 10                        	add esp, 0x10
0x804add9:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804addf:   83 ec 04                        	sub esp, 4
0x804ade2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ade5:   8d 93 ae d1 ff ff               	lea edx, [ebx - 0x2e52]
0x804adeb:   52                              	push edx
0x804adec:   50                              	push eax
0x804aded:   e8 85 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adf2:   83 c4 10                        	add esp, 0x10
0x804adf5:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804adfb:   89 c2                           	mov edx, eax
0x804adfd:   83 ec 04                        	sub esp, 4
0x804ae00:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae03:   8d 83 b3 d1 ff ff               	lea eax, [ebx - 0x2e4d]
0x804ae09:   50                              	push eax
0x804ae0a:   52                              	push edx
0x804ae0b:   e8 67 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae10:   83 c4 10                        	add esp, 0x10
0x804ae13:   8b 83 84 04 00 00               	mov eax, dword ptr [ebx + 0x484]
0x804ae19:   89 c2                           	mov edx, eax
0x804ae1b:   83 ec 04                        	sub esp, 4
0x804ae1e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae21:   8d 83 b8 d1 ff ff               	lea eax, [ebx - 0x2e48]
0x804ae27:   50                              	push eax
0x804ae28:   52                              	push edx
0x804ae29:   e8 49 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae2e:   83 c4 10                        	add esp, 0x10
0x804ae31:   0f b7 83 30 00 00 00            	movzx eax, word ptr [ebx + 0x30]
0x804ae38:   0f b7 c0                        	movzx eax, ax
0x804ae3b:   83 ec 04                        	sub esp, 4
0x804ae3e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae41:   8d 93 bd d1 ff ff               	lea edx, [ebx - 0x2e43]
0x804ae47:   52                              	push edx
0x804ae48:   50                              	push eax
0x804ae49:   e8 29 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae4e:   83 c4 10                        	add esp, 0x10
0x804ae51:   0f b7 83 88 04 00 00            	movzx eax, word ptr [ebx + 0x488]
0x804ae58:   0f b7 c0                        	movzx eax, ax
0x804ae5b:   83 ec 04                        	sub esp, 4
0x804ae5e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae61:   8d 93 c2 d1 ff ff               	lea edx, [ebx - 0x2e3e]
0x804ae67:   52                              	push edx
0x804ae68:   50                              	push eax
0x804ae69:   e8 09 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae6e:   83 c4 10                        	add esp, 0x10
0x804ae71:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804ae77:   89 c2                           	mov edx, eax
0x804ae79:   83 ec 04                        	sub esp, 4
0x804ae7c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae7f:   8d 83 c8 d1 ff ff               	lea eax, [ebx - 0x2e38]
0x804ae85:   50                              	push eax
0x804ae86:   52                              	push edx
0x804ae87:   e8 eb e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae8c:   83 c4 10                        	add esp, 0x10
0x804ae8f:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804ae95:   83 ec 04                        	sub esp, 4
0x804ae98:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae9b:   8d 93 ce d1 ff ff               	lea edx, [ebx - 0x2e32]
0x804aea1:   52                              	push edx
0x804aea2:   50                              	push eax
0x804aea3:   e8 cf e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aea8:   83 c4 10                        	add esp, 0x10
0x804aeab:   8b 83 8c 04 00 00               	mov eax, dword ptr [ebx + 0x48c]
0x804aeb1:   89 c2                           	mov edx, eax
0x804aeb3:   83 ec 04                        	sub esp, 4
0x804aeb6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aeb9:   8d 83 d4 d1 ff ff               	lea eax, [ebx - 0x2e2c]
0x804aebf:   50                              	push eax
0x804aec0:   52                              	push edx
0x804aec1:   e8 b1 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aec6:   83 c4 10                        	add esp, 0x10
0x804aec9:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804aecf:   83 ec 04                        	sub esp, 4
0x804aed2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aed5:   8d 93 da d1 ff ff               	lea edx, [ebx - 0x2e26]
0x804aedb:   52                              	push edx
0x804aedc:   50                              	push eax
0x804aedd:   e8 95 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aee2:   83 c4 10                        	add esp, 0x10
0x804aee5:   0f b7 83 40 00 00 00            	movzx eax, word ptr [ebx + 0x40]
0x804aeec:   98                              	cwde 
0x804aeed:   83 ec 04                        	sub esp, 4
0x804aef0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aef3:   8d 93 e0 d1 ff ff               	lea edx, [ebx - 0x2e20]
0x804aef9:   52                              	push edx
0x804aefa:   50                              	push eax
0x804aefb:   e8 77 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af00:   83 c4 10                        	add esp, 0x10
0x804af03:   0f b6 83 42 00 00 00            	movzx eax, byte ptr [ebx + 0x42]
0x804af0a:   0f be c0                        	movsx eax, al
0x804af0d:   83 ec 04                        	sub esp, 4
0x804af10:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af13:   8d 93 e6 d1 ff ff               	lea edx, [ebx - 0x2e1a]
0x804af19:   52                              	push edx
0x804af1a:   50                              	push eax
0x804af1b:   e8 57 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af20:   83 c4 10                        	add esp, 0x10
0x804af23:   0f b7 83 44 00 00 00            	movzx eax, word ptr [ebx + 0x44]
0x804af2a:   0f b7 c0                        	movzx eax, ax
0x804af2d:   83 ec 04                        	sub esp, 4
0x804af30:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af33:   8d 93 ec d1 ff ff               	lea edx, [ebx - 0x2e14]
0x804af39:   52                              	push edx
0x804af3a:   50                              	push eax
0x804af3b:   e8 37 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af40:   83 c4 10                        	add esp, 0x10
0x804af43:   0f b6 83 46 00 00 00            	movzx eax, byte ptr [ebx + 0x46]
0x804af4a:   0f be c0                        	movsx eax, al
0x804af4d:   83 ec 04                        	sub esp, 4
0x804af50:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af53:   8d 93 f2 d1 ff ff               	lea edx, [ebx - 0x2e0e]
0x804af59:   52                              	push edx
0x804af5a:   50                              	push eax
0x804af5b:   e8 17 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af60:   83 c4 10                        	add esp, 0x10
0x804af63:   0f b6 83 47 00 00 00            	movzx eax, byte ptr [ebx + 0x47]
0x804af6a:   0f b6 c0                        	movzx eax, al
0x804af6d:   83 ec 04                        	sub esp, 4
0x804af70:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af73:   8d 93 f8 d1 ff ff               	lea edx, [ebx - 0x2e08]
0x804af79:   52                              	push edx
0x804af7a:   50                              	push eax
0x804af7b:   e8 f7 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af80:   83 c4 10                        	add esp, 0x10
0x804af83:   0f b7 83 48 00 00 00            	movzx eax, word ptr [ebx + 0x48]
0x804af8a:   0f b7 c0                        	movzx eax, ax
0x804af8d:   83 ec 04                        	sub esp, 4
0x804af90:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af93:   8d 93 fe d1 ff ff               	lea edx, [ebx - 0x2e02]
0x804af99:   52                              	push edx
0x804af9a:   50                              	push eax
0x804af9b:   e8 d7 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afa0:   83 c4 10                        	add esp, 0x10
0x804afa3:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804afa9:   83 ec 04                        	sub esp, 4
0x804afac:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afaf:   8d 93 04 d2 ff ff               	lea edx, [ebx - 0x2dfc]
0x804afb5:   52                              	push edx
0x804afb6:   50                              	push eax
0x804afb7:   e8 bb e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afbc:   83 c4 10                        	add esp, 0x10
0x804afbf:   0f b6 83 50 00 00 00            	movzx eax, byte ptr [ebx + 0x50]
0x804afc6:   0f be c0                        	movsx eax, al
0x804afc9:   83 ec 04                        	sub esp, 4
0x804afcc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afcf:   8d 93 0a d2 ff ff               	lea edx, [ebx - 0x2df6]
0x804afd5:   52                              	push edx
0x804afd6:   50                              	push eax
0x804afd7:   e8 9b e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afdc:   83 c4 10                        	add esp, 0x10
0x804afdf:   0f b6 83 51 00 00 00            	movzx eax, byte ptr [ebx + 0x51]
0x804afe6:   0f b6 c0                        	movzx eax, al
0x804afe9:   83 ec 04                        	sub esp, 4
0x804afec:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afef:   8d 93 10 d2 ff ff               	lea edx, [ebx - 0x2df0]
0x804aff5:   52                              	push edx
0x804aff6:   50                              	push eax
0x804aff7:   e8 7b e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804affc:   83 c4 10                        	add esp, 0x10
0x804afff:   0f b6 83 52 00 00 00            	movzx eax, byte ptr [ebx + 0x52]
0x804b006:   0f b6 c0                        	movzx eax, al
0x804b009:   83 ec 04                        	sub esp, 4
0x804b00c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b00f:   8d 93 16 d2 ff ff               	lea edx, [ebx - 0x2dea]
0x804b015:   52                              	push edx
0x804b016:   50                              	push eax
0x804b017:   e8 5b e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b01c:   83 c4 10                        	add esp, 0x10
0x804b01f:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804b025:   89 c2                           	mov edx, eax
0x804b027:   83 ec 04                        	sub esp, 4
0x804b02a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b02d:   8d 83 1c d2 ff ff               	lea eax, [ebx - 0x2de4]
0x804b033:   50                              	push eax
0x804b034:   52                              	push edx
0x804b035:   e8 3d e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b03a:   83 c4 10                        	add esp, 0x10
0x804b03d:   0f b7 83 58 00 00 00            	movzx eax, word ptr [ebx + 0x58]
0x804b044:   0f b7 c0                        	movzx eax, ax
0x804b047:   83 ec 04                        	sub esp, 4
0x804b04a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b04d:   8d 93 22 d2 ff ff               	lea edx, [ebx - 0x2dde]
0x804b053:   52                              	push edx
0x804b054:   50                              	push eax
0x804b055:   e8 1d e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b05a:   83 c4 10                        	add esp, 0x10
0x804b05d:   0f b6 83 5a 00 00 00            	movzx eax, byte ptr [ebx + 0x5a]
0x804b064:   0f b6 c0                        	movzx eax, al
0x804b067:   83 ec 04                        	sub esp, 4
0x804b06a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b06d:   8d 93 28 d2 ff ff               	lea edx, [ebx - 0x2dd8]
0x804b073:   52                              	push edx
0x804b074:   50                              	push eax
0x804b075:   e8 fd e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b07a:   83 c4 10                        	add esp, 0x10
0x804b07d:   0f b6 83 5b 00 00 00            	movzx eax, byte ptr [ebx + 0x5b]
0x804b084:   0f b6 c0                        	movzx eax, al
0x804b087:   83 ec 04                        	sub esp, 4
0x804b08a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b08d:   8d 93 2e d2 ff ff               	lea edx, [ebx - 0x2dd2]
0x804b093:   52                              	push edx
0x804b094:   50                              	push eax
0x804b095:   e8 dd e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b09a:   83 c4 10                        	add esp, 0x10
0x804b09d:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b0a3:   f7 d0                           	not eax
0x804b0a5:   83 ec 08                        	sub esp, 8
0x804b0a8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0ab:   50                              	push eax
0x804b0ac:   e8 b5 d3 ff ff                  	call 0x8048466 <platform_main_end>
0x804b0b1:   83 c4 10                        	add esp, 0x10
0x804b0b4:   b8 00 00 00 00                  	mov eax, 0
0x804b0b9:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b0bc:   59                              	pop ecx
0x804b0bd:   5b                              	pop ebx
0x804b0be:   5d                              	pop ebp
0x804b0bf:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b0c2:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b0c3 -- 0x804b0c7
0x804b0c3:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b0c6:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b0c7 -- 0x804b0cb
0x804b0c7:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b0ca:   c3                              	ret 
; data inside code section at 0x804b0cb -- 0x804b0d0
0x804b0cb:   66 90 66 90 90                                     |f.f..           |
; function: __libc_csu_init at 0x804b0d0 -- 0x804b12d
0x804b0d0:   55                              	push ebp
0x804b0d1:   57                              	push edi
0x804b0d2:   56                              	push esi
0x804b0d3:   53                              	push ebx
0x804b0d4:   e8 b7 d2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b0d9:   81 c3 27 2f 00 00               	add ebx, 0x2f27
0x804b0df:   83 ec 0c                        	sub esp, 0xc
0x804b0e2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b0e6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b0ec:   e8 db d1 ff ff                  	call 0x80482cc <_init>
0x804b0f1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b0f7:   29 c6                           	sub esi, eax
0x804b0f9:   c1 fe 02                        	sar esi, 2
0x804b0fc:   85 f6                           	test esi, esi
0x804b0fe:   74 25                           	je 0x804b125 <__libc_csu_init+0x55>
0x804b100:   31 ff                           	xor edi, edi
0x804b102:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b108:   83 ec 04                        	sub esp, 4
0x804b10b:   55                              	push ebp
0x804b10c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b110:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b114:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b11b:   83 c7 01                        	add edi, 1
0x804b11e:   83 c4 10                        	add esp, 0x10
0x804b121:   39 fe                           	cmp esi, edi
0x804b123:   75 e3                           	jne 0x804b108 <__libc_csu_init+0x38>
0x804b125:   83 c4 0c                        	add esp, 0xc
0x804b128:   5b                              	pop ebx
0x804b129:   5e                              	pop esi
0x804b12a:   5f                              	pop edi
0x804b12b:   5d                              	pop ebp
0x804b12c:   c3                              	ret 
; data inside code section at 0x804b12d -- 0x804b130
0x804b12d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b130 -- 0x804b132
0x804b130:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b134 -- 0x804b148
0x804b134:   53                              	push ebx
0x804b135:   83 ec 08                        	sub esp, 8
0x804b138:   e8 53 d2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b13d:   81 c3 c3 2e 00 00               	add ebx, 0x2ec3
0x804b143:   83 c4 08                        	add esp, 8
0x804b146:   5b                              	pop ebx
0x804b147:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 4c b1 04 08  04 00 00 00 11 00 10 00   |....L...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b148:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b158:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b168:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b178:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b188:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b198:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b1a8:   31 00 67 5f 32 00 67 5f  31 38 00 67 5f 32 36 00   |1.g_2.g_18.g_26.|
0x804b1b8:   67 5f 32 37 00 67 5f 33  31 00 67 5f 31 30 37 00   |g_27.g_31.g_107.|
0x804b1c8:   67 5f 31 32 35 00 67 5f  31 32 36 00 67 5f 32 33   |g_125.g_126.g_23|
0x804b1d8:   31 00 67 5f 32 33 33 00  67 5f 33 30 34 00 67 5f   |1.g_233.g_304.g_|
0x804b1e8:   33 31 32 00 67 5f 33 31  33 00 67 5f 33 32 34 00   |312.g_313.g_324.|
0x804b1f8:   67 5f 33 32 35 00 67 5f  33 35 38 00 67 5f 33 36   |g_325.g_358.g_36|
0x804b208:   39 00 67 5f 33 37 38 00  67 5f 33 37 39 00 67 5f   |9.g_378.g_379.g_|
0x804b218:   34 35 36 00 67 5f 35 32  36 00 67 5f 35 32 37 00   |456.g_526.g_527.|
0x804b228:   67 5f 35 33 34 00 67 5f  35 36 36 00 00 00 00 3f   |g_534.g_566....?|
0x804b238:   ff ff ff 7e 00 00 80 0d  00 00 80 31 ff ff 7f 3f   |...~.......1...?|
0x804b248:   00 00 00 27 00 00 80 71  ff ff ff 34 00 00 00 00   |...'...q...4....|
0x804b258:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804b268:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804b278:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804b288:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804b298:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804b2a0:   01 1b 03 3b b8 02 00 00  56 00 00 00 50 d0 ff ff   |...;....V...P...|
0x804b2b0:   e8 02 00 00 90 d0 ff ff  0c 03 00 00 e0 d0 ff ff   |................|
0x804b2c0:   d4 02 00 00 b6 d1 ff ff  20 03 00 00 c6 d1 ff ff   |........ .......|
0x804b2d0:   40 03 00 00 f4 d1 ff ff  64 03 00 00 12 d2 ff ff   |@.......d.......|
0x804b2e0:   84 03 00 00 3a d2 ff ff  a4 03 00 00 64 d2 ff ff   |....:.......d...|
0x804b2f0:   c4 03 00 00 8d d2 ff ff  e4 03 00 00 d0 d2 ff ff   |................|
0x804b300:   04 04 00 00 11 d3 ff ff  24 04 00 00 69 d3 ff ff   |........$...i...|
0x804b310:   48 04 00 00 bb d3 ff ff  6c 04 00 00 f8 d3 ff ff   |H.......l.......|
0x804b320:   8c 04 00 00 2f d4 ff ff  ac 04 00 00 4e d4 ff ff   |..../.......N...|
0x804b330:   cc 04 00 00 78 d4 ff ff  ec 04 00 00 a4 d4 ff ff   |....x...........|
0x804b340:   0c 05 00 00 cf d4 ff ff  2c 05 00 00 18 d5 ff ff   |........,.......|
0x804b350:   4c 05 00 00 5f d5 ff ff  6c 05 00 00 b9 d5 ff ff   |L..._...l.......|
0x804b360:   90 05 00 00 0d d6 ff ff  b4 05 00 00 4c d6 ff ff   |............L...|
0x804b370:   d4 05 00 00 85 d6 ff ff  f4 05 00 00 a7 d6 ff ff   |................|
0x804b380:   14 06 00 00 f5 d6 ff ff  34 06 00 00 31 d7 ff ff   |........4...1...|
0x804b390:   54 06 00 00 ba d7 ff ff  74 06 00 00 ec d7 ff ff   |T.......t.......|
0x804b3a0:   94 06 00 00 1c d8 ff ff  b4 06 00 00 61 d8 ff ff   |............a...|
0x804b3b0:   d4 06 00 00 a0 d8 ff ff  f4 06 00 00 d2 d8 ff ff   |................|
0x804b3c0:   14 07 00 00 fe d8 ff ff  34 07 00 00 1c d9 ff ff   |........4.......|
0x804b3d0:   54 07 00 00 44 d9 ff ff  74 07 00 00 69 d9 ff ff   |T...D...t...i...|
0x804b3e0:   94 07 00 00 8e d9 ff ff  b4 07 00 00 c5 d9 ff ff   |................|
0x804b3f0:   d4 07 00 00 f9 d9 ff ff  f4 07 00 00 4b da ff ff   |............K...|
0x804b400:   18 08 00 00 97 da ff ff  3c 08 00 00 ce da ff ff   |........<.......|
0x804b410:   5c 08 00 00 ff da ff ff  7c 08 00 00 1e db ff ff   |\.......|.......|
0x804b420:   9c 08 00 00 48 db ff ff  bc 08 00 00 70 db ff ff   |....H.......p...|
0x804b430:   dc 08 00 00 99 db ff ff  fc 08 00 00 d5 db ff ff   |................|
0x804b440:   1c 09 00 00 0f dc ff ff  3c 09 00 00 62 dc ff ff   |........<...b...|
0x804b450:   60 09 00 00 af dc ff ff  84 09 00 00 e7 dc ff ff   |`...............|
0x804b460:   a4 09 00 00 19 dd ff ff  c4 09 00 00 2d dd ff ff   |............-...|
0x804b470:   e4 09 00 00 44 dd ff ff  04 0a 00 00 59 dd ff ff   |....D.......Y...|
0x804b480:   24 0a 00 00 6f dd ff ff  44 0a 00 00 96 dd ff ff   |$...o...D.......|
0x804b490:   64 0a 00 00 bb dd ff ff  84 0a 00 00 fa dd ff ff   |d...............|
0x804b4a0:   a4 0a 00 00 33 de ff ff  c4 0a 00 00 5f de ff ff   |....3......._...|
0x804b4b0:   e4 0a 00 00 85 de ff ff  04 0b 00 00 c7 de ff ff   |................|
0x804b4c0:   24 0b 00 00 09 df ff ff  44 0b 00 00 4b df ff ff   |$.......D...K...|
0x804b4d0:   64 0b 00 00 c0 df ff ff  84 0b 00 00 1d e0 ff ff   |d...............|
0x804b4e0:   a4 0b 00 00 7a e0 ff ff  c4 0b 00 00 d7 e0 ff ff   |....z...........|
0x804b4f0:   e4 0b 00 00 67 e1 ff ff  04 0c 00 00 cb e1 ff ff   |....g...........|
0x804b500:   24 0c 00 00 3b e2 ff ff  44 0c 00 00 82 e2 ff ff   |$...;...D.......|
0x804b510:   68 0c 00 00 d7 e2 ff ff  88 0c 00 00 1e e3 ff ff   |h...............|
0x804b520:   ac 0c 00 00 86 e3 ff ff  d0 0c 00 00 3b e5 ff ff   |............;...|
0x804b530:   00 0d 00 00 bb fa ff ff  30 0d 00 00 23 fe ff ff   |........0...#...|
0x804b540:   68 0d 00 00 27 fe ff ff  7c 0d 00 00 30 fe ff ff   |h...'...|...0...|
0x804b550:   90 0d 00 00 90 fe ff ff  dc 0d 00 00 14            |.............   |
; section: .eh_frame
0x804b55c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b56c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b57c:   04 ce ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b58c:   30 00 00 00 60 cd ff ff  40 00 00 00 00 0e 08 46   |0...`...@......F|
0x804b59c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b5ac:   10 00 00 00 54 00 00 00  7c cd ff ff 08 00 00 00   |....T...|.......|
0x804b5bc:   00 00 00 00 1c 00 00 00  68 00 00 00 8e ce ff ff   |........h.......|
0x804b5cc:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b5dc:   04 04 00 00 20 00 00 00  88 00 00 00 7e ce ff ff   |.... .......~...|
0x804b5ec:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b5fc:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b60c:   88 ce ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b61c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b62c:   86 ce ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b63c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b64c:   8e ce ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b65c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b66c:   98 ce ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b67c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b68c:   a1 ce ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b69c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b6ac:   c4 ce ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b6bc:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b6cc:   e5 ce ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b6dc:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b6ec:   90 01 00 00 19 cf ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b6fc:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b70c:   1c 00 00 00 b4 01 00 00  47 cf ff ff 3d 00 00 00   |........G...=...|
0x804b71c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b72c:   1c 00 00 00 d4 01 00 00  64 cf ff ff 37 00 00 00   |........d...7...|
0x804b73c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b74c:   1c 00 00 00 f4 01 00 00  7b cf ff ff 1f 00 00 00   |........{.......|
0x804b75c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b76c:   1c 00 00 00 14 02 00 00  7a cf ff ff 2a 00 00 00   |........z...*...|
0x804b77c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b78c:   1c 00 00 00 34 02 00 00  84 cf ff ff 2c 00 00 00   |....4.......,...|
0x804b79c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b7ac:   1c 00 00 00 54 02 00 00  90 cf ff ff 2b 00 00 00   |....T.......+...|
0x804b7bc:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b7cc:   1c 00 00 00 74 02 00 00  9b cf ff ff 49 00 00 00   |....t.......I...|
0x804b7dc:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b7ec:   1c 00 00 00 94 02 00 00  c4 cf ff ff 47 00 00 00   |............G...|
0x804b7fc:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b80c:   20 00 00 00 b4 02 00 00  eb cf ff ff 5a 00 00 00   | ...........Z...|
0x804b81c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b82c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 21 d0 ff ff   |.... .......!...|
0x804b83c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b84c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b85c:   51 d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |Q...?....A....B.|
0x804b86c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b87c:   70 d0 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |p...9....A....B.|
0x804b88c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b89c:   89 d0 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b8ac:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b8bc:   8b d0 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b8cc:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b8dc:   b9 d0 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b8ec:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b8fc:   d5 d0 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b90c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b91c:   3e d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |>...2....A....B.|
0x804b92c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b93c:   50 d1 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |P...0....A....B.|
0x804b94c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b95c:   60 d1 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |`...E....A....B.|
0x804b96c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b97c:   85 d1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b98c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b99c:   a4 d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b9ac:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b9bc:   b6 d1 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b9cc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b9dc:   c2 d1 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b9ec:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b9fc:   c0 d1 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804ba0c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804ba1c:   c8 d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ba2c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804ba3c:   cd d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ba4c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804ba5c:   d2 d1 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804ba6c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804ba7c:   e9 d1 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804ba8c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804ba9c:   fd d1 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804baac:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804babc:   60 05 00 00 2b d2 ff ff  4c 00 00 00 00 41 0e 08   |`...+...L....A..|
0x804bacc:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804badc:   1c 00 00 00 84 05 00 00  53 d2 ff ff 37 00 00 00   |........S...7...|
0x804baec:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bafc:   1c 00 00 00 a4 05 00 00  6a d2 ff ff 31 00 00 00   |........j...1...|
0x804bb0c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bb1c:   1c 00 00 00 c4 05 00 00  7b d2 ff ff 1f 00 00 00   |........{.......|
0x804bb2c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bb3c:   1c 00 00 00 e4 05 00 00  7a d2 ff ff 2a 00 00 00   |........z...*...|
0x804bb4c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bb5c:   1c 00 00 00 04 06 00 00  84 d2 ff ff 28 00 00 00   |............(...|
0x804bb6c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bb7c:   1c 00 00 00 24 06 00 00  8c d2 ff ff 29 00 00 00   |....$.......)...|
0x804bb8c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bb9c:   1c 00 00 00 44 06 00 00  95 d2 ff ff 3c 00 00 00   |....D.......<...|
0x804bbac:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bbbc:   1c 00 00 00 64 06 00 00  b1 d2 ff ff 3a 00 00 00   |....d.......:...|
0x804bbcc:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bbdc:   20 00 00 00 84 06 00 00  cb d2 ff ff 53 00 00 00   | ...........S...|
0x804bbec:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bbfc:   c5 0c 04 04 20 00 00 00  a8 06 00 00 fa d2 ff ff   |.... ...........|
0x804bc0c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bc1c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bc2c:   23 d3 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |#...8....A....B.|
0x804bc3c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bc4c:   3b d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |;...2....A....B.|
0x804bc5c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bc6c:   4d d3 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |M........A....B.|
0x804bc7c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bc8c:   41 d3 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |A........A....B.|
0x804bc9c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bcac:   38 d3 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |8........A....B.|
0x804bcbc:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bccc:   2d d3 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |-........A....B.|
0x804bcdc:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bcec:   23 d3 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |#...'....A....B.|
0x804bcfc:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bd0c:   2a d3 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |*...%....A....B.|
0x804bd1c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bd2c:   2f d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |/...?....A....B.|
0x804bd3c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bd4c:   4e d3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |N...9....A....B.|
0x804bd5c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bd6c:   67 d3 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |g...,....A....B.|
0x804bd7c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bd8c:   73 d3 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |s...&....A....B.|
0x804bd9c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bdac:   79 d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |y...B....A....B.|
0x804bdbc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bdcc:   9b d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bddc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bdec:   bd d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bdfc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804be0c:   df d3 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804be1c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804be2c:   34 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |4...]....A....B.|
0x804be3c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804be4c:   71 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |q...]....A....B.|
0x804be5c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804be6c:   ae d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804be7c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804be8c:   eb d4 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804be9c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804beac:   5b d5 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |[...d....A....B.|
0x804bebc:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804becc:   9f d5 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804bedc:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804beec:   ef d5 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804befc:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bf0c:   b0 09 00 00 12 d6 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804bf1c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bf2c:   d0 09 00 00 47 d6 ff ff  47 00 00 00 00 41 0e 08   |....G...G....A..|
0x804bf3c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bf4c:   20 00 00 00 f4 09 00 00  6a d6 ff ff 68 00 00 00   | .......j...h...|
0x804bf5c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bf6c:   0c 04 04 00 2c 00 00 00  18 0a 00 00 ae d6 ff ff   |....,...........|
0x804bf7c:   b5 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804bf8c:   86 04 83 05 03 a8 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bf9c:   04 00 00 00 2c 00 00 00  48 0a 00 00 33 d8 ff ff   |....,...H...3...|
0x804bfac:   80 15 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804bfbc:   86 04 83 05 03 70 15 c3  41 c6 41 c7 41 c5 0c 04   |.....p..A.A.A...|
0x804bfcc:   04 00 00 00 34 00 00 00  78 0a 00 00 83 ed ff ff   |....4...x.......|
0x804bfdc:   68 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |h....D...G...u.D|
0x804bfec:   0f 03 75 78 06 10 03 02  75 7c 03 53 03 c1 0c 01   |..ux....u|.S....|
0x804bffc:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804c00c:   b0 0a 00 00 b3 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804c01c:   10 00 00 00 c4 0a 00 00  a3 f0 ff ff 04 00 00 00   |................|
0x804c02c:   00 00 00 00 48 00 00 00  d8 0a 00 00 98 f0 ff ff   |....H...........|
0x804c03c:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c04c:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c05c:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c06c:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c07c:   10 00 00 00 24 0b 00 00  ac f0 ff ff 02 00 00 00   |....$...........|
0x804c08c:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 34 b1 04 08  19 00 00 00 0c df 04 08   |....4...........|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 62 78 47 60   |............bxG`|
0x804e028:   fb eb 6f b6 a6 fd 5c 6b  2f be 00 00 c7 be 65 06   |..o...\k/.....e.|
0x804e038:   77 2b f2 0f 01 00 00 00  ff ff 08 00 68 b3 99 ff   |w+..........h...|
0x804e048:   02 00 00 00 3a 7b 49 8d  b0 02 01 00 32 50 51 59   |....:{I.....2PQY|
0x804e058:   fc ff 33 ff ??                                     |..3.?           |
