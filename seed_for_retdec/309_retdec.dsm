;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 17:01:31
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 80 dd ff ff               	lea eax, [ebx - 0x2280]
0x804835c:   50                              	push eax
0x804835d:   8d 83 20 dd ff ff               	lea eax, [ebx - 0x22e0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 2d aa 04 08               	mov eax, 0x804aa2d
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 58 d0 04 08                  	mov eax, 0x804d058
0x80483a5:   3d 58 d0 04 08                  	cmp eax, 0x804d058
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 58 d0 04 08                  	push 0x804d058
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 58 d0 04 08                  	mov eax, 0x804d058
0x80483e5:   2d 58 d0 04 08                  	sub eax, 0x804d058
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 58 d0 04 08                  	push 0x804d058
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 60 d0 04 08 00            	cmp byte ptr [0x804d060], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 60 d0 04 08 01            	mov byte ptr [0x804d060], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 b9 28 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 a5 28 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 a0 dd ff ff               	lea edx, [eax - 0x2260]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 78 28 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 5a 28 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 32 28 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 08 28 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 df 27 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 9c 27 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 5a 27 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 02 27 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 b1 26 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 74 26 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 3d 26 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 1e 26 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 f4 25 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 c8 25 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 9d 25 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 54 25 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 0c 25 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 b2 24 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 5f 24 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 20 24 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 ea 23 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 c8 23 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 7a 23 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 3e 23 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 b5 22 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 83 22 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 53 22 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 0e 22 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 cf 21 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 9d 21 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 6e 21 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 50 21 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 28 21 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 03 21 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 de 20 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 a7 20 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 72 20 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 20 20 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 d5 1f 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 9e 1f 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 6d 1f 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 4e 1f 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 24 1f 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 fc 1e 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 d3 1e 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 97 1e 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 5c 1e 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 09 1e 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 bd 1d 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 85 1d 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 56 1d 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 42 1d 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 2b 1d 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 16 1d 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 00 1d 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 d9 1c 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 b4 1c 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 75 1c 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 3c 1c 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 10 1c 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 ea 1b 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 70 de ff ff               	fld dword ptr [eax - 0x2190]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 70 de ff ff               	fld dword ptr [eax - 0x2190]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 74 de ff ff               	fld dword ptr [eax - 0x218c]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 a8 1b 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 70 de ff ff               	fld dword ptr [eax - 0x2190]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 70 de ff ff               	fld dword ptr [eax - 0x2190]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 74 de ff ff               	fld dword ptr [eax - 0x218c]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 66 1b 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 78 de ff ff               	fld dword ptr [eax - 0x2188]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 7c de ff ff               	fld dword ptr [eax - 0x2184]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 80 de ff ff               	fld dword ptr [eax - 0x2180]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 24 1b 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 84 de ff ff               	fld dword ptr [eax - 0x217c]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 88 de ff ff               	fld dword ptr [eax - 0x2178]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 8c de ff ff               	fld dword ptr [eax - 0x2174]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 ac 1a 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 90 de ff ff               	fld qword ptr [eax - 0x2170]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 90 de ff ff               	fld qword ptr [eax - 0x2170]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 98 de ff ff               	fld qword ptr [eax - 0x2168]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 4f 1a 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 90 de ff ff               	fld qword ptr [eax - 0x2170]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 90 de ff ff               	fld qword ptr [eax - 0x2170]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 98 de ff ff               	fld qword ptr [eax - 0x2168]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 f2 19 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 a0 de ff ff               	fld qword ptr [eax - 0x2160]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 a8 de ff ff               	fld qword ptr [eax - 0x2158]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 b0 de ff ff               	fld qword ptr [eax - 0x2150]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 95 19 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 b8 de ff ff               	fld qword ptr [eax - 0x2148]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 c0 de ff ff               	fld qword ptr [eax - 0x2140]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 c8 de ff ff               	fld qword ptr [eax - 0x2138]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 05 19 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 d0 de ff ff               	fld dword ptr [eax - 0x2130]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 d4 de ff ff               	fld dword ptr [eax - 0x212c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 a1 18 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 80 00 00 00            	mov dword ptr [eax + edx*4 + 0x80], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 30 18 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 80 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0x80]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 ed 17 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 b0 dd ff ff               	lea eax, [ebx - 0x2250]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 d4 dd ff ff               	lea eax, [ebx - 0x222c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80497bf
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 60                        	sub esp, 0x60
0x804962f:   e8 e7 16 00 00                  	call 0x804ad1b <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 39 00 00               	add edx, 0x39cc
0x804963a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804963d:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049640:   8b 4d 10                        	mov ecx, dword ptr [ebp + 0x10]
0x8049643:   8b 5d 14                        	mov ebx, dword ptr [ebp + 0x14]
0x8049646:   8b 75 20                        	mov esi, dword ptr [ebp + 0x20]
0x8049649:   8b 7d 28                        	mov edi, dword ptr [ebp + 0x28]
0x804964c:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x804964f:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049652:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049655:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049658:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x804965b:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804965e:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049661:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049664:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x8049667:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804966a:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x804966d:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049670:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049673:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049676:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x8049679:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804967c:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x804967f:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049682:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x8049686:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x8049689:   89 c8                           	mov eax, ecx
0x804968b:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x804968f:   89 d8                           	mov eax, ebx
0x8049691:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x8049694:   89 f0                           	mov eax, esi
0x8049696:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x8049699:   89 f8                           	mov eax, edi
0x804969b:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x804969f:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x80496a3:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496a7:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x80496ab:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496af:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x80496b3:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496b7:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496bb:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496bf:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80496c3:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496c7:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496cb:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x80496cf:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x80496d3:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496d7:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x80496db:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x80496df:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x80496e3:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x80496e6:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x80496ea:   88 82 24 00 00 00               	mov byte ptr [edx + 0x24], al
0x80496f0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80496f3:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x80496f9:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x80496fd:   66 89 82 2c 00 00 00            	mov word ptr [edx + 0x2c], ax
0x8049704:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x8049708:   88 82 2e 00 00 00               	mov byte ptr [edx + 0x2e], al
0x804970e:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x8049711:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x8049717:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x804971a:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x8049720:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x8049724:   88 82 38 00 00 00               	mov byte ptr [edx + 0x38], al
0x804972a:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x804972d:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x8049733:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x8049737:   66 89 82 40 00 00 00            	mov word ptr [edx + 0x40], ax
0x804973e:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049742:   66 89 82 42 00 00 00            	mov word ptr [edx + 0x42], ax
0x8049749:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x804974d:   66 89 82 44 00 00 00            	mov word ptr [edx + 0x44], ax
0x8049754:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x8049758:   66 89 82 84 04 00 00            	mov word ptr [edx + 0x484], ax
0x804975f:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x8049763:   66 89 82 46 00 00 00            	mov word ptr [edx + 0x46], ax
0x804976a:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x804976e:   66 89 82 86 04 00 00            	mov word ptr [edx + 0x486], ax
0x8049775:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x8049779:   66 89 82 48 00 00 00            	mov word ptr [edx + 0x48], ax
0x8049780:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x8049784:   66 89 82 4a 00 00 00            	mov word ptr [edx + 0x4a], ax
0x804978b:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x804978e:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x8049794:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x8049798:   66 89 82 50 00 00 00            	mov word ptr [edx + 0x50], ax
0x804979f:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x80497a3:   88 82 52 00 00 00               	mov byte ptr [edx + 0x52], al
0x80497a9:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x80497ac:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x80497b2:   b8 00 00 00 00                  	mov eax, 0
0x80497b7:   83 c4 60                        	add esp, 0x60
0x80497ba:   5b                              	pop ebx
0x80497bb:   5e                              	pop esi
0x80497bc:   5f                              	pop edi
0x80497bd:   5d                              	pop ebp
0x80497be:   c3                              	ret 
; function: func_1 at 0x80497bf -- 0x804aa2d
0x80497bf:   55                              	push ebp
0x80497c0:   89 e5                           	mov ebp, esp
0x80497c2:   57                              	push edi
0x80497c3:   56                              	push esi
0x80497c4:   53                              	push ebx
0x80497c5:   81 ec 20 01 00 00               	sub esp, 0x120
0x80497cb:   e8 47 15 00 00                  	call 0x804ad17 <__x86.get_pc_thunk.ax>
0x80497d0:   05 30 38 00 00                  	add eax, 0x3830
0x80497d5:   c6 45 f3 01                     	mov byte ptr [ebp - 0xd], 1
0x80497d9:   c7 45 ec 01 00 00 00            	mov dword ptr [ebp - 0x14], 1
0x80497e0:   66 c7 45 ea 02 00               	mov word ptr [ebp - 0x16], 2
0x80497e6:   c6 45 e9 ce                     	mov byte ptr [ebp - 0x17], 0xce
0x80497ea:   c7 45 e4 61 d8 18 80            	mov dword ptr [ebp - 0x1c], 0x8018d861
0x80497f1:   c7 45 e0 c0 82 c0 2f            	mov dword ptr [ebp - 0x20], 0x2fc082c0
0x80497f8:   c6 45 df 01                     	mov byte ptr [ebp - 0x21], 1
0x80497fc:   c7 45 d8 ff ff ff ff            	mov dword ptr [ebp - 0x28], 0xffffffff
0x8049803:   66 c7 45 d6 08 00               	mov word ptr [ebp - 0x2a], 8
0x8049809:   66 c7 45 d4 7c 37               	mov word ptr [ebp - 0x2c], 0x377c
0x804980f:   66 c7 45 d2 ff ff               	mov word ptr [ebp - 0x2e], 0xffff
0x8049815:   66 c7 45 d0 00 00               	mov word ptr [ebp - 0x30], 0
0x804981b:   66 c7 45 ce fd ff               	mov word ptr [ebp - 0x32], 0xfffd
0x8049821:   66 c7 45 cc 00 00               	mov word ptr [ebp - 0x34], 0
0x8049827:   66 c7 45 ca 18 f6               	mov word ptr [ebp - 0x36], 0xf618
0x804982d:   66 c7 45 c8 01 00               	mov word ptr [ebp - 0x38], 1
0x8049833:   c7 45 c4 7d f4 ea 22            	mov dword ptr [ebp - 0x3c], 0x22eaf47d
0x804983a:   66 c7 45 c2 fa fe               	mov word ptr [ebp - 0x3e], 0xfefa
0x8049840:   c6 45 c1 9e                     	mov byte ptr [ebp - 0x3f], 0x9e
0x8049844:   c7 45 bc f9 ff ff ff            	mov dword ptr [ebp - 0x44], 0xfffffff9
0x804984b:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x8049852:   c7 45 b4 d1 83 e2 f1            	mov dword ptr [ebp - 0x4c], 0xf1e283d1
0x8049859:   c7 45 b0 f6 ff ff ff            	mov dword ptr [ebp - 0x50], 0xfffffff6
0x8049860:   c7 45 ac 90 19 a2 94            	mov dword ptr [ebp - 0x54], 0x94a21990
0x8049867:   66 c7 45 aa 01 00               	mov word ptr [ebp - 0x56], 1
0x804986d:   c7 45 a4 c0 c5 15 45            	mov dword ptr [ebp - 0x5c], 0x4515c5c0
0x8049874:   c7 45 a0 cf d8 9d 9f            	mov dword ptr [ebp - 0x60], 0x9f9dd8cf
0x804987b:   c6 45 9f 64                     	mov byte ptr [ebp - 0x61], 0x64
0x804987f:   c7 45 98 e2 82 6a 69            	mov dword ptr [ebp - 0x68], 0x696a82e2
0x8049886:   c7 45 94 ce 1d 34 17            	mov dword ptr [ebp - 0x6c], 0x17341dce
0x804988d:   66 c7 45 92 04 00               	mov word ptr [ebp - 0x6e], 4
0x8049893:   c6 45 91 ab                     	mov byte ptr [ebp - 0x6f], 0xab
0x8049897:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x804989b:   74 18                           	je 0x80498b5 <func_1+0xf6>
0x804989d:   c7 45 b4 00 00 00 00            	mov dword ptr [ebp - 0x4c], 0
0x80498a4:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x80498a7:   23 45 b8                        	and eax, dword ptr [ebp - 0x48]
0x80498aa:   85 c0                           	test eax, eax
0x80498ac:   74 07                           	je 0x80498b5 <func_1+0xf6>
0x80498ae:   b8 01 00 00 00                  	mov eax, 1
0x80498b3:   eb 05                           	jmp 0x80498ba <func_1+0xfb>
0x80498b5:   b8 00 00 00 00                  	mov eax, 0
0x80498ba:   09 45 b0                        	or dword ptr [ebp - 0x50], eax
0x80498bd:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x80498c1:   39 45 b0                        	cmp dword ptr [ebp - 0x50], eax
0x80498c4:   0f 92 c0                        	setb al
0x80498c7:   0f b6 d0                        	movzx edx, al
0x80498ca:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x80498ce:   39 c2                           	cmp edx, eax
0x80498d0:   0f 95 c0                        	setne al
0x80498d3:   0f b6 d0                        	movzx edx, al
0x80498d6:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x80498d9:   0f be c0                        	movsx eax, al
0x80498dc:   0f af c2                        	imul eax, edx
0x80498df:   85 c0                           	test eax, eax
0x80498e1:   75 0d                           	jne 0x80498f0 <func_1+0x131>
0x80498e3:   83 7d b4 00                     	cmp dword ptr [ebp - 0x4c], 0
0x80498e7:   75 07                           	jne 0x80498f0 <func_1+0x131>
0x80498e9:   b8 01 00 00 00                  	mov eax, 1
0x80498ee:   eb 05                           	jmp 0x80498f5 <func_1+0x136>
0x80498f0:   b8 00 00 00 00                  	mov eax, 0
0x80498f5:   09 45 ec                        	or dword ptr [ebp - 0x14], eax
0x80498f8:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x80498fb:   89 c2                           	mov edx, eax
0x80498fd:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049900:   0f b6 c0                        	movzx eax, al
0x8049903:   83 e8 3d                        	sub eax, 0x3d
0x8049906:   66 09 45 aa                     	or word ptr [ebp - 0x56], ax
0x804990a:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804990e:   01 d0                           	add eax, edx
0x8049910:   0f be d0                        	movsx edx, al
0x8049913:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049916:   0f be c0                        	movsx eax, al
0x8049919:   0f af c2                        	imul eax, edx
0x804991c:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804991f:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049923:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x8049926:   c7 85 30 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xd0], 1
0x8049930:   66 c7 45 8e 09 00               	mov word ptr [ebp - 0x72], 9
0x8049936:   c7 45 88 04 00 00 00            	mov dword ptr [ebp - 0x78], 4
0x804993d:   c6 85 6b ff ff ff 07            	mov byte ptr [ebp - 0x95], 7
0x8049944:   c7 85 64 ff ff ff 1f b3 0a 80   	mov dword ptr [ebp - 0x9c], 0x800ab31f
0x804994e:   c7 45 84 01 00 00 00            	mov dword ptr [ebp - 0x7c], 1
0x8049955:   c7 85 60 ff ff ff 6f 6e d3 a7   	mov dword ptr [ebp - 0xa0], 0xa7d36e6f
0x804995f:   c6 85 5f ff ff ff 09            	mov byte ptr [ebp - 0xa1], 9
0x8049966:   83 bd 30 ff ff ff 00            	cmp dword ptr [ebp - 0xd0], 0
0x804996d:   74 7c                           	je 0x80499eb <func_1+0x22c>
0x804996f:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049972:   0f b6 d8                        	movzx ebx, al
0x8049975:   b8 01 00 00 00                  	mov eax, 1
0x804997a:   ba 00 00 00 00                  	mov edx, 0
0x804997f:   f7 75 b8                        	div dword ptr [ebp - 0x48]
0x8049982:   23 45 b8                        	and eax, dword ptr [ebp - 0x48]
0x8049985:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049988:   81 7d b4 80 00 00 00            	cmp dword ptr [ebp - 0x4c], 0x80
0x804998f:   0f 9e c0                        	setle al
0x8049992:   0f b6 c0                        	movzx eax, al
0x8049995:   8b 95 30 ff ff ff               	mov edx, dword ptr [ebp - 0xd0]
0x804999b:   0f b6 ca                        	movzx ecx, dl
0x804999e:   99                              	cdq 
0x804999f:   f7 f9                           	idiv ecx
0x80499a1:   89 d0                           	mov eax, edx
0x80499a3:   66 98                           	cbw 
0x80499a5:   c1 e0 03                        	shl eax, 3
0x80499a8:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x80499ac:   74 0e                           	je 0x80499bc <func_1+0x1fd>
0x80499ae:   66 83 7d aa 00                  	cmp word ptr [ebp - 0x56], 0
0x80499b3:   74 07                           	je 0x80499bc <func_1+0x1fd>
0x80499b5:   b8 01 00 00 00                  	mov eax, 1
0x80499ba:   eb 05                           	jmp 0x80499c1 <func_1+0x202>
0x80499bc:   b8 00 00 00 00                  	mov eax, 0
0x80499c1:   0f bf d0                        	movsx edx, ax
0x80499c4:   0f bf 45 aa                     	movsx eax, word ptr [ebp - 0x56]
0x80499c8:   89 c1                           	mov ecx, eax
0x80499ca:   d3 fa                           	sar edx, cl
0x80499cc:   89 d0                           	mov eax, edx
0x80499ce:   85 c0                           	test eax, eax
0x80499d0:   0f 94 c0                        	sete al
0x80499d3:   0f b6 c0                        	movzx eax, al
0x80499d6:   0f af c3                        	imul eax, ebx
0x80499d9:   89 c2                           	mov edx, eax
0x80499db:   0f b7 45 8e                     	movzx eax, word ptr [ebp - 0x72]
0x80499df:   01 d0                           	add eax, edx
0x80499e1:   85 c0                           	test eax, eax
0x80499e3:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x80499e7:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x80499ea:   90                              	nop 
0x80499eb:   66 c7 85 5c ff ff ff 64 de      	mov word ptr [ebp - 0xa4], 0xde64
0x80499f4:   c7 85 58 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xa8], 1
0x80499fe:   c7 85 54 ff ff ff ce d7 4c eb   	mov dword ptr [ebp - 0xac], 0xeb4cd7ce
0x8049a08:   c7 45 80 33 6d 95 0e            	mov dword ptr [ebp - 0x80], 0xe956d33
0x8049a0f:   c7 85 50 ff ff ff 18 08 e0 94   	mov dword ptr [ebp - 0xb0], 0x94e00818
0x8049a19:   66 c7 85 4e ff ff ff 54 16      	mov word ptr [ebp - 0xb2], 0x1654
0x8049a22:   66 c7 85 44 ff ff ff 02 00      	mov word ptr [ebp - 0xbc], 2
0x8049a2b:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049a2f:   3d 6f 2a 85 9a                  	cmp eax, 0x9a852a6f
0x8049a34:   0f 93 c0                        	setae al
0x8049a37:   0f b6 c0                        	movzx eax, al
0x8049a3a:   66 21 85 5c ff ff ff            	and word ptr [ebp - 0xa4], ax
0x8049a41:   0f b7 85 5c ff ff ff            	movzx eax, word ptr [ebp - 0xa4]
0x8049a48:   89 c1                           	mov ecx, eax
0x8049a4a:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049a4d:   21 45 ac                        	and dword ptr [ebp - 0x54], eax
0x8049a50:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049a53:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049a56:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049a5a:   39 45 b4                        	cmp dword ptr [ebp - 0x4c], eax
0x8049a5d:   74 07                           	je 0x8049a66 <func_1+0x2a7>
0x8049a5f:   66 83 7d ea 00                  	cmp word ptr [ebp - 0x16], 0
0x8049a64:   74 07                           	je 0x8049a6d <func_1+0x2ae>
0x8049a66:   b8 01 00 00 00                  	mov eax, 1
0x8049a6b:   eb 05                           	jmp 0x8049a72 <func_1+0x2b3>
0x8049a6d:   b8 00 00 00 00                  	mov eax, 0
0x8049a72:   89 c2                           	mov edx, eax
0x8049a74:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049a77:   31 c2                           	xor edx, eax
0x8049a79:   0f b6 c1                        	movzx eax, cl
0x8049a7c:   f6 f2                           	div dl
0x8049a7e:   0f b6 c4                        	movzx eax, ah
0x8049a81:   0f b6 c0                        	movzx eax, al
0x8049a84:   89 85 58 ff ff ff               	mov dword ptr [ebp - 0xa8], eax
0x8049a8a:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x8049a8e:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x8049a94:   0f b7 d8                        	movzx ebx, ax
0x8049a97:   b8 01 00 00 00                  	mov eax, 1
0x8049a9c:   99                              	cdq 
0x8049a9d:   f7 fb                           	idiv ebx
0x8049a9f:   89 d0                           	mov eax, edx
0x8049aa1:   0f b7 c0                        	movzx eax, ax
0x8049aa4:   01 c8                           	add eax, ecx
0x8049aa6:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x8049aa9:   0f 87 48 03 00 00               	ja 0x8049df7 <func_1+0x638>
0x8049aaf:   c6 85 2f ff ff ff f8            	mov byte ptr [ebp - 0xd1], 0xf8
0x8049ab6:   c6 85 2e ff ff ff aa            	mov byte ptr [ebp - 0xd2], 0xaa
0x8049abd:   c7 85 28 ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0xd8], 0xfffffffb
0x8049ac7:   c7 85 24 ff ff ff ca da e7 1d   	mov dword ptr [ebp - 0xdc], 0x1de7daca
0x8049ad1:   0f b6 4d f3                     	movzx ecx, byte ptr [ebp - 0xd]
0x8049ad5:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049ad8:   89 c2                           	mov edx, eax
0x8049ada:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049ade:   0f b6 c0                        	movzx eax, al
0x8049ae1:   f6 f2                           	div dl
0x8049ae3:   0f b6 c4                        	movzx eax, ah
0x8049ae6:   0f b6 c0                        	movzx eax, al
0x8049ae9:   0f b6 bd 2f ff ff ff            	movzx edi, byte ptr [ebp - 0xd1]
0x8049af0:   99                              	cdq 
0x8049af1:   f7 ff                           	idiv edi
0x8049af3:   21 c1                           	and ecx, eax
0x8049af5:   89 ca                           	mov edx, ecx
0x8049af7:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049afb:   21 d0                           	and eax, edx
0x8049afd:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x8049b01:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049b04:   89 c1                           	mov ecx, eax
0x8049b06:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049b0a:   ba 00 00 00 00                  	mov edx, 0
0x8049b0f:   66 f7 f1                        	div cx
0x8049b12:   89 d0                           	mov eax, edx
0x8049b14:   0f b7 c0                        	movzx eax, ax
0x8049b17:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x8049b1d:   83 bd 64 ff ff ff 00            	cmp dword ptr [ebp - 0x9c], 0
0x8049b24:   0f 84 d2 00 00 00               	je 0x8049bfc <func_1+0x43d>
0x8049b2a:   66 c7 45 8e 00 00               	mov word ptr [ebp - 0x72], 0
0x8049b30:   66 83 7d 8e 0e                  	cmp word ptr [ebp - 0x72], 0xe
0x8049b35:   0f 86 e9 07 00 00               	jbe 0x804a324 <func_1+0xb65>
0x8049b3b:   0f b6 45 c1                     	movzx eax, byte ptr [ebp - 0x3f]
0x8049b3f:   0f bf 4d c2                     	movsx ecx, word ptr [ebp - 0x3e]
0x8049b43:   0f bf 7d c8                     	movsx edi, word ptr [ebp - 0x38]
0x8049b47:   0f bf 75 ca                     	movsx esi, word ptr [ebp - 0x36]
0x8049b4b:   89 b5 f0 fe ff ff               	mov dword ptr [ebp - 0x110], esi
0x8049b51:   0f bf 5d cc                     	movsx ebx, word ptr [ebp - 0x34]
0x8049b55:   89 9d ec fe ff ff               	mov dword ptr [ebp - 0x114], ebx
0x8049b5b:   0f bf 55 ce                     	movsx edx, word ptr [ebp - 0x32]
0x8049b5f:   89 95 e8 fe ff ff               	mov dword ptr [ebp - 0x118], edx
0x8049b65:   0f b7 75 d0                     	movzx esi, word ptr [ebp - 0x30]
0x8049b69:   89 b5 e4 fe ff ff               	mov dword ptr [ebp - 0x11c], esi
0x8049b6f:   0f bf 5d d2                     	movsx ebx, word ptr [ebp - 0x2e]
0x8049b73:   89 9d e0 fe ff ff               	mov dword ptr [ebp - 0x120], ebx
0x8049b79:   0f b7 55 d4                     	movzx edx, word ptr [ebp - 0x2c]
0x8049b7d:   89 95 dc fe ff ff               	mov dword ptr [ebp - 0x124], edx
0x8049b83:   0f b7 75 d6                     	movzx esi, word ptr [ebp - 0x2a]
0x8049b87:   89 b5 d8 fe ff ff               	mov dword ptr [ebp - 0x128], esi
0x8049b8d:   0f be 5d df                     	movsx ebx, byte ptr [ebp - 0x21]
0x8049b91:   89 9d d4 fe ff ff               	mov dword ptr [ebp - 0x12c], ebx
0x8049b97:   0f be 75 e9                     	movsx esi, byte ptr [ebp - 0x17]
0x8049b9b:   0f b7 5d ea                     	movzx ebx, word ptr [ebp - 0x16]
0x8049b9f:   0f b6 55 f3                     	movzx edx, byte ptr [ebp - 0xd]
0x8049ba3:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049ba6:   50                              	push eax
0x8049ba7:   51                              	push ecx
0x8049ba8:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049bab:   57                              	push edi
0x8049bac:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x8049bb2:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x8049bb8:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x8049bbe:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x8049bc4:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x8049bca:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x8049bd0:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x8049bd6:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049bd9:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x8049bdf:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049be2:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049be5:   56                              	push esi
0x8049be6:   53                              	push ebx
0x8049be7:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049bea:   52                              	push edx
0x8049beb:   e8 36 fa ff ff                  	call 0x8049626 <set_var>
0x8049bf0:   83 c4 50                        	add esp, 0x50
0x8049bf3:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049bf7:   e9 29 0e 00 00                  	jmp 0x804aa25 <func_1+0x1266>
0x8049bfc:   c6 85 23 ff ff ff 06            	mov byte ptr [ebp - 0xdd], 6
0x8049c03:   c7 85 7c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x84], 0xffffffff
0x8049c0d:   66 83 7d ea 00                  	cmp word ptr [ebp - 0x16], 0
0x8049c12:   75 13                           	jne 0x8049c27 <func_1+0x468>
0x8049c14:   c7 85 7c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x84], 0
0x8049c1e:   80 bd 2f ff ff ff 00            	cmp byte ptr [ebp - 0xd1], 0
0x8049c25:   75 07                           	jne 0x8049c2e <func_1+0x46f>
0x8049c27:   b8 01 00 00 00                  	mov eax, 1
0x8049c2c:   eb 05                           	jmp 0x8049c33 <func_1+0x474>
0x8049c2e:   b8 00 00 00 00                  	mov eax, 0
0x8049c33:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x8049c36:   c7 45 80 0b 00 00 00            	mov dword ptr [ebp - 0x80], 0xb
0x8049c3d:   eb 33                           	jmp 0x8049c72 <func_1+0x4b3>
0x8049c3f:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049c42:   f6 65 f3                        	mul byte ptr [ebp - 0xd]
0x8049c45:   89 c2                           	mov edx, eax
0x8049c47:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049c4a:   31 d0                           	xor eax, edx
0x8049c4c:   0f be f8                        	movsx edi, al
0x8049c4f:   b8 b6 ff ff ff                  	mov eax, 0xffffffb6
0x8049c54:   99                              	cdq 
0x8049c55:   f7 ff                           	idiv edi
0x8049c57:   0f b6 d0                        	movzx edx, al
0x8049c5a:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049c5e:   89 c1                           	mov ecx, eax
0x8049c60:   d3 fa                           	sar edx, cl
0x8049c62:   89 d0                           	mov eax, edx
0x8049c64:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049c67:   c7 45 ec 01 00 00 00            	mov dword ptr [ebp - 0x14], 1
0x8049c6e:   83 6d 80 01                     	sub dword ptr [ebp - 0x80], 1
0x8049c72:   83 7d 80 ea                     	cmp dword ptr [ebp - 0x80], -0x16
0x8049c76:   75 c7                           	jne 0x8049c3f <func_1+0x480>
0x8049c78:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049c7c:   09 85 64 ff ff ff               	or dword ptr [ebp - 0x9c], eax
0x8049c82:   b8 00 00 00 00                  	mov eax, 0
0x8049c87:   0f b7 55 ea                     	movzx edx, word ptr [ebp - 0x16]
0x8049c8b:   31 85 58 ff ff ff               	xor dword ptr [ebp - 0xa8], eax
0x8049c91:   8b 8d 58 ff ff ff               	mov ecx, dword ptr [ebp - 0xa8]
0x8049c97:   0f b6 85 2e ff ff ff            	movzx eax, byte ptr [ebp - 0xd2]
0x8049c9e:   29 c1                           	sub ecx, eax
0x8049ca0:   89 c8                           	mov eax, ecx
0x8049ca2:   3d 71 7f 4a d6                  	cmp eax, 0xd64a7f71
0x8049ca7:   0f 96 c0                        	setbe al
0x8049caa:   0f b6 c0                        	movzx eax, al
0x8049cad:   39 c2                           	cmp edx, eax
0x8049caf:   0f 9f c0                        	setg al
0x8049cb2:   89 c2                           	mov edx, eax
0x8049cb4:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049cb7:   21 d0                           	and eax, edx
0x8049cb9:   88 45 e9                        	mov byte ptr [ebp - 0x17], al
0x8049cbc:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x8049cc2:   89 85 24 ff ff ff               	mov dword ptr [ebp - 0xdc], eax
0x8049cc8:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x8049cce:   0f b7 c0                        	movzx eax, ax
0x8049cd1:   c1 e0 0b                        	shl eax, 0xb
0x8049cd4:   83 f8 ff                        	cmp eax, -1
0x8049cd7:   74 6c                           	je 0x8049d45 <func_1+0x586>
0x8049cd9:   c6 85 1f ff ff ff 01            	mov byte ptr [ebp - 0xe1], 1
0x8049ce0:   0f b7 45 8e                     	movzx eax, word ptr [ebp - 0x72]
0x8049ce4:   20 45 e9                        	and byte ptr [ebp - 0x17], al
0x8049ce7:   80 7d e9 00                     	cmp byte ptr [ebp - 0x17], 0
0x8049ceb:   74 38                           	je 0x8049d25 <func_1+0x566>
0x8049ced:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049cf0:   c1 e0 06                        	shl eax, 6
0x8049cf3:   89 c2                           	mov edx, eax
0x8049cf5:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x8049cfb:   89 c1                           	mov ecx, eax
0x8049cfd:   0f b6 c2                        	movzx eax, dl
0x8049d00:   f6 f1                           	div cl
0x8049d02:   0f b6 c4                        	movzx eax, ah
0x8049d05:   0f b6 c0                        	movzx eax, al
0x8049d08:   66 39 45 ea                     	cmp word ptr [ebp - 0x16], ax
0x8049d0c:   0f 92 c0                        	setb al
0x8049d0f:   88 85 1f ff ff ff               	mov byte ptr [ebp - 0xe1], al
0x8049d15:   80 bd 1f ff ff ff 00            	cmp byte ptr [ebp - 0xe1], 0
0x8049d1c:   74 07                           	je 0x8049d25 <func_1+0x566>
0x8049d1e:   b8 01 00 00 00                  	mov eax, 1
0x8049d23:   eb 05                           	jmp 0x8049d2a <func_1+0x56b>
0x8049d25:   b8 00 00 00 00                  	mov eax, 0
0x8049d2a:   3b 45 b4                        	cmp eax, dword ptr [ebp - 0x4c]
0x8049d2d:   0f 9c c0                        	setl al
0x8049d30:   0f b6 c0                        	movzx eax, al
0x8049d33:   89 85 24 ff ff ff               	mov dword ptr [ebp - 0xdc], eax
0x8049d39:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x8049d3d:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049d40:   e9 df 05 00 00                  	jmp 0x804a324 <func_1+0xb65>
0x8049d45:   66 c7 85 20 ff ff ff ff ff      	mov word ptr [ebp - 0xe0], 0xffff
0x8049d4e:   83 bd 7c ff ff ff 00            	cmp dword ptr [ebp - 0x84], 0
0x8049d55:   74 07                           	je 0x8049d5e <func_1+0x59f>
0x8049d57:   b8 01 00 00 00                  	mov eax, 1
0x8049d5c:   eb 05                           	jmp 0x8049d63 <func_1+0x5a4>
0x8049d5e:   b8 00 00 00 00                  	mov eax, 0
0x8049d63:   31 45 e4                        	xor dword ptr [ebp - 0x1c], eax
0x8049d66:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049d69:   98                              	cwde 
0x8049d6a:   c1 e0 05                        	shl eax, 5
0x8049d6d:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049d70:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049d73:   89 c2                           	mov edx, eax
0x8049d75:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049d79:   21 d0                           	and eax, edx
0x8049d7b:   0f be c0                        	movsx eax, al
0x8049d7e:   c1 e0 04                        	shl eax, 4
0x8049d81:   33 45 ec                        	xor eax, dword ptr [ebp - 0x14]
0x8049d84:   89 c2                           	mov edx, eax
0x8049d86:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x8049d8a:   39 c2                           	cmp edx, eax
0x8049d8c:   0f 95 c0                        	setne al
0x8049d8f:   0f b6 c0                        	movzx eax, al
0x8049d92:   f7 d8                           	neg eax
0x8049d94:   66 89 85 20 ff ff ff            	mov word ptr [ebp - 0xe0], ax
0x8049d9b:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049d9e:   09 85 54 ff ff ff               	or dword ptr [ebp - 0xac], eax
0x8049da4:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049da7:   21 45 84                        	and dword ptr [ebp - 0x7c], eax
0x8049daa:   8b 4d 84                        	mov ecx, dword ptr [ebp - 0x7c]
0x8049dad:   0f b7 85 20 ff ff ff            	movzx eax, word ptr [ebp - 0xe0]
0x8049db4:   f7 d0                           	not eax
0x8049db6:   0f b6 d0                        	movzx edx, al
0x8049db9:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x8049dbf:   09 c8                           	or eax, ecx
0x8049dc1:   89 85 58 ff ff ff               	mov dword ptr [ebp - 0xa8], eax
0x8049dc7:   0f bf 85 20 ff ff ff            	movsx eax, word ptr [ebp - 0xe0]
0x8049dce:   39 85 58 ff ff ff               	cmp dword ptr [ebp - 0xa8], eax
0x8049dd4:   0f 95 c0                        	setne al
0x8049dd7:   0f b6 c0                        	movzx eax, al
0x8049dda:   0f af c2                        	imul eax, edx
0x8049ddd:   08 45 e9                        	or byte ptr [ebp - 0x17], al
0x8049de0:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x8049de6:   3b 45 ec                        	cmp eax, dword ptr [ebp - 0x14]
0x8049de9:   0f 94 c0                        	sete al
0x8049dec:   0f b6 c0                        	movzx eax, al
0x8049def:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049df2:   e9 2d 05 00 00                  	jmp 0x804a324 <func_1+0xb65>
0x8049df7:   c7 85 40 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xc0], 0xffffffff
0x8049e01:   c7 85 78 ff ff ff f8 1b 67 a5   	mov dword ptr [ebp - 0x88], 0xa5671bf8
0x8049e0b:   c7 85 74 ff ff ff 04 00 00 00   	mov dword ptr [ebp - 0x8c], 4
0x8049e15:   66 c7 85 4c ff ff ff ef 22      	mov word ptr [ebp - 0xb4], 0x22ef
0x8049e1e:   c7 85 3c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xc4], 0
0x8049e28:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x8049e2c:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x8049e32:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x8049e38:   0f b6 c0                        	movzx eax, al
0x8049e3b:   83 e0 75                        	and eax, 0x75
0x8049e3e:   8b 95 78 ff ff ff               	mov edx, dword ptr [ebp - 0x88]
0x8049e44:   0f b6 ca                        	movzx ecx, dl
0x8049e47:   99                              	cdq 
0x8049e48:   f7 f9                           	idiv ecx
0x8049e4a:   89 d0                           	mov eax, edx
0x8049e4c:   85 c0                           	test eax, eax
0x8049e4e:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049e51:   30 45 df                        	xor byte ptr [ebp - 0x21], al
0x8049e54:   0f be 55 df                     	movsx edx, byte ptr [ebp - 0x21]
0x8049e58:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049e5b:   98                              	cwde 
0x8049e5c:   39 c2                           	cmp edx, eax
0x8049e5e:   0f 84 09 02 00 00               	je 0x804a06d <func_1+0x8ae>
0x8049e64:   c7 85 34 ff ff ff 8c 6a d7 99   	mov dword ptr [ebp - 0xcc], 0x99d76a8c
0x8049e6e:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x8049e74:   0f be f8                        	movsx edi, al
0x8049e77:   b8 72 00 00 00                  	mov eax, 0x72
0x8049e7c:   99                              	cdq 
0x8049e7d:   f7 ff                           	idiv edi
0x8049e7f:   23 85 34 ff ff ff               	and eax, dword ptr [ebp - 0xcc]
0x8049e85:   3d 06 19 00 00                  	cmp eax, 0x1906
0x8049e8a:   0f 9f c0                        	setg al
0x8049e8d:   0f b6 d0                        	movzx edx, al
0x8049e90:   0f be 45 df                     	movsx eax, byte ptr [ebp - 0x21]
0x8049e94:   21 d0                           	and eax, edx
0x8049e96:   85 c0                           	test eax, eax
0x8049e98:   74 0d                           	je 0x8049ea7 <func_1+0x6e8>
0x8049e9a:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x8049e9e:   74 07                           	je 0x8049ea7 <func_1+0x6e8>
0x8049ea0:   b8 01 00 00 00                  	mov eax, 1
0x8049ea5:   eb 05                           	jmp 0x8049eac <func_1+0x6ed>
0x8049ea7:   b8 00 00 00 00                  	mov eax, 0
0x8049eac:   98                              	cwde 
0x8049ead:   ba 03 00 00 00                  	mov edx, 3
0x8049eb2:   89 c1                           	mov ecx, eax
0x8049eb4:   d3 fa                           	sar edx, cl
0x8049eb6:   89 d0                           	mov eax, edx
0x8049eb8:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049ebb:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049ebf:   c0 e8 02                        	shr al, 2
0x8049ec2:   0f b6 d0                        	movzx edx, al
0x8049ec5:   89 d0                           	mov eax, edx
0x8049ec7:   c1 e0 05                        	shl eax, 5
0x8049eca:   01 d0                           	add eax, edx
0x8049ecc:   01 c0                           	add eax, eax
0x8049ece:   01 d0                           	add eax, edx
0x8049ed0:   66 c1 e8 08                     	shr ax, 8
0x8049ed4:   c0 e8 03                        	shr al, 3
0x8049ed7:   0f b6 c8                        	movzx ecx, al
0x8049eda:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x8049ee0:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049ee3:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049ee6:   89 c3                           	mov ebx, eax
0x8049ee8:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049eeb:   98                              	cwde 
0x8049eec:   0f b7 55 ea                     	movzx edx, word ptr [ebp - 0x16]
0x8049ef0:   0f bf fa                        	movsx edi, dx
0x8049ef3:   99                              	cdq 
0x8049ef4:   f7 ff                           	idiv edi
0x8049ef6:   34 ac                           	xor al, 0xac
0x8049ef8:   89 c2                           	mov edx, eax
0x8049efa:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x8049efe:   31 d0                           	xor eax, edx
0x8049f00:   33 85 40 ff ff ff               	xor eax, dword ptr [ebp - 0xc0]
0x8049f06:   89 c2                           	mov edx, eax
0x8049f08:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x8049f0e:   29 c2                           	sub edx, eax
0x8049f10:   89 d0                           	mov eax, edx
0x8049f12:   39 85 34 ff ff ff               	cmp dword ptr [ebp - 0xcc], eax
0x8049f18:   0f 9f c0                        	setg al
0x8049f1b:   0f b6 c0                        	movzx eax, al
0x8049f1e:   99                              	cdq 
0x8049f1f:   f7 bd 54 ff ff ff               	idiv dword ptr [ebp - 0xac]
0x8049f25:   85 c0                           	test eax, eax
0x8049f27:   75 09                           	jne 0x8049f32 <func_1+0x773>
0x8049f29:   83 bd 30 ff ff ff 00            	cmp dword ptr [ebp - 0xd0], 0
0x8049f30:   74 07                           	je 0x8049f39 <func_1+0x77a>
0x8049f32:   b8 01 00 00 00                  	mov eax, 1
0x8049f37:   eb 05                           	jmp 0x8049f3e <func_1+0x77f>
0x8049f39:   b8 00 00 00 00                  	mov eax, 0
0x8049f3e:   01 d8                           	add eax, ebx
0x8049f40:   c0 f8 02                        	sar al, 2
0x8049f43:   0f be c0                        	movsx eax, al
0x8049f46:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049f49:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049f4c:   0f b7 f8                        	movzx edi, ax
0x8049f4f:   89 c8                           	mov eax, ecx
0x8049f51:   99                              	cdq 
0x8049f52:   f7 ff                           	idiv edi
0x8049f54:   0f b7 d0                        	movzx edx, ax
0x8049f57:   89 d0                           	mov eax, edx
0x8049f59:   c1 e0 10                        	shl eax, 0x10
0x8049f5c:   29 d0                           	sub eax, edx
0x8049f5e:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x8049f64:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x8049f6a:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049f6d:   c7 85 78 ff ff ff fd ff ff ff   	mov dword ptr [ebp - 0x88], 0xfffffffd
0x8049f77:   eb 2b                           	jmp 0x8049fa4 <func_1+0x7e5>
0x8049f79:   c7 85 48 ff ff ff 62 59 33 1a   	mov dword ptr [ebp - 0xb8], 0x1a335962
0x8049f83:   c7 85 48 ff ff ff f3 03 b2 d9   	mov dword ptr [ebp - 0xb8], 0xd9b203f3
0x8049f8d:   83 bd 34 ff ff ff 00            	cmp dword ptr [ebp - 0xcc], 0
0x8049f94:   75 19                           	jne 0x8049faf <func_1+0x7f0>
0x8049f96:   c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0x8049f9d:   83 85 78 ff ff ff 01            	add dword ptr [ebp - 0x88], 1
0x8049fa4:   83 bd 78 ff ff ff 13            	cmp dword ptr [ebp - 0x88], 0x13
0x8049fab:   74 cc                           	je 0x8049f79 <func_1+0x7ba>
0x8049fad:   eb 01                           	jmp 0x8049fb0 <func_1+0x7f1>
0x8049faf:   90                              	nop 
0x8049fb0:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x8049fb4:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049fb7:   0f 95 c0                        	setne al
0x8049fba:   0f b6 c0                        	movzx eax, al
0x8049fbd:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x8049fc3:   0f b7 85 5c ff ff ff            	movzx eax, word ptr [ebp - 0xa4]
0x8049fca:   66 0f be d0                     	movsx dx, al
0x8049fce:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049fd2:   66 98                           	cbw 
0x8049fd4:   01 d0                           	add eax, edx
0x8049fd6:   0f b7 d0                        	movzx edx, ax
0x8049fd9:   66 0f be 45 e9                  	movsx ax, byte ptr [ebp - 0x17]
0x8049fde:   0f b7 c0                        	movzx eax, ax
0x8049fe1:   89 c1                           	mov ecx, eax
0x8049fe3:   d3 fa                           	sar edx, cl
0x8049fe5:   89 d0                           	mov eax, edx
0x8049fe7:   0f b7 d0                        	movzx edx, ax
0x8049fea:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049fed:   0f b7 c0                        	movzx eax, ax
0x8049ff0:   89 c1                           	mov ecx, eax
0x8049ff2:   d3 fa                           	sar edx, cl
0x8049ff4:   89 d0                           	mov eax, edx
0x8049ff6:   0f be d0                        	movsx edx, al
0x8049ff9:   0f be 45 df                     	movsx eax, byte ptr [ebp - 0x21]
0x8049ffd:   29 c2                           	sub edx, eax
0x8049fff:   89 d0                           	mov eax, edx
0x804a001:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a004:   0f 95 c0                        	setne al
0x804a007:   0f b6 c0                        	movzx eax, al
0x804a00a:   8b 95 34 ff ff ff               	mov edx, dword ptr [ebp - 0xcc]
0x804a010:   29 d0                           	sub eax, edx
0x804a012:   0f b7 c0                        	movzx eax, ax
0x804a015:   c1 f8 06                        	sar eax, 6
0x804a018:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x804a01b:   73 07                           	jae 0x804a024 <func_1+0x865>
0x804a01d:   b8 f7 7f 4e 8a                  	mov eax, 0x8a4e7ff7
0x804a022:   eb 05                           	jmp 0x804a029 <func_1+0x86a>
0x804a024:   b8 f8 7f 4e 8a                  	mov eax, 0x8a4e7ff8
0x804a029:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a02c:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a02f:   89 85 54 ff ff ff               	mov dword ptr [ebp - 0xac], eax
0x804a035:   66 83 7d ea 00                  	cmp word ptr [ebp - 0x16], 0
0x804a03a:   c6 45 f3 63                     	mov byte ptr [ebp - 0xd], 0x63
0x804a03e:   b8 00 00 00 00                  	mov eax, 0
0x804a043:   89 c2                           	mov edx, eax
0x804a045:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a049:   21 d0                           	and eax, edx
0x804a04b:   66 89 45 d6                     	mov word ptr [ebp - 0x2a], ax
0x804a04f:   83 bd 74 ff ff ff 01            	cmp dword ptr [ebp - 0x8c], 1
0x804a056:   0f 95 c0                        	setne al
0x804a059:   0f b6 c0                        	movzx eax, al
0x804a05c:   39 85 58 ff ff ff               	cmp dword ptr [ebp - 0xa8], eax
0x804a062:   0f 84 3b 01 00 00               	je 0x804a1a3 <func_1+0x9e4>
0x804a068:   e9 2f 01 00 00                  	jmp 0x804a19c <func_1+0x9dd>
0x804a06d:   66 c7 85 3a ff ff ff e4 d4      	mov word ptr [ebp - 0xc6], 0xd4e4
0x804a076:   0f b6 55 f3                     	movzx edx, byte ptr [ebp - 0xd]
0x804a07a:   0f be 45 df                     	movsx eax, byte ptr [ebp - 0x21]
0x804a07e:   39 c2                           	cmp edx, eax
0x804a080:   0f 94 c0                        	sete al
0x804a083:   0f b6 c0                        	movzx eax, al
0x804a086:   0f b7 c0                        	movzx eax, ax
0x804a089:   f7 d8                           	neg eax
0x804a08b:   33 45 b4                        	xor eax, dword ptr [ebp - 0x4c]
0x804a08e:   89 c2                           	mov edx, eax
0x804a090:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a094:   39 c2                           	cmp edx, eax
0x804a096:   0f 94 c0                        	sete al
0x804a099:   0f b6 c0                        	movzx eax, al
0x804a09c:   89 85 54 ff ff ff               	mov dword ptr [ebp - 0xac], eax
0x804a0a2:   66 83 6d ea 01                  	sub word ptr [ebp - 0x16], 1
0x804a0a7:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a0ab:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804a0ae:   0f 9e c0                        	setle al
0x804a0b1:   0f b6 d0                        	movzx edx, al
0x804a0b4:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a0b7:   0f b6 c0                        	movzx eax, al
0x804a0ba:   01 d0                           	add eax, edx
0x804a0bc:   23 85 58 ff ff ff               	and eax, dword ptr [ebp - 0xa8]
0x804a0c2:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a0c5:   0f 9e c0                        	setle al
0x804a0c8:   0f b6 c0                        	movzx eax, al
0x804a0cb:   09 45 a4                        	or dword ptr [ebp - 0x5c], eax
0x804a0ce:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x804a0d2:   83 e8 01                        	sub eax, 1
0x804a0d5:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x804a0d9:   0f b6 45 c1                     	movzx eax, byte ptr [ebp - 0x3f]
0x804a0dd:   0f bf 4d c2                     	movsx ecx, word ptr [ebp - 0x3e]
0x804a0e1:   0f bf 7d c8                     	movsx edi, word ptr [ebp - 0x38]
0x804a0e5:   0f bf 75 ca                     	movsx esi, word ptr [ebp - 0x36]
0x804a0e9:   89 b5 f0 fe ff ff               	mov dword ptr [ebp - 0x110], esi
0x804a0ef:   0f bf 5d cc                     	movsx ebx, word ptr [ebp - 0x34]
0x804a0f3:   89 9d ec fe ff ff               	mov dword ptr [ebp - 0x114], ebx
0x804a0f9:   0f bf 55 ce                     	movsx edx, word ptr [ebp - 0x32]
0x804a0fd:   89 95 e8 fe ff ff               	mov dword ptr [ebp - 0x118], edx
0x804a103:   0f b7 75 d0                     	movzx esi, word ptr [ebp - 0x30]
0x804a107:   89 b5 e4 fe ff ff               	mov dword ptr [ebp - 0x11c], esi
0x804a10d:   0f bf 5d d2                     	movsx ebx, word ptr [ebp - 0x2e]
0x804a111:   89 9d e0 fe ff ff               	mov dword ptr [ebp - 0x120], ebx
0x804a117:   0f b7 55 d4                     	movzx edx, word ptr [ebp - 0x2c]
0x804a11b:   89 95 dc fe ff ff               	mov dword ptr [ebp - 0x124], edx
0x804a121:   0f b7 75 d6                     	movzx esi, word ptr [ebp - 0x2a]
0x804a125:   89 b5 d8 fe ff ff               	mov dword ptr [ebp - 0x128], esi
0x804a12b:   0f be 5d df                     	movsx ebx, byte ptr [ebp - 0x21]
0x804a12f:   89 9d d4 fe ff ff               	mov dword ptr [ebp - 0x12c], ebx
0x804a135:   0f be 75 e9                     	movsx esi, byte ptr [ebp - 0x17]
0x804a139:   0f b7 5d ea                     	movzx ebx, word ptr [ebp - 0x16]
0x804a13d:   0f b6 55 f3                     	movzx edx, byte ptr [ebp - 0xd]
0x804a141:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a144:   50                              	push eax
0x804a145:   51                              	push ecx
0x804a146:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a149:   57                              	push edi
0x804a14a:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a150:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a156:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a15c:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x804a162:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a168:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a16e:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a174:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a177:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a17d:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a180:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a183:   56                              	push esi
0x804a184:   53                              	push ebx
0x804a185:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a188:   52                              	push edx
0x804a189:   e8 98 f4 ff ff                  	call 0x8049626 <set_var>
0x804a18e:   83 c4 50                        	add esp, 0x50
0x804a191:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804a197:   e9 89 08 00 00                  	jmp 0x804aa25 <func_1+0x1266>
0x804a19c:   b8 01 00 00 00                  	mov eax, 1
0x804a1a1:   eb 05                           	jmp 0x804a1a8 <func_1+0x9e9>
0x804a1a3:   b8 00 00 00 00                  	mov eax, 0
0x804a1a8:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a1ab:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x804a1b1:   66 83 f8 02                     	cmp ax, 2
0x804a1b5:   77 07                           	ja 0x804a1be <func_1+0x9ff>
0x804a1b7:   66 83 7d d4 00                  	cmp word ptr [ebp - 0x2c], 0
0x804a1bc:   74 07                           	je 0x804a1c5 <func_1+0xa06>
0x804a1be:   b8 01 00 00 00                  	mov eax, 1
0x804a1c3:   eb 05                           	jmp 0x804a1ca <func_1+0xa0b>
0x804a1c5:   b8 00 00 00 00                  	mov eax, 0
0x804a1ca:   09 45 e0                        	or dword ptr [ebp - 0x20], eax
0x804a1cd:   66 c7 45 aa 00 00               	mov word ptr [ebp - 0x56], 0
0x804a1d3:   66 83 7d aa 02                  	cmp word ptr [ebp - 0x56], 2
0x804a1d8:   0f 8e 46 01 00 00               	jle 0x804a324 <func_1+0xb65>
0x804a1de:   c6 85 47 ff ff ff 00            	mov byte ptr [ebp - 0xb9], 0
0x804a1e5:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x804a1ec:   eb 13                           	jmp 0x804a201 <func_1+0xa42>
0x804a1ee:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a1f4:   0b 45 d8                        	or eax, dword ptr [ebp - 0x28]
0x804a1f7:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804a1fd:   83 45 a4 07                     	add dword ptr [ebp - 0x5c], 7
0x804a201:   83 7d a4 32                     	cmp dword ptr [ebp - 0x5c], 0x32
0x804a205:   76 e7                           	jbe 0x804a1ee <func_1+0xa2f>
0x804a207:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804a20b:   83 c0 01                        	add eax, 1
0x804a20e:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x804a212:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x804a216:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a219:   74 07                           	je 0x804a222 <func_1+0xa63>
0x804a21b:   b8 2a 00 00 00                  	mov eax, 0x2a
0x804a220:   eb 05                           	jmp 0x804a227 <func_1+0xa68>
0x804a222:   b8 00 00 00 00                  	mov eax, 0
0x804a227:   2a 45 f3                        	sub al, byte ptr [ebp - 0xd]
0x804a22a:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x804a22d:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a231:   69 c0 8c 00 00 00               	imul eax, eax, 0x8c
0x804a237:   85 c0                           	test eax, eax
0x804a239:   74 04                           	je 0x804a23f <func_1+0xa80>
0x804a23b:   80 7d df 00                     	cmp byte ptr [ebp - 0x21], 0
0x804a23f:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a242:   f7 d8                           	neg eax
0x804a244:   3d bc 3e 85 fe                  	cmp eax, 0xfe853ebc
0x804a249:   0f 95 c0                        	setne al
0x804a24c:   0f b6 c0                        	movzx eax, al
0x804a24f:   66 89 45 ce                     	mov word ptr [ebp - 0x32], ax
0x804a253:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x804a259:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x804a25f:   0f b6 45 c1                     	movzx eax, byte ptr [ebp - 0x3f]
0x804a263:   0f bf 4d c2                     	movsx ecx, word ptr [ebp - 0x3e]
0x804a267:   0f bf 7d c8                     	movsx edi, word ptr [ebp - 0x38]
0x804a26b:   0f bf 75 ca                     	movsx esi, word ptr [ebp - 0x36]
0x804a26f:   89 b5 f0 fe ff ff               	mov dword ptr [ebp - 0x110], esi
0x804a275:   0f bf 5d cc                     	movsx ebx, word ptr [ebp - 0x34]
0x804a279:   89 9d ec fe ff ff               	mov dword ptr [ebp - 0x114], ebx
0x804a27f:   0f bf 55 ce                     	movsx edx, word ptr [ebp - 0x32]
0x804a283:   89 95 e8 fe ff ff               	mov dword ptr [ebp - 0x118], edx
0x804a289:   0f b7 75 d0                     	movzx esi, word ptr [ebp - 0x30]
0x804a28d:   89 b5 e4 fe ff ff               	mov dword ptr [ebp - 0x11c], esi
0x804a293:   0f bf 5d d2                     	movsx ebx, word ptr [ebp - 0x2e]
0x804a297:   89 9d e0 fe ff ff               	mov dword ptr [ebp - 0x120], ebx
0x804a29d:   0f b7 55 d4                     	movzx edx, word ptr [ebp - 0x2c]
0x804a2a1:   89 95 dc fe ff ff               	mov dword ptr [ebp - 0x124], edx
0x804a2a7:   0f b7 75 d6                     	movzx esi, word ptr [ebp - 0x2a]
0x804a2ab:   89 b5 d8 fe ff ff               	mov dword ptr [ebp - 0x128], esi
0x804a2b1:   0f be 5d df                     	movsx ebx, byte ptr [ebp - 0x21]
0x804a2b5:   89 9d d4 fe ff ff               	mov dword ptr [ebp - 0x12c], ebx
0x804a2bb:   0f be 75 e9                     	movsx esi, byte ptr [ebp - 0x17]
0x804a2bf:   0f b7 5d ea                     	movzx ebx, word ptr [ebp - 0x16]
0x804a2c3:   0f b6 55 f3                     	movzx edx, byte ptr [ebp - 0xd]
0x804a2c7:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a2ca:   50                              	push eax
0x804a2cb:   51                              	push ecx
0x804a2cc:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a2cf:   57                              	push edi
0x804a2d0:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a2d6:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a2dc:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a2e2:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x804a2e8:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a2ee:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a2f4:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a2fa:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a2fd:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a303:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a306:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a309:   56                              	push esi
0x804a30a:   53                              	push ebx
0x804a30b:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a30e:   52                              	push edx
0x804a30f:   e8 12 f3 ff ff                  	call 0x8049626 <set_var>
0x804a314:   83 c4 50                        	add esp, 0x50
0x804a317:   66 0f be 85 47 ff ff ff         	movsx ax, byte ptr [ebp - 0xb9]
0x804a31f:   e9 01 07 00 00                  	jmp 0x804aa25 <func_1+0x1266>
0x804a324:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a327:   f7 d0                           	not eax
0x804a329:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a32c:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a330:   0f 94 c0                        	sete al
0x804a333:   0f b6 d0                        	movzx edx, al
0x804a336:   83 bd 50 ff ff ff 05            	cmp dword ptr [ebp - 0xb0], 5
0x804a33d:   0f 96 c0                        	setbe al
0x804a340:   0f b6 c0                        	movzx eax, al
0x804a343:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x804a349:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a34f:   3d 38 68 92 d4                  	cmp eax, 0xd4926838
0x804a354:   0f 97 c0                        	seta al
0x804a357:   0f b6 c0                        	movzx eax, al
0x804a35a:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a35d:   0f 9f c0                        	setg al
0x804a360:   0f b6 c0                        	movzx eax, al
0x804a363:   0b 45 ac                        	or eax, dword ptr [ebp - 0x54]
0x804a366:   39 c2                           	cmp edx, eax
0x804a368:   74 07                           	je 0x804a371 <func_1+0xbb2>
0x804a36a:   ba f5 ff ff ff                  	mov edx, 0xfffffff5
0x804a36f:   eb 05                           	jmp 0x804a376 <func_1+0xbb7>
0x804a371:   ba f6 ff ff ff                  	mov edx, 0xfffffff6
0x804a376:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a37a:   39 c2                           	cmp edx, eax
0x804a37c:   0f 8e f6 01 00 00               	jle 0x804a578 <func_1+0xdb9>
0x804a382:   c6 85 0f ff ff ff fd            	mov byte ptr [ebp - 0xf1], 0xfd
0x804a389:   c7 85 08 ff ff ff c7 e4 91 a4   	mov dword ptr [ebp - 0xf8], 0xa491e4c7
0x804a393:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x804a39a:   74 5d                           	je 0x804a3f9 <func_1+0xc3a>
0x804a39c:   c7 85 70 ff ff ff 88 dd 1e 50   	mov dword ptr [ebp - 0x90], 0x501edd88
0x804a3a6:   c7 45 e4 f6 ff ff ff            	mov dword ptr [ebp - 0x1c], 0xfffffff6
0x804a3ad:   eb 12                           	jmp 0x804a3c1 <func_1+0xc02>
0x804a3af:   83 85 70 ff ff ff 01            	add dword ptr [ebp - 0x90], 1
0x804a3b6:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a3ba:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a3bd:   83 45 e4 01                     	add dword ptr [ebp - 0x1c], 1
0x804a3c1:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804a3c5:   7e e8                           	jle 0x804a3af <func_1+0xbf0>
0x804a3c7:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a3cd:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a3d0:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a3d3:   88 85 0f ff ff ff               	mov byte ptr [ebp - 0xf1], al
0x804a3d9:   66 c7 45 d0 00 00               	mov word ptr [ebp - 0x30], 0
0x804a3df:   eb 0c                           	jmp 0x804a3ed <func_1+0xc2e>
0x804a3e1:   c7 45 e0 1f da 5e 63            	mov dword ptr [ebp - 0x20], 0x635eda1f
0x804a3e8:   66 83 45 d0 02                  	add word ptr [ebp - 0x30], 2
0x804a3ed:   66 83 7d d0 1b                  	cmp word ptr [ebp - 0x30], 0x1b
0x804a3f2:   77 ed                           	ja 0x804a3e1 <func_1+0xc22>
0x804a3f4:   e9 0d 05 00 00                  	jmp 0x804a906 <func_1+0x1147>
0x804a3f9:   c7 85 04 ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xfc], 0xfffffffc
0x804a403:   c7 85 00 ff ff ff e5 56 61 0e   	mov dword ptr [ebp - 0x100], 0xe6156e5
0x804a40d:   80 7d e9 00                     	cmp byte ptr [ebp - 0x17], 0
0x804a411:   74 1f                           	je 0x804a432 <func_1+0xc73>
0x804a413:   66 c7 85 fc fe ff ff a4 d3      	mov word ptr [ebp - 0x104], 0xd3a4
0x804a41c:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x804a420:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a423:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a426:   66 89 85 fc fe ff ff            	mov word ptr [ebp - 0x104], ax
0x804a42d:   e9 d4 04 00 00                  	jmp 0x804a906 <func_1+0x1147>
0x804a432:   c6 85 ff fe ff ff 00            	mov byte ptr [ebp - 0x101], 0
0x804a439:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a43c:   89 c2                           	mov edx, eax
0x804a43e:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x804a444:   89 c3                           	mov ebx, eax
0x804a446:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a449:   89 c1                           	mov ecx, eax
0x804a44b:   0f b6 c3                        	movzx eax, bl
0x804a44e:   f6 f1                           	div cl
0x804a450:   0f b6 c0                        	movzx eax, al
0x804a453:   01 d0                           	add eax, edx
0x804a455:   0f b7 c8                        	movzx ecx, ax
0x804a458:   80 bd ff fe ff ff 00            	cmp byte ptr [ebp - 0x101], 0
0x804a45f:   0f 95 c0                        	setne al
0x804a462:   0f b6 c0                        	movzx eax, al
0x804a465:   66 c1 e8 02                     	shr ax, 2
0x804a469:   0f b7 c0                        	movzx eax, ax
0x804a46c:   0f b6 5d f3                     	movzx ebx, byte ptr [ebp - 0xd]
0x804a470:   ba 00 00 00 00                  	mov edx, 0
0x804a475:   f7 f3                           	div ebx
0x804a477:   89 d0                           	mov eax, edx
0x804a479:   89 c2                           	mov edx, eax
0x804a47b:   66 81 fa b0 d2                  	cmp dx, 0xd2b0
0x804a480:   0f 93 c0                        	setae al
0x804a483:   0f b6 c0                        	movzx eax, al
0x804a486:   66 69 c0 b0 d2                  	imul ax, ax, 0xd2b0
0x804a48b:   29 c2                           	sub edx, eax
0x804a48d:   89 d0                           	mov eax, edx
0x804a48f:   0f b7 c0                        	movzx eax, ax
0x804a492:   29 c1                           	sub ecx, eax
0x804a494:   89 c8                           	mov eax, ecx
0x804a496:   89 85 08 ff ff ff               	mov dword ptr [ebp - 0xf8], eax
0x804a49c:   8b 85 08 ff ff ff               	mov eax, dword ptr [ebp - 0xf8]
0x804a4a2:   0f bf d0                        	movsx edx, ax
0x804a4a5:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804a4a9:   98                              	cwde 
0x804a4aa:   29 c2                           	sub edx, eax
0x804a4ac:   89 d0                           	mov eax, edx
0x804a4ae:   35 ae a3 00 00                  	xor eax, 0xa3ae
0x804a4b3:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x804a4b9:   81 75 ec 05 45 00 00            	xor dword ptr [ebp - 0x14], 0x4505
0x804a4c0:   0f be 4d df                     	movsx ecx, byte ptr [ebp - 0x21]
0x804a4c4:   0f b6 85 ff fe ff ff            	movzx eax, byte ptr [ebp - 0x101]
0x804a4cb:   89 85 00 ff ff ff               	mov dword ptr [ebp - 0x100], eax
0x804a4d1:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a4d5:   0f be c0                        	movsx eax, al
0x804a4d8:   39 85 04 ff ff ff               	cmp dword ptr [ebp - 0xfc], eax
0x804a4de:   0f 9e c0                        	setle al
0x804a4e1:   0f b6 c0                        	movzx eax, al
0x804a4e4:   39 85 00 ff ff ff               	cmp dword ptr [ebp - 0x100], eax
0x804a4ea:   0f 94 c0                        	sete al
0x804a4ed:   0f b6 c0                        	movzx eax, al
0x804a4f0:   8b 95 08 ff ff ff               	mov edx, dword ptr [ebp - 0xf8]
0x804a4f6:   0f be da                        	movsx ebx, dl
0x804a4f9:   99                              	cdq 
0x804a4fa:   f7 fb                           	idiv ebx
0x804a4fc:   89 d0                           	mov eax, edx
0x804a4fe:   31 c1                           	xor ecx, eax
0x804a500:   89 ca                           	mov edx, ecx
0x804a502:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804a506:   39 c2                           	cmp edx, eax
0x804a508:   0f 94 c0                        	sete al
0x804a50b:   0f b6 d0                        	movzx edx, al
0x804a50e:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a511:   0f b7 c0                        	movzx eax, ax
0x804a514:   89 c1                           	mov ecx, eax
0x804a516:   d3 e2                           	shl edx, cl
0x804a518:   89 d0                           	mov eax, edx
0x804a51a:   85 c0                           	test eax, eax
0x804a51c:   75 09                           	jne 0x804a527 <func_1+0xd68>
0x804a51e:   80 bd 6b ff ff ff 00            	cmp byte ptr [ebp - 0x95], 0
0x804a525:   74 07                           	je 0x804a52e <func_1+0xd6f>
0x804a527:   b8 01 00 00 00                  	mov eax, 1
0x804a52c:   eb 05                           	jmp 0x804a533 <func_1+0xd74>
0x804a52e:   b8 00 00 00 00                  	mov eax, 0
0x804a533:   66 89 85 4e ff ff ff            	mov word ptr [ebp - 0xb2], ax
0x804a53a:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a53d:   66 c1 e8 0e                     	shr ax, 0xe
0x804a541:   0f b7 c8                        	movzx ecx, ax
0x804a544:   0f b6 45 9f                     	movzx eax, byte ptr [ebp - 0x61]
0x804a548:   f7 d0                           	not eax
0x804a54a:   c0 e8 07                        	shr al, 7
0x804a54d:   32 85 0f ff ff ff               	xor al, byte ptr [ebp - 0xf1]
0x804a553:   0f be c0                        	movsx eax, al
0x804a556:   0f b6 95 ff fe ff ff            	movzx edx, byte ptr [ebp - 0x101]
0x804a55d:   0f be fa                        	movsx edi, dl
0x804a560:   99                              	cdq 
0x804a561:   f7 ff                           	idiv edi
0x804a563:   31 c8                           	xor eax, ecx
0x804a565:   ba ab aa aa aa                  	mov edx, 0xaaaaaaab
0x804a56a:   f7 e2                           	mul edx
0x804a56c:   89 d0                           	mov eax, edx
0x804a56e:   d1 e8                           	shr eax, 1
0x804a570:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a573:   e9 8e 03 00 00                  	jmp 0x804a906 <func_1+0x1147>
0x804a578:   66 c7 85 1c ff ff ff ff ff      	mov word ptr [ebp - 0xe4], 0xffff
0x804a581:   b8 01 00 00 00                  	mov eax, 1
0x804a586:   0c ff                           	or al, 0xff
0x804a588:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x804a58c:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804a590:   0f bf d0                        	movsx edx, ax
0x804a593:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a596:   01 d0                           	add eax, edx
0x804a598:   2d 31 54 00 00                  	sub eax, 0x5431
0x804a59d:   83 f8 08                        	cmp eax, 8
0x804a5a0:   0f 96 c0                        	setbe al
0x804a5a3:   0f b6 d0                        	movzx edx, al
0x804a5a6:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x804a5aa:   39 c2                           	cmp edx, eax
0x804a5ac:   0f 9d c0                        	setge al
0x804a5af:   0f b6 c0                        	movzx eax, al
0x804a5b2:   89 c1                           	mov ecx, eax
0x804a5b4:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a5ba:   89 c2                           	mov edx, eax
0x804a5bc:   89 c8                           	mov eax, ecx
0x804a5be:   0f af c2                        	imul eax, edx
0x804a5c1:   66 0f be d0                     	movsx dx, al
0x804a5c5:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a5c9:   66 98                           	cbw 
0x804a5cb:   01 c2                           	add edx, eax
0x804a5cd:   0f bf c2                        	movsx eax, dx
0x804a5d0:   69 c0 f1 23 00 00               	imul eax, eax, 0x23f1
0x804a5d6:   c1 e8 10                        	shr eax, 0x10
0x804a5d9:   89 c1                           	mov ecx, eax
0x804a5db:   66 c1 f9 0c                     	sar cx, 0xc
0x804a5df:   89 d0                           	mov eax, edx
0x804a5e1:   66 c1 f8 0f                     	sar ax, 0xf
0x804a5e5:   29 c1                           	sub ecx, eax
0x804a5e7:   89 c8                           	mov eax, ecx
0x804a5e9:   66 69 c0 f7 71                  	imul ax, ax, 0x71f7
0x804a5ee:   29 c2                           	sub edx, eax
0x804a5f0:   89 d0                           	mov eax, edx
0x804a5f2:   66 85 c0                        	test ax, ax
0x804a5f5:   0f 84 db 01 00 00               	je 0x804a7d6 <func_1+0x1017>
0x804a5fb:   c7 85 6c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x94], 0
0x804a605:   c7 45 88 1a 00 00 00            	mov dword ptr [ebp - 0x78], 0x1a
0x804a60c:   83 7d 88 35                     	cmp dword ptr [ebp - 0x78], 0x35
0x804a610:   0f 87 c9 00 00 00               	ja 0x804a6df <func_1+0xf20>
0x804a616:   0f bf 45 ce                     	movsx eax, word ptr [ebp - 0x32]
0x804a61a:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a61d:   0f b6 45 c1                     	movzx eax, byte ptr [ebp - 0x3f]
0x804a621:   0f bf 4d c2                     	movsx ecx, word ptr [ebp - 0x3e]
0x804a625:   0f bf 7d c8                     	movsx edi, word ptr [ebp - 0x38]
0x804a629:   0f bf 75 ca                     	movsx esi, word ptr [ebp - 0x36]
0x804a62d:   89 b5 f0 fe ff ff               	mov dword ptr [ebp - 0x110], esi
0x804a633:   0f bf 5d cc                     	movsx ebx, word ptr [ebp - 0x34]
0x804a637:   89 9d ec fe ff ff               	mov dword ptr [ebp - 0x114], ebx
0x804a63d:   0f bf 55 ce                     	movsx edx, word ptr [ebp - 0x32]
0x804a641:   89 95 e8 fe ff ff               	mov dword ptr [ebp - 0x118], edx
0x804a647:   0f b7 75 d0                     	movzx esi, word ptr [ebp - 0x30]
0x804a64b:   89 b5 e4 fe ff ff               	mov dword ptr [ebp - 0x11c], esi
0x804a651:   0f bf 5d d2                     	movsx ebx, word ptr [ebp - 0x2e]
0x804a655:   89 9d e0 fe ff ff               	mov dword ptr [ebp - 0x120], ebx
0x804a65b:   0f b7 55 d4                     	movzx edx, word ptr [ebp - 0x2c]
0x804a65f:   89 95 dc fe ff ff               	mov dword ptr [ebp - 0x124], edx
0x804a665:   0f b7 75 d6                     	movzx esi, word ptr [ebp - 0x2a]
0x804a669:   89 b5 d8 fe ff ff               	mov dword ptr [ebp - 0x128], esi
0x804a66f:   0f be 5d df                     	movsx ebx, byte ptr [ebp - 0x21]
0x804a673:   89 9d d4 fe ff ff               	mov dword ptr [ebp - 0x12c], ebx
0x804a679:   0f be 75 e9                     	movsx esi, byte ptr [ebp - 0x17]
0x804a67d:   0f b7 5d ea                     	movzx ebx, word ptr [ebp - 0x16]
0x804a681:   0f b6 55 f3                     	movzx edx, byte ptr [ebp - 0xd]
0x804a685:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a688:   50                              	push eax
0x804a689:   51                              	push ecx
0x804a68a:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a68d:   57                              	push edi
0x804a68e:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a694:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a69a:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a6a0:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x804a6a6:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a6ac:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a6b2:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a6b8:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a6bb:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a6c1:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a6c4:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a6c7:   56                              	push esi
0x804a6c8:   53                              	push ebx
0x804a6c9:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a6cc:   52                              	push edx
0x804a6cd:   e8 54 ef ff ff                  	call 0x8049626 <set_var>
0x804a6d2:   83 c4 50                        	add esp, 0x50
0x804a6d5:   66 0f be 45 9f                  	movsx ax, byte ptr [ebp - 0x61]
0x804a6da:   e9 46 03 00 00                  	jmp 0x804aa25 <func_1+0x1266>
0x804a6df:   66 83 bd 1c ff ff ff 00         	cmp word ptr [ebp - 0xe4], 0
0x804a6e7:   90                              	nop 
0x804a6e8:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x804a6ef:   e9 c3 00 00 00                  	jmp 0x804a7b7 <func_1+0xff8>
0x804a6f4:   c7 85 14 ff ff ff 56 d3 b0 74   	mov dword ptr [ebp - 0xec], 0x74b0d356
0x804a6fe:   c7 85 10 ff ff ff 90 7b 52 10   	mov dword ptr [ebp - 0xf0], 0x10527b90
0x804a708:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x804a70c:   09 85 6c ff ff ff               	or dword ptr [ebp - 0x94], eax
0x804a712:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a718:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a71b:   66 81 7d d4 c5 00               	cmp word ptr [ebp - 0x2c], 0xc5
0x804a721:   0f 97 c0                        	seta al
0x804a724:   0f b6 c0                        	movzx eax, al
0x804a727:   8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x804a72a:   0f be ca                        	movsx ecx, dl
0x804a72d:   99                              	cdq 
0x804a72e:   f7 f9                           	idiv ecx
0x804a730:   89 d0                           	mov eax, edx
0x804a732:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a735:   0f 95 c0                        	setne al
0x804a738:   0f b6 c0                        	movzx eax, al
0x804a73b:   0f bf d0                        	movsx edx, ax
0x804a73e:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a744:   98                              	cwde 
0x804a745:   01 d0                           	add eax, edx
0x804a747:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a74a:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x804a750:   25 d8 5e 00 00                  	and eax, 0x5ed8
0x804a755:   83 f0 01                        	xor eax, 1
0x804a758:   89 85 10 ff ff ff               	mov dword ptr [ebp - 0xf0], eax
0x804a75e:   0f be 45 df                     	movsx eax, byte ptr [ebp - 0x21]
0x804a762:   39 85 10 ff ff ff               	cmp dword ptr [ebp - 0xf0], eax
0x804a768:   0f 95 c0                        	setne al
0x804a76b:   0f b6 d0                        	movzx edx, al
0x804a76e:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804a772:   31 d0                           	xor eax, edx
0x804a774:   83 f8 02                        	cmp eax, 2
0x804a777:   0f 94 c0                        	sete al
0x804a77a:   0f b6 d0                        	movzx edx, al
0x804a77d:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a781:   39 c2                           	cmp edx, eax
0x804a783:   0f 9c c0                        	setl al
0x804a786:   0f b6 c0                        	movzx eax, al
0x804a789:   0f b7 95 1c ff ff ff            	movzx edx, word ptr [ebp - 0xe4]
0x804a790:   29 c2                           	sub edx, eax
0x804a792:   89 d0                           	mov eax, edx
0x804a794:   0f b7 d0                        	movzx edx, ax
0x804a797:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a79b:   0f b7 c0                        	movzx eax, ax
0x804a79e:   89 c1                           	mov ecx, eax
0x804a7a0:   d3 fa                           	sar edx, cl
0x804a7a2:   89 d0                           	mov eax, edx
0x804a7a4:   21 85 6c ff ff ff               	and dword ptr [ebp - 0x94], eax
0x804a7aa:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a7b0:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a7b3:   83 6d a0 01                     	sub dword ptr [ebp - 0x60], 1
0x804a7b7:   83 7d a0 ec                     	cmp dword ptr [ebp - 0x60], -0x14
0x804a7bb:   0f 8c 33 ff ff ff               	jl 0x804a6f4 <func_1+0xf35>
0x804a7c1:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x804a7c8:   66 c7 85 44 ff ff ff 00 00      	mov word ptr [ebp - 0xbc], 0
0x804a7d1:   e9 30 01 00 00                  	jmp 0x804a906 <func_1+0x1147>
0x804a7d6:   66 c7 85 1a ff ff ff 52 41      	mov word ptr [ebp - 0xe6], 0x4152
0x804a7df:   c7 45 88 00 00 00 00            	mov dword ptr [ebp - 0x78], 0
0x804a7e6:   83 7d 88 1f                     	cmp dword ptr [ebp - 0x78], 0x1f
0x804a7ea:   0f 87 c4 00 00 00               	ja 0x804a8b4 <func_1+0x10f5>
0x804a7f0:   0f b6 45 c1                     	movzx eax, byte ptr [ebp - 0x3f]
0x804a7f4:   0f bf 4d c2                     	movsx ecx, word ptr [ebp - 0x3e]
0x804a7f8:   0f bf 7d c8                     	movsx edi, word ptr [ebp - 0x38]
0x804a7fc:   0f bf 75 ca                     	movsx esi, word ptr [ebp - 0x36]
0x804a800:   89 b5 f0 fe ff ff               	mov dword ptr [ebp - 0x110], esi
0x804a806:   0f bf 5d cc                     	movsx ebx, word ptr [ebp - 0x34]
0x804a80a:   89 9d ec fe ff ff               	mov dword ptr [ebp - 0x114], ebx
0x804a810:   0f bf 55 ce                     	movsx edx, word ptr [ebp - 0x32]
0x804a814:   89 95 e8 fe ff ff               	mov dword ptr [ebp - 0x118], edx
0x804a81a:   0f b7 75 d0                     	movzx esi, word ptr [ebp - 0x30]
0x804a81e:   89 b5 e4 fe ff ff               	mov dword ptr [ebp - 0x11c], esi
0x804a824:   0f bf 5d d2                     	movsx ebx, word ptr [ebp - 0x2e]
0x804a828:   89 9d e0 fe ff ff               	mov dword ptr [ebp - 0x120], ebx
0x804a82e:   0f b7 55 d4                     	movzx edx, word ptr [ebp - 0x2c]
0x804a832:   89 95 dc fe ff ff               	mov dword ptr [ebp - 0x124], edx
0x804a838:   0f b7 75 d6                     	movzx esi, word ptr [ebp - 0x2a]
0x804a83c:   89 b5 d8 fe ff ff               	mov dword ptr [ebp - 0x128], esi
0x804a842:   0f be 5d df                     	movsx ebx, byte ptr [ebp - 0x21]
0x804a846:   89 9d d4 fe ff ff               	mov dword ptr [ebp - 0x12c], ebx
0x804a84c:   0f be 75 e9                     	movsx esi, byte ptr [ebp - 0x17]
0x804a850:   0f b7 5d ea                     	movzx ebx, word ptr [ebp - 0x16]
0x804a854:   0f b6 55 f3                     	movzx edx, byte ptr [ebp - 0xd]
0x804a858:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a85b:   50                              	push eax
0x804a85c:   51                              	push ecx
0x804a85d:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a860:   57                              	push edi
0x804a861:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a867:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a86d:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a873:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x804a879:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a87f:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a885:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a88b:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a88e:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a894:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a897:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a89a:   56                              	push esi
0x804a89b:   53                              	push ebx
0x804a89c:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a89f:   52                              	push edx
0x804a8a0:   e8 81 ed ff ff                  	call 0x8049626 <set_var>
0x804a8a5:   83 c4 50                        	add esp, 0x50
0x804a8a8:   0f b7 85 1a ff ff ff            	movzx eax, word ptr [ebp - 0xe6]
0x804a8af:   e9 71 01 00 00                  	jmp 0x804aa25 <func_1+0x1266>
0x804a8b4:   83 45 c4 01                     	add dword ptr [ebp - 0x3c], 1
0x804a8b8:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a8bb:   23 45 84                        	and eax, dword ptr [ebp - 0x7c]
0x804a8be:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a8c1:   0f bf 8d 1a ff ff ff            	movsx ecx, word ptr [ebp - 0xe6]
0x804a8c8:   b8 01 00 00 00                  	mov eax, 1
0x804a8cd:   ba 00 00 00 00                  	mov edx, 0
0x804a8d2:   f7 f1                           	div ecx
0x804a8d4:   89 d0                           	mov eax, edx
0x804a8d6:   89 c2                           	mov edx, eax
0x804a8d8:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a8de:   01 d0                           	add eax, edx
0x804a8e0:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x804a8e4:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a8e8:   66 31 45 c2                     	xor word ptr [ebp - 0x3e], ax
0x804a8ec:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a8f0:   0f b7 d0                        	movzx edx, ax
0x804a8f3:   0f b7 45 8e                     	movzx eax, word ptr [ebp - 0x72]
0x804a8f7:   0f af c2                        	imul eax, edx
0x804a8fa:   83 f8 01                        	cmp eax, 1
0x804a8fd:   0f 97 c0                        	seta al
0x804a900:   0f b6 c0                        	movzx eax, al
0x804a903:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a906:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a90a:   8d 50 ff                        	lea edx, [eax - 1]
0x804a90d:   88 55 f3                        	mov byte ptr [ebp - 0xd], dl
0x804a910:   0f b6 c0                        	movzx eax, al
0x804a913:   0b 45 b8                        	or eax, dword ptr [ebp - 0x48]
0x804a916:   89 c2                           	mov edx, eax
0x804a918:   0f bf 45 ce                     	movsx eax, word ptr [ebp - 0x32]
0x804a91c:   29 c2                           	sub edx, eax
0x804a91e:   89 d0                           	mov eax, edx
0x804a920:   39 45 b0                        	cmp dword ptr [ebp - 0x50], eax
0x804a923:   0f 97 c0                        	seta al
0x804a926:   0f b6 c0                        	movzx eax, al
0x804a929:   39 85 30 ff ff ff               	cmp dword ptr [ebp - 0xd0], eax
0x804a92f:   0f 94 c0                        	sete al
0x804a932:   0f b6 d0                        	movzx edx, al
0x804a935:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a939:   09 d0                           	or eax, edx
0x804a93b:   0f b7 d0                        	movzx edx, ax
0x804a93e:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a941:   0f b7 c0                        	movzx eax, ax
0x804a944:   0f af c2                        	imul eax, edx
0x804a947:   89 c7                           	mov edi, eax
0x804a949:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a94c:   ba 00 00 00 00                  	mov edx, 0
0x804a951:   f7 f7                           	div edi
0x804a953:   98                              	cwde 
0x804a954:   c1 e0 0b                        	shl eax, 0xb
0x804a957:   3d 1a 82 00 00                  	cmp eax, 0x821a
0x804a95c:   80 7d f3 54                     	cmp byte ptr [ebp - 0xd], 0x54
0x804a960:   0f 95 c0                        	setne al
0x804a963:   0f b6 c0                        	movzx eax, al
0x804a966:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a969:   0f b6 45 c1                     	movzx eax, byte ptr [ebp - 0x3f]
0x804a96d:   0f bf 4d c2                     	movsx ecx, word ptr [ebp - 0x3e]
0x804a971:   0f bf 7d c8                     	movsx edi, word ptr [ebp - 0x38]
0x804a975:   0f bf 75 ca                     	movsx esi, word ptr [ebp - 0x36]
0x804a979:   89 b5 f0 fe ff ff               	mov dword ptr [ebp - 0x110], esi
0x804a97f:   0f bf 5d cc                     	movsx ebx, word ptr [ebp - 0x34]
0x804a983:   89 9d ec fe ff ff               	mov dword ptr [ebp - 0x114], ebx
0x804a989:   0f bf 55 ce                     	movsx edx, word ptr [ebp - 0x32]
0x804a98d:   89 95 e8 fe ff ff               	mov dword ptr [ebp - 0x118], edx
0x804a993:   0f b7 75 d0                     	movzx esi, word ptr [ebp - 0x30]
0x804a997:   89 b5 e4 fe ff ff               	mov dword ptr [ebp - 0x11c], esi
0x804a99d:   0f bf 5d d2                     	movsx ebx, word ptr [ebp - 0x2e]
0x804a9a1:   89 9d e0 fe ff ff               	mov dword ptr [ebp - 0x120], ebx
0x804a9a7:   0f b7 55 d4                     	movzx edx, word ptr [ebp - 0x2c]
0x804a9ab:   89 95 dc fe ff ff               	mov dword ptr [ebp - 0x124], edx
0x804a9b1:   0f b7 75 d6                     	movzx esi, word ptr [ebp - 0x2a]
0x804a9b5:   89 b5 d8 fe ff ff               	mov dword ptr [ebp - 0x128], esi
0x804a9bb:   0f be 5d df                     	movsx ebx, byte ptr [ebp - 0x21]
0x804a9bf:   89 9d d4 fe ff ff               	mov dword ptr [ebp - 0x12c], ebx
0x804a9c5:   0f be 75 e9                     	movsx esi, byte ptr [ebp - 0x17]
0x804a9c9:   0f b7 5d ea                     	movzx ebx, word ptr [ebp - 0x16]
0x804a9cd:   0f b6 55 f3                     	movzx edx, byte ptr [ebp - 0xd]
0x804a9d1:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a9d4:   50                              	push eax
0x804a9d5:   51                              	push ecx
0x804a9d6:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a9d9:   57                              	push edi
0x804a9da:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a9e0:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a9e6:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a9ec:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x804a9f2:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a9f8:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a9fe:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804aa04:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804aa07:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804aa0d:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804aa10:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804aa13:   56                              	push esi
0x804aa14:   53                              	push ebx
0x804aa15:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804aa18:   52                              	push edx
0x804aa19:   e8 08 ec ff ff                  	call 0x8049626 <set_var>
0x804aa1e:   83 c4 50                        	add esp, 0x50
0x804aa21:   0f b6 45 91                     	movzx eax, byte ptr [ebp - 0x6f]
0x804aa25:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804aa28:   5b                              	pop ebx
0x804aa29:   5e                              	pop esi
0x804aa2a:   5f                              	pop edi
0x804aa2b:   5d                              	pop ebp
0x804aa2c:   c3                              	ret 
; function: main at 0x804aa2d -- 0x804ad17
0x804aa2d:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804aa31:   83 e4 f0                        	and esp, 0xfffffff0
0x804aa34:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804aa37:   55                              	push ebp
0x804aa38:   89 e5                           	mov ebp, esp
0x804aa3a:   53                              	push ebx
0x804aa3b:   51                              	push ecx
0x804aa3c:   83 ec 10                        	sub esp, 0x10
0x804aa3f:   e8 4c d9 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aa44:   81 c3 bc 25 00 00               	add ebx, 0x25bc
0x804aa4a:   89 c8                           	mov eax, ecx
0x804aa4c:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804aa53:   83 38 02                        	cmp dword ptr [eax], 2
0x804aa56:   75 26                           	jne 0x804aa7e <main+0x51>
0x804aa58:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804aa5b:   83 c0 04                        	add eax, 4
0x804aa5e:   8b 00                           	mov eax, dword ptr [eax]
0x804aa60:   83 ec 08                        	sub esp, 8
0x804aa63:   8d 93 f8 dd ff ff               	lea edx, [ebx - 0x2208]
0x804aa69:   52                              	push edx
0x804aa6a:   50                              	push eax
0x804aa6b:   e8 90 d8 ff ff                  	call 0x8048300 <strcmp>
0x804aa70:   83 c4 10                        	add esp, 0x10
0x804aa73:   85 c0                           	test eax, eax
0x804aa75:   75 07                           	jne 0x804aa7e <main+0x51>
0x804aa77:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804aa7e:   e8 d3 d9 ff ff                  	call 0x8048456 <platform_main_begin>
0x804aa83:   e8 e3 e9 ff ff                  	call 0x804946b <crc32_gentab>
0x804aa88:   e8 32 ed ff ff                  	call 0x80497bf <func_1>
0x804aa8d:   0f b6 83 24 00 00 00            	movzx eax, byte ptr [ebx + 0x24]
0x804aa94:   0f b6 c0                        	movzx eax, al
0x804aa97:   83 ec 04                        	sub esp, 4
0x804aa9a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa9d:   8d 93 fa dd ff ff               	lea edx, [ebx - 0x2206]
0x804aaa3:   52                              	push edx
0x804aaa4:   50                              	push eax
0x804aaa5:   e8 cd ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaaa:   83 c4 10                        	add esp, 0x10
0x804aaad:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804aab3:   89 c2                           	mov edx, eax
0x804aab5:   83 ec 04                        	sub esp, 4
0x804aab8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aabb:   8d 83 fe dd ff ff               	lea eax, [ebx - 0x2202]
0x804aac1:   50                              	push eax
0x804aac2:   52                              	push edx
0x804aac3:   e8 af ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aac8:   83 c4 10                        	add esp, 0x10
0x804aacb:   0f b7 83 2c 00 00 00            	movzx eax, word ptr [ebx + 0x2c]
0x804aad2:   0f b7 c0                        	movzx eax, ax
0x804aad5:   83 ec 04                        	sub esp, 4
0x804aad8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aadb:   8d 93 03 de ff ff               	lea edx, [ebx - 0x21fd]
0x804aae1:   52                              	push edx
0x804aae2:   50                              	push eax
0x804aae3:   e8 8f ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aae8:   83 c4 10                        	add esp, 0x10
0x804aaeb:   0f b6 83 2e 00 00 00            	movzx eax, byte ptr [ebx + 0x2e]
0x804aaf2:   0f be c0                        	movsx eax, al
0x804aaf5:   83 ec 04                        	sub esp, 4
0x804aaf8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aafb:   8d 93 08 de ff ff               	lea edx, [ebx - 0x21f8]
0x804ab01:   52                              	push edx
0x804ab02:   50                              	push eax
0x804ab03:   e8 6f ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab08:   83 c4 10                        	add esp, 0x10
0x804ab0b:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804ab11:   89 c2                           	mov edx, eax
0x804ab13:   83 ec 04                        	sub esp, 4
0x804ab16:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab19:   8d 83 0e de ff ff               	lea eax, [ebx - 0x21f2]
0x804ab1f:   50                              	push eax
0x804ab20:   52                              	push edx
0x804ab21:   e8 51 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab26:   83 c4 10                        	add esp, 0x10
0x804ab29:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804ab2f:   89 c2                           	mov edx, eax
0x804ab31:   83 ec 04                        	sub esp, 4
0x804ab34:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab37:   8d 83 14 de ff ff               	lea eax, [ebx - 0x21ec]
0x804ab3d:   50                              	push eax
0x804ab3e:   52                              	push edx
0x804ab3f:   e8 33 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab44:   83 c4 10                        	add esp, 0x10
0x804ab47:   0f b6 83 38 00 00 00            	movzx eax, byte ptr [ebx + 0x38]
0x804ab4e:   0f be c0                        	movsx eax, al
0x804ab51:   83 ec 04                        	sub esp, 4
0x804ab54:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab57:   8d 93 1a de ff ff               	lea edx, [ebx - 0x21e6]
0x804ab5d:   52                              	push edx
0x804ab5e:   50                              	push eax
0x804ab5f:   e8 13 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab64:   83 c4 10                        	add esp, 0x10
0x804ab67:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804ab6d:   83 ec 04                        	sub esp, 4
0x804ab70:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab73:   8d 93 20 de ff ff               	lea edx, [ebx - 0x21e0]
0x804ab79:   52                              	push edx
0x804ab7a:   50                              	push eax
0x804ab7b:   e8 f7 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab80:   83 c4 10                        	add esp, 0x10
0x804ab83:   0f b7 83 40 00 00 00            	movzx eax, word ptr [ebx + 0x40]
0x804ab8a:   0f b7 c0                        	movzx eax, ax
0x804ab8d:   83 ec 04                        	sub esp, 4
0x804ab90:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab93:   8d 93 26 de ff ff               	lea edx, [ebx - 0x21da]
0x804ab99:   52                              	push edx
0x804ab9a:   50                              	push eax
0x804ab9b:   e8 d7 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804aba0:   83 c4 10                        	add esp, 0x10
0x804aba3:   0f b7 83 42 00 00 00            	movzx eax, word ptr [ebx + 0x42]
0x804abaa:   0f b7 c0                        	movzx eax, ax
0x804abad:   83 ec 04                        	sub esp, 4
0x804abb0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abb3:   8d 93 2c de ff ff               	lea edx, [ebx - 0x21d4]
0x804abb9:   52                              	push edx
0x804abba:   50                              	push eax
0x804abbb:   e8 b7 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abc0:   83 c4 10                        	add esp, 0x10
0x804abc3:   0f b7 83 44 00 00 00            	movzx eax, word ptr [ebx + 0x44]
0x804abca:   98                              	cwde 
0x804abcb:   83 ec 04                        	sub esp, 4
0x804abce:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abd1:   8d 93 32 de ff ff               	lea edx, [ebx - 0x21ce]
0x804abd7:   52                              	push edx
0x804abd8:   50                              	push eax
0x804abd9:   e8 99 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abde:   83 c4 10                        	add esp, 0x10
0x804abe1:   0f b7 83 84 04 00 00            	movzx eax, word ptr [ebx + 0x484]
0x804abe8:   0f b7 c0                        	movzx eax, ax
0x804abeb:   83 ec 04                        	sub esp, 4
0x804abee:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abf1:   8d 93 38 de ff ff               	lea edx, [ebx - 0x21c8]
0x804abf7:   52                              	push edx
0x804abf8:   50                              	push eax
0x804abf9:   e8 79 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abfe:   83 c4 10                        	add esp, 0x10
0x804ac01:   0f b7 83 46 00 00 00            	movzx eax, word ptr [ebx + 0x46]
0x804ac08:   98                              	cwde 
0x804ac09:   83 ec 04                        	sub esp, 4
0x804ac0c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac0f:   8d 93 3e de ff ff               	lea edx, [ebx - 0x21c2]
0x804ac15:   52                              	push edx
0x804ac16:   50                              	push eax
0x804ac17:   e8 5b e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac1c:   83 c4 10                        	add esp, 0x10
0x804ac1f:   0f b7 83 86 04 00 00            	movzx eax, word ptr [ebx + 0x486]
0x804ac26:   98                              	cwde 
0x804ac27:   83 ec 04                        	sub esp, 4
0x804ac2a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac2d:   8d 93 44 de ff ff               	lea edx, [ebx - 0x21bc]
0x804ac33:   52                              	push edx
0x804ac34:   50                              	push eax
0x804ac35:   e8 3d e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac3a:   83 c4 10                        	add esp, 0x10
0x804ac3d:   0f b7 83 48 00 00 00            	movzx eax, word ptr [ebx + 0x48]
0x804ac44:   98                              	cwde 
0x804ac45:   83 ec 04                        	sub esp, 4
0x804ac48:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac4b:   8d 93 4a de ff ff               	lea edx, [ebx - 0x21b6]
0x804ac51:   52                              	push edx
0x804ac52:   50                              	push eax
0x804ac53:   e8 1f e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac58:   83 c4 10                        	add esp, 0x10
0x804ac5b:   0f b7 83 4a 00 00 00            	movzx eax, word ptr [ebx + 0x4a]
0x804ac62:   98                              	cwde 
0x804ac63:   83 ec 04                        	sub esp, 4
0x804ac66:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac69:   8d 93 50 de ff ff               	lea edx, [ebx - 0x21b0]
0x804ac6f:   52                              	push edx
0x804ac70:   50                              	push eax
0x804ac71:   e8 01 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac76:   83 c4 10                        	add esp, 0x10
0x804ac79:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804ac7f:   83 ec 04                        	sub esp, 4
0x804ac82:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac85:   8d 93 56 de ff ff               	lea edx, [ebx - 0x21aa]
0x804ac8b:   52                              	push edx
0x804ac8c:   50                              	push eax
0x804ac8d:   e8 e5 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac92:   83 c4 10                        	add esp, 0x10
0x804ac95:   0f b7 83 50 00 00 00            	movzx eax, word ptr [ebx + 0x50]
0x804ac9c:   98                              	cwde 
0x804ac9d:   83 ec 04                        	sub esp, 4
0x804aca0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aca3:   8d 93 5c de ff ff               	lea edx, [ebx - 0x21a4]
0x804aca9:   52                              	push edx
0x804acaa:   50                              	push eax
0x804acab:   e8 c7 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acb0:   83 c4 10                        	add esp, 0x10
0x804acb3:   0f b6 83 52 00 00 00            	movzx eax, byte ptr [ebx + 0x52]
0x804acba:   0f b6 c0                        	movzx eax, al
0x804acbd:   83 ec 04                        	sub esp, 4
0x804acc0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acc3:   8d 93 62 de ff ff               	lea edx, [ebx - 0x219e]
0x804acc9:   52                              	push edx
0x804acca:   50                              	push eax
0x804accb:   e8 a7 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acd0:   83 c4 10                        	add esp, 0x10
0x804acd3:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804acd9:   89 c2                           	mov edx, eax
0x804acdb:   83 ec 04                        	sub esp, 4
0x804acde:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ace1:   8d 83 68 de ff ff               	lea eax, [ebx - 0x2198]
0x804ace7:   50                              	push eax
0x804ace8:   52                              	push edx
0x804ace9:   e8 89 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acee:   83 c4 10                        	add esp, 0x10
0x804acf1:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804acf7:   f7 d0                           	not eax
0x804acf9:   83 ec 08                        	sub esp, 8
0x804acfc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acff:   50                              	push eax
0x804ad00:   e8 61 d7 ff ff                  	call 0x8048466 <platform_main_end>
0x804ad05:   83 c4 10                        	add esp, 0x10
0x804ad08:   b8 00 00 00 00                  	mov eax, 0
0x804ad0d:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ad10:   59                              	pop ecx
0x804ad11:   5b                              	pop ebx
0x804ad12:   5d                              	pop ebp
0x804ad13:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ad16:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ad17 -- 0x804ad1b
0x804ad17:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ad1a:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804ad1b -- 0x804ad1f
0x804ad1b:   8b 14 24                        	mov edx, dword ptr [esp]
0x804ad1e:   c3                              	ret 
; data inside code section at 0x804ad1f -- 0x804ad20
0x804ad1f:   90                                                 |.               |
; function: __libc_csu_init at 0x804ad20 -- 0x804ad7d
0x804ad20:   55                              	push ebp
0x804ad21:   57                              	push edi
0x804ad22:   56                              	push esi
0x804ad23:   53                              	push ebx
0x804ad24:   e8 67 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ad29:   81 c3 d7 22 00 00               	add ebx, 0x22d7
0x804ad2f:   83 ec 0c                        	sub esp, 0xc
0x804ad32:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ad36:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ad3c:   e8 8b d5 ff ff                  	call 0x80482cc <_init>
0x804ad41:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804ad47:   29 c6                           	sub esi, eax
0x804ad49:   c1 fe 02                        	sar esi, 2
0x804ad4c:   85 f6                           	test esi, esi
0x804ad4e:   74 25                           	je 0x804ad75 <__libc_csu_init+0x55>
0x804ad50:   31 ff                           	xor edi, edi
0x804ad52:   8d b6 00 00 00 00               	lea esi, [esi]
0x804ad58:   83 ec 04                        	sub esp, 4
0x804ad5b:   55                              	push ebp
0x804ad5c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ad60:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ad64:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804ad6b:   83 c7 01                        	add edi, 1
0x804ad6e:   83 c4 10                        	add esp, 0x10
0x804ad71:   39 fe                           	cmp esi, edi
0x804ad73:   75 e3                           	jne 0x804ad58 <__libc_csu_init+0x38>
0x804ad75:   83 c4 0c                        	add esp, 0xc
0x804ad78:   5b                              	pop ebx
0x804ad79:   5e                              	pop esi
0x804ad7a:   5f                              	pop edi
0x804ad7b:   5d                              	pop ebp
0x804ad7c:   c3                              	ret 
; data inside code section at 0x804ad7d -- 0x804ad80
0x804ad7d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804ad80 -- 0x804ad82
0x804ad80:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804ad84 -- 0x804ad98
0x804ad84:   53                              	push ebx
0x804ad85:   83 ec 08                        	sub esp, 8
0x804ad88:   e8 03 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ad8d:   81 c3 73 22 00 00               	add ebx, 0x2273
0x804ad93:   83 c4 08                        	add esp, 8
0x804ad96:   5b                              	pop ebx
0x804ad97:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 9c ad 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804ad98:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804ada8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804adb8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804adc8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804add8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ade8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804adf8:   31 00 67 5f 35 00 67 5f  31 38 00 67 5f 36 36 00   |1.g_5.g_18.g_66.|
0x804ae08:   67 5f 31 36 30 00 67 5f  31 37 38 00 67 5f 31 37   |g_160.g_178.g_17|
0x804ae18:   39 00 67 5f 32 30 33 00  67 5f 32 30 39 00 67 5f   |9.g_203.g_209.g_|
0x804ae28:   32 36 31 00 67 5f 32 38  38 00 67 5f 33 30 31 00   |261.g_288.g_301.|
0x804ae38:   67 5f 33 30 32 00 67 5f  33 31 37 00 67 5f 34 32   |g_302.g_317.g_42|
0x804ae48:   33 00 67 5f 34 32 34 00  67 5f 34 32 35 00 67 5f   |3.g_424.g_425.g_|
0x804ae58:   34 32 36 00 67 5f 34 34  32 00 67 5f 34 36 39 00   |426.g_442.g_469.|
0x804ae68:   67 5f 35 31 38 00 00 00  00 00 00 3f ff ff ff 7e   |g_518......?...~|
0x804ae78:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x804ae88:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x804ae98:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804aea8:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804aeb8:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804aec8:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804aed8:   01                                                 |.               |
; section: .eh_frame_hdr
0x804aed8:   01 1b 03 3b b8 02 00 00  56 00 00 00 18 d4 ff ff   |...;....V.......|
0x804aee8:   e8 02 00 00 58 d4 ff ff  0c 03 00 00 a8 d4 ff ff   |....X...........|
0x804aef8:   d4 02 00 00 7e d5 ff ff  20 03 00 00 8e d5 ff ff   |....~... .......|
0x804af08:   40 03 00 00 bc d5 ff ff  64 03 00 00 da d5 ff ff   |@.......d.......|
0x804af18:   84 03 00 00 02 d6 ff ff  a4 03 00 00 2c d6 ff ff   |............,...|
0x804af28:   c4 03 00 00 55 d6 ff ff  e4 03 00 00 98 d6 ff ff   |....U...........|
0x804af38:   04 04 00 00 d9 d6 ff ff  24 04 00 00 31 d7 ff ff   |........$...1...|
0x804af48:   48 04 00 00 83 d7 ff ff  6c 04 00 00 c0 d7 ff ff   |H.......l.......|
0x804af58:   8c 04 00 00 f7 d7 ff ff  ac 04 00 00 16 d8 ff ff   |................|
0x804af68:   cc 04 00 00 40 d8 ff ff  ec 04 00 00 6c d8 ff ff   |....@.......l...|
0x804af78:   0c 05 00 00 97 d8 ff ff  2c 05 00 00 e0 d8 ff ff   |........,.......|
0x804af88:   4c 05 00 00 27 d9 ff ff  6c 05 00 00 81 d9 ff ff   |L...'...l.......|
0x804af98:   90 05 00 00 d5 d9 ff ff  b4 05 00 00 14 da ff ff   |................|
0x804afa8:   d4 05 00 00 4d da ff ff  f4 05 00 00 6f da ff ff   |....M.......o...|
0x804afb8:   14 06 00 00 bd da ff ff  34 06 00 00 f9 da ff ff   |........4.......|
0x804afc8:   54 06 00 00 82 db ff ff  74 06 00 00 b4 db ff ff   |T.......t.......|
0x804afd8:   94 06 00 00 e4 db ff ff  b4 06 00 00 29 dc ff ff   |............)...|
0x804afe8:   d4 06 00 00 68 dc ff ff  f4 06 00 00 9a dc ff ff   |....h...........|
0x804aff8:   14 07 00 00 c6 dc ff ff  34 07 00 00 e4 dc ff ff   |........4.......|
0x804b008:   54 07 00 00 0c dd ff ff  74 07 00 00 31 dd ff ff   |T.......t...1...|
0x804b018:   94 07 00 00 56 dd ff ff  b4 07 00 00 8d dd ff ff   |....V...........|
0x804b028:   d4 07 00 00 c1 dd ff ff  f4 07 00 00 13 de ff ff   |................|
0x804b038:   18 08 00 00 5f de ff ff  3c 08 00 00 96 de ff ff   |...._...<.......|
0x804b048:   5c 08 00 00 c7 de ff ff  7c 08 00 00 e6 de ff ff   |\.......|.......|
0x804b058:   9c 08 00 00 10 df ff ff  bc 08 00 00 38 df ff ff   |............8...|
0x804b068:   dc 08 00 00 61 df ff ff  fc 08 00 00 9d df ff ff   |....a...........|
0x804b078:   1c 09 00 00 d7 df ff ff  3c 09 00 00 2a e0 ff ff   |........<...*...|
0x804b088:   60 09 00 00 77 e0 ff ff  84 09 00 00 af e0 ff ff   |`...w...........|
0x804b098:   a4 09 00 00 e1 e0 ff ff  c4 09 00 00 f5 e0 ff ff   |................|
0x804b0a8:   e4 09 00 00 0c e1 ff ff  04 0a 00 00 21 e1 ff ff   |............!...|
0x804b0b8:   24 0a 00 00 37 e1 ff ff  44 0a 00 00 5e e1 ff ff   |$...7...D...^...|
0x804b0c8:   64 0a 00 00 83 e1 ff ff  84 0a 00 00 c2 e1 ff ff   |d...............|
0x804b0d8:   a4 0a 00 00 fb e1 ff ff  c4 0a 00 00 27 e2 ff ff   |............'...|
0x804b0e8:   e4 0a 00 00 4d e2 ff ff  04 0b 00 00 8f e2 ff ff   |....M...........|
0x804b0f8:   24 0b 00 00 d1 e2 ff ff  44 0b 00 00 13 e3 ff ff   |$.......D.......|
0x804b108:   64 0b 00 00 88 e3 ff ff  84 0b 00 00 e5 e3 ff ff   |d...............|
0x804b118:   a4 0b 00 00 42 e4 ff ff  c4 0b 00 00 9f e4 ff ff   |....B...........|
0x804b128:   e4 0b 00 00 2f e5 ff ff  04 0c 00 00 93 e5 ff ff   |..../...........|
0x804b138:   24 0c 00 00 03 e6 ff ff  44 0c 00 00 4a e6 ff ff   |$.......D...J...|
0x804b148:   68 0c 00 00 9f e6 ff ff  88 0c 00 00 e6 e6 ff ff   |h...............|
0x804b158:   ac 0c 00 00 4e e7 ff ff  d0 0c 00 00 e7 e8 ff ff   |....N...........|
0x804b168:   00 0d 00 00 55 fb ff ff  30 0d 00 00 3f fe ff ff   |....U...0...?...|
0x804b178:   68 0d 00 00 43 fe ff ff  7c 0d 00 00 48 fe ff ff   |h...C...|...H...|
0x804b188:   90 0d 00 00 a8 fe ff ff  dc 0d 00 00 14            |.............   |
; section: .eh_frame
0x804b194:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b1a4:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b1b4:   cc d1 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b1c4:   30 00 00 00 28 d1 ff ff  40 00 00 00 00 0e 08 46   |0...(...@......F|
0x804b1d4:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b1e4:   10 00 00 00 54 00 00 00  44 d1 ff ff 08 00 00 00   |....T...D.......|
0x804b1f4:   00 00 00 00 1c 00 00 00  68 00 00 00 56 d2 ff ff   |........h...V...|
0x804b204:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b214:   04 04 00 00 20 00 00 00  88 00 00 00 46 d2 ff ff   |.... .......F...|
0x804b224:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b234:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b244:   50 d2 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |P........A....B.|
0x804b254:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b264:   4e d2 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |N...(....A....B.|
0x804b274:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b284:   56 d2 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |V...*....A....B.|
0x804b294:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b2a4:   60 d2 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |`...)....A....B.|
0x804b2b4:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b2c4:   69 d2 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |i...C....A....B.|
0x804b2d4:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b2e4:   8c d2 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b2f4:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b304:   ad d2 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b314:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b324:   90 01 00 00 e1 d2 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b334:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b344:   1c 00 00 00 b4 01 00 00  0f d3 ff ff 3d 00 00 00   |............=...|
0x804b354:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b364:   1c 00 00 00 d4 01 00 00  2c d3 ff ff 37 00 00 00   |........,...7...|
0x804b374:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b384:   1c 00 00 00 f4 01 00 00  43 d3 ff ff 1f 00 00 00   |........C.......|
0x804b394:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b3a4:   1c 00 00 00 14 02 00 00  42 d3 ff ff 2a 00 00 00   |........B...*...|
0x804b3b4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b3c4:   1c 00 00 00 34 02 00 00  4c d3 ff ff 2c 00 00 00   |....4...L...,...|
0x804b3d4:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b3e4:   1c 00 00 00 54 02 00 00  58 d3 ff ff 2b 00 00 00   |....T...X...+...|
0x804b3f4:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b404:   1c 00 00 00 74 02 00 00  63 d3 ff ff 49 00 00 00   |....t...c...I...|
0x804b414:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b424:   1c 00 00 00 94 02 00 00  8c d3 ff ff 47 00 00 00   |............G...|
0x804b434:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b444:   20 00 00 00 b4 02 00 00  b3 d3 ff ff 5a 00 00 00   | ...........Z...|
0x804b454:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b464:   c5 0c 04 04 20 00 00 00  d8 02 00 00 e9 d3 ff ff   |.... ...........|
0x804b474:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b484:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b494:   19 d4 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b4a4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b4b4:   38 d4 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |8...9....A....B.|
0x804b4c4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b4d4:   51 d4 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |Q..."....A....B.|
0x804b4e4:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b4f4:   53 d4 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |S...N....A....B.|
0x804b504:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b514:   81 d4 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b524:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b534:   9d d4 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b544:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b554:   06 d5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b564:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b574:   18 d5 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b584:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b594:   28 d5 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |(...E....A....B.|
0x804b5a4:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b5b4:   4d d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |M...?....A....B.|
0x804b5c4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b5d4:   6c d5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |l...2....A....B.|
0x804b5e4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b5f4:   7e d5 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |~...,....A....B.|
0x804b604:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b614:   8a d5 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b624:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b634:   88 d5 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b644:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b654:   90 d5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b664:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b674:   95 d5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b684:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b694:   9a d5 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b6a4:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b6b4:   b1 d5 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b6c4:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b6d4:   c5 d5 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b6e4:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b6f4:   60 05 00 00 f3 d5 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b704:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b714:   1c 00 00 00 84 05 00 00  1b d6 ff ff 37 00 00 00   |............7...|
0x804b724:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b734:   1c 00 00 00 a4 05 00 00  32 d6 ff ff 31 00 00 00   |........2...1...|
0x804b744:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b754:   1c 00 00 00 c4 05 00 00  43 d6 ff ff 1f 00 00 00   |........C.......|
0x804b764:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b774:   1c 00 00 00 e4 05 00 00  42 d6 ff ff 2a 00 00 00   |........B...*...|
0x804b784:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b794:   1c 00 00 00 04 06 00 00  4c d6 ff ff 28 00 00 00   |........L...(...|
0x804b7a4:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b7b4:   1c 00 00 00 24 06 00 00  54 d6 ff ff 29 00 00 00   |....$...T...)...|
0x804b7c4:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b7d4:   1c 00 00 00 44 06 00 00  5d d6 ff ff 3c 00 00 00   |....D...]...<...|
0x804b7e4:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b7f4:   1c 00 00 00 64 06 00 00  79 d6 ff ff 3a 00 00 00   |....d...y...:...|
0x804b804:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b814:   20 00 00 00 84 06 00 00  93 d6 ff ff 53 00 00 00   | ...........S...|
0x804b824:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b834:   c5 0c 04 04 20 00 00 00  a8 06 00 00 c2 d6 ff ff   |.... ...........|
0x804b844:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b854:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b864:   eb d6 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b874:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b884:   03 d7 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b894:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b8a4:   15 d7 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b8b4:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b8c4:   09 d7 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b8d4:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b8e4:   00 d7 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b8f4:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b904:   f5 d6 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b914:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b924:   eb d6 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b934:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b944:   f2 d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b954:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b964:   f7 d6 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b974:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b984:   16 d7 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b994:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b9a4:   2f d7 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |/...,....A....B.|
0x804b9b4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b9c4:   3b d7 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |;...&....A....B.|
0x804b9d4:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b9e4:   41 d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |A...B....A....B.|
0x804b9f4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804ba04:   63 d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |c...B....A....B.|
0x804ba14:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804ba24:   85 d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804ba34:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804ba44:   a7 d7 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804ba54:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804ba64:   fc d7 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804ba74:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804ba84:   39 d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |9...]....A....B.|
0x804ba94:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804baa4:   76 d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |v...]....A....B.|
0x804bab4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bac4:   b3 d8 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bad4:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804bae4:   23 d9 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |#...d....A....B.|
0x804baf4:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bb04:   67 d9 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |g...p....A....B.|
0x804bb14:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bb24:   b7 d9 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804bb34:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bb44:   b0 09 00 00 da d9 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804bb54:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bb64:   d0 09 00 00 0f da ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804bb74:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bb84:   20 00 00 00 f4 09 00 00  32 da ff ff 68 00 00 00   | .......2...h...|
0x804bb94:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bba4:   0c 04 04 00 2c 00 00 00  18 0a 00 00 76 da ff ff   |....,.......v...|
0x804bbb4:   99 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804bbc4:   86 04 83 05 03 8c 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bbd4:   04 00 00 00 2c 00 00 00  48 0a 00 00 df db ff ff   |....,...H.......|
0x804bbe4:   6e 12 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |n....A....B..I..|
0x804bbf4:   86 04 83 05 03 5e 12 c3  41 c6 41 c7 41 c5 0c 04   |.....^..A.A.A...|
0x804bc04:   04 00 00 00 34 00 00 00  78 0a 00 00 1d ee ff ff   |....4...x.......|
0x804bc14:   ea 02 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804bc24:   0f 03 75 78 06 10 03 02  75 7c 03 d5 02 c1 0c 01   |..ux....u|......|
0x804bc34:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bc44:   b0 0a 00 00 cf f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804bc54:   10 00 00 00 c4 0a 00 00  bf f0 ff ff 04 00 00 00   |................|
0x804bc64:   00 00 00 00 48 00 00 00  d8 0a 00 00 b0 f0 ff ff   |....H...........|
0x804bc74:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bc84:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bc94:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bca4:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bcb4:   10 00 00 00 24 0b 00 00  c4 f0 ff ff 02 00 00 00   |....$...........|
0x804bcc4:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 84 ad 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff 01 00 00 00   |................|
0x804d028:   01 00 00 00 02 00 ce 00  61 d8 18 80 c0 82 c0 2f   |........a....../|
0x804d038:   01 00 00 00 ff ff ff ff  08 00 7c 37 ff ff fd ff   |..........|7....|
0x804d048:   18 f6 01 00 7d f4 ea 22  fa fe 9e 00 f9 ff ff ff   |....}.."........|
0x804d058:   ??                                                 |?               |
