;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-04-25 01:13:06
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 d0 da ff ff               	lea eax, [ebx - 0x2530]
0x804835c:   50                              	push eax
0x804835d:   8d 83 70 da ff ff               	lea eax, [ebx - 0x2590]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 0f a6 04 08               	mov eax, 0x804a60f
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 90 d0 04 08                  	mov eax, 0x804d090
0x80483a5:   3d 90 d0 04 08                  	cmp eax, 0x804d090
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 90 d0 04 08                  	push 0x804d090
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 90 d0 04 08                  	mov eax, 0x804d090
0x80483e5:   2d 90 d0 04 08                  	sub eax, 0x804d090
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 90 d0 04 08                  	push 0x804d090
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d a0 d0 04 08 00            	cmp byte ptr [0x804d0a0], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 a0 d0 04 08 01            	mov byte ptr [0x804d0a0], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 fc 25 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 e8 25 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 f0 da ff ff               	lea edx, [eax - 0x2510]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 bb 25 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 9d 25 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 75 25 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 4b 25 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 22 25 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 df 24 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 9d 24 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 45 24 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 f4 23 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 b7 23 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 80 23 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 61 23 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 37 23 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 0b 23 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 e0 22 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 97 22 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 4f 22 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 f5 21 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 a2 21 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 63 21 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 2d 21 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 0b 21 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 bd 20 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 81 20 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 f8 1f 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 c6 1f 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 96 1f 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 51 1f 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 12 1f 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 e0 1e 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 b1 1e 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 93 1e 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 6b 1e 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 46 1e 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 21 1e 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 ea 1d 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 b5 1d 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 63 1d 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 18 1d 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 e1 1c 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 b0 1c 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 91 1c 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 67 1c 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 3f 1c 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 16 1c 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 da 1b 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 9f 1b 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 4c 1b 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 00 1b 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 c8 1a 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 99 1a 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 85 1a 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 6e 1a 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 59 1a 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 43 1a 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 1c 1a 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 f7 19 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 b8 19 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 7f 19 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 53 19 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 2d 19 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 04 dc ff ff               	fld dword ptr [eax - 0x23fc]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 04 dc ff ff               	fld dword ptr [eax - 0x23fc]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 08 dc ff ff               	fld dword ptr [eax - 0x23f8]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 eb 18 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 04 dc ff ff               	fld dword ptr [eax - 0x23fc]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 04 dc ff ff               	fld dword ptr [eax - 0x23fc]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 08 dc ff ff               	fld dword ptr [eax - 0x23f8]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 a9 18 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 0c dc ff ff               	fld dword ptr [eax - 0x23f4]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 10 dc ff ff               	fld dword ptr [eax - 0x23f0]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 14 dc ff ff               	fld dword ptr [eax - 0x23ec]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 67 18 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 18 dc ff ff               	fld dword ptr [eax - 0x23e8]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 1c dc ff ff               	fld dword ptr [eax - 0x23e4]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 20 dc ff ff               	fld dword ptr [eax - 0x23e0]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 ef 17 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 28 dc ff ff               	fld qword ptr [eax - 0x23d8]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 28 dc ff ff               	fld qword ptr [eax - 0x23d8]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 30 dc ff ff               	fld qword ptr [eax - 0x23d0]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 92 17 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 28 dc ff ff               	fld qword ptr [eax - 0x23d8]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 28 dc ff ff               	fld qword ptr [eax - 0x23d8]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 30 dc ff ff               	fld qword ptr [eax - 0x23d0]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 35 17 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 38 dc ff ff               	fld qword ptr [eax - 0x23c8]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 40 dc ff ff               	fld qword ptr [eax - 0x23c0]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 48 dc ff ff               	fld qword ptr [eax - 0x23b8]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 d8 16 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 50 dc ff ff               	fld qword ptr [eax - 0x23b0]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 58 dc ff ff               	fld qword ptr [eax - 0x23a8]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 60 dc ff ff               	fld qword ptr [eax - 0x23a0]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 48 16 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 68 dc ff ff               	fld dword ptr [eax - 0x2398]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 6c dc ff ff               	fld dword ptr [eax - 0x2394]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 e4 15 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 c0 00 00 00            	mov dword ptr [eax + edx*4 + 0xc0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 73 15 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 c0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xc0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 30 15 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 00 db ff ff               	lea eax, [ebx - 0x2500]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 24 db ff ff               	lea eax, [ebx - 0x24dc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804982f
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 68                        	sub esp, 0x68
0x804962f:   e8 2a 14 00 00                  	call 0x804aa5e <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 39 00 00               	add edx, 0x39cc
0x804963a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804963d:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049640:   8b 4d 14                        	mov ecx, dword ptr [ebp + 0x14]
0x8049643:   8b 5d 18                        	mov ebx, dword ptr [ebp + 0x18]
0x8049646:   8b 75 20                        	mov esi, dword ptr [ebp + 0x20]
0x8049649:   8b 7d 28                        	mov edi, dword ptr [ebp + 0x28]
0x804964c:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x804964f:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049652:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x8049655:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049658:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x804965b:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804965e:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x8049661:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049664:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x8049667:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804966a:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x804966d:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049670:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x8049673:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049676:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x8049679:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804967c:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x804967f:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049682:   8b 85 80 00 00 00               	mov eax, dword ptr [ebp + 0x80]
0x8049688:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804968b:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x804968f:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x8049693:   89 c8                           	mov eax, ecx
0x8049695:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x8049698:   89 d8                           	mov eax, ebx
0x804969a:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x804969d:   89 f0                           	mov eax, esi
0x804969f:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496a2:   89 f8                           	mov eax, edi
0x80496a4:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x80496a7:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x80496ab:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496af:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x80496b3:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x80496b6:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80496ba:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496bd:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80496c1:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496c5:   0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x80496c9:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496cc:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x80496d0:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x80496d4:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x80496d8:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496dc:   0f b7 45 94                     	movzx eax, word ptr [ebp - 0x6c]
0x80496e0:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x80496e4:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x80496e8:   66 89 45 bc                     	mov word ptr [ebp - 0x44], ax
0x80496ec:   0f b7 45 8c                     	movzx eax, word ptr [ebp - 0x74]
0x80496f0:   66 89 45 b8                     	mov word ptr [ebp - 0x48], ax
0x80496f4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80496f7:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x80496fd:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x8049701:   66 89 82 28 00 00 00            	mov word ptr [edx + 0x28], ax
0x8049708:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x804970b:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x8049711:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x8049715:   88 82 30 00 00 00               	mov byte ptr [edx + 0x30], al
0x804971b:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x804971f:   88 82 31 00 00 00               	mov byte ptr [edx + 0x31], al
0x8049725:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x8049728:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x804972e:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x8049732:   88 82 38 00 00 00               	mov byte ptr [edx + 0x38], al
0x8049738:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x804973b:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x8049741:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049745:   88 82 40 00 00 00               	mov byte ptr [edx + 0x40], al
0x804974b:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804974f:   66 89 82 42 00 00 00            	mov word ptr [edx + 0x42], ax
0x8049756:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049759:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x804975f:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x8049762:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x8049768:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x804976b:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x8049771:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x8049775:   88 82 50 00 00 00               	mov byte ptr [edx + 0x50], al
0x804977b:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x804977e:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x8049784:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049787:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x804978d:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049790:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x8049796:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x804979a:   88 82 60 00 00 00               	mov byte ptr [edx + 0x60], al
0x80497a0:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x80497a3:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x80497a9:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x80497ac:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x80497b2:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x80497b6:   66 89 82 6c 00 00 00            	mov word ptr [edx + 0x6c], ax
0x80497bd:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x80497c1:   88 82 6e 00 00 00               	mov byte ptr [edx + 0x6e], al
0x80497c7:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x80497ca:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x80497d0:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x80497d4:   66 89 82 74 00 00 00            	mov word ptr [edx + 0x74], ax
0x80497db:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80497df:   66 89 82 76 00 00 00            	mov word ptr [edx + 0x76], ax
0x80497e6:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x80497ea:   66 89 82 78 00 00 00            	mov word ptr [edx + 0x78], ax
0x80497f1:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x80497f4:   89 82 7c 00 00 00               	mov dword ptr [edx + 0x7c], eax
0x80497fa:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x80497fd:   89 82 80 00 00 00               	mov dword ptr [edx + 0x80], eax
0x8049803:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x8049807:   66 89 82 84 00 00 00            	mov word ptr [edx + 0x84], ax
0x804980e:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x8049811:   89 82 88 00 00 00               	mov dword ptr [edx + 0x88], eax
0x8049817:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x804981b:   66 89 82 8c 00 00 00            	mov word ptr [edx + 0x8c], ax
0x8049822:   b8 00 00 00 00                  	mov eax, 0
0x8049827:   83 c4 68                        	add esp, 0x68
0x804982a:   5b                              	pop ebx
0x804982b:   5e                              	pop esi
0x804982c:   5f                              	pop edi
0x804982d:   5d                              	pop ebp
0x804982e:   c3                              	ret 
; function: func_1 at 0x804982f -- 0x804a60f
0x804982f:   55                              	push ebp
0x8049830:   89 e5                           	mov ebp, esp
0x8049832:   57                              	push edi
0x8049833:   56                              	push esi
0x8049834:   53                              	push ebx
0x8049835:   81 ec 44 01 00 00               	sub esp, 0x144
0x804983b:   e8 1a 12 00 00                  	call 0x804aa5a <__x86.get_pc_thunk.ax>
0x8049840:   05 c0 37 00 00                  	add eax, 0x37c0
0x8049845:   c7 85 50 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xb0], 0xffffffff
0x804984f:   66 c7 85 4e ff ff ff 01 00      	mov word ptr [ebp - 0xb2], 1
0x8049858:   c7 85 48 ff ff ff bf 52 b5 b1   	mov dword ptr [ebp - 0xb8], 0xb1b552bf
0x8049862:   c7 45 e4 35 c0 be e0            	mov dword ptr [ebp - 0x1c], 0xe0bec035
0x8049869:   c6 45 8b 01                     	mov byte ptr [ebp - 0x75], 1
0x804986d:   c6 85 47 ff ff ff 76            	mov byte ptr [ebp - 0xb9], 0x76
0x8049874:   c7 45 d8 ff ff ff ff            	mov dword ptr [ebp - 0x28], 0xffffffff
0x804987b:   c6 85 46 ff ff ff 5c            	mov byte ptr [ebp - 0xba], 0x5c
0x8049882:   c7 85 40 ff ff ff c0 1c 85 16   	mov dword ptr [ebp - 0xc0], 0x16851cc0
0x804988c:   c6 85 3f ff ff ff 5e            	mov byte ptr [ebp - 0xc1], 0x5e
0x8049893:   66 c7 45 92 9a 58               	mov word ptr [ebp - 0x6e], 0x589a
0x8049899:   c7 85 38 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0xc8], 0xfffffffe
0x80498a3:   c7 85 34 ff ff ff 07 00 00 00   	mov dword ptr [ebp - 0xcc], 7
0x80498ad:   c7 85 30 ff ff ff fe 9c 8a 34   	mov dword ptr [ebp - 0xd0], 0x348a9cfe
0x80498b7:   c6 85 2f ff ff ff d8            	mov byte ptr [ebp - 0xd1], 0xd8
0x80498be:   c7 85 28 ff ff ff 32 82 90 c8   	mov dword ptr [ebp - 0xd8], 0xc8908232
0x80498c8:   c7 85 24 ff ff ff 5c 21 88 c9   	mov dword ptr [ebp - 0xdc], 0xc988215c
0x80498d2:   c7 85 20 ff ff ff c3 56 31 77   	mov dword ptr [ebp - 0xe0], 0x773156c3
0x80498dc:   c6 85 1f ff ff ff b0            	mov byte ptr [ebp - 0xe1], 0xb0
0x80498e3:   c7 45 d4 ff ff ff ff            	mov dword ptr [ebp - 0x2c], 0xffffffff
0x80498ea:   c7 85 74 ff ff ff aa 54 e1 7b   	mov dword ptr [ebp - 0x8c], 0x7be154aa
0x80498f4:   66 c7 45 9a 9a 9b               	mov word ptr [ebp - 0x66], 0x9b9a
0x80498fa:   c6 85 73 ff ff ff 4e            	mov byte ptr [ebp - 0x8d], 0x4e
0x8049901:   c7 85 6c ff ff ff f8 ff ff ff   	mov dword ptr [ebp - 0x94], 0xfffffff8
0x804990b:   66 c7 85 6a ff ff ff 01 00      	mov word ptr [ebp - 0x96], 1
0x8049914:   66 c7 85 68 ff ff ff 6e c8      	mov word ptr [ebp - 0x98], 0xc86e
0x804991d:   66 c7 85 66 ff ff ff d0 e2      	mov word ptr [ebp - 0x9a], 0xe2d0
0x8049926:   c7 85 18 ff ff ff 73 c2 cd 00   	mov dword ptr [ebp - 0xe8], 0xcdc273
0x8049930:   c7 85 14 ff ff ff f7 ff ff ff   	mov dword ptr [ebp - 0xec], 0xfffffff7
0x804993a:   66 c7 45 e2 5e b5               	mov word ptr [ebp - 0x1e], 0xb55e
0x8049940:   c7 85 10 ff ff ff a3 48 c3 d2   	mov dword ptr [ebp - 0xf0], 0xd2c348a3
0x804994a:   66 c7 45 d2 01 00               	mov word ptr [ebp - 0x2e], 1
0x8049950:   66 c7 85 0e ff ff ff 50 9b      	mov word ptr [ebp - 0xf2], 0x9b50
0x8049959:   c7 45 ac ec a4 c5 82            	mov dword ptr [ebp - 0x54], 0x82c5a4ec
0x8049960:   c7 45 e8 21 05 f9 df            	mov dword ptr [ebp - 0x18], 0xdff90521
0x8049967:   66 c7 85 0c ff ff ff fd ff      	mov word ptr [ebp - 0xf4], 0xfffd
0x8049970:   c6 45 c7 00                     	mov byte ptr [ebp - 0x39], 0
0x8049974:   c7 45 c0 7a ad 90 9a            	mov dword ptr [ebp - 0x40], 0x9a90ad7a
0x804997b:   c7 45 bc 00 00 00 00            	mov dword ptr [ebp - 0x44], 0
0x8049982:   c6 85 0b ff ff ff b1            	mov byte ptr [ebp - 0xf5], 0xb1
0x8049989:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x8049990:   c6 85 0a ff ff ff f6            	mov byte ptr [ebp - 0xf6], 0xf6
0x8049997:   0f bf 95 0e ff ff ff            	movsx edx, word ptr [ebp - 0xf2]
0x804999e:   66 83 bd 0e ff ff ff ff         	cmp word ptr [ebp - 0xf2], -1
0x80499a6:   74 11                           	je 0x80499b9 <func_1+0x18a>
0x80499a8:   66 83 bd 0e ff ff ff 00         	cmp word ptr [ebp - 0xf2], 0
0x80499b0:   74 07                           	je 0x80499b9 <func_1+0x18a>
0x80499b2:   b8 01 00 00 00                  	mov eax, 1
0x80499b7:   eb 05                           	jmp 0x80499be <func_1+0x18f>
0x80499b9:   b8 00 00 00 00                  	mov eax, 0
0x80499be:   89 c1                           	mov ecx, eax
0x80499c0:   0f b6 45 8b                     	movzx eax, byte ptr [ebp - 0x75]
0x80499c4:   01 c8                           	add eax, ecx
0x80499c6:   0b 85 48 ff ff ff               	or eax, dword ptr [ebp - 0xb8]
0x80499cc:   21 c2                           	and edx, eax
0x80499ce:   0f bf 85 0e ff ff ff            	movsx eax, word ptr [ebp - 0xf2]
0x80499d5:   39 c2                           	cmp edx, eax
0x80499d7:   0f 95 c0                        	setne al
0x80499da:   0f b6 c0                        	movzx eax, al
0x80499dd:   39 85 48 ff ff ff               	cmp dword ptr [ebp - 0xb8], eax
0x80499e3:   0f 97 c0                        	seta al
0x80499e6:   88 85 47 ff ff ff               	mov byte ptr [ebp - 0xb9], al
0x80499ec:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x80499ef:   0f be c0                        	movsx eax, al
0x80499f2:   ba 01 00 00 00                  	mov edx, 1
0x80499f7:   89 c1                           	mov ecx, eax
0x80499f9:   d3 e2                           	shl edx, cl
0x80499fb:   89 d0                           	mov eax, edx
0x80499fd:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049a00:   0f be 85 0a ff ff ff            	movsx eax, byte ptr [ebp - 0xf6]
0x8049a07:   83 e0 01                        	and eax, 1
0x8049a0a:   85 c0                           	test eax, eax
0x8049a0c:   74 07                           	je 0x8049a15 <func_1+0x1e6>
0x8049a0e:   80 bd 0a ff ff ff 00            	cmp byte ptr [ebp - 0xf6], 0
0x8049a15:   c6 85 46 ff ff ff 00            	mov byte ptr [ebp - 0xba], 0
0x8049a1c:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049a1f:   09 85 40 ff ff ff               	or dword ptr [ebp - 0xc0], eax
0x8049a25:   c7 45 d8 05 00 00 00            	mov dword ptr [ebp - 0x28], 5
0x8049a2c:   83 7d d8 20                     	cmp dword ptr [ebp - 0x28], 0x20
0x8049a30:   0f 86 28 02 00 00               	jbe 0x8049c5e <func_1+0x42f>
0x8049a36:   c7 85 e0 fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x120], 4
0x8049a40:   c7 85 40 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xc0], 0
0x8049a4a:   e9 cc 00 00 00                  	jmp 0x8049b1b <func_1+0x2ec>
0x8049a4f:   0f be 95 46 ff ff ff            	movsx edx, byte ptr [ebp - 0xba]
0x8049a56:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x8049a5c:   3b 85 48 ff ff ff               	cmp eax, dword ptr [ebp - 0xb8]
0x8049a62:   0f 95 c0                        	setne al
0x8049a65:   0f b6 c8                        	movzx ecx, al
0x8049a68:   0f b6 85 47 ff ff ff            	movzx eax, byte ptr [ebp - 0xb9]
0x8049a6f:   39 c1                           	cmp ecx, eax
0x8049a71:   0f 9c c0                        	setl al
0x8049a74:   0f b6 c0                        	movzx eax, al
0x8049a77:   21 d0                           	and eax, edx
0x8049a79:   0d 2c b5 00 00                  	or eax, 0xb52c
0x8049a7e:   3d a5 00 00 00                  	cmp eax, 0xa5
0x8049a83:   0f 9f c0                        	setg al
0x8049a86:   0f b6 c0                        	movzx eax, al
0x8049a89:   31 85 50 ff ff ff               	xor dword ptr [ebp - 0xb0], eax
0x8049a8f:   c6 85 47 ff ff ff 00            	mov byte ptr [ebp - 0xb9], 0
0x8049a96:   eb 73                           	jmp 0x8049b0b <func_1+0x2dc>
0x8049a98:   c7 85 dc fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x124], 4
0x8049aa2:   83 bd 50 ff ff ff 22            	cmp dword ptr [ebp - 0xb0], 0x22
0x8049aa9:   0f 95 c0                        	setne al
0x8049aac:   0f b6 c0                        	movzx eax, al
0x8049aaf:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049ab2:   83 bd e0 fe ff ff 00            	cmp dword ptr [ebp - 0x120], 0
0x8049ab9:   75 0a                           	jne 0x8049ac5 <func_1+0x296>
0x8049abb:   66 83 bd 0c ff ff ff 00         	cmp word ptr [ebp - 0xf4], 0
0x8049ac3:   74 07                           	je 0x8049acc <func_1+0x29d>
0x8049ac5:   b8 01 00 00 00                  	mov eax, 1
0x8049aca:   eb 05                           	jmp 0x8049ad1 <func_1+0x2a2>
0x8049acc:   b8 00 00 00 00                  	mov eax, 0
0x8049ad1:   0f be c0                        	movsx eax, al
0x8049ad4:   01 c0                           	add eax, eax
0x8049ad6:   3d 01 c0 f9 f9                  	cmp eax, 0xf9f9c001
0x8049adb:   0f 9c c0                        	setl al
0x8049ade:   88 85 3f ff ff ff               	mov byte ptr [ebp - 0xc1], al
0x8049ae4:   0f be 85 3f ff ff ff            	movsx eax, byte ptr [ebp - 0xc1]
0x8049aeb:   39 85 40 ff ff ff               	cmp dword ptr [ebp - 0xc0], eax
0x8049af1:   72 07                           	jb 0x8049afa <func_1+0x2cb>
0x8049af3:   83 bd e0 fe ff ff 00            	cmp dword ptr [ebp - 0x120], 0
0x8049afa:   c7 85 dc fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x124], 1
0x8049b04:   80 85 47 ff ff ff 01            	add byte ptr [ebp - 0xb9], 1
0x8049b0b:   80 bd 47 ff ff ff 0a            	cmp byte ptr [ebp - 0xb9], 0xa
0x8049b12:   77 84                           	ja 0x8049a98 <func_1+0x269>
0x8049b14:   83 85 40 ff ff ff 01            	add dword ptr [ebp - 0xc0], 1
0x8049b1b:   83 bd 40 ff ff ff 3a            	cmp dword ptr [ebp - 0xc0], 0x3a
0x8049b22:   0f 84 27 ff ff ff               	je 0x8049a4f <func_1+0x220>
0x8049b28:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x8049b2c:   0f b7 55 e2                     	movzx edx, word ptr [ebp - 0x1e]
0x8049b30:   0f bf 8d 66 ff ff ff            	movsx ecx, word ptr [ebp - 0x9a]
0x8049b37:   0f bf 9d 68 ff ff ff            	movsx ebx, word ptr [ebp - 0x98]
0x8049b3e:   0f bf b5 6a ff ff ff            	movsx esi, word ptr [ebp - 0x96]
0x8049b45:   0f b6 bd 73 ff ff ff            	movzx edi, byte ptr [ebp - 0x8d]
0x8049b4c:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x8049b52:   0f bf 7d 9a                     	movsx edi, word ptr [ebp - 0x66]
0x8049b56:   89 bd cc fe ff ff               	mov dword ptr [ebp - 0x134], edi
0x8049b5c:   0f b6 bd 1f ff ff ff            	movzx edi, byte ptr [ebp - 0xe1]
0x8049b63:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x8049b69:   0f be bd 2f ff ff ff            	movsx edi, byte ptr [ebp - 0xd1]
0x8049b70:   89 bd c4 fe ff ff               	mov dword ptr [ebp - 0x13c], edi
0x8049b76:   0f b7 7d 92                     	movzx edi, word ptr [ebp - 0x6e]
0x8049b7a:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x8049b80:   0f be bd 3f ff ff ff            	movsx edi, byte ptr [ebp - 0xc1]
0x8049b87:   89 bd bc fe ff ff               	mov dword ptr [ebp - 0x144], edi
0x8049b8d:   0f be bd 46 ff ff ff            	movsx edi, byte ptr [ebp - 0xba]
0x8049b94:   89 bd b8 fe ff ff               	mov dword ptr [ebp - 0x148], edi
0x8049b9a:   0f b6 bd 47 ff ff ff            	movzx edi, byte ptr [ebp - 0xb9]
0x8049ba1:   89 bd b4 fe ff ff               	mov dword ptr [ebp - 0x14c], edi
0x8049ba7:   0f b6 7d 8b                     	movzx edi, byte ptr [ebp - 0x75]
0x8049bab:   89 bd b0 fe ff ff               	mov dword ptr [ebp - 0x150], edi
0x8049bb1:   0f b7 bd 4e ff ff ff            	movzx edi, word ptr [ebp - 0xb2]
0x8049bb8:   50                              	push eax
0x8049bb9:   ff b5 10 ff ff ff               	push dword ptr [ebp - 0xf0]
0x8049bbf:   52                              	push edx
0x8049bc0:   ff b5 14 ff ff ff               	push dword ptr [ebp - 0xec]
0x8049bc6:   ff b5 18 ff ff ff               	push dword ptr [ebp - 0xe8]
0x8049bcc:   51                              	push ecx
0x8049bcd:   53                              	push ebx
0x8049bce:   56                              	push esi
0x8049bcf:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049bd5:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x8049bdb:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x8049be1:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049be7:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049bea:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x8049bf0:   ff b5 20 ff ff ff               	push dword ptr [ebp - 0xe0]
0x8049bf6:   ff b5 24 ff ff ff               	push dword ptr [ebp - 0xdc]
0x8049bfc:   ff b5 28 ff ff ff               	push dword ptr [ebp - 0xd8]
0x8049c02:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x8049c08:   ff b5 30 ff ff ff               	push dword ptr [ebp - 0xd0]
0x8049c0e:   ff b5 34 ff ff ff               	push dword ptr [ebp - 0xcc]
0x8049c14:   ff b5 38 ff ff ff               	push dword ptr [ebp - 0xc8]
0x8049c1a:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x8049c20:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x8049c26:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x8049c2c:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x8049c32:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049c35:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x8049c3b:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x8049c41:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049c44:   57                              	push edi
0x8049c45:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x8049c4b:   e8 d6 f9 ff ff                  	call 0x8049626 <set_var>
0x8049c50:   83 c4 7c                        	add esp, 0x7c
0x8049c53:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x8049c59:   e9 a9 09 00 00                  	jmp 0x804a607 <func_1+0xdd8>
0x8049c5e:   c6 45 8b 00                     	mov byte ptr [ebp - 0x75], 0
0x8049c62:   e9 65 08 00 00                  	jmp 0x804a4cc <func_1+0xc9d>
0x8049c67:   c6 85 09 ff ff ff 89            	mov byte ptr [ebp - 0xf7], 0x89
0x8049c6e:   c7 45 8c f6 ff ff ff            	mov dword ptr [ebp - 0x74], 0xfffffff6
0x8049c75:   c7 85 04 ff ff ff 0b 11 6f 53   	mov dword ptr [ebp - 0xfc], 0x536f110b
0x8049c7f:   c7 85 00 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x100], 1
0x8049c89:   c7 85 60 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa0], 0
0x8049c93:   c6 85 5f ff ff ff 6e            	mov byte ptr [ebp - 0xa1], 0x6e
0x8049c9a:   c6 85 5e ff ff ff ab            	mov byte ptr [ebp - 0xa2], 0xab
0x8049ca1:   c7 85 58 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa8], 0
0x8049cab:   c6 85 57 ff ff ff 45            	mov byte ptr [ebp - 0xa9], 0x45
0x8049cb2:   c7 45 94 ff ff ff ff            	mov dword ptr [ebp - 0x6c], 0xffffffff
0x8049cb9:   66 c7 45 92 fc 30               	mov word ptr [ebp - 0x6e], 0x30fc
0x8049cbf:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x8049cc6:   75 09                           	jne 0x8049cd1 <func_1+0x4a2>
0x8049cc8:   80 bd 09 ff ff ff 00            	cmp byte ptr [ebp - 0xf7], 0
0x8049ccf:   74 07                           	je 0x8049cd8 <func_1+0x4a9>
0x8049cd1:   b8 01 00 00 00                  	mov eax, 1
0x8049cd6:   eb 05                           	jmp 0x8049cdd <func_1+0x4ae>
0x8049cd8:   b8 00 00 00 00                  	mov eax, 0
0x8049cdd:   21 45 8c                        	and dword ptr [ebp - 0x74], eax
0x8049ce0:   66 83 7d 92 00                  	cmp word ptr [ebp - 0x6e], 0
0x8049ce5:   0f 85 ed 07 00 00               	jne 0x804a4d8 <func_1+0xca9>
0x8049ceb:   80 45 c7 01                     	add byte ptr [ebp - 0x39], 1
0x8049cef:   c7 45 b8 ef ff ff ff            	mov dword ptr [ebp - 0x48], 0xffffffef
0x8049cf6:   e9 bd 07 00 00                  	jmp 0x804a4b8 <func_1+0xc89>
0x8049cfb:   c7 45 84 fb ff ff ff            	mov dword ptr [ebp - 0x7c], 0xfffffffb
0x8049d02:   c7 45 80 eb 9f 8a 25            	mov dword ptr [ebp - 0x80], 0x258a9feb
0x8049d09:   c7 45 b4 01 00 00 00            	mov dword ptr [ebp - 0x4c], 1
0x8049d10:   c7 85 7c ff ff ff 96 ec 0b 88   	mov dword ptr [ebp - 0x84], 0x880bec96
0x8049d1a:   c6 85 7b ff ff ff e3            	mov byte ptr [ebp - 0x85], 0xe3
0x8049d21:   c7 45 f0 ff ff ff ff            	mov dword ptr [ebp - 0x10], 0xffffffff
0x8049d28:   66 c7 45 b2 ce e9               	mov word ptr [ebp - 0x4e], 0xe9ce
0x8049d2e:   c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0x8049d35:   83 7d ac 0b                     	cmp dword ptr [ebp - 0x54], 0xb
0x8049d39:   0f 8f 88 01 00 00               	jg 0x8049ec7 <func_1+0x698>
0x8049d3f:   c6 85 f3 fe ff ff ff            	mov byte ptr [ebp - 0x10d], 0xff
0x8049d46:   c7 85 ec fe ff ff 05 89 96 5e   	mov dword ptr [ebp - 0x114], 0x5e968905
0x8049d50:   c7 85 e8 fe ff ff f0 9b 83 fc   	mov dword ptr [ebp - 0x118], 0xfc839bf0
0x8049d5a:   0f b6 85 73 ff ff ff            	movzx eax, byte ptr [ebp - 0x8d]
0x8049d61:   83 c0 01                        	add eax, 1
0x8049d64:   88 85 73 ff ff ff               	mov byte ptr [ebp - 0x8d], al
0x8049d6a:   c7 85 e4 fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x11c], 2
0x8049d74:   0f b6 85 f3 fe ff ff            	movzx eax, byte ptr [ebp - 0x10d]
0x8049d7b:   83 f0 fe                        	xor eax, 0xfffffffe
0x8049d7e:   0f be d0                        	movsx edx, al
0x8049d81:   0f b6 45 8b                     	movzx eax, byte ptr [ebp - 0x75]
0x8049d85:   31 d0                           	xor eax, edx
0x8049d87:   33 85 e4 fe ff ff               	xor eax, dword ptr [ebp - 0x11c]
0x8049d8d:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049d90:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x8049d94:   0f b7 55 e2                     	movzx edx, word ptr [ebp - 0x1e]
0x8049d98:   0f bf 8d 66 ff ff ff            	movsx ecx, word ptr [ebp - 0x9a]
0x8049d9f:   0f bf 9d 68 ff ff ff            	movsx ebx, word ptr [ebp - 0x98]
0x8049da6:   0f bf b5 6a ff ff ff            	movsx esi, word ptr [ebp - 0x96]
0x8049dad:   0f b6 bd 73 ff ff ff            	movzx edi, byte ptr [ebp - 0x8d]
0x8049db4:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x8049dba:   0f bf 7d 9a                     	movsx edi, word ptr [ebp - 0x66]
0x8049dbe:   89 bd cc fe ff ff               	mov dword ptr [ebp - 0x134], edi
0x8049dc4:   0f b6 bd 1f ff ff ff            	movzx edi, byte ptr [ebp - 0xe1]
0x8049dcb:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x8049dd1:   0f be bd 2f ff ff ff            	movsx edi, byte ptr [ebp - 0xd1]
0x8049dd8:   89 bd c4 fe ff ff               	mov dword ptr [ebp - 0x13c], edi
0x8049dde:   0f b7 7d 92                     	movzx edi, word ptr [ebp - 0x6e]
0x8049de2:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x8049de8:   0f be bd 3f ff ff ff            	movsx edi, byte ptr [ebp - 0xc1]
0x8049def:   89 bd bc fe ff ff               	mov dword ptr [ebp - 0x144], edi
0x8049df5:   0f be bd 46 ff ff ff            	movsx edi, byte ptr [ebp - 0xba]
0x8049dfc:   89 bd b8 fe ff ff               	mov dword ptr [ebp - 0x148], edi
0x8049e02:   0f b6 bd 47 ff ff ff            	movzx edi, byte ptr [ebp - 0xb9]
0x8049e09:   89 bd b4 fe ff ff               	mov dword ptr [ebp - 0x14c], edi
0x8049e0f:   0f b6 7d 8b                     	movzx edi, byte ptr [ebp - 0x75]
0x8049e13:   89 bd b0 fe ff ff               	mov dword ptr [ebp - 0x150], edi
0x8049e19:   0f b7 bd 4e ff ff ff            	movzx edi, word ptr [ebp - 0xb2]
0x8049e20:   50                              	push eax
0x8049e21:   ff b5 10 ff ff ff               	push dword ptr [ebp - 0xf0]
0x8049e27:   52                              	push edx
0x8049e28:   ff b5 14 ff ff ff               	push dword ptr [ebp - 0xec]
0x8049e2e:   ff b5 18 ff ff ff               	push dword ptr [ebp - 0xe8]
0x8049e34:   51                              	push ecx
0x8049e35:   53                              	push ebx
0x8049e36:   56                              	push esi
0x8049e37:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049e3d:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x8049e43:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x8049e49:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049e4f:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049e52:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x8049e58:   ff b5 20 ff ff ff               	push dword ptr [ebp - 0xe0]
0x8049e5e:   ff b5 24 ff ff ff               	push dword ptr [ebp - 0xdc]
0x8049e64:   ff b5 28 ff ff ff               	push dword ptr [ebp - 0xd8]
0x8049e6a:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x8049e70:   ff b5 30 ff ff ff               	push dword ptr [ebp - 0xd0]
0x8049e76:   ff b5 34 ff ff ff               	push dword ptr [ebp - 0xcc]
0x8049e7c:   ff b5 38 ff ff ff               	push dword ptr [ebp - 0xc8]
0x8049e82:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x8049e88:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x8049e8e:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x8049e94:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x8049e9a:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049e9d:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x8049ea3:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x8049ea9:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049eac:   57                              	push edi
0x8049ead:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x8049eb3:   e8 6e f7 ff ff                  	call 0x8049626 <set_var>
0x8049eb8:   83 c4 7c                        	add esp, 0x7c
0x8049ebb:   0f b6 85 5f ff ff ff            	movzx eax, byte ptr [ebp - 0xa1]
0x8049ec2:   e9 40 07 00 00                  	jmp 0x804a607 <func_1+0xdd8>
0x8049ec7:   0f b7 85 4e ff ff ff            	movzx eax, word ptr [ebp - 0xb2]
0x8049ece:   0f b6 d0                        	movzx edx, al
0x8049ed1:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x8049ed7:   0f b6 c0                        	movzx eax, al
0x8049eda:   89 c1                           	mov ecx, eax
0x8049edc:   d3 fa                           	sar edx, cl
0x8049ede:   89 d0                           	mov eax, edx
0x8049ee0:   85 c0                           	test eax, eax
0x8049ee2:   0f 84 de 01 00 00               	je 0x804a0c6 <func_1+0x897>
0x8049ee8:   c7 45 cc 00 00 00 00            	mov dword ptr [ebp - 0x34], 0
0x8049eef:   c7 45 c8 00 00 00 00            	mov dword ptr [ebp - 0x38], 0
0x8049ef6:   66 c7 85 fa fe ff ff 04 00      	mov word ptr [ebp - 0x106], 4
0x8049eff:   c6 85 73 ff ff ff e2            	mov byte ptr [ebp - 0x8d], 0xe2
0x8049f06:   e9 60 01 00 00                  	jmp 0x804a06b <func_1+0x83c>
0x8049f0b:   66 c7 85 f8 fe ff ff ff ff      	mov word ptr [ebp - 0x108], 0xffff
0x8049f14:   c7 85 f4 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x10c], 1
0x8049f1e:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x8049f24:   66 c1 e8 04                     	shr ax, 4
0x8049f28:   0f b7 c0                        	movzx eax, ax
0x8049f2b:   c1 e0 0b                        	shl eax, 0xb
0x8049f2e:   21 45 b4                        	and dword ptr [ebp - 0x4c], eax
0x8049f31:   80 bd 09 ff ff ff 03            	cmp byte ptr [ebp - 0xf7], 3
0x8049f38:   0f 95 c0                        	setne al
0x8049f3b:   0f b6 c0                        	movzx eax, al
0x8049f3e:   8b 95 14 ff ff ff               	mov edx, dword ptr [ebp - 0xec]
0x8049f44:   83 f2 04                        	xor edx, 4
0x8049f47:   88 95 3f ff ff ff               	mov byte ptr [ebp - 0xc1], dl
0x8049f4d:   0f be 95 3f ff ff ff            	movsx edx, byte ptr [ebp - 0xc1]
0x8049f54:   39 95 40 ff ff ff               	cmp dword ptr [ebp - 0xc0], edx
0x8049f5a:   0f 97 c2                        	seta dl
0x8049f5d:   89 d1                           	mov ecx, edx
0x8049f5f:   0f b6 95 73 ff ff ff            	movzx edx, byte ptr [ebp - 0x8d]
0x8049f66:   01 ca                           	add edx, ecx
0x8049f68:   f7 da                           	neg edx
0x8049f6a:   0f be da                        	movsx ebx, dl
0x8049f6d:   99                              	cdq 
0x8049f6e:   f7 fb                           	idiv ebx
0x8049f70:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049f73:   83 bd 48 ff ff ff 00            	cmp dword ptr [ebp - 0xb8], 0
0x8049f7a:   74 05                           	je 0x8049f81 <func_1+0x752>
0x8049f7c:   e9 0f fa ff ff                  	jmp 0x8049990 <func_1+0x161>
0x8049f81:   0f be 95 2f ff ff ff            	movsx edx, byte ptr [ebp - 0xd1]
0x8049f88:   80 ad 1f ff ff ff 01            	sub byte ptr [ebp - 0xe1], 1
0x8049f8f:   0f b6 85 1f ff ff ff            	movzx eax, byte ptr [ebp - 0xe1]
0x8049f96:   09 d0                           	or eax, edx
0x8049f98:   85 c0                           	test eax, eax
0x8049f9a:   74 42                           	je 0x8049fde <func_1+0x7af>
0x8049f9c:   66 83 bd f8 fe ff ff 00         	cmp word ptr [ebp - 0x108], 0
0x8049fa4:   74 0e                           	je 0x8049fb4 <func_1+0x785>
0x8049fa6:   c7 45 c8 a7 67 00 00            	mov dword ptr [ebp - 0x38], 0x67a7
0x8049fad:   b8 01 00 00 00                  	mov eax, 1
0x8049fb2:   eb 05                           	jmp 0x8049fb9 <func_1+0x78a>
0x8049fb4:   b8 00 00 00 00                  	mov eax, 0
0x8049fb9:   0f bf d0                        	movsx edx, ax
0x8049fbc:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x8049fc2:   98                              	cwde 
0x8049fc3:   89 c1                           	mov ecx, eax
0x8049fc5:   d3 fa                           	sar edx, cl
0x8049fc7:   89 d0                           	mov eax, edx
0x8049fc9:   83 e8 01                        	sub eax, 1
0x8049fcc:   0f be d0                        	movsx edx, al
0x8049fcf:   0f b7 45 9a                     	movzx eax, word ptr [ebp - 0x66]
0x8049fd3:   0f be c0                        	movsx eax, al
0x8049fd6:   89 c1                           	mov ecx, eax
0x8049fd8:   d3 fa                           	sar edx, cl
0x8049fda:   89 d0                           	mov eax, edx
0x8049fdc:   85 c0                           	test eax, eax
0x8049fde:   80 bd 0b ff ff ff 00            	cmp byte ptr [ebp - 0xf5], 0
0x8049fe5:   75 10                           	jne 0x8049ff7 <func_1+0x7c8>
0x8049fe7:   80 bd 0b ff ff ff 00            	cmp byte ptr [ebp - 0xf5], 0
0x8049fee:   74 07                           	je 0x8049ff7 <func_1+0x7c8>
0x8049ff0:   b8 01 00 00 00                  	mov eax, 1
0x8049ff5:   eb 05                           	jmp 0x8049ffc <func_1+0x7cd>
0x8049ff7:   b8 00 00 00 00                  	mov eax, 0
0x8049ffc:   3d d8 00 00 00                  	cmp eax, 0xd8
0x804a001:   0f 94 c0                        	sete al
0x804a004:   0f b6 c0                        	movzx eax, al
0x804a007:   8b 55 80                        	mov edx, dword ptr [ebp - 0x80]
0x804a00a:   0f bf ca                        	movsx ecx, dx
0x804a00d:   99                              	cdq 
0x804a00e:   f7 f9                           	idiv ecx
0x804a010:   89 95 f4 fe ff ff               	mov dword ptr [ebp - 0x10c], edx
0x804a016:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x804a01c:   39 45 80                        	cmp dword ptr [ebp - 0x80], eax
0x804a01f:   0f 95 c0                        	setne al
0x804a022:   0f b6 c0                        	movzx eax, al
0x804a025:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a028:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a02b:   66 c1 f8 0c                     	sar ax, 0xc
0x804a02f:   0f bf c8                        	movsx ecx, ax
0x804a032:   0f bf 75 9a                     	movsx esi, word ptr [ebp - 0x66]
0x804a036:   b8 01 00 00 00                  	mov eax, 1
0x804a03b:   ba 00 00 00 00                  	mov edx, 0
0x804a040:   f7 f6                           	div esi
0x804a042:   0d 66 4d 7a 3e                  	or eax, 0x3e7a4d66
0x804a047:   83 f8 ff                        	cmp eax, -1
0x804a04a:   0f 94 c0                        	sete al
0x804a04d:   0f b6 c0                        	movzx eax, al
0x804a050:   39 c1                           	cmp ecx, eax
0x804a052:   0f 9e c0                        	setle al
0x804a055:   0f b6 c0                        	movzx eax, al
0x804a058:   21 45 b4                        	and dword ptr [ebp - 0x4c], eax
0x804a05b:   0f b6 85 73 ff ff ff            	movzx eax, byte ptr [ebp - 0x8d]
0x804a062:   83 c0 01                        	add eax, 1
0x804a065:   88 85 73 ff ff ff               	mov byte ptr [ebp - 0x8d], al
0x804a06b:   80 bd 73 ff ff ff 28            	cmp byte ptr [ebp - 0x8d], 0x28
0x804a072:   0f 85 93 fe ff ff               	jne 0x8049f0b <func_1+0x6dc>
0x804a078:   c7 45 b4 00 00 00 00            	mov dword ptr [ebp - 0x4c], 0
0x804a07f:   b8 07 00 00 00                  	mov eax, 7
0x804a084:   66 31 45 92                     	xor word ptr [ebp - 0x6e], ax
0x804a088:   0f b7 45 92                     	movzx eax, word ptr [ebp - 0x6e]
0x804a08c:   0f b7 55 9a                     	movzx edx, word ptr [ebp - 0x66]
0x804a090:   0f b7 ca                        	movzx ecx, dx
0x804a093:   99                              	cdq 
0x804a094:   f7 f9                           	idiv ecx
0x804a096:   89 d0                           	mov eax, edx
0x804a098:   39 85 7c ff ff ff               	cmp dword ptr [ebp - 0x84], eax
0x804a09e:   74 05                           	je 0x804a0a5 <func_1+0x876>
0x804a0a0:   66 83 7d 9a 00                  	cmp word ptr [ebp - 0x66], 0
0x804a0a5:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a0a8:   0d 25 aa c5 06                  	or eax, 0x6c5aa25
0x804a0ad:   39 85 00 ff ff ff               	cmp dword ptr [ebp - 0x100], eax
0x804a0b3:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x804a0b9:   25 18 01 00 00                  	and eax, 0x118
0x804a0be:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a0c1:   e9 ee 03 00 00                  	jmp 0x804a4b4 <func_1+0xc85>
0x804a0c6:   66 c7 45 aa ff ff               	mov word ptr [ebp - 0x56], 0xffff
0x804a0cc:   c7 45 dc 00 0d 7f ff            	mov dword ptr [ebp - 0x24], 0xff7f0d00
0x804a0d3:   66 c7 45 a8 01 00               	mov word ptr [ebp - 0x58], 1
0x804a0d9:   66 83 bd 68 ff ff ff 00         	cmp word ptr [ebp - 0x98], 0
0x804a0e1:   74 55                           	je 0x804a138 <func_1+0x909>
0x804a0e3:   b8 29 02 5e a1                  	mov eax, 0xa15e0229
0x804a0e8:   99                              	cdq 
0x804a0e9:   f7 7d d4                        	idiv dword ptr [ebp - 0x2c]
0x804a0ec:   89 c2                           	mov edx, eax
0x804a0ee:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a0f1:   01 d0                           	add eax, edx
0x804a0f3:   3d b9 84 df 85                  	cmp eax, 0x85df84b9
0x804a0f8:   74 10                           	je 0x804a10a <func_1+0x8db>
0x804a0fa:   83 bd 38 ff ff ff 00            	cmp dword ptr [ebp - 0xc8], 0
0x804a101:   74 07                           	je 0x804a10a <func_1+0x8db>
0x804a103:   b8 01 00 00 00                  	mov eax, 1
0x804a108:   eb 05                           	jmp 0x804a10f <func_1+0x8e0>
0x804a10a:   b8 00 00 00 00                  	mov eax, 0
0x804a10f:   88 85 46 ff ff ff               	mov byte ptr [ebp - 0xba], al
0x804a115:   0f be 95 46 ff ff ff            	movsx edx, byte ptr [ebp - 0xba]
0x804a11c:   0f b6 45 8b                     	movzx eax, byte ptr [ebp - 0x75]
0x804a120:   31 d0                           	xor eax, edx
0x804a122:   83 f8 03                        	cmp eax, 3
0x804a125:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804a129:   39 85 24 ff ff ff               	cmp dword ptr [ebp - 0xdc], eax
0x804a12f:   74 07                           	je 0x804a138 <func_1+0x909>
0x804a131:   b8 01 00 00 00                  	mov eax, 1
0x804a136:   eb 05                           	jmp 0x804a13d <func_1+0x90e>
0x804a138:   b8 00 00 00 00                  	mov eax, 0
0x804a13d:   0f b6 c0                        	movzx eax, al
0x804a140:   83 e0 6c                        	and eax, 0x6c
0x804a143:   89 c2                           	mov edx, eax
0x804a145:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a148:   0f b6 c0                        	movzx eax, al
0x804a14b:   89 c1                           	mov ecx, eax
0x804a14d:   d3 fa                           	sar edx, cl
0x804a14f:   89 d0                           	mov eax, edx
0x804a151:   85 c0                           	test eax, eax
0x804a153:   0f 84 bb 01 00 00               	je 0x804a314 <func_1+0xae5>
0x804a159:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x804a160:   c7 45 a0 01 af 75 35            	mov dword ptr [ebp - 0x60], 0x3575af01
0x804a167:   c7 45 9c ff ff ff ff            	mov dword ptr [ebp - 0x64], 0xffffffff
0x804a16e:   0f be 85 3f ff ff ff            	movsx eax, byte ptr [ebp - 0xc1]
0x804a175:   c1 e0 04                        	shl eax, 4
0x804a178:   0f be c0                        	movsx eax, al
0x804a17b:   83 e8 01                        	sub eax, 1
0x804a17e:   31 45 a0                        	xor dword ptr [ebp - 0x60], eax
0x804a181:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a184:   0f bf d0                        	movsx edx, ax
0x804a187:   0f bf 45 9a                     	movsx eax, word ptr [ebp - 0x66]
0x804a18b:   89 c1                           	mov ecx, eax
0x804a18d:   d3 e2                           	shl edx, cl
0x804a18f:   89 d0                           	mov eax, edx
0x804a191:   85 c0                           	test eax, eax
0x804a193:   0f 84 a6 00 00 00               	je 0x804a23f <func_1+0xa10>
0x804a199:   66 c7 45 ee 1e 90               	mov word ptr [ebp - 0x12], 0x901e
0x804a19f:   c7 45 c0 07 00 00 00            	mov dword ptr [ebp - 0x40], 7
0x804a1a6:   81 65 bc 00 de 35 45            	and dword ptr [ebp - 0x44], 0x4535de00
0x804a1ad:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a1b0:   3b 45 dc                        	cmp eax, dword ptr [ebp - 0x24]
0x804a1b3:   0f 9d c0                        	setge al
0x804a1b6:   0f b6 d0                        	movzx edx, al
0x804a1b9:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804a1bd:   39 c2                           	cmp edx, eax
0x804a1bf:   74 11                           	je 0x804a1d2 <func_1+0x9a3>
0x804a1c1:   66 83 bd 6a ff ff ff 00         	cmp word ptr [ebp - 0x96], 0
0x804a1c9:   74 07                           	je 0x804a1d2 <func_1+0x9a3>
0x804a1cb:   b8 01 00 00 00                  	mov eax, 1
0x804a1d0:   eb 05                           	jmp 0x804a1d7 <func_1+0x9a8>
0x804a1d2:   b8 00 00 00 00                  	mov eax, 0
0x804a1d7:   85 c0                           	test eax, eax
0x804a1d9:   0f 9f c0                        	setg al
0x804a1dc:   0f b6 c0                        	movzx eax, al
0x804a1df:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a1e2:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a1e5:   0f be d0                        	movsx edx, al
0x804a1e8:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804a1ec:   0f be c0                        	movsx eax, al
0x804a1ef:   89 c1                           	mov ecx, eax
0x804a1f1:   d3 e2                           	shl edx, cl
0x804a1f3:   89 d0                           	mov eax, edx
0x804a1f5:   66 89 45 ee                     	mov word ptr [ebp - 0x12], ax
0x804a1f9:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x804a1fd:   83 e0 f8                        	and eax, 0xfffffff8
0x804a200:   85 c0                           	test eax, eax
0x804a202:   74 07                           	je 0x804a20b <func_1+0x9dc>
0x804a204:   83 bd 48 ff ff ff 00            	cmp dword ptr [ebp - 0xb8], 0
0x804a20b:   0f b7 85 4e ff ff ff            	movzx eax, word ptr [ebp - 0xb2]
0x804a212:   8d 14 00                        	lea edx, [eax + eax]
0x804a215:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a218:   39 c2                           	cmp edx, eax
0x804a21a:   0f 92 c0                        	setb al
0x804a21d:   0f b6 d0                        	movzx edx, al
0x804a220:   0f b6 85 1f ff ff ff            	movzx eax, byte ptr [ebp - 0xe1]
0x804a227:   01 d0                           	add eax, edx
0x804a229:   0f bf d0                        	movsx edx, ax
0x804a22c:   89 d0                           	mov eax, edx
0x804a22e:   c1 e0 03                        	shl eax, 3
0x804a231:   29 d0                           	sub eax, edx
0x804a233:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a236:   0f bf 45 a8                     	movsx eax, word ptr [ebp - 0x58]
0x804a23a:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a23d:   eb 60                           	jmp 0x804a29f <func_1+0xa70>
0x804a23f:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a245:   66 31 45 9a                     	xor word ptr [ebp - 0x66], ax
0x804a249:   0f bf 55 9a                     	movsx edx, word ptr [ebp - 0x66]
0x804a24d:   0f b7 45 92                     	movzx eax, word ptr [ebp - 0x6e]
0x804a251:   39 c2                           	cmp edx, eax
0x804a253:   0f 95 c0                        	setne al
0x804a256:   0f b6 c0                        	movzx eax, al
0x804a259:   33 85 24 ff ff ff               	xor eax, dword ptr [ebp - 0xdc]
0x804a25f:   89 c2                           	mov edx, eax
0x804a261:   83 bd 40 ff ff ff 7f            	cmp dword ptr [ebp - 0xc0], 0x7f
0x804a268:   0f 95 c0                        	setne al
0x804a26b:   0f b6 c0                        	movzx eax, al
0x804a26e:   39 85 38 ff ff ff               	cmp dword ptr [ebp - 0xc8], eax
0x804a274:   0f 9c c0                        	setl al
0x804a277:   0f b6 c0                        	movzx eax, al
0x804a27a:   09 d0                           	or eax, edx
0x804a27c:   f7 d8                           	neg eax
0x804a27e:   89 c2                           	mov edx, eax
0x804a280:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a283:   39 c2                           	cmp edx, eax
0x804a285:   0f 97 c0                        	seta al
0x804a288:   0f b6 d0                        	movzx edx, al
0x804a28b:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a28e:   98                              	cwde 
0x804a28f:   89 c1                           	mov ecx, eax
0x804a291:   d3 fa                           	sar edx, cl
0x804a293:   0f bf 85 0c ff ff ff            	movsx eax, word ptr [ebp - 0xf4]
0x804a29a:   09 d0                           	or eax, edx
0x804a29c:   21 45 9c                        	and dword ptr [ebp - 0x64], eax
0x804a29f:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x804a2a3:   83 e8 01                        	sub eax, 1
0x804a2a6:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x804a2aa:   c7 45 dc b9 00 00 00            	mov dword ptr [ebp - 0x24], 0xb9
0x804a2b1:   0f b6 55 c7                     	movzx edx, byte ptr [ebp - 0x39]
0x804a2b5:   0f bf 45 a8                     	movsx eax, word ptr [ebp - 0x58]
0x804a2b9:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a2bc:   0f b7 85 4e ff ff ff            	movzx eax, word ptr [ebp - 0xb2]
0x804a2c3:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x804a2c6:   0f 94 c0                        	sete al
0x804a2c9:   0f b6 c0                        	movzx eax, al
0x804a2cc:   39 c2                           	cmp edx, eax
0x804a2ce:   0f 95 c0                        	setne al
0x804a2d1:   0f b6 d0                        	movzx edx, al
0x804a2d4:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804a2d8:   39 c2                           	cmp edx, eax
0x804a2da:   0f 9d c0                        	setge al
0x804a2dd:   0f b6 c0                        	movzx eax, al
0x804a2e0:   66 0f be 95 7b ff ff ff         	movsx dx, byte ptr [ebp - 0x85]
0x804a2e8:   0f b7 f2                        	movzx esi, dx
0x804a2eb:   99                              	cdq 
0x804a2ec:   f7 fe                           	idiv esi
0x804a2ee:   ba c5 ff ff ff                  	mov edx, 0xffffffc5
0x804a2f3:   0f af c2                        	imul eax, edx
0x804a2f6:   0f b6 c8                        	movzx ecx, al
0x804a2f9:   b8 b9 00 00 00                  	mov eax, 0xb9
0x804a2fe:   99                              	cdq 
0x804a2ff:   f7 f9                           	idiv ecx
0x804a301:   89 55 d4                        	mov dword ptr [ebp - 0x2c], edx
0x804a304:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a308:   83 c0 01                        	add eax, 1
0x804a30b:   66 89 45 d2                     	mov word ptr [ebp - 0x2e], ax
0x804a30f:   e9 a0 01 00 00                  	jmp 0x804a4b4 <func_1+0xc85>
0x804a314:   c7 85 fc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x104], 0
0x804a31e:   8b 85 fc fe ff ff               	mov eax, dword ptr [ebp - 0x104]
0x804a324:   0f b6 c0                        	movzx eax, al
0x804a327:   83 c0 01                        	add eax, 1
0x804a32a:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a32d:   0f b7 85 68 ff ff ff            	movzx eax, word ptr [ebp - 0x98]
0x804a334:   66 05 bc 38                     	add ax, 0x38bc
0x804a338:   98                              	cwde 
0x804a339:   8b 55 b8                        	mov edx, dword ptr [ebp - 0x48]
0x804a33c:   0f bf da                        	movsx ebx, dx
0x804a33f:   99                              	cdq 
0x804a340:   f7 fb                           	idiv ebx
0x804a342:   3d 6c 34 4c 9a                  	cmp eax, 0x9a4c346c
0x804a347:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a34b:   66 3b 85 4e ff ff ff            	cmp ax, word ptr [ebp - 0xb2]
0x804a352:   0f 97 c0                        	seta al
0x804a355:   0f b6 c0                        	movzx eax, al
0x804a358:   39 85 30 ff ff ff               	cmp dword ptr [ebp - 0xd0], eax
0x804a35e:   0f 95 c0                        	setne al
0x804a361:   0f b6 c0                        	movzx eax, al
0x804a364:   39 85 10 ff ff ff               	cmp dword ptr [ebp - 0xf0], eax
0x804a36a:   0f 95 c0                        	setne al
0x804a36d:   0f b6 c0                        	movzx eax, al
0x804a370:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a373:   c7 85 04 ff ff ff 3b 54 d1 1e   	mov dword ptr [ebp - 0xfc], 0x1ed1543b
0x804a37d:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a381:   0f b7 55 e2                     	movzx edx, word ptr [ebp - 0x1e]
0x804a385:   0f bf 8d 66 ff ff ff            	movsx ecx, word ptr [ebp - 0x9a]
0x804a38c:   0f bf 9d 68 ff ff ff            	movsx ebx, word ptr [ebp - 0x98]
0x804a393:   0f bf b5 6a ff ff ff            	movsx esi, word ptr [ebp - 0x96]
0x804a39a:   0f b6 bd 73 ff ff ff            	movzx edi, byte ptr [ebp - 0x8d]
0x804a3a1:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x804a3a7:   0f bf 7d 9a                     	movsx edi, word ptr [ebp - 0x66]
0x804a3ab:   89 bd cc fe ff ff               	mov dword ptr [ebp - 0x134], edi
0x804a3b1:   0f b6 bd 1f ff ff ff            	movzx edi, byte ptr [ebp - 0xe1]
0x804a3b8:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x804a3be:   0f be bd 2f ff ff ff            	movsx edi, byte ptr [ebp - 0xd1]
0x804a3c5:   89 bd c4 fe ff ff               	mov dword ptr [ebp - 0x13c], edi
0x804a3cb:   0f b7 7d 92                     	movzx edi, word ptr [ebp - 0x6e]
0x804a3cf:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x804a3d5:   0f be bd 3f ff ff ff            	movsx edi, byte ptr [ebp - 0xc1]
0x804a3dc:   89 bd bc fe ff ff               	mov dword ptr [ebp - 0x144], edi
0x804a3e2:   0f be bd 46 ff ff ff            	movsx edi, byte ptr [ebp - 0xba]
0x804a3e9:   89 bd b8 fe ff ff               	mov dword ptr [ebp - 0x148], edi
0x804a3ef:   0f b6 bd 47 ff ff ff            	movzx edi, byte ptr [ebp - 0xb9]
0x804a3f6:   89 bd b4 fe ff ff               	mov dword ptr [ebp - 0x14c], edi
0x804a3fc:   0f b6 7d 8b                     	movzx edi, byte ptr [ebp - 0x75]
0x804a400:   89 bd b0 fe ff ff               	mov dword ptr [ebp - 0x150], edi
0x804a406:   0f b7 bd 4e ff ff ff            	movzx edi, word ptr [ebp - 0xb2]
0x804a40d:   50                              	push eax
0x804a40e:   ff b5 10 ff ff ff               	push dword ptr [ebp - 0xf0]
0x804a414:   52                              	push edx
0x804a415:   ff b5 14 ff ff ff               	push dword ptr [ebp - 0xec]
0x804a41b:   ff b5 18 ff ff ff               	push dword ptr [ebp - 0xe8]
0x804a421:   51                              	push ecx
0x804a422:   53                              	push ebx
0x804a423:   56                              	push esi
0x804a424:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a42a:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a430:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a436:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a43c:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a43f:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a445:   ff b5 20 ff ff ff               	push dword ptr [ebp - 0xe0]
0x804a44b:   ff b5 24 ff ff ff               	push dword ptr [ebp - 0xdc]
0x804a451:   ff b5 28 ff ff ff               	push dword ptr [ebp - 0xd8]
0x804a457:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a45d:   ff b5 30 ff ff ff               	push dword ptr [ebp - 0xd0]
0x804a463:   ff b5 34 ff ff ff               	push dword ptr [ebp - 0xcc]
0x804a469:   ff b5 38 ff ff ff               	push dword ptr [ebp - 0xc8]
0x804a46f:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a475:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a47b:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x804a481:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a487:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a48a:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a490:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a496:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a499:   57                              	push edi
0x804a49a:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a4a0:   e8 81 f1 ff ff                  	call 0x8049626 <set_var>
0x804a4a5:   83 c4 7c                        	add esp, 0x7c
0x804a4a8:   0f b6 85 7b ff ff ff            	movzx eax, byte ptr [ebp - 0x85]
0x804a4af:   e9 53 01 00 00                  	jmp 0x804a607 <func_1+0xdd8>
0x804a4b4:   83 45 b8 01                     	add dword ptr [ebp - 0x48], 1
0x804a4b8:   83 7d b8 18                     	cmp dword ptr [ebp - 0x48], 0x18
0x804a4bc:   0f 87 39 f8 ff ff               	ja 0x8049cfb <func_1+0x4cc>
0x804a4c2:   0f b6 45 8b                     	movzx eax, byte ptr [ebp - 0x75]
0x804a4c6:   83 c0 01                        	add eax, 1
0x804a4c9:   88 45 8b                        	mov byte ptr [ebp - 0x75], al
0x804a4cc:   80 7d 8b 09                     	cmp byte ptr [ebp - 0x75], 9
0x804a4d0:   0f 86 91 f7 ff ff               	jbe 0x8049c67 <func_1+0x438>
0x804a4d6:   eb 01                           	jmp 0x804a4d9 <func_1+0xcaa>
0x804a4d8:   90                              	nop 
0x804a4d9:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a4dd:   0f b7 55 e2                     	movzx edx, word ptr [ebp - 0x1e]
0x804a4e1:   0f bf 8d 66 ff ff ff            	movsx ecx, word ptr [ebp - 0x9a]
0x804a4e8:   0f bf 9d 68 ff ff ff            	movsx ebx, word ptr [ebp - 0x98]
0x804a4ef:   0f bf b5 6a ff ff ff            	movsx esi, word ptr [ebp - 0x96]
0x804a4f6:   0f b6 bd 73 ff ff ff            	movzx edi, byte ptr [ebp - 0x8d]
0x804a4fd:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x804a503:   0f bf 7d 9a                     	movsx edi, word ptr [ebp - 0x66]
0x804a507:   89 bd cc fe ff ff               	mov dword ptr [ebp - 0x134], edi
0x804a50d:   0f b6 bd 1f ff ff ff            	movzx edi, byte ptr [ebp - 0xe1]
0x804a514:   89 bd c8 fe ff ff               	mov dword ptr [ebp - 0x138], edi
0x804a51a:   0f be bd 2f ff ff ff            	movsx edi, byte ptr [ebp - 0xd1]
0x804a521:   89 bd c4 fe ff ff               	mov dword ptr [ebp - 0x13c], edi
0x804a527:   0f b7 7d 92                     	movzx edi, word ptr [ebp - 0x6e]
0x804a52b:   89 bd c0 fe ff ff               	mov dword ptr [ebp - 0x140], edi
0x804a531:   0f be bd 3f ff ff ff            	movsx edi, byte ptr [ebp - 0xc1]
0x804a538:   89 bd bc fe ff ff               	mov dword ptr [ebp - 0x144], edi
0x804a53e:   0f be bd 46 ff ff ff            	movsx edi, byte ptr [ebp - 0xba]
0x804a545:   89 bd b8 fe ff ff               	mov dword ptr [ebp - 0x148], edi
0x804a54b:   0f b6 bd 47 ff ff ff            	movzx edi, byte ptr [ebp - 0xb9]
0x804a552:   89 bd b4 fe ff ff               	mov dword ptr [ebp - 0x14c], edi
0x804a558:   0f b6 7d 8b                     	movzx edi, byte ptr [ebp - 0x75]
0x804a55c:   89 bd b0 fe ff ff               	mov dword ptr [ebp - 0x150], edi
0x804a562:   0f b7 bd 4e ff ff ff            	movzx edi, word ptr [ebp - 0xb2]
0x804a569:   50                              	push eax
0x804a56a:   ff b5 10 ff ff ff               	push dword ptr [ebp - 0xf0]
0x804a570:   52                              	push edx
0x804a571:   ff b5 14 ff ff ff               	push dword ptr [ebp - 0xec]
0x804a577:   ff b5 18 ff ff ff               	push dword ptr [ebp - 0xe8]
0x804a57d:   51                              	push ecx
0x804a57e:   53                              	push ebx
0x804a57f:   56                              	push esi
0x804a580:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a586:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a58c:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a592:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a598:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a59b:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a5a1:   ff b5 20 ff ff ff               	push dword ptr [ebp - 0xe0]
0x804a5a7:   ff b5 24 ff ff ff               	push dword ptr [ebp - 0xdc]
0x804a5ad:   ff b5 28 ff ff ff               	push dword ptr [ebp - 0xd8]
0x804a5b3:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a5b9:   ff b5 30 ff ff ff               	push dword ptr [ebp - 0xd0]
0x804a5bf:   ff b5 34 ff ff ff               	push dword ptr [ebp - 0xcc]
0x804a5c5:   ff b5 38 ff ff ff               	push dword ptr [ebp - 0xc8]
0x804a5cb:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a5d1:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a5d7:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x804a5dd:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a5e3:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a5e6:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a5ec:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a5f2:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a5f5:   57                              	push edi
0x804a5f6:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a5fc:   e8 25 f0 ff ff                  	call 0x8049626 <set_var>
0x804a601:   83 c4 7c                        	add esp, 0x7c
0x804a604:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a607:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a60a:   5b                              	pop ebx
0x804a60b:   5e                              	pop esi
0x804a60c:   5f                              	pop edi
0x804a60d:   5d                              	pop ebp
0x804a60e:   c3                              	ret 
; function: main at 0x804a60f -- 0x804aa5a
0x804a60f:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a613:   83 e4 f0                        	and esp, 0xfffffff0
0x804a616:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a619:   55                              	push ebp
0x804a61a:   89 e5                           	mov ebp, esp
0x804a61c:   53                              	push ebx
0x804a61d:   51                              	push ecx
0x804a61e:   83 ec 10                        	sub esp, 0x10
0x804a621:   e8 6a dd ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a626:   81 c3 da 29 00 00               	add ebx, 0x29da
0x804a62c:   89 c8                           	mov eax, ecx
0x804a62e:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a635:   83 38 02                        	cmp dword ptr [eax], 2
0x804a638:   75 26                           	jne 0x804a660 <main+0x51>
0x804a63a:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a63d:   83 c0 04                        	add eax, 4
0x804a640:   8b 00                           	mov eax, dword ptr [eax]
0x804a642:   83 ec 08                        	sub esp, 8
0x804a645:   8d 93 4c db ff ff               	lea edx, [ebx - 0x24b4]
0x804a64b:   52                              	push edx
0x804a64c:   50                              	push eax
0x804a64d:   e8 ae dc ff ff                  	call 0x8048300 <strcmp>
0x804a652:   83 c4 10                        	add esp, 0x10
0x804a655:   85 c0                           	test eax, eax
0x804a657:   75 07                           	jne 0x804a660 <main+0x51>
0x804a659:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a660:   e8 f1 dd ff ff                  	call 0x8048456 <platform_main_begin>
0x804a665:   e8 01 ee ff ff                  	call 0x804946b <crc32_gentab>
0x804a66a:   e8 c0 f1 ff ff                  	call 0x804982f <func_1>
0x804a66f:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804a675:   89 c2                           	mov edx, eax
0x804a677:   83 ec 04                        	sub esp, 4
0x804a67a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a67d:   8d 83 4e db ff ff               	lea eax, [ebx - 0x24b2]
0x804a683:   50                              	push eax
0x804a684:   52                              	push edx
0x804a685:   e8 ed ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a68a:   83 c4 10                        	add esp, 0x10
0x804a68d:   0f b7 83 28 00 00 00            	movzx eax, word ptr [ebx + 0x28]
0x804a694:   0f b7 c0                        	movzx eax, ax
0x804a697:   83 ec 04                        	sub esp, 4
0x804a69a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a69d:   8d 93 52 db ff ff               	lea edx, [ebx - 0x24ae]
0x804a6a3:   52                              	push edx
0x804a6a4:   50                              	push eax
0x804a6a5:   e8 cd ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6aa:   83 c4 10                        	add esp, 0x10
0x804a6ad:   ba bf 52 b5 b1                  	mov edx, 0xb1b552bf
0x804a6b2:   83 ec 04                        	sub esp, 4
0x804a6b5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6b8:   8d 83 57 db ff ff               	lea eax, [ebx - 0x24a9]
0x804a6be:   50                              	push eax
0x804a6bf:   52                              	push edx
0x804a6c0:   e8 b2 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6c5:   83 c4 10                        	add esp, 0x10
0x804a6c8:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a6ce:   89 c2                           	mov edx, eax
0x804a6d0:   83 ec 04                        	sub esp, 4
0x804a6d3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6d6:   8d 83 5c db ff ff               	lea eax, [ebx - 0x24a4]
0x804a6dc:   50                              	push eax
0x804a6dd:   52                              	push edx
0x804a6de:   e8 94 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6e3:   83 c4 10                        	add esp, 0x10
0x804a6e6:   0f b6 83 30 00 00 00            	movzx eax, byte ptr [ebx + 0x30]
0x804a6ed:   0f b6 c0                        	movzx eax, al
0x804a6f0:   83 ec 04                        	sub esp, 4
0x804a6f3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6f6:   8d 93 61 db ff ff               	lea edx, [ebx - 0x249f]
0x804a6fc:   52                              	push edx
0x804a6fd:   50                              	push eax
0x804a6fe:   e8 74 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a703:   83 c4 10                        	add esp, 0x10
0x804a706:   0f b6 83 31 00 00 00            	movzx eax, byte ptr [ebx + 0x31]
0x804a70d:   0f b6 c0                        	movzx eax, al
0x804a710:   83 ec 04                        	sub esp, 4
0x804a713:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a716:   8d 93 66 db ff ff               	lea edx, [ebx - 0x249a]
0x804a71c:   52                              	push edx
0x804a71d:   50                              	push eax
0x804a71e:   e8 54 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a723:   83 c4 10                        	add esp, 0x10
0x804a726:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a72c:   83 ec 04                        	sub esp, 4
0x804a72f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a732:   8d 93 6b db ff ff               	lea edx, [ebx - 0x2495]
0x804a738:   52                              	push edx
0x804a739:   50                              	push eax
0x804a73a:   e8 38 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a73f:   83 c4 10                        	add esp, 0x10
0x804a742:   0f b6 83 38 00 00 00            	movzx eax, byte ptr [ebx + 0x38]
0x804a749:   0f be c0                        	movsx eax, al
0x804a74c:   83 ec 04                        	sub esp, 4
0x804a74f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a752:   8d 93 70 db ff ff               	lea edx, [ebx - 0x2490]
0x804a758:   52                              	push edx
0x804a759:   50                              	push eax
0x804a75a:   e8 18 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a75f:   83 c4 10                        	add esp, 0x10
0x804a762:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804a768:   83 ec 04                        	sub esp, 4
0x804a76b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a76e:   8d 93 75 db ff ff               	lea edx, [ebx - 0x248b]
0x804a774:   52                              	push edx
0x804a775:   50                              	push eax
0x804a776:   e8 fc ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a77b:   83 c4 10                        	add esp, 0x10
0x804a77e:   0f b6 83 40 00 00 00            	movzx eax, byte ptr [ebx + 0x40]
0x804a785:   0f be c0                        	movsx eax, al
0x804a788:   83 ec 04                        	sub esp, 4
0x804a78b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a78e:   8d 93 7a db ff ff               	lea edx, [ebx - 0x2486]
0x804a794:   52                              	push edx
0x804a795:   50                              	push eax
0x804a796:   e8 dc ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a79b:   83 c4 10                        	add esp, 0x10
0x804a79e:   0f b7 83 42 00 00 00            	movzx eax, word ptr [ebx + 0x42]
0x804a7a5:   0f b7 c0                        	movzx eax, ax
0x804a7a8:   83 ec 04                        	sub esp, 4
0x804a7ab:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7ae:   8d 93 7f db ff ff               	lea edx, [ebx - 0x2481]
0x804a7b4:   52                              	push edx
0x804a7b5:   50                              	push eax
0x804a7b6:   e8 bc ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7bb:   83 c4 10                        	add esp, 0x10
0x804a7be:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804a7c4:   89 c2                           	mov edx, eax
0x804a7c6:   83 ec 04                        	sub esp, 4
0x804a7c9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7cc:   8d 83 84 db ff ff               	lea eax, [ebx - 0x247c]
0x804a7d2:   50                              	push eax
0x804a7d3:   52                              	push edx
0x804a7d4:   e8 9e ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7d9:   83 c4 10                        	add esp, 0x10
0x804a7dc:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804a7e2:   89 c2                           	mov edx, eax
0x804a7e4:   83 ec 04                        	sub esp, 4
0x804a7e7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7ea:   8d 83 89 db ff ff               	lea eax, [ebx - 0x2477]
0x804a7f0:   50                              	push eax
0x804a7f1:   52                              	push edx
0x804a7f2:   e8 80 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7f7:   83 c4 10                        	add esp, 0x10
0x804a7fa:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804a800:   89 c2                           	mov edx, eax
0x804a802:   83 ec 04                        	sub esp, 4
0x804a805:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a808:   8d 83 8f db ff ff               	lea eax, [ebx - 0x2471]
0x804a80e:   50                              	push eax
0x804a80f:   52                              	push edx
0x804a810:   e8 62 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a815:   83 c4 10                        	add esp, 0x10
0x804a818:   0f b6 83 50 00 00 00            	movzx eax, byte ptr [ebx + 0x50]
0x804a81f:   0f be c0                        	movsx eax, al
0x804a822:   83 ec 04                        	sub esp, 4
0x804a825:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a828:   8d 93 95 db ff ff               	lea edx, [ebx - 0x246b]
0x804a82e:   52                              	push edx
0x804a82f:   50                              	push eax
0x804a830:   e8 42 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a835:   83 c4 10                        	add esp, 0x10
0x804a838:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804a83e:   89 c2                           	mov edx, eax
0x804a840:   83 ec 04                        	sub esp, 4
0x804a843:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a846:   8d 83 9b db ff ff               	lea eax, [ebx - 0x2465]
0x804a84c:   50                              	push eax
0x804a84d:   52                              	push edx
0x804a84e:   e8 24 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a853:   83 c4 10                        	add esp, 0x10
0x804a856:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804a85c:   83 ec 04                        	sub esp, 4
0x804a85f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a862:   8d 93 a1 db ff ff               	lea edx, [ebx - 0x245f]
0x804a868:   52                              	push edx
0x804a869:   50                              	push eax
0x804a86a:   e8 08 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a86f:   83 c4 10                        	add esp, 0x10
0x804a872:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804a878:   89 c2                           	mov edx, eax
0x804a87a:   83 ec 04                        	sub esp, 4
0x804a87d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a880:   8d 83 a7 db ff ff               	lea eax, [ebx - 0x2459]
0x804a886:   50                              	push eax
0x804a887:   52                              	push edx
0x804a888:   e8 ea ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a88d:   83 c4 10                        	add esp, 0x10
0x804a890:   0f b6 83 60 00 00 00            	movzx eax, byte ptr [ebx + 0x60]
0x804a897:   0f b6 c0                        	movzx eax, al
0x804a89a:   83 ec 04                        	sub esp, 4
0x804a89d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8a0:   8d 93 ad db ff ff               	lea edx, [ebx - 0x2453]
0x804a8a6:   52                              	push edx
0x804a8a7:   50                              	push eax
0x804a8a8:   e8 ca ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8ad:   83 c4 10                        	add esp, 0x10
0x804a8b0:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804a8b6:   89 c2                           	mov edx, eax
0x804a8b8:   83 ec 04                        	sub esp, 4
0x804a8bb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8be:   8d 83 b3 db ff ff               	lea eax, [ebx - 0x244d]
0x804a8c4:   50                              	push eax
0x804a8c5:   52                              	push edx
0x804a8c6:   e8 ac ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8cb:   83 c4 10                        	add esp, 0x10
0x804a8ce:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804a8d4:   89 c2                           	mov edx, eax
0x804a8d6:   83 ec 04                        	sub esp, 4
0x804a8d9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8dc:   8d 83 b9 db ff ff               	lea eax, [ebx - 0x2447]
0x804a8e2:   50                              	push eax
0x804a8e3:   52                              	push edx
0x804a8e4:   e8 8e ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8e9:   83 c4 10                        	add esp, 0x10
0x804a8ec:   0f b7 83 6c 00 00 00            	movzx eax, word ptr [ebx + 0x6c]
0x804a8f3:   98                              	cwde 
0x804a8f4:   83 ec 04                        	sub esp, 4
0x804a8f7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8fa:   8d 93 bf db ff ff               	lea edx, [ebx - 0x2441]
0x804a900:   52                              	push edx
0x804a901:   50                              	push eax
0x804a902:   e8 70 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a907:   83 c4 10                        	add esp, 0x10
0x804a90a:   0f b6 83 6e 00 00 00            	movzx eax, byte ptr [ebx + 0x6e]
0x804a911:   0f b6 c0                        	movzx eax, al
0x804a914:   83 ec 04                        	sub esp, 4
0x804a917:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a91a:   8d 93 c5 db ff ff               	lea edx, [ebx - 0x243b]
0x804a920:   52                              	push edx
0x804a921:   50                              	push eax
0x804a922:   e8 50 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a927:   83 c4 10                        	add esp, 0x10
0x804a92a:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804a930:   83 ec 04                        	sub esp, 4
0x804a933:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a936:   8d 93 cb db ff ff               	lea edx, [ebx - 0x2435]
0x804a93c:   52                              	push edx
0x804a93d:   50                              	push eax
0x804a93e:   e8 34 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a943:   83 c4 10                        	add esp, 0x10
0x804a946:   0f b7 83 74 00 00 00            	movzx eax, word ptr [ebx + 0x74]
0x804a94d:   98                              	cwde 
0x804a94e:   83 ec 04                        	sub esp, 4
0x804a951:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a954:   8d 93 d1 db ff ff               	lea edx, [ebx - 0x242f]
0x804a95a:   52                              	push edx
0x804a95b:   50                              	push eax
0x804a95c:   e8 16 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a961:   83 c4 10                        	add esp, 0x10
0x804a964:   0f b7 83 76 00 00 00            	movzx eax, word ptr [ebx + 0x76]
0x804a96b:   98                              	cwde 
0x804a96c:   83 ec 04                        	sub esp, 4
0x804a96f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a972:   8d 93 d7 db ff ff               	lea edx, [ebx - 0x2429]
0x804a978:   52                              	push edx
0x804a979:   50                              	push eax
0x804a97a:   e8 f8 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a97f:   83 c4 10                        	add esp, 0x10
0x804a982:   0f b7 83 78 00 00 00            	movzx eax, word ptr [ebx + 0x78]
0x804a989:   98                              	cwde 
0x804a98a:   83 ec 04                        	sub esp, 4
0x804a98d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a990:   8d 93 dd db ff ff               	lea edx, [ebx - 0x2423]
0x804a996:   52                              	push edx
0x804a997:   50                              	push eax
0x804a998:   e8 da eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a99d:   83 c4 10                        	add esp, 0x10
0x804a9a0:   8b 83 7c 00 00 00               	mov eax, dword ptr [ebx + 0x7c]
0x804a9a6:   83 ec 04                        	sub esp, 4
0x804a9a9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9ac:   8d 93 e3 db ff ff               	lea edx, [ebx - 0x241d]
0x804a9b2:   52                              	push edx
0x804a9b3:   50                              	push eax
0x804a9b4:   e8 be eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9b9:   83 c4 10                        	add esp, 0x10
0x804a9bc:   8b 83 80 00 00 00               	mov eax, dword ptr [ebx + 0x80]
0x804a9c2:   83 ec 04                        	sub esp, 4
0x804a9c5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9c8:   8d 93 e9 db ff ff               	lea edx, [ebx - 0x2417]
0x804a9ce:   52                              	push edx
0x804a9cf:   50                              	push eax
0x804a9d0:   e8 a2 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9d5:   83 c4 10                        	add esp, 0x10
0x804a9d8:   0f b7 83 84 00 00 00            	movzx eax, word ptr [ebx + 0x84]
0x804a9df:   0f b7 c0                        	movzx eax, ax
0x804a9e2:   83 ec 04                        	sub esp, 4
0x804a9e5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9e8:   8d 93 ef db ff ff               	lea edx, [ebx - 0x2411]
0x804a9ee:   52                              	push edx
0x804a9ef:   50                              	push eax
0x804a9f0:   e8 82 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9f5:   83 c4 10                        	add esp, 0x10
0x804a9f8:   8b 83 88 00 00 00               	mov eax, dword ptr [ebx + 0x88]
0x804a9fe:   83 ec 04                        	sub esp, 4
0x804aa01:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa04:   8d 93 f5 db ff ff               	lea edx, [ebx - 0x240b]
0x804aa0a:   52                              	push edx
0x804aa0b:   50                              	push eax
0x804aa0c:   e8 66 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa11:   83 c4 10                        	add esp, 0x10
0x804aa14:   0f b7 83 8c 00 00 00            	movzx eax, word ptr [ebx + 0x8c]
0x804aa1b:   0f b7 c0                        	movzx eax, ax
0x804aa1e:   83 ec 04                        	sub esp, 4
0x804aa21:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa24:   8d 93 fb db ff ff               	lea edx, [ebx - 0x2405]
0x804aa2a:   52                              	push edx
0x804aa2b:   50                              	push eax
0x804aa2c:   e8 46 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa31:   83 c4 10                        	add esp, 0x10
0x804aa34:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804aa3a:   f7 d0                           	not eax
0x804aa3c:   83 ec 08                        	sub esp, 8
0x804aa3f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa42:   50                              	push eax
0x804aa43:   e8 1e da ff ff                  	call 0x8048466 <platform_main_end>
0x804aa48:   83 c4 10                        	add esp, 0x10
0x804aa4b:   b8 00 00 00 00                  	mov eax, 0
0x804aa50:   8d 65 f8                        	lea esp, [ebp - 8]
0x804aa53:   59                              	pop ecx
0x804aa54:   5b                              	pop ebx
0x804aa55:   5d                              	pop ebp
0x804aa56:   8d 61 fc                        	lea esp, [ecx - 4]
0x804aa59:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804aa5a -- 0x804aa5e
0x804aa5a:   8b 04 24                        	mov eax, dword ptr [esp]
0x804aa5d:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804aa5e -- 0x804aa62
0x804aa5e:   8b 14 24                        	mov edx, dword ptr [esp]
0x804aa61:   c3                              	ret 
; data inside code section at 0x804aa62 -- 0x804aa70
0x804aa62:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __libc_csu_init at 0x804aa70 -- 0x804aacd
0x804aa70:   55                              	push ebp
0x804aa71:   57                              	push edi
0x804aa72:   56                              	push esi
0x804aa73:   53                              	push ebx
0x804aa74:   e8 17 d9 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aa79:   81 c3 87 25 00 00               	add ebx, 0x2587
0x804aa7f:   83 ec 0c                        	sub esp, 0xc
0x804aa82:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804aa86:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804aa8c:   e8 3b d8 ff ff                  	call 0x80482cc <_init>
0x804aa91:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804aa97:   29 c6                           	sub esi, eax
0x804aa99:   c1 fe 02                        	sar esi, 2
0x804aa9c:   85 f6                           	test esi, esi
0x804aa9e:   74 25                           	je 0x804aac5 <__libc_csu_init+0x55>
0x804aaa0:   31 ff                           	xor edi, edi
0x804aaa2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804aaa8:   83 ec 04                        	sub esp, 4
0x804aaab:   55                              	push ebp
0x804aaac:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804aab0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804aab4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804aabb:   83 c7 01                        	add edi, 1
0x804aabe:   83 c4 10                        	add esp, 0x10
0x804aac1:   39 fe                           	cmp esi, edi
0x804aac3:   75 e3                           	jne 0x804aaa8 <__libc_csu_init+0x38>
0x804aac5:   83 c4 0c                        	add esp, 0xc
0x804aac8:   5b                              	pop ebx
0x804aac9:   5e                              	pop esi
0x804aaca:   5f                              	pop edi
0x804aacb:   5d                              	pop ebp
0x804aacc:   c3                              	ret 
; data inside code section at 0x804aacd -- 0x804aad0
0x804aacd:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804aad0 -- 0x804aad2
0x804aad0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804aad4 -- 0x804aae8
0x804aad4:   53                              	push ebx
0x804aad5:   83 ec 08                        	sub esp, 8
0x804aad8:   e8 b3 d8 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aadd:   81 c3 23 25 00 00               	add ebx, 0x2523
0x804aae3:   83 c4 08                        	add esp, 8
0x804aae6:   5b                              	pop ebx
0x804aae7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 ec aa 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804aae8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804aaf8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804ab08:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804ab18:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804ab28:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ab38:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ab48:   bf 52 b5 b1 31 00 67 5f  36 00 67 5f 31 34 00 67   |.R..1.g_6.g_14.g|
0x804ab58:   5f 31 35 00 67 5f 31 39  00 67 5f 32 31 00 67 5f   |_15.g_19.g_21.g_|
0x804ab68:   33 36 00 67 5f 33 39 00  67 5f 34 31 00 67 5f 34   |36.g_39.g_41.g_4|
0x804ab78:   33 00 67 5f 37 37 00 67  5f 38 31 00 67 5f 39 35   |3.g_77.g_81.g_95|
0x804ab88:   00 67 5f 31 33 30 00 67  5f 31 33 31 00 67 5f 31   |.g_130.g_131.g_1|
0x804ab98:   33 32 00 67 5f 31 33 34  00 67 5f 31 33 35 00 67   |32.g_134.g_135.g|
0x804aba8:   5f 31 35 37 00 67 5f 31  35 38 00 67 5f 31 38 32   |_157.g_158.g_182|
0x804abb8:   00 67 5f 32 32 35 00 67  5f 32 32 36 00 67 5f 32   |.g_225.g_226.g_2|
0x804abc8:   32 37 00 67 5f 32 36 30  00 67 5f 32 38 38 00 67   |27.g_260.g_288.g|
0x804abd8:   5f 32 39 30 00 67 5f 32  39 31 00 67 5f 32 39 33   |_290.g_291.g_293|
0x804abe8:   00 67 5f 33 33 33 00 67  5f 34 32 34 00 67 5f 34   |.g_333.g_424.g_4|
0x804abf8:   33 39 00 67 5f 34 34 36  00 00 00 00 00 00 00 3f   |39.g_446.......?|
0x804ac08:   ff ff ff 7e 00 00 80 0d  00 00 80 31 ff ff 7f 3f   |...~.......1...?|
0x804ac18:   00 00 00 27 00 00 80 71  ff ff ff 34 00 00 00 00   |...'...q...4....|
0x804ac28:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804ac38:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804ac48:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804ac58:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804ac68:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804ac70:   01 1b 03 3b b8 02 00 00  56 00 00 00 80 d6 ff ff   |...;....V.......|
0x804ac80:   e8 02 00 00 c0 d6 ff ff  0c 03 00 00 10 d7 ff ff   |................|
0x804ac90:   d4 02 00 00 e6 d7 ff ff  20 03 00 00 f6 d7 ff ff   |........ .......|
0x804aca0:   40 03 00 00 24 d8 ff ff  64 03 00 00 42 d8 ff ff   |@...$...d...B...|
0x804acb0:   84 03 00 00 6a d8 ff ff  a4 03 00 00 94 d8 ff ff   |....j...........|
0x804acc0:   c4 03 00 00 bd d8 ff ff  e4 03 00 00 00 d9 ff ff   |................|
0x804acd0:   04 04 00 00 41 d9 ff ff  24 04 00 00 99 d9 ff ff   |....A...$.......|
0x804ace0:   48 04 00 00 eb d9 ff ff  6c 04 00 00 28 da ff ff   |H.......l...(...|
0x804acf0:   8c 04 00 00 5f da ff ff  ac 04 00 00 7e da ff ff   |...._.......~...|
0x804ad00:   cc 04 00 00 a8 da ff ff  ec 04 00 00 d4 da ff ff   |................|
0x804ad10:   0c 05 00 00 ff da ff ff  2c 05 00 00 48 db ff ff   |........,...H...|
0x804ad20:   4c 05 00 00 8f db ff ff  6c 05 00 00 e9 db ff ff   |L.......l.......|
0x804ad30:   90 05 00 00 3d dc ff ff  b4 05 00 00 7c dc ff ff   |....=.......|...|
0x804ad40:   d4 05 00 00 b5 dc ff ff  f4 05 00 00 d7 dc ff ff   |................|
0x804ad50:   14 06 00 00 25 dd ff ff  34 06 00 00 61 dd ff ff   |....%...4...a...|
0x804ad60:   54 06 00 00 ea dd ff ff  74 06 00 00 1c de ff ff   |T.......t.......|
0x804ad70:   94 06 00 00 4c de ff ff  b4 06 00 00 91 de ff ff   |....L...........|
0x804ad80:   d4 06 00 00 d0 de ff ff  f4 06 00 00 02 df ff ff   |................|
0x804ad90:   14 07 00 00 2e df ff ff  34 07 00 00 4c df ff ff   |........4...L...|
0x804ada0:   54 07 00 00 74 df ff ff  74 07 00 00 99 df ff ff   |T...t...t.......|
0x804adb0:   94 07 00 00 be df ff ff  b4 07 00 00 f5 df ff ff   |................|
0x804adc0:   d4 07 00 00 29 e0 ff ff  f4 07 00 00 7b e0 ff ff   |....).......{...|
0x804add0:   18 08 00 00 c7 e0 ff ff  3c 08 00 00 fe e0 ff ff   |........<.......|
0x804ade0:   5c 08 00 00 2f e1 ff ff  7c 08 00 00 4e e1 ff ff   |\.../...|...N...|
0x804adf0:   9c 08 00 00 78 e1 ff ff  bc 08 00 00 a0 e1 ff ff   |....x...........|
0x804ae00:   dc 08 00 00 c9 e1 ff ff  fc 08 00 00 05 e2 ff ff   |................|
0x804ae10:   1c 09 00 00 3f e2 ff ff  3c 09 00 00 92 e2 ff ff   |....?...<.......|
0x804ae20:   60 09 00 00 df e2 ff ff  84 09 00 00 17 e3 ff ff   |`...............|
0x804ae30:   a4 09 00 00 49 e3 ff ff  c4 09 00 00 5d e3 ff ff   |....I.......]...|
0x804ae40:   e4 09 00 00 74 e3 ff ff  04 0a 00 00 89 e3 ff ff   |....t...........|
0x804ae50:   24 0a 00 00 9f e3 ff ff  44 0a 00 00 c6 e3 ff ff   |$.......D.......|
0x804ae60:   64 0a 00 00 eb e3 ff ff  84 0a 00 00 2a e4 ff ff   |d...........*...|
0x804ae70:   a4 0a 00 00 63 e4 ff ff  c4 0a 00 00 8f e4 ff ff   |....c...........|
0x804ae80:   e4 0a 00 00 b5 e4 ff ff  04 0b 00 00 f7 e4 ff ff   |................|
0x804ae90:   24 0b 00 00 39 e5 ff ff  44 0b 00 00 7b e5 ff ff   |$...9...D...{...|
0x804aea0:   64 0b 00 00 f0 e5 ff ff  84 0b 00 00 4d e6 ff ff   |d...........M...|
0x804aeb0:   a4 0b 00 00 aa e6 ff ff  c4 0b 00 00 07 e7 ff ff   |................|
0x804aec0:   e4 0b 00 00 97 e7 ff ff  04 0c 00 00 fb e7 ff ff   |................|
0x804aed0:   24 0c 00 00 6b e8 ff ff  44 0c 00 00 b2 e8 ff ff   |$...k...D.......|
0x804aee0:   68 0c 00 00 07 e9 ff ff  88 0c 00 00 4e e9 ff ff   |h...........N...|
0x804aef0:   ac 0c 00 00 b6 e9 ff ff  d0 0c 00 00 bf eb ff ff   |................|
0x804af00:   00 0d 00 00 9f f9 ff ff  30 0d 00 00 ea fd ff ff   |........0.......|
0x804af10:   68 0d 00 00 ee fd ff ff  7c 0d 00 00 00 fe ff ff   |h.......|.......|
0x804af20:   90 0d 00 00 60 fe ff ff  dc 0d 00 00 14            |....`........   |
; section: .eh_frame
0x804af2c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804af3c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804af4c:   34 d4 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |4........... ...|
0x804af5c:   30 00 00 00 90 d3 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804af6c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804af7c:   10 00 00 00 54 00 00 00  ac d3 ff ff 08 00 00 00   |....T...........|
0x804af8c:   00 00 00 00 1c 00 00 00  68 00 00 00 be d4 ff ff   |........h.......|
0x804af9c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804afac:   04 04 00 00 20 00 00 00  88 00 00 00 ae d4 ff ff   |.... ...........|
0x804afbc:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804afcc:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804afdc:   b8 d4 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804afec:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804affc:   b6 d4 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b00c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b01c:   be d4 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b02c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b03c:   c8 d4 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b04c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b05c:   d1 d4 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b06c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b07c:   f4 d4 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b08c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b09c:   15 d5 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b0ac:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b0bc:   90 01 00 00 49 d5 ff ff  52 00 00 00 00 41 0e 08   |....I...R....A..|
0x804b0cc:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b0dc:   1c 00 00 00 b4 01 00 00  77 d5 ff ff 3d 00 00 00   |........w...=...|
0x804b0ec:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b0fc:   1c 00 00 00 d4 01 00 00  94 d5 ff ff 37 00 00 00   |............7...|
0x804b10c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b11c:   1c 00 00 00 f4 01 00 00  ab d5 ff ff 1f 00 00 00   |................|
0x804b12c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b13c:   1c 00 00 00 14 02 00 00  aa d5 ff ff 2a 00 00 00   |............*...|
0x804b14c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b15c:   1c 00 00 00 34 02 00 00  b4 d5 ff ff 2c 00 00 00   |....4.......,...|
0x804b16c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b17c:   1c 00 00 00 54 02 00 00  c0 d5 ff ff 2b 00 00 00   |....T.......+...|
0x804b18c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b19c:   1c 00 00 00 74 02 00 00  cb d5 ff ff 49 00 00 00   |....t.......I...|
0x804b1ac:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b1bc:   1c 00 00 00 94 02 00 00  f4 d5 ff ff 47 00 00 00   |............G...|
0x804b1cc:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b1dc:   20 00 00 00 b4 02 00 00  1b d6 ff ff 5a 00 00 00   | ...........Z...|
0x804b1ec:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b1fc:   c5 0c 04 04 20 00 00 00  d8 02 00 00 51 d6 ff ff   |.... .......Q...|
0x804b20c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b21c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b22c:   81 d6 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b23c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b24c:   a0 d6 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b25c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b26c:   b9 d6 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b27c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b28c:   bb d6 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b29c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b2ac:   e9 d6 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b2bc:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b2cc:   05 d7 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b2dc:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b2ec:   6e d7 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |n...2....A....B.|
0x804b2fc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b30c:   80 d7 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b31c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b32c:   90 d7 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b33c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b34c:   b5 d7 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b35c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b36c:   d4 d7 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b37c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b38c:   e6 d7 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b39c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b3ac:   f2 d7 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b3bc:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b3cc:   f0 d7 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b3dc:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b3ec:   f8 d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b3fc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b40c:   fd d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b41c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b42c:   02 d8 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b43c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b44c:   19 d8 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b45c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b46c:   2d d8 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |-...R....A....B.|
0x804b47c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b48c:   60 05 00 00 5b d8 ff ff  4c 00 00 00 00 41 0e 08   |`...[...L....A..|
0x804b49c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b4ac:   1c 00 00 00 84 05 00 00  83 d8 ff ff 37 00 00 00   |............7...|
0x804b4bc:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b4cc:   1c 00 00 00 a4 05 00 00  9a d8 ff ff 31 00 00 00   |............1...|
0x804b4dc:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b4ec:   1c 00 00 00 c4 05 00 00  ab d8 ff ff 1f 00 00 00   |................|
0x804b4fc:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b50c:   1c 00 00 00 e4 05 00 00  aa d8 ff ff 2a 00 00 00   |............*...|
0x804b51c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b52c:   1c 00 00 00 04 06 00 00  b4 d8 ff ff 28 00 00 00   |............(...|
0x804b53c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b54c:   1c 00 00 00 24 06 00 00  bc d8 ff ff 29 00 00 00   |....$.......)...|
0x804b55c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b56c:   1c 00 00 00 44 06 00 00  c5 d8 ff ff 3c 00 00 00   |....D.......<...|
0x804b57c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b58c:   1c 00 00 00 64 06 00 00  e1 d8 ff ff 3a 00 00 00   |....d.......:...|
0x804b59c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b5ac:   20 00 00 00 84 06 00 00  fb d8 ff ff 53 00 00 00   | ...........S...|
0x804b5bc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b5cc:   c5 0c 04 04 20 00 00 00  a8 06 00 00 2a d9 ff ff   |.... .......*...|
0x804b5dc:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b5ec:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b5fc:   53 d9 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |S...8....A....B.|
0x804b60c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b61c:   6b d9 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |k...2....A....B.|
0x804b62c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b63c:   7d d9 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |}........A....B.|
0x804b64c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b65c:   71 d9 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |q........A....B.|
0x804b66c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b67c:   68 d9 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |h........A....B.|
0x804b68c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b69c:   5d d9 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |]........A....B.|
0x804b6ac:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b6bc:   53 d9 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |S...'....A....B.|
0x804b6cc:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b6dc:   5a d9 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |Z...%....A....B.|
0x804b6ec:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b6fc:   5f d9 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |_...?....A....B.|
0x804b70c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b71c:   7e d9 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |~...9....A....B.|
0x804b72c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b73c:   97 d9 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b74c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b75c:   a3 d9 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804b76c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b77c:   a9 d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b78c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b79c:   cb d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b7ac:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b7bc:   ed d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b7cc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b7dc:   0f da ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804b7ec:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b7fc:   64 da ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |d...]....A....B.|
0x804b80c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b81c:   a1 da ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b82c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b83c:   de da ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b84c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b85c:   1b db ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b86c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b87c:   8b db ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804b88c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b89c:   cf db ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804b8ac:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b8bc:   1f dc ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b8cc:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b8dc:   b0 09 00 00 42 dc ff ff  55 00 00 00 00 41 0e 08   |....B...U....A..|
0x804b8ec:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b8fc:   d0 09 00 00 77 dc ff ff  47 00 00 00 00 41 0e 08   |....w...G....A..|
0x804b90c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b91c:   20 00 00 00 f4 09 00 00  9a dc ff ff 68 00 00 00   | ...........h...|
0x804b92c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b93c:   0c 04 04 00 2c 00 00 00  18 0a 00 00 de dc ff ff   |....,...........|
0x804b94c:   09 02 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804b95c:   86 04 83 05 03 fc 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804b96c:   04 00 00 00 2c 00 00 00  48 0a 00 00 b7 de ff ff   |....,...H.......|
0x804b97c:   e0 0d 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804b98c:   86 04 83 05 03 d0 0d c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804b99c:   04 00 00 00 34 00 00 00  78 0a 00 00 67 ec ff ff   |....4...x...g...|
0x804b9ac:   4b 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |K....D...G...u.D|
0x804b9bc:   0f 03 75 78 06 10 03 02  75 7c 03 36 04 c1 0c 01   |..ux....u|.6....|
0x804b9cc:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804b9dc:   b0 0a 00 00 7a f0 ff ff  04 00 00 00 00 00 00 00   |....z...........|
0x804b9ec:   10 00 00 00 c4 0a 00 00  6a f0 ff ff 04 00 00 00   |........j.......|
0x804b9fc:   00 00 00 00 48 00 00 00  d8 0a 00 00 68 f0 ff ff   |....H.......h...|
0x804ba0c:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804ba1c:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804ba2c:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804ba3c:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804ba4c:   10 00 00 00 24 0b 00 00  7c f0 ff ff 02 00 00 00   |....$...|.......|
0x804ba5c:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 d4 aa 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff ff ff ff ff   |................|
0x804d028:   01 00 00 00 35 c0 be e0  01 76 00 00 ff ff ff ff   |....5....v......|
0x804d038:   5c 00 00 00 c0 1c 85 16  5e 00 9a 58 fe ff ff ff   |\.......^..X....|
0x804d048:   07 00 00 00 fe 9c 8a 34  d8 00 00 00 32 82 90 c8   |.......4....2...|
0x804d058:   5c 21 88 c9 c3 56 31 77  b0 00 00 00 ff ff ff ff   |\!...V1w........|
0x804d068:   aa 54 e1 7b 9a 9b 4e 00  f8 ff ff ff 01 00 6e c8   |.T.{..N.......n.|
0x804d078:   d0 e2 00 00 73 c2 cd 00  f7 ff ff ff 5e b5 00 00   |....s.......^...|
0x804d088:   a3 48 c3 d2 01 00 ??                               |.H....?         |
