;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:18:47
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 c0 dc ff ff               	lea eax, [ebx - 0x2340]
0x804835c:   50                              	push eax
0x804835d:   8d 83 60 dc ff ff               	lea eax, [ebx - 0x23a0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 95 a7 04 08               	mov eax, 0x804a795
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 88 d0 04 08                  	mov eax, 0x804d088
0x80483a5:   3d 88 d0 04 08                  	cmp eax, 0x804d088
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 88 d0 04 08                  	push 0x804d088
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 88 d0 04 08                  	mov eax, 0x804d088
0x80483e5:   2d 88 d0 04 08                  	sub eax, 0x804d088
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 88 d0 04 08                  	push 0x804d088
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d a0 d0 04 08 00            	cmp byte ptr [0x804d0a0], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 a0 d0 04 08 01            	mov byte ptr [0x804d0a0], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 ef 27 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 db 27 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 e0 dc ff ff               	lea edx, [eax - 0x2320]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 ae 27 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 90 27 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 68 27 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 3e 27 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 15 27 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 d2 26 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 90 26 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 38 26 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 e7 25 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 aa 25 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 73 25 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 54 25 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 2a 25 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 fe 24 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 d3 24 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 8a 24 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 42 24 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 e8 23 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 95 23 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 56 23 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 20 23 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 fe 22 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 b0 22 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 74 22 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 eb 21 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 b9 21 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 89 21 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 44 21 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 05 21 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 d3 20 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 a4 20 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 86 20 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 5e 20 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 39 20 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 14 20 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 dd 1f 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 a8 1f 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 56 1f 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 0b 1f 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 d4 1e 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 a3 1e 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 84 1e 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 5a 1e 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 32 1e 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 09 1e 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 cd 1d 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 92 1d 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 3f 1d 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 f3 1c 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 bb 1c 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 8c 1c 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 78 1c 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 61 1c 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 4c 1c 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 36 1c 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 0f 1c 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 ea 1b 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 ab 1b 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 72 1b 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 46 1b 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 20 1b 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 00 de ff ff               	fld dword ptr [eax - 0x2200]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 00 de ff ff               	fld dword ptr [eax - 0x2200]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 04 de ff ff               	fld dword ptr [eax - 0x21fc]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 de 1a 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 00 de ff ff               	fld dword ptr [eax - 0x2200]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 00 de ff ff               	fld dword ptr [eax - 0x2200]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 04 de ff ff               	fld dword ptr [eax - 0x21fc]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 9c 1a 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 08 de ff ff               	fld dword ptr [eax - 0x21f8]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 0c de ff ff               	fld dword ptr [eax - 0x21f4]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 10 de ff ff               	fld dword ptr [eax - 0x21f0]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 5a 1a 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 14 de ff ff               	fld dword ptr [eax - 0x21ec]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 18 de ff ff               	fld dword ptr [eax - 0x21e8]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 1c de ff ff               	fld dword ptr [eax - 0x21e4]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 e2 19 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 20 de ff ff               	fld qword ptr [eax - 0x21e0]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 20 de ff ff               	fld qword ptr [eax - 0x21e0]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 28 de ff ff               	fld qword ptr [eax - 0x21d8]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 85 19 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 20 de ff ff               	fld qword ptr [eax - 0x21e0]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 20 de ff ff               	fld qword ptr [eax - 0x21e0]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 28 de ff ff               	fld qword ptr [eax - 0x21d8]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 28 19 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 30 de ff ff               	fld qword ptr [eax - 0x21d0]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 38 de ff ff               	fld qword ptr [eax - 0x21c8]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 40 de ff ff               	fld qword ptr [eax - 0x21c0]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 cb 18 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 48 de ff ff               	fld qword ptr [eax - 0x21b8]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 50 de ff ff               	fld qword ptr [eax - 0x21b0]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 58 de ff ff               	fld qword ptr [eax - 0x21a8]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 3b 18 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 60 de ff ff               	fld dword ptr [eax - 0x21a0]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 64 de ff ff               	fld dword ptr [eax - 0x219c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 d7 17 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 c0 00 00 00            	mov dword ptr [eax + edx*4 + 0xc0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 66 17 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 c0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xc0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 23 17 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 f0 dc ff ff               	lea eax, [ebx - 0x2310]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 14 dd ff ff               	lea eax, [ebx - 0x22ec]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80498d1
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   81 ec 90 00 00 00               	sub esp, 0x90
0x8049632:   e8 1a 16 00 00                  	call 0x804ac51 <__x86.get_pc_thunk.dx>
0x8049637:   81 c2 c9 39 00 00               	add edx, 0x39c9
0x804963d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049640:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049643:   8b 4d 0c                        	mov ecx, dword ptr [ebp + 0xc]
0x8049646:   8b 5d 14                        	mov ebx, dword ptr [ebp + 0x14]
0x8049649:   8b 75 24                        	mov esi, dword ptr [ebp + 0x24]
0x804964c:   8b 7d 28                        	mov edi, dword ptr [ebp + 0x28]
0x804964f:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x8049652:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049655:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049658:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804965b:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x804965e:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049661:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049664:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049667:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x804966a:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804966d:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049670:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049673:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x8049676:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049679:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x804967c:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804967f:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x8049682:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x8049688:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x804968b:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x8049691:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x8049694:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804969a:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x804969d:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x80496a3:   8b 85 88 00 00 00               	mov eax, dword ptr [ebp + 0x88]
0x80496a9:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x80496af:   8b 85 8c 00 00 00               	mov eax, dword ptr [ebp + 0x8c]
0x80496b5:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x80496bb:   8b 85 90 00 00 00               	mov eax, dword ptr [ebp + 0x90]
0x80496c1:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x80496c7:   0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x80496cb:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x80496ce:   89 c8                           	mov eax, ecx
0x80496d0:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x80496d4:   89 d8                           	mov eax, ebx
0x80496d6:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x80496d9:   89 f0                           	mov eax, esi
0x80496db:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496de:   89 f8                           	mov eax, edi
0x80496e0:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x80496e4:   0f b6 45 9c                     	movzx eax, byte ptr [ebp - 0x64]
0x80496e8:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496eb:   0f b6 45 98                     	movzx eax, byte ptr [ebp - 0x68]
0x80496ef:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x80496f2:   0f b7 45 94                     	movzx eax, word ptr [ebp - 0x6c]
0x80496f6:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496fa:   0f b6 45 90                     	movzx eax, byte ptr [ebp - 0x70]
0x80496fe:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x8049701:   0f b6 45 8c                     	movzx eax, byte ptr [ebp - 0x74]
0x8049705:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x8049708:   0f b7 45 88                     	movzx eax, word ptr [ebp - 0x78]
0x804970c:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x8049710:   0f b6 45 84                     	movzx eax, byte ptr [ebp - 0x7c]
0x8049714:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x8049717:   0f b6 45 80                     	movzx eax, byte ptr [ebp - 0x80]
0x804971b:   88 45 c0                        	mov byte ptr [ebp - 0x40], al
0x804971e:   0f b6 85 7c ff ff ff            	movzx eax, byte ptr [ebp - 0x84]
0x8049725:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x8049728:   0f b7 85 78 ff ff ff            	movzx eax, word ptr [ebp - 0x88]
0x804972f:   66 89 45 b8                     	mov word ptr [ebp - 0x48], ax
0x8049733:   0f b7 85 74 ff ff ff            	movzx eax, word ptr [ebp - 0x8c]
0x804973a:   66 89 45 b4                     	mov word ptr [ebp - 0x4c], ax
0x804973e:   0f b6 85 70 ff ff ff            	movzx eax, byte ptr [ebp - 0x90]
0x8049745:   88 45 b0                        	mov byte ptr [ebp - 0x50], al
0x8049748:   0f b6 85 6c ff ff ff            	movzx eax, byte ptr [ebp - 0x94]
0x804974f:   88 45 ac                        	mov byte ptr [ebp - 0x54], al
0x8049752:   0f b6 85 68 ff ff ff            	movzx eax, byte ptr [ebp - 0x98]
0x8049759:   88 45 a8                        	mov byte ptr [ebp - 0x58], al
0x804975c:   0f b6 85 64 ff ff ff            	movzx eax, byte ptr [ebp - 0x9c]
0x8049763:   88 45 a4                        	mov byte ptr [ebp - 0x5c], al
0x8049766:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x804976a:   88 82 24 00 00 00               	mov byte ptr [edx + 0x24], al
0x8049770:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x8049774:   66 89 82 26 00 00 00            	mov word ptr [edx + 0x26], ax
0x804977b:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x804977e:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x8049784:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x8049788:   88 82 2c 00 00 00               	mov byte ptr [edx + 0x2c], al
0x804978e:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x8049791:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x8049797:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x804979a:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x80497a0:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x80497a3:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x80497a9:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x80497ad:   88 82 c4 04 00 00               	mov byte ptr [edx + 0x4c4], al
0x80497b3:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x80497b7:   66 89 82 3c 00 00 00            	mov word ptr [edx + 0x3c], ax
0x80497be:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x80497c2:   88 82 3e 00 00 00               	mov byte ptr [edx + 0x3e], al
0x80497c8:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x80497cc:   88 82 3f 00 00 00               	mov byte ptr [edx + 0x3f], al
0x80497d2:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x80497d5:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x80497db:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x80497de:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x80497e4:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x80497e8:   66 89 82 48 00 00 00            	mov word ptr [edx + 0x48], ax
0x80497ef:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x80497f2:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x80497f8:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x80497fc:   88 82 50 00 00 00               	mov byte ptr [edx + 0x50], al
0x8049802:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049805:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x804980b:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x804980f:   88 82 58 00 00 00               	mov byte ptr [edx + 0x58], al
0x8049815:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x8049819:   66 89 82 5a 00 00 00            	mov word ptr [edx + 0x5a], ax
0x8049820:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049823:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x8049829:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x804982c:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x8049832:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x8049835:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x804983b:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x804983f:   88 82 68 00 00 00               	mov byte ptr [edx + 0x68], al
0x8049845:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x8049849:   88 82 69 00 00 00               	mov byte ptr [edx + 0x69], al
0x804984f:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x8049853:   88 82 6a 00 00 00               	mov byte ptr [edx + 0x6a], al
0x8049859:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x804985d:   66 89 82 6c 00 00 00            	mov word ptr [edx + 0x6c], ax
0x8049864:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x8049868:   66 89 82 6e 00 00 00            	mov word ptr [edx + 0x6e], ax
0x804986f:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x8049872:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x8049878:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x804987c:   88 82 74 00 00 00               	mov byte ptr [edx + 0x74], al
0x8049882:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x8049885:   89 82 78 00 00 00               	mov dword ptr [edx + 0x78], eax
0x804988b:   8b 85 80 00 00 00               	mov eax, dword ptr [ebp + 0x80]
0x8049891:   89 82 7c 00 00 00               	mov dword ptr [edx + 0x7c], eax
0x8049897:   8b 85 84 00 00 00               	mov eax, dword ptr [ebp + 0x84]
0x804989d:   89 82 80 00 00 00               	mov dword ptr [edx + 0x80], eax
0x80498a3:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x80498a7:   88 82 84 00 00 00               	mov byte ptr [edx + 0x84], al
0x80498ad:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80498b1:   88 82 85 00 00 00               	mov byte ptr [edx + 0x85], al
0x80498b7:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x80498bb:   88 82 86 00 00 00               	mov byte ptr [edx + 0x86], al
0x80498c1:   b8 00 00 00 00                  	mov eax, 0
0x80498c6:   81 c4 90 00 00 00               	add esp, 0x90
0x80498cc:   5b                              	pop ebx
0x80498cd:   5e                              	pop esi
0x80498ce:   5f                              	pop edi
0x80498cf:   5d                              	pop ebp
0x80498d0:   c3                              	ret 
; function: func_1 at 0x80498d1 -- 0x804a795
0x80498d1:   55                              	push ebp
0x80498d2:   89 e5                           	mov ebp, esp
0x80498d4:   57                              	push edi
0x80498d5:   56                              	push esi
0x80498d6:   53                              	push ebx
0x80498d7:   81 ec 58 01 00 00               	sub esp, 0x158
0x80498dd:   e8 6b 13 00 00                  	call 0x804ac4d <__x86.get_pc_thunk.ax>
0x80498e2:   05 1e 37 00 00                  	add eax, 0x371e
0x80498e7:   c6 45 cb 39                     	mov byte ptr [ebp - 0x35], 0x39
0x80498eb:   66 c7 45 c8 ed 90               	mov word ptr [ebp - 0x38], 0x90ed
0x80498f1:   c7 45 c4 f2 c4 bf 58            	mov dword ptr [ebp - 0x3c], 0x58bfc4f2
0x80498f8:   c6 45 c3 02                     	mov byte ptr [ebp - 0x3d], 2
0x80498fc:   c7 45 bc ff ff ff ff            	mov dword ptr [ebp - 0x44], 0xffffffff
0x8049903:   c7 85 50 ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xb0], 0xfffffff6
0x804990d:   c7 85 6c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x94], 0xffffffff
0x8049917:   c6 85 4f ff ff ff 00            	mov byte ptr [ebp - 0xb1], 0
0x804991e:   66 c7 85 4c ff ff ff 3d b2      	mov word ptr [ebp - 0xb4], 0xb23d
0x8049927:   c6 85 4b ff ff ff 65            	mov byte ptr [ebp - 0xb5], 0x65
0x804992e:   c6 85 4a ff ff ff 2a            	mov byte ptr [ebp - 0xb6], 0x2a
0x8049935:   c7 85 44 ff ff ff 16 31 85 5f   	mov dword ptr [ebp - 0xbc], 0x5f853116
0x804993f:   c7 85 40 ff ff ff 2a 2d 39 97   	mov dword ptr [ebp - 0xc0], 0x97392d2a
0x8049949:   66 c7 85 3e ff ff ff 22 59      	mov word ptr [ebp - 0xc2], 0x5922
0x8049952:   c7 85 38 ff ff ff 4d 72 33 86   	mov dword ptr [ebp - 0xc8], 0x8633724d
0x804995c:   c6 45 f3 f7                     	mov byte ptr [ebp - 0xd], 0xf7
0x8049960:   c7 45 ec fd ff ff ff            	mov dword ptr [ebp - 0x14], 0xfffffffd
0x8049967:   c6 45 eb 8d                     	mov byte ptr [ebp - 0x15], 0x8d
0x804996b:   66 c7 45 e8 74 e8               	mov word ptr [ebp - 0x18], 0xe874
0x8049971:   c7 45 e4 f7 55 0e f8            	mov dword ptr [ebp - 0x1c], 0xf80e55f7
0x8049978:   c7 45 98 09 00 00 00            	mov dword ptr [ebp - 0x68], 9
0x804997f:   c7 45 e0 e2 e5 2b d2            	mov dword ptr [ebp - 0x20], 0xd22be5e2
0x8049986:   c6 45 df fa                     	mov byte ptr [ebp - 0x21], 0xfa
0x804998a:   c6 45 97 ff                     	mov byte ptr [ebp - 0x69], 0xff
0x804998e:   c6 45 de 07                     	mov byte ptr [ebp - 0x22], 7
0x8049992:   66 c7 45 dc ff ff               	mov word ptr [ebp - 0x24], 0xffff
0x8049998:   66 c7 45 ba 01 00               	mov word ptr [ebp - 0x46], 1
0x804999e:   c7 45 d8 01 00 00 00            	mov dword ptr [ebp - 0x28], 1
0x80499a5:   c6 45 b9 38                     	mov byte ptr [ebp - 0x47], 0x38
0x80499a9:   c7 45 b4 ff ff ff ff            	mov dword ptr [ebp - 0x4c], 0xffffffff
0x80499b0:   c7 45 d4 86 a2 42 74            	mov dword ptr [ebp - 0x2c], 0x7442a286
0x80499b7:   c7 85 28 ff ff ff 7c 9e 5e 66   	mov dword ptr [ebp - 0xd8], 0x665e9e7c
0x80499c1:   c6 85 27 ff ff ff 07            	mov byte ptr [ebp - 0xd9], 7
0x80499c8:   c6 45 d3 33                     	mov byte ptr [ebp - 0x2d], 0x33
0x80499cc:   c6 45 d2 cf                     	mov byte ptr [ebp - 0x2e], 0xcf
0x80499d0:   66 c7 85 24 ff ff ff 7b 1c      	mov word ptr [ebp - 0xdc], 0x1c7b
0x80499d9:   c6 85 23 ff ff ff f7            	mov byte ptr [ebp - 0xdd], 0xf7
0x80499e0:   c7 45 cc ac dd c8 29            	mov dword ptr [ebp - 0x34], 0x29c8ddac
0x80499e7:   c7 85 34 ff ff ff 49 04 56 ec   	mov dword ptr [ebp - 0xcc], 0xec560449
0x80499f1:   c6 85 22 ff ff ff aa            	mov byte ptr [ebp - 0xde], 0xaa
0x80499f8:   c7 85 1c ff ff ff f7 ff ff ff   	mov dword ptr [ebp - 0xe4], 0xfffffff7
0x8049a02:   c7 85 18 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe8], 0
0x8049a0c:   c7 85 14 ff ff ff a7 f6 07 2e   	mov dword ptr [ebp - 0xec], 0x2e07f6a7
0x8049a16:   c6 85 13 ff ff ff 5d            	mov byte ptr [ebp - 0xed], 0x5d
0x8049a1d:   66 c7 85 10 ff ff ff ff ff      	mov word ptr [ebp - 0xf0], 0xffff
0x8049a26:   c6 45 af 5e                     	mov byte ptr [ebp - 0x51], 0x5e
0x8049a2a:   c7 85 0c ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xf4], 9
0x8049a34:   0f bf 85 24 ff ff ff            	movsx eax, word ptr [ebp - 0xdc]
0x8049a3b:   0f bf 95 24 ff ff ff            	movsx edx, word ptr [ebp - 0xdc]
0x8049a42:   f7 d2                           	not edx
0x8049a44:   29 d0                           	sub eax, edx
0x8049a46:   89 c2                           	mov edx, eax
0x8049a48:   0f bf 85 24 ff ff ff            	movsx eax, word ptr [ebp - 0xdc]
0x8049a4f:   39 c2                           	cmp edx, eax
0x8049a51:   0f 92 c0                        	setb al
0x8049a54:   0f b6 c0                        	movzx eax, al
0x8049a57:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x8049a5a:   0f b7 85 24 ff ff ff            	movzx eax, word ptr [ebp - 0xdc]
0x8049a61:   89 c2                           	mov edx, eax
0x8049a63:   0f b6 85 23 ff ff ff            	movzx eax, byte ptr [ebp - 0xdd]
0x8049a6a:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x8049a6d:   0f 96 c0                        	setbe al
0x8049a70:   09 c2                           	or edx, eax
0x8049a72:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x8049a76:   31 d0                           	xor eax, edx
0x8049a78:   88 45 c3                        	mov byte ptr [ebp - 0x3d], al
0x8049a7b:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x8049a7f:   21 45 cc                        	and dword ptr [ebp - 0x34], eax
0x8049a82:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x8049a86:   75 1c                           	jne 0x8049aa4 <func_1+0x1d3>
0x8049a88:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x8049a8c:   0f be d0                        	movsx edx, al
0x8049a8f:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x8049a93:   89 c1                           	mov ecx, eax
0x8049a95:   d3 e2                           	shl edx, cl
0x8049a97:   89 d0                           	mov eax, edx
0x8049a99:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049a9c:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049a9f:   3d fc ff 00 00                  	cmp eax, 0xfffc
0x8049aa4:   66 83 7d c8 00                  	cmp word ptr [ebp - 0x38], 0
0x8049aa9:   75 07                           	jne 0x8049ab2 <func_1+0x1e1>
0x8049aab:   b8 01 00 00 00                  	mov eax, 1
0x8049ab0:   eb 05                           	jmp 0x8049ab7 <func_1+0x1e6>
0x8049ab2:   b8 00 00 00 00                  	mov eax, 0
0x8049ab7:   0f be d0                        	movsx edx, al
0x8049aba:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x8049abe:   0f be c0                        	movsx eax, al
0x8049ac1:   89 c1                           	mov ecx, eax
0x8049ac3:   d3 e2                           	shl edx, cl
0x8049ac5:   89 d0                           	mov eax, edx
0x8049ac7:   85 c0                           	test eax, eax
0x8049ac9:   74 0d                           	je 0x8049ad8 <func_1+0x207>
0x8049acb:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x8049acf:   74 07                           	je 0x8049ad8 <func_1+0x207>
0x8049ad1:   b8 01 00 00 00                  	mov eax, 1
0x8049ad6:   eb 05                           	jmp 0x8049add <func_1+0x20c>
0x8049ad8:   b8 00 00 00 00                  	mov eax, 0
0x8049add:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x8049ae3:   0f b6 85 23 ff ff ff            	movzx eax, byte ptr [ebp - 0xdd]
0x8049aea:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x8049aed:   80 bd 22 ff ff ff 00            	cmp byte ptr [ebp - 0xde], 0
0x8049af4:   0f 94 c0                        	sete al
0x8049af7:   0f b6 d0                        	movzx edx, al
0x8049afa:   0f bf 85 24 ff ff ff            	movsx eax, word ptr [ebp - 0xdc]
0x8049b01:   01 d0                           	add eax, edx
0x8049b03:   89 85 50 ff ff ff               	mov dword ptr [ebp - 0xb0], eax
0x8049b09:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x8049b0f:   0f b7 b5 24 ff ff ff            	movzx esi, word ptr [ebp - 0xdc]
0x8049b16:   ba 00 00 00 00                  	mov edx, 0
0x8049b1b:   66 f7 f6                        	div si
0x8049b1e:   0f b7 c0                        	movzx eax, ax
0x8049b21:   0f b6 bd 23 ff ff ff            	movzx edi, byte ptr [ebp - 0xdd]
0x8049b28:   99                              	cdq 
0x8049b29:   f7 ff                           	idiv edi
0x8049b2b:   0f b6 c0                        	movzx eax, al
0x8049b2e:   8d 0c 85 00 00 00 00            	lea ecx, [eax*4]
0x8049b35:   0f b6 55 c3                     	movzx edx, byte ptr [ebp - 0x3d]
0x8049b39:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x8049b3d:   21 8d 6c ff ff ff               	and dword ptr [ebp - 0x94], ecx
0x8049b43:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x8049b49:   0f 9f c0                        	setg al
0x8049b4c:   89 c1                           	mov ecx, eax
0x8049b4e:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049b51:   01 c8                           	add eax, ecx
0x8049b53:   c0 f8 06                        	sar al, 6
0x8049b56:   66 98                           	cbw 
0x8049b58:   66 39 45 c8                     	cmp word ptr [ebp - 0x38], ax
0x8049b5c:   0f 9d c0                        	setge al
0x8049b5f:   0f b6 c0                        	movzx eax, al
0x8049b62:   39 c2                           	cmp edx, eax
0x8049b64:   0f 9f c0                        	setg al
0x8049b67:   0f b6 c0                        	movzx eax, al
0x8049b6a:   f7 d8                           	neg eax
0x8049b6c:   0b 45 bc                        	or eax, dword ptr [ebp - 0x44]
0x8049b6f:   85 c0                           	test eax, eax
0x8049b71:   0f 84 d6 08 00 00               	je 0x804a44d <func_1+0xb7c>
0x8049b77:   c7 85 60 ff ff ff 23 69 bb e0   	mov dword ptr [ebp - 0xa0], 0xe0bb6923
0x8049b81:   c7 45 a8 33 22 49 35            	mov dword ptr [ebp - 0x58], 0x35492233
0x8049b88:   c7 45 a4 19 bd 5d c4            	mov dword ptr [ebp - 0x5c], 0xc45dbd19
0x8049b8f:   c7 45 a0 01 00 00 00            	mov dword ptr [ebp - 0x60], 1
0x8049b96:   c6 85 5f ff ff ff 00            	mov byte ptr [ebp - 0xa1], 0
0x8049b9d:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x8049ba1:   0f be d0                        	movsx edx, al
0x8049ba4:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x8049baa:   0f be c0                        	movsx eax, al
0x8049bad:   89 c1                           	mov ecx, eax
0x8049baf:   d3 e2                           	shl edx, cl
0x8049bb1:   89 d0                           	mov eax, edx
0x8049bb3:   83 e0 09                        	and eax, 9
0x8049bb6:   85 c0                           	test eax, eax
0x8049bb8:   0f 95 c0                        	setne al
0x8049bbb:   0f b6 c0                        	movzx eax, al
0x8049bbe:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x8049bc4:   0f 9e c0                        	setle al
0x8049bc7:   0f b6 c0                        	movzx eax, al
0x8049bca:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x8049bd0:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x8049bd6:   0f b6 c0                        	movzx eax, al
0x8049bd9:   69 d0 e3 00 00 00               	imul edx, eax, 0xe3
0x8049bdf:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x8049be3:   39 c2                           	cmp edx, eax
0x8049be5:   0f 9c c0                        	setl al
0x8049be8:   0f b6 c0                        	movzx eax, al
0x8049beb:   39 85 60 ff ff ff               	cmp dword ptr [ebp - 0xa0], eax
0x8049bf1:   0f 95 c0                        	setne al
0x8049bf4:   0f b6 c0                        	movzx eax, al
0x8049bf7:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049bfa:   c6 85 5e ff ff ff f4            	mov byte ptr [ebp - 0xa2], 0xf4
0x8049c01:   c7 45 9c ed fc 3f 5a            	mov dword ptr [ebp - 0x64], 0x5a3ffced
0x8049c08:   66 c7 85 5c ff ff ff f8 e9      	mov word ptr [ebp - 0xa4], 0xe9f8
0x8049c11:   0f b6 85 5e ff ff ff            	movzx eax, byte ptr [ebp - 0xa2]
0x8049c18:   66 31 45 c8                     	xor word ptr [ebp - 0x38], ax
0x8049c1c:   c6 85 5b ff ff ff ff            	mov byte ptr [ebp - 0xa5], 0xff
0x8049c23:   c7 85 54 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0xac], 0xfffffffe
0x8049c2d:   c6 45 96 04                     	mov byte ptr [ebp - 0x6a], 4
0x8049c31:   c7 45 90 01 00 00 00            	mov dword ptr [ebp - 0x70], 1
0x8049c38:   0f b6 5d c3                     	movzx ebx, byte ptr [ebp - 0x3d]
0x8049c3c:   66 83 bd 5c ff ff ff 00         	cmp word ptr [ebp - 0xa4], 0
0x8049c44:   74 11                           	je 0x8049c57 <func_1+0x386>
0x8049c46:   66 83 bd 10 ff ff ff 00         	cmp word ptr [ebp - 0xf0], 0
0x8049c4e:   74 07                           	je 0x8049c57 <func_1+0x386>
0x8049c50:   b8 01 00 00 00                  	mov eax, 1
0x8049c55:   eb 05                           	jmp 0x8049c5c <func_1+0x38b>
0x8049c57:   b8 00 00 00 00                  	mov eax, 0
0x8049c5c:   89 c2                           	mov edx, eax
0x8049c5e:   0f b6 85 4f ff ff ff            	movzx eax, byte ptr [ebp - 0xb1]
0x8049c65:   0f af c2                        	imul eax, edx
0x8049c68:   0f b7 d0                        	movzx edx, ax
0x8049c6b:   66 0f be 85 5b ff ff ff         	movsx ax, byte ptr [ebp - 0xa5]
0x8049c73:   0f b7 c0                        	movzx eax, ax
0x8049c76:   89 c1                           	mov ecx, eax
0x8049c78:   d3 fa                           	sar edx, cl
0x8049c7a:   89 d1                           	mov ecx, edx
0x8049c7c:   ba 37 4f 89 9e                  	mov edx, 0x9e894f37
0x8049c81:   89 c8                           	mov eax, ecx
0x8049c83:   f7 ea                           	imul edx
0x8049c85:   8d 04 0a                        	lea eax, [edx + ecx]
0x8049c88:   c1 f8 1d                        	sar eax, 0x1d
0x8049c8b:   89 c2                           	mov edx, eax
0x8049c8d:   89 c8                           	mov eax, ecx
0x8049c8f:   c1 f8 1f                        	sar eax, 0x1f
0x8049c92:   29 c2                           	sub edx, eax
0x8049c94:   89 d0                           	mov eax, edx
0x8049c96:   0f be c0                        	movsx eax, al
0x8049c99:   6b c0 6e                        	imul eax, eax, 0x6e
0x8049c9c:   39 c3                           	cmp ebx, eax
0x8049c9e:   0f 95 c0                        	setne al
0x8049ca1:   0f b6 c0                        	movzx eax, al
0x8049ca4:   39 45 bc                        	cmp dword ptr [ebp - 0x44], eax
0x8049ca7:   0f 82 3b 02 00 00               	jb 0x8049ee8 <func_1+0x617>
0x8049cad:   c7 85 f8 fe ff ff fb ff ff ff   	mov dword ptr [ebp - 0x108], 0xfffffffb
0x8049cb7:   c7 85 f4 fe ff ff 69 ba e5 54   	mov dword ptr [ebp - 0x10c], 0x54e5ba69
0x8049cc1:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049cc4:   39 85 38 ff ff ff               	cmp dword ptr [ebp - 0xc8], eax
0x8049cca:   0f 86 b6 00 00 00               	jbe 0x8049d86 <func_1+0x4b5>
0x8049cd0:   c7 85 f0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x110], 1
0x8049cda:   c7 85 ec fe ff ff 61 5a e9 b4   	mov dword ptr [ebp - 0x114], 0xb4e95a61
0x8049ce4:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049ce7:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x8049ceb:   0f bf 45 c8                     	movsx eax, word ptr [ebp - 0x38]
0x8049cef:   0f bf 8d 3e ff ff ff            	movsx ecx, word ptr [ebp - 0xc2]
0x8049cf6:   99                              	cdq 
0x8049cf7:   f7 f9                           	idiv ecx
0x8049cf9:   89 d0                           	mov eax, edx
0x8049cfb:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x8049d01:   0f 9e c0                        	setle al
0x8049d04:   0f b6 d0                        	movzx edx, al
0x8049d07:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x8049d0a:   0f b7 c0                        	movzx eax, ax
0x8049d0d:   29 c2                           	sub edx, eax
0x8049d0f:   0f bf 85 5c ff ff ff            	movsx eax, word ptr [ebp - 0xa4]
0x8049d16:   39 c2                           	cmp edx, eax
0x8049d18:   0f 95 c0                        	setne al
0x8049d1b:   0f b6 c0                        	movzx eax, al
0x8049d1e:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049d21:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x8049d25:   74 07                           	je 0x8049d2e <func_1+0x45d>
0x8049d27:   80 bd 5b ff ff ff 00            	cmp byte ptr [ebp - 0xa5], 0
0x8049d2e:   0f b7 85 3e ff ff ff            	movzx eax, word ptr [ebp - 0xc2]
0x8049d35:   0f b7 c0                        	movzx eax, ax
0x8049d38:   c1 f8 06                        	sar eax, 6
0x8049d3b:   85 c0                           	test eax, eax
0x8049d3d:   0f 9e c0                        	setle al
0x8049d40:   0f b6 d0                        	movzx edx, al
0x8049d43:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049d47:   39 c2                           	cmp edx, eax
0x8049d49:   7d 0d                           	jge 0x8049d58 <func_1+0x487>
0x8049d4b:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x8049d4f:   74 07                           	je 0x8049d58 <func_1+0x487>
0x8049d51:   b8 01 00 00 00                  	mov eax, 1
0x8049d56:   eb 05                           	jmp 0x8049d5d <func_1+0x48c>
0x8049d58:   b8 00 00 00 00                  	mov eax, 0
0x8049d5d:   31 85 f8 fe ff ff               	xor dword ptr [ebp - 0x108], eax
0x8049d63:   c7 85 f0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x110], 0
0x8049d6d:   8b 95 f0 fe ff ff               	mov edx, dword ptr [ebp - 0x110]
0x8049d73:   8b 85 ec fe ff ff               	mov eax, dword ptr [ebp - 0x114]
0x8049d79:   21 d0                           	and eax, edx
0x8049d7b:   89 85 ec fe ff ff               	mov dword ptr [ebp - 0x114], eax
0x8049d81:   e9 59 04 00 00                  	jmp 0x804a1df <func_1+0x90e>
0x8049d86:   0f b6 45 d2                     	movzx eax, byte ptr [ebp - 0x2e]
0x8049d8a:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x8049d90:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x8049d94:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x8049d9a:   0f b6 85 27 ff ff ff            	movzx eax, byte ptr [ebp - 0xd9]
0x8049da1:   89 85 c8 fe ff ff               	mov dword ptr [ebp - 0x138], eax
0x8049da7:   0f b6 45 b9                     	movzx eax, byte ptr [ebp - 0x47]
0x8049dab:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x8049db1:   0f bf 45 ba                     	movsx eax, word ptr [ebp - 0x46]
0x8049db5:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x8049dbb:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049dbf:   89 85 bc fe ff ff               	mov dword ptr [ebp - 0x144], eax
0x8049dc5:   0f b6 45 de                     	movzx eax, byte ptr [ebp - 0x22]
0x8049dc9:   89 85 b8 fe ff ff               	mov dword ptr [ebp - 0x148], eax
0x8049dcf:   0f be 45 97                     	movsx eax, byte ptr [ebp - 0x69]
0x8049dd3:   89 85 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], eax
0x8049dd9:   0f be 55 df                     	movsx edx, byte ptr [ebp - 0x21]
0x8049ddd:   89 95 b0 fe ff ff               	mov dword ptr [ebp - 0x150], edx
0x8049de3:   0f b7 55 e8                     	movzx edx, word ptr [ebp - 0x18]
0x8049de7:   0f b6 4d eb                     	movzx ecx, byte ptr [ebp - 0x15]
0x8049deb:   89 8d ac fe ff ff               	mov dword ptr [ebp - 0x154], ecx
0x8049df1:   0f be 4d f3                     	movsx ecx, byte ptr [ebp - 0xd]
0x8049df5:   0f bf 9d 3e ff ff ff            	movsx ebx, word ptr [ebp - 0xc2]
0x8049dfc:   89 9d a8 fe ff ff               	mov dword ptr [ebp - 0x158], ebx
0x8049e02:   0f b6 9d 4a ff ff ff            	movzx ebx, byte ptr [ebp - 0xb6]
0x8049e09:   0f be b5 4b ff ff ff            	movsx esi, byte ptr [ebp - 0xb5]
0x8049e10:   89 b5 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], esi
0x8049e16:   0f b7 b5 4c ff ff ff            	movzx esi, word ptr [ebp - 0xb4]
0x8049e1d:   0f b6 bd 4f ff ff ff            	movzx edi, byte ptr [ebp - 0xb1]
0x8049e24:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x8049e2a:   0f b6 7d c3                     	movzx edi, byte ptr [ebp - 0x3d]
0x8049e2e:   0f bf 45 c8                     	movsx eax, word ptr [ebp - 0x38]
0x8049e32:   89 85 9c fe ff ff               	mov dword ptr [ebp - 0x164], eax
0x8049e38:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x8049e3c:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x8049e42:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x8049e48:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x8049e4e:   ff b5 28 ff ff ff               	push dword ptr [ebp - 0xd8]
0x8049e54:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049e57:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049e5a:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x8049e60:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049e63:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x8049e69:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x8049e6f:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x8049e75:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x8049e7b:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x8049e81:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049e84:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x8049e87:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049e8a:   52                              	push edx
0x8049e8b:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x8049e91:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049e94:   51                              	push ecx
0x8049e95:   ff b5 38 ff ff ff               	push dword ptr [ebp - 0xc8]
0x8049e9b:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x8049ea1:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x8049ea7:   ff b5 44 ff ff ff               	push dword ptr [ebp - 0xbc]
0x8049ead:   53                              	push ebx
0x8049eae:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x8049eb4:   56                              	push esi
0x8049eb5:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049ebb:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049ec1:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x8049ec7:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049eca:   57                              	push edi
0x8049ecb:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049ece:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049ed4:   50                              	push eax
0x8049ed5:   e8 4c f7 ff ff                  	call 0x8049626 <set_var>
0x8049eda:   81 c4 8c 00 00 00               	add esp, 0x8c
0x8049ee0:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049ee3:   e9 a5 08 00 00                  	jmp 0x804a78d <func_1+0xebc>
0x8049ee8:   c7 45 8c 09 00 00 00            	mov dword ptr [ebp - 0x74], 9
0x8049eef:   c7 45 88 b9 24 ea 79            	mov dword ptr [ebp - 0x78], 0x79ea24b9
0x8049ef6:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049efa:   83 c0 01                        	add eax, 1
0x8049efd:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x8049f00:   66 0f be 85 5b ff ff ff         	movsx ax, byte ptr [ebp - 0xa5]
0x8049f08:   0f b6 95 5e ff ff ff            	movzx edx, byte ptr [ebp - 0xa2]
0x8049f0f:   0f be d2                        	movsx edx, dl
0x8049f12:   c1 e2 05                        	shl edx, 5
0x8049f15:   31 d0                           	xor eax, edx
0x8049f17:   89 c2                           	mov edx, eax
0x8049f19:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049f1f:   98                              	cwde 
0x8049f20:   bb 01 00 00 00                  	mov ebx, 1
0x8049f25:   89 c1                           	mov ecx, eax
0x8049f27:   d3 e3                           	shl ebx, cl
0x8049f29:   89 d8                           	mov eax, ebx
0x8049f2b:   89 c1                           	mov ecx, eax
0x8049f2d:   89 d0                           	mov eax, edx
0x8049f2f:   ba 00 00 00 00                  	mov edx, 0
0x8049f34:   66 f7 f1                        	div cx
0x8049f37:   66 85 c0                        	test ax, ax
0x8049f3a:   0f 84 bd 00 00 00               	je 0x8049ffd <func_1+0x72c>
0x8049f40:   c7 85 08 ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0xf8], 5
0x8049f4a:   c7 85 04 ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xfc], 0xfffffffc
0x8049f54:   c7 85 00 ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0x100], 0xfffffffa
0x8049f5e:   0f b6 4d c3                     	movzx ecx, byte ptr [ebp - 0x3d]
0x8049f62:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x8049f68:   89 c2                           	mov edx, eax
0x8049f6a:   c7 45 9c 01 00 00 00            	mov dword ptr [ebp - 0x64], 1
0x8049f71:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049f74:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x8049f7a:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049f80:   29 c2                           	sub edx, eax
0x8049f82:   89 d0                           	mov eax, edx
0x8049f84:   98                              	cwde 
0x8049f85:   8b 95 50 ff ff ff               	mov edx, dword ptr [ebp - 0xb0]
0x8049f8b:   0f bf f2                        	movsx esi, dx
0x8049f8e:   99                              	cdq 
0x8049f8f:   f7 fe                           	idiv esi
0x8049f91:   39 45 bc                        	cmp dword ptr [ebp - 0x44], eax
0x8049f94:   0f 96 c0                        	setbe al
0x8049f97:   0f b6 c0                        	movzx eax, al
0x8049f9a:   39 c1                           	cmp ecx, eax
0x8049f9c:   0f 95 c0                        	setne al
0x8049f9f:   0f b6 c0                        	movzx eax, al
0x8049fa2:   89 c1                           	mov ecx, eax
0x8049fa4:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049fa8:   89 c2                           	mov edx, eax
0x8049faa:   89 c8                           	mov eax, ecx
0x8049fac:   0f af c2                        	imul eax, edx
0x8049faf:   0f b6 c0                        	movzx eax, al
0x8049fb2:   ba d0 00 00 00                  	mov edx, 0xd0
0x8049fb7:   89 c1                           	mov ecx, eax
0x8049fb9:   d3 fa                           	sar edx, cl
0x8049fbb:   89 d0                           	mov eax, edx
0x8049fbd:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049fc0:   83 6d e0 01                     	sub dword ptr [ebp - 0x20], 1
0x8049fc4:   c7 45 9c b8 ae 00 00            	mov dword ptr [ebp - 0x64], 0xaeb8
0x8049fcb:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049fce:   0f be c0                        	movsx eax, al
0x8049fd1:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049fd4:   80 bd 4a ff ff ff 00            	cmp byte ptr [ebp - 0xb6], 0
0x8049fdb:   74 10                           	je 0x8049fed <func_1+0x71c>
0x8049fdd:   80 bd 4f ff ff ff 00            	cmp byte ptr [ebp - 0xb1], 0
0x8049fe4:   74 07                           	je 0x8049fed <func_1+0x71c>
0x8049fe6:   b8 01 00 00 00                  	mov eax, 1
0x8049feb:   eb 05                           	jmp 0x8049ff2 <func_1+0x721>
0x8049fed:   b8 00 00 00 00                  	mov eax, 0
0x8049ff2:   31 85 00 ff ff ff               	xor dword ptr [ebp - 0x100], eax
0x8049ff8:   e9 82 00 00 00                  	jmp 0x804a07f <func_1+0x7ae>
0x8049ffd:   80 6d de 01                     	sub byte ptr [ebp - 0x22], 1
0x804a001:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a004:   66 05 e3 68                     	add ax, 0x68e3
0x804a008:   0f bf d0                        	movsx edx, ax
0x804a00b:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a00e:   98                              	cwde 
0x804a00f:   89 c1                           	mov ecx, eax
0x804a011:   d3 fa                           	sar edx, cl
0x804a013:   89 d0                           	mov eax, edx
0x804a015:   83 f0 01                        	xor eax, 1
0x804a018:   0b 45 88                        	or eax, dword ptr [ebp - 0x78]
0x804a01b:   21 45 e4                        	and dword ptr [ebp - 0x1c], eax
0x804a01e:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a021:   66 21 45 c8                     	and word ptr [ebp - 0x38], ax
0x804a025:   0f bf 55 c8                     	movsx edx, word ptr [ebp - 0x38]
0x804a029:   83 bd 60 ff ff ff 00            	cmp dword ptr [ebp - 0xa0], 0
0x804a030:   74 10                           	je 0x804a042 <func_1+0x771>
0x804a032:   80 bd 4f ff ff ff 00            	cmp byte ptr [ebp - 0xb1], 0
0x804a039:   74 07                           	je 0x804a042 <func_1+0x771>
0x804a03b:   b8 01 00 00 00                  	mov eax, 1
0x804a040:   eb 05                           	jmp 0x804a047 <func_1+0x776>
0x804a042:   b8 00 00 00 00                  	mov eax, 0
0x804a047:   0f b6 d8                        	movzx ebx, al
0x804a04a:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a04d:   0f b6 c0                        	movzx eax, al
0x804a050:   89 c1                           	mov ecx, eax
0x804a052:   d3 e3                           	shl ebx, cl
0x804a054:   89 d8                           	mov eax, ebx
0x804a056:   0f b6 d8                        	movzx ebx, al
0x804a059:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a05c:   0f b6 c0                        	movzx eax, al
0x804a05f:   89 c1                           	mov ecx, eax
0x804a061:   d3 fb                           	sar ebx, cl
0x804a063:   89 d8                           	mov eax, ebx
0x804a065:   3d ff 00 00 00                  	cmp eax, 0xff
0x804a06a:   0f 97 c0                        	seta al
0x804a06d:   0f b6 c0                        	movzx eax, al
0x804a070:   31 d0                           	xor eax, edx
0x804a072:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a075:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x804a079:   09 85 6c ff ff ff               	or dword ptr [ebp - 0x94], eax
0x804a07f:   c7 85 6c ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0x94], 6
0x804a089:   e9 44 01 00 00                  	jmp 0x804a1d2 <func_1+0x901>
0x804a08e:   c7 85 fc fe ff ff 6d 3e bc 58   	mov dword ptr [ebp - 0x104], 0x58bc3e6d
0x804a098:   0f be 45 96                     	movsx eax, byte ptr [ebp - 0x6a]
0x804a09c:   31 45 e4                        	xor dword ptr [ebp - 0x1c], eax
0x804a09f:   c7 45 ec 09 00 00 00            	mov dword ptr [ebp - 0x14], 9
0x804a0a6:   66 83 7d c8 00                  	cmp word ptr [ebp - 0x38], 0
0x804a0ab:   74 10                           	je 0x804a0bd <func_1+0x7ec>
0x804a0ad:   80 bd 5e ff ff ff 00            	cmp byte ptr [ebp - 0xa2], 0
0x804a0b4:   74 07                           	je 0x804a0bd <func_1+0x7ec>
0x804a0b6:   ba 01 00 00 00                  	mov edx, 1
0x804a0bb:   eb 05                           	jmp 0x804a0c2 <func_1+0x7f1>
0x804a0bd:   ba 00 00 00 00                  	mov edx, 0
0x804a0c2:   0f b7 85 10 ff ff ff            	movzx eax, word ptr [ebp - 0xf0]
0x804a0c9:   39 c2                           	cmp edx, eax
0x804a0cb:   7d 07                           	jge 0x804a0d4 <func_1+0x803>
0x804a0cd:   b8 01 00 00 00                  	mov eax, 1
0x804a0d2:   eb 05                           	jmp 0x804a0d9 <func_1+0x808>
0x804a0d4:   b8 00 00 00 00                  	mov eax, 0
0x804a0d9:   66 69 c0 e5 81                  	imul ax, ax, 0x81e5
0x804a0de:   0f bf d0                        	movsx edx, ax
0x804a0e1:   b8 00 00 00 00                  	mov eax, 0
0x804a0e6:   29 d0                           	sub eax, edx
0x804a0e8:   c1 e0 02                        	shl eax, 2
0x804a0eb:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a0ee:   0f 95 c0                        	setne al
0x804a0f1:   0f b6 c0                        	movzx eax, al
0x804a0f4:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x804a0f7:   0f 92 c0                        	setb al
0x804a0fa:   0f b6 c0                        	movzx eax, al
0x804a0fd:   39 45 a8                        	cmp dword ptr [ebp - 0x58], eax
0x804a100:   0f 9e c0                        	setle al
0x804a103:   0f b6 d0                        	movzx edx, al
0x804a106:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a10a:   31 d0                           	xor eax, edx
0x804a10c:   89 c2                           	mov edx, eax
0x804a10e:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a112:   31 d0                           	xor eax, edx
0x804a114:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x804a118:   c7 85 40 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xc0], 9
0x804a122:   0f bf 85 3e ff ff ff            	movsx eax, word ptr [ebp - 0xc2]
0x804a129:   31 85 fc fe ff ff               	xor dword ptr [ebp - 0x104], eax
0x804a12f:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a133:   0f be c0                        	movsx eax, al
0x804a136:   c1 e0 05                        	shl eax, 5
0x804a139:   89 c1                           	mov ecx, eax
0x804a13b:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a13f:   74 1e                           	je 0x804a15f <func_1+0x88e>
0x804a141:   c7 45 a8 03 00 00 00            	mov dword ptr [ebp - 0x58], 3
0x804a148:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a14b:   20 45 f3                        	and byte ptr [ebp - 0xd], al
0x804a14e:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x804a152:   01 c0                           	add eax, eax
0x804a154:   85 c0                           	test eax, eax
0x804a156:   74 07                           	je 0x804a15f <func_1+0x88e>
0x804a158:   b8 01 00 00 00                  	mov eax, 1
0x804a15d:   eb 05                           	jmp 0x804a164 <func_1+0x893>
0x804a15f:   b8 00 00 00 00                  	mov eax, 0
0x804a164:   0f b7 d0                        	movzx edx, ax
0x804a167:   0f b7 85 5c ff ff ff            	movzx eax, word ptr [ebp - 0xa4]
0x804a16e:   0f b7 c0                        	movzx eax, ax
0x804a171:   0f af c2                        	imul eax, edx
0x804a174:   39 45 bc                        	cmp dword ptr [ebp - 0x44], eax
0x804a177:   0f 94 c0                        	sete al
0x804a17a:   21 c8                           	and eax, ecx
0x804a17c:   0f be d0                        	movsx edx, al
0x804a17f:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a185:   0f be c0                        	movsx eax, al
0x804a188:   89 c1                           	mov ecx, eax
0x804a18a:   d3 e2                           	shl edx, cl
0x804a18c:   89 d0                           	mov eax, edx
0x804a18e:   89 c1                           	mov ecx, eax
0x804a190:   66 0f be 85 5b ff ff ff         	movsx ax, byte ptr [ebp - 0xa5]
0x804a198:   89 c2                           	mov edx, eax
0x804a19a:   89 c8                           	mov eax, ecx
0x804a19c:   0f af c2                        	imul eax, edx
0x804a19f:   0f be d0                        	movsx edx, al
0x804a1a2:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a1a8:   0f be c0                        	movsx eax, al
0x804a1ab:   0f af c2                        	imul eax, edx
0x804a1ae:   85 c0                           	test eax, eax
0x804a1b0:   75 0a                           	jne 0x804a1bc <func_1+0x8eb>
0x804a1b2:   66 83 bd 5c ff ff ff 00         	cmp word ptr [ebp - 0xa4], 0
0x804a1ba:   74 07                           	je 0x804a1c3 <func_1+0x8f2>
0x804a1bc:   b8 01 00 00 00                  	mov eax, 1
0x804a1c1:   eb 05                           	jmp 0x804a1c8 <func_1+0x8f7>
0x804a1c3:   b8 00 00 00 00                  	mov eax, 0
0x804a1c8:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804a1cb:   83 ad 6c ff ff ff 04            	sub dword ptr [ebp - 0x94], 4
0x804a1d2:   83 bd 6c ff ff ff f7            	cmp dword ptr [ebp - 0x94], -9
0x804a1d9:   0f 8c af fe ff ff               	jl 0x804a08e <func_1+0x7bd>
0x804a1df:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a1e2:   23 45 a4                        	and eax, dword ptr [ebp - 0x5c]
0x804a1e5:   85 c0                           	test eax, eax
0x804a1e7:   0f 84 e9 00 00 00               	je 0x804a2d6 <func_1+0xa05>
0x804a1ed:   c7 85 e4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x11c], 0
0x804a1f7:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x804a1fe:   e9 aa 00 00 00                  	jmp 0x804a2ad <func_1+0x9dc>
0x804a203:   c7 85 e0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x120], 0
0x804a20d:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a210:   0f b6 c0                        	movzx eax, al
0x804a213:   69 c0 85 00 00 00               	imul eax, eax, 0x85
0x804a219:   85 c0                           	test eax, eax
0x804a21b:   0f 94 c0                        	sete al
0x804a21e:   0f b6 c0                        	movzx eax, al
0x804a221:   09 45 a0                        	or dword ptr [ebp - 0x60], eax
0x804a224:   83 bd 40 ff ff ff 00            	cmp dword ptr [ebp - 0xc0], 0
0x804a22b:   75 7b                           	jne 0x804a2a8 <func_1+0x9d7>
0x804a22d:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a230:   66 98                           	cbw 
0x804a232:   f7 d8                           	neg eax
0x804a234:   0f bf d8                        	movsx ebx, ax
0x804a237:   66 83 bd 3e ff ff ff 00         	cmp word ptr [ebp - 0xc2], 0
0x804a23f:   75 06                           	jne 0x804a247 <func_1+0x976>
0x804a241:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x804a245:   74 07                           	je 0x804a24e <func_1+0x97d>
0x804a247:   b8 01 00 00 00                  	mov eax, 1
0x804a24c:   eb 05                           	jmp 0x804a253 <func_1+0x982>
0x804a24e:   b8 00 00 00 00                  	mov eax, 0
0x804a253:   0f b6 d0                        	movzx edx, al
0x804a256:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a259:   0f b6 c0                        	movzx eax, al
0x804a25c:   29 c2                           	sub edx, eax
0x804a25e:   89 d0                           	mov eax, edx
0x804a260:   89 c2                           	mov edx, eax
0x804a262:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a265:   21 d0                           	and eax, edx
0x804a267:   89 c2                           	mov edx, eax
0x804a269:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x804a26d:   01 d0                           	add eax, edx
0x804a26f:   8b 55 bc                        	mov edx, dword ptr [ebp - 0x44]
0x804a272:   89 d1                           	mov ecx, edx
0x804a274:   ba 00 00 00 00                  	mov edx, 0
0x804a279:   66 f7 f1                        	div cx
0x804a27c:   89 d0                           	mov eax, edx
0x804a27e:   98                              	cwde 
0x804a27f:   89 c1                           	mov ecx, eax
0x804a281:   d3 fb                           	sar ebx, cl
0x804a283:   89 d8                           	mov eax, ebx
0x804a285:   3d b7 00 00 00                  	cmp eax, 0xb7
0x804a28a:   0f 9f c0                        	setg al
0x804a28d:   0f b6 c0                        	movzx eax, al
0x804a290:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a293:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a297:   0f 94 c0                        	sete al
0x804a29a:   0f b6 d0                        	movzx edx, al
0x804a29d:   0f be 45 df                     	movsx eax, byte ptr [ebp - 0x21]
0x804a2a1:   01 d0                           	add eax, edx
0x804a2a3:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a2a6:   eb 01                           	jmp 0x804a2a9 <func_1+0x9d8>
0x804a2a8:   90                              	nop 
0x804a2a9:   83 45 a4 01                     	add dword ptr [ebp - 0x5c], 1
0x804a2ad:   83 7d a4 3a                     	cmp dword ptr [ebp - 0x5c], 0x3a
0x804a2b1:   0f 87 4c ff ff ff               	ja 0x804a203 <func_1+0x932>
0x804a2b7:   83 85 e4 fe ff ff 01            	add dword ptr [ebp - 0x11c], 1
0x804a2be:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a2c1:   09 85 6c ff ff ff               	or dword ptr [ebp - 0x94], eax
0x804a2c7:   c7 85 14 ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0xec], 8
0x804a2d1:   e9 59 03 00 00                  	jmp 0x804a62f <func_1+0xd5e>
0x804a2d6:   c7 85 e8 fe ff ff fc ff ff ff   	mov dword ptr [ebp - 0x118], 0xfffffffc
0x804a2e0:   0f b6 45 b9                     	movzx eax, byte ptr [ebp - 0x47]
0x804a2e4:   83 c0 01                        	add eax, 1
0x804a2e7:   88 45 b9                        	mov byte ptr [ebp - 0x47], al
0x804a2ea:   0f b6 45 d2                     	movzx eax, byte ptr [ebp - 0x2e]
0x804a2ee:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a2f4:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x804a2f8:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x804a2fe:   0f b6 85 27 ff ff ff            	movzx eax, byte ptr [ebp - 0xd9]
0x804a305:   89 85 c8 fe ff ff               	mov dword ptr [ebp - 0x138], eax
0x804a30b:   0f b6 45 b9                     	movzx eax, byte ptr [ebp - 0x47]
0x804a30f:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x804a315:   0f bf 45 ba                     	movsx eax, word ptr [ebp - 0x46]
0x804a319:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x804a31f:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a323:   89 85 bc fe ff ff               	mov dword ptr [ebp - 0x144], eax
0x804a329:   0f b6 45 de                     	movzx eax, byte ptr [ebp - 0x22]
0x804a32d:   89 85 b8 fe ff ff               	mov dword ptr [ebp - 0x148], eax
0x804a333:   0f be 45 97                     	movsx eax, byte ptr [ebp - 0x69]
0x804a337:   89 85 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], eax
0x804a33d:   0f be 55 df                     	movsx edx, byte ptr [ebp - 0x21]
0x804a341:   89 95 b0 fe ff ff               	mov dword ptr [ebp - 0x150], edx
0x804a347:   0f b7 55 e8                     	movzx edx, word ptr [ebp - 0x18]
0x804a34b:   0f b6 4d eb                     	movzx ecx, byte ptr [ebp - 0x15]
0x804a34f:   89 8d ac fe ff ff               	mov dword ptr [ebp - 0x154], ecx
0x804a355:   0f be 4d f3                     	movsx ecx, byte ptr [ebp - 0xd]
0x804a359:   0f bf 9d 3e ff ff ff            	movsx ebx, word ptr [ebp - 0xc2]
0x804a360:   89 9d a8 fe ff ff               	mov dword ptr [ebp - 0x158], ebx
0x804a366:   0f b6 9d 4a ff ff ff            	movzx ebx, byte ptr [ebp - 0xb6]
0x804a36d:   0f be b5 4b ff ff ff            	movsx esi, byte ptr [ebp - 0xb5]
0x804a374:   89 b5 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], esi
0x804a37a:   0f b7 b5 4c ff ff ff            	movzx esi, word ptr [ebp - 0xb4]
0x804a381:   0f b6 bd 4f ff ff ff            	movzx edi, byte ptr [ebp - 0xb1]
0x804a388:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x804a38e:   0f b6 7d c3                     	movzx edi, byte ptr [ebp - 0x3d]
0x804a392:   0f bf 45 c8                     	movsx eax, word ptr [ebp - 0x38]
0x804a396:   89 85 9c fe ff ff               	mov dword ptr [ebp - 0x164], eax
0x804a39c:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x804a3a0:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a3a6:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a3ac:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a3b2:   ff b5 28 ff ff ff               	push dword ptr [ebp - 0xd8]
0x804a3b8:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a3bb:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a3be:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a3c4:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a3c7:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a3cd:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a3d3:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a3d9:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a3df:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a3e5:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a3e8:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a3eb:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a3ee:   52                              	push edx
0x804a3ef:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a3f5:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a3f8:   51                              	push ecx
0x804a3f9:   ff b5 38 ff ff ff               	push dword ptr [ebp - 0xc8]
0x804a3ff:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a405:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x804a40b:   ff b5 44 ff ff ff               	push dword ptr [ebp - 0xbc]
0x804a411:   53                              	push ebx
0x804a412:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a418:   56                              	push esi
0x804a419:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a41f:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a425:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a42b:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a42e:   57                              	push edi
0x804a42f:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a432:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a438:   50                              	push eax
0x804a439:   e8 e8 f1 ff ff                  	call 0x8049626 <set_var>
0x804a43e:   81 c4 8c 00 00 00               	add esp, 0x8c
0x804a444:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a448:   e9 40 03 00 00                  	jmp 0x804a78d <func_1+0xebc>
0x804a44d:   66 c7 85 32 ff ff ff 86 fd      	mov word ptr [ebp - 0xce], 0xfd86
0x804a456:   c7 45 b0 eb 10 be 09            	mov dword ptr [ebp - 0x50], 0x9be10eb
0x804a45d:   0f be 85 13 ff ff ff            	movsx eax, byte ptr [ebp - 0xed]
0x804a464:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a467:   0f b6 55 de                     	movzx edx, byte ptr [ebp - 0x22]
0x804a46b:   66 83 bd 4c ff ff ff 00         	cmp word ptr [ebp - 0xb4], 0
0x804a473:   74 07                           	je 0x804a47c <func_1+0xbab>
0x804a475:   bb fb c7 ff ff                  	mov ebx, 0xffffc7fb
0x804a47a:   eb 05                           	jmp 0x804a481 <func_1+0xbb0>
0x804a47c:   bb fa c7 ff ff                  	mov ebx, 0xffffc7fa
0x804a481:   0f b6 85 23 ff ff ff            	movzx eax, byte ptr [ebp - 0xdd]
0x804a488:   89 c1                           	mov ecx, eax
0x804a48a:   d3 e3                           	shl ebx, cl
0x804a48c:   89 d8                           	mov eax, ebx
0x804a48e:   98                              	cwde 
0x804a48f:   01 d0                           	add eax, edx
0x804a491:   39 85 0c ff ff ff               	cmp dword ptr [ebp - 0xf4], eax
0x804a497:   0f 97 c0                        	seta al
0x804a49a:   0f b6 d0                        	movzx edx, al
0x804a49d:   0f b6 45 b9                     	movzx eax, byte ptr [ebp - 0x47]
0x804a4a1:   0f be c0                        	movsx eax, al
0x804a4a4:   01 d0                           	add eax, edx
0x804a4a6:   21 45 e4                        	and dword ptr [ebp - 0x1c], eax
0x804a4a9:   66 c7 45 e8 e3 ff               	mov word ptr [ebp - 0x18], 0xffe3
0x804a4af:   e9 70 01 00 00                  	jmp 0x804a624 <func_1+0xd53>
0x804a4b4:   c7 85 2c ff ff ff 16 2b fd 6b   	mov dword ptr [ebp - 0xd4], 0x6bfd2b16
0x804a4be:   c7 85 68 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x98], 1
0x804a4c8:   c6 45 af 00                     	mov byte ptr [ebp - 0x51], 0
0x804a4cc:   e9 44 01 00 00                  	jmp 0x804a615 <func_1+0xd44>
0x804a4d1:   c6 45 87 8a                     	mov byte ptr [ebp - 0x79], 0x8a
0x804a4d5:   c7 45 80 ff ff ff ff            	mov dword ptr [ebp - 0x80], 0xffffffff
0x804a4dc:   c7 85 7c ff ff ff d4 b2 80 71   	mov dword ptr [ebp - 0x84], 0x7180b2d4
0x804a4e6:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x804a4ea:   31 45 e4                        	xor dword ptr [ebp - 0x1c], eax
0x804a4ed:   81 bd 1c ff ff ff 1d 3a b5 41   	cmp dword ptr [ebp - 0xe4], 0x41b53a1d
0x804a4f7:   74 1c                           	je 0x804a515 <func_1+0xc44>
0x804a4f9:   c7 85 64 ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0x9c], 0xfffffff6
0x804a503:   0f b6 85 4f ff ff ff            	movzx eax, byte ptr [ebp - 0xb1]
0x804a50a:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x804a510:   e9 ad 00 00 00                  	jmp 0x804a5c2 <func_1+0xcf1>
0x804a515:   c6 85 7b ff ff ff f3            	mov byte ptr [ebp - 0x85], 0xf3
0x804a51c:   c7 85 74 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x8c], 1
0x804a526:   c7 85 70 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x90], 1
0x804a530:   c6 45 d3 15                     	mov byte ptr [ebp - 0x2d], 0x15
0x804a534:   80 ad 7b ff ff ff 01            	sub byte ptr [ebp - 0x85], 1
0x804a53b:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a53e:   0b 45 c4                        	or eax, dword ptr [ebp - 0x3c]
0x804a541:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a544:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x804a54a:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a54d:   80 bd 22 ff ff ff 00            	cmp byte ptr [ebp - 0xde], 0
0x804a554:   74 05                           	je 0x804a55b <func_1+0xc8a>
0x804a556:   e9 02 ff ff ff                  	jmp 0x804a45d <func_1+0xb8c>
0x804a55b:   0f b6 45 d2                     	movzx eax, byte ptr [ebp - 0x2e]
0x804a55f:   83 c0 01                        	add eax, 1
0x804a562:   88 45 d2                        	mov byte ptr [ebp - 0x2e], al
0x804a565:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x804a569:   8d 50 ff                        	lea edx, [eax - 1]
0x804a56c:   88 55 c3                        	mov byte ptr [ebp - 0x3d], dl
0x804a56f:   84 c0                           	test al, al
0x804a571:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a574:   31 85 6c ff ff ff               	xor dword ptr [ebp - 0x94], eax
0x804a57a:   0f b6 85 7b ff ff ff            	movzx eax, byte ptr [ebp - 0x85]
0x804a581:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x804a584:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a58a:   0f b7 c0                        	movzx eax, ax
0x804a58d:   c1 e0 0a                        	shl eax, 0xa
0x804a590:   85 c0                           	test eax, eax
0x804a592:   75 06                           	jne 0x804a59a <func_1+0xcc9>
0x804a594:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a598:   74 07                           	je 0x804a5a1 <func_1+0xcd0>
0x804a59a:   b8 01 00 00 00                  	mov eax, 1
0x804a59f:   eb 05                           	jmp 0x804a5a6 <func_1+0xcd5>
0x804a5a1:   b8 00 00 00 00                  	mov eax, 0
0x804a5a6:   0f b7 d0                        	movzx edx, ax
0x804a5a9:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a5ac:   0f b7 c0                        	movzx eax, ax
0x804a5af:   89 c1                           	mov ecx, eax
0x804a5b1:   d3 e2                           	shl edx, cl
0x804a5b3:   89 d0                           	mov eax, edx
0x804a5b5:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x804a5bb:   81 65 d8 99 e6 ed 6a            	and dword ptr [ebp - 0x28], 0x6aede699
0x804a5c2:   83 7d d4 ff                     	cmp dword ptr [ebp - 0x2c], -1
0x804a5c6:   0f 9d c0                        	setge al
0x804a5c9:   30 45 df                        	xor byte ptr [ebp - 0x21], al
0x804a5cc:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a5cf:   0f bf c8                        	movsx ecx, ax
0x804a5d2:   ba dd 42 71 be                  	mov edx, 0xbe7142dd
0x804a5d7:   89 c8                           	mov eax, ecx
0x804a5d9:   f7 ea                           	imul edx
0x804a5db:   8d 04 0a                        	lea eax, [edx + ecx]
0x804a5de:   c1 f8 0c                        	sar eax, 0xc
0x804a5e1:   89 c2                           	mov edx, eax
0x804a5e3:   89 c8                           	mov eax, ecx
0x804a5e5:   c1 f8 1f                        	sar eax, 0x1f
0x804a5e8:   29 c2                           	sub edx, eax
0x804a5ea:   89 d0                           	mov eax, edx
0x804a5ec:   69 c0 82 15 00 00               	imul eax, eax, 0x1582
0x804a5f2:   29 c1                           	sub ecx, eax
0x804a5f4:   89 c8                           	mov eax, ecx
0x804a5f6:   0f be c0                        	movsx eax, al
0x804a5f9:   8b 95 2c ff ff ff               	mov edx, dword ptr [ebp - 0xd4]
0x804a5ff:   0f be fa                        	movsx edi, dl
0x804a602:   99                              	cdq 
0x804a603:   f7 ff                           	idiv edi
0x804a605:   09 85 7c ff ff ff               	or dword ptr [ebp - 0x84], eax
0x804a60b:   0f b6 45 af                     	movzx eax, byte ptr [ebp - 0x51]
0x804a60f:   83 c0 02                        	add eax, 2
0x804a612:   88 45 af                        	mov byte ptr [ebp - 0x51], al
0x804a615:   80 7d af 16                     	cmp byte ptr [ebp - 0x51], 0x16
0x804a619:   0f 8e b2 fe ff ff               	jle 0x804a4d1 <func_1+0xc00>
0x804a61f:   66 83 45 e8 01                  	add word ptr [ebp - 0x18], 1
0x804a624:   66 83 7d e8 07                  	cmp word ptr [ebp - 0x18], 7
0x804a629:   0f 87 85 fe ff ff               	ja 0x804a4b4 <func_1+0xbe3>
0x804a62f:   0f b6 45 d2                     	movzx eax, byte ptr [ebp - 0x2e]
0x804a633:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a639:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x804a63d:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x804a643:   0f b6 85 27 ff ff ff            	movzx eax, byte ptr [ebp - 0xd9]
0x804a64a:   89 85 c8 fe ff ff               	mov dword ptr [ebp - 0x138], eax
0x804a650:   0f b6 45 b9                     	movzx eax, byte ptr [ebp - 0x47]
0x804a654:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x804a65a:   0f bf 45 ba                     	movsx eax, word ptr [ebp - 0x46]
0x804a65e:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x804a664:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a668:   89 85 bc fe ff ff               	mov dword ptr [ebp - 0x144], eax
0x804a66e:   0f b6 45 de                     	movzx eax, byte ptr [ebp - 0x22]
0x804a672:   89 85 b8 fe ff ff               	mov dword ptr [ebp - 0x148], eax
0x804a678:   0f be 45 97                     	movsx eax, byte ptr [ebp - 0x69]
0x804a67c:   89 85 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], eax
0x804a682:   0f be 55 df                     	movsx edx, byte ptr [ebp - 0x21]
0x804a686:   89 95 b0 fe ff ff               	mov dword ptr [ebp - 0x150], edx
0x804a68c:   0f b7 55 e8                     	movzx edx, word ptr [ebp - 0x18]
0x804a690:   0f b6 4d eb                     	movzx ecx, byte ptr [ebp - 0x15]
0x804a694:   89 8d ac fe ff ff               	mov dword ptr [ebp - 0x154], ecx
0x804a69a:   0f be 4d f3                     	movsx ecx, byte ptr [ebp - 0xd]
0x804a69e:   0f bf 9d 3e ff ff ff            	movsx ebx, word ptr [ebp - 0xc2]
0x804a6a5:   89 9d a8 fe ff ff               	mov dword ptr [ebp - 0x158], ebx
0x804a6ab:   0f b6 9d 4a ff ff ff            	movzx ebx, byte ptr [ebp - 0xb6]
0x804a6b2:   0f be b5 4b ff ff ff            	movsx esi, byte ptr [ebp - 0xb5]
0x804a6b9:   89 b5 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], esi
0x804a6bf:   0f b7 b5 4c ff ff ff            	movzx esi, word ptr [ebp - 0xb4]
0x804a6c6:   0f b6 bd 4f ff ff ff            	movzx edi, byte ptr [ebp - 0xb1]
0x804a6cd:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x804a6d3:   0f b6 7d c3                     	movzx edi, byte ptr [ebp - 0x3d]
0x804a6d7:   0f bf 45 c8                     	movsx eax, word ptr [ebp - 0x38]
0x804a6db:   89 85 9c fe ff ff               	mov dword ptr [ebp - 0x164], eax
0x804a6e1:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x804a6e5:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a6eb:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a6f1:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a6f7:   ff b5 28 ff ff ff               	push dword ptr [ebp - 0xd8]
0x804a6fd:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a700:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a703:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a709:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a70c:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a712:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a718:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a71e:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a724:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a72a:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a72d:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a730:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a733:   52                              	push edx
0x804a734:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a73a:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a73d:   51                              	push ecx
0x804a73e:   ff b5 38 ff ff ff               	push dword ptr [ebp - 0xc8]
0x804a744:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a74a:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x804a750:   ff b5 44 ff ff ff               	push dword ptr [ebp - 0xbc]
0x804a756:   53                              	push ebx
0x804a757:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a75d:   56                              	push esi
0x804a75e:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a764:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a76a:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a770:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a773:   57                              	push edi
0x804a774:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a777:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a77d:   50                              	push eax
0x804a77e:   e8 a3 ee ff ff                  	call 0x8049626 <set_var>
0x804a783:   81 c4 8c 00 00 00               	add esp, 0x8c
0x804a789:   0f b7 45 ba                     	movzx eax, word ptr [ebp - 0x46]
0x804a78d:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a790:   5b                              	pop ebx
0x804a791:   5e                              	pop esi
0x804a792:   5f                              	pop edi
0x804a793:   5d                              	pop ebp
0x804a794:   c3                              	ret 
; function: main at 0x804a795 -- 0x804ac4d
0x804a795:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a799:   83 e4 f0                        	and esp, 0xfffffff0
0x804a79c:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a79f:   55                              	push ebp
0x804a7a0:   89 e5                           	mov ebp, esp
0x804a7a2:   53                              	push ebx
0x804a7a3:   51                              	push ecx
0x804a7a4:   83 ec 10                        	sub esp, 0x10
0x804a7a7:   e8 e4 db ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a7ac:   81 c3 54 28 00 00               	add ebx, 0x2854
0x804a7b2:   89 c8                           	mov eax, ecx
0x804a7b4:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a7bb:   83 38 02                        	cmp dword ptr [eax], 2
0x804a7be:   75 26                           	jne 0x804a7e6 <main+0x51>
0x804a7c0:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a7c3:   83 c0 04                        	add eax, 4
0x804a7c6:   8b 00                           	mov eax, dword ptr [eax]
0x804a7c8:   83 ec 08                        	sub esp, 8
0x804a7cb:   8d 93 38 dd ff ff               	lea edx, [ebx - 0x22c8]
0x804a7d1:   52                              	push edx
0x804a7d2:   50                              	push eax
0x804a7d3:   e8 28 db ff ff                  	call 0x8048300 <strcmp>
0x804a7d8:   83 c4 10                        	add esp, 0x10
0x804a7db:   85 c0                           	test eax, eax
0x804a7dd:   75 07                           	jne 0x804a7e6 <main+0x51>
0x804a7df:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a7e6:   e8 6b dc ff ff                  	call 0x8048456 <platform_main_begin>
0x804a7eb:   e8 7b ec ff ff                  	call 0x804946b <crc32_gentab>
0x804a7f0:   e8 dc f0 ff ff                  	call 0x80498d1 <func_1>
0x804a7f5:   0f b6 83 24 00 00 00            	movzx eax, byte ptr [ebx + 0x24]
0x804a7fc:   0f be c0                        	movsx eax, al
0x804a7ff:   83 ec 04                        	sub esp, 4
0x804a802:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a805:   8d 93 3a dd ff ff               	lea edx, [ebx - 0x22c6]
0x804a80b:   52                              	push edx
0x804a80c:   50                              	push eax
0x804a80d:   e8 65 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a812:   83 c4 10                        	add esp, 0x10
0x804a815:   0f b7 83 26 00 00 00            	movzx eax, word ptr [ebx + 0x26]
0x804a81c:   98                              	cwde 
0x804a81d:   83 ec 04                        	sub esp, 4
0x804a820:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a823:   8d 93 3e dd ff ff               	lea edx, [ebx - 0x22c2]
0x804a829:   52                              	push edx
0x804a82a:   50                              	push eax
0x804a82b:   e8 47 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a830:   83 c4 10                        	add esp, 0x10
0x804a833:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a839:   83 ec 04                        	sub esp, 4
0x804a83c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a83f:   8d 93 42 dd ff ff               	lea edx, [ebx - 0x22be]
0x804a845:   52                              	push edx
0x804a846:   50                              	push eax
0x804a847:   e8 2b ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a84c:   83 c4 10                        	add esp, 0x10
0x804a84f:   0f b6 83 2c 00 00 00            	movzx eax, byte ptr [ebx + 0x2c]
0x804a856:   0f b6 c0                        	movzx eax, al
0x804a859:   83 ec 04                        	sub esp, 4
0x804a85c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a85f:   8d 93 47 dd ff ff               	lea edx, [ebx - 0x22b9]
0x804a865:   52                              	push edx
0x804a866:   50                              	push eax
0x804a867:   e8 0b ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a86c:   83 c4 10                        	add esp, 0x10
0x804a86f:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804a875:   83 ec 04                        	sub esp, 4
0x804a878:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a87b:   8d 93 4c dd ff ff               	lea edx, [ebx - 0x22b4]
0x804a881:   52                              	push edx
0x804a882:   50                              	push eax
0x804a883:   e8 ef ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a888:   83 c4 10                        	add esp, 0x10
0x804a88b:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a891:   83 ec 04                        	sub esp, 4
0x804a894:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a897:   8d 93 51 dd ff ff               	lea edx, [ebx - 0x22af]
0x804a89d:   52                              	push edx
0x804a89e:   50                              	push eax
0x804a89f:   e8 d3 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8a4:   83 c4 10                        	add esp, 0x10
0x804a8a7:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804a8ad:   89 c2                           	mov edx, eax
0x804a8af:   83 ec 04                        	sub esp, 4
0x804a8b2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8b5:   8d 83 56 dd ff ff               	lea eax, [ebx - 0x22aa]
0x804a8bb:   50                              	push eax
0x804a8bc:   52                              	push edx
0x804a8bd:   e8 b5 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8c2:   83 c4 10                        	add esp, 0x10
0x804a8c5:   0f b6 83 c4 04 00 00            	movzx eax, byte ptr [ebx + 0x4c4]
0x804a8cc:   0f b6 c0                        	movzx eax, al
0x804a8cf:   83 ec 04                        	sub esp, 4
0x804a8d2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8d5:   8d 93 5b dd ff ff               	lea edx, [ebx - 0x22a5]
0x804a8db:   52                              	push edx
0x804a8dc:   50                              	push eax
0x804a8dd:   e8 95 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8e2:   83 c4 10                        	add esp, 0x10
0x804a8e5:   0f b7 83 3c 00 00 00            	movzx eax, word ptr [ebx + 0x3c]
0x804a8ec:   0f b7 c0                        	movzx eax, ax
0x804a8ef:   83 ec 04                        	sub esp, 4
0x804a8f2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8f5:   8d 93 60 dd ff ff               	lea edx, [ebx - 0x22a0]
0x804a8fb:   52                              	push edx
0x804a8fc:   50                              	push eax
0x804a8fd:   e8 75 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a902:   83 c4 10                        	add esp, 0x10
0x804a905:   0f b6 83 3e 00 00 00            	movzx eax, byte ptr [ebx + 0x3e]
0x804a90c:   0f be c0                        	movsx eax, al
0x804a90f:   83 ec 04                        	sub esp, 4
0x804a912:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a915:   8d 93 65 dd ff ff               	lea edx, [ebx - 0x229b]
0x804a91b:   52                              	push edx
0x804a91c:   50                              	push eax
0x804a91d:   e8 55 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a922:   83 c4 10                        	add esp, 0x10
0x804a925:   0f b6 83 3f 00 00 00            	movzx eax, byte ptr [ebx + 0x3f]
0x804a92c:   0f b6 c0                        	movzx eax, al
0x804a92f:   83 ec 04                        	sub esp, 4
0x804a932:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a935:   8d 93 6a dd ff ff               	lea edx, [ebx - 0x2296]
0x804a93b:   52                              	push edx
0x804a93c:   50                              	push eax
0x804a93d:   e8 35 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a942:   83 c4 10                        	add esp, 0x10
0x804a945:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804a94b:   89 c2                           	mov edx, eax
0x804a94d:   83 ec 04                        	sub esp, 4
0x804a950:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a953:   8d 83 6f dd ff ff               	lea eax, [ebx - 0x2291]
0x804a959:   50                              	push eax
0x804a95a:   52                              	push edx
0x804a95b:   e8 17 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a960:   83 c4 10                        	add esp, 0x10
0x804a963:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804a969:   89 c2                           	mov edx, eax
0x804a96b:   83 ec 04                        	sub esp, 4
0x804a96e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a971:   8d 83 74 dd ff ff               	lea eax, [ebx - 0x228c]
0x804a977:   50                              	push eax
0x804a978:   52                              	push edx
0x804a979:   e8 f9 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a97e:   83 c4 10                        	add esp, 0x10
0x804a981:   0f b7 83 48 00 00 00            	movzx eax, word ptr [ebx + 0x48]
0x804a988:   98                              	cwde 
0x804a989:   83 ec 04                        	sub esp, 4
0x804a98c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a98f:   8d 93 79 dd ff ff               	lea edx, [ebx - 0x2287]
0x804a995:   52                              	push edx
0x804a996:   50                              	push eax
0x804a997:   e8 db eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a99c:   83 c4 10                        	add esp, 0x10
0x804a99f:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804a9a5:   83 ec 04                        	sub esp, 4
0x804a9a8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9ab:   8d 93 7f dd ff ff               	lea edx, [ebx - 0x2281]
0x804a9b1:   52                              	push edx
0x804a9b2:   50                              	push eax
0x804a9b3:   e8 bf eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9b8:   83 c4 10                        	add esp, 0x10
0x804a9bb:   0f b6 83 50 00 00 00            	movzx eax, byte ptr [ebx + 0x50]
0x804a9c2:   0f be c0                        	movsx eax, al
0x804a9c5:   83 ec 04                        	sub esp, 4
0x804a9c8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9cb:   8d 93 85 dd ff ff               	lea edx, [ebx - 0x227b]
0x804a9d1:   52                              	push edx
0x804a9d2:   50                              	push eax
0x804a9d3:   e8 9f eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9d8:   83 c4 10                        	add esp, 0x10
0x804a9db:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804a9e1:   89 c2                           	mov edx, eax
0x804a9e3:   83 ec 04                        	sub esp, 4
0x804a9e6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9e9:   8d 83 8b dd ff ff               	lea eax, [ebx - 0x2275]
0x804a9ef:   50                              	push eax
0x804a9f0:   52                              	push edx
0x804a9f1:   e8 81 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9f6:   83 c4 10                        	add esp, 0x10
0x804a9f9:   0f b6 83 58 00 00 00            	movzx eax, byte ptr [ebx + 0x58]
0x804aa00:   0f b6 c0                        	movzx eax, al
0x804aa03:   83 ec 04                        	sub esp, 4
0x804aa06:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa09:   8d 93 91 dd ff ff               	lea edx, [ebx - 0x226f]
0x804aa0f:   52                              	push edx
0x804aa10:   50                              	push eax
0x804aa11:   e8 61 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa16:   83 c4 10                        	add esp, 0x10
0x804aa19:   0f b7 83 5a 00 00 00            	movzx eax, word ptr [ebx + 0x5a]
0x804aa20:   0f b7 c0                        	movzx eax, ax
0x804aa23:   83 ec 04                        	sub esp, 4
0x804aa26:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa29:   8d 93 97 dd ff ff               	lea edx, [ebx - 0x2269]
0x804aa2f:   52                              	push edx
0x804aa30:   50                              	push eax
0x804aa31:   e8 41 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa36:   83 c4 10                        	add esp, 0x10
0x804aa39:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804aa3f:   89 c2                           	mov edx, eax
0x804aa41:   83 ec 04                        	sub esp, 4
0x804aa44:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa47:   8d 83 9d dd ff ff               	lea eax, [ebx - 0x2263]
0x804aa4d:   50                              	push eax
0x804aa4e:   52                              	push edx
0x804aa4f:   e8 23 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa54:   83 c4 10                        	add esp, 0x10
0x804aa57:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804aa5d:   89 c2                           	mov edx, eax
0x804aa5f:   83 ec 04                        	sub esp, 4
0x804aa62:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa65:   8d 83 a3 dd ff ff               	lea eax, [ebx - 0x225d]
0x804aa6b:   50                              	push eax
0x804aa6c:   52                              	push edx
0x804aa6d:   e8 05 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa72:   83 c4 10                        	add esp, 0x10
0x804aa75:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804aa7b:   83 ec 04                        	sub esp, 4
0x804aa7e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa81:   8d 93 a9 dd ff ff               	lea edx, [ebx - 0x2257]
0x804aa87:   52                              	push edx
0x804aa88:   50                              	push eax
0x804aa89:   e8 e9 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa8e:   83 c4 10                        	add esp, 0x10
0x804aa91:   0f b6 83 68 00 00 00            	movzx eax, byte ptr [ebx + 0x68]
0x804aa98:   0f be c0                        	movsx eax, al
0x804aa9b:   83 ec 04                        	sub esp, 4
0x804aa9e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaa1:   8d 93 af dd ff ff               	lea edx, [ebx - 0x2251]
0x804aaa7:   52                              	push edx
0x804aaa8:   50                              	push eax
0x804aaa9:   e8 c9 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaae:   83 c4 10                        	add esp, 0x10
0x804aab1:   0f b6 83 69 00 00 00            	movzx eax, byte ptr [ebx + 0x69]
0x804aab8:   0f be c0                        	movsx eax, al
0x804aabb:   83 ec 04                        	sub esp, 4
0x804aabe:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aac1:   8d 93 b5 dd ff ff               	lea edx, [ebx - 0x224b]
0x804aac7:   52                              	push edx
0x804aac8:   50                              	push eax
0x804aac9:   e8 a9 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aace:   83 c4 10                        	add esp, 0x10
0x804aad1:   0f b6 83 6a 00 00 00            	movzx eax, byte ptr [ebx + 0x6a]
0x804aad8:   0f b6 c0                        	movzx eax, al
0x804aadb:   83 ec 04                        	sub esp, 4
0x804aade:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aae1:   8d 93 bb dd ff ff               	lea edx, [ebx - 0x2245]
0x804aae7:   52                              	push edx
0x804aae8:   50                              	push eax
0x804aae9:   e8 89 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaee:   83 c4 10                        	add esp, 0x10
0x804aaf1:   0f b7 83 6c 00 00 00            	movzx eax, word ptr [ebx + 0x6c]
0x804aaf8:   0f b7 c0                        	movzx eax, ax
0x804aafb:   83 ec 04                        	sub esp, 4
0x804aafe:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab01:   8d 93 c1 dd ff ff               	lea edx, [ebx - 0x223f]
0x804ab07:   52                              	push edx
0x804ab08:   50                              	push eax
0x804ab09:   e8 69 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab0e:   83 c4 10                        	add esp, 0x10
0x804ab11:   0f b7 83 6e 00 00 00            	movzx eax, word ptr [ebx + 0x6e]
0x804ab18:   98                              	cwde 
0x804ab19:   83 ec 04                        	sub esp, 4
0x804ab1c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab1f:   8d 93 c7 dd ff ff               	lea edx, [ebx - 0x2239]
0x804ab25:   52                              	push edx
0x804ab26:   50                              	push eax
0x804ab27:   e8 4b ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab2c:   83 c4 10                        	add esp, 0x10
0x804ab2f:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804ab35:   89 c2                           	mov edx, eax
0x804ab37:   83 ec 04                        	sub esp, 4
0x804ab3a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab3d:   8d 83 cd dd ff ff               	lea eax, [ebx - 0x2233]
0x804ab43:   50                              	push eax
0x804ab44:   52                              	push edx
0x804ab45:   e8 2d ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab4a:   83 c4 10                        	add esp, 0x10
0x804ab4d:   0f b6 83 74 00 00 00            	movzx eax, byte ptr [ebx + 0x74]
0x804ab54:   0f b6 c0                        	movzx eax, al
0x804ab57:   83 ec 04                        	sub esp, 4
0x804ab5a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab5d:   8d 93 d3 dd ff ff               	lea edx, [ebx - 0x222d]
0x804ab63:   52                              	push edx
0x804ab64:   50                              	push eax
0x804ab65:   e8 0d ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab6a:   83 c4 10                        	add esp, 0x10
0x804ab6d:   8b 83 78 00 00 00               	mov eax, dword ptr [ebx + 0x78]
0x804ab73:   89 c2                           	mov edx, eax
0x804ab75:   83 ec 04                        	sub esp, 4
0x804ab78:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab7b:   8d 83 d9 dd ff ff               	lea eax, [ebx - 0x2227]
0x804ab81:   50                              	push eax
0x804ab82:   52                              	push edx
0x804ab83:   e8 ef e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab88:   83 c4 10                        	add esp, 0x10
0x804ab8b:   8b 83 7c 00 00 00               	mov eax, dword ptr [ebx + 0x7c]
0x804ab91:   89 c2                           	mov edx, eax
0x804ab93:   83 ec 04                        	sub esp, 4
0x804ab96:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab99:   8d 83 df dd ff ff               	lea eax, [ebx - 0x2221]
0x804ab9f:   50                              	push eax
0x804aba0:   52                              	push edx
0x804aba1:   e8 d1 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804aba6:   83 c4 10                        	add esp, 0x10
0x804aba9:   8b 83 80 00 00 00               	mov eax, dword ptr [ebx + 0x80]
0x804abaf:   89 c2                           	mov edx, eax
0x804abb1:   83 ec 04                        	sub esp, 4
0x804abb4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abb7:   8d 83 e5 dd ff ff               	lea eax, [ebx - 0x221b]
0x804abbd:   50                              	push eax
0x804abbe:   52                              	push edx
0x804abbf:   e8 b3 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abc4:   83 c4 10                        	add esp, 0x10
0x804abc7:   0f b6 83 84 00 00 00            	movzx eax, byte ptr [ebx + 0x84]
0x804abce:   0f b6 c0                        	movzx eax, al
0x804abd1:   83 ec 04                        	sub esp, 4
0x804abd4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abd7:   8d 93 eb dd ff ff               	lea edx, [ebx - 0x2215]
0x804abdd:   52                              	push edx
0x804abde:   50                              	push eax
0x804abdf:   e8 93 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abe4:   83 c4 10                        	add esp, 0x10
0x804abe7:   0f b6 83 85 00 00 00            	movzx eax, byte ptr [ebx + 0x85]
0x804abee:   0f b6 c0                        	movzx eax, al
0x804abf1:   83 ec 04                        	sub esp, 4
0x804abf4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abf7:   8d 93 f1 dd ff ff               	lea edx, [ebx - 0x220f]
0x804abfd:   52                              	push edx
0x804abfe:   50                              	push eax
0x804abff:   e8 73 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac04:   83 c4 10                        	add esp, 0x10
0x804ac07:   0f b6 83 86 00 00 00            	movzx eax, byte ptr [ebx + 0x86]
0x804ac0e:   0f b6 c0                        	movzx eax, al
0x804ac11:   83 ec 04                        	sub esp, 4
0x804ac14:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac17:   8d 93 f7 dd ff ff               	lea edx, [ebx - 0x2209]
0x804ac1d:   52                              	push edx
0x804ac1e:   50                              	push eax
0x804ac1f:   e8 53 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac24:   83 c4 10                        	add esp, 0x10
0x804ac27:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ac2d:   f7 d0                           	not eax
0x804ac2f:   83 ec 08                        	sub esp, 8
0x804ac32:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac35:   50                              	push eax
0x804ac36:   e8 2b d8 ff ff                  	call 0x8048466 <platform_main_end>
0x804ac3b:   83 c4 10                        	add esp, 0x10
0x804ac3e:   b8 00 00 00 00                  	mov eax, 0
0x804ac43:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ac46:   59                              	pop ecx
0x804ac47:   5b                              	pop ebx
0x804ac48:   5d                              	pop ebp
0x804ac49:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ac4c:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ac4d -- 0x804ac51
0x804ac4d:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ac50:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804ac51 -- 0x804ac55
0x804ac51:   8b 14 24                        	mov edx, dword ptr [esp]
0x804ac54:   c3                              	ret 
; data inside code section at 0x804ac55 -- 0x804ac60
0x804ac55:   66 90 66 90 66 90 66 90  66 90 90                  |f.f.f.f.f..     |
; function: __libc_csu_init at 0x804ac60 -- 0x804acbd
0x804ac60:   55                              	push ebp
0x804ac61:   57                              	push edi
0x804ac62:   56                              	push esi
0x804ac63:   53                              	push ebx
0x804ac64:   e8 27 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ac69:   81 c3 97 23 00 00               	add ebx, 0x2397
0x804ac6f:   83 ec 0c                        	sub esp, 0xc
0x804ac72:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ac76:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ac7c:   e8 4b d6 ff ff                  	call 0x80482cc <_init>
0x804ac81:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804ac87:   29 c6                           	sub esi, eax
0x804ac89:   c1 fe 02                        	sar esi, 2
0x804ac8c:   85 f6                           	test esi, esi
0x804ac8e:   74 25                           	je 0x804acb5 <__libc_csu_init+0x55>
0x804ac90:   31 ff                           	xor edi, edi
0x804ac92:   8d b6 00 00 00 00               	lea esi, [esi]
0x804ac98:   83 ec 04                        	sub esp, 4
0x804ac9b:   55                              	push ebp
0x804ac9c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804aca0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804aca4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804acab:   83 c7 01                        	add edi, 1
0x804acae:   83 c4 10                        	add esp, 0x10
0x804acb1:   39 fe                           	cmp esi, edi
0x804acb3:   75 e3                           	jne 0x804ac98 <__libc_csu_init+0x38>
0x804acb5:   83 c4 0c                        	add esp, 0xc
0x804acb8:   5b                              	pop ebx
0x804acb9:   5e                              	pop esi
0x804acba:   5f                              	pop edi
0x804acbb:   5d                              	pop ebp
0x804acbc:   c3                              	ret 
; data inside code section at 0x804acbd -- 0x804acc0
0x804acbd:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804acc0 -- 0x804acc2
0x804acc0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804acc4 -- 0x804acd8
0x804acc4:   53                              	push ebx
0x804acc5:   83 ec 08                        	sub esp, 8
0x804acc8:   e8 c3 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804accd:   81 c3 33 23 00 00               	add ebx, 0x2333
0x804acd3:   83 c4 08                        	add esp, 8
0x804acd6:   5b                              	pop ebx
0x804acd7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 dc ac 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804acd8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804ace8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804acf8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804ad08:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804ad18:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ad28:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ad38:   31 00 67 5f 36 00 67 5f  39 00 67 5f 31 30 00 67   |1.g_6.g_9.g_10.g|
0x804ad48:   5f 31 32 00 67 5f 32 35  00 67 5f 34 36 00 67 5f   |_12.g_25.g_46.g_|
0x804ad58:   34 37 00 67 5f 38 35 00  67 5f 38 36 00 67 5f 38   |47.g_85.g_86.g_8|
0x804ad68:   39 00 67 5f 39 34 00 67  5f 39 38 00 67 5f 39 39   |9.g_94.g_98.g_99|
0x804ad78:   00 67 5f 31 30 31 00 67  5f 31 30 32 00 67 5f 31   |.g_101.g_102.g_1|
0x804ad88:   32 33 00 67 5f 31 32 34  00 67 5f 31 34 32 00 67   |23.g_124.g_142.g|
0x804ad98:   5f 31 36 36 00 67 5f 31  36 37 00 67 5f 31 36 39   |_166.g_167.g_169|
0x804ada8:   00 67 5f 31 37 30 00 67  5f 31 38 39 00 67 5f 31   |.g_170.g_189.g_1|
0x804adb8:   39 30 00 67 5f 31 39 31  00 67 5f 32 31 33 00 67   |90.g_191.g_213.g|
0x804adc8:   5f 32 36 34 00 67 5f 32  36 35 00 67 5f 32 36 36   |_264.g_265.g_266|
0x804add8:   00 67 5f 32 38 37 00 67  5f 33 36 38 00 67 5f 33   |.g_287.g_368.g_3|
0x804ade8:   36 39 00 67 5f 33 37 30  00 67 5f 34 30 30 00 67   |69.g_370.g_400.g|
0x804adf8:   5f 34 32 30 00 00 00 00  00 00 00 3f ff ff ff 7e   |_420.......?...~|
0x804ae08:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x804ae18:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x804ae28:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804ae38:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804ae48:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804ae58:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804ae68:   01                                                 |.               |
; section: .eh_frame_hdr
0x804ae68:   01 1b 03 3b b8 02 00 00  56 00 00 00 88 d4 ff ff   |...;....V.......|
0x804ae78:   e8 02 00 00 c8 d4 ff ff  0c 03 00 00 18 d5 ff ff   |................|
0x804ae88:   d4 02 00 00 ee d5 ff ff  20 03 00 00 fe d5 ff ff   |........ .......|
0x804ae98:   40 03 00 00 2c d6 ff ff  64 03 00 00 4a d6 ff ff   |@...,...d...J...|
0x804aea8:   84 03 00 00 72 d6 ff ff  a4 03 00 00 9c d6 ff ff   |....r...........|
0x804aeb8:   c4 03 00 00 c5 d6 ff ff  e4 03 00 00 08 d7 ff ff   |................|
0x804aec8:   04 04 00 00 49 d7 ff ff  24 04 00 00 a1 d7 ff ff   |....I...$.......|
0x804aed8:   48 04 00 00 f3 d7 ff ff  6c 04 00 00 30 d8 ff ff   |H.......l...0...|
0x804aee8:   8c 04 00 00 67 d8 ff ff  ac 04 00 00 86 d8 ff ff   |....g...........|
0x804aef8:   cc 04 00 00 b0 d8 ff ff  ec 04 00 00 dc d8 ff ff   |................|
0x804af08:   0c 05 00 00 07 d9 ff ff  2c 05 00 00 50 d9 ff ff   |........,...P...|
0x804af18:   4c 05 00 00 97 d9 ff ff  6c 05 00 00 f1 d9 ff ff   |L.......l.......|
0x804af28:   90 05 00 00 45 da ff ff  b4 05 00 00 84 da ff ff   |....E...........|
0x804af38:   d4 05 00 00 bd da ff ff  f4 05 00 00 df da ff ff   |................|
0x804af48:   14 06 00 00 2d db ff ff  34 06 00 00 69 db ff ff   |....-...4...i...|
0x804af58:   54 06 00 00 f2 db ff ff  74 06 00 00 24 dc ff ff   |T.......t...$...|
0x804af68:   94 06 00 00 54 dc ff ff  b4 06 00 00 99 dc ff ff   |....T...........|
0x804af78:   d4 06 00 00 d8 dc ff ff  f4 06 00 00 0a dd ff ff   |................|
0x804af88:   14 07 00 00 36 dd ff ff  34 07 00 00 54 dd ff ff   |....6...4...T...|
0x804af98:   54 07 00 00 7c dd ff ff  74 07 00 00 a1 dd ff ff   |T...|...t.......|
0x804afa8:   94 07 00 00 c6 dd ff ff  b4 07 00 00 fd dd ff ff   |................|
0x804afb8:   d4 07 00 00 31 de ff ff  f4 07 00 00 83 de ff ff   |....1...........|
0x804afc8:   18 08 00 00 cf de ff ff  3c 08 00 00 06 df ff ff   |........<.......|
0x804afd8:   5c 08 00 00 37 df ff ff  7c 08 00 00 56 df ff ff   |\...7...|...V...|
0x804afe8:   9c 08 00 00 80 df ff ff  bc 08 00 00 a8 df ff ff   |................|
0x804aff8:   dc 08 00 00 d1 df ff ff  fc 08 00 00 0d e0 ff ff   |................|
0x804b008:   1c 09 00 00 47 e0 ff ff  3c 09 00 00 9a e0 ff ff   |....G...<.......|
0x804b018:   60 09 00 00 e7 e0 ff ff  84 09 00 00 1f e1 ff ff   |`...............|
0x804b028:   a4 09 00 00 51 e1 ff ff  c4 09 00 00 65 e1 ff ff   |....Q.......e...|
0x804b038:   e4 09 00 00 7c e1 ff ff  04 0a 00 00 91 e1 ff ff   |....|...........|
0x804b048:   24 0a 00 00 a7 e1 ff ff  44 0a 00 00 ce e1 ff ff   |$.......D.......|
0x804b058:   64 0a 00 00 f3 e1 ff ff  84 0a 00 00 32 e2 ff ff   |d...........2...|
0x804b068:   a4 0a 00 00 6b e2 ff ff  c4 0a 00 00 97 e2 ff ff   |....k...........|
0x804b078:   e4 0a 00 00 bd e2 ff ff  04 0b 00 00 ff e2 ff ff   |................|
0x804b088:   24 0b 00 00 41 e3 ff ff  44 0b 00 00 83 e3 ff ff   |$...A...D.......|
0x804b098:   64 0b 00 00 f8 e3 ff ff  84 0b 00 00 55 e4 ff ff   |d...........U...|
0x804b0a8:   a4 0b 00 00 b2 e4 ff ff  c4 0b 00 00 0f e5 ff ff   |................|
0x804b0b8:   e4 0b 00 00 9f e5 ff ff  04 0c 00 00 03 e6 ff ff   |................|
0x804b0c8:   24 0c 00 00 73 e6 ff ff  44 0c 00 00 ba e6 ff ff   |$...s...D.......|
0x804b0d8:   68 0c 00 00 0f e7 ff ff  88 0c 00 00 56 e7 ff ff   |h...........V...|
0x804b0e8:   ac 0c 00 00 be e7 ff ff  d0 0c 00 00 69 ea ff ff   |............i...|
0x804b0f8:   00 0d 00 00 2d f9 ff ff  30 0d 00 00 e5 fd ff ff   |....-...0.......|
0x804b108:   68 0d 00 00 e9 fd ff ff  7c 0d 00 00 f8 fd ff ff   |h.......|.......|
0x804b118:   90 0d 00 00 58 fe ff ff  dc 0d 00 00 14            |....X........   |
; section: .eh_frame
0x804b124:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b134:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b144:   3c d2 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |<........... ...|
0x804b154:   30 00 00 00 98 d1 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b164:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b174:   10 00 00 00 54 00 00 00  b4 d1 ff ff 08 00 00 00   |....T...........|
0x804b184:   00 00 00 00 1c 00 00 00  68 00 00 00 c6 d2 ff ff   |........h.......|
0x804b194:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b1a4:   04 04 00 00 20 00 00 00  88 00 00 00 b6 d2 ff ff   |.... ...........|
0x804b1b4:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b1c4:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b1d4:   c0 d2 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b1e4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b1f4:   be d2 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b204:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b214:   c6 d2 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b224:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b234:   d0 d2 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b244:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b254:   d9 d2 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b264:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b274:   fc d2 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b284:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b294:   1d d3 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b2a4:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b2b4:   90 01 00 00 51 d3 ff ff  52 00 00 00 00 41 0e 08   |....Q...R....A..|
0x804b2c4:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b2d4:   1c 00 00 00 b4 01 00 00  7f d3 ff ff 3d 00 00 00   |............=...|
0x804b2e4:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b2f4:   1c 00 00 00 d4 01 00 00  9c d3 ff ff 37 00 00 00   |............7...|
0x804b304:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b314:   1c 00 00 00 f4 01 00 00  b3 d3 ff ff 1f 00 00 00   |................|
0x804b324:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b334:   1c 00 00 00 14 02 00 00  b2 d3 ff ff 2a 00 00 00   |............*...|
0x804b344:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b354:   1c 00 00 00 34 02 00 00  bc d3 ff ff 2c 00 00 00   |....4.......,...|
0x804b364:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b374:   1c 00 00 00 54 02 00 00  c8 d3 ff ff 2b 00 00 00   |....T.......+...|
0x804b384:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b394:   1c 00 00 00 74 02 00 00  d3 d3 ff ff 49 00 00 00   |....t.......I...|
0x804b3a4:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b3b4:   1c 00 00 00 94 02 00 00  fc d3 ff ff 47 00 00 00   |............G...|
0x804b3c4:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b3d4:   20 00 00 00 b4 02 00 00  23 d4 ff ff 5a 00 00 00   | .......#...Z...|
0x804b3e4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b3f4:   c5 0c 04 04 20 00 00 00  d8 02 00 00 59 d4 ff ff   |.... .......Y...|
0x804b404:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b414:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b424:   89 d4 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b434:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b444:   a8 d4 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b454:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b464:   c1 d4 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b474:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b484:   c3 d4 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b494:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b4a4:   f1 d4 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b4b4:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b4c4:   0d d5 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b4d4:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b4e4:   76 d5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |v...2....A....B.|
0x804b4f4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b504:   88 d5 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b514:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b524:   98 d5 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b534:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b544:   bd d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b554:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b564:   dc d5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b574:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b584:   ee d5 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b594:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b5a4:   fa d5 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b5b4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b5c4:   f8 d5 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b5d4:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b5e4:   00 d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b5f4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b604:   05 d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b614:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b624:   0a d6 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b634:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b644:   21 d6 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |!...4....A....B.|
0x804b654:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b664:   35 d6 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |5...R....A....B.|
0x804b674:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b684:   60 05 00 00 63 d6 ff ff  4c 00 00 00 00 41 0e 08   |`...c...L....A..|
0x804b694:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b6a4:   1c 00 00 00 84 05 00 00  8b d6 ff ff 37 00 00 00   |............7...|
0x804b6b4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b6c4:   1c 00 00 00 a4 05 00 00  a2 d6 ff ff 31 00 00 00   |............1...|
0x804b6d4:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b6e4:   1c 00 00 00 c4 05 00 00  b3 d6 ff ff 1f 00 00 00   |................|
0x804b6f4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b704:   1c 00 00 00 e4 05 00 00  b2 d6 ff ff 2a 00 00 00   |............*...|
0x804b714:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b724:   1c 00 00 00 04 06 00 00  bc d6 ff ff 28 00 00 00   |............(...|
0x804b734:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b744:   1c 00 00 00 24 06 00 00  c4 d6 ff ff 29 00 00 00   |....$.......)...|
0x804b754:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b764:   1c 00 00 00 44 06 00 00  cd d6 ff ff 3c 00 00 00   |....D.......<...|
0x804b774:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b784:   1c 00 00 00 64 06 00 00  e9 d6 ff ff 3a 00 00 00   |....d.......:...|
0x804b794:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b7a4:   20 00 00 00 84 06 00 00  03 d7 ff ff 53 00 00 00   | ...........S...|
0x804b7b4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b7c4:   c5 0c 04 04 20 00 00 00  a8 06 00 00 32 d7 ff ff   |.... .......2...|
0x804b7d4:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b7e4:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b7f4:   5b d7 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |[...8....A....B.|
0x804b804:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b814:   73 d7 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |s...2....A....B.|
0x804b824:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b834:   85 d7 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b844:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b854:   79 d7 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |y........A....B.|
0x804b864:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b874:   70 d7 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |p........A....B.|
0x804b884:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b894:   65 d7 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |e........A....B.|
0x804b8a4:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b8b4:   5b d7 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |[...'....A....B.|
0x804b8c4:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b8d4:   62 d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |b...%....A....B.|
0x804b8e4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b8f4:   67 d7 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |g...?....A....B.|
0x804b904:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b914:   86 d7 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b924:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b934:   9f d7 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b944:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b954:   ab d7 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804b964:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b974:   b1 d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b984:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b994:   d3 d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b9a4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b9b4:   f5 d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b9c4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b9d4:   17 d8 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804b9e4:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b9f4:   6c d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |l...]....A....B.|
0x804ba04:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804ba14:   a9 d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804ba24:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804ba34:   e6 d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804ba44:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804ba54:   23 d9 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |#........A....B.|
0x804ba64:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804ba74:   93 d9 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804ba84:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804ba94:   d7 d9 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804baa4:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bab4:   27 da ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |'...G....A....B.|
0x804bac4:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bad4:   b0 09 00 00 4a da ff ff  55 00 00 00 00 41 0e 08   |....J...U....A..|
0x804bae4:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804baf4:   d0 09 00 00 7f da ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804bb04:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bb14:   20 00 00 00 f4 09 00 00  a2 da ff ff 68 00 00 00   | ...........h...|
0x804bb24:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bb34:   0c 04 04 00 2c 00 00 00  18 0a 00 00 e6 da ff ff   |....,...........|
0x804bb44:   ab 02 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804bb54:   86 04 83 05 03 9b 02 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bb64:   04 00 00 00 2c 00 00 00  48 0a 00 00 61 dd ff ff   |....,...H...a...|
0x804bb74:   c4 0e 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804bb84:   86 04 83 05 03 b4 0e c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bb94:   04 00 00 00 34 00 00 00  78 0a 00 00 f5 eb ff ff   |....4...x.......|
0x804bba4:   b8 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804bbb4:   0f 03 75 78 06 10 03 02  75 7c 03 a3 04 c1 0c 01   |..ux....u|......|
0x804bbc4:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bbd4:   b0 0a 00 00 75 f0 ff ff  04 00 00 00 00 00 00 00   |....u...........|
0x804bbe4:   10 00 00 00 c4 0a 00 00  65 f0 ff ff 04 00 00 00   |........e.......|
0x804bbf4:   00 00 00 00 48 00 00 00  d8 0a 00 00 60 f0 ff ff   |....H.......`...|
0x804bc04:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bc14:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bc24:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bc34:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bc44:   10 00 00 00 24 0b 00 00  74 f0 ff ff 02 00 00 00   |....$...t.......|
0x804bc54:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 c4 ac 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff 39 00 ed 90   |............9...|
0x804d028:   f2 c4 bf 58 02 00 00 00  ff ff ff ff f6 ff ff ff   |...X............|
0x804d038:   ff ff ff ff 3d b2 65 2a  16 31 85 5f 2a 2d 39 97   |....=.e*.1._*-9.|
0x804d048:   22 59 00 00 4d 72 33 86  f7 00 00 00 fd ff ff ff   |"Y..Mr3.........|
0x804d058:   8d 00 74 e8 f7 55 0e f8  09 00 00 00 e2 e5 2b d2   |..t..U........+.|
0x804d068:   fa ff 07 00 ff ff 01 00  01 00 00 00 38 00 00 00   |............8...|
0x804d078:   ff ff ff ff 86 a2 42 74  7c 9e 5e 66 07 33 cf ??   |......Bt|.^f.3.?|
