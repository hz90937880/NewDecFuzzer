;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:19:51
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 20 d4 ff ff               	lea eax, [ebx - 0x2be0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 c0 d3 ff ff               	lea eax, [ebx - 0x2c40]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 fc af 04 08               	mov eax, 0x804affc
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 7c e0 04 08                  	mov eax, 0x804e07c
0x80483a5:   3d 7c e0 04 08                  	cmp eax, 0x804e07c
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 7c e0 04 08                  	push 0x804e07c
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 7c e0 04 08                  	mov eax, 0x804e07c
0x80483e5:   2d 7c e0 04 08                  	sub eax, 0x804e07c
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 7c e0 04 08                  	push 0x804e07c
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 e0 04 08 00            	cmp byte ptr [0x804e080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 e0 04 08 01            	mov byte ptr [0x804e080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 52 2f 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 3e 2f 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 40 d4 ff ff               	lea edx, [eax - 0x2bc0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 11 2f 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 f3 2e 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 cb 2e 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 a1 2e 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 78 2e 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 35 2e 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 f3 2d 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 9b 2d 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 4a 2d 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 0d 2d 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 d6 2c 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 b7 2c 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 8d 2c 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 61 2c 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 36 2c 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 ed 2b 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 a5 2b 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 4b 2b 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 f8 2a 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 b9 2a 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 83 2a 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 61 2a 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 13 2a 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 d7 29 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 4e 29 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 1c 29 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 ec 28 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 a7 28 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 68 28 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 36 28 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 07 28 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 e9 27 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 c1 27 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 9c 27 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 77 27 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 40 27 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 0b 27 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 b9 26 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 6e 26 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 37 26 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 06 26 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 e7 25 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 bd 25 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 95 25 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 6c 25 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 30 25 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 f5 24 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 a2 24 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 56 24 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 1e 24 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 ef 23 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 db 23 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 c4 23 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 af 23 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 99 23 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 72 23 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 4d 23 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 0e 23 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 d5 22 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 a9 22 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 83 22 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 30 d5 ff ff               	fld dword ptr [eax - 0x2ad0]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 30 d5 ff ff               	fld dword ptr [eax - 0x2ad0]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 34 d5 ff ff               	fld dword ptr [eax - 0x2acc]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 41 22 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 30 d5 ff ff               	fld dword ptr [eax - 0x2ad0]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 30 d5 ff ff               	fld dword ptr [eax - 0x2ad0]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 34 d5 ff ff               	fld dword ptr [eax - 0x2acc]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 ff 21 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 38 d5 ff ff               	fld dword ptr [eax - 0x2ac8]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 3c d5 ff ff               	fld dword ptr [eax - 0x2ac4]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 40 d5 ff ff               	fld dword ptr [eax - 0x2ac0]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 bd 21 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 44 d5 ff ff               	fld dword ptr [eax - 0x2abc]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 48 d5 ff ff               	fld dword ptr [eax - 0x2ab8]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 4c d5 ff ff               	fld dword ptr [eax - 0x2ab4]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 45 21 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 50 d5 ff ff               	fld qword ptr [eax - 0x2ab0]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 50 d5 ff ff               	fld qword ptr [eax - 0x2ab0]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 58 d5 ff ff               	fld qword ptr [eax - 0x2aa8]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 e8 20 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 50 d5 ff ff               	fld qword ptr [eax - 0x2ab0]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 50 d5 ff ff               	fld qword ptr [eax - 0x2ab0]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 58 d5 ff ff               	fld qword ptr [eax - 0x2aa8]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 8b 20 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 60 d5 ff ff               	fld qword ptr [eax - 0x2aa0]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 68 d5 ff ff               	fld qword ptr [eax - 0x2a98]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 70 d5 ff ff               	fld qword ptr [eax - 0x2a90]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 2e 20 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 78 d5 ff ff               	fld qword ptr [eax - 0x2a88]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 80 d5 ff ff               	fld qword ptr [eax - 0x2a80]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 88 d5 ff ff               	fld qword ptr [eax - 0x2a78]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 9e 1f 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 90 d5 ff ff               	fld dword ptr [eax - 0x2a70]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 94 d5 ff ff               	fld dword ptr [eax - 0x2a6c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 3a 1f 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 c9 1e 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 86 1e 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 50 d4 ff ff               	lea eax, [ebx - 0x2bb0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 74 d4 ff ff               	lea eax, [ebx - 0x2b8c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80497e3
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 54                        	sub esp, 0x54
0x804962f:   e8 80 1d 00 00                  	call 0x804b3b4 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 49 00 00               	add edx, 0x49cc
0x804963a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804963d:   8b 4d 18                        	mov ecx, dword ptr [ebp + 0x18]
0x8049640:   8b 5d 1c                        	mov ebx, dword ptr [ebp + 0x1c]
0x8049643:   8b 75 28                        	mov esi, dword ptr [ebp + 0x28]
0x8049646:   8b 7d 2c                        	mov edi, dword ptr [ebp + 0x2c]
0x8049649:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x804964c:   8b 7d 30                        	mov edi, dword ptr [ebp + 0x30]
0x804964f:   89 7d b8                        	mov dword ptr [ebp - 0x48], edi
0x8049652:   8b 7d 34                        	mov edi, dword ptr [ebp + 0x34]
0x8049655:   89 7d b4                        	mov dword ptr [ebp - 0x4c], edi
0x8049658:   8b 7d 3c                        	mov edi, dword ptr [ebp + 0x3c]
0x804965b:   89 7d b0                        	mov dword ptr [ebp - 0x50], edi
0x804965e:   8b 7d 4c                        	mov edi, dword ptr [ebp + 0x4c]
0x8049661:   89 7d ac                        	mov dword ptr [ebp - 0x54], edi
0x8049664:   8b 7d 54                        	mov edi, dword ptr [ebp + 0x54]
0x8049667:   89 7d a8                        	mov dword ptr [ebp - 0x58], edi
0x804966a:   8b 7d 58                        	mov edi, dword ptr [ebp + 0x58]
0x804966d:   89 7d a4                        	mov dword ptr [ebp - 0x5c], edi
0x8049670:   8b 7d 60                        	mov edi, dword ptr [ebp + 0x60]
0x8049673:   89 7d a0                        	mov dword ptr [ebp - 0x60], edi
0x8049676:   8b 7d 6c                        	mov edi, dword ptr [ebp + 0x6c]
0x8049679:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x804967c:   89 c8                           	mov eax, ecx
0x804967e:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x8049681:   89 d8                           	mov eax, ebx
0x8049683:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x8049687:   89 f0                           	mov eax, esi
0x8049689:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x804968d:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x8049691:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x8049695:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x8049699:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x804969d:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x80496a1:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x80496a4:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x80496a8:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496ab:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x80496af:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496b2:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496b6:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496ba:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x80496be:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496c1:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496c5:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496c9:   89 f8                           	mov eax, edi
0x80496cb:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x80496cf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80496d2:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x80496d8:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x80496dc:   88 82 28 00 00 00               	mov byte ptr [edx + 0x28], al
0x80496e2:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x80496e5:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x80496eb:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x80496ee:   89 82 a4 04 00 00               	mov dword ptr [edx + 0x4a4], eax
0x80496f4:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x80496f8:   88 82 30 00 00 00               	mov byte ptr [edx + 0x30], al
0x80496fe:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049702:   66 89 82 32 00 00 00            	mov word ptr [edx + 0x32], ax
0x8049709:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x804970c:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x8049712:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x8049715:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x804971b:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804971f:   66 89 82 3c 00 00 00            	mov word ptr [edx + 0x3c], ax
0x8049726:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x804972a:   66 89 82 3e 00 00 00            	mov word ptr [edx + 0x3e], ax
0x8049731:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049735:   66 89 82 40 00 00 00            	mov word ptr [edx + 0x40], ax
0x804973c:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x8049740:   88 82 42 00 00 00               	mov byte ptr [edx + 0x42], al
0x8049746:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049749:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x804974f:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x8049753:   88 82 48 00 00 00               	mov byte ptr [edx + 0x48], al
0x8049759:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x804975c:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x8049762:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049765:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x804976b:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x804976e:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x8049774:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x8049778:   88 82 58 00 00 00               	mov byte ptr [edx + 0x58], al
0x804977e:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049781:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x8049787:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x804978b:   66 89 82 60 00 00 00            	mov word ptr [edx + 0x60], ax
0x8049792:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x8049796:   88 82 62 00 00 00               	mov byte ptr [edx + 0x62], al
0x804979c:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x804979f:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x80497a5:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80497a9:   66 89 82 68 00 00 00            	mov word ptr [edx + 0x68], ax
0x80497b0:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x80497b3:   89 82 6c 00 00 00               	mov dword ptr [edx + 0x6c], eax
0x80497b9:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x80497bc:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x80497c2:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x80497c6:   66 89 82 74 00 00 00            	mov word ptr [edx + 0x74], ax
0x80497cd:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x80497d0:   89 82 78 00 00 00               	mov dword ptr [edx + 0x78], eax
0x80497d6:   b8 00 00 00 00                  	mov eax, 0
0x80497db:   83 c4 54                        	add esp, 0x54
0x80497de:   5b                              	pop ebx
0x80497df:   5e                              	pop esi
0x80497e0:   5f                              	pop edi
0x80497e1:   5d                              	pop ebp
0x80497e2:   c3                              	ret 
; function: func_1 at 0x80497e3 -- 0x804affc
0x80497e3:   55                              	push ebp
0x80497e4:   89 e5                           	mov ebp, esp
0x80497e6:   57                              	push edi
0x80497e7:   56                              	push esi
0x80497e8:   53                              	push ebx
0x80497e9:   81 ec 9c 01 00 00               	sub esp, 0x19c
0x80497ef:   e8 bc 1b 00 00                  	call 0x804b3b0 <__x86.get_pc_thunk.ax>
0x80497f4:   05 0c 48 00 00                  	add eax, 0x480c
0x80497f9:   c7 85 78 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x88], 1
0x8049803:   c6 45 f3 f6                     	mov byte ptr [ebp - 0xd], 0xf6
0x8049807:   c7 85 74 ff ff ff e3 86 99 0f   	mov dword ptr [ebp - 0x8c], 0xf9986e3
0x8049811:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x8049818:   c6 45 eb 26                     	mov byte ptr [ebp - 0x15], 0x26
0x804981c:   66 c7 45 e8 97 e3               	mov word ptr [ebp - 0x18], 0xe397
0x8049822:   c7 45 cc 01 00 00 00            	mov dword ptr [ebp - 0x34], 1
0x8049829:   c7 85 70 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x90], 1
0x8049833:   66 c7 45 e6 01 00               	mov word ptr [ebp - 0x1a], 1
0x8049839:   66 c7 85 6e ff ff ff 09 00      	mov word ptr [ebp - 0x92], 9
0x8049842:   66 c7 45 e4 67 ea               	mov word ptr [ebp - 0x1c], 0xea67
0x8049848:   c6 85 6d ff ff ff 60            	mov byte ptr [ebp - 0x93], 0x60
0x804984f:   c7 45 e0 01 00 00 00            	mov dword ptr [ebp - 0x20], 1
0x8049856:   c6 85 6c ff ff ff 93            	mov byte ptr [ebp - 0x94], 0x93
0x804985d:   c7 45 dc fc ff ff ff            	mov dword ptr [ebp - 0x24], 0xfffffffc
0x8049864:   c7 45 d8 73 6d dc bd            	mov dword ptr [ebp - 0x28], 0xbddc6d73
0x804986b:   c7 45 d4 3a 5d b9 d5            	mov dword ptr [ebp - 0x2c], 0xd5b95d3a
0x8049872:   c6 45 d3 ff                     	mov byte ptr [ebp - 0x2d], 0xff
0x8049876:   c7 85 68 ff ff ff 41 63 0f de   	mov dword ptr [ebp - 0x98], 0xde0f6341
0x8049880:   66 c7 45 ca e6 68               	mov word ptr [ebp - 0x36], 0x68e6
0x8049886:   c6 45 c9 a4                     	mov byte ptr [ebp - 0x37], 0xa4
0x804988a:   c7 45 c4 ee 78 ec 5d            	mov dword ptr [ebp - 0x3c], 0x5dec78ee
0x8049891:   66 c7 45 c2 f6 ff               	mov word ptr [ebp - 0x3e], 0xfff6
0x8049897:   c7 45 bc 24 eb 8b f0            	mov dword ptr [ebp - 0x44], 0xf08beb24
0x804989e:   c7 45 b8 fe ff ff ff            	mov dword ptr [ebp - 0x48], 0xfffffffe
0x80498a5:   66 c7 85 66 ff ff ff 01 00      	mov word ptr [ebp - 0x9a], 1
0x80498ae:   c7 85 60 ff ff ff 03 00 00 00   	mov dword ptr [ebp - 0xa0], 3
0x80498b8:   c7 45 b4 01 00 00 00            	mov dword ptr [ebp - 0x4c], 1
0x80498bf:   c7 45 b0 dd 06 22 c4            	mov dword ptr [ebp - 0x50], 0xc42206dd
0x80498c6:   c7 45 ac 01 00 00 00            	mov dword ptr [ebp - 0x54], 1
0x80498cd:   66 c7 45 aa 14 22               	mov word ptr [ebp - 0x56], 0x2214
0x80498d3:   c7 85 5c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa4], 0
0x80498dd:   c6 85 5b ff ff ff 69            	mov byte ptr [ebp - 0xa5], 0x69
0x80498e4:   c6 85 5a ff ff ff 05            	mov byte ptr [ebp - 0xa6], 5
0x80498eb:   c7 85 54 ff ff ff 48 d7 c0 ca   	mov dword ptr [ebp - 0xac], 0xcac0d748
0x80498f5:   c7 85 50 ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0xb0], 0xfffffffa
0x80498ff:   66 c7 45 a8 9f 0d               	mov word ptr [ebp - 0x58], 0xd9f
0x8049905:   c7 45 a4 44 aa a0 8d            	mov dword ptr [ebp - 0x5c], 0x8da0aa44
0x804990c:   66 c7 85 4e ff ff ff 01 00      	mov word ptr [ebp - 0xb2], 1
0x8049915:   c7 85 48 ff ff ff ff c9 cb 4a   	mov dword ptr [ebp - 0xb8], 0x4acbc9ff
0x804991f:   c7 85 44 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xbc], 0xffffffff
0x8049929:   c7 85 40 ff ff ff 6b 0b 8f 96   	mov dword ptr [ebp - 0xc0], 0x968f0b6b
0x8049933:   c7 85 3c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xc4], 0
0x804993d:   c7 85 38 ff ff ff d0 48 4b 5b   	mov dword ptr [ebp - 0xc8], 0x5b4b48d0
0x8049947:   c7 85 34 ff ff ff 61 92 9a 95   	mov dword ptr [ebp - 0xcc], 0x959a9261
0x8049951:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x8049957:   39 45 b4                        	cmp dword ptr [ebp - 0x4c], eax
0x804995a:   0f 94 c0                        	sete al
0x804995d:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x8049960:   81 bd 74 ff ff ff 01 1e 3e 75   	cmp dword ptr [ebp - 0x8c], 0x753e1e01
0x804996a:   74 07                           	je 0x8049973 <func_1+0x190>
0x804996c:   ba 01 00 00 00                  	mov edx, 1
0x8049971:   eb 05                           	jmp 0x8049978 <func_1+0x195>
0x8049973:   ba 00 00 00 00                  	mov edx, 0
0x8049978:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804997e:   0f be c0                        	movsx eax, al
0x8049981:   89 c1                           	mov ecx, eax
0x8049983:   d3 fa                           	sar edx, cl
0x8049985:   89 d0                           	mov eax, edx
0x8049987:   0c e0                           	or al, 0xe0
0x8049989:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804998c:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804998f:   0f bf d0                        	movsx edx, ax
0x8049992:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x8049998:   98                              	cwde 
0x8049999:   01 d0                           	add eax, edx
0x804999b:   83 f8 01                        	cmp eax, 1
0x804999e:   0f 9f c0                        	setg al
0x80499a1:   0f b6 c0                        	movzx eax, al
0x80499a4:   31 45 ec                        	xor dword ptr [ebp - 0x14], eax
0x80499a7:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x80499aa:   3b 85 74 ff ff ff               	cmp eax, dword ptr [ebp - 0x8c]
0x80499b0:   0f 92 c0                        	setb al
0x80499b3:   0f b6 c0                        	movzx eax, al
0x80499b6:   20 45 eb                        	and byte ptr [ebp - 0x15], al
0x80499b9:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x80499bd:   0f be c0                        	movsx eax, al
0x80499c0:   31 45 ac                        	xor dword ptr [ebp - 0x54], eax
0x80499c3:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x80499c6:   39 85 74 ff ff ff               	cmp dword ptr [ebp - 0x8c], eax
0x80499cc:   0f 87 e3 00 00 00               	ja 0x8049ab5 <func_1+0x2d2>
0x80499d2:   0f bf 85 66 ff ff ff            	movsx eax, word ptr [ebp - 0x9a]
0x80499d9:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x80499dd:   0f b6 4d c9                     	movzx ecx, byte ptr [ebp - 0x37]
0x80499e1:   0f b7 5d ca                     	movzx ebx, word ptr [ebp - 0x36]
0x80499e5:   0f be 7d d3                     	movsx edi, byte ptr [ebp - 0x2d]
0x80499e9:   0f be b5 6c ff ff ff            	movsx esi, byte ptr [ebp - 0x94]
0x80499f0:   89 b5 70 fe ff ff               	mov dword ptr [ebp - 0x190], esi
0x80499f6:   0f be b5 6d ff ff ff            	movsx esi, byte ptr [ebp - 0x93]
0x80499fd:   89 b5 6c fe ff ff               	mov dword ptr [ebp - 0x194], esi
0x8049a03:   0f b7 75 e4                     	movzx esi, word ptr [ebp - 0x1c]
0x8049a07:   89 b5 68 fe ff ff               	mov dword ptr [ebp - 0x198], esi
0x8049a0d:   0f bf b5 6e ff ff ff            	movsx esi, word ptr [ebp - 0x92]
0x8049a14:   89 b5 64 fe ff ff               	mov dword ptr [ebp - 0x19c], esi
0x8049a1a:   0f b7 75 e6                     	movzx esi, word ptr [ebp - 0x1a]
0x8049a1e:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x8049a24:   0f bf 75 e8                     	movsx esi, word ptr [ebp - 0x18]
0x8049a28:   89 b5 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], esi
0x8049a2e:   0f be 75 eb                     	movsx esi, byte ptr [ebp - 0x15]
0x8049a32:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x8049a38:   0f be 75 f3                     	movsx esi, byte ptr [ebp - 0xd]
0x8049a3c:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x8049a42:   50                              	push eax
0x8049a43:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049a46:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049a49:   52                              	push edx
0x8049a4a:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049a4d:   51                              	push ecx
0x8049a4e:   53                              	push ebx
0x8049a4f:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x8049a55:   57                              	push edi
0x8049a56:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049a59:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049a5c:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049a5f:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x8049a65:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049a68:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x8049a6e:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x8049a74:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x8049a7a:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x8049a80:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049a86:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049a89:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x8049a8f:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x8049a95:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049a98:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049a9e:   56                              	push esi
0x8049a9f:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049aa5:   e8 7c fb ff ff                  	call 0x8049626 <set_var>
0x8049aaa:   83 c4 6c                        	add esp, 0x6c
0x8049aad:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049ab0:   e9 3f 15 00 00                  	jmp 0x804aff4 <func_1+0x1811>
0x8049ab5:   66 c7 85 32 ff ff ff ff ff      	mov word ptr [ebp - 0xce], 0xffff
0x8049abe:   c7 45 a0 ed ab 60 e3            	mov dword ptr [ebp - 0x60], 0xe360abed
0x8049ac5:   c7 45 9c ba 2b 4e 58            	mov dword ptr [ebp - 0x64], 0x584e2bba
0x8049acc:   c7 45 98 ff ff ff ff            	mov dword ptr [ebp - 0x68], 0xffffffff
0x8049ad3:   c7 85 2c ff ff ff 03 00 00 00   	mov dword ptr [ebp - 0xd4], 3
0x8049add:   c7 45 94 ef f5 8b 8c            	mov dword ptr [ebp - 0x6c], 0x8c8bf5ef
0x8049ae4:   c7 85 28 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd8], 0
0x8049aee:   c7 85 24 ff ff ff f7 ff ff ff   	mov dword ptr [ebp - 0xdc], 0xfffffff7
0x8049af8:   c6 45 93 06                     	mov byte ptr [ebp - 0x6d], 6
0x8049afc:   c6 85 23 ff ff ff b7            	mov byte ptr [ebp - 0xdd], 0xb7
0x8049b03:   c7 85 1c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xe4], 1
0x8049b0d:   0f b7 95 32 ff ff ff            	movzx edx, word ptr [ebp - 0xce]
0x8049b14:   0f bf 45 aa                     	movsx eax, word ptr [ebp - 0x56]
0x8049b18:   39 c2                           	cmp edx, eax
0x8049b1a:   66 83 bd 32 ff ff ff 00         	cmp word ptr [ebp - 0xce], 0
0x8049b22:   74 0e                           	je 0x8049b32 <func_1+0x34f>
0x8049b24:   66 83 7d aa 00                  	cmp word ptr [ebp - 0x56], 0
0x8049b29:   74 07                           	je 0x8049b32 <func_1+0x34f>
0x8049b2b:   ba 01 00 00 00                  	mov edx, 1
0x8049b30:   eb 05                           	jmp 0x8049b37 <func_1+0x354>
0x8049b32:   ba 00 00 00 00                  	mov edx, 0
0x8049b37:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x8049b3b:   39 c2                           	cmp edx, eax
0x8049b3d:   0f 9d c0                        	setge al
0x8049b40:   0f b6 c0                        	movzx eax, al
0x8049b43:   31 45 a0                        	xor dword ptr [ebp - 0x60], eax
0x8049b46:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x8049b4a:   ba 1b 21 cf 23                  	mov edx, 0x23cf211b
0x8049b4f:   f7 e2                           	mul edx
0x8049b51:   89 d3                           	mov ebx, edx
0x8049b53:   c1 eb 1b                        	shr ebx, 0x1b
0x8049b56:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049b59:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x8049b5d:   0f bf 4d e8                     	movsx ecx, word ptr [ebp - 0x18]
0x8049b61:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049b65:   8d 50 ff                        	lea edx, [eax - 1]
0x8049b68:   66 89 55 e6                     	mov word ptr [ebp - 0x1a], dx
0x8049b6c:   0f b6 d0                        	movzx edx, al
0x8049b6f:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x8049b75:   89 c6                           	mov esi, eax
0x8049b77:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049b7a:   21 f0                           	and eax, esi
0x8049b7c:   0f b6 c0                        	movzx eax, al
0x8049b7f:   0f af c2                        	imul eax, edx
0x8049b82:   89 85 2c ff ff ff               	mov dword ptr [ebp - 0xd4], eax
0x8049b88:   83 bd 2c ff ff ff 00            	cmp dword ptr [ebp - 0xd4], 0
0x8049b8f:   74 0d                           	je 0x8049b9e <func_1+0x3bb>
0x8049b91:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x8049b95:   74 07                           	je 0x8049b9e <func_1+0x3bb>
0x8049b97:   b8 01 00 00 00                  	mov eax, 1
0x8049b9c:   eb 05                           	jmp 0x8049ba3 <func_1+0x3c0>
0x8049b9e:   b8 00 00 00 00                  	mov eax, 0
0x8049ba3:   39 c8                           	cmp eax, ecx
0x8049ba5:   c6 45 f3 07                     	mov byte ptr [ebp - 0xd], 7
0x8049ba9:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049bad:   c0 f8 02                        	sar al, 2
0x8049bb0:   0f be c0                        	movsx eax, al
0x8049bb3:   39 c3                           	cmp ebx, eax
0x8049bb5:   0f 85 02 01 00 00               	jne 0x8049cbd <func_1+0x4da>
0x8049bbb:   66 c7 85 bc fe ff ff ec 13      	mov word ptr [ebp - 0x144], 0x13ec
0x8049bc4:   c7 85 b8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x148], 0xffffffff
0x8049bce:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x8049bd2:   0f b6 d0                        	movzx edx, al
0x8049bd5:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049bd8:   0f b6 c0                        	movzx eax, al
0x8049bdb:   29 c2                           	sub edx, eax
0x8049bdd:   89 d0                           	mov eax, edx
0x8049bdf:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049be2:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x8049be6:   74 10                           	je 0x8049bf8 <func_1+0x415>
0x8049be8:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049bec:   83 e8 01                        	sub eax, 1
0x8049bef:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x8049bf3:   e9 5d 0b 00 00                  	jmp 0x804a755 <func_1+0xf72>
0x8049bf8:   c6 85 b7 fe ff ff e1            	mov byte ptr [ebp - 0x149], 0xe1
0x8049bff:   c6 85 b6 fe ff ff b0            	mov byte ptr [ebp - 0x14a], 0xb0
0x8049c06:   66 c7 85 b4 fe ff ff 01 00      	mov word ptr [ebp - 0x14c], 1
0x8049c0f:   0f bf 85 bc fe ff ff            	movsx eax, word ptr [ebp - 0x144]
0x8049c16:   39 45 b0                        	cmp dword ptr [ebp - 0x50], eax
0x8049c19:   0f 94 c0                        	sete al
0x8049c1c:   0f b6 c0                        	movzx eax, al
0x8049c1f:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049c22:   b8 00 00 00 00                  	mov eax, 0
0x8049c27:   31 85 b8 fe ff ff               	xor dword ptr [ebp - 0x148], eax
0x8049c2d:   0f be 85 5b ff ff ff            	movsx eax, byte ptr [ebp - 0xa5]
0x8049c34:   39 85 b8 fe ff ff               	cmp dword ptr [ebp - 0x148], eax
0x8049c3a:   0f 94 c0                        	sete al
0x8049c3d:   0f b6 c0                        	movzx eax, al
0x8049c40:   f7 d8                           	neg eax
0x8049c42:   89 c2                           	mov edx, eax
0x8049c44:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049c48:   39 c2                           	cmp edx, eax
0x8049c4a:   0f 93 c0                        	setae al
0x8049c4d:   0f b6 d0                        	movzx edx, al
0x8049c50:   0f bf 85 b4 fe ff ff            	movsx eax, word ptr [ebp - 0x14c]
0x8049c57:   39 c2                           	cmp edx, eax
0x8049c59:   0f 9f c0                        	setg al
0x8049c5c:   89 c2                           	mov edx, eax
0x8049c5e:   0f b7 85 32 ff ff ff            	movzx eax, word ptr [ebp - 0xce]
0x8049c65:   31 d0                           	xor eax, edx
0x8049c67:   0a 85 6d ff ff ff               	or al, byte ptr [ebp - 0x93]
0x8049c6d:   3c da                           	cmp al, 0xda
0x8049c6f:   0f 93 c0                        	setae al
0x8049c72:   0f b6 c0                        	movzx eax, al
0x8049c75:   c1 e0 03                        	shl eax, 3
0x8049c78:   31 45 a0                        	xor dword ptr [ebp - 0x60], eax
0x8049c7b:   66 83 bd 6e ff ff ff 00         	cmp word ptr [ebp - 0x92], 0
0x8049c83:   75 06                           	jne 0x8049c8b <func_1+0x4a8>
0x8049c85:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x8049c89:   7f 07                           	jg 0x8049c92 <func_1+0x4af>
0x8049c8b:   b8 01 00 00 00                  	mov eax, 1
0x8049c90:   eb 05                           	jmp 0x8049c97 <func_1+0x4b4>
0x8049c92:   b8 00 00 00 00                  	mov eax, 0
0x8049c97:   3b 85 70 ff ff ff               	cmp eax, dword ptr [ebp - 0x90]
0x8049c9d:   0f 9c c0                        	setl al
0x8049ca0:   0f b6 c0                        	movzx eax, al
0x8049ca3:   66 31 45 e8                     	xor word ptr [ebp - 0x18], ax
0x8049ca7:   0f bf 45 e8                     	movsx eax, word ptr [ebp - 0x18]
0x8049cab:   c1 e0 0e                        	shl eax, 0xe
0x8049cae:   99                              	cdq 
0x8049caf:   f7 7d a0                        	idiv dword ptr [ebp - 0x60]
0x8049cb2:   89 95 b8 fe ff ff               	mov dword ptr [ebp - 0x148], edx
0x8049cb8:   e9 98 0a 00 00                  	jmp 0x804a755 <func_1+0xf72>
0x8049cbd:   66 c7 45 90 f3 a0               	mov word ptr [ebp - 0x70], 0xa0f3
0x8049cc3:   c7 45 8c 4d db b6 78            	mov dword ptr [ebp - 0x74], 0x78b6db4d
0x8049cca:   c7 85 18 ff ff ff fd ff ff ff   	mov dword ptr [ebp - 0xe8], 0xfffffffd
0x8049cd4:   66 c7 85 16 ff ff ff f6 ff      	mov word ptr [ebp - 0xea], 0xfff6
0x8049cdd:   c6 85 15 ff ff ff f6            	mov byte ptr [ebp - 0xeb], 0xf6
0x8049ce4:   c7 45 b4 e4 ff ff ff            	mov dword ptr [ebp - 0x4c], 0xffffffe4
0x8049ceb:   e9 3c 05 00 00                  	jmp 0x804a22c <func_1+0xa49>
0x8049cf0:   c7 85 10 ff ff ff 3a d2 5b f5   	mov dword ptr [ebp - 0xf0], 0xf55bd23a
0x8049cfa:   c7 85 0c ff ff ff f8 ff ff ff   	mov dword ptr [ebp - 0xf4], 0xfffffff8
0x8049d04:   c7 85 08 ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0xf8], 0xfffffffb
0x8049d0e:   c7 85 04 ff ff ff 7b 04 f3 ac   	mov dword ptr [ebp - 0xfc], 0xacf3047b
0x8049d18:   c7 85 00 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x100], 0xffffffff
0x8049d22:   c7 85 fc fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x104], 2
0x8049d2c:   c7 85 f8 fe ff ff 03 00 00 00   	mov dword ptr [ebp - 0x108], 3
0x8049d36:   83 6d e0 01                     	sub dword ptr [ebp - 0x20], 1
0x8049d3a:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x8049d41:   83 7d a0 10                     	cmp dword ptr [ebp - 0x60], 0x10
0x8049d45:   0f 8f e4 00 00 00               	jg 0x8049e2f <func_1+0x64c>
0x8049d4b:   0f bf 85 66 ff ff ff            	movsx eax, word ptr [ebp - 0x9a]
0x8049d52:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x8049d56:   0f b6 4d c9                     	movzx ecx, byte ptr [ebp - 0x37]
0x8049d5a:   0f b7 5d ca                     	movzx ebx, word ptr [ebp - 0x36]
0x8049d5e:   0f be 7d d3                     	movsx edi, byte ptr [ebp - 0x2d]
0x8049d62:   0f be b5 6c ff ff ff            	movsx esi, byte ptr [ebp - 0x94]
0x8049d69:   89 b5 70 fe ff ff               	mov dword ptr [ebp - 0x190], esi
0x8049d6f:   0f be b5 6d ff ff ff            	movsx esi, byte ptr [ebp - 0x93]
0x8049d76:   89 b5 6c fe ff ff               	mov dword ptr [ebp - 0x194], esi
0x8049d7c:   0f b7 75 e4                     	movzx esi, word ptr [ebp - 0x1c]
0x8049d80:   89 b5 68 fe ff ff               	mov dword ptr [ebp - 0x198], esi
0x8049d86:   0f bf b5 6e ff ff ff            	movsx esi, word ptr [ebp - 0x92]
0x8049d8d:   89 b5 64 fe ff ff               	mov dword ptr [ebp - 0x19c], esi
0x8049d93:   0f b7 75 e6                     	movzx esi, word ptr [ebp - 0x1a]
0x8049d97:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x8049d9d:   0f bf 75 e8                     	movsx esi, word ptr [ebp - 0x18]
0x8049da1:   89 b5 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], esi
0x8049da7:   0f be 75 eb                     	movsx esi, byte ptr [ebp - 0x15]
0x8049dab:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x8049db1:   0f be 75 f3                     	movsx esi, byte ptr [ebp - 0xd]
0x8049db5:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x8049dbb:   50                              	push eax
0x8049dbc:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049dbf:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049dc2:   52                              	push edx
0x8049dc3:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049dc6:   51                              	push ecx
0x8049dc7:   53                              	push ebx
0x8049dc8:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x8049dce:   57                              	push edi
0x8049dcf:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049dd2:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049dd5:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049dd8:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x8049dde:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049de1:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x8049de7:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x8049ded:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x8049df3:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x8049df9:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049dff:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049e02:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x8049e08:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x8049e0e:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049e11:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049e17:   56                              	push esi
0x8049e18:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049e1e:   e8 03 f8 ff ff                  	call 0x8049626 <set_var>
0x8049e23:   83 c4 6c                        	add esp, 0x6c
0x8049e26:   0f bf 45 90                     	movsx eax, word ptr [ebp - 0x70]
0x8049e2a:   e9 c5 11 00 00                  	jmp 0x804aff4 <func_1+0x1811>
0x8049e2f:   c7 45 b0 2e 00 00 00            	mov dword ptr [ebp - 0x50], 0x2e
0x8049e36:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049e39:   0f be d0                        	movsx edx, al
0x8049e3c:   0f be 85 6c ff ff ff            	movsx eax, byte ptr [ebp - 0x94]
0x8049e43:   29 c2                           	sub edx, eax
0x8049e45:   89 d0                           	mov eax, edx
0x8049e47:   0b 85 18 ff ff ff               	or eax, dword ptr [ebp - 0xe8]
0x8049e4d:   85 c0                           	test eax, eax
0x8049e4f:   0f 84 a9 02 00 00               	je 0x804a0fe <func_1+0x91b>
0x8049e55:   66 c7 85 7a fe ff ff fb ff      	mov word ptr [ebp - 0x186], 0xfffb
0x8049e5e:   c7 85 f4 fe ff ff 0a 1d 49 9e   	mov dword ptr [ebp - 0x10c], 0x9e491d0a
0x8049e68:   66 c7 85 f2 fe ff ff 45 43      	mov word ptr [ebp - 0x10e], 0x4345
0x8049e71:   0f b7 85 6e ff ff ff            	movzx eax, word ptr [ebp - 0x92]
0x8049e78:   66 89 85 7a fe ff ff            	mov word ptr [ebp - 0x186], ax
0x8049e7f:   c7 85 f4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x10c], 0
0x8049e89:   0f b7 85 7a fe ff ff            	movzx eax, word ptr [ebp - 0x186]
0x8049e90:   0f bf d0                        	movsx edx, ax
0x8049e93:   81 bd 0c ff ff ff 24 aa ff ff   	cmp dword ptr [ebp - 0xf4], 0xffffaa24
0x8049e9d:   0f 94 c0                        	sete al
0x8049ea0:   0f b6 c0                        	movzx eax, al
0x8049ea3:   f7 d0                           	not eax
0x8049ea5:   89 c1                           	mov ecx, eax
0x8049ea7:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049eab:   39 c1                           	cmp ecx, eax
0x8049ead:   0f 96 c0                        	setbe al
0x8049eb0:   f7 d0                           	not eax
0x8049eb2:   0f be d8                        	movsx ebx, al
0x8049eb5:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049eb9:   0f be c0                        	movsx eax, al
0x8049ebc:   89 c1                           	mov ecx, eax
0x8049ebe:   d3 e3                           	shl ebx, cl
0x8049ec0:   89 d8                           	mov eax, ebx
0x8049ec2:   39 c2                           	cmp edx, eax
0x8049ec4:   0f 9d c0                        	setge al
0x8049ec7:   0f b6 c0                        	movzx eax, al
0x8049eca:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049ecd:   0f 94 c0                        	sete al
0x8049ed0:   0f b6 c0                        	movzx eax, al
0x8049ed3:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x8049ed9:   0f 9f c0                        	setg al
0x8049edc:   0f b6 c0                        	movzx eax, al
0x8049edf:   89 c2                           	mov edx, eax
0x8049ee1:   b8 00 00 00 00                  	mov eax, 0
0x8049ee6:   29 d0                           	sub eax, edx
0x8049ee8:   c1 e0 02                        	shl eax, 2
0x8049eeb:   0f be c0                        	movsx eax, al
0x8049eee:   c1 e0 07                        	shl eax, 7
0x8049ef1:   89 c2                           	mov edx, eax
0x8049ef3:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x8049ef7:   21 d0                           	and eax, edx
0x8049ef9:   84 c0                           	test al, al
0x8049efb:   74 2e                           	je 0x8049f2b <func_1+0x748>
0x8049efd:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x8049f01:   0f 85 31 03 00 00               	jne 0x804a238 <func_1+0xa55>
0x8049f07:   66 83 7d e4 00                  	cmp word ptr [ebp - 0x1c], 0
0x8049f0c:   0f 85 29 03 00 00               	jne 0x804a23b <func_1+0xa58>
0x8049f12:   83 85 08 ff ff ff 01            	add dword ptr [ebp - 0xf8], 1
0x8049f19:   83 bd 08 ff ff ff 00            	cmp dword ptr [ebp - 0xf8], 0
0x8049f20:   0f 84 f1 00 00 00               	je 0x804a017 <func_1+0x834>
0x8049f26:   e9 15 03 00 00                  	jmp 0x804a240 <func_1+0xa5d>
0x8049f2b:   66 c7 85 f0 fe ff ff fa ff      	mov word ptr [ebp - 0x110], 0xfffa
0x8049f34:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049f38:   0f b6 d0                        	movzx edx, al
0x8049f3b:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049f3e:   0f b6 c0                        	movzx eax, al
0x8049f41:   0f af c2                        	imul eax, edx
0x8049f44:   21 45 cc                        	and dword ptr [ebp - 0x34], eax
0x8049f47:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049f4a:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049f4d:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049f50:   66 c1 f8 04                     	sar ax, 4
0x8049f54:   98                              	cwde 
0x8049f55:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049f58:   81 bd 50 ff ff ff ca 22 c1 48   	cmp dword ptr [ebp - 0xb0], 0x48c122ca
0x8049f62:   0f 9f c0                        	setg al
0x8049f65:   0f b6 d0                        	movzx edx, al
0x8049f68:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x8049f6e:   0f be c0                        	movsx eax, al
0x8049f71:   29 c2                           	sub edx, eax
0x8049f73:   89 d0                           	mov eax, edx
0x8049f75:   89 c2                           	mov edx, eax
0x8049f77:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x8049f7d:   35 9b 82 dc 90                  	xor eax, 0x90dc829b
0x8049f82:   21 c2                           	and edx, eax
0x8049f84:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x8049f8a:   09 d0                           	or eax, edx
0x8049f8c:   89 85 04 ff ff ff               	mov dword ptr [ebp - 0xfc], eax
0x8049f92:   83 bd 74 ff ff ff 00            	cmp dword ptr [ebp - 0x8c], 0
0x8049f99:   75 09                           	jne 0x8049fa4 <func_1+0x7c1>
0x8049f9b:   83 bd 78 ff ff ff 00            	cmp dword ptr [ebp - 0x88], 0
0x8049fa2:   74 07                           	je 0x8049fab <func_1+0x7c8>
0x8049fa4:   b8 01 00 00 00                  	mov eax, 1
0x8049fa9:   eb 05                           	jmp 0x8049fb0 <func_1+0x7cd>
0x8049fab:   b8 00 00 00 00                  	mov eax, 0
0x8049fb0:   3b 45 cc                        	cmp eax, dword ptr [ebp - 0x34]
0x8049fb3:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049fb6:   0f b6 c0                        	movzx eax, al
0x8049fb9:   c1 e0 02                        	shl eax, 2
0x8049fbc:   89 c2                           	mov edx, eax
0x8049fbe:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049fc1:   21 c2                           	and edx, eax
0x8049fc3:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x8049fc9:   31 c2                           	xor edx, eax
0x8049fcb:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049fce:   21 c2                           	and edx, eax
0x8049fd0:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x8049fd4:   21 d0                           	and eax, edx
0x8049fd6:   0f b6 d0                        	movzx edx, al
0x8049fd9:   89 d0                           	mov eax, edx
0x8049fdb:   c1 e0 03                        	shl eax, 3
0x8049fde:   29 d0                           	sub eax, edx
0x8049fe0:   c1 e0 03                        	shl eax, 3
0x8049fe3:   01 d0                           	add eax, edx
0x8049fe5:   66 c1 e8 08                     	shr ax, 8
0x8049fe9:   d0 e8                           	shr al, 1
0x8049feb:   0f b6 c0                        	movzx eax, al
0x8049fee:   25 06 0f fd 4f                  	and eax, 0x4ffd0f06
0x8049ff3:   83 f8 31                        	cmp eax, 0x31
0x8049ff6:   0f 9e c0                        	setle al
0x8049ff9:   0f b6 c0                        	movzx eax, al
0x8049ffc:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x804a002:   0f 9c c0                        	setl al
0x804a005:   0f b6 d0                        	movzx edx, al
0x804a008:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x804a00c:   39 c2                           	cmp edx, eax
0x804a00e:   0f 9e c0                        	setle al
0x804a011:   0f b6 c0                        	movzx eax, al
0x804a014:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a017:   0f bf 85 66 ff ff ff            	movsx eax, word ptr [ebp - 0x9a]
0x804a01e:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x804a022:   0f b6 4d c9                     	movzx ecx, byte ptr [ebp - 0x37]
0x804a026:   0f b7 5d ca                     	movzx ebx, word ptr [ebp - 0x36]
0x804a02a:   0f be 7d d3                     	movsx edi, byte ptr [ebp - 0x2d]
0x804a02e:   0f be b5 6c ff ff ff            	movsx esi, byte ptr [ebp - 0x94]
0x804a035:   89 b5 70 fe ff ff               	mov dword ptr [ebp - 0x190], esi
0x804a03b:   0f be b5 6d ff ff ff            	movsx esi, byte ptr [ebp - 0x93]
0x804a042:   89 b5 6c fe ff ff               	mov dword ptr [ebp - 0x194], esi
0x804a048:   0f b7 75 e4                     	movzx esi, word ptr [ebp - 0x1c]
0x804a04c:   89 b5 68 fe ff ff               	mov dword ptr [ebp - 0x198], esi
0x804a052:   0f bf b5 6e ff ff ff            	movsx esi, word ptr [ebp - 0x92]
0x804a059:   89 b5 64 fe ff ff               	mov dword ptr [ebp - 0x19c], esi
0x804a05f:   0f b7 75 e6                     	movzx esi, word ptr [ebp - 0x1a]
0x804a063:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x804a069:   0f bf 75 e8                     	movsx esi, word ptr [ebp - 0x18]
0x804a06d:   89 b5 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], esi
0x804a073:   0f be 75 eb                     	movsx esi, byte ptr [ebp - 0x15]
0x804a077:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804a07d:   0f be 75 f3                     	movsx esi, byte ptr [ebp - 0xd]
0x804a081:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a087:   50                              	push eax
0x804a088:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a08b:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a08e:   52                              	push edx
0x804a08f:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a092:   51                              	push ecx
0x804a093:   53                              	push ebx
0x804a094:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a09a:   57                              	push edi
0x804a09b:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a09e:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a0a1:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a0a4:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a0aa:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a0ad:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a0b3:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a0b9:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804a0bf:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a0c5:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a0cb:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a0ce:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a0d4:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a0da:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a0dd:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a0e3:   56                              	push esi
0x804a0e4:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a0ea:   e8 37 f5 ff ff                  	call 0x8049626 <set_var>
0x804a0ef:   83 c4 6c                        	add esp, 0x6c
0x804a0f2:   0f be 85 6d ff ff ff            	movsx eax, byte ptr [ebp - 0x93]
0x804a0f9:   e9 f6 0e 00 00                  	jmp 0x804aff4 <func_1+0x1811>
0x804a0fe:   c7 85 00 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x100], 0
0x804a108:   83 bd 00 ff ff ff f6            	cmp dword ptr [ebp - 0x100], -0xa
0x804a10f:   0f 85 e3 00 00 00               	jne 0x804a1f8 <func_1+0xa15>
0x804a115:   0f bf 85 66 ff ff ff            	movsx eax, word ptr [ebp - 0x9a]
0x804a11c:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x804a120:   0f b6 4d c9                     	movzx ecx, byte ptr [ebp - 0x37]
0x804a124:   0f b7 5d ca                     	movzx ebx, word ptr [ebp - 0x36]
0x804a128:   0f be 7d d3                     	movsx edi, byte ptr [ebp - 0x2d]
0x804a12c:   0f be b5 6c ff ff ff            	movsx esi, byte ptr [ebp - 0x94]
0x804a133:   89 b5 70 fe ff ff               	mov dword ptr [ebp - 0x190], esi
0x804a139:   0f be b5 6d ff ff ff            	movsx esi, byte ptr [ebp - 0x93]
0x804a140:   89 b5 6c fe ff ff               	mov dword ptr [ebp - 0x194], esi
0x804a146:   0f b7 75 e4                     	movzx esi, word ptr [ebp - 0x1c]
0x804a14a:   89 b5 68 fe ff ff               	mov dword ptr [ebp - 0x198], esi
0x804a150:   0f bf b5 6e ff ff ff            	movsx esi, word ptr [ebp - 0x92]
0x804a157:   89 b5 64 fe ff ff               	mov dword ptr [ebp - 0x19c], esi
0x804a15d:   0f b7 75 e6                     	movzx esi, word ptr [ebp - 0x1a]
0x804a161:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x804a167:   0f bf 75 e8                     	movsx esi, word ptr [ebp - 0x18]
0x804a16b:   89 b5 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], esi
0x804a171:   0f be 75 eb                     	movsx esi, byte ptr [ebp - 0x15]
0x804a175:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804a17b:   0f be 75 f3                     	movsx esi, byte ptr [ebp - 0xd]
0x804a17f:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a185:   50                              	push eax
0x804a186:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a189:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a18c:   52                              	push edx
0x804a18d:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a190:   51                              	push ecx
0x804a191:   53                              	push ebx
0x804a192:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a198:   57                              	push edi
0x804a199:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a19c:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a19f:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a1a2:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a1a8:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a1ab:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a1b1:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a1b7:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804a1bd:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a1c3:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a1c9:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a1cc:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a1d2:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a1d8:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a1db:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a1e1:   56                              	push esi
0x804a1e2:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a1e8:   e8 39 f4 ff ff                  	call 0x8049626 <set_var>
0x804a1ed:   83 c4 6c                        	add esp, 0x6c
0x804a1f0:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a1f3:   e9 fc 0d 00 00                  	jmp 0x804aff4 <func_1+0x1811>
0x804a1f8:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a1fb:   89 c2                           	mov edx, eax
0x804a1fd:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a203:   89 c1                           	mov ecx, eax
0x804a205:   89 d0                           	mov eax, edx
0x804a207:   ba 00 00 00 00                  	mov edx, 0
0x804a20c:   66 f7 f1                        	div cx
0x804a20f:   89 d0                           	mov eax, edx
0x804a211:   0f b7 c0                        	movzx eax, ax
0x804a214:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a217:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a21a:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a21d:   b8 01 00 00 00                  	mov eax, 1
0x804a222:   09 85 f8 fe ff ff               	or dword ptr [ebp - 0x108], eax
0x804a228:   83 45 b4 08                     	add dword ptr [ebp - 0x4c], 8
0x804a22c:   83 7d b4 2c                     	cmp dword ptr [ebp - 0x4c], 0x2c
0x804a230:   0f 87 ba fa ff ff               	ja 0x8049cf0 <func_1+0x50d>
0x804a236:   eb 04                           	jmp 0x804a23c <func_1+0xa59>
0x804a238:   90                              	nop 
0x804a239:   eb 01                           	jmp 0x804a23c <func_1+0xa59>
0x804a23b:   90                              	nop 
0x804a23c:   83 45 d4 01                     	add dword ptr [ebp - 0x2c], 1
0x804a240:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a243:   83 c0 02                        	add eax, 2
0x804a246:   83 e0 08                        	and eax, 8
0x804a249:   83 c8 03                        	or eax, 3
0x804a24c:   0f be c0                        	movsx eax, al
0x804a24f:   8b 95 2c ff ff ff               	mov edx, dword ptr [ebp - 0xd4]
0x804a255:   0f be fa                        	movsx edi, dl
0x804a258:   99                              	cdq 
0x804a259:   f7 ff                           	idiv edi
0x804a25b:   09 45 ec                        	or dword ptr [ebp - 0x14], eax
0x804a25e:   83 bd 18 ff ff ff 03            	cmp dword ptr [ebp - 0xe8], 3
0x804a265:   0f 95 c0                        	setne al
0x804a268:   0f b6 c0                        	movzx eax, al
0x804a26b:   39 85 18 ff ff ff               	cmp dword ptr [ebp - 0xe8], eax
0x804a271:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a275:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a278:   c7 45 8c 01 00 00 00            	mov dword ptr [ebp - 0x74], 1
0x804a27f:   c7 85 ec fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x114], 1
0x804a289:   66 c7 85 ea fe ff ff bd b1      	mov word ptr [ebp - 0x116], 0xb1bd
0x804a292:   c7 85 e4 fe ff ff fc ff ff ff   	mov dword ptr [ebp - 0x11c], 0xfffffffc
0x804a29c:   c7 45 88 44 27 b5 52            	mov dword ptr [ebp - 0x78], 0x52b52744
0x804a2a3:   c6 85 e3 fe ff ff 00            	mov byte ptr [ebp - 0x11d], 0
0x804a2aa:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a2b0:   ba 2b 00 00 00                  	mov edx, 0x2b
0x804a2b5:   0f af c2                        	imul eax, edx
0x804a2b8:   0f b6 c0                        	movzx eax, al
0x804a2bb:   ba 30 00 00 00                  	mov edx, 0x30
0x804a2c0:   89 c1                           	mov ecx, eax
0x804a2c2:   d3 fa                           	sar edx, cl
0x804a2c4:   89 d0                           	mov eax, edx
0x804a2c6:   0f bf d0                        	movsx edx, ax
0x804a2c9:   89 d0                           	mov eax, edx
0x804a2cb:   c1 e0 02                        	shl eax, 2
0x804a2ce:   01 c2                           	add edx, eax
0x804a2d0:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a2d4:   39 c2                           	cmp edx, eax
0x804a2d6:   0f 9d c0                        	setge al
0x804a2d9:   0f b6 d0                        	movzx edx, al
0x804a2dc:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a2e0:   39 c2                           	cmp edx, eax
0x804a2e2:   0f 95 c0                        	setne al
0x804a2e5:   0f b6 c0                        	movzx eax, al
0x804a2e8:   8b 95 78 ff ff ff               	mov edx, dword ptr [ebp - 0x88]
0x804a2ee:   29 c2                           	sub edx, eax
0x804a2f0:   89 d0                           	mov eax, edx
0x804a2f2:   39 85 74 ff ff ff               	cmp dword ptr [ebp - 0x8c], eax
0x804a2f8:   0f 92 c0                        	setb al
0x804a2fb:   0f b6 c0                        	movzx eax, al
0x804a2fe:   89 85 18 ff ff ff               	mov dword ptr [ebp - 0xe8], eax
0x804a304:   80 4d d3 50                     	or byte ptr [ebp - 0x2d], 0x50
0x804a308:   0f be 85 5a ff ff ff            	movsx eax, byte ptr [ebp - 0xa6]
0x804a30f:   33 85 74 ff ff ff               	xor eax, dword ptr [ebp - 0x8c]
0x804a315:   89 c2                           	mov edx, eax
0x804a317:   0f bf 45 90                     	movsx eax, word ptr [ebp - 0x70]
0x804a31b:   39 c2                           	cmp edx, eax
0x804a31d:   0f 87 b2 01 00 00               	ja 0x804a4d5 <func_1+0xcf2>
0x804a323:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a327:   0f 84 a8 01 00 00               	je 0x804a4d5 <func_1+0xcf2>
0x804a32d:   c7 85 dc fe ff ff fe ff ff ff   	mov dword ptr [ebp - 0x124], 0xfffffffe
0x804a337:   c7 85 d8 fe ff ff 5c a5 b4 e0   	mov dword ptr [ebp - 0x128], 0xe0b4a55c
0x804a341:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x804a347:   83 f0 f7                        	xor eax, 0xfffffff7
0x804a34a:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a34d:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x804a351:   74 07                           	je 0x804a35a <func_1+0xb77>
0x804a353:   b8 01 00 00 00                  	mov eax, 1
0x804a358:   eb 05                           	jmp 0x804a35f <func_1+0xb7c>
0x804a35a:   b8 00 00 00 00                  	mov eax, 0
0x804a35f:   0b 85 dc fe ff ff               	or eax, dword ptr [ebp - 0x124]
0x804a365:   89 c2                           	mov edx, eax
0x804a367:   0f be 85 5a ff ff ff            	movsx eax, byte ptr [ebp - 0xa6]
0x804a36e:   39 c2                           	cmp edx, eax
0x804a370:   0f 97 c0                        	seta al
0x804a373:   0f b6 d0                        	movzx edx, al
0x804a376:   8b 85 dc fe ff ff               	mov eax, dword ptr [ebp - 0x124]
0x804a37c:   01 d0                           	add eax, edx
0x804a37e:   33 85 dc fe ff ff               	xor eax, dword ptr [ebp - 0x124]
0x804a384:   89 c2                           	mov edx, eax
0x804a386:   0f b7 85 32 ff ff ff            	movzx eax, word ptr [ebp - 0xce]
0x804a38d:   01 c2                           	add edx, eax
0x804a38f:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a393:   39 c2                           	cmp edx, eax
0x804a395:   b8 86 e6 68 4a                  	mov eax, 0x4a68e686
0x804a39a:   09 85 18 ff ff ff               	or dword ptr [ebp - 0xe8], eax
0x804a3a0:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x804a3a6:   89 c3                           	mov ebx, eax
0x804a3a8:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a3ab:   31 45 b0                        	xor dword ptr [ebp - 0x50], eax
0x804a3ae:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a3b1:   89 c6                           	mov esi, eax
0x804a3b3:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a3b9:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a3bc:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a3bf:   0f b6 c8                        	movzx ecx, al
0x804a3c2:   83 bd 2c ff ff ff 00            	cmp dword ptr [ebp - 0xd4], 0
0x804a3c9:   0f 94 c0                        	sete al
0x804a3cc:   0f b6 c0                        	movzx eax, al
0x804a3cf:   39 85 18 ff ff ff               	cmp dword ptr [ebp - 0xe8], eax
0x804a3d5:   0f 94 c0                        	sete al
0x804a3d8:   0f b6 c0                        	movzx eax, al
0x804a3db:   8b 7d 94                        	mov edi, dword ptr [ebp - 0x6c]
0x804a3de:   ba 00 00 00 00                  	mov edx, 0
0x804a3e3:   f7 f7                           	div edi
0x804a3e5:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a3e8:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a3eb:   98                              	cwde 
0x804a3ec:   89 c2                           	mov edx, eax
0x804a3ee:   c1 e0 02                        	shl eax, 2
0x804a3f1:   29 c2                           	sub edx, eax
0x804a3f3:   89 d0                           	mov eax, edx
0x804a3f5:   f7 d0                           	not eax
0x804a3f7:   39 45 cc                        	cmp dword ptr [ebp - 0x34], eax
0x804a3fa:   0f 9e c0                        	setle al
0x804a3fd:   f7 d8                           	neg eax
0x804a3ff:   0f b6 c0                        	movzx eax, al
0x804a402:   29 c1                           	sub ecx, eax
0x804a404:   89 ca                           	mov edx, ecx
0x804a406:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a409:   01 d0                           	add eax, edx
0x804a40b:   85 c0                           	test eax, eax
0x804a40d:   0f 94 c0                        	sete al
0x804a410:   0f b6 c0                        	movzx eax, al
0x804a413:   8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x804a416:   29 d0                           	sub eax, edx
0x804a418:   0f bf d0                        	movsx edx, ax
0x804a41b:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a421:   98                              	cwde 
0x804a422:   89 c1                           	mov ecx, eax
0x804a424:   d3 fa                           	sar edx, cl
0x804a426:   89 d0                           	mov eax, edx
0x804a428:   21 f0                           	and eax, esi
0x804a42a:   29 c3                           	sub ebx, eax
0x804a42c:   89 d8                           	mov eax, ebx
0x804a42e:   0f b6 d0                        	movzx edx, al
0x804a431:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x804a437:   0f b6 c0                        	movzx eax, al
0x804a43a:   29 c2                           	sub edx, eax
0x804a43c:   89 d0                           	mov eax, edx
0x804a43e:   3d fa 00 00 00                  	cmp eax, 0xfa
0x804a443:   0f 9e c0                        	setle al
0x804a446:   0f b6 c0                        	movzx eax, al
0x804a449:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a44c:   83 7d 98 ff                     	cmp dword ptr [ebp - 0x68], -1
0x804a450:   0f 94 c0                        	sete al
0x804a453:   0f b6 c0                        	movzx eax, al
0x804a456:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a459:   80 bd 6c ff ff ff 00            	cmp byte ptr [ebp - 0x94], 0
0x804a460:   78 10                           	js 0x804a472 <func_1+0xc8f>
0x804a462:   83 bd dc fe ff ff 00            	cmp dword ptr [ebp - 0x124], 0
0x804a469:   74 07                           	je 0x804a472 <func_1+0xc8f>
0x804a46b:   b8 01 00 00 00                  	mov eax, 1
0x804a470:   eb 05                           	jmp 0x804a477 <func_1+0xc94>
0x804a472:   b8 00 00 00 00                  	mov eax, 0
0x804a477:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x804a47d:   81 7d 8c 2f e1 31 3a            	cmp dword ptr [ebp - 0x74], 0x3a31e12f
0x804a484:   0f 94 c0                        	sete al
0x804a487:   0f b6 c0                        	movzx eax, al
0x804a48a:   89 c2                           	mov edx, eax
0x804a48c:   0f b6 45 93                     	movzx eax, byte ptr [ebp - 0x6d]
0x804a490:   0f b6 c0                        	movzx eax, al
0x804a493:   f6 f2                           	div dl
0x804a495:   0f b6 c0                        	movzx eax, al
0x804a498:   21 85 18 ff ff ff               	and dword ptr [ebp - 0xe8], eax
0x804a49e:   66 c7 85 ea fe ff ff cc 5d      	mov word ptr [ebp - 0x116], 0x5dcc
0x804a4a7:   0f be 45 d3                     	movsx eax, byte ptr [ebp - 0x2d]
0x804a4ab:   33 85 dc fe ff ff               	xor eax, dword ptr [ebp - 0x124]
0x804a4b1:   89 c2                           	mov edx, eax
0x804a4b3:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x804a4b7:   31 d0                           	xor eax, edx
0x804a4b9:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x804a4bd:   66 83 7d e8 00                  	cmp word ptr [ebp - 0x18], 0
0x804a4c2:   74 05                           	je 0x804a4c9 <func_1+0xce6>
0x804a4c4:   66 83 7d e4 00                  	cmp word ptr [ebp - 0x1c], 0
0x804a4c9:   c7 45 d8 01 00 00 00            	mov dword ptr [ebp - 0x28], 1
0x804a4d0:   e9 36 01 00 00                  	jmp 0x804a60b <func_1+0xe28>
0x804a4d5:   66 c7 85 d6 fe ff ff 00 00      	mov word ptr [ebp - 0x12a], 0
0x804a4de:   c7 85 d0 fe ff ff 1e 72 a4 f5   	mov dword ptr [ebp - 0x130], 0xf5a4721e
0x804a4e8:   c7 85 cc fe ff ff 6a 10 03 08   	mov dword ptr [ebp - 0x134], 0x803106a
0x804a4f2:   c6 45 d3 fd                     	mov byte ptr [ebp - 0x2d], 0xfd
0x804a4f6:   eb 27                           	jmp 0x804a51f <func_1+0xd3c>
0x804a4f8:   0f b6 85 23 ff ff ff            	movzx eax, byte ptr [ebp - 0xdd]
0x804a4ff:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a502:   83 bd 70 ff ff ff 00            	cmp dword ptr [ebp - 0x90], 0
0x804a509:   75 09                           	jne 0x804a514 <func_1+0xd31>
0x804a50b:   66 83 7d 90 00                  	cmp word ptr [ebp - 0x70], 0
0x804a510:   75 15                           	jne 0x804a527 <func_1+0xd44>
0x804a512:   eb 01                           	jmp 0x804a515 <func_1+0xd32>
0x804a514:   90                              	nop 
0x804a515:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x804a519:   83 c0 01                        	add eax, 1
0x804a51c:   88 45 d3                        	mov byte ptr [ebp - 0x2d], al
0x804a51f:   80 7d d3 05                     	cmp byte ptr [ebp - 0x2d], 5
0x804a523:   74 d3                           	je 0x804a4f8 <func_1+0xd15>
0x804a525:   eb 01                           	jmp 0x804a528 <func_1+0xd45>
0x804a527:   90                              	nop 
0x804a528:   66 c7 45 e4 f3 ff               	mov word ptr [ebp - 0x1c], 0xfff3
0x804a52e:   e9 9b 00 00 00                  	jmp 0x804a5ce <func_1+0xdeb>
0x804a533:   66 c7 85 c8 fe ff ff f7 ff      	mov word ptr [ebp - 0x138], 0xfff7
0x804a53c:   c7 85 c4 fe ff ff dc 92 48 bd   	mov dword ptr [ebp - 0x13c], 0xbd4892dc
0x804a546:   c7 45 d8 35 05 25 6f            	mov dword ptr [ebp - 0x28], 0x6f250535
0x804a54d:   0f bf 95 d6 fe ff ff            	movsx edx, word ptr [ebp - 0x12a]
0x804a554:   0f b6 45 93                     	movzx eax, byte ptr [ebp - 0x6d]
0x804a558:   39 c2                           	cmp edx, eax
0x804a55a:   0f 9c c0                        	setl al
0x804a55d:   0f b6 d0                        	movzx edx, al
0x804a560:   0f bf 85 c8 fe ff ff            	movsx eax, word ptr [ebp - 0x138]
0x804a567:   39 c2                           	cmp edx, eax
0x804a569:   0f 9f c0                        	setg al
0x804a56c:   89 c2                           	mov edx, eax
0x804a56e:   0f b6 85 6c ff ff ff            	movzx eax, byte ptr [ebp - 0x94]
0x804a575:   01 d0                           	add eax, edx
0x804a577:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x804a57a:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a57e:   0f be c0                        	movsx eax, al
0x804a581:   09 45 98                        	or dword ptr [ebp - 0x68], eax
0x804a584:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a587:   88 45 d3                        	mov byte ptr [ebp - 0x2d], al
0x804a58a:   83 7d d8 01                     	cmp dword ptr [ebp - 0x28], 1
0x804a58e:   0f 94 c0                        	sete al
0x804a591:   0f b6 d0                        	movzx edx, al
0x804a594:   0f b7 85 c8 fe ff ff            	movzx eax, word ptr [ebp - 0x138]
0x804a59b:   0f b6 c0                        	movzx eax, al
0x804a59e:   0f af c2                        	imul eax, edx
0x804a5a1:   85 c0                           	test eax, eax
0x804a5a3:   0f 9f c0                        	setg al
0x804a5a6:   0f b6 c0                        	movzx eax, al
0x804a5a9:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x804a5af:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a5b3:   83 f0 01                        	xor eax, 1
0x804a5b6:   0f be c0                        	movsx eax, al
0x804a5b9:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a5bc:   0f bf 85 d6 fe ff ff            	movsx eax, word ptr [ebp - 0x12a]
0x804a5c3:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x804a5c9:   66 83 45 e4 08                  	add word ptr [ebp - 0x1c], 8
0x804a5ce:   66 83 7d e4 31                  	cmp word ptr [ebp - 0x1c], 0x31
0x804a5d3:   0f 86 5a ff ff ff               	jbe 0x804a533 <func_1+0xd50>
0x804a5d9:   c6 45 93 1c                     	mov byte ptr [ebp - 0x6d], 0x1c
0x804a5dd:   eb 22                           	jmp 0x804a601 <func_1+0xe1e>
0x804a5df:   66 c7 85 ca fe ff ff f8 ff      	mov word ptr [ebp - 0x136], 0xfff8
0x804a5e8:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a5ec:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a5f2:   66 83 6d ca 01                  	sub word ptr [ebp - 0x36], 1
0x804a5f7:   0f b6 45 93                     	movzx eax, byte ptr [ebp - 0x6d]
0x804a5fb:   83 c0 01                        	add eax, 1
0x804a5fe:   88 45 93                        	mov byte ptr [ebp - 0x6d], al
0x804a601:   80 7d 93 38                     	cmp byte ptr [ebp - 0x6d], 0x38
0x804a605:   76 d8                           	jbe 0x804a5df <func_1+0xdfc>
0x804a607:   80 6d c9 01                     	sub byte ptr [ebp - 0x37], 1
0x804a60b:   66 c7 45 90 00 00               	mov word ptr [ebp - 0x70], 0
0x804a611:   e9 24 01 00 00                  	jmp 0x804a73a <func_1+0xf57>
0x804a616:   c7 85 c0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x140], 0
0x804a620:   83 45 c4 01                     	add dword ptr [ebp - 0x3c], 1
0x804a624:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a627:   3b 45 ac                        	cmp eax, dword ptr [ebp - 0x54]
0x804a62a:   7f 6f                           	jg 0x804a69b <func_1+0xeb8>
0x804a62c:   80 bd 6d ff ff ff 00            	cmp byte ptr [ebp - 0x93], 0
0x804a633:   0f 85 0e 01 00 00               	jne 0x804a747 <func_1+0xf64>
0x804a639:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x804a63d:   0f 85 eb 00 00 00               	jne 0x804a72e <func_1+0xf4b>
0x804a643:   c7 45 ac 03 00 00 00            	mov dword ptr [ebp - 0x54], 3
0x804a64a:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a64d:   89 85 18 ff ff ff               	mov dword ptr [ebp - 0xe8], eax
0x804a653:   66 0f be 85 6c ff ff ff         	movsx ax, byte ptr [ebp - 0x94]
0x804a65b:   83 bd 70 ff ff ff 00            	cmp dword ptr [ebp - 0x90], 0
0x804a662:   0f 9e c2                        	setle dl
0x804a665:   0f b6 d2                        	movzx edx, dl
0x804a668:   8b 8d 68 ff ff ff               	mov ecx, dword ptr [ebp - 0x98]
0x804a66e:   21 ca                           	and edx, ecx
0x804a670:   01 d0                           	add eax, edx
0x804a672:   0f bf d0                        	movsx edx, ax
0x804a675:   8b 85 c0 fe ff ff               	mov eax, dword ptr [ebp - 0x140]
0x804a67b:   98                              	cwde 
0x804a67c:   89 c1                           	mov ecx, eax
0x804a67e:   d3 fa                           	sar edx, cl
0x804a680:   89 d0                           	mov eax, edx
0x804a682:   3d 0b be 00 00                  	cmp eax, 0xbe0b
0x804a687:   0f 9f c0                        	setg al
0x804a68a:   0f b6 c0                        	movzx eax, al
0x804a68d:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a690:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a693:   21 45 88                        	and dword ptr [ebp - 0x78], eax
0x804a696:   e9 8d 00 00 00                  	jmp 0x804a728 <func_1+0xf45>
0x804a69b:   c6 85 bf fe ff ff 00            	mov byte ptr [ebp - 0x141], 0
0x804a6a2:   0f be 55 d3                     	movsx edx, byte ptr [ebp - 0x2d]
0x804a6a6:   83 bd c0 fe ff ff 00            	cmp dword ptr [ebp - 0x140], 0
0x804a6ad:   0f 95 c0                        	setne al
0x804a6b0:   0f b6 c8                        	movzx ecx, al
0x804a6b3:   0f bf 45 e8                     	movsx eax, word ptr [ebp - 0x18]
0x804a6b7:   39 c1                           	cmp ecx, eax
0x804a6b9:   0f 94 c0                        	sete al
0x804a6bc:   0f b6 c0                        	movzx eax, al
0x804a6bf:   39 c2                           	cmp edx, eax
0x804a6c1:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a6c4:   88 45 c9                        	mov byte ptr [ebp - 0x37], al
0x804a6c7:   0f b6 45 c9                     	movzx eax, byte ptr [ebp - 0x37]
0x804a6cb:   83 c8 88                        	or eax, 0xffffff88
0x804a6ce:   3c a8                           	cmp al, 0xa8
0x804a6d0:   0f 94 c0                        	sete al
0x804a6d3:   0f b6 c0                        	movzx eax, al
0x804a6d6:   39 85 ec fe ff ff               	cmp dword ptr [ebp - 0x114], eax
0x804a6dc:   0f 9d c0                        	setge al
0x804a6df:   0f b6 c0                        	movzx eax, al
0x804a6e2:   8b 95 ec fe ff ff               	mov edx, dword ptr [ebp - 0x114]
0x804a6e8:   0f bf ca                        	movsx ecx, dx
0x804a6eb:   99                              	cdq 
0x804a6ec:   f7 f9                           	idiv ecx
0x804a6ee:   89 d0                           	mov eax, edx
0x804a6f0:   35 aa e0 c1 b9                  	xor eax, 0xb9c1e0aa
0x804a6f5:   89 c2                           	mov edx, eax
0x804a6f7:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x804a6fb:   39 c2                           	cmp edx, eax
0x804a6fd:   80 7d c9 00                     	cmp byte ptr [ebp - 0x37], 0
0x804a701:   74 07                           	je 0x804a70a <func_1+0xf27>
0x804a703:   b8 01 00 00 00                  	mov eax, 1
0x804a708:   eb 05                           	jmp 0x804a70f <func_1+0xf2c>
0x804a70a:   b8 00 00 00 00                  	mov eax, 0
0x804a70f:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a712:   83 bd 28 ff ff ff 00            	cmp dword ptr [ebp - 0xd8], 0
0x804a719:   75 2f                           	jne 0x804a74a <func_1+0xf67>
0x804a71b:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804a71f:   0f b7 c0                        	movzx eax, ax
0x804a722:   c1 e0 0f                        	shl eax, 0xf
0x804a725:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a728:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x804a72c:   eb 01                           	jmp 0x804a72f <func_1+0xf4c>
0x804a72e:   90                              	nop 
0x804a72f:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x804a733:   83 c0 09                        	add eax, 9
0x804a736:   66 89 45 90                     	mov word ptr [ebp - 0x70], ax
0x804a73a:   66 83 7d 90 1b                  	cmp word ptr [ebp - 0x70], 0x1b
0x804a73f:   0f 8e d1 fe ff ff               	jle 0x804a616 <func_1+0xe33>
0x804a745:   eb 04                           	jmp 0x804a74b <func_1+0xf68>
0x804a747:   90                              	nop 
0x804a748:   eb 01                           	jmp 0x804a74b <func_1+0xf68>
0x804a74a:   90                              	nop 
0x804a74b:   0f b6 85 e3 fe ff ff            	movzx eax, byte ptr [ebp - 0x11d]
0x804a752:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a755:   c7 45 ac 01 00 00 00            	mov dword ptr [ebp - 0x54], 1
0x804a75c:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a75f:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a762:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x804a768:   89 c1                           	mov ecx, eax
0x804a76a:   b8 01 00 00 00                  	mov eax, 1
0x804a76f:   ba 00 00 00 00                  	mov edx, 0
0x804a774:   66 f7 f1                        	div cx
0x804a777:   89 d0                           	mov eax, edx
0x804a779:   98                              	cwde 
0x804a77a:   69 c0 70 ec ff ff               	imul eax, eax, 0xffffec70
0x804a780:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x804a783:   0f 9d c0                        	setge al
0x804a786:   0f b6 d0                        	movzx edx, al
0x804a789:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a78f:   0f b7 c0                        	movzx eax, ax
0x804a792:   89 c1                           	mov ecx, eax
0x804a794:   d3 fa                           	sar edx, cl
0x804a796:   89 d0                           	mov eax, edx
0x804a798:   66 98                           	cbw 
0x804a79a:   6b d0 97                        	imul edx, eax, -0x69
0x804a79d:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x804a7a1:   01 d0                           	add eax, edx
0x804a7a3:   83 c0 01                        	add eax, 1
0x804a7a6:   89 c2                           	mov edx, eax
0x804a7a8:   0f b6 85 23 ff ff ff            	movzx eax, byte ptr [ebp - 0xdd]
0x804a7af:   09 d0                           	or eax, edx
0x804a7b1:   0f bf d0                        	movsx edx, ax
0x804a7b4:   0f bf 45 aa                     	movsx eax, word ptr [ebp - 0x56]
0x804a7b8:   89 c1                           	mov ecx, eax
0x804a7ba:   d3 fa                           	sar edx, cl
0x804a7bc:   89 d0                           	mov eax, edx
0x804a7be:   85 c0                           	test eax, eax
0x804a7c0:   0f 84 fe 01 00 00               	je 0x804a9c4 <func_1+0x11e1>
0x804a7c6:   c6 85 7f fe ff ff ff            	mov byte ptr [ebp - 0x181], 0xff
0x804a7cd:   c7 45 84 6e 4d 65 f6            	mov dword ptr [ebp - 0x7c], 0xf6654d6e
0x804a7d4:   0f be 55 d3                     	movsx edx, byte ptr [ebp - 0x2d]
0x804a7d8:   66 83 7d e8 00                  	cmp word ptr [ebp - 0x18], 0
0x804a7dd:   75 06                           	jne 0x804a7e5 <func_1+0x1002>
0x804a7df:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a7e3:   74 07                           	je 0x804a7ec <func_1+0x1009>
0x804a7e5:   b8 01 00 00 00                  	mov eax, 1
0x804a7ea:   eb 05                           	jmp 0x804a7f1 <func_1+0x100e>
0x804a7ec:   b8 00 00 00 00                  	mov eax, 0
0x804a7f1:   08 45 eb                        	or byte ptr [ebp - 0x15], al
0x804a7f4:   83 bd 28 ff ff ff 00            	cmp dword ptr [ebp - 0xd8], 0
0x804a7fb:   74 07                           	je 0x804a804 <func_1+0x1021>
0x804a7fd:   b8 01 00 00 00                  	mov eax, 1
0x804a802:   eb 05                           	jmp 0x804a809 <func_1+0x1026>
0x804a804:   b8 00 00 00 00                  	mov eax, 0
0x804a809:   83 f8 66                        	cmp eax, 0x66
0x804a80c:   0f 9f c0                        	setg al
0x804a80f:   0f b6 c0                        	movzx eax, al
0x804a812:   39 c2                           	cmp edx, eax
0x804a814:   0f 9d c0                        	setge al
0x804a817:   0f b6 c0                        	movzx eax, al
0x804a81a:   39 85 28 ff ff ff               	cmp dword ptr [ebp - 0xd8], eax
0x804a820:   0f 93 c0                        	setae al
0x804a823:   0f b6 c0                        	movzx eax, al
0x804a826:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a829:   66 c7 45 a8 fb ff               	mov word ptr [ebp - 0x58], 0xfffb
0x804a82f:   e9 80 01 00 00                  	jmp 0x804a9b4 <func_1+0x11d1>
0x804a834:   66 c7 85 7c fe ff ff f8 ff      	mov word ptr [ebp - 0x184], 0xfff8
0x804a83d:   c6 85 23 ff ff ff fe            	mov byte ptr [ebp - 0xdd], 0xfe
0x804a844:   80 bd 23 ff ff ff 18            	cmp byte ptr [ebp - 0xdd], 0x18
0x804a84b:   0f 85 56 01 00 00               	jne 0x804a9a7 <func_1+0x11c4>
0x804a851:   c7 45 d8 00 00 00 00            	mov dword ptr [ebp - 0x28], 0
0x804a858:   eb 55                           	jmp 0x804a8af <func_1+0x10cc>
0x804a85a:   0f bf 85 6e ff ff ff            	movsx eax, word ptr [ebp - 0x92]
0x804a861:   b9 00 00 00 00                  	mov ecx, 0
0x804a866:   99                              	cdq 
0x804a867:   f7 f9                           	idiv ecx
0x804a869:   89 d0                           	mov eax, edx
0x804a86b:   89 c1                           	mov ecx, eax
0x804a86d:   0f b6 d1                        	movzx edx, cl
0x804a870:   89 d0                           	mov eax, edx
0x804a872:   c1 e0 03                        	shl eax, 3
0x804a875:   29 d0                           	sub eax, edx
0x804a877:   c1 e0 04                        	shl eax, 4
0x804a87a:   29 d0                           	sub eax, edx
0x804a87c:   66 c1 e8 08                     	shr ax, 8
0x804a880:   c0 e8 05                        	shr al, 5
0x804a883:   ba 4a 00 00 00                  	mov edx, 0x4a
0x804a888:   0f af c2                        	imul eax, edx
0x804a88b:   29 c1                           	sub ecx, eax
0x804a88d:   89 c8                           	mov eax, ecx
0x804a88f:   0f b6 d0                        	movzx edx, al
0x804a892:   0f b6 85 7f fe ff ff            	movzx eax, byte ptr [ebp - 0x181]
0x804a899:   0f af c2                        	imul eax, edx
0x804a89c:   31 45 cc                        	xor dword ptr [ebp - 0x34], eax
0x804a89f:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a8a2:   09 45 84                        	or dword ptr [ebp - 0x7c], eax
0x804a8a5:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a8a8:   21 45 a4                        	and dword ptr [ebp - 0x5c], eax
0x804a8ab:   83 6d d8 01                     	sub dword ptr [ebp - 0x28], 1
0x804a8af:   83 7d d8 e9                     	cmp dword ptr [ebp - 0x28], -0x17
0x804a8b3:   75 a5                           	jne 0x804a85a <func_1+0x1077>
0x804a8b5:   80 4d eb 58                     	or byte ptr [ebp - 0x15], 0x58
0x804a8b9:   b8 01 00 00 00                  	mov eax, 1
0x804a8be:   31 45 cc                        	xor dword ptr [ebp - 0x34], eax
0x804a8c1:   0f bf 85 66 ff ff ff            	movsx eax, word ptr [ebp - 0x9a]
0x804a8c8:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x804a8cc:   0f b6 4d c9                     	movzx ecx, byte ptr [ebp - 0x37]
0x804a8d0:   0f b7 5d ca                     	movzx ebx, word ptr [ebp - 0x36]
0x804a8d4:   0f be 7d d3                     	movsx edi, byte ptr [ebp - 0x2d]
0x804a8d8:   0f be b5 6c ff ff ff            	movsx esi, byte ptr [ebp - 0x94]
0x804a8df:   89 b5 70 fe ff ff               	mov dword ptr [ebp - 0x190], esi
0x804a8e5:   0f be b5 6d ff ff ff            	movsx esi, byte ptr [ebp - 0x93]
0x804a8ec:   89 b5 6c fe ff ff               	mov dword ptr [ebp - 0x194], esi
0x804a8f2:   0f b7 75 e4                     	movzx esi, word ptr [ebp - 0x1c]
0x804a8f6:   89 b5 68 fe ff ff               	mov dword ptr [ebp - 0x198], esi
0x804a8fc:   0f bf b5 6e ff ff ff            	movsx esi, word ptr [ebp - 0x92]
0x804a903:   89 b5 64 fe ff ff               	mov dword ptr [ebp - 0x19c], esi
0x804a909:   0f b7 75 e6                     	movzx esi, word ptr [ebp - 0x1a]
0x804a90d:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x804a913:   0f bf 75 e8                     	movsx esi, word ptr [ebp - 0x18]
0x804a917:   89 b5 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], esi
0x804a91d:   0f be 75 eb                     	movsx esi, byte ptr [ebp - 0x15]
0x804a921:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804a927:   0f be 75 f3                     	movsx esi, byte ptr [ebp - 0xd]
0x804a92b:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a931:   50                              	push eax
0x804a932:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a935:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a938:   52                              	push edx
0x804a939:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a93c:   51                              	push ecx
0x804a93d:   53                              	push ebx
0x804a93e:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a944:   57                              	push edi
0x804a945:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a948:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a94b:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a94e:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a954:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a957:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a95d:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a963:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804a969:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a96f:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a975:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a978:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a97e:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a984:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a987:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a98d:   56                              	push esi
0x804a98e:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a994:   e8 8d ec ff ff                  	call 0x8049626 <set_var>
0x804a999:   83 c4 6c                        	add esp, 0x6c
0x804a99c:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a9a2:   e9 4d 06 00 00                  	jmp 0x804aff4 <func_1+0x1811>
0x804a9a7:   66 83 bd 7c fe ff ff 00         	cmp word ptr [ebp - 0x184], 0
0x804a9af:   66 83 45 a8 01                  	add word ptr [ebp - 0x58], 1
0x804a9b4:   66 83 7d a8 16                  	cmp word ptr [ebp - 0x58], 0x16
0x804a9b9:   0f 86 75 fe ff ff               	jbe 0x804a834 <func_1+0x1051>
0x804a9bf:   e9 48 05 00 00                  	jmp 0x804af0c <func_1+0x1729>
0x804a9c4:   66 c7 85 b2 fe ff ff b9 40      	mov word ptr [ebp - 0x14e], 0x40b9
0x804a9cd:   c7 85 ac fe ff ff 6c c3 a5 f9   	mov dword ptr [ebp - 0x154], 0xf9a5c36c
0x804a9d7:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a9da:   89 c2                           	mov edx, eax
0x804a9dc:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x804a9e1:   0f b6 c0                        	movzx eax, al
0x804a9e4:   f6 f2                           	div dl
0x804a9e6:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x804a9e9:   0f b7 95 b2 fe ff ff            	movzx edx, word ptr [ebp - 0x14e]
0x804a9f0:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a9f3:   0f b6 c0                        	movzx eax, al
0x804a9f6:   69 c0 b7 00 00 00               	imul eax, eax, 0xb7
0x804a9fc:   39 c2                           	cmp edx, eax
0x804a9fe:   0f 8d 25 04 00 00               	jge 0x804ae29 <func_1+0x1646>
0x804aa04:   66 83 bd b2 fe ff ff 00         	cmp word ptr [ebp - 0x14e], 0
0x804aa0c:   0f 84 17 04 00 00               	je 0x804ae29 <func_1+0x1646>
0x804aa12:   c7 85 a8 fe ff ff 34 ed 81 6c   	mov dword ptr [ebp - 0x158], 0x6c81ed34
0x804aa1c:   c7 85 a4 fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x15c], 4
0x804aa26:   c7 85 a0 fe ff ff d6 57 13 3a   	mov dword ptr [ebp - 0x160], 0x3a1357d6
0x804aa30:   66 83 7d e8 00                  	cmp word ptr [ebp - 0x18], 0
0x804aa35:   74 05                           	je 0x804aa3c <func_1+0x1259>
0x804aa37:   e9 0a f1 ff ff                  	jmp 0x8049b46 <func_1+0x363>
0x804aa3c:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x804aa43:   e9 d5 02 00 00                  	jmp 0x804ad1d <func_1+0x153a>
0x804aa48:   c6 45 83 ff                     	mov byte ptr [ebp - 0x7d], 0xff
0x804aa4c:   c7 85 7c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x84], 1
0x804aa56:   66 83 7d e6 00                  	cmp word ptr [ebp - 0x1a], 0
0x804aa5b:   0f 84 92 00 00 00               	je 0x804aaf3 <func_1+0x1310>
0x804aa61:   c7 85 8c fe ff ff c2 2b 05 74   	mov dword ptr [ebp - 0x174], 0x74052bc2
0x804aa6b:   c7 85 88 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x178], 0
0x804aa75:   c6 45 83 dc                     	mov byte ptr [ebp - 0x7d], 0xdc
0x804aa79:   ba 01 00 00 00                  	mov edx, 1
0x804aa7e:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804aa82:   39 c2                           	cmp edx, eax
0x804aa84:   75 07                           	jne 0x804aa8d <func_1+0x12aa>
0x804aa86:   83 bd a8 fe ff ff 00            	cmp dword ptr [ebp - 0x158], 0
0x804aa8d:   83 bd 1c ff ff ff 00            	cmp dword ptr [ebp - 0xe4], 0
0x804aa94:   75 07                           	jne 0x804aa9d <func_1+0x12ba>
0x804aa96:   83 bd 28 ff ff ff 00            	cmp dword ptr [ebp - 0xd8], 0
0x804aa9d:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804aaa0:   88 45 c9                        	mov byte ptr [ebp - 0x37], al
0x804aaa3:   0f b6 55 c9                     	movzx edx, byte ptr [ebp - 0x37]
0x804aaa7:   8b 85 8c fe ff ff               	mov eax, dword ptr [ebp - 0x174]
0x804aaad:   0f b6 c0                        	movzx eax, al
0x804aab0:   01 d0                           	add eax, edx
0x804aab2:   85 c0                           	test eax, eax
0x804aab4:   75 06                           	jne 0x804aabc <func_1+0x12d9>
0x804aab6:   80 7d 83 00                     	cmp byte ptr [ebp - 0x7d], 0
0x804aaba:   74 07                           	je 0x804aac3 <func_1+0x12e0>
0x804aabc:   b8 01 00 00 00                  	mov eax, 1
0x804aac1:   eb 05                           	jmp 0x804aac8 <func_1+0x12e5>
0x804aac3:   b8 00 00 00 00                  	mov eax, 0
0x804aac8:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804aacb:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804aace:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804aad1:   83 45 bc 01                     	add dword ptr [ebp - 0x44], 1
0x804aad5:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x804aad9:   c0 e8 07                        	shr al, 7
0x804aadc:   0f b6 c0                        	movzx eax, al
0x804aadf:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804aae5:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804aaeb:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804aaee:   e9 c7 00 00 00                  	jmp 0x804abba <func_1+0x13d7>
0x804aaf3:   66 c7 85 96 fe ff ff 5d e5      	mov word ptr [ebp - 0x16a], 0xe55d
0x804aafc:   c7 85 90 fe ff ff 08 00 00 00   	mov dword ptr [ebp - 0x170], 8
0x804ab06:   0f b7 85 b2 fe ff ff            	movzx eax, word ptr [ebp - 0x14e]
0x804ab0d:   88 45 c9                        	mov byte ptr [ebp - 0x37], al
0x804ab10:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804ab13:   3b 85 74 ff ff ff               	cmp eax, dword ptr [ebp - 0x8c]
0x804ab19:   77 07                           	ja 0x804ab22 <func_1+0x133f>
0x804ab1b:   b8 40 00 00 00                  	mov eax, 0x40
0x804ab20:   eb 05                           	jmp 0x804ab27 <func_1+0x1344>
0x804ab22:   b8 00 00 00 00                  	mov eax, 0
0x804ab27:   3b 45 d8                        	cmp eax, dword ptr [ebp - 0x28]
0x804ab2a:   0f 9f c0                        	setg al
0x804ab2d:   0f b6 c0                        	movzx eax, al
0x804ab30:   8b 8d 54 ff ff ff               	mov ecx, dword ptr [ebp - 0xac]
0x804ab36:   ba 00 00 00 00                  	mov edx, 0
0x804ab3b:   f7 f1                           	div ecx
0x804ab3d:   89 d0                           	mov eax, edx
0x804ab3f:   89 85 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], eax
0x804ab45:   b8 00 00 00 00                  	mov eax, 0
0x804ab4a:   66 89 85 96 fe ff ff            	mov word ptr [ebp - 0x16a], ax
0x804ab51:   0f b7 95 96 fe ff ff            	movzx edx, word ptr [ebp - 0x16a]
0x804ab58:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x804ab5c:   39 c2                           	cmp edx, eax
0x804ab5e:   c7 85 90 fe ff ff 3e d3 15 5f   	mov dword ptr [ebp - 0x170], 0x5f15d33e
0x804ab68:   0f be 85 6c ff ff ff            	movsx eax, byte ptr [ebp - 0x94]
0x804ab6f:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804ab72:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804ab75:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804ab78:   0f b7 55 e6                     	movzx edx, word ptr [ebp - 0x1a]
0x804ab7c:   83 bd a4 fe ff ff 00            	cmp dword ptr [ebp - 0x15c], 0
0x804ab83:   0f 95 c0                        	setne al
0x804ab86:   0f b6 c0                        	movzx eax, al
0x804ab89:   09 c2                           	or edx, eax
0x804ab8b:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804ab8f:   39 c2                           	cmp edx, eax
0x804ab91:   0f 9c c0                        	setl al
0x804ab94:   0f b6 c0                        	movzx eax, al
0x804ab97:   39 45 bc                        	cmp dword ptr [ebp - 0x44], eax
0x804ab9a:   76 07                           	jbe 0x804aba3 <func_1+0x13c0>
0x804ab9c:   ba 68 3d 00 00                  	mov edx, 0x3d68
0x804aba1:   eb 05                           	jmp 0x804aba8 <func_1+0x13c5>
0x804aba3:   ba 00 00 00 00                  	mov edx, 0
0x804aba8:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x804abac:   39 c2                           	cmp edx, eax
0x804abae:   0f 95 c0                        	setne al
0x804abb1:   0f b6 c0                        	movzx eax, al
0x804abb4:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804abba:   0f bf 45 e8                     	movsx eax, word ptr [ebp - 0x18]
0x804abbe:   89 85 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], eax
0x804abc4:   66 c7 45 c2 b9 00               	mov word ptr [ebp - 0x3e], 0xb9
0x804abca:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804abcd:   0f b7 c8                        	movzx ecx, ax
0x804abd0:   ba b9 d3 1f b1                  	mov edx, 0xb11fd3b9
0x804abd5:   89 c8                           	mov eax, ecx
0x804abd7:   f7 ea                           	imul edx
0x804abd9:   8d 04 0a                        	lea eax, [edx + ecx]
0x804abdc:   c1 f8 07                        	sar eax, 7
0x804abdf:   89 c2                           	mov edx, eax
0x804abe1:   89 c8                           	mov eax, ecx
0x804abe3:   c1 f8 1f                        	sar eax, 0x1f
0x804abe6:   29 c2                           	sub edx, eax
0x804abe8:   89 d0                           	mov eax, edx
0x804abea:   39 85 54 ff ff ff               	cmp dword ptr [ebp - 0xac], eax
0x804abf0:   0f 9e c0                        	setle al
0x804abf3:   0f b6 d0                        	movzx edx, al
0x804abf6:   8b 85 ac fe ff ff               	mov eax, dword ptr [ebp - 0x154]
0x804abfc:   0f b6 c0                        	movzx eax, al
0x804abff:   89 c1                           	mov ecx, eax
0x804ac01:   d3 fa                           	sar edx, cl
0x804ac03:   89 d0                           	mov eax, edx
0x804ac05:   85 c0                           	test eax, eax
0x804ac07:   74 55                           	je 0x804ac5e <func_1+0x147b>
0x804ac09:   66 c7 85 84 fe ff ff ff ff      	mov word ptr [ebp - 0x17c], 0xffff
0x804ac12:   c7 85 80 fe ff ff c9 4d 16 68   	mov dword ptr [ebp - 0x180], 0x68164dc9
0x804ac1c:   c7 45 d8 f6 ff ff ff            	mov dword ptr [ebp - 0x28], 0xfffffff6
0x804ac23:   66 83 6d ca 01                  	sub word ptr [ebp - 0x36], 1
0x804ac28:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804ac2c:   66 31 45 e6                     	xor word ptr [ebp - 0x1a], ax
0x804ac30:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804ac34:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x804ac38:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804ac3b:   0f b6 d0                        	movzx edx, al
0x804ac3e:   0f be 45 83                     	movsx eax, byte ptr [ebp - 0x7d]
0x804ac42:   39 c2                           	cmp edx, eax
0x804ac44:   0f 9d c0                        	setge al
0x804ac47:   0f b6 c0                        	movzx eax, al
0x804ac4a:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804ac4d:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804ac53:   89 85 80 fe ff ff               	mov dword ptr [ebp - 0x180], eax
0x804ac59:   e9 93 00 00 00                  	jmp 0x804acf1 <func_1+0x150e>
0x804ac5e:   66 c7 85 86 fe ff ff d1 92      	mov word ptr [ebp - 0x17a], 0x92d1
0x804ac67:   0f be 95 6d ff ff ff            	movsx edx, byte ptr [ebp - 0x93]
0x804ac6e:   c7 85 7c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x84], 0
0x804ac78:   0f be 45 83                     	movsx eax, byte ptr [ebp - 0x7d]
0x804ac7c:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804ac7f:   0f 92 c0                        	setb al
0x804ac82:   0f b6 c8                        	movzx ecx, al
0x804ac85:   0f b6 85 23 ff ff ff            	movzx eax, byte ptr [ebp - 0xdd]
0x804ac8c:   21 c1                           	and ecx, eax
0x804ac8e:   0f be 45 83                     	movsx eax, byte ptr [ebp - 0x7d]
0x804ac92:   39 c1                           	cmp ecx, eax
0x804ac94:   b8 01 00 00 00                  	mov eax, 1
0x804ac99:   98                              	cwde 
0x804ac9a:   89 c1                           	mov ecx, eax
0x804ac9c:   d3 e2                           	shl edx, cl
0x804ac9e:   89 d0                           	mov eax, edx
0x804aca0:   8b 8d a4 fe ff ff               	mov ecx, dword ptr [ebp - 0x15c]
0x804aca6:   ba 00 00 00 00                  	mov edx, 0
0x804acab:   f7 f1                           	div ecx
0x804acad:   89 d0                           	mov eax, edx
0x804acaf:   89 85 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], eax
0x804acb5:   0f be 55 f3                     	movsx edx, byte ptr [ebp - 0xd]
0x804acb9:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804acbd:   01 d0                           	add eax, edx
0x804acbf:   85 c0                           	test eax, eax
0x804acc1:   0f 94 c0                        	sete al
0x804acc4:   0f b6 c0                        	movzx eax, al
0x804acc7:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x804acca:   0f 9c c0                        	setl al
0x804accd:   0f b6 c0                        	movzx eax, al
0x804acd0:   0f b7 d0                        	movzx edx, ax
0x804acd3:   0f b7 85 b2 fe ff ff            	movzx eax, word ptr [ebp - 0x14e]
0x804acda:   0f af c2                        	imul eax, edx
0x804acdd:   31 85 7c ff ff ff               	xor dword ptr [ebp - 0x84], eax
0x804ace3:   80 bd 5a ff ff ff 00            	cmp byte ptr [ebp - 0xa6], 0
0x804acea:   74 05                           	je 0x804acf1 <func_1+0x150e>
0x804acec:   e9 3f fd ff ff                  	jmp 0x804aa30 <func_1+0x124d>
0x804acf1:   66 c7 45 e6 00 00               	mov word ptr [ebp - 0x1a], 0
0x804acf7:   eb 19                           	jmp 0x804ad12 <func_1+0x152f>
0x804acf9:   0f bf 85 4e ff ff ff            	movsx eax, word ptr [ebp - 0xb2]
0x804ad00:   89 85 a4 fe ff ff               	mov dword ptr [ebp - 0x15c], eax
0x804ad06:   c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0x804ad0d:   66 83 45 e6 07                  	add word ptr [ebp - 0x1a], 7
0x804ad12:   66 83 7d e6 04                  	cmp word ptr [ebp - 0x1a], 4
0x804ad17:   76 e0                           	jbe 0x804acf9 <func_1+0x1516>
0x804ad19:   83 45 a4 01                     	add dword ptr [ebp - 0x5c], 1
0x804ad1d:   83 7d a4 1e                     	cmp dword ptr [ebp - 0x5c], 0x1e
0x804ad21:   0f 87 21 fd ff ff               	ja 0x804aa48 <func_1+0x1265>
0x804ad27:   66 c7 45 aa f8 ff               	mov word ptr [ebp - 0x56], 0xfff8
0x804ad2d:   e9 e7 00 00 00                  	jmp 0x804ae19 <func_1+0x1636>
0x804ad32:   c6 85 9f fe ff ff 44            	mov byte ptr [ebp - 0x161], 0x44
0x804ad39:   66 c7 85 9c fe ff ff fa ff      	mov word ptr [ebp - 0x164], 0xfffa
0x804ad42:   c7 85 98 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x168], 1
0x804ad4c:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804ad52:   0f b7 c0                        	movzx eax, ax
0x804ad55:   ba 1a 6b 00 00                  	mov edx, 0x6b1a
0x804ad5a:   29 c2                           	sub edx, eax
0x804ad5c:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x804ad60:   39 85 a0 fe ff ff               	cmp dword ptr [ebp - 0x160], eax
0x804ad66:   0f 94 c0                        	sete al
0x804ad69:   0f b6 c0                        	movzx eax, al
0x804ad6c:   39 c2                           	cmp edx, eax
0x804ad6e:   0f 9c c0                        	setl al
0x804ad71:   0f b6 c0                        	movzx eax, al
0x804ad74:   33 45 94                        	xor eax, dword ptr [ebp - 0x6c]
0x804ad77:   3d a2 00 00 00                  	cmp eax, 0xa2
0x804ad7c:   0f 9f c0                        	setg al
0x804ad7f:   88 85 9f fe ff ff               	mov byte ptr [ebp - 0x161], al
0x804ad85:   c7 45 98 01 00 00 00            	mov dword ptr [ebp - 0x68], 1
0x804ad8c:   80 bd 6d ff ff ff 00            	cmp byte ptr [ebp - 0x93], 0
0x804ad93:   74 0a                           	je 0x804ad9f <func_1+0x15bc>
0x804ad95:   66 83 bd 9c fe ff ff 00         	cmp word ptr [ebp - 0x164], 0
0x804ad9d:   74 07                           	je 0x804ada6 <func_1+0x15c3>
0x804ad9f:   ba 01 00 00 00                  	mov edx, 1
0x804ada4:   eb 05                           	jmp 0x804adab <func_1+0x15c8>
0x804ada6:   ba 00 00 00 00                  	mov edx, 0
0x804adab:   0f be 85 5b ff ff ff            	movsx eax, byte ptr [ebp - 0xa5]
0x804adb2:   39 c2                           	cmp edx, eax
0x804adb4:   0f 9d c0                        	setge al
0x804adb7:   0f b6 d0                        	movzx edx, al
0x804adba:   0f b7 85 32 ff ff ff            	movzx eax, word ptr [ebp - 0xce]
0x804adc1:   39 c2                           	cmp edx, eax
0x804adc3:   75 07                           	jne 0x804adcc <func_1+0x15e9>
0x804adc5:   ba 5e 1a 00 00                  	mov edx, 0x1a5e
0x804adca:   eb 05                           	jmp 0x804add1 <func_1+0x15ee>
0x804adcc:   ba bc 34 00 00                  	mov edx, 0x34bc
0x804add1:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x804add5:   39 c2                           	cmp edx, eax
0x804add7:   0f 9c c0                        	setl al
0x804adda:   0f b6 c0                        	movzx eax, al
0x804addd:   f6 65 93                        	mul byte ptr [ebp - 0x6d]
0x804ade0:   8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x804ade3:   0f af c2                        	imul eax, edx
0x804ade6:   0f b6 d0                        	movzx edx, al
0x804ade9:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804adec:   0f b6 c0                        	movzx eax, al
0x804adef:   89 c1                           	mov ecx, eax
0x804adf1:   d3 e2                           	shl edx, cl
0x804adf3:   89 d0                           	mov eax, edx
0x804adf5:   21 45 cc                        	and dword ptr [ebp - 0x34], eax
0x804adf8:   0f b6 95 23 ff ff ff            	movzx edx, byte ptr [ebp - 0xdd]
0x804adff:   0f bf 85 9c fe ff ff            	movsx eax, word ptr [ebp - 0x164]
0x804ae06:   09 d0                           	or eax, edx
0x804ae08:   89 85 98 fe ff ff               	mov dword ptr [ebp - 0x168], eax
0x804ae0e:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804ae12:   83 e8 04                        	sub eax, 4
0x804ae15:   66 89 45 aa                     	mov word ptr [ebp - 0x56], ax
0x804ae19:   66 83 7d aa e3                  	cmp word ptr [ebp - 0x56], -0x1d
0x804ae1e:   0f 8c 0e ff ff ff               	jl 0x804ad32 <func_1+0x154f>
0x804ae24:   e9 e3 00 00 00                  	jmp 0x804af0c <func_1+0x1729>
0x804ae29:   0f bf 85 66 ff ff ff            	movsx eax, word ptr [ebp - 0x9a]
0x804ae30:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x804ae34:   0f b6 4d c9                     	movzx ecx, byte ptr [ebp - 0x37]
0x804ae38:   0f b7 5d ca                     	movzx ebx, word ptr [ebp - 0x36]
0x804ae3c:   0f be 7d d3                     	movsx edi, byte ptr [ebp - 0x2d]
0x804ae40:   0f be b5 6c ff ff ff            	movsx esi, byte ptr [ebp - 0x94]
0x804ae47:   89 b5 70 fe ff ff               	mov dword ptr [ebp - 0x190], esi
0x804ae4d:   0f be b5 6d ff ff ff            	movsx esi, byte ptr [ebp - 0x93]
0x804ae54:   89 b5 6c fe ff ff               	mov dword ptr [ebp - 0x194], esi
0x804ae5a:   0f b7 75 e4                     	movzx esi, word ptr [ebp - 0x1c]
0x804ae5e:   89 b5 68 fe ff ff               	mov dword ptr [ebp - 0x198], esi
0x804ae64:   0f bf b5 6e ff ff ff            	movsx esi, word ptr [ebp - 0x92]
0x804ae6b:   89 b5 64 fe ff ff               	mov dword ptr [ebp - 0x19c], esi
0x804ae71:   0f b7 75 e6                     	movzx esi, word ptr [ebp - 0x1a]
0x804ae75:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x804ae7b:   0f bf 75 e8                     	movsx esi, word ptr [ebp - 0x18]
0x804ae7f:   89 b5 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], esi
0x804ae85:   0f be 75 eb                     	movsx esi, byte ptr [ebp - 0x15]
0x804ae89:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804ae8f:   0f be 75 f3                     	movsx esi, byte ptr [ebp - 0xd]
0x804ae93:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804ae99:   50                              	push eax
0x804ae9a:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804ae9d:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804aea0:   52                              	push edx
0x804aea1:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804aea4:   51                              	push ecx
0x804aea5:   53                              	push ebx
0x804aea6:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804aeac:   57                              	push edi
0x804aead:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804aeb0:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804aeb3:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804aeb6:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804aebc:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804aebf:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804aec5:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804aecb:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804aed1:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804aed7:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804aedd:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804aee0:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804aee6:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804aeec:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804aeef:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804aef5:   56                              	push esi
0x804aef6:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804aefc:   e8 25 e7 ff ff                  	call 0x8049626 <set_var>
0x804af01:   83 c4 6c                        	add esp, 0x6c
0x804af04:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804af07:   e9 e8 00 00 00                  	jmp 0x804aff4 <func_1+0x1811>
0x804af0c:   83 85 60 ff ff ff 01            	add dword ptr [ebp - 0xa0], 1
0x804af13:   0f bf 85 66 ff ff ff            	movsx eax, word ptr [ebp - 0x9a]
0x804af1a:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x804af1e:   0f b6 4d c9                     	movzx ecx, byte ptr [ebp - 0x37]
0x804af22:   0f b7 5d ca                     	movzx ebx, word ptr [ebp - 0x36]
0x804af26:   0f be 7d d3                     	movsx edi, byte ptr [ebp - 0x2d]
0x804af2a:   0f be b5 6c ff ff ff            	movsx esi, byte ptr [ebp - 0x94]
0x804af31:   89 b5 70 fe ff ff               	mov dword ptr [ebp - 0x190], esi
0x804af37:   0f be b5 6d ff ff ff            	movsx esi, byte ptr [ebp - 0x93]
0x804af3e:   89 b5 6c fe ff ff               	mov dword ptr [ebp - 0x194], esi
0x804af44:   0f b7 75 e4                     	movzx esi, word ptr [ebp - 0x1c]
0x804af48:   89 b5 68 fe ff ff               	mov dword ptr [ebp - 0x198], esi
0x804af4e:   0f bf b5 6e ff ff ff            	movsx esi, word ptr [ebp - 0x92]
0x804af55:   89 b5 64 fe ff ff               	mov dword ptr [ebp - 0x19c], esi
0x804af5b:   0f b7 75 e6                     	movzx esi, word ptr [ebp - 0x1a]
0x804af5f:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x804af65:   0f bf 75 e8                     	movsx esi, word ptr [ebp - 0x18]
0x804af69:   89 b5 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], esi
0x804af6f:   0f be 75 eb                     	movsx esi, byte ptr [ebp - 0x15]
0x804af73:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804af79:   0f be 75 f3                     	movsx esi, byte ptr [ebp - 0xd]
0x804af7d:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804af83:   50                              	push eax
0x804af84:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804af87:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804af8a:   52                              	push edx
0x804af8b:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804af8e:   51                              	push ecx
0x804af8f:   53                              	push ebx
0x804af90:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804af96:   57                              	push edi
0x804af97:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804af9a:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804af9d:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804afa0:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804afa6:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804afa9:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804afaf:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804afb5:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804afbb:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804afc1:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804afc7:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804afca:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804afd0:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804afd6:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804afd9:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804afdf:   56                              	push esi
0x804afe0:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804afe6:   e8 3b e6 ff ff                  	call 0x8049626 <set_var>
0x804afeb:   83 c4 6c                        	add esp, 0x6c
0x804afee:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x804aff4:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804aff7:   5b                              	pop ebx
0x804aff8:   5e                              	pop esi
0x804aff9:   5f                              	pop edi
0x804affa:   5d                              	pop ebp
0x804affb:   c3                              	ret 
; function: main at 0x804affc -- 0x804b3b0
0x804affc:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804b000:   83 e4 f0                        	and esp, 0xfffffff0
0x804b003:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804b006:   55                              	push ebp
0x804b007:   89 e5                           	mov ebp, esp
0x804b009:   53                              	push ebx
0x804b00a:   51                              	push ecx
0x804b00b:   83 ec 10                        	sub esp, 0x10
0x804b00e:   e8 7d d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b013:   81 c3 ed 2f 00 00               	add ebx, 0x2fed
0x804b019:   89 c8                           	mov eax, ecx
0x804b01b:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804b022:   83 38 02                        	cmp dword ptr [eax], 2
0x804b025:   75 26                           	jne 0x804b04d <main+0x51>
0x804b027:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804b02a:   83 c0 04                        	add eax, 4
0x804b02d:   8b 00                           	mov eax, dword ptr [eax]
0x804b02f:   83 ec 08                        	sub esp, 8
0x804b032:   8d 93 98 d4 ff ff               	lea edx, [ebx - 0x2b68]
0x804b038:   52                              	push edx
0x804b039:   50                              	push eax
0x804b03a:   e8 c1 d2 ff ff                  	call 0x8048300 <strcmp>
0x804b03f:   83 c4 10                        	add esp, 0x10
0x804b042:   85 c0                           	test eax, eax
0x804b044:   75 07                           	jne 0x804b04d <main+0x51>
0x804b046:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804b04d:   e8 04 d4 ff ff                  	call 0x8048456 <platform_main_begin>
0x804b052:   e8 14 e4 ff ff                  	call 0x804946b <crc32_gentab>
0x804b057:   e8 87 e7 ff ff                  	call 0x80497e3 <func_1>
0x804b05c:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804b062:   89 c2                           	mov edx, eax
0x804b064:   83 ec 04                        	sub esp, 4
0x804b067:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b06a:   8d 83 9a d4 ff ff               	lea eax, [ebx - 0x2b66]
0x804b070:   50                              	push eax
0x804b071:   52                              	push edx
0x804b072:   e8 00 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b077:   83 c4 10                        	add esp, 0x10
0x804b07a:   0f b6 83 28 00 00 00            	movzx eax, byte ptr [ebx + 0x28]
0x804b081:   0f be c0                        	movsx eax, al
0x804b084:   83 ec 04                        	sub esp, 4
0x804b087:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b08a:   8d 93 9f d4 ff ff               	lea edx, [ebx - 0x2b61]
0x804b090:   52                              	push edx
0x804b091:   50                              	push eax
0x804b092:   e8 e0 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b097:   83 c4 10                        	add esp, 0x10
0x804b09a:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804b0a0:   83 ec 04                        	sub esp, 4
0x804b0a3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0a6:   8d 93 a4 d4 ff ff               	lea edx, [ebx - 0x2b5c]
0x804b0ac:   52                              	push edx
0x804b0ad:   50                              	push eax
0x804b0ae:   e8 c4 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0b3:   83 c4 10                        	add esp, 0x10
0x804b0b6:   8b 83 a4 04 00 00               	mov eax, dword ptr [ebx + 0x4a4]
0x804b0bc:   83 ec 04                        	sub esp, 4
0x804b0bf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0c2:   8d 93 a9 d4 ff ff               	lea edx, [ebx - 0x2b57]
0x804b0c8:   52                              	push edx
0x804b0c9:   50                              	push eax
0x804b0ca:   e8 a8 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0cf:   83 c4 10                        	add esp, 0x10
0x804b0d2:   0f b6 83 30 00 00 00            	movzx eax, byte ptr [ebx + 0x30]
0x804b0d9:   0f be c0                        	movsx eax, al
0x804b0dc:   83 ec 04                        	sub esp, 4
0x804b0df:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0e2:   8d 93 ae d4 ff ff               	lea edx, [ebx - 0x2b52]
0x804b0e8:   52                              	push edx
0x804b0e9:   50                              	push eax
0x804b0ea:   e8 88 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0ef:   83 c4 10                        	add esp, 0x10
0x804b0f2:   0f b7 83 32 00 00 00            	movzx eax, word ptr [ebx + 0x32]
0x804b0f9:   98                              	cwde 
0x804b0fa:   83 ec 04                        	sub esp, 4
0x804b0fd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b100:   8d 93 b3 d4 ff ff               	lea edx, [ebx - 0x2b4d]
0x804b106:   52                              	push edx
0x804b107:   50                              	push eax
0x804b108:   e8 6a e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b10d:   83 c4 10                        	add esp, 0x10
0x804b110:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804b116:   89 c2                           	mov edx, eax
0x804b118:   83 ec 04                        	sub esp, 4
0x804b11b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b11e:   8d 83 b8 d4 ff ff               	lea eax, [ebx - 0x2b48]
0x804b124:   50                              	push eax
0x804b125:   52                              	push edx
0x804b126:   e8 4c e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b12b:   83 c4 10                        	add esp, 0x10
0x804b12e:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804b134:   89 c2                           	mov edx, eax
0x804b136:   83 ec 04                        	sub esp, 4
0x804b139:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b13c:   8d 83 bd d4 ff ff               	lea eax, [ebx - 0x2b43]
0x804b142:   50                              	push eax
0x804b143:   52                              	push edx
0x804b144:   e8 2e e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b149:   83 c4 10                        	add esp, 0x10
0x804b14c:   0f b7 83 3c 00 00 00            	movzx eax, word ptr [ebx + 0x3c]
0x804b153:   0f b7 c0                        	movzx eax, ax
0x804b156:   83 ec 04                        	sub esp, 4
0x804b159:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b15c:   8d 93 c2 d4 ff ff               	lea edx, [ebx - 0x2b3e]
0x804b162:   52                              	push edx
0x804b163:   50                              	push eax
0x804b164:   e8 0e e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b169:   83 c4 10                        	add esp, 0x10
0x804b16c:   0f b7 83 3e 00 00 00            	movzx eax, word ptr [ebx + 0x3e]
0x804b173:   98                              	cwde 
0x804b174:   83 ec 04                        	sub esp, 4
0x804b177:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b17a:   8d 93 c7 d4 ff ff               	lea edx, [ebx - 0x2b39]
0x804b180:   52                              	push edx
0x804b181:   50                              	push eax
0x804b182:   e8 f0 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b187:   83 c4 10                        	add esp, 0x10
0x804b18a:   0f b7 83 40 00 00 00            	movzx eax, word ptr [ebx + 0x40]
0x804b191:   0f b7 c0                        	movzx eax, ax
0x804b194:   83 ec 04                        	sub esp, 4
0x804b197:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b19a:   8d 93 cc d4 ff ff               	lea edx, [ebx - 0x2b34]
0x804b1a0:   52                              	push edx
0x804b1a1:   50                              	push eax
0x804b1a2:   e8 d0 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1a7:   83 c4 10                        	add esp, 0x10
0x804b1aa:   0f b6 83 42 00 00 00            	movzx eax, byte ptr [ebx + 0x42]
0x804b1b1:   0f be c0                        	movsx eax, al
0x804b1b4:   83 ec 04                        	sub esp, 4
0x804b1b7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1ba:   8d 93 d1 d4 ff ff               	lea edx, [ebx - 0x2b2f]
0x804b1c0:   52                              	push edx
0x804b1c1:   50                              	push eax
0x804b1c2:   e8 b0 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1c7:   83 c4 10                        	add esp, 0x10
0x804b1ca:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804b1d0:   83 ec 04                        	sub esp, 4
0x804b1d3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1d6:   8d 93 d6 d4 ff ff               	lea edx, [ebx - 0x2b2a]
0x804b1dc:   52                              	push edx
0x804b1dd:   50                              	push eax
0x804b1de:   e8 94 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1e3:   83 c4 10                        	add esp, 0x10
0x804b1e6:   0f b6 83 48 00 00 00            	movzx eax, byte ptr [ebx + 0x48]
0x804b1ed:   0f be c0                        	movsx eax, al
0x804b1f0:   83 ec 04                        	sub esp, 4
0x804b1f3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1f6:   8d 93 db d4 ff ff               	lea edx, [ebx - 0x2b25]
0x804b1fc:   52                              	push edx
0x804b1fd:   50                              	push eax
0x804b1fe:   e8 74 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b203:   83 c4 10                        	add esp, 0x10
0x804b206:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804b20c:   83 ec 04                        	sub esp, 4
0x804b20f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b212:   8d 93 e0 d4 ff ff               	lea edx, [ebx - 0x2b20]
0x804b218:   52                              	push edx
0x804b219:   50                              	push eax
0x804b21a:   e8 58 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b21f:   83 c4 10                        	add esp, 0x10
0x804b222:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804b228:   89 c2                           	mov edx, eax
0x804b22a:   83 ec 04                        	sub esp, 4
0x804b22d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b230:   8d 83 e6 d4 ff ff               	lea eax, [ebx - 0x2b1a]
0x804b236:   50                              	push eax
0x804b237:   52                              	push edx
0x804b238:   e8 3a e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b23d:   83 c4 10                        	add esp, 0x10
0x804b240:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804b246:   83 ec 04                        	sub esp, 4
0x804b249:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b24c:   8d 93 ec d4 ff ff               	lea edx, [ebx - 0x2b14]
0x804b252:   52                              	push edx
0x804b253:   50                              	push eax
0x804b254:   e8 1e e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b259:   83 c4 10                        	add esp, 0x10
0x804b25c:   0f b6 83 58 00 00 00            	movzx eax, byte ptr [ebx + 0x58]
0x804b263:   0f be c0                        	movsx eax, al
0x804b266:   83 ec 04                        	sub esp, 4
0x804b269:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b26c:   8d 93 f2 d4 ff ff               	lea edx, [ebx - 0x2b0e]
0x804b272:   52                              	push edx
0x804b273:   50                              	push eax
0x804b274:   e8 fe e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b279:   83 c4 10                        	add esp, 0x10
0x804b27c:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804b282:   89 c2                           	mov edx, eax
0x804b284:   83 ec 04                        	sub esp, 4
0x804b287:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b28a:   8d 83 f8 d4 ff ff               	lea eax, [ebx - 0x2b08]
0x804b290:   50                              	push eax
0x804b291:   52                              	push edx
0x804b292:   e8 e0 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b297:   83 c4 10                        	add esp, 0x10
0x804b29a:   0f b7 83 60 00 00 00            	movzx eax, word ptr [ebx + 0x60]
0x804b2a1:   0f b7 c0                        	movzx eax, ax
0x804b2a4:   83 ec 04                        	sub esp, 4
0x804b2a7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b2aa:   8d 93 fe d4 ff ff               	lea edx, [ebx - 0x2b02]
0x804b2b0:   52                              	push edx
0x804b2b1:   50                              	push eax
0x804b2b2:   e8 c0 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b2b7:   83 c4 10                        	add esp, 0x10
0x804b2ba:   0f b6 83 62 00 00 00            	movzx eax, byte ptr [ebx + 0x62]
0x804b2c1:   0f b6 c0                        	movzx eax, al
0x804b2c4:   83 ec 04                        	sub esp, 4
0x804b2c7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b2ca:   8d 93 04 d5 ff ff               	lea edx, [ebx - 0x2afc]
0x804b2d0:   52                              	push edx
0x804b2d1:   50                              	push eax
0x804b2d2:   e8 a0 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b2d7:   83 c4 10                        	add esp, 0x10
0x804b2da:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804b2e0:   83 ec 04                        	sub esp, 4
0x804b2e3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b2e6:   8d 93 0a d5 ff ff               	lea edx, [ebx - 0x2af6]
0x804b2ec:   52                              	push edx
0x804b2ed:   50                              	push eax
0x804b2ee:   e8 84 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b2f3:   83 c4 10                        	add esp, 0x10
0x804b2f6:   0f b7 83 68 00 00 00            	movzx eax, word ptr [ebx + 0x68]
0x804b2fd:   0f b7 c0                        	movzx eax, ax
0x804b300:   83 ec 04                        	sub esp, 4
0x804b303:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b306:   8d 93 10 d5 ff ff               	lea edx, [ebx - 0x2af0]
0x804b30c:   52                              	push edx
0x804b30d:   50                              	push eax
0x804b30e:   e8 64 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b313:   83 c4 10                        	add esp, 0x10
0x804b316:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804b31c:   83 ec 04                        	sub esp, 4
0x804b31f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b322:   8d 93 16 d5 ff ff               	lea edx, [ebx - 0x2aea]
0x804b328:   52                              	push edx
0x804b329:   50                              	push eax
0x804b32a:   e8 48 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b32f:   83 c4 10                        	add esp, 0x10
0x804b332:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804b338:   89 c2                           	mov edx, eax
0x804b33a:   83 ec 04                        	sub esp, 4
0x804b33d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b340:   8d 83 1c d5 ff ff               	lea eax, [ebx - 0x2ae4]
0x804b346:   50                              	push eax
0x804b347:   52                              	push edx
0x804b348:   e8 2a e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b34d:   83 c4 10                        	add esp, 0x10
0x804b350:   0f b7 83 74 00 00 00            	movzx eax, word ptr [ebx + 0x74]
0x804b357:   98                              	cwde 
0x804b358:   83 ec 04                        	sub esp, 4
0x804b35b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b35e:   8d 93 22 d5 ff ff               	lea edx, [ebx - 0x2ade]
0x804b364:   52                              	push edx
0x804b365:   50                              	push eax
0x804b366:   e8 0c e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b36b:   83 c4 10                        	add esp, 0x10
0x804b36e:   8b 83 78 00 00 00               	mov eax, dword ptr [ebx + 0x78]
0x804b374:   83 ec 04                        	sub esp, 4
0x804b377:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b37a:   8d 93 28 d5 ff ff               	lea edx, [ebx - 0x2ad8]
0x804b380:   52                              	push edx
0x804b381:   50                              	push eax
0x804b382:   e8 f0 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b387:   83 c4 10                        	add esp, 0x10
0x804b38a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b390:   f7 d0                           	not eax
0x804b392:   83 ec 08                        	sub esp, 8
0x804b395:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b398:   50                              	push eax
0x804b399:   e8 c8 d0 ff ff                  	call 0x8048466 <platform_main_end>
0x804b39e:   83 c4 10                        	add esp, 0x10
0x804b3a1:   b8 00 00 00 00                  	mov eax, 0
0x804b3a6:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b3a9:   59                              	pop ecx
0x804b3aa:   5b                              	pop ebx
0x804b3ab:   5d                              	pop ebp
0x804b3ac:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b3af:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b3b0 -- 0x804b3b4
0x804b3b0:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b3b3:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b3b4 -- 0x804b3b8
0x804b3b4:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b3b7:   c3                              	ret 
; data inside code section at 0x804b3b8 -- 0x804b3c0
0x804b3b8:   66 90 66 90 66 90 66 90                            |f.f.f.f.        |
; function: __libc_csu_init at 0x804b3c0 -- 0x804b41d
0x804b3c0:   55                              	push ebp
0x804b3c1:   57                              	push edi
0x804b3c2:   56                              	push esi
0x804b3c3:   53                              	push ebx
0x804b3c4:   e8 c7 cf ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b3c9:   81 c3 37 2c 00 00               	add ebx, 0x2c37
0x804b3cf:   83 ec 0c                        	sub esp, 0xc
0x804b3d2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b3d6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b3dc:   e8 eb ce ff ff                  	call 0x80482cc <_init>
0x804b3e1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b3e7:   29 c6                           	sub esi, eax
0x804b3e9:   c1 fe 02                        	sar esi, 2
0x804b3ec:   85 f6                           	test esi, esi
0x804b3ee:   74 25                           	je 0x804b415 <__libc_csu_init+0x55>
0x804b3f0:   31 ff                           	xor edi, edi
0x804b3f2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b3f8:   83 ec 04                        	sub esp, 4
0x804b3fb:   55                              	push ebp
0x804b3fc:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b400:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b404:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b40b:   83 c7 01                        	add edi, 1
0x804b40e:   83 c4 10                        	add esp, 0x10
0x804b411:   39 fe                           	cmp esi, edi
0x804b413:   75 e3                           	jne 0x804b3f8 <__libc_csu_init+0x38>
0x804b415:   83 c4 0c                        	add esp, 0xc
0x804b418:   5b                              	pop ebx
0x804b419:   5e                              	pop esi
0x804b41a:   5f                              	pop edi
0x804b41b:   5d                              	pop ebp
0x804b41c:   c3                              	ret 
; data inside code section at 0x804b41d -- 0x804b420
0x804b41d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b420 -- 0x804b422
0x804b420:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b424 -- 0x804b438
0x804b424:   53                              	push ebx
0x804b425:   83 ec 08                        	sub esp, 8
0x804b428:   e8 63 cf ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b42d:   81 c3 d3 2b 00 00               	add ebx, 0x2bd3
0x804b433:   83 c4 08                        	add esp, 8
0x804b436:   5b                              	pop ebx
0x804b437:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 3c b4 04 08  04 00 00 00 11 00 10 00   |....<...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b438:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b448:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b458:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b468:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b478:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b488:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b498:   31 00 67 5f 31 30 00 67  5f 31 31 00 67 5f 31 32   |1.g_10.g_11.g_12|
0x804b4a8:   00 67 5f 31 34 00 67 5f  31 35 00 67 5f 33 32 00   |.g_14.g_15.g_32.|
0x804b4b8:   67 5f 33 37 00 67 5f 33  38 00 67 5f 33 39 00 67   |g_37.g_38.g_39.g|
0x804b4c8:   5f 35 30 00 67 5f 35 31  00 67 5f 35 38 00 67 5f   |_50.g_51.g_58.g_|
0x804b4d8:   37 37 00 67 5f 38 35 00  67 5f 31 31 37 00 67 5f   |77.g_85.g_117.g_|
0x804b4e8:   31 34 33 00 67 5f 31 34  34 00 67 5f 31 38 32 00   |143.g_144.g_182.|
0x804b4f8:   67 5f 32 34 38 00 67 5f  32 35 31 00 67 5f 32 35   |g_248.g_251.g_25|
0x804b508:   34 00 67 5f 32 35 39 00  67 5f 33 30 38 00 67 5f   |4.g_259.g_308.g_|
0x804b518:   34 30 34 00 67 5f 34 33  35 00 67 5f 35 34 34 00   |404.g_435.g_544.|
0x804b528:   67 5f 35 34 35 00 00 00  00 00 00 3f ff ff ff 7e   |g_545......?...~|
0x804b538:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x804b548:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x804b558:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804b568:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804b578:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804b588:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804b598:   01                                                 |.               |
; section: .eh_frame_hdr
0x804b598:   01 1b 03 3b b8 02 00 00  56 00 00 00 58 cd ff ff   |...;....V...X...|
0x804b5a8:   e8 02 00 00 98 cd ff ff  0c 03 00 00 e8 cd ff ff   |................|
0x804b5b8:   d4 02 00 00 be ce ff ff  20 03 00 00 ce ce ff ff   |........ .......|
0x804b5c8:   40 03 00 00 fc ce ff ff  64 03 00 00 1a cf ff ff   |@.......d.......|
0x804b5d8:   84 03 00 00 42 cf ff ff  a4 03 00 00 6c cf ff ff   |....B.......l...|
0x804b5e8:   c4 03 00 00 95 cf ff ff  e4 03 00 00 d8 cf ff ff   |................|
0x804b5f8:   04 04 00 00 19 d0 ff ff  24 04 00 00 71 d0 ff ff   |........$...q...|
0x804b608:   48 04 00 00 c3 d0 ff ff  6c 04 00 00 00 d1 ff ff   |H.......l.......|
0x804b618:   8c 04 00 00 37 d1 ff ff  ac 04 00 00 56 d1 ff ff   |....7.......V...|
0x804b628:   cc 04 00 00 80 d1 ff ff  ec 04 00 00 ac d1 ff ff   |................|
0x804b638:   0c 05 00 00 d7 d1 ff ff  2c 05 00 00 20 d2 ff ff   |........,... ...|
0x804b648:   4c 05 00 00 67 d2 ff ff  6c 05 00 00 c1 d2 ff ff   |L...g...l.......|
0x804b658:   90 05 00 00 15 d3 ff ff  b4 05 00 00 54 d3 ff ff   |............T...|
0x804b668:   d4 05 00 00 8d d3 ff ff  f4 05 00 00 af d3 ff ff   |................|
0x804b678:   14 06 00 00 fd d3 ff ff  34 06 00 00 39 d4 ff ff   |........4...9...|
0x804b688:   54 06 00 00 c2 d4 ff ff  74 06 00 00 f4 d4 ff ff   |T.......t.......|
0x804b698:   94 06 00 00 24 d5 ff ff  b4 06 00 00 69 d5 ff ff   |....$.......i...|
0x804b6a8:   d4 06 00 00 a8 d5 ff ff  f4 06 00 00 da d5 ff ff   |................|
0x804b6b8:   14 07 00 00 06 d6 ff ff  34 07 00 00 24 d6 ff ff   |........4...$...|
0x804b6c8:   54 07 00 00 4c d6 ff ff  74 07 00 00 71 d6 ff ff   |T...L...t...q...|
0x804b6d8:   94 07 00 00 96 d6 ff ff  b4 07 00 00 cd d6 ff ff   |................|
0x804b6e8:   d4 07 00 00 01 d7 ff ff  f4 07 00 00 53 d7 ff ff   |............S...|
0x804b6f8:   18 08 00 00 9f d7 ff ff  3c 08 00 00 d6 d7 ff ff   |........<.......|
0x804b708:   5c 08 00 00 07 d8 ff ff  7c 08 00 00 26 d8 ff ff   |\.......|...&...|
0x804b718:   9c 08 00 00 50 d8 ff ff  bc 08 00 00 78 d8 ff ff   |....P.......x...|
0x804b728:   dc 08 00 00 a1 d8 ff ff  fc 08 00 00 dd d8 ff ff   |................|
0x804b738:   1c 09 00 00 17 d9 ff ff  3c 09 00 00 6a d9 ff ff   |........<...j...|
0x804b748:   60 09 00 00 b7 d9 ff ff  84 09 00 00 ef d9 ff ff   |`...............|
0x804b758:   a4 09 00 00 21 da ff ff  c4 09 00 00 35 da ff ff   |....!.......5...|
0x804b768:   e4 09 00 00 4c da ff ff  04 0a 00 00 61 da ff ff   |....L.......a...|
0x804b778:   24 0a 00 00 77 da ff ff  44 0a 00 00 9e da ff ff   |$...w...D.......|
0x804b788:   64 0a 00 00 c3 da ff ff  84 0a 00 00 02 db ff ff   |d...............|
0x804b798:   a4 0a 00 00 3b db ff ff  c4 0a 00 00 67 db ff ff   |....;.......g...|
0x804b7a8:   e4 0a 00 00 8d db ff ff  04 0b 00 00 cf db ff ff   |................|
0x804b7b8:   24 0b 00 00 11 dc ff ff  44 0b 00 00 53 dc ff ff   |$.......D...S...|
0x804b7c8:   64 0b 00 00 c8 dc ff ff  84 0b 00 00 25 dd ff ff   |d...........%...|
0x804b7d8:   a4 0b 00 00 82 dd ff ff  c4 0b 00 00 df dd ff ff   |................|
0x804b7e8:   e4 0b 00 00 6f de ff ff  04 0c 00 00 d3 de ff ff   |....o...........|
0x804b7f8:   24 0c 00 00 43 df ff ff  44 0c 00 00 8a df ff ff   |$...C...D.......|
0x804b808:   68 0c 00 00 df df ff ff  88 0c 00 00 26 e0 ff ff   |h...........&...|
0x804b818:   ac 0c 00 00 8e e0 ff ff  d0 0c 00 00 4b e2 ff ff   |............K...|
0x804b828:   00 0d 00 00 64 fa ff ff  30 0d 00 00 18 fe ff ff   |....d...0.......|
0x804b838:   68 0d 00 00 1c fe ff ff  7c 0d 00 00 28 fe ff ff   |h.......|...(...|
0x804b848:   90 0d 00 00 88 fe ff ff  dc 0d 00 00 14            |.............   |
; section: .eh_frame
0x804b854:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b864:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b874:   0c cb ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b884:   30 00 00 00 68 ca ff ff  40 00 00 00 00 0e 08 46   |0...h...@......F|
0x804b894:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b8a4:   10 00 00 00 54 00 00 00  84 ca ff ff 08 00 00 00   |....T...........|
0x804b8b4:   00 00 00 00 1c 00 00 00  68 00 00 00 96 cb ff ff   |........h.......|
0x804b8c4:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b8d4:   04 04 00 00 20 00 00 00  88 00 00 00 86 cb ff ff   |.... ...........|
0x804b8e4:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b8f4:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b904:   90 cb ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b914:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b924:   8e cb ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b934:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b944:   96 cb ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b954:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b964:   a0 cb ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b974:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b984:   a9 cb ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b994:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b9a4:   cc cb ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b9b4:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b9c4:   ed cb ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b9d4:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b9e4:   90 01 00 00 21 cc ff ff  52 00 00 00 00 41 0e 08   |....!...R....A..|
0x804b9f4:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804ba04:   1c 00 00 00 b4 01 00 00  4f cc ff ff 3d 00 00 00   |........O...=...|
0x804ba14:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804ba24:   1c 00 00 00 d4 01 00 00  6c cc ff ff 37 00 00 00   |........l...7...|
0x804ba34:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804ba44:   1c 00 00 00 f4 01 00 00  83 cc ff ff 1f 00 00 00   |................|
0x804ba54:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804ba64:   1c 00 00 00 14 02 00 00  82 cc ff ff 2a 00 00 00   |............*...|
0x804ba74:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804ba84:   1c 00 00 00 34 02 00 00  8c cc ff ff 2c 00 00 00   |....4.......,...|
0x804ba94:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804baa4:   1c 00 00 00 54 02 00 00  98 cc ff ff 2b 00 00 00   |....T.......+...|
0x804bab4:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804bac4:   1c 00 00 00 74 02 00 00  a3 cc ff ff 49 00 00 00   |....t.......I...|
0x804bad4:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804bae4:   1c 00 00 00 94 02 00 00  cc cc ff ff 47 00 00 00   |............G...|
0x804baf4:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804bb04:   20 00 00 00 b4 02 00 00  f3 cc ff ff 5a 00 00 00   | ...........Z...|
0x804bb14:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804bb24:   c5 0c 04 04 20 00 00 00  d8 02 00 00 29 cd ff ff   |.... .......)...|
0x804bb34:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804bb44:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804bb54:   59 cd ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |Y...?....A....B.|
0x804bb64:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804bb74:   78 cd ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |x...9....A....B.|
0x804bb84:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804bb94:   91 cd ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804bba4:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804bbb4:   93 cd ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804bbc4:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804bbd4:   c1 cd ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804bbe4:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804bbf4:   dd cd ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc04:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804bc14:   46 ce ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |F...2....A....B.|
0x804bc24:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804bc34:   58 ce ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |X...0....A....B.|
0x804bc44:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804bc54:   68 ce ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |h...E....A....B.|
0x804bc64:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804bc74:   8d ce ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804bc84:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804bc94:   ac ce ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bca4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804bcb4:   be ce ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bcc4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804bcd4:   ca ce ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bce4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804bcf4:   c8 ce ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804bd04:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804bd14:   d0 ce ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bd24:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804bd34:   d5 ce ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bd44:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804bd54:   da ce ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804bd64:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804bd74:   f1 ce ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804bd84:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804bd94:   05 cf ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804bda4:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804bdb4:   60 05 00 00 33 cf ff ff  4c 00 00 00 00 41 0e 08   |`...3...L....A..|
0x804bdc4:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804bdd4:   1c 00 00 00 84 05 00 00  5b cf ff ff 37 00 00 00   |........[...7...|
0x804bde4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bdf4:   1c 00 00 00 a4 05 00 00  72 cf ff ff 31 00 00 00   |........r...1...|
0x804be04:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804be14:   1c 00 00 00 c4 05 00 00  83 cf ff ff 1f 00 00 00   |................|
0x804be24:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804be34:   1c 00 00 00 e4 05 00 00  82 cf ff ff 2a 00 00 00   |............*...|
0x804be44:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804be54:   1c 00 00 00 04 06 00 00  8c cf ff ff 28 00 00 00   |............(...|
0x804be64:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804be74:   1c 00 00 00 24 06 00 00  94 cf ff ff 29 00 00 00   |....$.......)...|
0x804be84:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804be94:   1c 00 00 00 44 06 00 00  9d cf ff ff 3c 00 00 00   |....D.......<...|
0x804bea4:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804beb4:   1c 00 00 00 64 06 00 00  b9 cf ff ff 3a 00 00 00   |....d.......:...|
0x804bec4:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bed4:   20 00 00 00 84 06 00 00  d3 cf ff ff 53 00 00 00   | ...........S...|
0x804bee4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bef4:   c5 0c 04 04 20 00 00 00  a8 06 00 00 02 d0 ff ff   |.... ...........|
0x804bf04:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bf14:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bf24:   2b d0 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |+...8....A....B.|
0x804bf34:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bf44:   43 d0 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |C...2....A....B.|
0x804bf54:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bf64:   55 d0 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |U........A....B.|
0x804bf74:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bf84:   49 d0 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |I........A....B.|
0x804bf94:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bfa4:   40 d0 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |@........A....B.|
0x804bfb4:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bfc4:   35 d0 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |5........A....B.|
0x804bfd4:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bfe4:   2b d0 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |+...'....A....B.|
0x804bff4:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804c004:   32 d0 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |2...%....A....B.|
0x804c014:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804c024:   37 d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |7...?....A....B.|
0x804c034:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804c044:   56 d0 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |V...9....A....B.|
0x804c054:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804c064:   6f d0 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |o...,....A....B.|
0x804c074:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804c084:   7b d0 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |{...&....A....B.|
0x804c094:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804c0a4:   81 d0 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804c0b4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804c0c4:   a3 d0 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804c0d4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804c0e4:   c5 d0 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804c0f4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804c104:   e7 d0 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804c114:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804c124:   3c d1 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |<...]....A....B.|
0x804c134:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804c144:   79 d1 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |y...]....A....B.|
0x804c154:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804c164:   b6 d1 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804c174:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804c184:   f3 d1 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c194:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804c1a4:   63 d2 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |c...d....A....B.|
0x804c1b4:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804c1c4:   a7 d2 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804c1d4:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804c1e4:   f7 d2 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804c1f4:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804c204:   b0 09 00 00 1a d3 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804c214:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804c224:   d0 09 00 00 4f d3 ff ff  47 00 00 00 00 41 0e 08   |....O...G....A..|
0x804c234:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804c244:   20 00 00 00 f4 09 00 00  72 d3 ff ff 68 00 00 00   | .......r...h...|
0x804c254:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804c264:   0c 04 04 00 2c 00 00 00  18 0a 00 00 b6 d3 ff ff   |....,...........|
0x804c274:   bd 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804c284:   86 04 83 05 03 b0 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804c294:   04 00 00 00 2c 00 00 00  48 0a 00 00 43 d5 ff ff   |....,...H...C...|
0x804c2a4:   19 18 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804c2b4:   86 04 83 05 03 09 18 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804c2c4:   04 00 00 00 34 00 00 00  78 0a 00 00 2c ed ff ff   |....4...x...,...|
0x804c2d4:   b4 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804c2e4:   0f 03 75 78 06 10 03 02  75 7c 03 9f 03 c1 0c 01   |..ux....u|......|
0x804c2f4:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804c304:   b0 0a 00 00 a8 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804c314:   10 00 00 00 c4 0a 00 00  98 f0 ff ff 04 00 00 00   |................|
0x804c324:   00 00 00 00 48 00 00 00  d8 0a 00 00 90 f0 ff ff   |....H...........|
0x804c334:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c344:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c354:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c364:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c374:   10 00 00 00 24 0b 00 00  a4 f0 ff ff 02 00 00 00   |....$...........|
0x804c384:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 24 b4 04 08  19 00 00 00 0c df 04 08   |....$...........|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 01 00 00 00   |................|
0x804e028:   f6 00 00 00 e3 86 99 0f  26 00 97 e3 01 00 00 00   |........&.......|
0x804e038:   01 00 00 00 01 00 09 00  67 ea 60 00 01 00 00 00   |........g.`.....|
0x804e048:   93 00 00 00 fc ff ff ff  73 6d dc bd 3a 5d b9 d5   |........sm..:]..|
0x804e058:   ff 00 00 00 41 63 0f de  e6 68 a4 00 ee 78 ec 5d   |....Ac...h...x.]|
0x804e068:   f6 ff 00 00 24 eb 8b f0  fe ff ff ff 01 00 00 00   |....$...........|
0x804e078:   03 00 00 00 ??                                     |....?           |
